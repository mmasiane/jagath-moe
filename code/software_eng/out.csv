Commit	 Author	 Date	 Message	 Bug	 Test	 Review URL	 Git SVN ID
906cac26ecd6cfd5c98ee5ab296c64e34c78eab	sergeyu@chromium.org <sergeyu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 6 00:36:10 2013 +0000	Pass ID of the calling extension to the native messaging host. Previously native hosts didn't have a way to know which extension started them. With this change security origin of the calling extension will be passed to the native host process as a parameter, so that it knows which extension is calling it.	142915		https://codereview.chromium.org/12406002	svn://svn.chromium.org/chrome/trunk/src@186297 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/native_messaging/native_hosts/echo.py b/chrome/test/data/native_messaging/native_hosts/echo.py <newline>index d0be74b..96c19f7 100755 <newline>--- a/chrome/test/data/native_messaging/native_hosts/echo.py <newline>+++ b/chrome/test/data/native_messaging/native_hosts/echo.py <newline>@@ -12,6 +12,11 @@ import struct <newline> def Main(): <newline>   message_number = 0 <newline>+  if len(sys.argv) < 2: <newline>+    sys.stderr.write("URL of the calling application is not specified.\n") <newline>+    return; <newline>+  caller_url = sys.argv[1] <newline>+ <newline>   while 1: <newline>     # Read the message type (first 4 bytes). <newline>     text_length_bytes = sys.stdin.read(4) <newline>@@ -27,8 +32,8 @@ def Main(): <newline>     message_number += 1 <newline>-    response = '{{"id": {0}, "echo": {1}}}'.format(message_number, <newline>-                                                   text).encode('utf-8') <newline>+    response = '{{"id": {0}, "echo": {1}, "caller_url": "{2}"}}'.format( <newline>+        message_number, text, caller_url).encode('utf-8') <newline>     try: <newline>       sys.stdout.write(struct.pack("I", len(response)))
d65223d5129c232db8e8650f578e2d070263dfd	alexeypa@chromium.org <alexeypa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 5 20:32:46 2013 +0000	Initialize COM and configure security settings in the daemon. This CL initializes a single-threaded apartment on the main thread in the daemon and configures COM security in the following way: - The daemon authenticates that all data received is from the expected client. - The daemon can impersonate clients to check their identity but cannot act on their behalf. - The caller's identity on every call (Dynamic cloaking). - Activations where the activated COM server would run under the daemon's identity are prohibited.	137696		https://codereview.chromium.org/12378078	svn://svn.chromium.org/chrome/trunk/src@186245 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/remoting/host/win/security_descriptor.h b/remoting/host/win/security_descriptor.h <newline>index 98713f8..e83948e 100644 <newline>--- a/remoting/host/win/security_descriptor.h <newline>+++ b/remoting/host/win/security_descriptor.h <newline>@@ -13,6 +13,7 @@ <newline> namespace remoting { <newline>+typedef TypedBuffer<ACL> ScopedAcl; <newline> typedef TypedBuffer<SECURITY_DESCRIPTOR> ScopedSd; <newline> typedef TypedBuffer<SID> ScopedSid; <newline>@@ -26,6 +27,15 @@ std::string ConvertSidToString(SID* sid); <newline> // a logon SID or in case of an error. <newline> ScopedSid GetLogonSid(HANDLE token); <newline>+// Converts a security descriptor in self-relative format to a security <newline>+// descriptor in absolute format. <newline>+bool MakeScopedAbsoluteSd(const ScopedSd& relative_sd, <newline>+                          ScopedSd* absolute_sd, <newline>+                          ScopedAcl* dacl, <newline>+                          ScopedSid* group, <newline>+                          ScopedSid* owner, <newline>+                          ScopedAcl* sacl); <newline>+ <newline> }  // namespace remoting <newline> #endif  // REMOTING_HOST_WIN_SECURITY_DESCRIPTOR_H_
78886f4bb23fde9ca9907884d6651d55883c79a	tedchoc@chromium.org <tedchoc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 4 23:18:00 2013 +0000	Allow querying the security level at the Tab level. Also, use a template for generating the SecurityLevel constants to allow them to be shared in C++ and Java. For another example of using the templates, take a look at this CL that generated the PageTransitionTypes: https://codereview.chromium.org/11577016	174361		https://chromiumcodereview.appspot.com/12391024	svn://svn.chromium.org/chrome/trunk/src@186021 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_browser_ui.gypi b/chrome/chrome_browser_ui.gypi <newline>index 278b737..93826fc 100644 <newline>--- a/chrome/chrome_browser_ui.gypi <newline>+++ b/chrome/chrome_browser_ui.gypi <newline>@@ -1368,6 +1368,7 @@ <newline>         'browser/ui/toolbar/toolbar_model_impl.cc', <newline>         'browser/ui/toolbar/toolbar_model_impl.h', <newline>         'browser/ui/toolbar/toolbar_model_delegate.h', <newline>+        'browser/ui/toolbar/toolbar_model_security_level_list.h', <newline>         'browser/ui/toolbar/wrench_menu_model.cc', <newline>         'browser/ui/toolbar/wrench_menu_model.h', <newline>         'browser/ui/top_level_widget.h', <newline>@@ -2641,6 +2642,7 @@ <newline>             ['include', '^browser/ui/toolbar/toolbar_model\\.(cc|h)$'], <newline>             ['include', '^browser/ui/toolbar/toolbar_model_delegate\\.(cc|h)$'], <newline>             ['include', '^browser/ui/toolbar/toolbar_model_impl\\.(cc|h)$'], <newline>+            ['include', '^browser/ui/toolbar/toolbar_model_security_level_list\\.h$'], <newline>             ['exclude', '^browser/ui/webui/downloads_'], <newline>             ['exclude', '^browser/ui/webui/feedback_'], <newline>             ['exclude', '^browser/ui/webui/help/'],
b022e4b81125336f3ed9b8f4ae3e98cdd253e85	tedchoc@chromium.org <tedchoc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 28 17:43:49 2013 +0000	Revert 184999 > Revert 184869 > > This revert seems like it caused test failures in FileSystemApiOpenBackgroundTest and > FileSystemApiSaveBackgroundTest on linux. > > http://build.chromium.org/p/chromium.linux/builders/Linux%20Tests%20%28dbg%29%281%29/builds/23657 > > In particular, this change could change the security level of background pages (pages with no > web contents), and therefore seems to be a reasonable culprit. > > Apologies if this turns out to be misdirected.  We've been starting at these red bots (on linux > and chromeos, e.g., http://build.chromium.org/p/chromium.chromiumos/builders/Linux%20ChromiumOS%20Tests%20%282%29/builds/12033 ) > for a while now.  We even rolled about another change in the same blamelist, but that > didn't appear to help, possibly even made things worse. > > > Expose the utility for getting the SecurityLevel for any WebContents. > > > > On android, we need handle rendering more than one location bar for a > > given "window" so the ability to query the security level without updating > > the concept of the active WebContents to the toolbar model. > > > > BUG= > > > > > > Review URL: https://chromiumcodereview.appspot.com/12314119 > > TBR=tedchoc@chromium.org > Review URL: https://codereview.chromium.org/12334129 TBR=mpearson@chromium.org			https://codereview.chromium.org/12378017	svn://svn.chromium.org/chrome/trunk/src@185272 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/toolbar/toolbar_model_impl.h b/chrome/browser/ui/toolbar/toolbar_model_impl.h <newline>index 91843a7..1adf474 100644 <newline>--- a/chrome/browser/ui/toolbar/toolbar_model_impl.h <newline>+++ b/chrome/browser/ui/toolbar/toolbar_model_impl.h <newline>@@ -18,6 +18,7 @@ class ToolbarModelDelegate; <newline> namespace content { <newline> class NavigationController; <newline>+class WebContents; <newline> } <newline> namespace net { <newline>@@ -32,6 +33,9 @@ class ToolbarModelImpl : public ToolbarModel { <newline>   explicit ToolbarModelImpl(ToolbarModelDelegate* delegate); <newline>   virtual ~ToolbarModelImpl(); <newline>+  static SecurityLevel GetSecurityLevelForWebContents( <newline>+      content::WebContents* web_contents); <newline>+ <newline>   // Overriden from ToolbarModel. <newline>   virtual string16 GetText( <newline>       bool display_search_urls_as_search_terms) const OVERRIDE;
980d065a42772a1196342c727b0377d0590f512	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 28 02:37:40 2013 +0000	Add security team members as owners of IPC message files.  This ownership was lost during a directory rename operation. TBR=jbauman@chromium.org			https://chromiumcodereview.appspot.com/12335150	svn://svn.chromium.org/chrome/trunk/src@185122 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/components/tracing/OWNERS b/components/tracing/OWNERS <newline>index ba7dc1b..a73665a 100644 <newline>--- a/components/tracing/OWNERS <newline>+++ b/components/tracing/OWNERS <newline>@@ -1,2 +1,11 @@ <newline> jbauman@chromium.org <newline> nduca@chromium.org <newline>+ <newline>+# Changes to IPC messages require a security review to avoid introducing <newline>+# new sandbox escapes. <newline>+per-file *_messages.h=set noparent <newline>+per-file *_messages.h=cdn@chromium.org <newline>+per-file *_messages.h=jln@chromium.org <newline>+per-file *_messages.h=jschuh@chromium.org <newline>+per-file *_messages.h=palmer@chromium.org <newline>+per-file *_messages.h=tsepez@chromium.org
b3933f9f2d908fb8e677815dfc3b13dbe13b42b	mpearson@chromium.org <mpearson@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 27 19:07:55 2013 +0000	Revert 184869 This revert seems like it caused test failures in FileSystemApiOpenBackgroundTest and FileSystemApiSaveBackgroundTest on linux. http://build.chromium.org/p/chromium.linux/builders/Linux%20Tests%20%28dbg%29%281%29/builds/23657 In particular, this change could change the security level of background pages (pages with no web contents), and therefore seems to be a reasonable culprit. Apologies if this turns out to be misdirected.  We've been starting at these red bots (on linux and chromeos, e.g., http://build.chromium.org/p/chromium.chromiumos/builders/Linux%20ChromiumOS%20Tests%20%282%29/builds/12033 ) for a while now.  We even rolled about another change in the same blamelist, but that didn't appear to help, possibly even made things worse. > Expose the utility for getting the SecurityLevel for any WebContents. > > On android, we need handle rendering more than one location bar for a > given "window" so the ability to query the security level without updating > the concept of the active WebContents to the toolbar model. > > BUG= > > > Review URL: https://chromiumcodereview.appspot.com/12314119 TBR=tedchoc@chromium.org			https://codereview.chromium.org/12334129	svn://svn.chromium.org/chrome/trunk/src@184999 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/toolbar/toolbar_model_impl.h b/chrome/browser/ui/toolbar/toolbar_model_impl.h <newline>index 1adf474..91843a7 100644 <newline>--- a/chrome/browser/ui/toolbar/toolbar_model_impl.h <newline>+++ b/chrome/browser/ui/toolbar/toolbar_model_impl.h <newline>@@ -18,7 +18,6 @@ class ToolbarModelDelegate; <newline> namespace content { <newline> class NavigationController; <newline>-class WebContents; <newline> } <newline> namespace net { <newline>@@ -33,9 +32,6 @@ class ToolbarModelImpl : public ToolbarModel { <newline>   explicit ToolbarModelImpl(ToolbarModelDelegate* delegate); <newline>   virtual ~ToolbarModelImpl(); <newline>-  static SecurityLevel GetSecurityLevelForWebContents( <newline>-      content::WebContents* web_contents); <newline>- <newline>   // Overriden from ToolbarModel. <newline>   virtual string16 GetText( <newline>       bool display_search_urls_as_search_terms) const OVERRIDE;
cef23d337bf13f96bc932e0536d5ef5ffd2b713	jochen@chromium.org <jochen@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 27 13:11:21 2013 +0000	Do not set the main frame's name to the frame name parameter of createView If e.g. a link has target=_blank, createView is invoked with a frame name parameter "_blank". However, WebCore assumes that no frame ever has the name _blank (see e.g. FrameTree::find). R=darin@chromium.org TEST=e.g. http/tests/security/mixedContent tests pass on content_shell	177982,111316		https://chromiumcodereview.appspot.com/12313090	svn://svn.chromium.org/chrome/trunk/src@184941 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/renderer/render_view_impl.cc b/content/renderer/render_view_impl.cc <newline>index 8b3f021..7983f7a 100644 <newline>--- a/content/renderer/render_view_impl.cc <newline>+++ b/content/renderer/render_view_impl.cc <newline>@@ -1917,7 +1917,8 @@ WebView* RenderViewImpl::createView( <newline>   params.user_gesture = creator->isProcessingUserGesture(); <newline>   params.window_container_type = WindowFeaturesToContainerType(features); <newline>   params.session_storage_namespace_id = session_storage_namespace_id_; <newline>-  params.frame_name = frame_name; <newline>+  if (frame_name != "_blank") <newline>+    params.frame_name = frame_name; <newline>   params.opener_frame_id = creator->identifier(); <newline>   params.opener_url = creator->document().url(); <newline>   GURL security_url(creator->document().securityOrigin().toString().utf8()); <newline>@@ -1951,7 +1952,7 @@ WebView* RenderViewImpl::createView( <newline>       routing_id, <newline>       surface_id, <newline>       cloned_session_storage_namespace_id, <newline>-      frame_name, <newline>+      string16(),  // WebCore will take care of setting the correct name. <newline>       true, <newline>       false, <newline>       1,
2cb675846bd4947910e8a3d5fd8dad315038c90	tedchoc@chromium.org <tedchoc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 27 04:15:17 2013 +0000	Expose the utility for getting the SecurityLevel for any WebContents. On android, we need handle rendering more than one location bar for a given "window" so the ability to query the security level without updating the concept of the active WebContents to the toolbar model.			https://chromiumcodereview.appspot.com/12314119	svn://svn.chromium.org/chrome/trunk/src@184869 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/toolbar/toolbar_model_impl.h b/chrome/browser/ui/toolbar/toolbar_model_impl.h <newline>index 91843a7..1adf474 100644 <newline>--- a/chrome/browser/ui/toolbar/toolbar_model_impl.h <newline>+++ b/chrome/browser/ui/toolbar/toolbar_model_impl.h <newline>@@ -18,6 +18,7 @@ class ToolbarModelDelegate; <newline> namespace content { <newline> class NavigationController; <newline>+class WebContents; <newline> } <newline> namespace net { <newline>@@ -32,6 +33,9 @@ class ToolbarModelImpl : public ToolbarModel { <newline>   explicit ToolbarModelImpl(ToolbarModelDelegate* delegate); <newline>   virtual ~ToolbarModelImpl(); <newline>+  static SecurityLevel GetSecurityLevelForWebContents( <newline>+      content::WebContents* web_contents); <newline>+ <newline>   // Overriden from ToolbarModel. <newline>   virtual string16 GetText( <newline>       bool display_search_urls_as_search_terms) const OVERRIDE;
8b5eef7d47215a318634daa9cbc411dae2ecf71	msw@chromium.org <msw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Feb 23 18:09:24 2013 +0000	Fix Views Omnibox diagonal strike styling. Clear the diagonal strike style (before potentially applying URL security styling). This was a simple regression from my http://crrev.com/180067 OmniboxViewViews previously cleared the diagonal strike style in line 919 of: https://chromiumcodereview.appspot.com/11535014/diff/57050/chrome/browser/ui/views/omnibox/omnibox_view_views.cc ApplyURLStyle(textfield_, 0, text.length(), base_color, false); My change still reset the overall textfield color, but not the diagonal strike style. TEST=Get SSL error (https://cacert.org), new tab, switch back to SSL error tab; only scheme has a strike. R=pkasting@chromium.org	177082		https://chromiumcodereview.appspot.com/12315027	svn://svn.chromium.org/chrome/trunk/src@184322 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/views/omnibox/omnibox_view_views.cc b/chrome/browser/ui/views/omnibox/omnibox_view_views.cc <newline>index 785d0fd..0edcdad 100644 <newline>--- a/chrome/browser/ui/views/omnibox/omnibox_view_views.cc <newline>+++ b/chrome/browser/ui/views/omnibox/omnibox_view_views.cc <newline>@@ -796,6 +796,7 @@ void OmniboxViewViews::EmphasizeURLComponents() { <newline>   // URLs with search terms, we may have a non-URL even when the user is not <newline>   // editing; and in some cases, e.g. for "site:foo.com" searches, the parser <newline>   // may have incorrectly identified a qualifier as a scheme. <newline>+  SetStyle(gfx::DIAGONAL_STRIKE, false); <newline>   if (!model()->user_input_in_progress() && model()->CurrentTextIsURL() && <newline>       scheme.is_nonempty() && (security_level_ != ToolbarModel::NONE)) { <newline>     SkColor security_color = location_bar_view_->GetColor(
74df279ad39b91bd21923d182fe4318e9de24c4	mmenke@chromium.org <mmenke@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Feb 23 01:08:03 2013 +0000	Fix a pair of bugs that broke exporting from about:profiler. 1)  Fix use of undefined variable. 2)  The content security policy doesn't allow changing the src of an iframe, so switch to using an anchor to start the download. R=eroman@chromium.org	177778		https://chromiumcodereview.appspot.com/12340034	svn://svn.chromium.org/chrome/trunk/src@184244 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/profiler/profiler.js b/chrome/browser/resources/profiler/profiler.js <newline>index c82617c..baf6071 100644 <newline>--- a/chrome/browser/resources/profiler/profiler.js <newline>+++ b/chrome/browser/resources/profiler/profiler.js <newline>@@ -110,7 +110,7 @@ var MainView = (function() { <newline>   var SNAPSHOT_FILE_LOADER_ID = 'snapshot-file-loader'; <newline>   var LOAD_ERROR_ID = 'file-load-error'; <newline>-  var DOWNLOAD_IFRAME_ID = 'download-iframe'; <newline>+  var DOWNLOAD_ANCHOR_ID = 'download-anchor'; <newline>   // -------------------------------------------------------------------------- <newline>   // Row keys <newline>@@ -1799,9 +1799,10 @@ var MainView = (function() { <newline>       }; <newline>       var dumpText = JSON.stringify(dump, null, ' '); <newline>-      var blobBuilder = new Blob([dumpText, 'native'], {type: 'octet/stream'}); <newline>+      var textBlob = new Blob([dumpText, 'native'], { type: 'octet/stream' }); <newline>       var blobUrl = window.webkitURL.createObjectURL(textBlob); <newline>-      $(DOWNLOAD_IFRAME_ID).src = blobUrl; <newline>+      $(DOWNLOAD_ANCHOR_ID).href = blobUrl; <newline>+      $(DOWNLOAD_ANCHOR_ID).click(); <newline>     }, <newline>     loadFileChanged_: function() {
8c3fb43e7c08f68283204d697a63ebc970468a9	tedchoc@chromium.org <tedchoc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 22 03:49:37 2013 +0000	Start using ToolbarModel in android for consistent SSL security processing. TBR=thakis@chromium.org # for chrome_browser_ui.gypi	174361		https://chromiumcodereview.appspot.com/12316054	svn://svn.chromium.org/chrome/trunk/src@184007 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_browser_ui.gypi b/chrome/chrome_browser_ui.gypi <newline>index 4ab8787..93ee755 100644 <newline>--- a/chrome/chrome_browser_ui.gypi <newline>+++ b/chrome/chrome_browser_ui.gypi <newline>@@ -2622,6 +2622,9 @@ <newline>             ['exclude', '^browser/ui/startup/'], <newline>             ['exclude', '^browser/ui/tabs/'], <newline>             ['exclude', '^browser/ui/toolbar/'], <newline>+            ['include', '^browser/ui/toolbar/toolbar_model\\.(cc|h)$'], <newline>+            ['include', '^browser/ui/toolbar/toolbar_model_delegate\\.(cc|h)$'], <newline>+            ['include', '^browser/ui/toolbar/toolbar_model_impl\\.(cc|h)$'], <newline>             ['exclude', '^browser/ui/webui/downloads_'], <newline>             ['exclude', '^browser/ui/webui/feedback_'], <newline>             ['exclude', '^browser/ui/webui/help/'],
49c238c049ea78dd634d2b63c4b6517e579c092	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 21 02:35:10 2013 +0000	Update Java version metadata for Feb 2013 CPU. http://www.oracle.com/technetwork/topics/security/javacpufeb2013update-1905892.html	177152		https://codereview.chromium.org/12321004	svn://svn.chromium.org/chrome/trunk/src@183720 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/plugin_metadata/plugins_win.json b/chrome/browser/resources/plugin_metadata/plugins_win.json <newline>index 8066f41..52411f2 100644 <newline>--- a/chrome/browser/resources/plugin_metadata/plugins_win.json <newline>+++ b/chrome/browser/resources/plugin_metadata/plugins_win.json <newline>@@ -1,5 +1,5 @@ <newline> { <newline>-  "x-version": 1, <newline>+  "x-version": 2, <newline>   "google-talk": { <newline>     "mime_types": [ <newline>     ], <newline>@@ -54,18 +54,18 @@ <newline>     ], <newline>     "versions": [ <newline>       { <newline>-        "version": "6.0.390", <newline>+        "version": "6.0.410", <newline>         "status": "requires_authorization", <newline>-        "comment": "Java SE 6 Update 39. '390' is not a typo." <newline>+        "comment": "Java SE 6 Update 41. '410' is not a typo." <newline>       }, <newline>       { <newline>         "version": "7", <newline>         "status": "out_of_date" <newline>       }, <newline>       { <newline>-        "version": "10.13", <newline>+        "version": "10.15", <newline>         "status": "requires_authorization", <newline>-        "comment": "Java SE 7u13" <newline>+        "comment": "Java SE 7u15" <newline>       } <newline>     ], <newline>     "lang": "en-US",
6a6cea6231e77f0c92c0528e772c8e5586eb3ff	jln@chromium.org <jln@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 15 06:10:40 2013 +0000	Base: account for calloc aborting in security unittests On Linux, when not using tcmalloc, we still have a small wrapper that aborts when allocation functions OOM. In that configuration, we now We consider it a successful detection of an overflow condition if the process aborts.	175500		https://chromiumcodereview.appspot.com/12220107	svn://svn.chromium.org/chrome/trunk/src@182628 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/security_unittest.cc b/base/security_unittest.cc <newline>index 59a3ddd..1454003 100644 <newline>--- a/base/security_unittest.cc <newline>+++ b/base/security_unittest.cc <newline>@@ -37,20 +37,15 @@ Type HideValueFromCompiler(volatile Type value) { <newline>   return value; <newline> } <newline>-// Check that we can not allocate a memory range that cannot be indexed <newline>-// via an int. This is used to mitigate vulnerabilities in libraries that use <newline>-// int instead of size_t. <newline>-// See crbug.com/169327. <newline>- <newline>-// - NO_TCMALLOC because we only patched tcmalloc <newline>+// - NO_TCMALLOC (should be defined if we compile with linux_use_tcmalloc=0) <newline> // - ADDRESS_SANITIZER because it has its own memory allocator <newline>-// - IOS does not seem to honor nothrow in new properly <newline>+// - IOS does not use tcmalloc <newline> // - OS_MACOSX does not use tcmalloc <newline> #if !defined(NO_TCMALLOC) && !defined(ADDRESS_SANITIZER) && \ <newline>     !defined(OS_IOS) && !defined(OS_MACOSX) <newline>-  #define ALLOC_TEST(function) function <newline>+  #define TCMALLOC_TEST(function) function <newline> #else <newline>-  #define ALLOC_TEST(function) DISABLED_##function <newline>+  #define TCMALLOC_TEST(function) DISABLED_##function <newline> #endif <newline> // TODO(jln): switch to std::numeric_limits<int>::max() when we switch to <newline>@@ -68,13 +63,28 @@ bool IsTcMallocBypassed() { <newline>   return false; <newline> } <newline>+bool CallocDiesOnOOM() { <newline>+// The wrapper function in base/process_util_linux.cc that is used when we <newline>+// compile without TCMalloc will just die on OOM instead of returning NULL. <newline>+#if defined(OS_LINUX) && defined(NO_TCMALLOC) <newline>+  return true; <newline>+#else <newline>+  return false; <newline>+#endif <newline>+} <newline>+ <newline> // Fake test that allow to know the state of TCMalloc by looking at bots. <newline>-TEST(SecurityTest, ALLOC_TEST(IsTCMallocDynamicallyBypassed)) { <newline>+TEST(SecurityTest, TCMALLOC_TEST(IsTCMallocDynamicallyBypassed)) { <newline>   printf("Malloc is dynamically bypassed: %s\n", <newline>          IsTcMallocBypassed() ? "yes." : "no."); <newline> } <newline>-TEST(SecurityTest, ALLOC_TEST(MemoryAllocationRestrictionsMalloc)) { <newline>+// The MemoryAllocationRestrictions* tests test that we can not allocate a <newline>+// memory range that cannot be indexed via an int. This is used to mitigate <newline>+// vulnerabilities in libraries that use int instead of size_t.  See <newline>+// crbug.com/169327. <newline>+ <newline>+TEST(SecurityTest, TCMALLOC_TEST(MemoryAllocationRestrictionsMalloc)) { <newline>   if (!IsTcMallocBypassed()) { <newline>     scoped_ptr<char, base::FreeDeleter> ptr(static_cast<char*>( <newline>         HideValueFromCompiler(malloc(kTooBigAllocSize)))); <newline>@@ -82,7 +92,7 @@ TEST(SecurityTest, ALLOC_TEST(MemoryAllocationRestrictionsMalloc)) { <newline>   } <newline> } <newline>-TEST(SecurityTest, ALLOC_TEST(MemoryAllocationRestrictionsCalloc)) { <newline>+TEST(SecurityTest, TCMALLOC_TEST(MemoryAllocationRestrictionsCalloc)) { <newline>   if (!IsTcMallocBypassed()) { <newline>     scoped_ptr<char, base::FreeDeleter> ptr(static_cast<char*>( <newline>         HideValueFromCompiler(calloc(kTooBigAllocSize, 1)))); <newline>@@ -90,7 +100,7 @@ TEST(SecurityTest, ALLOC_TEST(MemoryAllocationRestrictionsCalloc)) { <newline>   } <newline> } <newline>-TEST(SecurityTest, ALLOC_TEST(MemoryAllocationRestrictionsRealloc)) { <newline>+TEST(SecurityTest, TCMALLOC_TEST(MemoryAllocationRestrictionsRealloc)) { <newline>   if (!IsTcMallocBypassed()) { <newline>     char* orig_ptr = static_cast<char*>(malloc(1)); <newline>     ASSERT_TRUE(orig_ptr); <newline>@@ -106,7 +116,7 @@ typedef struct { <newline>   char large_array[kTooBigAllocSize]; <newline> } VeryLargeStruct; <newline>-TEST(SecurityTest, ALLOC_TEST(MemoryAllocationRestrictionsNew)) { <newline>+TEST(SecurityTest, TCMALLOC_TEST(MemoryAllocationRestrictionsNew)) { <newline>   if (!IsTcMallocBypassed()) { <newline>     scoped_ptr<VeryLargeStruct> ptr( <newline>         HideValueFromCompiler(new (nothrow) VeryLargeStruct)); <newline>@@ -114,7 +124,7 @@ TEST(SecurityTest, ALLOC_TEST(MemoryAllocationRestrictionsNew)) { <newline>   } <newline> } <newline>-TEST(SecurityTest, ALLOC_TEST(MemoryAllocationRestrictionsNewArray)) { <newline>+TEST(SecurityTest, TCMALLOC_TEST(MemoryAllocationRestrictionsNewArray)) { <newline>   if (!IsTcMallocBypassed()) { <newline>     scoped_ptr<char[]> ptr( <newline>         HideValueFromCompiler(new (nothrow) char[kTooBigAllocSize])); <newline>@@ -184,27 +194,32 @@ TEST(SecurityTest, DISABLE_ON_IOS_AND_WIN(NewOverflow)) { <newline> } <newline> #endif <newline>+// Call calloc(), eventually free the memory and return whether or not <newline>+// calloc() did succeed. <newline>+bool CallocReturnsNull(size_t nmemb, size_t size) { <newline>+  scoped_ptr<char, base::FreeDeleter> array_pointer( <newline>+      static_cast<char*>(calloc(nmemb, size))); <newline>+  // We need the call to HideValueFromCompiler(): we have seen LLVM <newline>+  // optimize away the call to calloc() entirely and assume <newline>+  // the pointer to not be NULL. <newline>+  return HideValueFromCompiler(array_pointer.get()) == NULL; <newline>+} <newline>+ <newline> // Test if calloc() can overflow. Disable on ASAN for now since the <newline>-// overflow seems present there. <newline>+// overflow seems present there (crbug.com/175554). <newline> TEST(SecurityTest, DISABLE_ON_ASAN(CallocOverflow)) { <newline>   const size_t kArraySize = 4096; <newline>   const size_t kMaxSizeT = numeric_limits<size_t>::max(); <newline>   const size_t kArraySize2 = kMaxSizeT / kArraySize + 10; <newline>-  { <newline>-    scoped_ptr<char> array_pointer( <newline>-        static_cast<char*>(calloc(kArraySize, kArraySize2))); <newline>-    // We need the call to HideValueFromCompiler(): we have seen LLVM <newline>-    // optimize away the call to calloc() entirely and assume <newline>-    // the pointer to not be NULL. <newline>-    EXPECT_TRUE(HideValueFromCompiler(array_pointer.get()) == NULL); <newline>-  } <newline>-  { <newline>-    scoped_ptr<char> array_pointer( <newline>-        static_cast<char*>(calloc(kArraySize2, kArraySize))); <newline>-    // We need the call to HideValueFromCompiler(): we have seen LLVM <newline>-    // optimize away the call to calloc() entirely and assume <newline>-    // the pointer to not be NULL. <newline>-    EXPECT_TRUE(HideValueFromCompiler(array_pointer.get()) == NULL); <newline>+  if (!CallocDiesOnOOM()) { <newline>+    EXPECT_TRUE(CallocReturnsNull(kArraySize, kArraySize2)); <newline>+    EXPECT_TRUE(CallocReturnsNull(kArraySize2, kArraySize)); <newline>+  } else { <newline>+    // It's also ok for calloc to just terminate the process. <newline>+#if defined(GTEST_HAS_DEATH_TEST) <newline>+    EXPECT_DEATH(CallocReturnsNull(kArraySize, kArraySize2), ""); <newline>+    EXPECT_DEATH(CallocReturnsNull(kArraySize2, kArraySize), ""); <newline>+#endif  // GTEST_HAS_DEATH_TEST <newline>   } <newline> } <newline>@@ -230,7 +245,7 @@ bool ArePointersToSameArea(void* ptr1, void* ptr2, size_t size) { <newline> } <newline> // Check if TCMalloc uses an underlying random memory allocator. <newline>-TEST(SecurityTest, ALLOC_TEST(RandomMemoryAllocations)) { <newline>+TEST(SecurityTest, TCMALLOC_TEST(RandomMemoryAllocations)) { <newline>   if (IsTcMallocBypassed()) <newline>     return; <newline>   size_t kPageSize = 4096;  // We support x86_64 only.
3a07b2ea1a0cb314a7ef409d142cd0f668b2254	digit@chromium.org <digit@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Feb 11 20:13:45 2013 +0000	This patch adds some Android-support code to allow the network stack to use platform-specific private key objects to perform signing in the context of SSL handshakes which require a client certificate. More specifically: - Add net/android/keystore.h, which provides native functions to operate on JNI references pointing to java.security.PrivateKey objects provided by the platform. I.e.: net::android::GetPrivateKeyType() net::android::SignWithPrivateKey() Also provide a function that can get the system's own EVP_PKEY* handle corresponding to a given PrivateKey object. This uses reflection and should *only* be used for RSA private keys when running on Android 4.0 and 4.1, in order to route around a platform bug that was only fixed in 4.2. net::android::GetOpenSSLSytstemHandleForPrivateKey() See the comments in this source file for mode details: net/android/java/org/chromium/net/AndroidKeyStore.java - Add net/android/keystore_openssl.h, which provides a function that can wrap an existing PrivateKey JNI reference around an OpenSSL EVP_PKEY object which uses custom DSA/RSA/ECDSA methods to perform signing as expected to handle client certificates. net::android::GetOpenSSLPrivateKeyWrapper() - Add relevant unit tests for the new functions. Note that the unit test comes with its own Java helper function, which is used to create a platform PrivateKey object from encoded PKCS#8 private key data. This is called from the native unit test, but does not constitute a new Java test (AndroidKeyStoreTestUtil.java). - Add corresponding new test key files under net/data/ssl/certificates/, and their generation script in net/data/ssl/scripts/. - Add net/android/private_key_type_list.h which is used both from C++ and Java to define the list of supported private key types used by this code. - Minor improvements: Add a "release()" method to crypto::ScopedOpenSSL, add missing BASE_EXPORT to one base/android/jni_array.h function declaration.	166642		https://chromiumcodereview.appspot.com/11571059	svn://svn.chromium.org/chrome/trunk/src@181741 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/socket/ssl_client_socket_openssl.h b/net/socket/ssl_client_socket_openssl.h <newline>index 12d9229..74ada9a 100644 <newline>--- a/net/socket/ssl_client_socket_openssl.h <newline>+++ b/net/socket/ssl_client_socket_openssl.h <newline>@@ -16,9 +16,14 @@ <newline> #include "net/socket/ssl_client_socket.h" <newline> #include "net/socket/client_socket_handle.h" <newline>+// Avoid including misc OpenSSL headers, i.e.: <newline>+// <openssl/bio.h> <newline> typedef struct bio_st BIO; <newline>+// <openssl/evp.h> <newline> typedef struct evp_pkey_st EVP_PKEY; <newline>+// <openssl/ssl.h> <newline> typedef struct ssl_st SSL; <newline>+// <openssl/x509.h> <newline> typedef struct x509_st X509; <newline> namespace net {
1374f2cd69d98178c45c4789daf8228fb44cd6b	nasko@chromium.org <nasko@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 7 02:03:45 2013 +0000	Kill renderer processes that fail check in RenderViewHostImpl::SetWebUIProperty When setting WebUI property for a renderer, it should have WebUI bindings enabled. If we get into inconsistent state where the renderer doesn't have those bindings, but we are trying to set WebUI properties, we should kill it. This is a defense in depth measure against security exploits.	174063		https://chromiumcodereview.appspot.com/12210038	svn://svn.chromium.org/chrome/trunk/src@181145 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/content_tests.gypi b/content/content_tests.gypi <newline>index 715fcec..92cb115 100644 <newline>--- a/content/content_tests.gypi <newline>+++ b/content/content_tests.gypi <newline>@@ -733,6 +733,7 @@ <newline>             'browser/renderer_host/render_view_host_manager_browsertest.cc', <newline>             'browser/renderer_host/render_widget_host_view_browsertest.cc', <newline>             'browser/renderer_host/render_widget_host_view_win_browsertest.cc', <newline>+            'browser/security_exploit_browsertest.cc', <newline>             'browser/session_history_browsertest.cc', <newline>             'browser/site_per_process_browsertest.cc', <newline>             'browser/speech/speech_recognition_browsertest.cc',
44fd8f860d4f88b21fab0447c356ea2b7b22691	scheib@chromium.org <scheib@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 5 21:55:20 2013 +0000	Packaged apps manifest requires 'fullscreen' permission for HTML5 api. For security precautions, packaged applications that use HTML5 fullscreen api must add 'fullscreen' to the permissions in the manifest. No user visible message is required. TEST=Manually load app chrome/test/data/extensions/api_test/fullscreen/has_permission, launch, click in window, verify it takes window fullscreen. alt-f4 to exit. Load adjacent no_permission test, launch, click, it won't go fullscreen, right click and inspect element, view developer console, verify the 'fullscreen' permission is suggested.	166279		https://chromiumcodereview.appspot.com/12205002	svn://svn.chromium.org/chrome/trunk/src@180791 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/api_test/fullscreen/no_permission/window.js b/chrome/test/data/extensions/api_test/fullscreen/no_permission/window.js <newline>new file mode 100644 <newline>index 0000000..83fa86d <newline>--- /dev/null <newline>+++ b/chrome/test/data/extensions/api_test/fullscreen/no_permission/window.js <newline>@@ -0,0 +1,13 @@ <newline>+// Copyright (c) 2013 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+window.onload = function () { <newline>+  function requestFullscreen() { <newline>+    document.onwebkitfullscreenchange = chrome.test.fail; <newline>+    document.onwebkitfullscreenerror = chrome.test.succeed; <newline>+    document.body.webkitRequestFullscreen(); <newline>+  }; <newline>+  document.body.onclick = requestFullscreen;  // enables manual testing. <newline>+  chrome.test.runTests([requestFullscreen]); <newline>+}
47683f5afc6906f93920571ec027d25b965dc14	jln@chromium.org <jln@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Feb 4 23:39:48 2013 +0000	Linux: grow a unique random mapping in ASLR We loosen ASLR by only growing one random mapping. The previous version had security benefits but had a negative performance impact. This change aims to be performance neutral in respect to the pre-ASLR era. At a later date, we may try to strike a good balance between performance and security. This is a re-land of https://chromiumcodereview.appspot.com/12090112/ NOTRY=true TBR=jar	170133, 173371		https://chromiumcodereview.appspot.com/12192024	svn://svn.chromium.org/chrome/trunk/src@180556 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/tcmalloc/chromium/src/system-alloc.cc b/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>index 05338963..2141d41 100644 <newline>--- a/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>+++ b/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>@@ -137,6 +137,18 @@ void raninit(ranctx* x, u4 seed) { <newline>   } <newline> } <newline>+// If the kernel cannot honor the hint in arch_get_unmapped_area_topdown, it <newline>+// will simply ignore it. So we give a hint that has a good chance of <newline>+// working. <newline>+// The mmap top-down allocator will normally allocate below TASK_SIZE - gap, <newline>+// with a gap that depends on the max stack size. See x86/mm/mmap.c. We <newline>+// should make allocations that are below this area, which would be <newline>+// 0x7ffbf8000000. <newline>+// We use 0x3ffffffff000 as the mask so that we only "pollute" half of the <newline>+// address space. In the unlikely case where fragmentation would become an <newline>+// issue, the kernel will still have another half to use. <newline>+const uint64_t kRandomAddressMask = 0x3ffffffff000ULL; <newline>+ <newline> #endif  // defined(ASLR_IS_SUPPORTED) <newline> // Give a random "hint" that is suitable for use with mmap(). This cannot make <newline>@@ -177,22 +189,51 @@ void* GetRandomAddrHint() { <newline>   } <newline>   uint64_t random_address = (static_cast<uint64_t>(ranval(&ctx)) << 32) | <newline>                             ranval(&ctx); <newline>-  // If the kernel cannot honor the hint in arch_get_unmapped_area_topdown, it <newline>-  // will simply ignore it. So we give a hint that has a good chance of <newline>-  // working. <newline>-  // The mmap top-down allocator will normally allocate below TASK_SIZE - gap, <newline>-  // with a gap that depends on the max stack size. See x86/mm/mmap.c. We <newline>-  // should make allocations that are below this area, which would be <newline>-  // 0x7ffbf8000000. <newline>-  // We use 0x3ffffffff000 as the mask so that we only "pollute" half of the <newline>-  // address space. In the unlikely case where fragmentation would become an <newline>-  // issue, the kernel will still have another half to use. <newline>   // A a bit-wise "and" won't bias our random distribution. <newline>-  random_address &= 0x3ffffffff000ULL; <newline>+  random_address &= kRandomAddressMask; <newline>   return reinterpret_cast<void*>(random_address); <newline> #endif  // ASLR_IS_SUPPORTED <newline> } <newline>+// Allocate |length| bytes of memory using mmap(). The memory will be <newline>+// readable and writeable, but not executable. <newline>+// Like mmap(), we will return MAP_FAILED on failure. <newline>+// |is_aslr_enabled| controls address space layout randomization. When true, we <newline>+// will put the first mapping at a random address and will then try to grow it. <newline>+// If it's not possible to grow an existing mapping, a new one will be created. <newline>+void* AllocWithMmap(size_t length, bool is_aslr_enabled) { <newline>+  // Note: we are protected by the general TCMalloc_SystemAlloc spinlock. <newline>+  static void* address_hint = NULL; <newline>+#if defined(ASLR_IS_SUPPORTED) <newline>+  if (is_aslr_enabled && <newline>+      (!address_hint || <newline>+       reinterpret_cast<uint64_t>(address_hint) & ~kRandomAddressMask)) { <newline>+    address_hint = GetRandomAddrHint(); <newline>+  } <newline>+#endif  // ASLR_IS_SUPPORTED <newline>+ <newline>+  // address_hint is likely to make us grow an existing mapping. <newline>+  void* result = mmap(address_hint, length, PROT_READ|PROT_WRITE, <newline>+                      MAP_PRIVATE|MAP_ANONYMOUS, -1, 0); <newline>+#if defined(ASLR_IS_SUPPORTED) <newline>+  if (result == address_hint) { <newline>+    // If mmap() succeeded at a address_hint, our next mmap() will try to grow <newline>+    // the current mapping as long as it's compatible with our ASLR mask. <newline>+    // This has been done for performance reasons, see crbug.com/173371. <newline>+    // It should be possible to strike a better balance between performance <newline>+    // and security but will be done at a later date. <newline>+    // If this overflows, it could only set address_hint to NULL, which is <newline>+    // what we want (and can't happen on the currently supported architecture). <newline>+    address_hint = static_cast<char*>(result) + length; <newline>+  } else { <newline>+    // mmap failed or a collision prevented the kernel from honoring the hint, <newline>+    // reset the hint. <newline>+    address_hint = NULL; <newline>+  } <newline>+#endif  // ASLR_IS_SUPPORTED <newline>+  return result; <newline>+} <newline>+ <newline> }  // Anonymous namespace to avoid name conflicts on "CheckAddressBits". <newline> COMPILE_ASSERT(kAddressBits <= 8 * sizeof(void*), <newline>@@ -405,14 +446,7 @@ void* MmapSysAllocator::Alloc(size_t size, size_t *actual_size, <newline>   //            size + alignment < (1<<NBITS). <newline>   // and        extra <= alignment <newline>   // therefore  size + extra < (1<<NBITS) <newline>-  void* address_hint = NULL; <newline>-  if (FLAGS_malloc_random_allocator) { <newline>-    address_hint = GetRandomAddrHint(); <newline>-  } <newline>-  void* result = mmap(address_hint, size + extra, <newline>-                      PROT_READ|PROT_WRITE, <newline>-                      MAP_PRIVATE|MAP_ANONYMOUS, <newline>-                      -1, 0); <newline>+  void* result = AllocWithMmap(size + extra, FLAGS_malloc_random_allocator); <newline>   if (result == reinterpret_cast<void*>(MAP_FAILED)) { <newline>     return NULL; <newline>   }
fd994bed5fb9f46a8fabccb6ae0294af8bb1163	mpcomplete@chromium.org <mpcomplete@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Feb 4 21:33:08 2013 +0000	Revert 180514: It breaks the windows compile. > Linux: grow a unique random mapping in ASLR > > We loosen ASLR by only growing one random mapping. The previous version > had security benefits but had a negative performance impact. > This change aims to be performance neutral in respect to the pre-ASLR era. > At a later date, we may try to strike a good balance between performance and > security. > > This is a re-land of https://chromiumcodereview.appspot.com/12090112/ > > BUG=170133, 173371 > NOTRY=true > TBR=jar > > > Review URL: https://chromiumcodereview.appspot.com/12185028 TBR=jln@chromium.org			https://codereview.chromium.org/12192022	svn://svn.chromium.org/chrome/trunk/src@180522 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/tcmalloc/chromium/src/system-alloc.cc b/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>index 2141d41..05338963 100644 <newline>--- a/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>+++ b/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>@@ -137,18 +137,6 @@ void raninit(ranctx* x, u4 seed) { <newline>   } <newline> } <newline>-// If the kernel cannot honor the hint in arch_get_unmapped_area_topdown, it <newline>-// will simply ignore it. So we give a hint that has a good chance of <newline>-// working. <newline>-// The mmap top-down allocator will normally allocate below TASK_SIZE - gap, <newline>-// with a gap that depends on the max stack size. See x86/mm/mmap.c. We <newline>-// should make allocations that are below this area, which would be <newline>-// 0x7ffbf8000000. <newline>-// We use 0x3ffffffff000 as the mask so that we only "pollute" half of the <newline>-// address space. In the unlikely case where fragmentation would become an <newline>-// issue, the kernel will still have another half to use. <newline>-const uint64_t kRandomAddressMask = 0x3ffffffff000ULL; <newline>- <newline> #endif  // defined(ASLR_IS_SUPPORTED) <newline> // Give a random "hint" that is suitable for use with mmap(). This cannot make <newline>@@ -189,51 +177,22 @@ void* GetRandomAddrHint() { <newline>   } <newline>   uint64_t random_address = (static_cast<uint64_t>(ranval(&ctx)) << 32) | <newline>                             ranval(&ctx); <newline>+  // If the kernel cannot honor the hint in arch_get_unmapped_area_topdown, it <newline>+  // will simply ignore it. So we give a hint that has a good chance of <newline>+  // working. <newline>+  // The mmap top-down allocator will normally allocate below TASK_SIZE - gap, <newline>+  // with a gap that depends on the max stack size. See x86/mm/mmap.c. We <newline>+  // should make allocations that are below this area, which would be <newline>+  // 0x7ffbf8000000. <newline>+  // We use 0x3ffffffff000 as the mask so that we only "pollute" half of the <newline>+  // address space. In the unlikely case where fragmentation would become an <newline>+  // issue, the kernel will still have another half to use. <newline>   // A a bit-wise "and" won't bias our random distribution. <newline>-  random_address &= kRandomAddressMask; <newline>+  random_address &= 0x3ffffffff000ULL; <newline>   return reinterpret_cast<void*>(random_address); <newline> #endif  // ASLR_IS_SUPPORTED <newline> } <newline>-// Allocate |length| bytes of memory using mmap(). The memory will be <newline>-// readable and writeable, but not executable. <newline>-// Like mmap(), we will return MAP_FAILED on failure. <newline>-// |is_aslr_enabled| controls address space layout randomization. When true, we <newline>-// will put the first mapping at a random address and will then try to grow it. <newline>-// If it's not possible to grow an existing mapping, a new one will be created. <newline>-void* AllocWithMmap(size_t length, bool is_aslr_enabled) { <newline>-  // Note: we are protected by the general TCMalloc_SystemAlloc spinlock. <newline>-  static void* address_hint = NULL; <newline>-#if defined(ASLR_IS_SUPPORTED) <newline>-  if (is_aslr_enabled && <newline>-      (!address_hint || <newline>-       reinterpret_cast<uint64_t>(address_hint) & ~kRandomAddressMask)) { <newline>-    address_hint = GetRandomAddrHint(); <newline>-  } <newline>-#endif  // ASLR_IS_SUPPORTED <newline>- <newline>-  // address_hint is likely to make us grow an existing mapping. <newline>-  void* result = mmap(address_hint, length, PROT_READ|PROT_WRITE, <newline>-                      MAP_PRIVATE|MAP_ANONYMOUS, -1, 0); <newline>-#if defined(ASLR_IS_SUPPORTED) <newline>-  if (result == address_hint) { <newline>-    // If mmap() succeeded at a address_hint, our next mmap() will try to grow <newline>-    // the current mapping as long as it's compatible with our ASLR mask. <newline>-    // This has been done for performance reasons, see crbug.com/173371. <newline>-    // It should be possible to strike a better balance between performance <newline>-    // and security but will be done at a later date. <newline>-    // If this overflows, it could only set address_hint to NULL, which is <newline>-    // what we want (and can't happen on the currently supported architecture). <newline>-    address_hint = static_cast<char*>(result) + length; <newline>-  } else { <newline>-    // mmap failed or a collision prevented the kernel from honoring the hint, <newline>-    // reset the hint. <newline>-    address_hint = NULL; <newline>-  } <newline>-#endif  // ASLR_IS_SUPPORTED <newline>-  return result; <newline>-} <newline>- <newline> }  // Anonymous namespace to avoid name conflicts on "CheckAddressBits". <newline> COMPILE_ASSERT(kAddressBits <= 8 * sizeof(void*), <newline>@@ -446,7 +405,14 @@ void* MmapSysAllocator::Alloc(size_t size, size_t *actual_size, <newline>   //            size + alignment < (1<<NBITS). <newline>   // and        extra <= alignment <newline>   // therefore  size + extra < (1<<NBITS) <newline>-  void* result = AllocWithMmap(size + extra, FLAGS_malloc_random_allocator); <newline>+  void* address_hint = NULL; <newline>+  if (FLAGS_malloc_random_allocator) { <newline>+    address_hint = GetRandomAddrHint(); <newline>+  } <newline>+  void* result = mmap(address_hint, size + extra, <newline>+                      PROT_READ|PROT_WRITE, <newline>+                      MAP_PRIVATE|MAP_ANONYMOUS, <newline>+                      -1, 0); <newline>   if (result == reinterpret_cast<void*>(MAP_FAILED)) { <newline>     return NULL; <newline>   }
6d1ac629554b8ce748be395674d24ab8793047a	jln@chromium.org <jln@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Feb 4 20:49:16 2013 +0000	Linux: grow a unique random mapping in ASLR We loosen ASLR by only growing one random mapping. The previous version had security benefits but had a negative performance impact. This change aims to be performance neutral in respect to the pre-ASLR era. At a later date, we may try to strike a good balance between performance and security. This is a re-land of https://chromiumcodereview.appspot.com/12090112/ NOTRY=true TBR=jar	170133, 173371		https://chromiumcodereview.appspot.com/12185028	svn://svn.chromium.org/chrome/trunk/src@180514 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/tcmalloc/chromium/src/system-alloc.cc b/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>index 05338963..2141d41 100644 <newline>--- a/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>+++ b/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>@@ -137,6 +137,18 @@ void raninit(ranctx* x, u4 seed) { <newline>   } <newline> } <newline>+// If the kernel cannot honor the hint in arch_get_unmapped_area_topdown, it <newline>+// will simply ignore it. So we give a hint that has a good chance of <newline>+// working. <newline>+// The mmap top-down allocator will normally allocate below TASK_SIZE - gap, <newline>+// with a gap that depends on the max stack size. See x86/mm/mmap.c. We <newline>+// should make allocations that are below this area, which would be <newline>+// 0x7ffbf8000000. <newline>+// We use 0x3ffffffff000 as the mask so that we only "pollute" half of the <newline>+// address space. In the unlikely case where fragmentation would become an <newline>+// issue, the kernel will still have another half to use. <newline>+const uint64_t kRandomAddressMask = 0x3ffffffff000ULL; <newline>+ <newline> #endif  // defined(ASLR_IS_SUPPORTED) <newline> // Give a random "hint" that is suitable for use with mmap(). This cannot make <newline>@@ -177,22 +189,51 @@ void* GetRandomAddrHint() { <newline>   } <newline>   uint64_t random_address = (static_cast<uint64_t>(ranval(&ctx)) << 32) | <newline>                             ranval(&ctx); <newline>-  // If the kernel cannot honor the hint in arch_get_unmapped_area_topdown, it <newline>-  // will simply ignore it. So we give a hint that has a good chance of <newline>-  // working. <newline>-  // The mmap top-down allocator will normally allocate below TASK_SIZE - gap, <newline>-  // with a gap that depends on the max stack size. See x86/mm/mmap.c. We <newline>-  // should make allocations that are below this area, which would be <newline>-  // 0x7ffbf8000000. <newline>-  // We use 0x3ffffffff000 as the mask so that we only "pollute" half of the <newline>-  // address space. In the unlikely case where fragmentation would become an <newline>-  // issue, the kernel will still have another half to use. <newline>   // A a bit-wise "and" won't bias our random distribution. <newline>-  random_address &= 0x3ffffffff000ULL; <newline>+  random_address &= kRandomAddressMask; <newline>   return reinterpret_cast<void*>(random_address); <newline> #endif  // ASLR_IS_SUPPORTED <newline> } <newline>+// Allocate |length| bytes of memory using mmap(). The memory will be <newline>+// readable and writeable, but not executable. <newline>+// Like mmap(), we will return MAP_FAILED on failure. <newline>+// |is_aslr_enabled| controls address space layout randomization. When true, we <newline>+// will put the first mapping at a random address and will then try to grow it. <newline>+// If it's not possible to grow an existing mapping, a new one will be created. <newline>+void* AllocWithMmap(size_t length, bool is_aslr_enabled) { <newline>+  // Note: we are protected by the general TCMalloc_SystemAlloc spinlock. <newline>+  static void* address_hint = NULL; <newline>+#if defined(ASLR_IS_SUPPORTED) <newline>+  if (is_aslr_enabled && <newline>+      (!address_hint || <newline>+       reinterpret_cast<uint64_t>(address_hint) & ~kRandomAddressMask)) { <newline>+    address_hint = GetRandomAddrHint(); <newline>+  } <newline>+#endif  // ASLR_IS_SUPPORTED <newline>+ <newline>+  // address_hint is likely to make us grow an existing mapping. <newline>+  void* result = mmap(address_hint, length, PROT_READ|PROT_WRITE, <newline>+                      MAP_PRIVATE|MAP_ANONYMOUS, -1, 0); <newline>+#if defined(ASLR_IS_SUPPORTED) <newline>+  if (result == address_hint) { <newline>+    // If mmap() succeeded at a address_hint, our next mmap() will try to grow <newline>+    // the current mapping as long as it's compatible with our ASLR mask. <newline>+    // This has been done for performance reasons, see crbug.com/173371. <newline>+    // It should be possible to strike a better balance between performance <newline>+    // and security but will be done at a later date. <newline>+    // If this overflows, it could only set address_hint to NULL, which is <newline>+    // what we want (and can't happen on the currently supported architecture). <newline>+    address_hint = static_cast<char*>(result) + length; <newline>+  } else { <newline>+    // mmap failed or a collision prevented the kernel from honoring the hint, <newline>+    // reset the hint. <newline>+    address_hint = NULL; <newline>+  } <newline>+#endif  // ASLR_IS_SUPPORTED <newline>+  return result; <newline>+} <newline>+ <newline> }  // Anonymous namespace to avoid name conflicts on "CheckAddressBits". <newline> COMPILE_ASSERT(kAddressBits <= 8 * sizeof(void*), <newline>@@ -405,14 +446,7 @@ void* MmapSysAllocator::Alloc(size_t size, size_t *actual_size, <newline>   //            size + alignment < (1<<NBITS). <newline>   // and        extra <= alignment <newline>   // therefore  size + extra < (1<<NBITS) <newline>-  void* address_hint = NULL; <newline>-  if (FLAGS_malloc_random_allocator) { <newline>-    address_hint = GetRandomAddrHint(); <newline>-  } <newline>-  void* result = mmap(address_hint, size + extra, <newline>-                      PROT_READ|PROT_WRITE, <newline>-                      MAP_PRIVATE|MAP_ANONYMOUS, <newline>-                      -1, 0); <newline>+  void* result = AllocWithMmap(size + extra, FLAGS_malloc_random_allocator); <newline>   if (result == reinterpret_cast<void*>(MAP_FAILED)) { <newline>     return NULL; <newline>   }
bd87aae76ad8be29c469dbe0499d4768ba49fa6	jln@chromium.org <jln@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Feb 4 20:17:35 2013 +0000	Revert 180486 > Linux: grow a unique random mapping in ASLR > > We loosen ASLR by only growing one random mapping. The previous version > had security benefits but had a negative performance impact. > This change aims to be performance neutral in respect to the pre-ASLR era. > At a later date, we may try to strike a good balance between performance and > security. > > BUG=170133,173371 > NOTRY=true > > Review URL: https://chromiumcodereview.appspot.com/12090112 TBR=jln@chromium.org			https://codereview.chromium.org/12186021	svn://svn.chromium.org/chrome/trunk/src@180491 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/tcmalloc/chromium/src/system-alloc.cc b/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>index 6438d12..05338963 100644 <newline>--- a/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>+++ b/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>@@ -137,18 +137,6 @@ void raninit(ranctx* x, u4 seed) { <newline>   } <newline> } <newline>-// If the kernel cannot honor the hint in arch_get_unmapped_area_topdown, it <newline>-// will simply ignore it. So we give a hint that has a good chance of <newline>-// working. <newline>-// The mmap top-down allocator will normally allocate below TASK_SIZE - gap, <newline>-// with a gap that depends on the max stack size. See x86/mm/mmap.c. We <newline>-// should make allocations that are below this area, which would be <newline>-// 0x7ffbf8000000. <newline>-// We use 0x3ffffffff000 as the mask so that we only "pollute" half of the <newline>-// address space. In the unlikely case where fragmentation would become an <newline>-// issue, the kernel will still have another half to use. <newline>-const uint64_t kRandomAddressMask = 0x3ffffffff000ULL; <newline>- <newline> #endif  // defined(ASLR_IS_SUPPORTED) <newline> // Give a random "hint" that is suitable for use with mmap(). This cannot make <newline>@@ -189,47 +177,22 @@ void* GetRandomAddrHint() { <newline>   } <newline>   uint64_t random_address = (static_cast<uint64_t>(ranval(&ctx)) << 32) | <newline>                             ranval(&ctx); <newline>+  // If the kernel cannot honor the hint in arch_get_unmapped_area_topdown, it <newline>+  // will simply ignore it. So we give a hint that has a good chance of <newline>+  // working. <newline>+  // The mmap top-down allocator will normally allocate below TASK_SIZE - gap, <newline>+  // with a gap that depends on the max stack size. See x86/mm/mmap.c. We <newline>+  // should make allocations that are below this area, which would be <newline>+  // 0x7ffbf8000000. <newline>+  // We use 0x3ffffffff000 as the mask so that we only "pollute" half of the <newline>+  // address space. In the unlikely case where fragmentation would become an <newline>+  // issue, the kernel will still have another half to use. <newline>   // A a bit-wise "and" won't bias our random distribution. <newline>-  random_address &= kRandomAddressMask; <newline>+  random_address &= 0x3ffffffff000ULL; <newline>   return reinterpret_cast<void*>(random_address); <newline> #endif  // ASLR_IS_SUPPORTED <newline> } <newline>-// Allocate |length| bytes of memory using mmap(). The memory will be <newline>-// readable and writeable, but not executable. <newline>-// Like mmap(), we will return MAP_FAILED on failure. <newline>-// |is_aslr_enabled| controls address space layout randomization. When true, we <newline>-// will put the first mapping at a random address and will then try to grow it. <newline>-// If it's not possible to grow an existing mapping, a new one will be created. <newline>-void* AllocWithMmap(size_t length, bool is_aslr_enabled) { <newline>-  // Note: we are protected by the general TCMalloc_SystemAlloc spinlock. <newline>-  static void* address_hint = NULL; <newline>-  if (is_aslr_enabled && <newline>-      (!address_hint || <newline>-       reinterpret_cast<uint64_t>(address_hint) & ~kRandomAddressMask)) { <newline>-    address_hint = GetRandomAddrHint(); <newline>-  } <newline>- <newline>-  // address_hint is likely to make us grow an existing mapping. <newline>-  void* result = mmap(address_hint, length, PROT_READ|PROT_WRITE, <newline>-                      MAP_PRIVATE|MAP_ANONYMOUS, -1, 0); <newline>-  if (result == address_hint) { <newline>-    // If mmap() succeeded at a address_hint, our next mmap() will try to grow <newline>-    // the current mapping as long as it's compatible with our ASLR mask. <newline>-    // This has been done for performance reasons, see crbug.com/173371. <newline>-    // It should be possible to strike a better balance between performance <newline>-    // and security but will be done at a later date. <newline>-    // If this overflows, it could only set address_hint to NULL, which is <newline>-    // what we want (and can't happen on the currently supported architecture). <newline>-    address_hint = static_cast<char*>(result) + length; <newline>-  } else { <newline>-    // mmap failed or a collision prevented the kernel from honoring the hint, <newline>-    // reset the hint. <newline>-    address_hint = NULL; <newline>-  } <newline>-  return result; <newline>-} <newline>- <newline> }  // Anonymous namespace to avoid name conflicts on "CheckAddressBits". <newline> COMPILE_ASSERT(kAddressBits <= 8 * sizeof(void*), <newline>@@ -442,7 +405,14 @@ void* MmapSysAllocator::Alloc(size_t size, size_t *actual_size, <newline>   //            size + alignment < (1<<NBITS). <newline>   // and        extra <= alignment <newline>   // therefore  size + extra < (1<<NBITS) <newline>-  void* result = AllocWithMmap(size + extra, FLAGS_malloc_random_allocator); <newline>+  void* address_hint = NULL; <newline>+  if (FLAGS_malloc_random_allocator) { <newline>+    address_hint = GetRandomAddrHint(); <newline>+  } <newline>+  void* result = mmap(address_hint, size + extra, <newline>+                      PROT_READ|PROT_WRITE, <newline>+                      MAP_PRIVATE|MAP_ANONYMOUS, <newline>+                      -1, 0); <newline>   if (result == reinterpret_cast<void*>(MAP_FAILED)) { <newline>     return NULL; <newline>   }
4fd79627d23f32d817372ad60843ff5d7b2123a	jln@chromium.org <jln@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Feb 4 20:03:17 2013 +0000	Linux: grow a unique random mapping in ASLR We loosen ASLR by only growing one random mapping. The previous version had security benefits but had a negative performance impact. This change aims to be performance neutral in respect to the pre-ASLR era. At a later date, we may try to strike a good balance between performance and security. NOTRY=true	170133,173371		https://chromiumcodereview.appspot.com/12090112	svn://svn.chromium.org/chrome/trunk/src@180486 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/tcmalloc/chromium/src/system-alloc.cc b/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>index 05338963..6438d12 100644 <newline>--- a/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>+++ b/third_party/tcmalloc/chromium/src/system-alloc.cc <newline>@@ -137,6 +137,18 @@ void raninit(ranctx* x, u4 seed) { <newline>   } <newline> } <newline>+// If the kernel cannot honor the hint in arch_get_unmapped_area_topdown, it <newline>+// will simply ignore it. So we give a hint that has a good chance of <newline>+// working. <newline>+// The mmap top-down allocator will normally allocate below TASK_SIZE - gap, <newline>+// with a gap that depends on the max stack size. See x86/mm/mmap.c. We <newline>+// should make allocations that are below this area, which would be <newline>+// 0x7ffbf8000000. <newline>+// We use 0x3ffffffff000 as the mask so that we only "pollute" half of the <newline>+// address space. In the unlikely case where fragmentation would become an <newline>+// issue, the kernel will still have another half to use. <newline>+const uint64_t kRandomAddressMask = 0x3ffffffff000ULL; <newline>+ <newline> #endif  // defined(ASLR_IS_SUPPORTED) <newline> // Give a random "hint" that is suitable for use with mmap(). This cannot make <newline>@@ -177,22 +189,47 @@ void* GetRandomAddrHint() { <newline>   } <newline>   uint64_t random_address = (static_cast<uint64_t>(ranval(&ctx)) << 32) | <newline>                             ranval(&ctx); <newline>-  // If the kernel cannot honor the hint in arch_get_unmapped_area_topdown, it <newline>-  // will simply ignore it. So we give a hint that has a good chance of <newline>-  // working. <newline>-  // The mmap top-down allocator will normally allocate below TASK_SIZE - gap, <newline>-  // with a gap that depends on the max stack size. See x86/mm/mmap.c. We <newline>-  // should make allocations that are below this area, which would be <newline>-  // 0x7ffbf8000000. <newline>-  // We use 0x3ffffffff000 as the mask so that we only "pollute" half of the <newline>-  // address space. In the unlikely case where fragmentation would become an <newline>-  // issue, the kernel will still have another half to use. <newline>   // A a bit-wise "and" won't bias our random distribution. <newline>-  random_address &= 0x3ffffffff000ULL; <newline>+  random_address &= kRandomAddressMask; <newline>   return reinterpret_cast<void*>(random_address); <newline> #endif  // ASLR_IS_SUPPORTED <newline> } <newline>+// Allocate |length| bytes of memory using mmap(). The memory will be <newline>+// readable and writeable, but not executable. <newline>+// Like mmap(), we will return MAP_FAILED on failure. <newline>+// |is_aslr_enabled| controls address space layout randomization. When true, we <newline>+// will put the first mapping at a random address and will then try to grow it. <newline>+// If it's not possible to grow an existing mapping, a new one will be created. <newline>+void* AllocWithMmap(size_t length, bool is_aslr_enabled) { <newline>+  // Note: we are protected by the general TCMalloc_SystemAlloc spinlock. <newline>+  static void* address_hint = NULL; <newline>+  if (is_aslr_enabled && <newline>+      (!address_hint || <newline>+       reinterpret_cast<uint64_t>(address_hint) & ~kRandomAddressMask)) { <newline>+    address_hint = GetRandomAddrHint(); <newline>+  } <newline>+ <newline>+  // address_hint is likely to make us grow an existing mapping. <newline>+  void* result = mmap(address_hint, length, PROT_READ|PROT_WRITE, <newline>+                      MAP_PRIVATE|MAP_ANONYMOUS, -1, 0); <newline>+  if (result == address_hint) { <newline>+    // If mmap() succeeded at a address_hint, our next mmap() will try to grow <newline>+    // the current mapping as long as it's compatible with our ASLR mask. <newline>+    // This has been done for performance reasons, see crbug.com/173371. <newline>+    // It should be possible to strike a better balance between performance <newline>+    // and security but will be done at a later date. <newline>+    // If this overflows, it could only set address_hint to NULL, which is <newline>+    // what we want (and can't happen on the currently supported architecture). <newline>+    address_hint = static_cast<char*>(result) + length; <newline>+  } else { <newline>+    // mmap failed or a collision prevented the kernel from honoring the hint, <newline>+    // reset the hint. <newline>+    address_hint = NULL; <newline>+  } <newline>+  return result; <newline>+} <newline>+ <newline> }  // Anonymous namespace to avoid name conflicts on "CheckAddressBits". <newline> COMPILE_ASSERT(kAddressBits <= 8 * sizeof(void*), <newline>@@ -405,14 +442,7 @@ void* MmapSysAllocator::Alloc(size_t size, size_t *actual_size, <newline>   //            size + alignment < (1<<NBITS). <newline>   // and        extra <= alignment <newline>   // therefore  size + extra < (1<<NBITS) <newline>-  void* address_hint = NULL; <newline>-  if (FLAGS_malloc_random_allocator) { <newline>-    address_hint = GetRandomAddrHint(); <newline>-  } <newline>-  void* result = mmap(address_hint, size + extra, <newline>-                      PROT_READ|PROT_WRITE, <newline>-                      MAP_PRIVATE|MAP_ANONYMOUS, <newline>-                      -1, 0); <newline>+  void* result = AllocWithMmap(size + extra, FLAGS_malloc_random_allocator); <newline>   if (result == reinterpret_cast<void*>(MAP_FAILED)) { <newline>     return NULL; <newline>   }
423369aab8184afa3b5acce25236ad62ef6b222	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 1 21:42:30 2013 +0000	Update versions to cover the massive Feb 2013 Java CPU: http://www.oracle.com/technetwork/topics/security/javacpufeb2013-1841061.html	173733		https://codereview.chromium.org/12093116	svn://svn.chromium.org/chrome/trunk/src@180193 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/plugin_metadata/plugins_win.json b/chrome/browser/resources/plugin_metadata/plugins_win.json <newline>index 16f4b0b..343a3b5 100644 <newline>--- a/chrome/browser/resources/plugin_metadata/plugins_win.json <newline>+++ b/chrome/browser/resources/plugin_metadata/plugins_win.json <newline>@@ -53,18 +53,18 @@ <newline>     ], <newline>     "versions": [ <newline>       { <newline>-        "version": "6.0.370", <newline>+        "version": "6.0.390", <newline>         "status": "requires_authorization", <newline>-        "comment": "Java SE 6 Update 37. '370' is not a typo." <newline>+        "comment": "Java SE 6 Update 39. '390' is not a typo." <newline>       }, <newline>       { <newline>         "version": "7", <newline>         "status": "out_of_date" <newline>       }, <newline>       { <newline>-        "version": "10.11", <newline>+        "version": "10.13", <newline>         "status": "requires_authorization", <newline>-        "comment": "Java SE 7u11" <newline>+        "comment": "Java SE 7u13" <newline>       } <newline>     ], <newline>     "lang": "en-US",
f4181a35b24d814f498362c98eab0e161154427	rkc@chromium.org <rkc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 1 21:31:07 2013 +0000	Screensaver implementation for ChromeOS. This is the initial implementation for screensaver extensions. The feature is currently behind a flag and installing an extension with a screensaver permission without the flag enabled will do nothing. This currently allows one Screensaver extension to be installed at a time, and brings up the screensaver after a fixed 2 minutes. Further work to be done is to add different timeouts for power manager if the screensaver is active, add more tests and add security features for the screensaver permission (if needed, this needs to be discussed still). TBR'ed jhawkins for chrome_browser_chromeos.gypi R=mpcomplete@chromium.org,stevenjb@chromium.org TBR=jhawkins@chromium.org	163681		https://codereview.chromium.org/12093058	svn://svn.chromium.org/chrome/trunk/src@180189 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chromeos/dbus/power_manager_client.cc b/chromeos/dbus/power_manager_client.cc <newline>index 8b0adb8..f3df801 100644 <newline>--- a/chromeos/dbus/power_manager_client.cc <newline>+++ b/chromeos/dbus/power_manager_client.cc <newline>@@ -10,6 +10,7 @@ <newline> #include "base/callback.h" <newline> #include "base/format_macros.h" <newline> #include "base/memory/scoped_ptr.h" <newline>+#include "base/message_loop.h" <newline> #include "base/observer_list.h" <newline> #include "base/stringprintf.h" <newline> #include "base/threading/platform_thread.h" <newline>@@ -806,7 +807,15 @@ class PowerManagerClientStubImpl : public PowerManagerClient { <newline>     callback.Run(0); <newline>   } <newline>-  virtual void RequestIdleNotification(int64 threshold) OVERRIDE {} <newline>+  virtual void RequestIdleNotification(int64 threshold) OVERRIDE { <newline>+    MessageLoop::current()->PostDelayedTask( <newline>+        FROM_HERE, <newline>+        base::Bind(&PowerManagerClientStubImpl::TriggerIdleNotify, <newline>+                   base::Unretained(this), <newline>+                   threshold), <newline>+        base::TimeDelta::FromMilliseconds(threshold)); <newline>+  } <newline>+ <newline>   virtual void NotifyUserActivity( <newline>       const base::TimeTicks& last_activity_time) OVERRIDE {} <newline>   virtual void NotifyVideoActivity( <newline>@@ -869,6 +878,10 @@ class PowerManagerClientStubImpl : public PowerManagerClient { <newline>                       BrightnessChanged(brightness_level, user_initiated)); <newline>   } <newline>+  void TriggerIdleNotify(int64 threshold) { <newline>+    FOR_EACH_OBSERVER(Observer, observers_, IdleNotify(threshold)); <newline>+  } <newline>+ <newline>   bool discharging_; <newline>   int battery_percentage_; <newline>   double brightness_;
43094e5a5f6c524ef57a0201906c988ecbc88ba	palmer@chromium.org <palmer@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 1 21:25:54 2013 +0000	Force HTTPS and public keys for sandbox.google.com and subdomains. This would have helped mitigate a recent security bug. TEST=visit http://{plus,www,}.sandbox.google.com and make sure the request is upgraded to HTTPS.	172984		https://codereview.chromium.org/12093100	svn://svn.chromium.org/chrome/trunk/src@180188 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state_static.json b/net/base/transport_security_state_static.json <newline>index 1bf06e0..98a0392 100644 <newline>--- a/net/base/transport_security_state_static.json <newline>+++ b/net/base/transport_security_state_static.json <newline>@@ -173,6 +173,7 @@ <newline>     { "name": "talk.google.com", "include_subdomains": true, "mode": "force-https", "pins": "google" }, <newline>     { "name": "hostedtalkgadget.google.com", "include_subdomains": true, "mode": "force-https", "pins": "google" }, <newline>     { "name": "plus.google.com", "include_subdomains": true, "mode": "force-https", "pins": "google" }, <newline>+    { "name": "plus.sandbox.google.com", "include_subdomains": true, "mode": "force-https", "pins": "google" }, <newline>     { "name": "script.google.com", "include_subdomains": true, "mode": "force-https", "pins": "google" }, <newline>     { "name": "history.google.com", "include_subdomains": true, "mode": "force-https", "pins": "google" },
c27f2e81cb6fa305b8e5a64bd198273a7bd76bc	jln@chromium.org <jln@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jan 26 07:37:23 2013 +0000	DrMemory: add suppressions for security overflow tests. TBR=markus NOTRY=true			https://chromiumcodereview.appspot.com/12082014	svn://svn.chromium.org/chrome/trunk/src@179056 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/tools/valgrind/drmemory/suppressions.txt b/tools/valgrind/drmemory/suppressions.txt <newline>index dc11b73..5bfa76a 100644 <newline>--- a/tools/valgrind/drmemory/suppressions.txt <newline>+++ b/tools/valgrind/drmemory/suppressions.txt <newline>@@ -390,3 +390,16 @@ content.dll!* <newline> KERNEL32.dll!* <newline> ntdll.dll!* <newline> ntdll.dll!* <newline>+ <newline>+WARNING <newline>+name=Security test (new oveflow) <newline>+MSVCR100D.dll!operator new <newline>+*!operator new <newline>+*!operator new[] <newline>+*!`anonymous namespace'::SecurityTest_NewOverflow_Test::TestBody <newline>+*!testing::internal::HandleExceptionsInMethodIfSupported<testing::Test,void> <newline>+ <newline>+WARNING <newline>+name=Security test (calloc overflow) <newline>+*!`anonymous namespace'::SecurityTest_CallocOverflow_Test::TestBody <newline>+*!testing::internal::HandleExceptionsInMethodIfSupported<testing::Test,void>
c4729bef0bb78bf5128d3f8b8180eed1ecc8805	jln@chromium.org <jln@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jan 26 04:41:15 2013 +0000	Base: add a security test to check for new[] or calloc() overflowing. This is a re-land of https://chromiumcodereview.appspot.com/12033064/. NOTRY=true TBR=jar	172149		https://chromiumcodereview.appspot.com/12087012	svn://svn.chromium.org/chrome/trunk/src@179040 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/security_unittest.cc b/base/security_unittest.cc <newline>index 5db18fd..ffb9202 100644 <newline>--- a/base/security_unittest.cc <newline>+++ b/base/security_unittest.cc <newline>@@ -14,6 +14,7 @@ <newline> #include "testing/gtest/include/gtest/gtest.h" <newline> using std::nothrow; <newline>+using std::numeric_limits; <newline> namespace { <newline>@@ -100,4 +101,95 @@ TEST(SecurityTest, ALLOC_TEST(MemoryAllocationRestrictionsNewArray)) { <newline>   } <newline> } <newline>+// The tests bellow check for overflows in new[] and calloc(). <newline>+ <newline>+#if defined(OS_IOS) || defined(OS_WIN) <newline>+  #define DISABLE_ON_IOS_AND_WIN(function) DISABLED_##function <newline>+#else <newline>+  #define DISABLE_ON_IOS_AND_WIN(function) function <newline>+#endif <newline>+ <newline>+#if defined(ADDRESS_SANITIZER) <newline>+  #define DISABLE_ON_ASAN(function) DISABLED_##function <newline>+#else <newline>+  #define DISABLE_ON_ASAN(function) function <newline>+#endif <newline>+ <newline>+// There are platforms where these tests are known to fail. We would like to <newline>+// be able to easily check the status on the bots, but marking tests as <newline>+// FAILS_ is too clunky. <newline>+void OverflowTestsSoftExpectTrue(bool overflow_detected) { <newline>+  if (!overflow_detected) { <newline>+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_MACOSX) <newline>+    // Sadly, on Linux, Android, and OSX we don't have a good story yet. Don't <newline>+    // fail the test, but report. <newline>+    printf("Platform has overflow: %s\n", <newline>+           !overflow_detected ? "yes." : "no."); <newline>+#else <newline>+    // Otherwise, fail the test. (Note: EXPECT are ok in subfunctions, ASSERT <newline>+    // aren't). <newline>+    EXPECT_TRUE(overflow_detected); <newline>+#endif <newline>+  } <newline>+} <newline>+ <newline>+// This function acts as a compiler optimization barrier. We use it to <newline>+// prevent the compiler from making an expression a compile-time constant. <newline>+// We also use it so that the compiler doesn't discard certain return values <newline>+// as something we don't need (see the comment with calloc below). <newline>+template <typename Type> <newline>+Type HideValueFromCompiler(volatile Type value) { <newline>+  return value; <newline>+} <newline>+ <newline>+// Test array[TooBig][X] and array[X][TooBig] allocations for int overflows. <newline>+// IOS doesn't honor nothrow, so disable the test there. <newline>+// Disable on Windows, we suspect some are failing because of it. <newline>+TEST(SecurityTest, DISABLE_ON_IOS_AND_WIN(NewOverflow)) { <newline>+  const size_t kArraySize = 4096; <newline>+  // We want something "dynamic" here, so that the compiler doesn't <newline>+  // immediately reject crazy arrays. <newline>+  const size_t kDynamicArraySize = HideValueFromCompiler(kArraySize); <newline>+  // numeric_limits are still not constexpr until we switch to C++11, so we <newline>+  // use an ugly cast. <newline>+  const size_t kMaxSizeT = ~static_cast<size_t>(0); <newline>+  ASSERT_EQ(numeric_limits<size_t>::max(), kMaxSizeT); <newline>+  const size_t kArraySize2 = kMaxSizeT / kArraySize + 10; <newline>+  const size_t kDynamicArraySize2 = HideValueFromCompiler(kArraySize2); <newline>+  { <newline>+    scoped_ptr<char[][kArraySize]> array_pointer(new (nothrow) <newline>+        char[kDynamicArraySize2][kArraySize]); <newline>+    OverflowTestsSoftExpectTrue(array_pointer == NULL); <newline>+  } <newline>+  { <newline>+    scoped_ptr<char[][kArraySize2]> array_pointer(new (nothrow) <newline>+        char[kDynamicArraySize][kArraySize2]); <newline>+    OverflowTestsSoftExpectTrue(array_pointer == NULL); <newline>+  } <newline>+} <newline>+ <newline>+// Test if calloc() can overflow. Disable on ASAN for now since the <newline>+// overflow seems present there. <newline>+TEST(SecurityTest, DISABLE_ON_ASAN(CallocOverflow)) { <newline>+  const size_t kArraySize = 4096; <newline>+  const size_t kMaxSizeT = numeric_limits<size_t>::max(); <newline>+  const size_t kArraySize2 = kMaxSizeT / kArraySize + 10; <newline>+  { <newline>+    scoped_ptr<char> array_pointer( <newline>+        static_cast<char*>(calloc(kArraySize, kArraySize2))); <newline>+    // We need the call to HideValueFromCompiler(): we have seen LLVM <newline>+    // optimize away the call to calloc() entirely and assume <newline>+    // the pointer to not be NULL. <newline>+    EXPECT_TRUE(HideValueFromCompiler(array_pointer.get()) == NULL); <newline>+  } <newline>+  { <newline>+    scoped_ptr<char> array_pointer( <newline>+        static_cast<char*>(calloc(kArraySize2, kArraySize))); <newline>+    // We need the call to HideValueFromCompiler(): we have seen LLVM <newline>+    // optimize away the call to calloc() entirely and assume <newline>+    // the pointer to not be NULL. <newline>+    EXPECT_TRUE(HideValueFromCompiler(array_pointer.get()) == NULL); <newline>+  } <newline>+} <newline>+ <newline> }  // namespace
3a14a7da7f2539715bb52faab519e7a755f6189	zea@chromium.org <zea@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jan 26 00:53:15 2013 +0000	Revert 178928 > Base: add a security test to check for new[] or calloc() > overflowing > > BUG=172149 > NOTRY=true > > Review URL: https://chromiumcodereview.appspot.com/12033064 Reverted due to failing base_unittests (speculative revert). TBR=jln@chromium.org			https://codereview.chromium.org/12086009	svn://svn.chromium.org/chrome/trunk/src@178972 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/security_unittest.cc b/base/security_unittest.cc <newline>index 483d2a8..5db18fd 100644 <newline>--- a/base/security_unittest.cc <newline>+++ b/base/security_unittest.cc <newline>@@ -14,7 +14,6 @@ <newline> #include "testing/gtest/include/gtest/gtest.h" <newline> using std::nothrow; <newline>-using std::numeric_limits; <newline> namespace { <newline>@@ -101,94 +100,4 @@ TEST(SecurityTest, ALLOC_TEST(MemoryAllocationRestrictionsNewArray)) { <newline>   } <newline> } <newline>-// The tests bellow check for overflows in new[] and calloc(). <newline>- <newline>-#if defined(OS_IOS) <newline>-  #define DISABLE_ON_IOS(function) DISABLED_##function <newline>-#else <newline>-  #define DISABLE_ON_IOS(function) function <newline>-#endif <newline>- <newline>-#if defined(ADDRESS_SANITIZER) <newline>-  #define DISABLE_ON_ASAN(function) DISABLED_##function <newline>-#else <newline>-  #define DISABLE_ON_ASAN(function) function <newline>-#endif <newline>- <newline>-// There are platforms where these tests are known to fail. We would like to <newline>-// be able to easily check the status on the bots, but marking tests as <newline>-// FAILS_ is too clunky. <newline>-void OverflowTestsSoftExpectTrue(bool overflow_detected) { <newline>-  if (!overflow_detected) { <newline>-#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_MACOSX) <newline>-    // Sadly, on Linux, Android, and OSX we don't have a good story yet. Don't <newline>-    // fail the test, but report. <newline>-    printf("Platform has overflow: %s\n", <newline>-           !overflow_detected ? "yes." : "no."); <newline>-#else <newline>-    // Otherwise, fail the test. (Note: EXPECT are ok in subfunctions, ASSERT <newline>-    // aren't). <newline>-    EXPECT_TRUE(overflow_detected); <newline>-#endif <newline>-  } <newline>-} <newline>- <newline>-// This function acts as a compiler optimization barrier. We use it to <newline>-// prevent the compiler from making an expression a compile-time constant. <newline>-// We also use it so that the compiler doesn't discard certain return values <newline>-// as something we don't need (see the comment with calloc below). <newline>-template <typename Type> <newline>-Type HideValueFromCompiler(volatile Type value) { <newline>-  return value; <newline>-} <newline>- <newline>-// Test array[TooBig][X] and array[X][TooBig] allocations for int overflows. <newline>-// IOS doesn't honor nothrow, so disable the test there. <newline>-TEST(SecurityTest, DISABLE_ON_IOS(NewOverflow)) { <newline>-  const size_t kArraySize = 4096; <newline>-  // We want something "dynamic" here, so that the compiler doesn't <newline>-  // immediately reject crazy arrays. <newline>-  const size_t kDynamicArraySize = HideValueFromCompiler(kArraySize); <newline>-  // numeric_limits are still not constexpr until we switch to C++11, so we <newline>-  // use an ugly cast. <newline>-  const size_t kMaxSizeT = ~static_cast<size_t>(0); <newline>-  ASSERT_EQ(numeric_limits<size_t>::max(), kMaxSizeT); <newline>-  const size_t kArraySize2 = kMaxSizeT / kArraySize + 10; <newline>-  const size_t kDynamicArraySize2 = HideValueFromCompiler(kArraySize2); <newline>-  { <newline>-    scoped_ptr<char[][kArraySize]> array_pointer(new (nothrow) <newline>-        char[kDynamicArraySize2][kArraySize]); <newline>-    OverflowTestsSoftExpectTrue(array_pointer == NULL); <newline>-  } <newline>-  { <newline>-    scoped_ptr<char[][kArraySize2]> array_pointer(new (nothrow) <newline>-        char[kDynamicArraySize][kArraySize2]); <newline>-    OverflowTestsSoftExpectTrue(array_pointer == NULL); <newline>-  } <newline>-} <newline>- <newline>-// Test if calloc() can overflow. Disable on ASAN for now since the <newline>-// overflow seems present there. <newline>-TEST(SecurityTest, DISABLE_ON_ASAN(CallocOverflow)) { <newline>-  const size_t kArraySize = 4096; <newline>-  const size_t kMaxSizeT = numeric_limits<size_t>::max(); <newline>-  const size_t kArraySize2 = kMaxSizeT / kArraySize + 10; <newline>-  { <newline>-    scoped_ptr<char> array_pointer( <newline>-        static_cast<char*>(calloc(kArraySize, kArraySize2))); <newline>-    // We need the call to HideValueFromCompiler(): we have seen LLVM <newline>-    // optimize away the call to calloc() entirely and assume <newline>-    // the pointer to not be NULL. <newline>-    EXPECT_TRUE(HideValueFromCompiler(array_pointer.get()) == NULL); <newline>-  } <newline>-  { <newline>-    scoped_ptr<char> array_pointer( <newline>-        static_cast<char*>(calloc(kArraySize2, kArraySize))); <newline>-    // We need the call to HideValueFromCompiler(): we have seen LLVM <newline>-    // optimize away the call to calloc() entirely and assume <newline>-    // the pointer to not be NULL. <newline>-    EXPECT_TRUE(HideValueFromCompiler(array_pointer.get()) == NULL); <newline>-  } <newline>-} <newline>- <newline> }  // namespace
dd40c83ae92697e834c726b4eb0754ac04217a0	jln@chromium.org <jln@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jan 25 22:47:12 2013 +0000	Base: add a security test to check for new[] or calloc() overflowing NOTRY=true	172149		https://chromiumcodereview.appspot.com/12033064	svn://svn.chromium.org/chrome/trunk/src@178928 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/security_unittest.cc b/base/security_unittest.cc <newline>index 5db18fd..483d2a8 100644 <newline>--- a/base/security_unittest.cc <newline>+++ b/base/security_unittest.cc <newline>@@ -14,6 +14,7 @@ <newline> #include "testing/gtest/include/gtest/gtest.h" <newline> using std::nothrow; <newline>+using std::numeric_limits; <newline> namespace { <newline>@@ -100,4 +101,94 @@ TEST(SecurityTest, ALLOC_TEST(MemoryAllocationRestrictionsNewArray)) { <newline>   } <newline> } <newline>+// The tests bellow check for overflows in new[] and calloc(). <newline>+ <newline>+#if defined(OS_IOS) <newline>+  #define DISABLE_ON_IOS(function) DISABLED_##function <newline>+#else <newline>+  #define DISABLE_ON_IOS(function) function <newline>+#endif <newline>+ <newline>+#if defined(ADDRESS_SANITIZER) <newline>+  #define DISABLE_ON_ASAN(function) DISABLED_##function <newline>+#else <newline>+  #define DISABLE_ON_ASAN(function) function <newline>+#endif <newline>+ <newline>+// There are platforms where these tests are known to fail. We would like to <newline>+// be able to easily check the status on the bots, but marking tests as <newline>+// FAILS_ is too clunky. <newline>+void OverflowTestsSoftExpectTrue(bool overflow_detected) { <newline>+  if (!overflow_detected) { <newline>+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_MACOSX) <newline>+    // Sadly, on Linux, Android, and OSX we don't have a good story yet. Don't <newline>+    // fail the test, but report. <newline>+    printf("Platform has overflow: %s\n", <newline>+           !overflow_detected ? "yes." : "no."); <newline>+#else <newline>+    // Otherwise, fail the test. (Note: EXPECT are ok in subfunctions, ASSERT <newline>+    // aren't). <newline>+    EXPECT_TRUE(overflow_detected); <newline>+#endif <newline>+  } <newline>+} <newline>+ <newline>+// This function acts as a compiler optimization barrier. We use it to <newline>+// prevent the compiler from making an expression a compile-time constant. <newline>+// We also use it so that the compiler doesn't discard certain return values <newline>+// as something we don't need (see the comment with calloc below). <newline>+template <typename Type> <newline>+Type HideValueFromCompiler(volatile Type value) { <newline>+  return value; <newline>+} <newline>+ <newline>+// Test array[TooBig][X] and array[X][TooBig] allocations for int overflows. <newline>+// IOS doesn't honor nothrow, so disable the test there. <newline>+TEST(SecurityTest, DISABLE_ON_IOS(NewOverflow)) { <newline>+  const size_t kArraySize = 4096; <newline>+  // We want something "dynamic" here, so that the compiler doesn't <newline>+  // immediately reject crazy arrays. <newline>+  const size_t kDynamicArraySize = HideValueFromCompiler(kArraySize); <newline>+  // numeric_limits are still not constexpr until we switch to C++11, so we <newline>+  // use an ugly cast. <newline>+  const size_t kMaxSizeT = ~static_cast<size_t>(0); <newline>+  ASSERT_EQ(numeric_limits<size_t>::max(), kMaxSizeT); <newline>+  const size_t kArraySize2 = kMaxSizeT / kArraySize + 10; <newline>+  const size_t kDynamicArraySize2 = HideValueFromCompiler(kArraySize2); <newline>+  { <newline>+    scoped_ptr<char[][kArraySize]> array_pointer(new (nothrow) <newline>+        char[kDynamicArraySize2][kArraySize]); <newline>+    OverflowTestsSoftExpectTrue(array_pointer == NULL); <newline>+  } <newline>+  { <newline>+    scoped_ptr<char[][kArraySize2]> array_pointer(new (nothrow) <newline>+        char[kDynamicArraySize][kArraySize2]); <newline>+    OverflowTestsSoftExpectTrue(array_pointer == NULL); <newline>+  } <newline>+} <newline>+ <newline>+// Test if calloc() can overflow. Disable on ASAN for now since the <newline>+// overflow seems present there. <newline>+TEST(SecurityTest, DISABLE_ON_ASAN(CallocOverflow)) { <newline>+  const size_t kArraySize = 4096; <newline>+  const size_t kMaxSizeT = numeric_limits<size_t>::max(); <newline>+  const size_t kArraySize2 = kMaxSizeT / kArraySize + 10; <newline>+  { <newline>+    scoped_ptr<char> array_pointer( <newline>+        static_cast<char*>(calloc(kArraySize, kArraySize2))); <newline>+    // We need the call to HideValueFromCompiler(): we have seen LLVM <newline>+    // optimize away the call to calloc() entirely and assume <newline>+    // the pointer to not be NULL. <newline>+    EXPECT_TRUE(HideValueFromCompiler(array_pointer.get()) == NULL); <newline>+  } <newline>+  { <newline>+    scoped_ptr<char> array_pointer( <newline>+        static_cast<char*>(calloc(kArraySize2, kArraySize))); <newline>+    // We need the call to HideValueFromCompiler(): we have seen LLVM <newline>+    // optimize away the call to calloc() entirely and assume <newline>+    // the pointer to not be NULL. <newline>+    EXPECT_TRUE(HideValueFromCompiler(array_pointer.get()) == NULL); <newline>+  } <newline>+} <newline>+ <newline> }  // namespace
445732a62efc6c449319b1db97f57ef990f5072	grv@chromium.org <grv@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jan 25 01:23:34 2013 +0000	Revert 11649004 because of potential security exploit. Revert the change allowing chrome:// URLs to component apps. This has previously resulted in a security exploit.	172017		https://chromiumcodereview.appspot.com/12038070	svn://svn.chromium.org/chrome/trunk/src@178720 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/renderer_host/chrome_render_view_host_observer.cc b/chrome/browser/renderer_host/chrome_render_view_host_observer.cc <newline>index 3a2e24c..fd9d9d1 100644 <newline>--- a/chrome/browser/renderer_host/chrome_render_view_host_observer.cc <newline>+++ b/chrome/browser/renderer_host/chrome_render_view_host_observer.cc <newline>@@ -84,11 +84,10 @@ void ChromeRenderViewHostObserver::InitRenderViewForExtensions() { <newline>   content::RenderProcessHost* process = render_view_host()->GetProcess(); <newline>-  // Some extensions and apps use chrome:// URLs. <newline>+  // Some extensions use chrome:// URLs. <newline>   Extension::Type type = extension->GetType(); <newline>   if (type == Extension::TYPE_EXTENSION || <newline>-      type == Extension::TYPE_LEGACY_PACKAGED_APP || <newline>-      extension->location() == Extension::COMPONENT) { <newline>+      type == Extension::TYPE_LEGACY_PACKAGED_APP) { <newline>     ChildProcessSecurityPolicy::GetInstance()->GrantScheme( <newline>         process->GetID(), chrome::kChromeUIScheme);
72b3cc46b2b2a89d2f985c78745d5f7c34dde77	maruel@chromium.org <maruel@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jan 24 00:48:48 2013 +0000	Fix many test case failures when run isolated on OSX. For an unknown reason, DIR_SOURCE_ROOT may return a path with '..' in it, which triggers the security check added in r175642. This only seems to happen when called inside isolate.py. Fix the issue whoesale by enforcing an absolute path. R=mark@chromium.org	168890		https://chromiumcodereview.appspot.com/12038049	svn://svn.chromium.org/chrome/trunk/src@178448 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/base_paths_mac.mm b/base/base_paths_mac.mm <newline>index 630f742..d217d90 100644 <newline>--- a/base/base_paths_mac.mm <newline>+++ b/base/base_paths_mac.mm <newline>@@ -90,6 +90,9 @@ bool PathProviderMac(int key, FilePath* result) { <newline>         *result = result->DirName().DirName(); <newline>       } <newline> #endif <newline>+      if (result->ReferencesParent()) { <newline>+        return file_util::AbsolutePath(result); <newline>+      } <newline>       return true; <newline>     case base::DIR_USER_DESKTOP: <newline> #if defined(OS_IOS)
708ae170964afefadafdaf1e5428595ff6bc976	jam@chromium.org <jam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 22 18:45:24 2013 +0000	Get rid of the static list of URLs in chrome_url_data_manager_backend.cc which controlled security headers. Instead specify this data through the URLDataSource and WebUIDataSource interfaces. This is needed so that webui pages can be implemented in different modules (i.e. content, chrome, chromeos), so chrome_url_data_manager_backend.cc will move to content and won't know about every type of webui page.	169170		https://codereview.chromium.org/12041014	svn://svn.chromium.org/chrome/trunk/src@178040 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/public/browser/web_ui_data_source.h b/content/public/browser/web_ui_data_source.h <newline>index da9e7c7..b28d014 100644 <newline>--- a/content/public/browser/web_ui_data_source.h <newline>+++ b/content/public/browser/web_ui_data_source.h <newline>@@ -64,6 +64,17 @@ class WebUIDataSource { <newline>   // Allows a caller to add a filter for URL requests. <newline>   virtual void SetRequestFilter(const HandleRequestCallback& callback) = 0; <newline>+ <newline>+  // The following map to methods on URLDataSource. See the documentation there. <newline>+  // NOTE: it's not acceptable to call DisableContentSecurityPolicy for new <newline>+  // pages, see URLDataSource::ShouldAddContentSecurityPolicy and talk to <newline>+  // tsepez. <newline>+  virtual void DisableContentSecurityPolicy() = 0; <newline>+  virtual void OverrideContentSecurityPolicyObjectSrc( <newline>+      const std::string& data) = 0; <newline>+  virtual void OverrideContentSecurityPolicyFrameSrc( <newline>+      const std::string& data) = 0; <newline>+  virtual void DisableDenyXFrameOptions() = 0; <newline> }; <newline> }  // namespace content
34f6ad39b9bb1cddafa5b1f60b7771299a99605	penghuang@chromium.org <penghuang@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 22 17:45:08 2013 +0000	Do not update the geolocation permission for local pages When chrome is launched with --disable-web-security and a local page tries to use the geolocation api, the chrome browser will ask permssion from user and then will update geolocation permission for the local page with URL file:///. But the file:/// is not a valid ContentSettingsPattern. It will cause crash in debug build. This change fixes the crash.	171323		https://chromiumcodereview.appspot.com/12033015	svn://svn.chromium.org/chrome/trunk/src@178026 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/geolocation/geolocation_infobar_queue_controller.h b/chrome/browser/geolocation/geolocation_infobar_queue_controller.h <newline>index 3260c1d..0f40922 100644 <newline>--- a/chrome/browser/geolocation/geolocation_infobar_queue_controller.h <newline>+++ b/chrome/browser/geolocation/geolocation_infobar_queue_controller.h <newline>@@ -78,6 +78,9 @@ class GeolocationInfoBarQueueController : content::NotificationObserver { <newline>   void RegisterForInfoBarNotifications(InfoBarService* infobar_service); <newline>   void UnregisterForInfoBarNotifications(InfoBarService* infobar_service); <newline>+  void UpdateContentSetting( <newline>+      const GURL& requesting_frame, const GURL& embedder, bool allowed); <newline>+ <newline>   content::NotificationRegistrar registrar_; <newline>   Profile* const profile_;
cbcabf9c8627175730104d11e1b738ea3900a30	rsleevi@chromium.org <rsleevi@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jan 16 03:08:54 2013 +0000	Remove support for 'system' SSL on Mac (SecureTransport) and Win (SChannel) Remove support for the command-line fallback --use-system-ssl, as it adds to the maintenance burden and presents a security risk due to inconsistent patching by the OS vendors. On all platforms but Android, NSS is used for SSL in all situations. This does not change how certificate verification is handled, just the underlying SSL implementation. TBR=sky	170214		https://chromiumcodereview.appspot.com/11876044	svn://svn.chromium.org/chrome/trunk/src@177068 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/socket/ssl_client_socket_win.h b/net/socket/ssl_client_socket_win.h <newline>deleted file mode 100644 <newline>index 0877cbc..0000000 <newline>--- a/net/socket/ssl_client_socket_win.h <newline>+++ /dev/null <newline>@@ -1,213 +0,0 @@ <newline>-// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>-// Use of this source code is governed by a BSD-style license that can be <newline>-// found in the LICENSE file. <newline>- <newline>-#ifndef NET_SOCKET_SSL_CLIENT_SOCKET_WIN_H_ <newline>-#define NET_SOCKET_SSL_CLIENT_SOCKET_WIN_H_ <newline>- <newline>-#define SECURITY_WIN32  // Needs to be defined before including security.h <newline>- <newline>-#include <windows.h> <newline>-#include <wincrypt.h> <newline>-#include <security.h> <newline>- <newline>-#include <string> <newline>- <newline>-#include "base/memory/scoped_ptr.h" <newline>-#include "net/base/cert_verify_result.h" <newline>-#include "net/base/completion_callback.h" <newline>-#include "net/base/host_port_pair.h" <newline>-#include "net/base/net_log.h" <newline>-#include "net/base/ssl_config_service.h" <newline>-#include "net/socket/ssl_client_socket.h" <newline>- <newline>-namespace net { <newline>- <newline>-class BoundNetLog; <newline>-class CertVerifier; <newline>-class ClientSocketHandle; <newline>-class HostPortPair; <newline>-class SingleRequestCertVerifier; <newline>- <newline>-// An SSL client socket implemented with the Windows Schannel. <newline>-class SSLClientSocketWin : public SSLClientSocket { <newline>- public: <newline>-  // Takes ownership of the |transport_socket|, which must already be connected. <newline>-  // The hostname specified in |host_and_port| will be compared with the name(s) <newline>-  // in the server's certificate during the SSL handshake.  If SSL client <newline>-  // authentication is requested, the host_and_port field of SSLCertRequestInfo <newline>-  // will be populated with |host_and_port|.  |ssl_config| specifies <newline>-  // the SSL settings. <newline>-  SSLClientSocketWin(ClientSocketHandle* transport_socket, <newline>-                     const HostPortPair& host_and_port, <newline>-                     const SSLConfig& ssl_config, <newline>-                     const SSLClientSocketContext& context); <newline>-  ~SSLClientSocketWin(); <newline>- <newline>-  // SSLClientSocket implementation. <newline>-  virtual void GetSSLCertRequestInfo(SSLCertRequestInfo* cert_request_info); <newline>-  virtual NextProtoStatus GetNextProto(std::string* proto, <newline>-                                       std::string* server_protos); <newline>-  virtual ServerBoundCertService* GetServerBoundCertService() const OVERRIDE; <newline>- <newline>-  // SSLSocket implementation. <newline>-  virtual int ExportKeyingMaterial(const base::StringPiece& label, <newline>-                                   bool has_context, <newline>-                                   const base::StringPiece& context, <newline>-                                   unsigned char* out, <newline>-                                   unsigned int outlen); <newline>-  virtual int GetTLSUniqueChannelBinding(std::string* out) OVERRIDE; <newline>- <newline>-  // StreamSocket implementation. <newline>-  virtual int Connect(const CompletionCallback& callback) OVERRIDE; <newline>-  virtual void Disconnect() OVERRIDE; <newline>-  virtual bool IsConnected() const OVERRIDE; <newline>-  virtual bool IsConnectedAndIdle() const OVERRIDE; <newline>-  virtual int GetPeerAddress(IPEndPoint* address) const OVERRIDE; <newline>-  virtual int GetLocalAddress(IPEndPoint* address) const OVERRIDE; <newline>-  virtual const BoundNetLog& NetLog() const  OVERRIDE{ return net_log_; } <newline>-  virtual void SetSubresourceSpeculation() OVERRIDE; <newline>-  virtual void SetOmniboxSpeculation() OVERRIDE; <newline>-  virtual bool WasEverUsed() const OVERRIDE; <newline>-  virtual bool UsingTCPFastOpen() const OVERRIDE; <newline>-  virtual int64 NumBytesRead() const OVERRIDE; <newline>-  virtual base::TimeDelta GetConnectTimeMicros() const OVERRIDE; <newline>-  virtual bool GetSSLInfo(SSLInfo* ssl_info) OVERRIDE; <newline>- <newline>-  // Socket implementation. <newline>-  virtual int Read(IOBuffer* buf, int buf_len, <newline>-                   const CompletionCallback& callback) OVERRIDE; <newline>-  virtual int Write(IOBuffer* buf, int buf_len, <newline>-                    const CompletionCallback& callback) OVERRIDE; <newline>- <newline>-  virtual bool SetReceiveBufferSize(int32 size) OVERRIDE; <newline>-  virtual bool SetSendBufferSize(int32 size) OVERRIDE; <newline>- <newline>- private: <newline>-  bool completed_handshake() const { <newline>-    return next_state_ == STATE_COMPLETED_HANDSHAKE; <newline>-  } <newline>- <newline>-  // Initializes the SSL options and security context. Returns a net error code. <newline>-  int InitializeSSLContext(); <newline>- <newline>-  void OnHandshakeIOComplete(int result); <newline>-  void OnReadComplete(int result); <newline>-  void OnWriteComplete(int result); <newline>- <newline>-  int DoLoop(int last_io_result); <newline>-  int DoHandshakeRead(); <newline>-  int DoHandshakeReadComplete(int result); <newline>-  int DoHandshakeWrite(); <newline>-  int DoHandshakeWriteComplete(int result); <newline>-  int DoVerifyCert(); <newline>-  int DoVerifyCertComplete(int result); <newline>- <newline>-  int DoPayloadRead(); <newline>-  int DoPayloadReadComplete(int result); <newline>-  int DoPayloadDecrypt(); <newline>-  int DoPayloadEncrypt(); <newline>-  int DoPayloadWrite(); <newline>-  int DoPayloadWriteComplete(int result); <newline>-  int DoCompletedRenegotiation(int result); <newline>- <newline>-  int DidCallInitializeSecurityContext(); <newline>-  int DidCompleteHandshake(); <newline>-  void DidCompleteRenegotiation(); <newline>-  void LogConnectionTypeMetrics() const; <newline>-  void FreeSendBuffer(); <newline>- <newline>-  scoped_ptr<ClientSocketHandle> transport_; <newline>-  HostPortPair host_and_port_; <newline>-  SSLConfig ssl_config_; <newline>- <newline>-  // User function to callback when the Connect() completes. <newline>-  CompletionCallback user_connect_callback_; <newline>- <newline>-  // User function to callback when a Read() completes. <newline>-  CompletionCallback user_read_callback_; <newline>-  scoped_refptr<IOBuffer> user_read_buf_; <newline>-  int user_read_buf_len_; <newline>- <newline>-  // User function to callback when a Write() completes. <newline>-  CompletionCallback user_write_callback_; <newline>-  scoped_refptr<IOBuffer> user_write_buf_; <newline>-  int user_write_buf_len_; <newline>- <newline>-  // Used to Read and Write using transport_. <newline>-  scoped_refptr<IOBuffer> transport_read_buf_; <newline>-  scoped_refptr<IOBuffer> transport_write_buf_; <newline>- <newline>-  enum State { <newline>-    STATE_NONE, <newline>-    STATE_HANDSHAKE_READ, <newline>-    STATE_HANDSHAKE_READ_COMPLETE, <newline>-    STATE_HANDSHAKE_WRITE, <newline>-    STATE_HANDSHAKE_WRITE_COMPLETE, <newline>-    STATE_VERIFY_CERT, <newline>-    STATE_VERIFY_CERT_COMPLETE, <newline>-    STATE_COMPLETED_RENEGOTIATION, <newline>-    STATE_COMPLETED_HANDSHAKE <newline>-    // After the handshake, the socket remains <newline>-    // in the STATE_COMPLETED_HANDSHAKE state, <newline>-    // unless a renegotiate handshake occurs. <newline>-  }; <newline>-  State next_state_; <newline>- <newline>-  SecPkgContext_StreamSizes stream_sizes_; <newline>-  scoped_refptr<X509Certificate> server_cert_; <newline>-  CertVerifier* const cert_verifier_; <newline>-  scoped_ptr<SingleRequestCertVerifier> verifier_; <newline>-  CertVerifyResult server_cert_verify_result_; <newline>- <newline>-  CredHandle* creds_; <newline>-  CtxtHandle ctxt_; <newline>-  SecBuffer in_buffers_[2];  // Input buffers for InitializeSecurityContext. <newline>-  SecBuffer send_buffer_;  // Output buffer for InitializeSecurityContext. <newline>-  SECURITY_STATUS isc_status_;  // Return value of InitializeSecurityContext. <newline>-  scoped_array<char> payload_send_buffer_; <newline>-  int payload_send_buffer_len_; <newline>-  int bytes_sent_; <newline>- <newline>-  // recv_buffer_ holds the received ciphertext.  Since Schannel decrypts <newline>-  // data in place, sometimes recv_buffer_ may contain decrypted plaintext and <newline>-  // any undecrypted ciphertext.  (Ciphertext is decrypted one full SSL record <newline>-  // at a time.) <newline>-  // <newline>-  // If bytes_decrypted_ is 0, the received ciphertext is at the beginning of <newline>-  // recv_buffer_, ready to be passed to DecryptMessage. <newline>-  scoped_array<char> recv_buffer_; <newline>-  char* decrypted_ptr_;  // Points to the decrypted plaintext in recv_buffer_ <newline>-  int bytes_decrypted_;  // The number of bytes of decrypted plaintext. <newline>-  char* received_ptr_;  // Points to the received ciphertext in recv_buffer_ <newline>-  int bytes_received_;  // The number of bytes of received ciphertext. <newline>- <newline>-  // True if we're writing the first token (handshake message) to the server, <newline>-  // false if we're writing a subsequent token.  After we have written a token <newline>-  // successfully, DoHandshakeWriteComplete checks this member to set the next <newline>-  // state. <newline>-  bool writing_first_token_; <newline>- <newline>-  // Only used in the STATE_HANDSHAKE_READ_COMPLETE and <newline>-  // STATE_PAYLOAD_READ_COMPLETE states.  True if a 'result' argument of OK <newline>-  // should be ignored, to prevent it from being interpreted as EOF. <newline>-  // <newline>-  // The reason we need this flag is that OK means not only "0 bytes of data <newline>-  // were read" but also EOF.  We set ignore_ok_result_ to true when we need <newline>-  // to continue processing previously read data without reading more data. <newline>-  // We have to pass a 'result' of OK to the DoLoop method, and don't want it <newline>-  // to be interpreted as EOF. <newline>-  bool ignore_ok_result_; <newline>- <newline>-  // Renegotiation is in progress. <newline>-  bool renegotiating_; <newline>- <newline>-  // True when the decrypter needs more data in order to decrypt. <newline>-  bool need_more_data_; <newline>- <newline>-  BoundNetLog net_log_; <newline>-}; <newline>- <newline>-}  // namespace net <newline>- <newline>-#endif  // NET_SOCKET_SSL_CLIENT_SOCKET_WIN_H_
5bf9a135808b579f659d73e6048dd86bc6db903	jln@chromium.org <jln@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 15 20:16:33 2013 +0000	TCMalloc: restrict maximum size of memory allocations For security purposes, we restrict the maximum size of memory allocations under what can be indexed by an int. NOTRY=true	169327		https://chromiumcodereview.appspot.com/11857007	svn://svn.chromium.org/chrome/trunk/src@176961 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/tcmalloc/chromium/src/tcmalloc.cc b/third_party/tcmalloc/chromium/src/tcmalloc.cc <newline>index 2ff2a3b..591c687 100644 <newline>--- a/third_party/tcmalloc/chromium/src/tcmalloc.cc <newline>+++ b/third_party/tcmalloc/chromium/src/tcmalloc.cc <newline>@@ -296,6 +296,16 @@ size_t InvalidGetAllocatedSize(const void* ptr) { <newline>       "Attempt to get the size of an invalid pointer", ptr); <newline>   return 0; <newline> } <newline>+ <newline>+// For security reasons, we want to limit the size of allocations. <newline>+// See crbug.com/169327. <newline>+inline bool IsAllocSizePermitted(size_t alloc_size) { <newline>+  // Never allow an allocation larger than what can be indexed via an int. <newline>+  // Remove kPageSize to account for various rounding, padding and to have a <newline>+  // small margin. <newline>+  return alloc_size <= ((std::numeric_limits<int>::max)() - kPageSize); <newline>+} <newline>+ <newline> }  // unnamed namespace <newline> // Extract interesting stats <newline>@@ -1078,27 +1088,31 @@ inline void* do_malloc(size_t size) { <newline>   // The following call forces module initialization <newline>   ThreadCache* heap = ThreadCache::GetCache(); <newline>-  if (size <= kMaxSize) { <newline>-    size_t cl = Static::sizemap()->SizeClass(size); <newline>-    size = Static::sizemap()->class_to_size(cl); <newline>- <newline>-    // TODO(jar): If this has any detectable performance impact, it can be <newline>-    // optimized by only tallying sizes if the profiler was activated to recall <newline>-    // these tallies.  I don't think this is performance critical, but we really <newline>-    // should measure it. <newline>-    heap->AddToByteAllocatedTotal(size);  // Chromium profiling. <newline>- <newline>-    if ((FLAGS_tcmalloc_sample_parameter > 0) && heap->SampleAllocation(size)) { <newline>-      ret = DoSampledAllocation(size); <newline>-      MarkAllocatedRegion(ret); <newline>+  // First, check if our security policy allows this size. <newline>+  if (IsAllocSizePermitted(size)) { <newline>+    if (size <= kMaxSize) { <newline>+      size_t cl = Static::sizemap()->SizeClass(size); <newline>+      size = Static::sizemap()->class_to_size(cl); <newline>+ <newline>+      // TODO(jar): If this has any detectable performance impact, it can be <newline>+      // optimized by only tallying sizes if the profiler was activated to <newline>+      // recall these tallies.  I don't think this is performance critical, but <newline>+      // we really should measure it. <newline>+      heap->AddToByteAllocatedTotal(size);  // Chromium profiling. <newline>+ <newline>+      if ((FLAGS_tcmalloc_sample_parameter > 0) && <newline>+          heap->SampleAllocation(size)) { <newline>+        ret = DoSampledAllocation(size); <newline>+        MarkAllocatedRegion(ret); <newline>+      } else { <newline>+        // The common case, and also the simplest.  This just pops the <newline>+        // size-appropriate freelist, after replenishing it if it's empty. <newline>+        ret = CheckMallocResult(heap->Allocate(size, cl)); <newline>+      } <newline>     } else { <newline>-      // The common case, and also the simplest.  This just pops the <newline>-      // size-appropriate freelist, after replenishing it if it's empty. <newline>-      ret = CheckMallocResult(heap->Allocate(size, cl)); <newline>+      ret = do_malloc_pages(heap, size); <newline>+      MarkAllocatedRegion(ret); <newline>     } <newline>-  } else { <newline>-    ret = do_malloc_pages(heap, size); <newline>-    MarkAllocatedRegion(ret); <newline>   } <newline>   if (ret == NULL) errno = ENOMEM; <newline>   return ret; <newline>@@ -1233,8 +1247,8 @@ inline void* do_realloc_with_callback( <newline>   //    . If we need to grow, grow to max(new_size, old_size * 1.X) <newline>   //    . Don't shrink unless new_size < old_size * 0.Y <newline>   // X and Y trade-off time for wasted space.  For now we do 1.25 and 0.5. <newline>-  const int lower_bound_to_grow = old_size + old_size / 4; <newline>-  const int upper_bound_to_shrink = old_size / 2; <newline>+  const size_t lower_bound_to_grow = old_size + old_size / 4; <newline>+  const size_t upper_bound_to_shrink = old_size / 2; <newline>   if ((new_size > old_size) || (new_size < upper_bound_to_shrink)) { <newline>     // Need to reallocate. <newline>     void* new_ptr = NULL;
130e7b6da93abf7b3fabd12591e8d5ccb16b2c9	dalecurtis@chromium.org <dalecurtis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 15 09:01:35 2013 +0000	Update FFmpeg DEPS for security fix. Pulls in: fe7d549 Update README for security fix. 9d8789e vorbisdec: Check bark_map_size. c81a7da Explicitly set cygwin_msvs_shell on TEST=unittests, manual. TBR=scherkus	168473		https://chromiumcodereview.appspot.com/11889018	svn://svn.chromium.org/chrome/trunk/src@176861 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index ed72c14..a1ee494 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -25,8 +25,8 @@ vars = { <newline>   # These two FFmpeg variables must be updated together.  One is used for SVN <newline>   # checkouts and the other for Git checkouts. <newline>-  "ffmpeg_revision": "175176", <newline>-  "ffmpeg_hash": "0c981b3a572f9257e6178f5572e3f3cd47ac3025", <newline>+  "ffmpeg_revision": "176720", <newline>+  "ffmpeg_hash": "fe7d5497f1490914d7c3bb0236a1c722afccf4e4", <newline>   "sfntly_revision": "134", <newline>   "skia_revision": "7146",
d005b82fba7e2ad6e82bfab89049f0175508228	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jan 10 03:59:23 2013 +0000	Reject invalid GURLs across IPC. Also add some per-file owners to the common_param_traits.cc, since it's a highly security-sensitive area.	168923		https://codereview.chromium.org/11826002	svn://svn.chromium.org/chrome/trunk/src@176009 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/public/common/common_param_traits.cc b/content/public/common/common_param_traits.cc <newline>index bee1ddb..de32860 100644 <newline>--- a/content/public/common/common_param_traits.cc <newline>+++ b/content/public/common/common_param_traits.cc <newline>@@ -58,13 +58,8 @@ void ParamTraits<GURL>::Write(Message* m, const GURL& p) { <newline>   // type as GURL. See https://crbug.com/166486 for additional work in <newline>   // this area. <newline>   if (!p.is_valid()) { <newline>-    GURL reconstructed_url(p.possibly_invalid_spec()); <newline>-    if (reconstructed_url.is_valid()) { <newline>-      DLOG(WARNING) << "GURL string " << p.possibly_invalid_spec() <newline>-                    << " (marked invalid) but parsed as valid."; <newline>-      m->WriteString(std::string()); <newline>-      return; <newline>-    } <newline>+    m->WriteString(std::string()); <newline>+    return; <newline>   } <newline>   m->WriteString(p.possibly_invalid_spec()); <newline>@@ -78,6 +73,10 @@ bool ParamTraits<GURL>::Read(const Message* m, PickleIterator* iter, GURL* p) { <newline>     return false; <newline>   } <newline>   *p = GURL(s); <newline>+  if (!s.empty() && !p->is_valid()) { <newline>+    *p = GURL(); <newline>+    return false; <newline>+  } <newline>   return true; <newline> }
fea5a9b229b6a114629c8787f614b2e9f1048fc	cpu@chromium.org <cpu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jan 9 00:38:59 2013 +0000	Don't allow path traversal paths on the base file helpers This forces explicit normalization of paths and make path escaping security bugs much harder to exploit. See for example bug 167122 TEST=included tests	168890		https://codereview.chromium.org/11782005	svn://svn.chromium.org/chrome/trunk/src@175642 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/skia/ext/vector_canvas_unittest.cc b/skia/ext/vector_canvas_unittest.cc <newline>index 9f28645..15ca460 100644 <newline>--- a/skia/ext/vector_canvas_unittest.cc <newline>+++ b/skia/ext/vector_canvas_unittest.cc <newline>@@ -334,8 +334,10 @@ void Premultiply(SkBitmap bitmap) { <newline> void LoadPngFileToSkBitmap(const FilePath& filename, <newline>                            SkBitmap* bitmap, <newline>                            bool is_opaque) { <newline>+  FilePath absolute_path(filename); <newline>+  file_util::AbsolutePath(&absolute_path); <newline>   std::string compressed; <newline>-  file_util::ReadFileToString(filename, &compressed); <newline>+  file_util::ReadFileToString(absolute_path, &compressed); <newline>   ASSERT_TRUE(compressed.size()); <newline>   ASSERT_TRUE(gfx::PNGCodec::Decode(
ed72be9850bc59df02b0ec19ce44cfabc805656	unsafe@trevp.net <unsafe@trevp.net@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 8 22:07:33 2013 +0000	This is the first in an intended sequence of CLs to refactor TransportSecurityState, fix some book-keeping bugs, and hopefully add TACK. This sequence of CLs will be derived from the original, overly-large CL #11191005. This CL does a few things: - Adds a high-level API for processing HSTS/HPKP - Move the code for handling HSTS/HPKP headers out of transport_security_state - Move HashValue out of x509_cert_types - Addresses several HSTS/HPKP parsing bugs identified during review of the cleanup - Ignore unknown HSTS/HPKP directives - Ignore unknown hash algorithms - Handle overly-large (> int64) expirations without parsing issues - Reject invalid pins entered by users			https://chromiumcodereview.appspot.com/11274032	svn://svn.chromium.org/chrome/trunk/src@175595 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_http_job.cc b/net/url_request/url_request_http_job.cc <newline>index 982e76f..fe5f325 100644 <newline>--- a/net/url_request/url_request_http_job.cc <newline>+++ b/net/url_request/url_request_http_job.cc <newline>@@ -685,93 +685,50 @@ void URLRequestHttpJob::FetchResponseCookies( <newline> // NOTE: |ProcessStrictTransportSecurityHeader| and <newline> // |ProcessPublicKeyPinsHeader| have very similar structures, by design. <newline>-// They manipulate different parts of |TransportSecurityState::DomainState|, <newline>-// and they must remain complementary. If, in future changes here, there is <newline>-// any conflict between their policies (such as in |domain_state.mode|), you <newline>-// should resolve the conflict in favor of the more strict policy. <newline> void URLRequestHttpJob::ProcessStrictTransportSecurityHeader() { <newline>   DCHECK(response_info_); <newline>- <newline>-  const URLRequestContext* ctx = request_->context(); <newline>+  TransportSecurityState* security_state = <newline>+      request_->context()->transport_security_state(); <newline>   const SSLInfo& ssl_info = response_info_->ssl_info; <newline>-  // Only accept strict transport security headers on HTTPS connections that <newline>-  // have no certificate errors. <newline>+  // Only accept HSTS headers on HTTPS connections that have no <newline>+  // certificate errors. <newline>   if (!ssl_info.is_valid() || IsCertStatusError(ssl_info.cert_status) || <newline>-      !ctx->transport_security_state()) { <newline>+      !security_state) <newline>     return; <newline>-  } <newline>- <newline>-  TransportSecurityState* security_state = ctx->transport_security_state(); <newline>-  TransportSecurityState::DomainState domain_state; <newline>-  const std::string& host = request_info_.url.host(); <newline>- <newline>-  bool sni_available = <newline>-      SSLConfigService::IsSNIAvailable(ctx->ssl_config_service()); <newline>-  if (!security_state->GetDomainState(host, sni_available, &domain_state)) <newline>-    // |GetDomainState| may have altered |domain_state| while searching. If <newline>-    // not found, start with a fresh state. <newline>-    domain_state.upgrade_mode = <newline>-        TransportSecurityState::DomainState::MODE_FORCE_HTTPS; <newline>- <newline>-  HttpResponseHeaders* headers = GetResponseHeaders(); <newline>-  std::string value; <newline>-  void* iter = NULL; <newline>-  base::Time now = base::Time::Now(); <newline>   // http://tools.ietf.org/html/draft-ietf-websec-strict-transport-sec: <newline>   // <newline>   //   If a UA receives more than one STS header field in a HTTP response <newline>   //   message over secure transport, then the UA MUST process only the <newline>   //   first such header field. <newline>-  bool seen_sts = false; <newline>-  while (headers->EnumerateHeader(&iter, "Strict-Transport-Security", &value)) { <newline>-    if (seen_sts) <newline>-      return; <newline>-    seen_sts = true; <newline>-    TransportSecurityState::DomainState domain_state; <newline>-    if (domain_state.ParseSTSHeader(now, value)) <newline>-      security_state->EnableHost(host, domain_state); <newline>-  } <newline>+  HttpResponseHeaders* headers = GetResponseHeaders(); <newline>+  std::string value; <newline>+  if (headers->EnumerateHeader(NULL, "Strict-Transport-Security", &value)) <newline>+    security_state->AddHSTSHeader(request_info_.url.host(), value); <newline> } <newline> void URLRequestHttpJob::ProcessPublicKeyPinsHeader() { <newline>   DCHECK(response_info_); <newline>- <newline>-  const URLRequestContext* ctx = request_->context(); <newline>+  TransportSecurityState* security_state = <newline>+      request_->context()->transport_security_state(); <newline>   const SSLInfo& ssl_info = response_info_->ssl_info; <newline>-  // Only accept public key pins headers on HTTPS connections that have no <newline>+  // Only accept HPKP headers on HTTPS connections that have no <newline>   // certificate errors. <newline>   if (!ssl_info.is_valid() || IsCertStatusError(ssl_info.cert_status) || <newline>-      !ctx->transport_security_state()) { <newline>+      !security_state) <newline>     return; <newline>-  } <newline>- <newline>-  TransportSecurityState* security_state = ctx->transport_security_state(); <newline>-  TransportSecurityState::DomainState domain_state; <newline>-  const std::string& host = request_info_.url.host(); <newline>- <newline>-  bool sni_available = <newline>-      SSLConfigService::IsSNIAvailable(ctx->ssl_config_service()); <newline>-  if (!security_state->GetDomainState(host, sni_available, &domain_state)) <newline>-    // |GetDomainState| may have altered |domain_state| while searching. If <newline>-    // not found, start with a fresh state. <newline>-    domain_state.upgrade_mode = <newline>-        TransportSecurityState::DomainState::MODE_DEFAULT; <newline>+  // http://tools.ietf.org/html/draft-ietf-websec-key-pinning: <newline>+  // <newline>+  //   If a UA receives more than one PKP header field in an HTTP <newline>+  //   response message over secure transport, then the UA MUST process <newline>+  //   only the first such header field. <newline>   HttpResponseHeaders* headers = GetResponseHeaders(); <newline>-  void* iter = NULL; <newline>   std::string value; <newline>-  base::Time now = base::Time::Now(); <newline>- <newline>-  while (headers->EnumerateHeader(&iter, "Public-Key-Pins", &value)) { <newline>-    // Note that ParsePinsHeader updates |domain_state| (iff the header parses <newline>-    // correctly), but does not completely overwrite it. It just updates the <newline>-    // dynamic pinning metadata. <newline>-    if (domain_state.ParsePinsHeader(now, value, ssl_info)) <newline>-      security_state->EnableHost(host, domain_state); <newline>-  } <newline>+  if (headers->EnumerateHeader(NULL, "Public-Key-Pins", &value)) <newline>+    security_state->AddHPKPHeader(request_info_.url.host(), value, ssl_info); <newline> } <newline> void URLRequestHttpJob::OnStartCompleted(int result) {
52f52f478d5aa0830cd2b621e464178d2fbaa1f	kochi@chromium.org <kochi@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 8 02:02:33 2013 +0000	Add accounts.youtube.com in content_security_policy in manifest.json. This fixes a login hang with content security policy error output. TEST=manually login on Chrome OS.	168525		https://chromiumcodereview.appspot.com/11778017	svn://svn.chromium.org/chrome/trunk/src@175466 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/gaia_auth/manifest.json b/chrome/browser/resources/gaia_auth/manifest.json <newline>index 9b04c31..dd8a177 100644 <newline>--- a/chrome/browser/resources/gaia_auth/manifest.json <newline>+++ b/chrome/browser/resources/gaia_auth/manifest.json <newline>@@ -4,7 +4,7 @@ <newline>   "name": "GaiaAuthExtension", <newline>   "version": "0.0.1", <newline>   "manifest_version": 2, <newline>-  "content_security_policy": "default-src 'self'; script-src 'self'; frame-src 'self' https://accounts.google.com; style-src 'self' 'unsafe-inline'", <newline>+  "content_security_policy": "default-src 'self'; script-src 'self'; frame-src 'self' https://accounts.google.com https://accounts.youtube.com; style-src 'self' 'unsafe-inline'", <newline>   "description": "GAIA Component Extension", <newline>   "web_accessible_resources": [ <newline>     "main.css",
0ecca45278570c58a9e7fb4cd420e746f59c0a1	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jan 7 21:50:56 2013 +0000	Small extra validations on permission checks: reject "0" as a valid permission mask and require the path be absolute. Also add some per-file security owners to child_process_security_policy_impl.cc since it is highly sensitive.	168634		https://chromiumcodereview.appspot.com/11734030	svn://svn.chromium.org/chrome/trunk/src@175390 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/browser/child_process_security_policy_unittest.cc b/content/browser/child_process_security_policy_unittest.cc <newline>index 90befd6..e98b841 100644 <newline>--- a/content/browser/child_process_security_policy_unittest.cc <newline>+++ b/content/browser/child_process_security_policy_unittest.cc <newline>@@ -20,6 +20,12 @@ namespace { <newline> const int kRendererID = 42; <newline> const int kWorkerRendererID = kRendererID + 1; <newline>+#if defined(FILE_PATH_USES_DRIVE_LETTERS) <newline>+#define TEST_PATH(x) FILE_PATH_LITERAL("c:") FILE_PATH_LITERAL(x) <newline>+#else <newline>+#define TEST_PATH(x) FILE_PATH_LITERAL(x) <newline>+#endif <newline>+ <newline> class ChildProcessSecurityPolicyTestBrowserClient <newline>     : public TestContentBrowserClient { <newline>  public: <newline>@@ -294,21 +300,16 @@ TEST_F(ChildProcessSecurityPolicyTest, CanReadFiles) { <newline>   p->Add(kRendererID); <newline>-  EXPECT_FALSE(p->CanReadFile(kRendererID, <newline>-      FilePath(FILE_PATH_LITERAL("/etc/passwd")))); <newline>-  p->GrantReadFile(kRendererID, FilePath(FILE_PATH_LITERAL("/etc/passwd"))); <newline>-  EXPECT_TRUE(p->CanReadFile(kRendererID, <newline>-      FilePath(FILE_PATH_LITERAL("/etc/passwd")))); <newline>-  EXPECT_FALSE(p->CanReadFile(kRendererID, <newline>-      FilePath(FILE_PATH_LITERAL("/etc/shadow")))); <newline>+  EXPECT_FALSE(p->CanReadFile(kRendererID, FilePath(TEST_PATH("/etc/passwd")))); <newline>+  p->GrantReadFile(kRendererID, FilePath(TEST_PATH("/etc/passwd"))); <newline>+  EXPECT_TRUE(p->CanReadFile(kRendererID, FilePath(TEST_PATH("/etc/passwd")))); <newline>+  EXPECT_FALSE(p->CanReadFile(kRendererID, FilePath(TEST_PATH("/etc/shadow")))); <newline>   p->Remove(kRendererID); <newline>   p->Add(kRendererID); <newline>-  EXPECT_FALSE(p->CanReadFile(kRendererID, <newline>-      FilePath(FILE_PATH_LITERAL("/etc/passwd")))); <newline>-  EXPECT_FALSE(p->CanReadFile(kRendererID, <newline>-      FilePath(FILE_PATH_LITERAL("/etc/shadow")))); <newline>+  EXPECT_FALSE(p->CanReadFile(kRendererID, FilePath(TEST_PATH("/etc/passwd")))); <newline>+  EXPECT_FALSE(p->CanReadFile(kRendererID, FilePath(TEST_PATH("/etc/shadow")))); <newline>   p->Remove(kRendererID); <newline> } <newline>@@ -319,49 +320,40 @@ TEST_F(ChildProcessSecurityPolicyTest, CanReadDirectories) { <newline>   p->Add(kRendererID); <newline>-  EXPECT_FALSE(p->CanReadDirectory(kRendererID, <newline>-      FilePath(FILE_PATH_LITERAL("/etc/")))); <newline>-  p->GrantReadDirectory(kRendererID, FilePath(FILE_PATH_LITERAL("/etc/"))); <newline>-  EXPECT_TRUE(p->CanReadDirectory(kRendererID, <newline>-      FilePath(FILE_PATH_LITERAL("/etc/")))); <newline>-  EXPECT_TRUE(p->CanReadFile(kRendererID, <newline>-      FilePath(FILE_PATH_LITERAL("/etc/passwd")))); <newline>+  EXPECT_FALSE(p->CanReadDirectory(kRendererID, FilePath(TEST_PATH("/etc/")))); <newline>+  p->GrantReadDirectory(kRendererID, FilePath(TEST_PATH("/etc/"))); <newline>+  EXPECT_TRUE(p->CanReadDirectory(kRendererID, FilePath(TEST_PATH("/etc/")))); <newline>+  EXPECT_TRUE(p->CanReadFile(kRendererID, FilePath(TEST_PATH("/etc/passwd")))); <newline>   p->Remove(kRendererID); <newline>   p->Add(kRendererID); <newline>-  EXPECT_FALSE(p->CanReadDirectory(kRendererID, <newline>-      FilePath(FILE_PATH_LITERAL("/etc/")))); <newline>-  EXPECT_FALSE(p->CanReadFile(kRendererID, <newline>-      FilePath(FILE_PATH_LITERAL("/etc/passwd")))); <newline>+  EXPECT_FALSE(p->CanReadDirectory(kRendererID, FilePath(TEST_PATH("/etc/")))); <newline>+  EXPECT_FALSE(p->CanReadFile(kRendererID, FilePath(TEST_PATH("/etc/passwd")))); <newline>   // Just granting read permission as a file doesn't imply reading as a <newline>   // directory. <newline>-  p->GrantReadFile(kRendererID, FilePath(FILE_PATH_LITERAL("/etc/"))); <newline>-  EXPECT_TRUE(p->CanReadFile(kRendererID, <newline>-      FilePath(FILE_PATH_LITERAL("/etc/passwd")))); <newline>-  EXPECT_FALSE(p->CanReadDirectory(kRendererID, <newline>-      FilePath(FILE_PATH_LITERAL("/etc/")))); <newline>+  p->GrantReadFile(kRendererID, FilePath(TEST_PATH("/etc/"))); <newline>+  EXPECT_TRUE(p->CanReadFile(kRendererID, FilePath(TEST_PATH("/etc/passwd")))); <newline>+  EXPECT_FALSE(p->CanReadDirectory(kRendererID, FilePath(TEST_PATH("/etc/")))); <newline>   p->Remove(kRendererID); <newline> } <newline> TEST_F(ChildProcessSecurityPolicyTest, FilePermissions) { <newline>-  FilePath granted_file = FilePath(FILE_PATH_LITERAL("/home/joe")); <newline>-  FilePath sibling_file = FilePath(FILE_PATH_LITERAL("/home/bob")); <newline>-  FilePath child_file = FilePath(FILE_PATH_LITERAL("/home/joe/file")); <newline>-  FilePath parent_file = FilePath(FILE_PATH_LITERAL("/home")); <newline>-  FilePath parent_slash_file = FilePath(FILE_PATH_LITERAL("/home/")); <newline>-  FilePath child_traversal1 = FilePath( <newline>-      FILE_PATH_LITERAL("/home/joe/././file")); <newline>+  FilePath granted_file = FilePath(TEST_PATH("/home/joe")); <newline>+  FilePath sibling_file = FilePath(TEST_PATH("/home/bob")); <newline>+  FilePath child_file = FilePath(TEST_PATH("/home/joe/file")); <newline>+  FilePath parent_file = FilePath(TEST_PATH("/home")); <newline>+  FilePath parent_slash_file = FilePath(TEST_PATH("/home/")); <newline>+  FilePath child_traversal1 = FilePath(TEST_PATH("/home/joe/././file")); <newline>   FilePath child_traversal2 = FilePath( <newline>-      FILE_PATH_LITERAL("/home/joe/file/../otherfile")); <newline>-  FilePath evil_traversal1 = FilePath( <newline>-      FILE_PATH_LITERAL("/home/joe/../../etc/passwd")); <newline>+      TEST_PATH("/home/joe/file/../otherfile")); <newline>+  FilePath evil_traversal1 = FilePath(TEST_PATH("/home/joe/../../etc/passwd")); <newline>   FilePath evil_traversal2 = FilePath( <newline>-      FILE_PATH_LITERAL("/home/joe/./.././../etc/passwd")); <newline>-  FilePath self_traversal = FilePath( <newline>-      FILE_PATH_LITERAL("/home/joe/../joe/file")); <newline>+      TEST_PATH("/home/joe/./.././../etc/passwd")); <newline>+  FilePath self_traversal = FilePath(TEST_PATH("/home/joe/../joe/file")); <newline>+  FilePath relative_file = FilePath(FILE_PATH_LITERAL("home/joe")); <newline>   ChildProcessSecurityPolicyImpl* p = <newline>       ChildProcessSecurityPolicyImpl::GetInstance(); <newline>@@ -386,6 +378,7 @@ TEST_F(ChildProcessSecurityPolicyTest, FilePermissions) { <newline>                                        base::PLATFORM_FILE_READ)); <newline>   EXPECT_FALSE(p->HasPermissionsForFile(kRendererID, granted_file, <newline>                                         base::PLATFORM_FILE_CREATE)); <newline>+  EXPECT_FALSE(p->HasPermissionsForFile(kRendererID, granted_file, 0)); <newline>   EXPECT_FALSE(p->HasPermissionsForFile(kRendererID, granted_file, <newline>                                         base::PLATFORM_FILE_CREATE | <newline>                                         base::PLATFORM_FILE_OPEN_TRUNCATED | <newline>@@ -486,6 +479,13 @@ TEST_F(ChildProcessSecurityPolicyTest, FilePermissions) { <newline>                                         base::PLATFORM_FILE_OPEN | <newline>                                         base::PLATFORM_FILE_READ)); <newline>   p->Remove(kWorkerRendererID); <newline>+ <newline>+  p->Add(kRendererID); <newline>+  p->GrantPermissionsForFile(kRendererID, relative_file, <newline>+                             base::PLATFORM_FILE_OPEN); <newline>+  EXPECT_FALSE(p->HasPermissionsForFile(kRendererID, relative_file, <newline>+                                        base::PLATFORM_FILE_OPEN)); <newline>+  p->Remove(kRendererID); <newline> } <newline> TEST_F(ChildProcessSecurityPolicyTest, CanServiceWebUIBindings) { <newline>@@ -510,7 +510,7 @@ TEST_F(ChildProcessSecurityPolicyTest, RemoveRace) { <newline>       ChildProcessSecurityPolicyImpl::GetInstance(); <newline>   GURL url("file:///etc/passwd"); <newline>-  FilePath file(FILE_PATH_LITERAL("/etc/passwd")); <newline>+  FilePath file(TEST_PATH("/etc/passwd")); <newline>   p->Add(kRendererID);
4de0f651dc6cc7b22b7229a24fcc5295459f5d1	glotov@chromium.org <glotov@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 13 21:30:19 2012 +0000	System security setting dialog fix after powerwash TEST=manual	chromium:163943		https://chromiumcodereview.appspot.com/11416374	svn://svn.chromium.org/chrome/trunk/src@172964 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/chromeos/login/eula_screen_handler.cc b/chrome/browser/ui/webui/chromeos/login/eula_screen_handler.cc <newline>index 6a9d1d9..a1528d6 100644 <newline>--- a/chrome/browser/ui/webui/chromeos/login/eula_screen_handler.cc <newline>+++ b/chrome/browser/ui/webui/chromeos/login/eula_screen_handler.cc <newline>@@ -66,6 +66,8 @@ void EulaScreenHandler::GetLocalizedStrings( <newline>       l10n_util::GetStringUTF16(IDS_EULA_TPM_DESCRIPTION)); <newline>   localized_strings->SetString("eulaTpmKeyDesc", <newline>       l10n_util::GetStringUTF16(IDS_EULA_TPM_KEY_DESCRIPTION)); <newline>+  localized_strings->SetString("eulaTpmDescPowerwash", <newline>+      l10n_util::GetStringUTF16(IDS_EULA_TPM_KEY_DESCRIPTION_POWERWASH)); <newline>   localized_strings->SetString("eulaTpmBusy", <newline>       l10n_util::GetStringUTF16(IDS_EULA_TPM_BUSY)); <newline> #if defined(ENABLE_RLZ)
c56f0078b2f6936ada49807f09a21d74e7b8ef8	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Dec 12 00:32:05 2012 +0000	Update Java version metadata to current security baselines.	165540		https://codereview.chromium.org/11538013	svn://svn.chromium.org/chrome/trunk/src@172469 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/plugin_metadata/plugins_win.json b/chrome/browser/resources/plugin_metadata/plugins_win.json <newline>index 9f0aa12..3df997c 100644 <newline>--- a/chrome/browser/resources/plugin_metadata/plugins_win.json <newline>+++ b/chrome/browser/resources/plugin_metadata/plugins_win.json <newline>@@ -53,18 +53,18 @@ <newline>     ], <newline>     "versions": [ <newline>       { <newline>-        "version": "6.0.350", <newline>+        "version": "6.0.370", <newline>         "status": "requires_authorization", <newline>-        "comment": "Java SE 6 Update 35. '350' is not a typo." <newline>+        "comment": "Java SE 6 Update 37. '370' is not a typo." <newline>       }, <newline>       { <newline>         "version": "7", <newline>         "status": "out_of_date" <newline>       }, <newline>       { <newline>-        "version": "10.7", <newline>+        "version": "10.9", <newline>         "status": "requires_authorization", <newline>-        "comment": "Java SE 7u7" <newline>+        "comment": "Java SE 7u9" <newline>       } <newline>     ], <newline>     "lang": "en-US",
383fb7ccbdb2a9888031eb8a81b06403bb5d1a6	alexeypa@chromium.org <alexeypa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 11 07:17:19 2012 +0000	Launch the host under LocalService account at low integrity level with all privileges removed. It receives it's own window station and desktop only accessible by SYSTEM and logon SID the host process is running under. The security descriptor assigned to th eprocess gives access to SYSTEM and limited (query and terminate) access to built-in administrators group.	134694		https://chromiumcodereview.appspot.com/11428172	svn://svn.chromium.org/chrome/trunk/src@172268 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/remoting/remoting.gyp b/remoting/remoting.gyp <newline>index e4616d0..b0ccce9 100644 <newline>--- a/remoting/remoting.gyp <newline>+++ b/remoting/remoting.gyp <newline>@@ -442,10 +442,14 @@ <newline>             'host/win/omaha.h', <newline>             'host/win/scoped_thread_desktop.cc', <newline>             'host/win/scoped_thread_desktop.h', <newline>+            'host/win/security_descriptor.cc', <newline>+            'host/win/security_descriptor.h', <newline>             'host/win/session_desktop_environment_factory.cc', <newline>             'host/win/session_desktop_environment_factory.h', <newline>             'host/win/session_event_executor.cc', <newline>             'host/win/session_event_executor.h', <newline>+            'host/win/window_station_and_desktop.cc', <newline>+            'host/win/window_station_and_desktop.h', <newline>           ], <newline>           'conditions': [ <newline>             ['OS=="linux"', { <newline>@@ -492,6 +496,11 @@ <newline>                 ], <newline>               }, <newline>             }], <newline>+            ['OS=="win"', { <newline>+              'dependencies': [ <newline>+                '../sandbox/sandbox.gyp:sandbox', <newline>+              ], <newline>+            }], <newline>           ], <newline>         },  # end of target 'remoting_host' <newline>@@ -1881,6 +1890,7 @@ <newline>         'base/socket_reader.h', <newline>         'base/stoppable.cc', <newline>         'base/stoppable.h', <newline>+        'base/typed_buffer.h', <newline>         'base/util.cc', <newline>         'base/util.h', <newline>         'codec/audio_decoder.cc', <newline>@@ -2155,6 +2165,7 @@ <newline>         'base/compound_buffer_unittest.cc', <newline>         'base/resources_unittest.cc', <newline>         'base/shared_buffer_unittest.cc', <newline>+        'base/typed_buffer_unittest.cc', <newline>         'base/util_unittest.cc', <newline>         'client/audio_player_unittest.cc', <newline>         'client/key_event_mapper_unittest.cc', <newline>@@ -2212,8 +2223,6 @@ <newline>         'host/video_frame_capturer_mac_unittest.cc', <newline>         'host/video_frame_capturer_unittest.cc', <newline>         'host/video_scheduler_unittest.cc', <newline>-        'host/win/launch_process_with_token.cc', <newline>-        'host/win/launch_process_with_token.h', <newline>         'host/win/worker_process_launcher.cc', <newline>         'host/win/worker_process_launcher.h', <newline>         'host/win/worker_process_launcher_unittest.cc',
8b5327b8c92167311012acb015b3a2c74c3712b	dbeam@chromium.org <dbeam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 6 07:55:46 2012 +0000	[autofill] Adding a flag to bypass SSL security restrictions for interactive autocomplete. R=isherman@chromium.org TEST=--allow-insecure-interactive-autocomplete and launch a HTTP page that asks for CC info.	162785		https://chromiumcodereview.appspot.com/11428155	svn://svn.chromium.org/chrome/trunk/src@171446 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/chrome_switches.h b/chrome/common/chrome_switches.h <newline>index bee3650..4decd95 100644 <newline>--- a/chrome/common/chrome_switches.h <newline>+++ b/chrome/common/chrome_switches.h <newline>@@ -27,6 +27,7 @@ extern const char kActionBox[]; <newline> extern const char kAllowCrossOriginAuthPrompt[]; <newline> extern const char kAllowFileAccess[]; <newline> extern const char kAllowHTTPBackgroundPage[]; <newline>+extern const char kAllowInsecureInteractiveAutocomplete[]; <newline> extern const char kAllowLegacyExtensionManifests[]; <newline> extern const char kAllowNaClSocketAPI[]; <newline> extern const char kAllowOutdatedPlugins[];
8ce6c67a40398862de5f80b48b9b34fb579da7b	creis@chromium.org <creis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Dec 3 22:09:03 2012 +0000	Experimental: Fix HasWrongProcessForURL in --site-per-process mode. The experimental --site-per-process and --enable-strict-site-isolation modes disable reuse of renderer processes to improve security. The previous approach of making IsSuitableHost return false was breaking HasWrongProcessForURL, so we now return false in ShouldTryToReuseExistingProcessHost instead. TEST=none	160671		https://chromiumcodereview.appspot.com/11421179	svn://svn.chromium.org/chrome/trunk/src@170821 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/public/common/content_switches.h b/content/public/common/content_switches.h <newline>index dd23dbd..fc9835f 100644 <newline>--- a/content/public/common/content_switches.h <newline>+++ b/content/public/common/content_switches.h <newline>@@ -181,7 +181,7 @@ extern const char kEnableAcceleratedCompositingForOverflowScroll[]; <newline> extern const char kShowPaintRects[]; <newline> CONTENT_EXPORT extern const char kSimulateTouchScreenWithMouse[]; <newline> CONTENT_EXPORT extern const char kSingleProcess[]; <newline>-extern const char kSitePerProcess[]; <newline>+CONTENT_EXPORT extern const char kSitePerProcess[]; <newline> CONTENT_EXPORT extern const char kSkipGpuDataLoading[]; <newline> extern const char kSkipGpuFullInfoCollection[]; <newline> extern const char kTapDownDeferralTimeMs[];
24825de7018ee6947547490535f4edd28c54643	jochen@chromium.org <jochen@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 30 12:37:15 2012 +0000	[content shell] add support for a testRunner.setXSSAuditorEnabled I wanted to wire up a WebPreferences modifying testRunner method, and XSSAuditorEnabled will make >100 tests pass TEST=most of http/tests/security/xssAuditor passes	111316		https://chromiumcodereview.appspot.com/11316244	svn://svn.chromium.org/chrome/trunk/src@170439 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/shell/webkit_test_runner_host.h b/content/shell/webkit_test_runner_host.h <newline>index ea09ec2..596a910 100644 <newline>--- a/content/shell/webkit_test_runner_host.h <newline>+++ b/content/shell/webkit_test_runner_host.h <newline>@@ -13,6 +13,7 @@ <newline> #include "base/threading/non_thread_safe.h" <newline> #include "content/public/browser/render_view_host_observer.h" <newline> #include "content/public/browser/web_contents_observer.h" <newline>+#include "content/shell/shell_webpreferences.h" <newline> class SkBitmap; <newline>@@ -84,6 +85,7 @@ class WebKitTestController : public base::NonThreadSafe, <newline>   void set_printer(WebKitTestResultPrinter* printer) { <newline>     printer_.reset(printer); <newline>   } <newline>+  const ShellWebPreferences& web_preferences() const { return prefs_; } <newline>   // Interface for WebKitTestRunnerHost. <newline>   void NotifyDone(); <newline>@@ -126,6 +128,7 @@ class WebKitTestController : public base::NonThreadSafe, <newline>   void OnImageDump(const std::string& actual_pixel_hash, const SkBitmap& image); <newline>   void OnTextDump(const std::string& dump); <newline>   void OnPrintMessage(const std::string& message); <newline>+  void OnOverridePreferences(const ShellWebPreferences& prefs); <newline>   scoped_ptr<WebKitTestResultPrinter> printer_; <newline>@@ -143,6 +146,7 @@ class WebKitTestController : public base::NonThreadSafe, <newline>   bool is_printing_; <newline>   bool should_stay_on_page_after_handling_before_unload_; <newline>   bool wait_until_done_; <newline>+  ShellWebPreferences prefs_; <newline>   base::CancelableClosure watchdog_;
7de2f9b82e9dd71fc88c9b81a52bc204c6efb2f	pliard@chromium.org <pliard@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 27 15:47:17 2012 +0000	Fix CrossProcessNotificationMultiProcessTest.Basic on Android. On Android the ashmem API is used to deal with shared memory. This API doesn't provide any way to open a memory region created by another process for security reasons. The only way to share memory on Android is to share the underlying file descriptor between processes. This can be accomplished by: - Creating a new shared memory region in a process. Note that this region can be anonymous (i.e. the string provided to ashmem_create_region() can be empty). - Forking and keeping open both in the parent and child processes the file descriptor corresponding to the previously created memory region. - Doing an mmap() in both processes (nothing special here). The unit test was deadlocking (stuck in the while loop in the child process) since the call to CreateNamed() wasn't opening the existing shared memory region (created by the parent process) but was actually creating a new shared memory region. This means that the two processes were actually seeing different memory regions. Since this also works on POSIX platforms, the unit test was modified to follow this strategy on all POSIX systems (including Android). On Windows the old strategy (using non-anonymous shared memory) is still used.	136720		https://chromiumcodereview.appspot.com/11299159	svn://svn.chromium.org/chrome/trunk/src@169662 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/audio/cross_process_notification_unittest.cc b/media/audio/cross_process_notification_unittest.cc <newline>index 2726cf8..d1fbead 100644 <newline>--- a/media/audio/cross_process_notification_unittest.cc <newline>+++ b/media/audio/cross_process_notification_unittest.cc <newline>@@ -12,9 +12,7 @@ <newline> #include "testing/gtest/include/gtest/gtest.h" <newline> #include "testing/multiprocess_func_list.h" <newline>-#if defined(OS_POSIX) <newline> #include <utility>  // NOLINT <newline>-#endif <newline> namespace { <newline>@@ -75,6 +73,7 @@ class SingleNotifierWorker : public base::PlatformThread::Delegate { <newline>   } <newline>   virtual ~SingleNotifierWorker() {} <newline>+  // base::PlatformThread::Delegate: <newline>   virtual void ThreadMain() OVERRIDE { <newline>     for (size_t i = 0; i < repeats_; ++i) { <newline>       notifier_->Wait(); <newline>@@ -102,6 +101,7 @@ class MultiNotifierWorker : public base::PlatformThread::Delegate { <newline>   } <newline>   virtual ~MultiNotifierWorker() {} <newline>+  // base::PlatformThread::Delegate: <newline>   virtual void ThreadMain() OVERRIDE { <newline>     CrossProcessNotification::WaitForMultiple waiter(notifiers_); <newline>     for (size_t i = 0; i < repeats_; ++i) { <newline>@@ -163,6 +163,7 @@ class MultiNotifierWorkerFlagArray : public base::PlatformThread::Delegate { <newline>   } <newline>   virtual ~MultiNotifierWorkerFlagArray() {} <newline>+  // base::PlatformThread::Delegate: <newline>   virtual void ThreadMain() OVERRIDE { <newline>     for (size_t i = 0; i < repeats_; ++i) { <newline>       notifier_->Wait(); <newline>@@ -362,25 +363,10 @@ TEST(CrossProcessNotification, DISABLED_MultipleWaits1000) { <newline> } <newline> class CrossProcessNotificationMultiProcessTest : public base::MultiProcessTest { <newline>- public: <newline>-  static const char kSharedMemName[]; <newline>-  static const size_t kSharedMemSize = 1024; <newline>- <newline>- protected: <newline>-  virtual void SetUp() OVERRIDE { <newline>-    base::MultiProcessTest::SetUp(); <newline>-  } <newline>- <newline>-  virtual void TearDown() OVERRIDE { <newline>-    base::MultiProcessTest::TearDown(); <newline>-  } <newline> }; <newline>-// static <newline>-const char CrossProcessNotificationMultiProcessTest::kSharedMemName[] = <newline>-    "CrossProcessNotificationMultiProcessTest"; <newline>- <newline> namespace { <newline>+ <newline> // A very crude IPC mechanism that we use to set up the spawned child process <newline> // and the parent process. <newline> struct CrudeIpc { <newline>@@ -388,24 +374,31 @@ struct CrudeIpc { <newline>   CrossProcessNotification::IPCHandle handle_1; <newline>   CrossProcessNotification::IPCHandle handle_2; <newline> }; <newline>-}  // end namespace <newline>+ <newline>+#if defined(OS_POSIX) <newline>+const int kPosixChildSharedMem = 30; <newline>+#else <newline>+const char kSharedMemName[] = "CrossProcessNotificationMultiProcessTest"; <newline>+#endif <newline>+ <newline>+const size_t kSharedMemSize = 1024; <newline>+ <newline>+}  // namespace <newline> // The main routine of the child process.  Waits for the parent process <newline> // to copy handles over to the child and then uses a CrossProcessNotification to <newline> // wait and signal to the parent process. <newline> MULTIPROCESS_TEST_MAIN(CrossProcessNotificationChildMain) { <newline>+#if defined(OS_POSIX) <newline>+  base::SharedMemory mem( <newline>+      base::SharedMemoryHandle(kPosixChildSharedMem, true /* auto close */), <newline>+      false); <newline>+#else <newline>   base::SharedMemory mem; <newline>-  bool ok = mem.CreateNamed( <newline>-      CrossProcessNotificationMultiProcessTest::kSharedMemName, <newline>-      true, <newline>-      CrossProcessNotificationMultiProcessTest::kSharedMemSize); <newline>-  DCHECK(ok); <newline>-  if (!ok) { <newline>-    LOG(ERROR) << "Failed to open shared memory segment."; <newline>-    return -1; <newline>-  } <newline>+  CHECK(mem.CreateNamed(kSharedMemName, true, kSharedMemSize)); <newline>+#endif <newline>-  mem.Map(CrossProcessNotificationMultiProcessTest::kSharedMemSize); <newline>+  CHECK(mem.Map(kSharedMemSize)); <newline>   CrudeIpc* ipc = reinterpret_cast<CrudeIpc*>(mem.memory()); <newline>   while (!ipc->ready) <newline>@@ -422,18 +415,21 @@ MULTIPROCESS_TEST_MAIN(CrossProcessNotificationChildMain) { <newline> // new process.  Once that's done, it waits for the child process to signal <newline> // it's end and quits. <newline> TEST_F(CrossProcessNotificationMultiProcessTest, Basic) { <newline>-  base::SharedMemory mem; <newline>-  mem.Delete(kSharedMemName);  // In case a previous run was unsuccessful. <newline>-  bool ok = mem.CreateNamed(kSharedMemName, false, kSharedMemSize); <newline>-  ASSERT_TRUE(ok); <newline>- <newline>-  ASSERT_TRUE(mem.Map(kSharedMemSize)); <newline>- <newline>   CrossProcessNotification a, b; <newline>   ASSERT_TRUE(CrossProcessNotification::InitializePair(&a, &b)); <newline>   EXPECT_TRUE(a.IsValid()); <newline>   EXPECT_TRUE(b.IsValid()); <newline>+  base::SharedMemory mem; <newline>+ <newline>+#if defined(OS_POSIX) <newline>+  ASSERT_TRUE(mem.CreateAndMapAnonymous(kSharedMemSize)); <newline>+#else <newline>+  mem.Delete(kSharedMemName);  // In case a previous run was unsuccessful. <newline>+  ASSERT_TRUE(mem.CreateNamed(kSharedMemName, false, kSharedMemSize)); <newline>+  ASSERT_TRUE(mem.Map(kSharedMemSize)); <newline>+#endif <newline>+ <newline>   CrudeIpc* ipc = reinterpret_cast<CrudeIpc*>(mem.memory()); <newline>   ipc->ready = false; <newline>@@ -442,8 +438,9 @@ TEST_F(CrossProcessNotificationMultiProcessTest, Basic) { <newline>   EXPECT_TRUE(b.ShareToProcess( <newline>         base::kNullProcessHandle, &ipc->handle_1, &ipc->handle_2)); <newline>   base::FileHandleMappingVector fd_mapping_vec; <newline>-  fd_mapping_vec.push_back(std::pair<int, int>(ipc->handle_1.fd, <newline>-                                               kPosixChildSocket)); <newline>+  fd_mapping_vec.push_back(std::make_pair(ipc->handle_1.fd, kPosixChildSocket)); <newline>+  fd_mapping_vec.push_back( <newline>+      std::make_pair(mem.handle().fd, kPosixChildSharedMem)); <newline>   ipc->handle_1.fd = kPosixChildSocket; <newline>   base::ProcessHandle process = SpawnChild("CrossProcessNotificationChildMain", <newline>                                            fd_mapping_vec, false);
8a74e58af10651a4721ef9c1e357175f1c91d3d	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Nov 26 20:31:47 2012 +0000	Relax security review requirement for test-only content/shell messages.			https://codereview.chromium.org/11428009	svn://svn.chromium.org/chrome/trunk/src@169483 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/shell/OWNERS b/content/shell/OWNERS <newline>index 1582ce2..92bc6c5 100644 <newline>--- a/content/shell/OWNERS <newline>+++ b/content/shell/OWNERS <newline>@@ -1,11 +1,2 @@ <newline> jochen@chromium.org <newline> pfeldman@chromium.org <newline>- <newline>-# For security review of IPC message files. <newline>-per-file *_messages.h=set noparent <newline>-per-file *_messages.h=cdn@chromium.org <newline>-per-file *_messages.h=cevans@chromium.org <newline>-per-file *_messages.h=inferno@chromium.org <newline>-per-file *_messages.h=jschuh@chromium.org <newline>-per-file *_messages.h=palmer@chromium.org <newline>-per-file *_messages.h=tsepez@chromium.org
149acf3704cb1aad4b8fca7dc530eefa995066b	markus@chromium.org <markus@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Nov 22 03:51:04 2012 +0000	SECCOMP-BPF: Added support for greylisting of system calls. In addition to a Sandbox::Trap() handler, we now have a Sandbox::UnsafeTrap() handler. This feature should only be used for debugging purposes as it subverts the security of the sandbox. But it is useful to track down problems with the sandboxing policy. Within an unsafe trap handler, all sandbox restrictions are lifted. This, for example, allows us to allow system calls that would normally be denied by the policy, but to log their arguments, return value, and call stack. N.B.: this is the second attempt at submitting this CL. See https://chromiumcodereview.appspot.com/11363212/ for previous code reviews TEST=sandbox_linux_unittests NOTRY=true	130662		https://chromiumcodereview.appspot.com/11419121	svn://svn.chromium.org/chrome/trunk/src@169213 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/sandbox/linux/seccomp-bpf/syscall_unittest.cc b/sandbox/linux/seccomp-bpf/syscall_unittest.cc <newline>new file mode 100644 <newline>index 0000000..374a0fb <newline>--- /dev/null <newline>+++ b/sandbox/linux/seccomp-bpf/syscall_unittest.cc <newline>@@ -0,0 +1,113 @@ <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#include <asm/unistd.h> <newline>+#include <fcntl.h> <newline>+#include <sys/mman.h> <newline>+#include <unistd.h> <newline>+ <newline>+#include "base/posix/eintr_wrapper.h" <newline>+#include "sandbox/linux/seccomp-bpf/syscall.h" <newline>+#include "sandbox/linux/tests/unit_tests.h" <newline>+#include "testing/gtest/include/gtest/gtest.h" <newline>+ <newline>+using namespace playground2; <newline>+ <newline>+namespace { <newline>+ <newline>+// Different platforms use different symbols for the six-argument version <newline>+// of the mmap() system call. Test for the correct symbol at compile time. <newline>+#ifdef __NR_mmap2 <newline>+const int kMMapNr = __NR_mmap2; <newline>+#else <newline>+const int kMMapNr = __NR_mmap; <newline>+#endif <newline>+ <newline>+TEST(Syscall, WellKnownEntryPoint) { <newline>+  // Test that SandboxSyscall(-1) is handled specially. Don't do this on ARM, <newline>+  // where syscall(-1) crashes with SIGILL. Not running the test is fine, as we <newline>+  // are still testing ARM code in the next set of tests. <newline>+#if !defined(__arm__) <newline>+  EXPECT_NE(SandboxSyscall(-1), syscall(-1)); <newline>+#endif <newline>+ <newline>+  // If possible, test that SandboxSyscall(-1) returns the address right after <newline>+  // a kernel entry point. <newline>+#if defined(__i386__) <newline>+  EXPECT_EQ(0x80CDu, ((uint16_t *)SandboxSyscall(-1))[-1]);      // INT 0x80 <newline>+#elif defined(__x86_64__) <newline>+  EXPECT_EQ(0x050Fu, ((uint16_t *)SandboxSyscall(-1))[-1]);      // SYSCALL <newline>+#elif defined(__arm__) <newline>+#if defined(__thumb__) <newline>+  EXPECT_EQ(0xDF00u, ((uint16_t *)SandboxSyscall(-1))[-1]);      // SWI 0 <newline>+#else <newline>+  EXPECT_EQ(0xEF000000u, ((uint32_t *)SandboxSyscall(-1))[-1]);  // SVC 0 <newline>+#endif <newline>+#else <newline>+  #warning Incomplete test case; need port for target platform <newline>+#endif <newline>+} <newline>+ <newline>+TEST(Syscall, TrivialSyscallNoArgs) { <newline>+  // Test that we can do basic system calls <newline>+  EXPECT_EQ(SandboxSyscall(__NR_getpid), syscall(__NR_getpid)); <newline>+} <newline>+ <newline>+TEST(Syscall, ComplexSyscallSixArgs) { <newline>+  int fd; <newline>+  ASSERT_LE(0, fd = SandboxSyscall(__NR_open, "/dev/null", O_RDWR, 0L)); <newline>+ <newline>+  // Use mmap() to allocate some read-only memory <newline>+  char *addr0; <newline>+  ASSERT_NE((char *)NULL, <newline>+            addr0 = reinterpret_cast<char *>( <newline>+              SandboxSyscall(kMMapNr, (void *)NULL, 4096, PROT_READ, <newline>+                             MAP_PRIVATE|MAP_ANONYMOUS, fd, 0L))); <newline>+ <newline>+  // Try to replace the existing mapping with a read-write mapping <newline>+  char *addr1; <newline>+  ASSERT_EQ(addr0, <newline>+            addr1 = reinterpret_cast<char *>( <newline>+              SandboxSyscall(kMMapNr, addr0, 4096L, PROT_READ|PROT_WRITE, <newline>+                             MAP_PRIVATE|MAP_ANONYMOUS|MAP_FIXED, <newline>+                             fd, 0L))); <newline>+  ++*addr1; // This should not seg fault <newline>+ <newline>+  // Clean up <newline>+  EXPECT_EQ(0, SandboxSyscall(__NR_munmap, addr1, 4096L)); <newline>+  EXPECT_EQ(0, HANDLE_EINTR(SandboxSyscall(__NR_close, fd))); <newline>+ <newline>+  // Check that the offset argument (i.e. the sixth argument) is processed <newline>+  // correctly. <newline>+  ASSERT_GE(fd = SandboxSyscall(__NR_open, "/proc/self/exe", O_RDONLY, 0L), 0); <newline>+  char *addr2, *addr3; <newline>+  ASSERT_NE((char *)NULL, <newline>+            addr2 = reinterpret_cast<char *>( <newline>+              SandboxSyscall(kMMapNr, (void *)NULL, 8192L, PROT_READ, <newline>+                             MAP_PRIVATE, fd, 0L))); <newline>+  ASSERT_NE((char *)NULL, <newline>+            addr3 = reinterpret_cast<char *>( <newline>+              SandboxSyscall(kMMapNr, (void *)NULL, 4096L, PROT_READ, <newline>+                             MAP_PRIVATE, fd, <newline>+#if defined(__NR_mmap2) <newline>+                      1L <newline>+#else <newline>+                      4096L <newline>+#endif <newline>+                      ))); <newline>+  EXPECT_EQ(0, memcmp(addr2 + 4096, addr3, 4096)); <newline>+ <newline>+  // Just to be absolutely on the safe side, also verify that the file <newline>+  // contents matches what we are getting from a read() operation. <newline>+  char buf[8192]; <newline>+  EXPECT_EQ(8192, SandboxSyscall(__NR_read, fd, buf, 8192L)); <newline>+  EXPECT_EQ(0, memcmp(addr2, buf, 8192)); <newline>+ <newline>+  // Clean up <newline>+  EXPECT_EQ(0, SandboxSyscall(__NR_munmap, addr2, 8192L)); <newline>+  EXPECT_EQ(0, SandboxSyscall(__NR_munmap, addr3, 4096L)); <newline>+  EXPECT_EQ(0, HANDLE_EINTR(SandboxSyscall(__NR_close, fd))); <newline>+} <newline>+ <newline>+} // namespace
a0bb718e2027f6205433ddd0d78783595b5c40a	hshi@chromium.org <hshi@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 21 19:33:59 2012 +0000	Change zip::ZipFiles() function to take a file descriptor for the dest zip file. We want the browser process to validate the destination zip file path to make sure it is not asked to overwrite an existing file or to a directory that could cause security problems. By replacing the destination file path |dest_file| with a file descriptor |dest_fd|: this CL allows the dest file to be opened and owned by the browser process then passed via IPC to utility process. There is no need to have a duplicate function that takes destination file path. The new function will be used for CrOS only. TEST=builds, passes unit tests. See also https://codereview.chromium.org/11392005/ for relevant discussion.	138359	nzipFile(zip_file, false);	https://chromiumcodereview.appspot.com/11413100	svn://svn.chromium.org/chrome/trunk/src@169090 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/zip_unittest.cc b/chrome/common/zip_unittest.cc <newline>index 4d3d5d8..2496170 100644 <newline>--- a/chrome/common/zip_unittest.cc <newline>+++ b/chrome/common/zip_unittest.cc <newline>@@ -160,6 +160,7 @@ TEST_F(ZipTest, ZipIgnoreHidden) { <newline> } <newline>+#if defined(OS_POSIX) <newline> TEST_F(ZipTest, ZipFiles) { <newline>   FilePath src_dir; <newline>   ASSERT_TRUE(PathService::Get(chrome::DIR_TEST_DATA, &src_dir)); <newline>@@ -169,7 +170,12 @@ TEST_F(ZipTest, ZipFiles) { <newline>   ASSERT_TRUE(temp_dir.CreateUniqueTempDir()); <newline>   FilePath zip_file = temp_dir.path().AppendASCII("out.zip"); <newline>-  EXPECT_TRUE(zip::ZipFiles(src_dir, zip_file_list_, zip_file)); <newline>+  const int flags = base::PLATFORM_FILE_CREATE | base::PLATFORM_FILE_WRITE; <newline>+  const base::PlatformFile zip_fd = <newline>+      base::CreatePlatformFile(zip_file, flags, NULL, NULL); <newline>+  ASSERT_LE(0, zip_fd); <newline>+  EXPECT_TRUE(zip::ZipFiles(src_dir, zip_file_list_, zip_fd)); <newline>+  base::ClosePlatformFile(zip_fd); <newline>   zip::ZipReader reader; <newline>   EXPECT_TRUE(reader.Open(zip_file)); <newline>@@ -181,6 +187,7 @@ TEST_F(ZipTest, ZipFiles) { <newline>     EXPECT_EQ(entry_info->file_path(), zip_file_list_[i]); <newline>   } <newline> } <newline>+#endif  // defined(OS_POSIX) <newline> }  // namespace
18e8348b6eb3b026bbafaafc615888c4f39c5ce	dalecurtis@chromium.org <dalecurtis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 20 04:36:55 2012 +0000	Roll FFMpeg DEPS to pick up security fixes. - Adds a test case for the issue. - Fixes ordering issues with EXPECT_EQ() - Notes a recent memory leak regression. - Fixes stale errors and hashes for unit test. Includes: 82ae69c Prevent stack buffer overflow during AAC decoding. TEST=unit test under asan/valgrind.	161639		https://chromiumcodereview.appspot.com/11414076	svn://svn.chromium.org/chrome/trunk/src@168731 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/filters/pipeline_integration_test_base.cc b/media/filters/pipeline_integration_test_base.cc <newline>index 6dc6a4d..4e78c2b 100644 <newline>--- a/media/filters/pipeline_integration_test_base.cc <newline>+++ b/media/filters/pipeline_integration_test_base.cc <newline>@@ -47,7 +47,7 @@ void PipelineIntegrationTestBase::OnStatusCallback( <newline> void PipelineIntegrationTestBase::OnStatusCallbackChecked( <newline>     PipelineStatus expected_status, <newline>     PipelineStatus status) { <newline>-  EXPECT_EQ(status, expected_status); <newline>+  EXPECT_EQ(expected_status, status); <newline>   OnStatusCallback(status); <newline> }
bfa3967867eaec1b667a0bc453b0b5073494a21	dglazkov@chromium.org <dglazkov@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 16 17:53:39 2012 +0000	Revert 168224 - Update V8 to version 3.15.4. Caused failures in WebKit layout tests: Regressions: Unexpected text-only failures (6) fast/dom/Window/replaceable.html [ Failure ] http/tests/security/cross-frame-access-object-prototype.html [ Failure ] inspector/console/command-line-api-inspect.html [ Failure ] inspector/console/console-format-collections.html [ Failure ] inspector/runtime/runtime-localStorage-getProperties.html [ Failure ] Regressions: Unexpected crashes (1) inspector/console/console-dir.html [ Crash ] TBR=yangguo@chromium.org			https://codereview.chromium.org/11411036	svn://svn.chromium.org/chrome/trunk/src@168240 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index c03462a..9cb1105 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -34,7 +34,7 @@ vars = { <newline>   # Three lines of non-changing comments so that <newline>   # the commit queue can handle CLs rolling Skia <newline>   # and V8 without interference from each other. <newline>-  "v8_revision": "12994", <newline>+  "v8_revision": "12947", <newline>   # Three lines of non-changing comments so that <newline>   # the commit queue can handle CLs rolling WebRTC <newline>   # and V8 without interference from each other.
a3436f4d886f64b850f7d58368e70c231ad1535	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 9 19:39:19 2012 +0000	Chrome security team IPC message owners.			https://codereview.chromium.org/11188047	svn://svn.chromium.org/chrome/trunk/src@166956 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/android_webview/common/OWNERS b/android_webview/common/OWNERS <newline>new file mode 100644 <newline>index 0000000..0abb418 <newline>--- /dev/null <newline>+++ b/android_webview/common/OWNERS <newline>@@ -0,0 +1,8 @@ <newline>+# Changes to IPC messages require a security review to avoid introducing <newline>+# new sandbox escapes. <newline>+per-file *_messages.h=set noparent <newline>+per-file *_messages.h=cdn@chromium.org <newline>+per-file *_messages.h=jln@chromium.org <newline>+per-file *_messages.h=jschuh@chromium.org <newline>+per-file *_messages.h=palmer@chromium.org <newline>+per-file *_messages.h=tsepez@chromium.org
440fc2d3a7d996078ac97fe95d6ef29f28ed0a5	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 9 19:38:28 2012 +0000	Chrome security team IPC message owners.			https://codereview.chromium.org/11191041	svn://svn.chromium.org/chrome/trunk/src@166955 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/ui/metro_viewer/OWNERS b/ui/metro_viewer/OWNERS <newline>new file mode 100644 <newline>index 0000000..0abb418 <newline>--- /dev/null <newline>+++ b/ui/metro_viewer/OWNERS <newline>@@ -0,0 +1,8 @@ <newline>+# Changes to IPC messages require a security review to avoid introducing <newline>+# new sandbox escapes. <newline>+per-file *_messages.h=set noparent <newline>+per-file *_messages.h=cdn@chromium.org <newline>+per-file *_messages.h=jln@chromium.org <newline>+per-file *_messages.h=jschuh@chromium.org <newline>+per-file *_messages.h=palmer@chromium.org <newline>+per-file *_messages.h=tsepez@chromium.org
5146d5b7621bc24d23e2e0c3e2b36d81588344f	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 9 19:32:51 2012 +0000	Add security team as IPC message file owners. TBR=brettw@chromium.org			https://codereview.chromium.org/11186034	svn://svn.chromium.org/chrome/trunk/src@166953 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/ppapi/proxy/OWNERS b/ppapi/proxy/OWNERS <newline>index 86dac7d..1980838 100644 <newline>--- a/ppapi/proxy/OWNERS <newline>+++ b/ppapi/proxy/OWNERS <newline>@@ -1,2 +1,11 @@ <newline> piman@chromium.org <newline> viettrungluu@chromium.org <newline>+ <newline>+# Changes to IPC messages require a security review to avoid introducing <newline>+# new sandbox escapes. <newline>+per-file *_messages.h=set noparent <newline>+per-file *_messages.h=cdn@chromium.org <newline>+per-file *_messages.h=jln@chromium.org <newline>+per-file *_messages.h=jschuh@chromium.org <newline>+per-file *_messages.h=palmer@chromium.org <newline>+per-file *_messages.h=tsepez@chromium.org
d5c72ca5bb1bb7bcb9a99a76505e9cfba48dec7	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 9 19:26:28 2012 +0000	Add security team as IPC file reviewers. TBR=mirandac@chromium.org, kalman@chromium.org,			https://codereview.chromium.org/11191040	svn://svn.chromium.org/chrome/trunk/src@166950 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/safe_browsing/OWNERS b/chrome/common/safe_browsing/OWNERS <newline>new file mode 100644 <newline>index 0000000..881aaa5 <newline>--- /dev/null <newline>+++ b/chrome/common/safe_browsing/OWNERS <newline>@@ -0,0 +1,8 @@ <newline>+# For security review of IPC message files. <newline>+per-file *_messages.h=set noparent <newline>+per-file *_messages.h=cdn@chromium.org <newline>+per-file *_messages.h=cevans@chromium.org <newline>+per-file *_messages.h=inferno@chromium.org <newline>+per-file *_messages.h=jschuh@chromium.org <newline>+per-file *_messages.h=palmer@chromium.org <newline>+per-file *_messages.h=tsepez@chromium.org
d62c144cc8e7276f0f384990d219698dadd01c0	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 9 19:13:34 2012 +0000	Add security team as owners of IPC files. TBR=jam@chromium.org,piman@chromium.org,michaeln@chromium.org,scherkus@chromium.org,pfeldman@chromium.org			https://codereview.chromium.org/11184030	svn://svn.chromium.org/chrome/trunk/src@166946 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/shell/OWNERS b/content/shell/OWNERS <newline>index 92bc6c5..1582ce2 100644 <newline>--- a/content/shell/OWNERS <newline>+++ b/content/shell/OWNERS <newline>@@ -1,2 +1,11 @@ <newline> jochen@chromium.org <newline> pfeldman@chromium.org <newline>+ <newline>+# For security review of IPC message files. <newline>+per-file *_messages.h=set noparent <newline>+per-file *_messages.h=cdn@chromium.org <newline>+per-file *_messages.h=cevans@chromium.org <newline>+per-file *_messages.h=inferno@chromium.org <newline>+per-file *_messages.h=jschuh@chromium.org <newline>+per-file *_messages.h=palmer@chromium.org <newline>+per-file *_messages.h=tsepez@chromium.org
950981b3d4fbd2a514558f667284c7b3d7abc48	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 23 23:03:35 2012 +0000	Move IPCMessageStart enum into it own file with security team OWNERS, so that new message files can't be added to chromium without triggering a security review.			https://chromiumcodereview.appspot.com/11048038	svn://svn.chromium.org/chrome/trunk/src@163713 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/ipc/ipc_message_utils.h b/ipc/ipc_message_utils.h <newline>index 757bae4..0e4c68e 100644 <newline>--- a/ipc/ipc_message_utils.h <newline>+++ b/ipc/ipc_message_utils.h <newline>@@ -17,6 +17,7 @@ <newline> #include "base/stringprintf.h" <newline> #include "base/string_util.h" <newline> #include "base/tuple.h" <newline>+#include "ipc/ipc_message_start.h" <newline> #include "ipc/ipc_param_traits.h" <newline> #include "ipc/ipc_sync_message.h" <newline>@@ -43,75 +44,6 @@ <newline> #error "Please add the noinline property for your new compiler here." <newline> #endif <newline>-// Used by IPC_BEGIN_MESSAGES so that each message class starts from a unique <newline>-// base.  Messages have unique IDs across channels in order for the IPC logging <newline>-// code to figure out the message class from its ID. <newline>-enum IPCMessageStart { <newline>-  AutomationMsgStart = 0, <newline>-  ViewMsgStart, <newline>-  PluginMsgStart, <newline>-  ProfileImportMsgStart, <newline>-  TestMsgStart, <newline>-  DevToolsMsgStart, <newline>-  WorkerMsgStart, <newline>-  NaClMsgStart, <newline>-  UtilityMsgStart, <newline>-  GpuMsgStart, <newline>-  ServiceMsgStart, <newline>-  PpapiMsgStart, <newline>-  FirefoxImporterUnittestMsgStart, <newline>-  FileUtilitiesMsgStart, <newline>-  MimeRegistryMsgStart, <newline>-  DatabaseMsgStart, <newline>-  DOMStorageMsgStart, <newline>-  IndexedDBMsgStart, <newline>-  PepperFileMsgStart, <newline>-  SpeechRecognitionMsgStart, <newline>-  PepperMsgStart, <newline>-  AutofillMsgStart, <newline>-  SafeBrowsingMsgStart, <newline>-  P2PMsgStart, <newline>-  SocketStreamMsgStart, <newline>-  ResourceMsgStart, <newline>-  FileSystemMsgStart, <newline>-  ChildProcessMsgStart, <newline>-  ClipboardMsgStart, <newline>-  BlobMsgStart, <newline>-  AppCacheMsgStart, <newline>-  DeviceMotionMsgStart, <newline>-  DeviceOrientationMsgStart, <newline>-  DesktopNotificationMsgStart, <newline>-  GeolocationMsgStart, <newline>-  AudioMsgStart, <newline>-  ChromeMsgStart, <newline>-  DragMsgStart, <newline>-  PrintMsgStart, <newline>-  SpellCheckMsgStart, <newline>-  ExtensionMsgStart, <newline>-  VideoCaptureMsgStart, <newline>-  QuotaMsgStart, <newline>-  IconMsgStart, <newline>-  TextInputClientMsgStart, <newline>-  ChromeUtilityMsgStart, <newline>-  MediaStreamMsgStart, <newline>-  ChromeBenchmarkingMsgStart, <newline>-  IntentsMsgStart, <newline>-  JavaBridgeMsgStart, <newline>-  GamepadMsgStart, <newline>-  ShellMsgStart, <newline>-  AccessibilityMsgStart, <newline>-  PrerenderMsgStart, <newline>-  ChromotingMsgStart, <newline>-  OldBrowserPluginMsgStart, <newline>-  BrowserPluginMsgStart, <newline>-  HyphenatorMsgStart, <newline>-  AndroidWebViewMsgStart, <newline>-  MetroViewerMsgStart, <newline>-  CCMsgStart, <newline>-  MediaPlayerMsgStart, <newline>-  LastIPCMsgStart      // Must come last. <newline>-}; <newline>- <newline> class FilePath; <newline> class NullableString16;
43d52e3d20fbd72d5fdb9cb0a57dccf10600742	dalecurtis@google.com <dalecurtis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Sun Oct 21 22:20:04 2012 +0000	Using Ronald's libclang based converter, we're able to translate ffmpeg from C99 to C89 syntax and compile through MSVC++! This is awesome for many reasons: - Better performance! MSVC compiled code is as fast as some of the hand rolled assembly in certain cases (per rbultje). - Debugging symbols! (!!!) Crash dumps will now be symbolized with all symbols instead of the missing symbols traces we get in crash reports today. - No more hand rolling binaries every time ffmpeg needs a security fix or someone wants to make a change! - Greatly reduced binary size, the Chrome DLLs are ~3.2mb smaller and the Chromium DLLs ~2.3mb smaller: Chrome: 5205049 -> 1817600, Chromium: 3587185 -> 1147904. This change also cleans up the media library initialization code and gets rid of the old dll names in various places.  There is still one other locations which need to be updated separately: http://src.chromium.org/viewvc/chrome/trunk/tools/build/site_config/config.py The downside is this will add ~3minutes of compile time (on T3500) for non-GOMA users and ~30 seconds for GOMA users (-j 256). More information available here: https://gerrit.chromium.org/gerrit/#/c/34728/ TEST=Manual testing. Unit tests. It actually compiles!	39887		https://codereview.chromium.org/11036039	svn://svn.chromium.org/chrome/trunk/src@163213 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/base/media_win.cc b/media/base/media_win.cc <newline>index f0f78ab..616d370 100644 <newline>--- a/media/base/media_win.cc <newline>+++ b/media/base/media_win.cc <newline>@@ -13,7 +13,6 @@ <newline> #include "base/file_path.h" <newline> #include "base/logging.h" <newline>-#include "base/memory/scoped_ptr.h" <newline> #include "base/native_library.h" <newline> #include "base/path_service.h" <newline>@@ -21,97 +20,38 @@ <newline> namespace media { <newline>-enum FFmpegDLLKeys { <newline>-  FILE_LIBAVCODEC,   // full path to libavcodec media decoding library. <newline>-  FILE_LIBAVFORMAT,  // full path to libavformat media parsing library. <newline>-  FILE_LIBAVUTIL,    // full path to libavutil media utility library. <newline>-}; <newline>- <newline>-// Retrieves the DLLName for the given key. <newline>-static const char* GetDLLName(FFmpegDLLKeys dll_key) { <newline>-  // TODO(ajwong): Do we want to lock to a specific ffmpeg version? <newline>-  switch (dll_key) { <newline>-    case FILE_LIBAVCODEC: <newline>-      return "avcodec-54.dll"; <newline>-    case FILE_LIBAVFORMAT: <newline>-      return "avformat-54.dll"; <newline>-    case FILE_LIBAVUTIL: <newline>-      return "avutil-51.dll"; <newline>-    default: <newline>-      LOG(DFATAL) << "Invalid DLL key requested: " << dll_key; <newline>-      return ""; <newline>-  } <newline>-} <newline>+// FFmpeg library name. <newline>+static const char* kFFmpegDLL = "ffmpegsumo.dll"; <newline>+// Use a global to indicate whether the library has been initialized or not.  We <newline>+// rely on function level static initialization in InitializeMediaLibrary() to <newline>+// guarantee this is only set once in a thread safe manner. <newline> static bool g_media_library_is_initialized = false; <newline>-// Attempts to initialize the media library (loading DLLs, DSOs, etc.). <newline>-// Returns true if everything was successfully initialized, false otherwise. <newline>-bool InitializeMediaLibrary(const FilePath& base_path) { <newline>-  if (g_media_library_is_initialized) <newline>-    return true; <newline>+static bool InitializeMediaLibraryInternal(const FilePath& base_path) { <newline>+  DCHECK(!g_media_library_is_initialized); <newline>   // LoadLibraryEx(..., LOAD_WITH_ALTERED_SEARCH_PATH) cannot handle <newline>   // relative path. <newline>   if (!base_path.IsAbsolute()) <newline>     return false; <newline>-  FFmpegDLLKeys path_keys[] = { <newline>-    media::FILE_LIBAVCODEC, <newline>-    media::FILE_LIBAVFORMAT, <newline>-    media::FILE_LIBAVUTIL <newline>-  }; <newline>-  HMODULE libs[arraysize(path_keys)] = {NULL}; <newline>- <newline>-  for (size_t i = 0; i < arraysize(path_keys); ++i) { <newline>-    FilePath path = base_path.AppendASCII(GetDLLName(path_keys[i])); <newline>- <newline>-    // Use alternate DLL search path so we don't load dependencies from the <newline>-    // system path.  Refer to http://crbug.com/35857 <newline>-    const wchar_t* cpath = path.value().c_str(); <newline>-    libs[i] = ::LoadLibraryEx(cpath, NULL, LOAD_WITH_ALTERED_SEARCH_PATH); <newline>-    if (!libs[i]) <newline>-      break; <newline>-  } <newline>- <newline>-  // Check that we loaded all libraries successfully.  We only need to check the <newline>-  // last array element because the loop above will break without initializing <newline>-  // it on any prior error. <newline>-  bool media_library_is_initialized = (libs[arraysize(libs) - 1] != NULL); <newline>+  // Use alternate DLL search path so we don't load dependencies from the <newline>+  // system path.  Refer to http://crbug.com/35857 <newline>+  HMODULE lib = ::LoadLibraryEx( <newline>+      base_path.AppendASCII(kFFmpegDLL).value().c_str(), NULL, <newline>+      LOAD_WITH_ALTERED_SEARCH_PATH); <newline>-  if (!media_library_is_initialized) { <newline>-    // Free any loaded libraries if we weren't successful. <newline>-    for (size_t i = 0; i < arraysize(libs) && libs[i] != NULL; ++i) { <newline>-      FreeLibrary(libs[i]); <newline>-      libs[i] = NULL;  // Just to be safe. <newline>-    } <newline>-    return false; <newline>-  } <newline>- <newline>-  // Workaround for http://crbug.com/110983 <newline>-  // LoadLibrary() sometimes AV's when called by delay load helper when we <newline>-  // call function in ffmpeg for the first time, and we don't know why. <newline>-  // Force delay load helper to fix import table here instead. <newline>-  // Theoretically, there is no need to call LoadLibrary() before <newline>-  // __HrLoadAllImportsForDll(), it will call LoadLibrary() itself, but there <newline>-  // is no way to specify LOAD_WITH_ALTERED_SEARCH_PATH when calling <newline>-  // __HrLoadAllImportsForDll(). So we do everything in 2 steps -- first call <newline>-  // LoadLibraryEx(..., LOAD_WITH_ALTERED_SEARCH_PATH), then call <newline>-  // __HrLoadAllImportsForDll(). Overhead is negligible compared to disk <newline>-  // access time. <newline>-  // Note: in case of error we are not unloading DLL because unload requires <newline>-  //       extra resources and should not be necessary; if we ever decide to <newline>-  //       unload by calling __FUnloadDelayLoadedDLL() please add /DELAY:UNLOAD <newline>-  //       to the linker command line. <newline>-  // TODO(enal): remove that code when we find underlying issue. Delay load <newline>-  // should work if library is alreday in memory, regardless of permissions... <newline>-  for (size_t i = 0; i < arraysize(path_keys); ++i) { <newline>-    if (FAILED(::__HrLoadAllImportsForDll(GetDLLName(path_keys[i])))) <newline>-      media_library_is_initialized = false; <newline>-  } <newline>+  // Check that we loaded the library successfully. <newline>+  g_media_library_is_initialized = (lib != NULL); <newline>+  return g_media_library_is_initialized; <newline>+} <newline>-  g_media_library_is_initialized = media_library_is_initialized; <newline>-  return media_library_is_initialized; <newline>+bool InitializeMediaLibrary(const FilePath& base_path) { <newline>+  static const bool kMediaLibraryInitialized = <newline>+      InitializeMediaLibraryInternal(base_path); <newline>+  DCHECK_EQ(kMediaLibraryInitialized, g_media_library_is_initialized); <newline>+  return kMediaLibraryInitialized; <newline> } <newline> void InitializeMediaLibraryForTesting() {
8a9475053cd223b33d8d943a26dda929a5b2195	lazyboy@chromium.org <lazyboy@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 10 19:49:15 2012 +0000	<browser> Display a warning that "stability and security will suffer" when browser plugin is enabled for all view types via flags. We don't want to allow browser plugin to be enabled for regular pages since it breaks same origin policy, the flag to force it exists solely for debugging purposes. TEST=With the flag, I see the warning infobar. No change without the flag.	154361		https://chromiumcodereview.appspot.com/11013047	svn://svn.chromium.org/chrome/trunk/src@161160 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/startup/bad_flags_prompt.cc b/chrome/browser/ui/startup/bad_flags_prompt.cc <newline>index b10e9cc..8057a60 100644 <newline>--- a/chrome/browser/ui/startup/bad_flags_prompt.cc <newline>+++ b/chrome/browser/ui/startup/bad_flags_prompt.cc <newline>@@ -26,6 +26,9 @@ void ShowBadFlagsPrompt(Browser* browser) { <newline>     switches::kNoSandbox, <newline>     switches::kInProcessWebGL, <newline>     switches::kDisableWebSecurity, <newline>+    // Browser plugin is dangerous on regular pages because it breaks the Same <newline>+    // Origin Policy. <newline>+    switches::kEnableBrowserPluginForAllViewTypes, <newline>     NULL <newline>   };
bfa62a2df740e2dffd771604de821b003d4ba46	dalecurtis@google.com <dalecurtis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Oct 6 00:00:36 2012 +0000	Add support for windows def generation from sigs. Used to generate the export table for the MSVC build of ffmpeg.  Necessary since we don't want to decorate all the ffmpeg methods we use with __declspec(dllexport) a la MEDIA_EXPORT. Doing things this way allows us to keep the security of having an explicit whitelist for ffmpeg symbols. TEST=MSVC version of ffmpeg builds and runs.  Unittests.	39887		https://codereview.chromium.org/11027054	svn://svn.chromium.org/chrome/trunk/src@160524 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/tools/generate_stubs/generate_stubs.py b/tools/generate_stubs/generate_stubs.py <newline>index 424d24f..1c97c25 100755 <newline>--- a/tools/generate_stubs/generate_stubs.py <newline>+++ b/tools/generate_stubs/generate_stubs.py <newline>@@ -78,6 +78,7 @@ INVALID_C_IDENT_CHARS = re.compile('[^_a-zA-Z0-9]') <newline> # Constants defning the supported file types options. <newline> FILE_TYPE_WIN = 'windows_lib' <newline> FILE_TYPE_POSIX_STUB = 'posix_stubs' <newline>+FILE_TYPE_WIN_DEF = 'windows_def' <newline> # Template for generating a stub function definition.  Includes a forward <newline> # declaration marking the symbol as weak.  This template takes the following <newline>@@ -875,19 +876,21 @@ def CreateOptionParser(): <newline>                     '--intermediate_dir', <newline>                     dest='intermediate_dir', <newline>                     default=None, <newline>-                    help='Locaiton of intermediate files.') <newline>+                    help=('Location of intermediate files. Ignored for %s type' <newline>+                          % FILE_TYPE_WIN_DEF)) <newline>   parser.add_option('-t', <newline>                     '--type', <newline>                     dest='type', <newline>                     default=None, <newline>-                    help=('Type of file. Either "%s" or "%s"' % <newline>-                          (FILE_TYPE_POSIX_STUB, FILE_TYPE_WIN))) <newline>+                    help=('Type of file. Valid types are "%s" or "%s" or "%s"' % <newline>+                          (FILE_TYPE_POSIX_STUB, FILE_TYPE_WIN, <newline>+                           FILE_TYPE_WIN_DEF))) <newline>   parser.add_option('-s', <newline>                     '--stubfile_name', <newline>                     dest='stubfile_name', <newline>                     default=None, <newline>-                    help=('Name of posix_stubs output file. Ignored for ' <newline>-                          '%s type.' % FILE_TYPE_WIN)) <newline>+                    help=('Name of posix_stubs output file. Only valid with ' <newline>+                          '%s type.' % FILE_TYPE_POSIX_STUB)) <newline>   parser.add_option('-p', <newline>                     '--path_from_source', <newline>                     dest='path_from_source', <newline>@@ -906,6 +909,13 @@ def CreateOptionParser(): <newline>                     help=('File to insert after the system includes in the ' <newline>                           'generated stub implemenation file. Ignored for ' <newline>                           '%s type.' % FILE_TYPE_WIN)) <newline>+  parser.add_option('-m', <newline>+                    '--module_name', <newline>+                    dest='module_name', <newline>+                    default=None, <newline>+                    help=('Name of output DLL or LIB for DEF creation using ' <newline>+                          '%s type.' % FILE_TYPE_WIN_DEF)) <newline>+ <newline>   return parser <newline>@@ -925,15 +935,20 @@ def ParseOptions(): <newline>   if options.out_dir is None: <newline>     parser.error('Output location not specified') <newline>-  if options.type not in [FILE_TYPE_WIN, FILE_TYPE_POSIX_STUB]: <newline>-    parser.error('Invalid output file type') <newline>+  if (options.type not in <newline>+      [FILE_TYPE_WIN, FILE_TYPE_POSIX_STUB, FILE_TYPE_WIN_DEF]): <newline>+    parser.error('Invalid output file type: %s' % options.type) <newline>   if options.type == FILE_TYPE_POSIX_STUB: <newline>     if options.stubfile_name is None: <newline>-      parser.error('Output file name need for %s' % FILE_TYPE_POSIX_STUB) <newline>+      parser.error('Output file name needed for %s' % FILE_TYPE_POSIX_STUB) <newline>     if options.path_from_source is None: <newline>       parser.error('Path from source needed for %s' % FILE_TYPE_POSIX_STUB) <newline>+  if options.type == FILE_TYPE_WIN_DEF: <newline>+    if options.module_name is None: <newline>+      parser.error('Module name needed for %s' % FILE_TYPE_WIN_DEF) <newline>+ <newline>   return options, args <newline>@@ -977,7 +992,7 @@ def CreateWindowsLibForSigFiles(sig_files, out_dir, intermediate_dir): <newline>   """For each signature file, create a windows lib. <newline>   Args: <newline>-    sig_files: Array of Strings with the paths to each signature file. <newline>+    sig_files: Array of strings with the paths to each signature file. <newline>     out_dir: String holding path to directory where the generated libs go. <newline>     intermediate_dir: String holding path to directory generated intermdiate <newline>                       artifacts. <newline>@@ -992,13 +1007,39 @@ def CreateWindowsLibForSigFiles(sig_files, out_dir, intermediate_dir): <newline>       infile.close() <newline>+def CreateWindowsDefForSigFiles(sig_files, out_dir, module_name): <newline>+  """For all signature files, create a single windows def file. <newline>+ <newline>+  Args: <newline>+    sig_files: Array of strings with the paths to each signature file. <newline>+    out_dir: String holding path to directory where the generated def goes. <newline>+    module_name: Name of the output DLL or LIB which will link in the def file. <newline>+  """ <newline>+  signatures = [] <newline>+  for input_path in sig_files: <newline>+    infile = open(input_path, 'r') <newline>+    try: <newline>+      signatures += ParseSignatures(infile) <newline>+    finally: <newline>+      infile.close() <newline>+ <newline>+  def_file_path = os.path.join( <newline>+      out_dir, os.path.splitext(os.path.basename(module_name))[0] + '.def') <newline>+  outfile = open(def_file_path, 'w') <newline>+ <newline>+  try: <newline>+    WriteWindowsDefFile(module_name, signatures, outfile) <newline>+  finally: <newline>+    outfile.close() <newline>+ <newline>+ <newline> def CreatePosixStubsForSigFiles(sig_files, stub_name, out_dir, <newline>                                 intermediate_dir, path_from_source, <newline>                                 extra_stub_header): <newline>   """Create a posix stub library with a module for each signature file. <newline>   Args: <newline>-    sig_files: Array of Strings with the paths to each signature file. <newline>+    sig_files: Array of strings with the paths to each signature file. <newline>     stub_name: String with the basename of the generated stub file. <newline>     out_dir: String holding path to directory for the .h files. <newline>     intermediate_dir: String holding path to directory for the .cc files. <newline>@@ -1070,6 +1111,8 @@ def main(): <newline>     CreatePosixStubsForSigFiles(args, options.stubfile_name, out_dir, <newline>                                 intermediate_dir, options.path_from_source, <newline>                                 options.extra_stub_header) <newline>+  elif options.type == FILE_TYPE_WIN_DEF: <newline>+    CreateWindowsDefForSigFiles(args, out_dir, options.module_name) <newline> if __name__ == '__main__':
90fbc342ca61055e58b8e549d0375105377af50	dcblack@chromium.org <dcblack@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 5 01:19:45 2012 +0000	Tweak our javascript to not use array.length, as it might be a security vulnerability.			https://chromiumcodereview.appspot.com/11047010	svn://svn.chromium.org/chrome/trunk/src@160275 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/resources/extensions/searchbox/searchbox_api.js b/chrome/renderer/resources/extensions/searchbox/searchbox_api.js <newline>index 3e207e0..cb09831 100644 <newline>--- a/chrome/renderer/resources/extensions/searchbox/searchbox_api.js <newline>+++ b/chrome/renderer/resources/extensions/searchbox/searchbox_api.js <newline>@@ -60,8 +60,7 @@ if (!chrome.searchBox) { <newline>       var autocompleteResults = DedupeAutcompleteResults( <newline>           GetAutocompleteResults()); <newline>       var userInput = GetQuery(); <newline>-      for (var i = 0; i < autocompleteResults.length; ++i) { <newline>-        var result = autocompleteResults[i]; <newline>+      for (var i = 0, result; result = autocompleteResults[i]; ++i) { <newline>         var title = result.contents; <newline>         var url = CleanUrl(result.destination_url, userInput); <newline>         var combinedHtml = '<span class=chrome_url>' + url + '</span>'; <newline>@@ -78,6 +77,7 @@ if (!chrome.searchBox) { <newline>       return autocompleteResults; <newline>     } <newline>+    // TODO(dcblack): Do this in C++ instead of JS. <newline>     function CleanUrl(url, userInput) { <newline>       if (url.indexOf(userInput) == 0) { <newline>         return url; <newline>@@ -89,6 +89,7 @@ if (!chrome.searchBox) { <newline>       return url.replace(WWW_REGEX, ''); <newline>     } <newline>+    // TODO(dcblack): Do this in C++ instead of JS. <newline>     function CanonicalizeUrl(url) { <newline>       return url.replace(HTTP_REGEX, '').replace(WWW_REGEX, ''); <newline>     } <newline>@@ -97,8 +98,7 @@ if (!chrome.searchBox) { <newline>     // TODO(dcblack): Do this in C++ instead of JS. <newline>     function DedupeAutcompleteResults(autocompleteResults) { <newline>       var urlToResultMap = {}; <newline>-      for (var i = 0; i < autocompleteResults.length; ++i) { <newline>-        var result = autocompleteResults[i]; <newline>+      for (var i = 0, result; result = autocompleteResults[i]; ++i) { <newline>         var url = CanonicalizeUrl(result.destination_url); <newline>         if (url in urlToResultMap) { <newline>           var oldRelevance = urlToResultMap[url].rankingData.relevance; <newline>@@ -131,15 +131,15 @@ if (!chrome.searchBox) { <newline>       lastPrefixQueriedForDuplicates = userInput; <newline>       var autocompleteResults = GetAutocompleteResults(); <newline>       var nativeUrls = {}; <newline>-      for (var i = 0; i < autocompleteResults.length; ++i) { <newline>-        var nativeUrl = CanonicalizeUrl(autocompleteResults[i].destination_url); <newline>-        nativeUrls[nativeUrl] = autocompleteResults[i].rid; <newline>+      for (var i = 0, result; result = autocompleteResults[i]; ++i) { <newline>+        var nativeUrl = CanonicalizeUrl(result.destination_url); <newline>+        nativeUrls[nativeUrl] = result.rid; <newline>       } <newline>-      for (var i = 0; i < clientSuggestions.length && <newline>+      for (var i = 0, result; result = clientSuggestions[i] && <newline>            i < MAX_CLIENT_SUGGESTIONS_TO_DEDUPE; ++i) { <newline>-        var clientUrl = CanonicalizeUrl(clientSuggestions[i].url); <newline>+        var clientUrl = CanonicalizeUrl(result.url); <newline>         if (clientUrl in nativeUrls) { <newline>-          clientSuggestions[i].duplicateOf = nativeUrls[clientUrl]; <newline>+          result.duplicateOf = nativeUrls[clientUrl]; <newline>         } <newline>       } <newline>       return true;
01203ed96d3e8b4d3f5b50328c047e88ff379b6	dalecurtis@google.com <dalecurtis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 28 22:28:18 2012 +0000	Roll FFmpeg DEPS + Fixup FFmpeg tests. Pulls in the security fix for issue 152691 and adds a test for the problematic file.  Additionally fixes a few issues which have led to rusting: - Updates hashes after AudioBus::ToInterleaved() changes. - Fixes a bunch of EXPECT_CALL failures and log spam since not all tests will satisfy these expectations due to invalid files. - Fixes a bug in the hashing code when NullAudioSink is never initialized. TEST=unit tests.	152691		https://codereview.chromium.org/10989089	svn://svn.chromium.org/chrome/trunk/src@159352 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/filters/pipeline_integration_test_base.cc b/media/filters/pipeline_integration_test_base.cc <newline>index 6aae526..7c1cc5d 100644 <newline>--- a/media/filters/pipeline_integration_test_base.cc <newline>+++ b/media/filters/pipeline_integration_test_base.cc <newline>@@ -14,6 +14,7 @@ <newline> #include "media/filters/file_data_source.h" <newline> using ::testing::AnyNumber; <newline>+using ::testing::AtMost; <newline> namespace media { <newline>@@ -88,8 +89,10 @@ void PipelineIntegrationTestBase::OnError(PipelineStatus status) { <newline> bool PipelineIntegrationTestBase::Start(const std::string& url, <newline>                                         PipelineStatus expected_status) { <newline>-  EXPECT_CALL(*this, OnBufferingState(Pipeline::kHaveMetadata)); <newline>-  EXPECT_CALL(*this, OnBufferingState(Pipeline::kPrerollCompleted)); <newline>+  EXPECT_CALL(*this, OnBufferingState(Pipeline::kHaveMetadata)) <newline>+      .Times(AtMost(1)); <newline>+  EXPECT_CALL(*this, OnBufferingState(Pipeline::kPrerollCompleted)) <newline>+      .Times(AtMost(1)); <newline>   pipeline_->Start( <newline>       CreateFilterCollection(url), <newline>       base::Bind(&PipelineIntegrationTestBase::OnEnded, base::Unretained(this)), <newline>@@ -109,8 +112,10 @@ bool PipelineIntegrationTestBase::Start(const std::string& url, <newline> } <newline> bool PipelineIntegrationTestBase::Start(const std::string& url) { <newline>-  EXPECT_CALL(*this, OnBufferingState(Pipeline::kHaveMetadata)); <newline>-  EXPECT_CALL(*this, OnBufferingState(Pipeline::kPrerollCompleted)); <newline>+  EXPECT_CALL(*this, OnBufferingState(Pipeline::kHaveMetadata)) <newline>+      .Times(AtMost(1)); <newline>+  EXPECT_CALL(*this, OnBufferingState(Pipeline::kPrerollCompleted)) <newline>+      .Times(AtMost(1)); <newline>   pipeline_->Start( <newline>       CreateFilterCollection(url), <newline>       base::Bind(&PipelineIntegrationTestBase::OnEnded, base::Unretained(this)),
7b7502837a3a76166f2f9a1d3bfb2245d2ada8a	glotov@chromium.org <glotov@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Sep 25 17:44:22 2012 +0000	OOBE factory reset screen makes reboot if requested after sign in. This is because StartDeviceWipe() will not work after user sign in and sign out (without reboot). This is done so for security reasons. TEST=manual	122768		https://chromiumcodereview.appspot.com/10979017	svn://svn.chromium.org/chrome/trunk/src@158603 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/chromeos/login/reset_screen_handler.cc b/chrome/browser/ui/webui/chromeos/login/reset_screen_handler.cc <newline>index 3ff9f2a..bd0a5f6 100644 <newline>--- a/chrome/browser/ui/webui/chromeos/login/reset_screen_handler.cc <newline>+++ b/chrome/browser/ui/webui/chromeos/login/reset_screen_handler.cc <newline>@@ -7,8 +7,14 @@ <newline> #include <string> <newline> #include "base/bind.h" <newline>+#include "base/command_line.h" <newline> #include "base/values.h" <newline>+#include "chrome/browser/browser_process.h" <newline>+#include "chrome/browser/prefs/pref_service.h" <newline>+#include "chrome/common/chrome_switches.h" <newline>+#include "chrome/common/pref_names.h" <newline> #include "chromeos/dbus/dbus_thread_manager.h" <newline>+#include "chromeos/dbus/power_manager_client.h" <newline> #include "chromeos/dbus/session_manager_client.h" <newline> #include "grit/browser_resources.h" <newline> #include "grit/chromium_strings.h" <newline>@@ -63,12 +69,22 @@ void ResetScreenHandler::GetLocalizedStrings( <newline>           IDS_RESET_SCREEN_WARNING_MSG, <newline>           l10n_util::GetStringUTF16(IDS_SHORT_PRODUCT_NAME))); <newline>   localized_strings->SetString( <newline>-      "resetWarningDetails", <newline>-      l10n_util::GetStringUTF16(IDS_RESET_SCREEN_WARNING_DETAILS)); <newline>-  localized_strings->SetString( <newline>       "cancelButton", l10n_util::GetStringUTF16(IDS_CANCEL)); <newline>-  localized_strings->SetString( <newline>-      "resetButton", l10n_util::GetStringUTF16(IDS_RESET_SCREEN_RESET)); <newline>+  if (CommandLine::ForCurrentProcess()->HasSwitch(switches::kFirstBoot)) { <newline>+    localized_strings->SetString( <newline>+        "resetWarningDetails", <newline>+        l10n_util::GetStringUTF16(IDS_RESET_SCREEN_WARNING_DETAILS)); <newline>+    localized_strings->SetString( <newline>+        "resetButton", l10n_util::GetStringUTF16(IDS_RESET_SCREEN_RESET)); <newline>+  } else { <newline>+    localized_strings->SetString( <newline>+        "resetWarningDetails", <newline>+        l10n_util::GetStringFUTF16( <newline>+            IDS_OPTIONS_FACTORY_RESET_WARNING, <newline>+            l10n_util::GetStringUTF16(IDS_SHORT_PRODUCT_NAME))); <newline>+    localized_strings->SetString( <newline>+        "resetButton", l10n_util::GetStringUTF16(IDS_RELAUNCH_BUTTON)); <newline>+  } <newline> } <newline> void ResetScreenHandler::Initialize() { <newline>@@ -94,9 +110,17 @@ void ResetScreenHandler::HandleOnCancel(const base::ListValue* args) { <newline> } <newline> void ResetScreenHandler::HandleOnReset(const base::ListValue* args) { <newline>-  chromeos::SessionManagerClient* session_manager = <newline>-      chromeos::DBusThreadManager::Get()->GetSessionManagerClient(); <newline>-  session_manager->StartDeviceWipe(); <newline>+  if (CommandLine::ForCurrentProcess()->HasSwitch(switches::kFirstBoot)) { <newline>+    chromeos::DBusThreadManager::Get()->GetSessionManagerClient()-> <newline>+        StartDeviceWipe(); <newline>+  } else { <newline>+    PrefService* prefs = g_browser_process->local_state(); <newline>+    prefs->SetBoolean(prefs::kFactoryResetRequested, true); <newline>+    prefs->CommitPendingWrite(); <newline>+ <newline>+    chromeos::DBusThreadManager::Get()->GetPowerManagerClient()-> <newline>+        RequestRestart(); <newline>+  } <newline> } <newline> }  // namespace chromeos
80fc824225e958594b4b0334f3d6d2dbc5ebf4e	qinmin@chromium.org <qinmin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 19 20:28:52 2012 +0000	Move android mediaplayer from render process to browser process. Due to UID isolation for security reasons, the render process can no longer have permissions to access internet. Since Android mediaplayer requires internet permission to work, it has to be moved to the browser process to resolve this. Here are the changes included in this patch: 1. Make WebMediaPlayerAndroid a common base class for WebMediaPlayerImplAndroid and WebMediaPlayerInProcessAndroid. WebMediaPlayerImplAndroid places the android mediaplayer in the brower process, this will be used for future chrome on android releases. WebMediaPlayerInProcessAndroid still places the android mediaplayer in the render process, this is being used for Layout tests. We will deprecate this later. 2.Added a commandline flag kMediaPlayerInRenderProcess to allow switching between these 2 modes 3.MediaPlayerBridge now takes over all the logics originally in WebMediaPlayerAndroid. This is to shield WMPA from knowing the internal state of the mediaplayer.			https://chromiumcodereview.appspot.com/10919075	svn://svn.chromium.org/chrome/trunk/src@157596 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/support/webkit_support.cc b/webkit/support/webkit_support.cc <newline>index de46cb0..435c0f4 100644 <newline>--- a/webkit/support/webkit_support.cc <newline>+++ b/webkit/support/webkit_support.cc <newline>@@ -57,7 +57,8 @@ <newline> #include "webkit/gpu/webgraphicscontext3d_in_process_command_buffer_impl.h" <newline> #include "webkit/gpu/webgraphicscontext3d_in_process_impl.h" <newline> #if defined(OS_ANDROID) <newline>-#include "webkit/media/android/webmediaplayer_android.h" <newline>+#include "webkit/media/android/media_player_bridge_manager_impl.h" <newline>+#include "webkit/media/android/webmediaplayer_in_process_android.h" <newline> #include "webkit/media/android/webmediaplayer_manager_android.h" <newline> #endif <newline> #include "webkit/media/webmediaplayer_impl.h" <newline>@@ -167,6 +168,10 @@ class TestEnvironment { <newline>                                       shadow_platform_delegate)); <newline> #if defined(OS_ANDROID) <newline>+    // Make sure we have enough decoding resources for layout tests. <newline>+    // The current maximum number of media elements in a layout test is 8. <newline>+    media_bridge_manager_.reset( <newline>+        new webkit_media::MediaPlayerBridgeManagerImpl(8)); <newline>     media_player_manager_.reset( <newline>         new webkit_media::WebMediaPlayerManagerAndroid()); <newline> #endif <newline>@@ -207,6 +212,10 @@ class TestEnvironment { <newline>   webkit_media::WebMediaPlayerManagerAndroid* media_player_manager() { <newline>     return media_player_manager_.get(); <newline>   } <newline>+ <newline>+  webkit_media::MediaPlayerBridgeManagerImpl* media_bridge_manager() { <newline>+    return media_bridge_manager_.get(); <newline>+  } <newline> #endif <newline>  private: <newline>@@ -219,6 +228,7 @@ class TestEnvironment { <newline> #if defined(OS_ANDROID) <newline>   FilePath mock_current_directory_; <newline>   scoped_ptr<webkit_media::WebMediaPlayerManagerAndroid> media_player_manager_; <newline>+  scoped_ptr<webkit_media::MediaPlayerBridgeManagerImpl> media_bridge_manager_; <newline> #endif <newline> }; <newline>@@ -388,12 +398,14 @@ WebKit::WebMediaPlayer* CreateMediaPlayer( <newline>     WebMediaPlayerClient* client, <newline>     webkit_media::MediaStreamClient* media_stream_client) { <newline> #if defined(OS_ANDROID) <newline>-  return new webkit_media::WebMediaPlayerAndroid( <newline>+  return new webkit_media::WebMediaPlayerInProcessAndroid( <newline>       frame, <newline>       client, <newline>       GetWebKitPlatformSupport()->cookieJar(), <newline>       test_environment->media_player_manager(), <newline>-      new webkit_support::TestStreamTextureFactory()); <newline>+      test_environment->media_bridge_manager(), <newline>+      new webkit_support::TestStreamTextureFactory(), <newline>+      true); <newline> #else <newline>   scoped_ptr<media::MessageLoopFactory> message_loop_factory( <newline>       new media::MessageLoopFactory());
bc80280056bf0c21ddd6d63b34c785f83208599	ibraaaa@google.com <ibraaaa@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Sep 18 20:20:34 2012 +0000	Default security status for unknown plugins on non-linux platform to SECURITY_STATUS_UP_TO_DATE	148992		https://chromiumcodereview.appspot.com/10947007	svn://svn.chromium.org/chrome/trunk/src@157411 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/plugin_installer_unittest.cc b/chrome/browser/plugin_installer_unittest.cc <newline>index 3f043e0..fd90cec 100644 <newline>--- a/chrome/browser/plugin_installer_unittest.cc <newline>+++ b/chrome/browser/plugin_installer_unittest.cc <newline>@@ -34,7 +34,12 @@ TEST(PluginInstallerTest, SecurityStatus) { <newline>   PluginInstaller installer("claybrick-writer", <newline>                             ASCIIToUTF16("ClayBrick Writer"), <newline>                             true, GURL(), GURL(), ASCIIToUTF16("ClayBrick")); <newline>+ <newline>+#if defined(OS_LINUX) <newline>   EXPECT_EQ(kRequiresAuthorization, GetSecurityStatus(&installer, "1.2.3")); <newline>+#else <newline>+  EXPECT_EQ(kUpToDate, GetSecurityStatus(&installer, "1.2.3")); <newline>+#endif <newline>   installer.AddVersion(Version("9.4.1"), kRequiresAuthorization); <newline>   installer.AddVersion(Version("10"), kOutOfDate);
5305b4c395b5fc710a9858c4d2325a2b78867ca	mseaborn@chromium.org <mseaborn@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 14 21:06:18 2012 +0000	NaCl: Update revision in DEPS, r9728 -> r9742 This pulls in the following Native Client changes: r9729: (jvoung) Don't try to build the irt in run.py anymore, only irt_core. r9730: (dschuff) DEPS in updated pnacl toolchains r9731: (dschuff) Update pnacl translator hash from DEPS roll r9732: (dschuff) Remove use of download_toolchains.py from toolchain test bot script r9733: (kschimpf) Define the "not" and "in" operators for arm table expressions. r9734: (kschimpf) Add indexable local decoder definitions to decoder tables. r9735: (bradnelson) Switch osx to use ninja. r9736: (mseaborn) Remove unused NACL_ARCH_CPU_* #defines from portability.h r9737: (jfb) ARM validator: fix security issue in condition handling. r9738: (khim) Fix few more style issues in gen_dfa.cc r9740: (olonho) Build NaCl on Android. Relies on Android Chrome-based build setup. r9741: (shcherbina) Validator_ragel: rewrite comments and change rename enum items a little. r9742: (khim) Fix few more style issues in gen_dfa.cc TEST=nacl_integration	none		https://chromiumcodereview.appspot.com/10916320	svn://svn.chromium.org/chrome/trunk/src@156885 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 8082874..1040d69 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -12,7 +12,7 @@ vars = { <newline>   "chromium_git": "http://git.chromium.org/git", <newline>   "chromiumos_git": "http://git.chromium.org/chromiumos", <newline>   "swig_revision": "69281", <newline>-  "nacl_revision": "9728", <newline>+  "nacl_revision": "9742", <newline>   # After changing nacl_revision, run 'glient sync' and check native_client/DEPS <newline>   # to update other nacl_*_revision's. <newline>   "nacl_tools_revision": "9330",  # native_client/DEPS: tools_rev
b5577b22f25767ad061009c3ceac3707ce143ab	acolwell@chromium.org <acolwell@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 12 01:35:36 2012 +0000	Fix ChunkDemuxer signal an error instead of crash when a parser gives it invalid configs. TEST=Manual Media Source API test that appends uninitialize.webm from the chrome-internal/trunk/data/media/security/ repo.	148528		https://chromiumcodereview.appspot.com/10918183	svn://svn.chromium.org/chrome/trunk/src@156202 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/filters/chunk_demuxer.cc b/media/filters/chunk_demuxer.cc <newline>index d7c4b9a..e38c35d 100644 <newline>--- a/media/filters/chunk_demuxer.cc <newline>+++ b/media/filters/chunk_demuxer.cc <newline>@@ -1024,9 +1024,13 @@ bool ChunkDemuxer::OnNewConfigs(bool has_audio, bool has_video, <newline>   DVLOG(1) << "OnNewConfigs(" << has_audio << ", " << has_video <newline>            << ", " << audio_config.IsValidConfig() <newline>            << ", " << video_config.IsValidConfig() << ")"; <newline>-  CHECK(audio_config.IsValidConfig() || video_config.IsValidConfig()); <newline>   lock_.AssertAcquired(); <newline>+  if (!audio_config.IsValidConfig() && !video_config.IsValidConfig()) { <newline>+    DVLOG(1) << "OnNewConfigs() : Audio & video config are not valid!"; <newline>+    return false; <newline>+  } <newline>+ <newline>   // Signal an error if we get configuration info for stream types that weren't <newline>   // specified in AddId() or more configs after a stream is initialized. <newline>   // Only allow a single audio config for now.
a510ac4bc948e8a14b4a15e982f016912375245	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Sep 6 02:23:08 2012 +0000	Ban the ',' character from 'content_security_policy' manifest attributes.	146492		https://chromiumcodereview.appspot.com/10927002	svn://svn.chromium.org/chrome/trunk/src@155102 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/csp_validator_unittest.cc b/chrome/common/extensions/csp_validator_unittest.cc <newline>index 7063761..0ed8d37 100644 <newline>--- a/chrome/common/extensions/csp_validator_unittest.cc <newline>+++ b/chrome/common/extensions/csp_validator_unittest.cc <newline>@@ -18,6 +18,8 @@ TEST(ExtensionCSPValidator, IsLegal) { <newline>       "default-src 'self';\nscript-src http://www.google.com")); <newline>   EXPECT_FALSE(ContentSecurityPolicyIsLegal( <newline>       "default-src 'self';\rscript-src http://www.google.com")); <newline>+  EXPECT_FALSE(ContentSecurityPolicyIsLegal( <newline>+      "default-src 'self';,script-src http://www.google.com")); <newline> } <newline> TEST(ExtensionCSPValidator, IsSecure) {
728ff65e1c72ce6ff7685ed1d9c9a23b927cb1d	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Sep 3 17:07:31 2012 +0000	Improve error message for insecure 'content_security_policy' manifest entries. TBR=ben@chromium.org	143341		https://chromiumcodereview.appspot.com/10828363	svn://svn.chromium.org/chrome/trunk/src@154701 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/manifest_tests/insecure_contentsecuritypolicy_3.json b/chrome/test/data/extensions/manifest_tests/insecure_contentsecuritypolicy_3.json <newline>new file mode 100644 <newline>index 0000000..dc9b852 <newline>--- /dev/null <newline>+++ b/chrome/test/data/extensions/manifest_tests/insecure_contentsecuritypolicy_3.json <newline>@@ -0,0 +1,6 @@ <newline>+{ <newline>+  "name": "test", <newline>+  "version": "0.1", <newline>+  "manifest_version": 2, <newline>+  "content_security_policy": "script-src 'self'" <newline>+}
4af12a4b86fd65581bc2e10caa53c67b42281e6	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 28 04:06:48 2012 +0000	Adding 'blob:' and 'filesystem:' URLs as secure sources for extensions. Extensions currently enforce the requirement that Content Security Policy directives contain only secure sources. As 'blob:' and 'filesystem:' URLs are same-origin with the resource that created them, and never touch the network, we should allow them in extensions' 'content_security_policy' declarations.	144610		https://chromiumcodereview.appspot.com/10873060	svn://svn.chromium.org/chrome/trunk/src@153624 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/csp_validator_unittest.cc b/chrome/common/extensions/csp_validator_unittest.cc <newline>index 4caab6d..7063761 100644 <newline>--- a/chrome/common/extensions/csp_validator_unittest.cc <newline>+++ b/chrome/common/extensions/csp_validator_unittest.cc <newline>@@ -91,6 +91,15 @@ TEST(ExtensionCSPValidator, IsSecure) { <newline>       "default-src 'self' http://127.0.0.1.example.com")); <newline>   EXPECT_FALSE(ContentSecurityPolicyIsSecure( <newline>       "default-src 'self' http://localhost.example.com")); <newline>+ <newline>+  EXPECT_TRUE(ContentSecurityPolicyIsSecure( <newline>+      "default-src 'self' blob:")); <newline>+  EXPECT_FALSE(ContentSecurityPolicyIsSecure( <newline>+      "default-src 'self' blob:http://example.com/XXX")); <newline>+  EXPECT_TRUE(ContentSecurityPolicyIsSecure( <newline>+      "default-src 'self' filesystem:")); <newline>+  EXPECT_FALSE(ContentSecurityPolicyIsSecure( <newline>+      "default-src 'self' filesystem:http://example.com/XXX")); <newline> } <newline> TEST(ExtensionCSPValidator, IsSandboxed) {
f1f91d46e72a949bf74a1cba1be43c5c21284cb	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Aug 27 19:31:50 2012 +0000	Apply frame-src content-security-policy to WebUI pages.	143003		https://chromiumcodereview.appspot.com/10829465	svn://svn.chromium.org/chrome/trunk/src@153520 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc b/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>index aa1a7e0..013d53e 100644 <newline>--- a/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>+++ b/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>@@ -88,12 +88,25 @@ class ChromeURLContentSecurityPolicyExceptionSet <newline>   } <newline> }; <newline>-// It is OK to add URLs to this set which slightly reduces the CSP for them. <newline>-class ChromeURLContentSecurityPolicyObjectTagSet <newline>-    : public std::set<std::string> { <newline>+// It is OK to add URLs to these maps which map specific URLs to custom CSP <newline>+// directives thereby slightly reducing the protection applied to the page. <newline>+class ChromeURLObjectSrcExceptionMap <newline>+    : public std::map<std::string, std::string> { <newline>  public: <newline>-  ChromeURLContentSecurityPolicyObjectTagSet() : std::set<std::string>() { <newline>-    insert(chrome::kChromeUIPrintHost); <newline>+  ChromeURLObjectSrcExceptionMap() : std::map<std::string, std::string>() { <newline>+    insert(std::pair<std::string, std::string>( <newline>+        chrome::kChromeUIPrintHost, "object-src 'self';")); <newline>+  } <newline>+}; <newline>+ <newline>+class ChromeURLFrameSrcExceptionMap <newline>+    : public std::map<std::string, std::string> { <newline>+ public: <newline>+  ChromeURLFrameSrcExceptionMap() : std::map<std::string, std::string>() { <newline>+    insert(std::pair<std::string, std::string>( <newline>+        chrome::kChromeUIUberHost, "frame-src chrome:;")); <newline>+    insert(std::pair<std::string, std::string>( <newline>+        chrome::kChromeUIUberFrameHost, "frame-src chrome:;")); <newline>   } <newline> }; <newline>@@ -101,9 +114,11 @@ base::LazyInstance<ChromeURLContentSecurityPolicyExceptionSet> <newline>     g_chrome_url_content_security_policy_exception_set = <newline>         LAZY_INSTANCE_INITIALIZER; <newline>-base::LazyInstance<ChromeURLContentSecurityPolicyObjectTagSet> <newline>-    g_chrome_url_content_security_policy_object_tag_set = <newline>-        LAZY_INSTANCE_INITIALIZER; <newline>+base::LazyInstance<ChromeURLObjectSrcExceptionMap> <newline>+    g_chrome_url_object_src_exception_map = LAZY_INSTANCE_INITIALIZER; <newline>+ <newline>+base::LazyInstance<ChromeURLFrameSrcExceptionMap> <newline>+    g_chrome_url_frame_src_exception_map = LAZY_INSTANCE_INITIALIZER; <newline> // Determine the least-privileged content security policy header, if any, <newline> // that is compatible with a given WebUI URL, and append it to the existing <newline>@@ -115,12 +130,20 @@ void AddContentSecurityPolicyHeader( <newline>   if (exceptions->find(url.host()) == exceptions->end()) { <newline>     std::string base = kChromeURLContentSecurityPolicyHeaderBase; <newline>-    ChromeURLContentSecurityPolicyObjectTagSet* object_tag_set = <newline>-        g_chrome_url_content_security_policy_object_tag_set.Pointer(); <newline>-    base.append(object_tag_set->find(url.host()) == object_tag_set->end() ? <newline>-                "object-src 'none';" : <newline>-                "object-src 'self';"); <newline>+    ChromeURLObjectSrcExceptionMap* object_map = <newline>+        g_chrome_url_object_src_exception_map.Pointer(); <newline>+    ChromeURLObjectSrcExceptionMap::iterator object_iter = <newline>+        object_map->find(url.host()); <newline>+    base.append(object_iter == object_map->end() ? <newline>+                "object-src 'none';" : object_iter->second); <newline>+ <newline>+    ChromeURLFrameSrcExceptionMap* frame_map = <newline>+        g_chrome_url_frame_src_exception_map.Pointer(); <newline>+    ChromeURLFrameSrcExceptionMap::iterator frame_iter = <newline>+        frame_map->find(url.host()); <newline>+    base.append(frame_iter == frame_map->end() ? <newline>+                "frame-src 'none';" : frame_iter->second); <newline>     headers->AddHeader(base); <newline>   }
a8e6194ab43a9a37c08423bfda2c0e461982978	adamk@chromium.org <adamk@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Aug 23 01:46:45 2012 +0000	Disable DOM MutationEvents for platform apps New apps should use MutationObservers instead, which provide similar (or better) capabilities without the performance and stability/security downsides of MutationEvents.	142648		https://chromiumcodereview.appspot.com/10870013	svn://svn.chromium.org/chrome/trunk/src@152914 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/platform_apps/mutation_events/test.js b/chrome/test/data/extensions/platform_apps/mutation_events/test.js <newline>new file mode 100644 <newline>index 0000000..3d6bffa <newline>--- /dev/null <newline>+++ b/chrome/test/data/extensions/platform_apps/mutation_events/test.js <newline>@@ -0,0 +1,7 @@ <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+chrome.app.runtime.onLaunched.addListener(function() { <newline>+  chrome.app.window.create('main.html', {}, function () {}); <newline>+});
b8b5b4592c4461c896d1ad0284b9e9422d39559	mmenke@chromium.org <mmenke@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 21 06:59:38 2012 +0000	about:net-internals: Enabling logging of all bytes now disables hiding cookies, as opposed to just unchecking the privacy check box. Also, "security stripping" is now "privacy stripping" to be more consistent and accurate. R=eroman@chromium.org	143459		https://chromiumcodereview.appspot.com/10823398	svn://svn.chromium.org/chrome/trunk/src@152522 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/webui/net_internals/log_view_painter.js b/chrome/test/data/webui/net_internals/log_view_painter.js <newline>index f9a5828..4ebbf58 100644 <newline>--- a/chrome/test/data/webui/net_internals/log_view_painter.js <newline>+++ b/chrome/test/data/webui/net_internals/log_view_painter.js <newline>@@ -101,7 +101,7 @@ TEST_F('NetInternalsTest', 'netInternalsLogViewPainterPrintAsText', function() { <newline>     div.innerHTML = ''; <newline>     timeutil.setTimeTickOffset(testCase.tickOffset); <newline>     printLogEntriesAsText(testCase.logEntries, div, <newline>-                          testCase.enableSecurityStripping, <newline>+                          testCase.privacyStripping, <newline>                           testCase.logCreationTime); <newline>     // Strip any trailing newlines, since the whitespace when using innerText <newline>@@ -1370,7 +1370,7 @@ function painterTestDontStripCookiesURLRequest() { <newline>  */ <newline> function painterTestStripCookiesURLRequest() { <newline>   var testCase = painterTestDontStripCookiesURLRequest(); <newline>-  testCase.enableSecurityStripping = true; <newline>+  testCase.privacyStripping = true; <newline>   testCase.expectedText = <newline>       testCase.expectedText.replace(/MyMagicPony/g, '[value was stripped]'); <newline>   return testCase; <newline>@@ -1468,7 +1468,7 @@ function painterTestDontStripCookiesSPDYSession() { <newline>  */ <newline> function painterTestStripCookiesSPDYSession() { <newline>   var testCase = painterTestDontStripCookiesSPDYSession(); <newline>-  testCase.enableSecurityStripping = true; <newline>+  testCase.privacyStripping = true; <newline>   testCase.expectedText = <newline>       testCase.expectedText.replace(/MyLittlePony/g, '[value was stripped]'); <newline>   return testCase;
b37e47ac47b06714e98968b54f297e4b276b041	nsylvain@chromium.org <nsylvain@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 15 23:16:13 2012 +0000	Add a new target to build the mac binaries used for asan security tests.			https://chromiumcodereview.appspot.com/10855184	svn://svn.chromium.org/chrome/trunk/src@151781 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/build/all.gyp b/build/all.gyp <newline>index d2d97a6..963c8f3 100644 <newline>--- a/build/all.gyp <newline>+++ b/build/all.gyp <newline>@@ -414,6 +414,15 @@ <newline>           ], <newline>         }, <newline>         { <newline>+          'target_name': 'chromium_builder_asan_mac', <newline>+          'type': 'none', <newline>+          'dependencies': [ <newline>+            '../chrome/chrome.gyp:chrome', <newline>+            '../net/net.gyp:dns_fuzz_stub', <newline>+            '../webkit/webkit.gyp:pull_in_DumpRenderTree', <newline>+          ], <newline>+        }, <newline>+        { <newline>           'target_name': 'chromium_builder_dbg_valgrind_mac', <newline>           'type': 'none', <newline>           'dependencies': [
8a717ddd32ce52531ae4365632d337b7b7ba1f9	vitalybuka@chromium.org <vitalybuka@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 15 04:25:54 2012 +0000	Removed default account for service. Added required options run-as-user and run-as-password. Added code to set security rights required to run service. File access and chrome binary checks changed from fatal error to just error message.	141243		https://chromiumcodereview.appspot.com/10824294	svn://svn.chromium.org/chrome/trunk/src@151652 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/cloud_print/service/win/local_security_policy.h b/cloud_print/service/win/local_security_policy.h <newline>new file mode 100644 <newline>index 0000000..712ab19 <newline>--- /dev/null <newline>+++ b/cloud_print/service/win/local_security_policy.h <newline>@@ -0,0 +1,34 @@ <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#ifndef CLOUD_PRINT_SERVICE_WIN_LOCAL_SECURITY_POLICY_H_ <newline>+#define CLOUD_PRINT_SERVICE_WIN_LOCAL_SECURITY_POLICY_H_ <newline>+ <newline>+#include <wtypes.h>  // Has to be before ntsecapi.h <newline>+#include <ntsecapi.h> <newline>+ <newline>+#include "base/basictypes.h" <newline>+#include "base/string16.h" <newline>+ <newline>+extern const wchar_t kSeServiceLogonRight[]; <newline>+ <newline>+class LocalSecurityPolicy { <newline>+ public: <newline>+  LocalSecurityPolicy(); <newline>+  ~LocalSecurityPolicy(); <newline>+ <newline>+  bool Open(); <newline>+  void Close(); <newline>+ <newline>+  bool IsPrivilegeSet(const string16& username, <newline>+                      const string16& privilage) const; <newline>+  bool SetPrivilege(const string16& username, const string16& privilage); <newline>+ <newline>+ private: <newline>+  LSA_HANDLE policy_; <newline>+ <newline>+  DISALLOW_COPY_AND_ASSIGN(LocalSecurityPolicy); <newline>+}; <newline>+ <newline>+#endif  // CLOUD_PRINT_SERVICE_WIN_LOCAL_SECURITY_POLICY_H_
ca83807909cb9ab68786a102ce5700903a84883	dalecurtis@google.com <dalecurtis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 8 23:58:24 2012 +0000	Don't count SLOW tests towards failure. Also adds 2 tests which weren't being counted: http/tests/security/video-cross-origin-readback.html http/tests/security/video-poster-cross-origin-crash.html TEST=Ran layout test analyzer.	140583		https://chromiumcodereview.appspot.com/10823238	svn://svn.chromium.org/chrome/trunk/src@150639 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/tools/layout_tests/testname/media.csv b/media/tools/layout_tests/testname/media.csv <newline>index 90da82b..264e7aa 100644 <newline>--- a/media/tools/layout_tests/testname/media.csv <newline>+++ b/media/tools/layout_tests/testname/media.csv <newline>@@ -19,8 +19,8 @@ fast/layers/video-layer.html, <newline> http/tests/appcache/video.html, <newline> http/tests/canvas/webgl/origin-clean-conformance.html, <newline> http/tests/media/, <newline>-http/tests/security/\S+video\S+.html, <newline>+http/tests/security/\S*video\S+.html, <newline> http/tests/security/contentSecurityPolicy/media-src-allowed.html, <newline> http/tests/security/contentSecurityPolicy/media-src-blocked.html, <newline> media/, <newline>-platform/chromium/media/, <newline>\ No newline at end of file <newline>+platform/chromium/media/,
89266de8e05d61c7a17ecd48571a0279a69b588	satish@chromium.org <satish@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 7 12:52:20 2012 +0000	Simplify devtools code on android and enable devtools for android content_shell. This CL removes the unnecessary RemoteDebuggingcontroller java class and associated c++ code. Also devtools_server.* is moved from content/ to chrome/ so that the code to access profiles, version etc. can be handled here to make DevToolsServer a self contained class in chrome/ layer handling devtools for android. The code making use of this class is not yet ready to be upstreamed due to dependencies and will land in future. Also added shell_devtools_delegate_android.cc to enable devtools for content_shell on android. This class and chrome/browser/android/devtools_server.cc need a common place to put the IsUserAllowedToConnect method that ensures only adb is allowed to access devtools on android (via the abstract unix socket, for security purposes) hence that method is placed in DevToolsHttpHandler in content/ TEST=manual. Run android content shell, execute "adb forward tcp:9222 localabstract:content_shell_devtools_remote" and open "localhost:9222" on the host machine to use devtools.	136682,136318		https://chromiumcodereview.appspot.com/10832112	svn://svn.chromium.org/chrome/trunk/src@150336 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/shell/shell_devtools_delegate_android.cc b/content/shell/shell_devtools_delegate_android.cc <newline>new file mode 100644 <newline>index 0000000..fd87fb3 <newline>--- /dev/null <newline>+++ b/content/shell/shell_devtools_delegate_android.cc <newline>@@ -0,0 +1,65 @@ <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#include "content/shell/shell_devtools_delegate.h" <newline>+ <newline>+#include "base/stringprintf.h" <newline>+#include "content/public/browser/android/devtools_auth.h" <newline>+#include "content/public/browser/devtools_http_handler.h" <newline>+#include "grit/shell_resources.h" <newline>+#include "net/base/unix_domain_socket_posix.h" <newline>+#include "net/url_request/url_request_context_getter.h" <newline>+#include "ui/base/layout.h" <newline>+#include "ui/base/resource/resource_bundle.h" <newline>+ <newline>+namespace { <newline>+ <newline>+// TODO(mnaganov): This hardcoded version should be replaced with the webkit <newline>+// revision of this build of content shell. This requires a feature addition <newline>+// to the devtools frontend. <newline>+const char* kFrontendVersion = "21.0.1175.0"; <newline>+const char kSocketName[] = "content_shell_devtools_remote"; <newline>+const char kFrontEndURL[] = <newline>+    "http://chrome-devtools-frontend.appspot.com/static/%s/devtools.html"; <newline>+ <newline>+} <newline>+ <newline>+namespace content { <newline>+ <newline>+ShellDevToolsDelegate::ShellDevToolsDelegate( <newline>+    int port, <newline>+    net::URLRequestContextGetter* context_getter) <newline>+    : context_getter_(context_getter) { <newline>+  devtools_http_handler_ = DevToolsHttpHandler::Start( <newline>+      new net::UnixDomainSocketWithAbstractNamespaceFactory( <newline>+          kSocketName, <newline>+          base::Bind(&CanUserConnectToDevTools)), <newline>+      StringPrintf(kFrontEndURL, kFrontendVersion), <newline>+      context_getter, <newline>+      this); <newline>+} <newline>+ <newline>+ShellDevToolsDelegate::~ShellDevToolsDelegate() { <newline>+} <newline>+ <newline>+void ShellDevToolsDelegate::Stop() { <newline>+  // The call below destroys this. <newline>+  devtools_http_handler_->Stop(); <newline>+} <newline>+ <newline>+std::string ShellDevToolsDelegate::GetDiscoveryPageHTML() { <newline>+  return ResourceBundle::GetSharedInstance().GetRawDataResource( <newline>+      IDR_CONTENT_SHELL_DEVTOOLS_DISCOVERY_PAGE, <newline>+      ui::SCALE_FACTOR_NONE).as_string(); <newline>+} <newline>+ <newline>+bool ShellDevToolsDelegate::BundlesFrontendResources() { <newline>+  return false; <newline>+} <newline>+ <newline>+std::string ShellDevToolsDelegate::GetFrontendResourcesBaseURL() { <newline>+  return ""; <newline>+} <newline>+ <newline>+}  // namespace content
b1fe99b063542657a7c6fa507ff225c00a3545b	dalecurtis@google.com <dalecurtis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 7 02:18:58 2012 +0000	Roll FFmpeg for security fixes. Pulls in the following fixes: 70e76e2 mpegprobe: fix misdetection of mp3 a9511ce dsputil: make add_hfyu_left_prediction_sse4() support unaligned src. 12ba355 matroskadec: check element size against stream limit in ebml_parse_elem() 9c06b7f oggdec: Initialize stream index to -1 in ogg_packet. fd73a17 oggdec: simplify start time calculation code. 6b063c8 oggdec: check stream index before using it in ogg_get_length() 7274a3f mov: dont clip timestamps at 0 Also adds the test case for 140165 which I forgot to add when fixing that issue.  Test case exposes an issue with a recent CHECK in the audio decoder when we recieve a buffer without timestamps.  I've changed this into an if check + decoder error. The AUDIO_GAMING* hashes have changed since acolwell landed a change which strips frames with negative timestamps. TEST=valgrind+ffmpeg_regression_tests	140647		https://chromiumcodereview.appspot.com/10829204	svn://svn.chromium.org/chrome/trunk/src@150239 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/filters/ffmpeg_audio_decoder.cc b/media/filters/ffmpeg_audio_decoder.cc <newline>index f8cc1d5..903edba 100644 <newline>--- a/media/filters/ffmpeg_audio_decoder.cc <newline>+++ b/media/filters/ffmpeg_audio_decoder.cc <newline>@@ -178,11 +178,14 @@ void FFmpegAudioDecoder::DoDecodeBuffer( <newline>     return; <newline>   } <newline>-  // Make sure we are notified if http://crbug.com/49709 returns. <newline>-  CHECK(input->GetTimestamp() != kNoTimestamp() || <newline>-        output_timestamp_base_ != kNoTimestamp() || <newline>-        input->IsEndOfStream()) <newline>-      << "First buffers received don't have timestamps!"; <newline>+  // Make sure we are notified if http://crbug.com/49709 returns.  Issue also <newline>+  // occurs with some damaged files. <newline>+  if (!input->IsEndOfStream() && input->GetTimestamp() == kNoTimestamp() && <newline>+      output_timestamp_base_ == kNoTimestamp()) { <newline>+    DVLOG(1) << "Received a buffer without timestamps!"; <newline>+    base::ResetAndReturn(&read_cb_).Run(kDecodeError, NULL); <newline>+    return; <newline>+  } <newline>   bool is_vorbis = codec_context_->codec_id == CODEC_ID_VORBIS; <newline>   if (!input->IsEndOfStream()) {
3d9999f6a92d5d075f9c0ada81d66750edd01eb	akalin@chromium.org <akalin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 3 21:29:28 2012 +0000	[Sync] Set transport_security_state for sync_{client,listen_notifications} Currently, the DCHECK added by r148251 fires.			https://chromiumcodereview.appspot.com/10830164	svn://svn.chromium.org/chrome/trunk/src@149928 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/sync/tools/sync_listen_notifications.cc b/sync/tools/sync_listen_notifications.cc <newline>index 22b22d6..5eb05b6 100644 <newline>--- a/sync/tools/sync_listen_notifications.cc <newline>+++ b/sync/tools/sync_listen_notifications.cc <newline>@@ -20,6 +20,7 @@ <newline> #include "net/base/host_port_pair.h" <newline> #include "net/base/host_resolver.h" <newline> #include "net/base/network_change_notifier.h" <newline>+#include "net/base/transport_security_state.h" <newline> #include "net/url_request/url_request_test_util.h" <newline> #include "sync/internal_api/public/base/model_type.h" <newline> #include "sync/internal_api/public/base/model_type_payload_map.h" <newline>@@ -118,6 +119,8 @@ class MyTestURLRequestContext : public TestURLRequestContext { <newline>             net::HostResolver::kDefaultParallelism, <newline>             net::HostResolver::kDefaultRetryAttempts, <newline>             NULL)); <newline>+    context_storage_.set_transport_security_state( <newline>+        new net::TransportSecurityState()); <newline>     Init(); <newline>   }
3088ef84669a8e7e09d5076516a6205829140ce	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Aug 2 15:00:22 2012 +0000	`chrome-extension` resources should bypass Content Security Policy. The Content Security Policy specification[1] notes that "Enforcing a CSP policy should not interfere with the operation of user-supplied scripts such as third-party user-agent add-ons and JavaScript bookmarklets." To that end, this CL allows `chrome-extension` resources to bypass their containing document's policy, meaning that (for example) `chrome-extension://[ID]/image.png` can be injected into a page, even if that page has an `img-src 'none';` CSP directive. [1]: https://dvcs.w3.org/hg/content-security-policy/raw-file/tip/csp-specification.dev.html#processing-model TBR=thakis@chromium.org	133223		https://chromiumcodereview.appspot.com/10792008	svn://svn.chromium.org/chrome/trunk/src@149627 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/api_test/extension_resource_request_policy/web_accessible/accessible_resource_with_csp.html b/chrome/test/data/extensions/api_test/extension_resource_request_policy/web_accessible/accessible_resource_with_csp.html <newline>new file mode 100644 <newline>index 0000000..25933fc <newline>--- /dev/null <newline>+++ b/chrome/test/data/extensions/api_test/extension_resource_request_policy/web_accessible/accessible_resource_with_csp.html <newline>@@ -0,0 +1,2 @@ <newline>+<meta http-equiv="X-WebKit-CSP" content="img-src 'none';"> <newline>+<img onload="document.title='Loaded'" onerror="document.title='Image failed to load'" src="chrome-extension://ggmldgjhdenlnjjjmehkomheglpmijnf/test.png">
fb0c3fa351ea22371db00d3db97d02f3b399780	vandebo@chromium.org <vandebo@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jul 31 20:38:18 2012 +0000	Revert 149261 - Support SHA-256 in public key pins for HTTPS. Broke the compile on CrOS.  Looks like const-ness problem: net/socket/ssl_client_socket_nss.cc: In member function 'int net::SSLClientSocketNSS::DoVerifyCertComplete(int)': net/socket/ssl_client_socket_nss.cc:3458:error: no matching function for call to 'net::TransportSecurityState::DomainState::IsChainOfPublicKeysPermitted(std::vector<std::vector<net::HashValue, std::allocator<net::HashValue> >, std::allocator<std::vector<net::HashValue, std::allocator<net::HashValue> > > >&)' ./net/base/transport_security_state.h:94: note: candidates are: bool net::TransportSecurityState::DomainState::IsChainOfPublicKeysPermitted(const net::HashValueVector&) const The HTTP-based Public Key Pinning Internet Draft (tools.ietf.org/html/draft-ietf-websec-key-pinning) requires this. Per wtc, give the *Fingeprint* types more meaningful *HashValue* names. Cleaning up lint along the way. TEST=net_unittests, unit_tests TransportSecurityPersisterTest TBR=palmer@chromium.org	117914	elegate d;	https://chromiumcodereview.appspot.com/10827104	svn://svn.chromium.org/chrome/trunk/src@149268 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_unittest.cc b/net/url_request/url_request_unittest.cc <newline>index 8cacd6b..1fdfc1d 100644 <newline>--- a/net/url_request/url_request_unittest.cc <newline>+++ b/net/url_request/url_request_unittest.cc <newline>@@ -146,7 +146,7 @@ void CheckSSLInfo(const SSLInfo& ssl_info) { <newline>   EXPECT_NE(0, cipher_suite); <newline> } <newline>-bool FingerprintsEqual(const HashValueVector& a, const HashValueVector& b) { <newline>+bool FingerprintsEqual(const FingerprintVector& a, const FingerprintVector& b) { <newline>   size_t size = a.size(); <newline>   if (size != b.size()) <newline>@@ -549,7 +549,7 @@ class URLRequestTestHTTP : public URLRequestTest { <newline>                         strlen(expected_data))); <newline>   } <newline>-  bool DoManyCookiesRequest(int num_cookies) { <newline>+  bool DoManyCookiesRequest(int num_cookies){ <newline>     URLRequest r(test_server_.GetURL("set-many-cookies?" + <newline>                                      base::IntToString(num_cookies)), <newline>@@ -563,7 +563,7 @@ class URLRequestTestHTTP : public URLRequestTest { <newline>     bool is_success = r.status().is_success(); <newline>-    if (!is_success) { <newline>+    if (!is_success){ <newline>       // Requests handled by ChromeFrame send a less precise error message, <newline>       // ERR_CONNECTION_ABORTED. <newline>       EXPECT_TRUE(r.status().error() == ERR_RESPONSE_HEADERS_TOO_BIG || <newline>@@ -1472,7 +1472,7 @@ class TestSSLConfigService : public SSLConfigService { <newline> // This the fingerprint of the "Testing CA" certificate used by the testserver. <newline> // See net/data/ssl/certificates/ocsp-test-root.pem. <newline>-static const SHA1HashValue kOCSPTestCertFingerprint = <newline>+static const SHA1Fingerprint kOCSPTestCertFingerprint = <newline>   { { 0xf1, 0xad, 0xf6, 0xce, 0x42, 0xac, 0xe7, 0xb4, 0xf4, 0x24, <newline>       0xdb, 0x1a, 0xf7, 0xa0, 0x9f, 0x09, 0xa1, 0xea, 0xf1, 0x5c } };
1ef81d18a930dabb2759b301ac7487654aab2b3	mnaganov@chromium.org <mnaganov@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jul 24 11:39:36 2012 +0000	Add an ability to call WebKit's WebFrame::loadData via NavigationController. WebFrame::loadData accepts HTML that is wrapped into a 'data:' scheme URL and two URLs: the base URL is used for resolving relative URLs in the HTML, the history URL is put into the navigation history. WebKit has all the required support for this method. What is required is to pass base and history URLs from RVH to WebKit's WebFrame. Also, as Chromium contains additional security checks when loading page resources, we need to add the base URL into the list of request URLs for the security policy. TEST=none	none		https://chromiumcodereview.appspot.com/10544175	svn://svn.chromium.org/chrome/trunk/src@148090 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/renderer/render_view_impl.cc b/content/renderer/render_view_impl.cc <newline>index a19474c..a9bda28 100644 <newline>--- a/content/renderer/render_view_impl.cc <newline>+++ b/content/renderer/render_view_impl.cc <newline>@@ -101,6 +101,7 @@ <newline> #include "media/base/message_loop_factory.h" <newline> #include "media/filters/audio_renderer_impl.h" <newline> #include "media/filters/gpu_video_decoder.h" <newline>+#include "net/base/data_url.h" <newline> #include "net/base/escape.h" <newline> #include "net/base/net_errors.h" <newline> #include "net/http/http_util.h" <newline>@@ -1053,6 +1054,21 @@ void RenderViewImpl::OnNavigate(const ViewMsg_Navigate_Params& params) { <newline>     DCHECK_NE(params.page_id, -1); <newline>     main_frame->loadHistoryItem( <newline>         webkit_glue::HistoryItemFromString(params.state)); <newline>+  } else if (!params.base_url_for_data_url.is_empty()) { <newline>+    // A loadData request with a specified base URL. <newline>+    std::string mime_type, charset, data; <newline>+    if (net::DataURL::Parse(params.url, &mime_type, &charset, &data)) { <newline>+      main_frame->loadData( <newline>+          WebData(data.c_str(), data.length()), <newline>+          WebString::fromUTF8(mime_type), <newline>+          WebString::fromUTF8(charset), <newline>+          params.base_url_for_data_url, <newline>+          params.history_url_for_data_url, <newline>+          false); <newline>+    } else { <newline>+      CHECK(false) << <newline>+          "Invalid URL passed: " << params.url.possibly_invalid_spec(); <newline>+    } <newline>   } else { <newline>     // Navigate to the given URL. <newline>     WebURLRequest request(params.url);
f446d0e7e759e13297313c278266c48604bde2e	gdk@chromium.org <gdk@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jun 26 01:39:25 2012 +0000	Disable the special behaviour of document.cookie in platform apps. Previously, if code within a platform app attempted to access (or override) the document.cookie field then a DOM security exception would have been raised. TEST=none	none		https://chromiumcodereview.appspot.com/10636039	svn://svn.chromium.org/chrome/trunk/src@144091 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/extensions/extension_webkit_preferences.cc b/chrome/browser/extensions/extension_webkit_preferences.cc <newline>index b15f3398..1b7c682 100644 <newline>--- a/chrome/browser/extensions/extension_webkit_preferences.cc <newline>+++ b/chrome/browser/extensions/extension_webkit_preferences.cc <newline>@@ -39,6 +39,7 @@ void SetPreferences(const extensions::Extension* extension, <newline>     webkit_prefs->databases_enabled = false; <newline>     webkit_prefs->local_storage_enabled = false; <newline>     webkit_prefs->sync_xhr_in_documents_enabled = false; <newline>+    webkit_prefs->cookie_enabled = false; <newline>   } <newline>   // Enable WebGL features that regular pages can't access, since they add
afde5c8aaf0a8b0557c8627a1d633361be79190	xians@chromium.org <xians@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jun 25 17:00:53 2012 +0000	Feature1: User goes to http://neave.com/webcam/html5/ The url displayed is the security origin, just like maps.google.com User needs to allow or deny access to his camera and microphone. Some sites will require only the mic or only the webcam. User can open an options drop down. The drop down needs to be clicked for every modification. A divide line separates microphones and webcams. User can also decide to Always allow. The decision will also remember the devices chosen. Details: The "Always allow" option will remember both the decision and the devices chosen. If "Always allow" is selected and Deny is pressed, access is denied. Upon the next visit, the infobar will be displayed again. If a a website is Allowed and "Always allowed": ...And devices disappears from the computer. It will show the infobar and ask the user to choose devices. Feature2: Settings => Privacy => Content Settings We want to add a new section called Media to cover the getUserMedia decisions. And we are able to see and remove the exception lists there. TEST=go to https://apprtc.appspot.com; click "always allow this site to use this device" option; go to content setting/privacy/media, try ask/block settings and remove exceptions.	132075,10532048		https://chromiumcodereview.appspot.com/10537099	svn://svn.chromium.org/chrome/trunk/src@143918 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/tools/chromeactions.txt b/chrome/tools/chromeactions.txt <newline>index 40966b5..705e2c9 100644 <newline>--- a/chrome/tools/chromeactions.txt <newline>+++ b/chrome/tools/chromeactions.txt <newline>@@ -943,6 +943,7 @@ <newline> 0x3f92cd6678d2f595	Options_DefaultHandlersSettingChanged <newline> 0x5dfe307474e6b526	Options_DefaultImagesSettingChanged <newline> 0x8ac0134529158dae	Options_DefaultJavaScriptSettingChanged <newline>+0x6a97ed68e3457d0e	Options_DefaultMediaStreamSettingChanged <newline> 0xfca02a749fa0f811	Options_DefaultMouseLockSettingChanged <newline> 0xbc49f9107e7c7c7c	Options_DefaultNotificationsSettingChanged <newline> 0x6b91203aa4b5fb3c	Options_DefaultPluginsSettingChanged
db657557633f34651ecf6280e0836d826cebdbc	fischman@chromium.org <fischman@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jun 18 21:34:00 2012 +0000	Request all response headers be exposed to BufferedResourceLoader since it needs them. TEST=http/tests/security/video-cross-origin-readback.html passes even after http/tests/media/resources/serve-video.php is fixed to actually return 206 responses (http://webk.it/89252)			https://chromiumcodereview.appspot.com/10554014	svn://svn.chromium.org/chrome/trunk/src@142821 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/media/buffered_resource_loader.cc b/webkit/media/buffered_resource_loader.cc <newline>index bd05239..1ce4091 100644 <newline>--- a/webkit/media/buffered_resource_loader.cc <newline>+++ b/webkit/media/buffered_resource_loader.cc <newline>@@ -191,6 +191,7 @@ void BufferedResourceLoader::Start( <newline>       options.crossOriginRequestPolicy = <newline>           WebURLLoaderOptions::CrossOriginRequestPolicyAllow; <newline>     } else { <newline>+      options.exposeAllResponseHeaders = true; <newline>       options.crossOriginRequestPolicy = <newline>           WebURLLoaderOptions::CrossOriginRequestPolicyUseAccessControl; <newline>       if (cors_mode_ == kUseCredentials)
31a2597b90a0aaa0a22a963c85b6c3b84b84236	primiano@chromium.org <primiano@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jun 15 16:07:54 2012 +0000	Moving tray icon and notification balloon for background speech recognition sessions to ChromeSpeechRecognitionManagerDelegate. (Speech CL1.13) The ChromeSpeechRecognitionManagerDelegate now keeps, within profile preferences, a flag that indicates whether a security notification has been shown for each speech recognition context. This applies only to speech recognition sessions initiated by extensions or JS. TEST=none	116954		https://chromiumcodereview.appspot.com/10407120	svn://svn.chromium.org/chrome/trunk/src@142399 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/renderer/speech_recognition_dispatcher.cc b/content/renderer/speech_recognition_dispatcher.cc <newline>index 90123dd..210a66f 100644 <newline>--- a/content/renderer/speech_recognition_dispatcher.cc <newline>+++ b/content/renderer/speech_recognition_dispatcher.cc <newline>@@ -69,7 +69,7 @@ void SpeechRecognitionDispatcher::start( <newline>   } <newline>   msg_params.language = UTF16ToUTF8(params.language()); <newline>   msg_params.is_one_shot = !params.continuous(); <newline>-  msg_params.origin_url = "";  // TODO(primiano) we need an origin from WebKit. <newline>+  msg_params.origin_url = params.origin().toString().utf8(); <newline>   msg_params.render_view_id = routing_id(); <newline>   msg_params.request_id = GetIDForHandle(handle); <newline>   Send(new SpeechRecognitionHostMsg_StartRequest(msg_params));
0a9b5471ffdd02f36b6c788fab8dcd9fb13d451	dalecurtis@google.com <dalecurtis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jun 15 02:35:27 2012 +0000	Roll FFmpeg to pick up security fixes. Pulls in the following security fixes: 59c122b matroskadec: add assert on lack of overflow in pkt_size+offset 4b7c523 matroskadec: change size check in matroska_decode_buffer() to unsigned 08169fc matroskadec: move lace_size check up so it catches all code pathes 88a740a matroskadec: change assert to av_assert0() 71529bd Fix incorrect unsigned->signed conversion. Adds a new test for the issue. TEST=ffmpeg_regression_tests, video test matrix. TBR=scherkus	132779		https://chromiumcodereview.appspot.com/10546180	svn://svn.chromium.org/chrome/trunk/src@142328 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/ffmpeg/ffmpeg_regression_tests.cc b/media/ffmpeg/ffmpeg_regression_tests.cc <newline>index 6bdde35..6390eb7 100644 <newline>--- a/media/ffmpeg/ffmpeg_regression_tests.cc <newline>+++ b/media/ffmpeg/ffmpeg_regression_tests.cc <newline>@@ -131,9 +131,14 @@ FFMPEG_TEST_CASE(Cr112976, "security/112976.ogg", PIPELINE_OK, PIPELINE_OK, <newline>                  "d23bacec582c94b8a6dc53b0971bf67e"); <newline> FFMPEG_TEST_CASE(Cr116927, "security/116927.ogv", PIPELINE_ERROR_DECODE, <newline>                  PIPELINE_ERROR_DECODE, kNullHash, kNullHash); <newline>+FFMPEG_TEST_CASE(Cr117912, "security/117912.webm", DEMUXER_ERROR_COULD_NOT_OPEN, <newline>+                 DEMUXER_ERROR_COULD_NOT_OPEN, kNullHash, kNullHash); <newline> FFMPEG_TEST_CASE(Cr123481, "security/123481.ogv", PIPELINE_OK, <newline>                  PIPELINE_OK, "e6dd853fcbd746c8bb2ab2b8fc376fc7", <newline>                  "da909399f17e8f8ad7f1fcb3c4ccc33a"); <newline>+FFMPEG_TEST_CASE(Cr132779, "security/132779.webm", <newline>+                 DEMUXER_ERROR_COULD_NOT_PARSE, DEMUXER_ERROR_COULD_NOT_PARSE, <newline>+                 kNullHash, kNullHash); <newline> // General MKV test cases. <newline> FFMPEG_TEST_CASE(MKV_0, "security/nested_tags_lang.mka.627.628", PIPELINE_OK, <newline>@@ -234,8 +239,6 @@ FFMPEG_TEST_CASE(WEBM_4, "security/out.webm.68798.1929", <newline>                  kNullHash, kNullHash); <newline> FFMPEG_TEST_CASE(WEBM_5, "content/frame_size_change.webm", PIPELINE_OK, <newline>                  PIPELINE_OK, "d8fcf2896b7400a2261bac9e9ea930f8", kNullHash); <newline>-FFMPEG_TEST_CASE(WEBM_6, "security/117912.webm", DEMUXER_ERROR_COULD_NOT_OPEN, <newline>-                 DEMUXER_ERROR_COULD_NOT_OPEN, kNullHash, kNullHash); <newline> // Audio Functional Tests <newline> FFMPEG_TEST_CASE(AUDIO_GAMING_0, "content/gaming/a_220_00.mp3", PIPELINE_OK,
9c4d66bba66d823dbf58552239170438ac3386b	jschuh@chromium.org <jschuh@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jun 15 02:05:12 2012 +0000	Make --disable-web-security pop an infobar TEST=Run with --disable-web-security and check for the infobar.	132658		https://chromiumcodereview.appspot.com/10548055	svn://svn.chromium.org/chrome/trunk/src@142317 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/startup/bad_flags_prompt.cc b/chrome/browser/ui/startup/bad_flags_prompt.cc <newline>index c0ec588..86f3c2f 100644 <newline>--- a/chrome/browser/ui/startup/bad_flags_prompt.cc <newline>+++ b/chrome/browser/ui/startup/bad_flags_prompt.cc <newline>@@ -24,6 +24,7 @@ void ShowBadFlagsPrompt(Browser* browser) { <newline>     switches::kSingleProcess, <newline>     switches::kNoSandbox, <newline>     switches::kInProcessWebGL, <newline>+    switches::kDisableWebSecurity, <newline>     NULL <newline>   };
e8f719a266bd09b7a5a4d3c356f67b420f72729	nirnimesh@chromium.org <nirnimesh@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jun 12 01:57:57 2012 +0000	Remove references to missing chromeos_security tests TBR=dennisjeffrey@chromium.org TEST=	chromium-os:31267		https://chromiumcodereview.appspot.com/10545130	svn://svn.chromium.org/chrome/trunk/src@141593 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/PYAUTO_TESTS b/chrome/test/functional/PYAUTO_TESTS <newline>index f0c6acc..26b8b0c 100644 <newline>--- a/chrome/test/functional/PYAUTO_TESTS <newline>+++ b/chrome/test/functional/PYAUTO_TESTS <newline>@@ -333,10 +333,6 @@ <newline>       '-chromeos_file_browser.ChromeosFileBrowserTest.testOpenMediaFiles', <newline>       # crbug.com/129469 <newline>       '-chromeos_prefs.ChromeosPrefsTest.testCaptureUserPhoto', <newline>-      # crosbug.com/31267 <newline>-      '-chromeos_security.ChromeosSecurity.testBundledCrxPermissions', <newline>-      '-chromeos_security.ChromeosSecurity.testComponentExtensionPermissions', <newline>-      '-chromeos_security.ChromeosSecurity.testNoUnexpectedExtensions', <newline>       # Downloads panel stays even after declining a download. <newline>       # crosbug.com/14728 <newline>       '-downloads.DownloadsTest.testDeclineDangerousDownload', <newline>@@ -410,10 +406,6 @@ <newline>       # Permanently-disabled tests. <newline>       # =========================== <newline>       '-infobars.InfobarTest.testPluginCrashForMultiTabs', <newline>-      '-chromeos_security.ChromeosSecurity.testBundledCrxPermissions', <newline>-      '-chromeos_security.ChromeosSecurity.testCannotViewLocalFiles', <newline>-      '-chromeos_security.ChromeosSecurity.testComponentExtensionPermissions', <newline>-      '-chromeos_security.ChromeosSecurity.testNoUnexpectedExtensions', <newline>       '-flash.FlashTest.testCanLoadFlash', <newline>       '-flash.FlashTest.testFlashLoadsAfterKill', <newline>       '-flash.FlashTest.testFlashIncognitoMode',
ae9c0d6716cb5720131dadb5114c7190e346695	nirnimesh@chromium.org <nirnimesh@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jun 8 01:01:11 2012 +0000	Remove obsolete tests from chromeos_security.py These tests have been migrated to autotest. TEST=	chromium-os:22759		https://chromiumcodereview.appspot.com/10536063	svn://svn.chromium.org/chrome/trunk/src@141143 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/chromeos_security.py b/chrome/test/functional/chromeos_security.py <newline>index 77c2527..b541451 100755 <newline>--- a/chrome/test/functional/chromeos_security.py <newline>+++ b/chrome/test/functional/chromeos_security.py <newline>@@ -14,21 +14,6 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>   Requires ChromeOS to be logged in. <newline>   """ <newline>-  def setUp(self): <newline>-    pyauto.PyUITest.setUp(self) <newline>-    baseline_file = os.path.abspath(os.path.join( <newline>-        pyauto.PyUITest.DataDir(), 'pyauto_private', 'chromeos', <newline>-        'security', 'extension_permission_baseline.txt')) <newline>-    self.assertTrue(os.path.exists(baseline_file), <newline>-                    msg='Baseline info file does not exist.') <newline>-    baseline_info = self.EvalDataFrom(baseline_file) <newline>-    self._bundled_crx_directory = baseline_info['BUNDLED_CRX_DIRECTORY'] <newline>-    self._bundled_crx_baseline = baseline_info['BUNDLED_CRX_BASELINE'] <newline>-    self._component_extension_baseline = ( <newline>-        baseline_info['COMPONENT_EXTENSION_BASELINE']) <newline>-    if self.GetBrowserInfo()['properties']['is_official']: <newline>-      self._component_extension_baseline.extend( <newline>-          baseline_info['OFFICIAL_COMPONENT_EXTENSIONS']) <newline>   def ExtraChromeFlags(self): <newline>     """Override default list of extra flags typically used with automation. <newline>@@ -52,154 +37,6 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>       self.assertNotEqual(title, self.GetActiveTabTitle(), <newline>           msg='Could access local file %s.' % url) <newline>-  def _AssertPermissionSetIsExpected(self, expected_set, actual_set, perm_type, <newline>-                                     full_expected_info, full_actual_info): <newline>-    """Asserts that the set of permissions for an extension is expected. <newline>- <newline>-    Args: <newline>-      expected_set: A set of permissions that are expected to be present. <newline>-      actual_set: A set of permissions that are actually present. <newline>-      perm_type: A string describing the type of permission involved. <newline>-      full_expected_info: A dictionary fully describing the expected information <newline>-                          associated with the given extension. <newline>-      full_actual_info: A dictionary fully describing the actual information <newline>-                        associated with the given extension. <newline>-    """ <newline>-    def _GetSetDifferenceMessage(expected_set, actual_set): <newline>-      strings = [] <newline>-      for missing_item in expected_set.difference(actual_set): <newline>-        strings.append('Missing item: "%s"' % missing_item) <newline>-      for extra_item in actual_set.difference(expected_set): <newline>-        strings.append('Unexpected (extra) item: "%s"' % extra_item) <newline>-      return '\n'.join(strings) <newline>- <newline>-    self.assertEqual( <newline>-        expected_set, actual_set, <newline>-        msg=('%s do not match for "%s".\n' <newline>-             '%s\n' <newline>-             'Expected extension info:\n%s' <newline>-             '\nActual extension info:\n%s' % <newline>-             (perm_type, full_expected_info['name'], <newline>-              _GetSetDifferenceMessage(expected_set, actual_set), <newline>-              self.pformat(full_expected_info), <newline>-              self.pformat(full_actual_info)))) <newline>- <newline>-  def _AssertExtensionNamesAreExpected(self, expected_set, actual_set, <newline>-                                       ext_type, full_expected_info, <newline>-                                       full_actual_info): <newline>-    """Asserts that a set of extensions is expected. <newline>- <newline>-    Args: <newline>-      expected_set: A set of extension names that are expected to be present. <newline>-      actual_set: A set of extension names that are actually present. <newline>-      ext_type: A string describing the type of extensions involved. <newline>-      full_expected_info: A list of dictionaries describing the expected <newline>-                          information for all extensions. <newline>-      full_actual_info: A list of dictionaries describing the actual information <newline>-                        for all extensions. <newline>-    """ <newline>-    # Skip the Web Store and Bookmark Manager; they are integral to Chrome and <newline>-    # are redundant to check on ChromeOS.  This can reduce the number of times <newline>-    # we have to update the baseline for this test. <newline>-    for extension_name in ['Chrome Web Store', 'Bookmark Manager']: <newline>-      actual_set.discard(extension_name) <newline>- <newline>-    def _GetSetDifferenceMessage(expected_set, actual_set): <newline>-      strings = [] <newline>-      for missing_item in expected_set.difference(actual_set): <newline>-        strings.append('Missing item: "%s"' % missing_item) <newline>-        located_ext_info = [info for info in full_expected_info if <newline>-                            info['name'] == missing_item][0] <newline>-        strings.append(self.pformat(located_ext_info)) <newline>-      for extra_item in actual_set.difference(expected_set): <newline>-        strings.append('Unexpected (extra) item: "%s"' % extra_item) <newline>-        located_ext_info = [info for info in full_actual_info if <newline>-                            info['name'] == extra_item][0] <newline>-        strings.append(self.pformat(located_ext_info)) <newline>-      return '\n'.join(strings) <newline>- <newline>-    self.assertEqual( <newline>-        expected_set, actual_set, <newline>-        msg='%s names do not match the baseline.\n' <newline>-            '%s\n' % <newline>-            (ext_type, _GetSetDifferenceMessage(expected_set, actual_set))) <newline>- <newline>-  def _VerifyExtensionPermissions(self, baseline): <newline>-    """Ensures extension permissions in the baseline match actual info. <newline>- <newline>-    This function will fail the current test if either (1) an extension named <newline>-    in the baseline is not currently installed in Chrome; or (2) the api <newline>-    permissions or effective host permissions of an extension in the baseline <newline>-    do not match the actual permissions associated with the extension in Chrome. <newline>- <newline>-    Args: <newline>-      baseline: A dictionary of expected extension information, containing <newline>-                extension names and api/effective host permission info. <newline>-    """ <newline>-    full_ext_actual_info = self.GetExtensionsInfo() <newline>-    for ext_expected_info in baseline: <newline>-      located_ext_info = [info for info in full_ext_actual_info if <newline>-                          info['name'] == ext_expected_info['name']] <newline>-      self.assertTrue( <newline>-          located_ext_info, <newline>-          msg=('Cannot locate extension info for "%s".\n' <newline>-               'Expected extension info:\n%s' % <newline>-               (ext_expected_info['name'], self.pformat(ext_expected_info)))) <newline>-      ext_actual_info = located_ext_info[0] <newline>-      self._AssertPermissionSetIsExpected( <newline>-          set(ext_expected_info['effective_host_permissions']), <newline>-          set(ext_actual_info['effective_host_permissions']), <newline>-          'Effective host permissions', ext_expected_info, ext_actual_info) <newline>-      self._AssertPermissionSetIsExpected( <newline>-          set(ext_expected_info['api_permissions']), <newline>-          set(ext_actual_info['api_permissions']), <newline>-          'API permissions', ext_expected_info, ext_actual_info) <newline>- <newline>-  def testComponentExtensionPermissions(self): <newline>-    """Ensures component extension permissions are as expected.""" <newline>-    expected_names = [ext['name'] for ext in self._component_extension_baseline] <newline>-    ext_actual_info = self.GetExtensionsInfo() <newline>-    actual_names = [ext['name'] for ext in ext_actual_info if <newline>-                    ext['is_component']] <newline>-    self._AssertExtensionNamesAreExpected( <newline>-        set(expected_names), set(actual_names), 'Component extension', <newline>-        self._component_extension_baseline, ext_actual_info) <newline>-    self._VerifyExtensionPermissions(self._component_extension_baseline) <newline>- <newline>-  def testBundledCrxPermissions(self): <newline>-    """Ensures bundled CRX permissions are as expected.""" <newline>-    # Verify that each bundled CRX on the device is expected, then install it. <newline>-    for file_name in os.listdir(self._bundled_crx_directory): <newline>-      if file_name.endswith('.crx'): <newline>-        self.assertTrue( <newline>-            file_name in [x['crx_file'] for x in self._bundled_crx_baseline], <newline>-            msg='Unexpected CRX file: ' + file_name) <newline>-        crx_file = os.path.join(self._bundled_crx_directory, file_name) <newline>-        self.InstallExtension(crx_file) <newline>- <newline>-    # Verify that the permissions information in the baseline matches the <newline>-    # permissions associated with the installed bundled CRX extensions. <newline>-    self._VerifyExtensionPermissions(self._bundled_crx_baseline) <newline>- <newline>-  def testNoUnexpectedExtensions(self): <newline>-    """Ensures there are no unexpected bundled or component extensions.""" <newline>-    # Install all bundled extensions on the device. <newline>-    for file_name in os.listdir(self._bundled_crx_directory): <newline>-      if file_name.endswith('.crx'): <newline>-        crx_file = os.path.join(self._bundled_crx_directory, file_name) <newline>-        self.InstallExtension(crx_file) <newline>- <newline>-    # Ensure that the set of installed extension names precisely matches the <newline>-    # baseline. <newline>-    expected_names = [ext['name'] for ext in self._component_extension_baseline] <newline>-    expected_names.extend([ext['name'] for ext in self._bundled_crx_baseline]) <newline>-    ext_actual_info = self.GetExtensionsInfo() <newline>-    installed_names = [ext['name'] for ext in ext_actual_info] <newline>-    self._AssertExtensionNamesAreExpected( <newline>-        set(expected_names), set(installed_names), 'Installed extension', <newline>-        self._component_extension_baseline + self._bundled_crx_baseline, <newline>-        ext_actual_info) <newline>- <newline> if __name__ == '__main__': <newline>   pyauto_functional.Main()
50e957dbc0eb2cf7e602d5a5b145ac64661a03d	primiano@chromium.org <primiano@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jun 6 15:21:24 2012 +0000	Refactored ChromeSpeechRecognitionPreferences according to new ProfileKeyedServiceFactory architecture. (Speech CL1.12) - Storage of speech recognition preferences within the Profile is now handled entirely by ChromeSpeechRecognitionPreferences class. - Added a preference (kSpeechRecognitionTrayNotificationShownList) item for keeping a list of contexts (extensions/websites) for which the security notification has been already shown. - Speech Input Extensions are temporarly still using the old boolean preference kSpeechInputTrayNotificationShown on their own. Will be fixed soon in another CL. - (Hopefully) Fixed bug 125691 happening when processing a recognition request after profile shutdown. TEST=none	116954,125691	ngProfile::GetSpeechRecognitionPreferences() {	https://chromiumcodereview.appspot.com/10416033	svn://svn.chromium.org/chrome/trunk/src@140764 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/shell/shell_browser_context.cc b/content/shell/shell_browser_context.cc <newline>index 92f618b..4deb540 100644 <newline>--- a/content/shell/shell_browser_context.cc <newline>+++ b/content/shell/shell_browser_context.cc <newline>@@ -75,8 +75,6 @@ class ShellSpeechRecognitionPreferences : public SpeechRecognitionPreferences { <newline>     return false; <newline>   } <newline>-  virtual void SetFilterProfanities(bool filter_profanities) OVERRIDE {} <newline>- <newline>  protected: <newline>   virtual ~ShellSpeechRecognitionPreferences() {}
b61135340ddd15e31f8c8715ad4a05dc129d94d	tpayne@chromium.org <tpayne@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jun 4 23:05:45 2012 +0000	applied upstream security patch TEST=None	b/6534265		https://chromiumcodereview.appspot.com/10515013	svn://svn.chromium.org/chrome/trunk/src@140415 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/qcms/src/transform_util.c b/third_party/qcms/src/transform_util.c <newline>index e8447e5..5443e9d 100644 <newline>--- a/third_party/qcms/src/transform_util.c <newline>+++ b/third_party/qcms/src/transform_util.c <newline>@@ -235,6 +235,21 @@ float u8Fixed8Number_to_float(uint16_t x) <newline> 	return x/256.; <newline> } <newline>+/* The SSE2 code uses min & max which let NaNs pass through. <newline>+   We want to try to prevent that here by ensuring that <newline>+   gamma table is within expected values. */ <newline>+void validate_gamma_table(float gamma_table[256]) <newline>+{ <newline>+	int i; <newline>+	for (i = 0; i < 256; i++) { <newline>+		// Note: we check that the gamma is not in range <newline>+		// instead of out of range so that we catch NaNs <newline>+		if (!(gamma_table[i] > 0.f && gamma_table[i] < 1.f)) { <newline>+			gamma_table[i] = 0.f; <newline>+		} <newline>+	} <newline>+} <newline>+ <newline> float *build_input_gamma_table(struct curveType *TRC) <newline> { <newline> 	float *gamma_table; <newline>@@ -254,7 +269,10 @@ float *build_input_gamma_table(struct curveType *TRC) <newline> 			} <newline> 		} <newline> 	} <newline>-        return gamma_table; <newline>+ <newline>+	validate_gamma_table(gamma_table); <newline>+ <newline>+	return gamma_table; <newline> } <newline> struct matrix build_colorant_matrix(qcms_profile *p)
b0f973847635757eded91e2009320dda89561c0	satorux@chromium.org <satorux@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 31 06:12:11 2012 +0000	dbus: Include method names in error messages for method call failures To make it easier to investigate method call failures. TEST=run EndToEndAsyncTest.Timeout and confirm the error message is changed ("org.chromium.TestInterface.SlowEcho" is now included): BEFORE [ RUN      ] EndToEndAsyncTest.Timeout [24410:24410:0530/105557:701377078661:ERROR:object_proxy.cc(456)] Failed to call method: org.freedesktop.DBus.Error.NoReply: Did not receive a reply. Possible causes include: the remote application did not send a reply, the message bus security policy blocked the reply, the reply timeout expired, or the network connection was broken. AFTER [ RUN      ] EndToEndAsyncTest.Timeout [24959:24959:0530/110437:701896995336:ERROR:object_proxy.cc(462)] Failed to call method: org.chromium.TestInterface.SlowEcho: org.freedesktop.DBus.Error.NoReply: Did not receive a reply. Possible causes include: the remote application did not send a reply, the message bus security policy blocked the reply, the reply timeout expired, or the network connection was broken.	126217		https://chromiumcodereview.appspot.com/10456030	svn://svn.chromium.org/chrome/trunk/src@139745 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/dbus/object_proxy.h b/dbus/object_proxy.h <newline>index 620622f..0311854 100644 <newline>--- a/dbus/object_proxy.h <newline>+++ b/dbus/object_proxy.h <newline>@@ -226,11 +226,15 @@ class ObjectProxy : public base::RefCountedThreadSafe<ObjectProxy> { <newline>                                               void* user_data); <newline>   // Helper method for logging response errors appropriately. <newline>-  void LogMethodCallFailure(const base::StringPiece& error_name, <newline>+  void LogMethodCallFailure(const base::StringPiece& interface_name, <newline>+                            const base::StringPiece& method_name, <newline>+                            const base::StringPiece& error_name, <newline>                             const base::StringPiece& error_message) const; <newline>   // Used as ErrorCallback by CallMethod(). <newline>-  void OnCallMethodError(ResponseCallback response_callback, <newline>+  void OnCallMethodError(const std::string& interface_name, <newline>+                         const std::string& method_name, <newline>+                         ResponseCallback response_callback, <newline>                          ErrorResponse* error_response); <newline>   scoped_refptr<Bus> bus_;
ea38a8008900b4a6504e7e4f8c47e38c94c9ec6	alexeypa@chromium.org <alexeypa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat May 26 04:33:52 2012 +0000	Set a security descriptor allowing SYSTEM, built-in adminitrators and interactive users to call Chromoting Host Controller methods. This enables so-called "Over-The-Shoulder (OTS) Elevation". See http://msdn.microsoft.com/en-us/library/windows/desktop/ms679687(v=vs.85).aspx for details.	129477		https://chromiumcodereview.appspot.com/10451005	svn://svn.chromium.org/chrome/trunk/src@139180 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/remoting/host/installer/chromoting.wxs b/remoting/host/installer/chromoting.wxs <newline>index ef6b1b3..7f1ce86 100644 <newline>--- a/remoting/host/installer/chromoting.wxs <newline>+++ b/remoting/host/installer/chromoting.wxs <newline>@@ -25,6 +25,19 @@ <newline>     "ChromotingElevatedController.ElevatedController" ?> <newline>   <?define ControllerTypelib = "{9d9a5a2c-576e-4acd-9c75-aabff74b205d}" ?> <newline>+  <!-- <newline>+    The long hex value below is a security descriptor that allows SYSTEM, <newline>+    built-in administrators and interactive users to call methods of a COM <newline>+    object (COM_RIGHTS_EXECUTE and COM_RIGHTS_EXECUTE_LOCAL). The security <newline>+    descriptor was generated from SDDL definition using the PowerShell script <newline>+    below: <newline>+ <newline>+      $sddl = "O:BAG:BAD:(A;;0x3;;;IU)(A;;0x3;;;SY)(A;;0x3;;;BA)" <newline>+      $i = ([wmiclass]"Win32_SecurityDescriptorHelper").SDDLToBinarySD($sddl).BinarySD <newline>+      -join ($i | foreach {$_.ToString("X2")}) <newline>+  --> <newline>+  <?define ControllerSd = "010004805C0000006C00000000000000140000000200480003000000000014000300000001010000000000050400000000001400030000000101000000000005120000000000180003000000010200000000000520000000200200000102000000000005200000002002000001020000000000052000000020020000" ?> <newline>+ <newline>   <?ifndef FileSource ?> <newline>     <?error FileSource must be defined ?> <newline>   <?endif?> <newline>@@ -175,6 +188,9 @@ <newline>             <RegistryKey Key="$(var.ControllerAppid)" Action="create"> <newline>               <RegistryValue Type="string" <newline>                              Value="ChromotingElevatedController"/> <newline>+              <RegistryValue Name="AccessPermission" <newline>+                             Type="binary" <newline>+                             Value="$(var.ControllerSd)"/> <newline>             </RegistryKey> <newline>             <RegistryKey Key="$(var.ControllerBinary)" Action="create">
e5a4394991e4d4a0a739d927fba9edac057f61f	yujie.mao@intel.com <yujie.mao@intel.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 25 14:43:36 2012 +0000	Cleanup: [WebRTC] Use GURL type to replace the std::string type of security origin TEST=content_unittests, html <video> local capture preview	None		https://chromiumcodereview.appspot.com/10442008	svn://svn.chromium.org/chrome/trunk/src@139034 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/renderer/pepper/pepper_plugin_delegate_impl.cc b/content/renderer/pepper/pepper_plugin_delegate_impl.cc <newline>index 9bfcfd1..d6a80c4 100644 <newline>--- a/content/renderer/pepper/pepper_plugin_delegate_impl.cc <newline>+++ b/content/renderer/pepper/pepper_plugin_delegate_impl.cc <newline>@@ -57,6 +57,7 @@ <newline> #include "content/renderer/renderer_clipboard_client.h" <newline> #include "content/renderer/renderer_restrict_dispatch_group.h" <newline> #include "content/renderer/webplugin_delegate_proxy.h" <newline>+#include "googleurl/src/gurl.h" <newline> #include "ipc/ipc_channel_handle.h" <newline> #include "media/video/capture/video_capture_proxy.h" <newline> #include "ppapi/c/dev/pp_video_dev.h" <newline>@@ -1420,7 +1421,8 @@ int PepperPluginDelegateImpl::EnumerateDevices( <newline> #if defined(ENABLE_WEBRTC) <newline>   render_view_->media_stream_dispatcher()->EnumerateDevices( <newline>       request_id, device_enumeration_event_handler_.get()->AsWeakPtr(), <newline>-      PepperDeviceEnumerationEventHandler::FromPepperDeviceType(type), ""); <newline>+      PepperDeviceEnumerationEventHandler::FromPepperDeviceType(type), <newline>+      GURL()); <newline> #else <newline>   MessageLoop::current()->PostTask( <newline>       FROM_HERE, <newline>@@ -1611,7 +1613,8 @@ int PepperPluginDelegateImpl::OpenDevice(PP_DeviceType_Dev type, <newline>       request_id, <newline>       device_enumeration_event_handler_.get()->AsWeakPtr(), <newline>       device_id, <newline>-      PepperDeviceEnumerationEventHandler::FromPepperDeviceType(type), ""); <newline>+      PepperDeviceEnumerationEventHandler::FromPepperDeviceType(type), <newline>+      GURL()); <newline> #else <newline>   MessageLoop::current()->PostTask( <newline>       FROM_HERE,
83b1c68975e09ff0dfc6682439c62464a6008fb	nirnimesh@chromium.org <nirnimesh@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 24 22:19:40 2012 +0000	[chromeos] Disable 3 chromeos_security pyauto tests R=jimhebert@chromium.org TEST=	chromium-os:31267		https://chromiumcodereview.appspot.com/10440032	svn://svn.chromium.org/chrome/trunk/src@138913 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/PYAUTO_TESTS b/chrome/test/functional/PYAUTO_TESTS <newline>index 65d2627..3ffdefc 100644 <newline>--- a/chrome/test/functional/PYAUTO_TESTS <newline>+++ b/chrome/test/functional/PYAUTO_TESTS <newline>@@ -324,6 +324,10 @@ <newline>       '-chromeos_file_browser.ChromeosFileBrowserTest.testOpenMediaFiles', <newline>       # crbug.com/129469 <newline>       '-chromeos_prefs.ChromeosPrefsTest.testCaptureUserPhoto', <newline>+      # crosbug.com/31267 <newline>+      '-chromeos_security.ChromeosSecurity.testBundledCrxPermissions', <newline>+      '-chromeos_security.ChromeosSecurity.testComponentExtensionPermissions', <newline>+      '-chromeos_security.ChromeosSecurity.testNoUnexpectedExtensions', <newline>       # Downloads panel stays even after declining a download. <newline>       # crosbug.com/14728 <newline>       '-downloads.DownloadsTest.testDeclineDangerousDownload',
606df6950d9699c9ae45a53d1baf81c5fd6ecdb	xians@chromium.org <xians@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon May 14 11:33:38 2012 +0000	#1, Use chrome/chromium logo icon for the balloon. #2, If the tile of the web page is URL, use security origin as the displayed string. #3, Activate the tab when the user clicks on the icon menu. #4, Get rid of and/or, use and or no and.	127404		https://chromiumcodereview.appspot.com/10391029	svn://svn.chromium.org/chrome/trunk/src@136853 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/media/media_stream_capture_indicator.h b/chrome/browser/media/media_stream_capture_indicator.h <newline>index d904d6f..88efcda 100644 <newline>--- a/chrome/browser/media/media_stream_capture_indicator.h <newline>+++ b/chrome/browser/media/media_stream_capture_indicator.h <newline>@@ -6,7 +6,7 @@ <newline> #define CHROME_BROWSER_MEDIA_MEDIA_STREAM_CAPTURE_INDICATOR_H_ <newline> #pragma once <newline>-#include <list> <newline>+#include <vector> <newline> #include <string> <newline> #include "base/memory/ref_counted.h" <newline>@@ -47,32 +47,30 @@ class MediaStreamCaptureIndicator <newline>   // Struct to store the usage information of the capture devices for each tab. <newline>   struct CaptureDeviceTab { <newline>     CaptureDeviceTab(int render_process_id, <newline>-                     int render_view_id, <newline>-                     content::MediaStreamDeviceType type) <newline>+                     int render_view_id) <newline>         : render_process_id(render_process_id), <newline>           render_view_id(render_view_id), <newline>-          type(type) {} <newline>+          audio_ref_count(0), <newline>+          video_ref_count(0) {} <newline>     int render_process_id; <newline>     int render_view_id; <newline>-    content::MediaStreamDeviceType type; <newline>+    int audio_ref_count; <newline>+    int video_ref_count; <newline>   }; <newline>   // A private predicate used in std::find_if to find a |CaptureDeviceTab| <newline>   // which matches the information specified at construction. <newline>   class TabEquals { <newline>    public: <newline>-    TabEquals(int render_process_id, int render_view_id, <newline>-              content::MediaStreamDeviceType type); <newline>     TabEquals(int render_process_id, int render_view_id); <newline>     bool operator() ( <newline>         const MediaStreamCaptureIndicator::CaptureDeviceTab& tab); <newline>    private: <newline>-     int render_process_id_; <newline>-     int render_view_id_; <newline>-     content::MediaStreamDeviceType type_; <newline>+    int render_process_id_; <newline>+    int render_view_id_; <newline>   }; <newline>   friend class base::RefCountedThreadSafe<MediaStreamCaptureIndicator>; <newline>@@ -93,13 +91,6 @@ class MediaStreamCaptureIndicator <newline>   // Makes sure we have done one-time initialization of the |icon_image_|. <newline>   void EnsureStatusTrayIcon(); <newline>-  // Triggers a balloon in the corner telling capture devices are being used. <newline>-  void ShowBalloon(int render_process_id, int render_view_id, <newline>-                   const content::MediaStreamDevices& devices) const; <newline>- <newline>-  // Hides the status tray from the desktop. <newline>-  void Hide(); <newline>- <newline>   // Adds the new tab to the device usage list. <newline>   void AddCaptureDeviceTab(int render_process_id, <newline>                            int render_view_id, <newline>@@ -110,23 +101,42 @@ class MediaStreamCaptureIndicator <newline>                               int render_view_id, <newline>                               const content::MediaStreamDevices& devices); <newline>+  // Triggers a balloon in the corner telling capture devices are being used. <newline>+  // This function is called by AddCaptureDeviceTab(). <newline>+  void ShowBalloon(int render_process_id, int render_view_id, <newline>+                   bool audio, bool video) const; <newline>+ <newline>+  // Hides the status tray from the desktop. This function is called by <newline>+  // RemoveCaptureDeviceTab() when the device usage list becomes empty. <newline>+  void Hide(); <newline>+ <newline>   // Gets the title of the tab. <newline>   string16 GetTitle(int render_process_id, int render_view_id) const; <newline>+  // Gets the security originator of the tab. It returns a string with no '/' <newline>+  // at the end to display in the UI. <newline>+  string16 GetSecurityOrigin(int render_process_id, int render_view_id) const; <newline>+ <newline>   // Updates the status tray menu with the new device list. This call will be <newline>   // triggered by both AddCaptureDeviceTab() and RemoveCaptureDeviceTab(). <newline>   void UpdateStatusTrayIconContextMenu(); <newline>+  // Updates the status tray tooltip with the new device list. This function is <newline>+  // called by UpdateStatusTrayIconContextMenu(). <newline>+  void UpdateStatusTrayIconTooltip(bool audio, bool video); <newline>+ <newline>   // Reference to our status icon - owned by the StatusTray. If null, <newline>   // the platform doesn't support status icons. <newline>   StatusIcon* status_icon_; <newline>   // Icon to be displayed on the status tray. <newline>-  SkBitmap icon_image_; <newline>+  SkBitmap tray_image_; <newline>+ <newline>+  SkBitmap balloon_image_; <newline>   // A list that contains the usage information of the opened capture devices. <newline>-  typedef std::list<CaptureDeviceTab> CaptureDeviceTabList; <newline>-  CaptureDeviceTabList tabs_; <newline>+  typedef std::vector<CaptureDeviceTab> CaptureDeviceTabs; <newline>+  CaptureDeviceTabs tabs_; <newline> }; <newline> #endif  // CHROME_BROWSER_MEDIA_MEDIA_STREAM_CAPTURE_INDICATOR_H_
3980c7b400dcbfdfbd5ac15bc87364719d6aa9a	thestig@chromium.org <thestig@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed May 9 17:57:23 2012 +0000	Move transport_security_persister to chrome/browser/net. Fix test file leak, tear down issues, and style issues in TransportSecurityPersisterTest. TEST=none	none		https://chromiumcodereview.appspot.com/10388041	svn://svn.chromium.org/chrome/trunk/src@136074 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index 4c1bf50..ec51b3e 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -1370,6 +1370,7 @@ <newline>         'browser/net/sqlite_persistent_cookie_store_unittest.cc', <newline>         'browser/net/sqlite_server_bound_cert_store_unittest.cc', <newline>         'browser/net/ssl_config_service_manager_pref_unittest.cc', <newline>+        'browser/net/transport_security_persister_unittest.cc', <newline>         'browser/net/url_fixer_upper_unittest.cc', <newline>         'browser/net/url_info_unittest.cc', <newline>         'browser/notifications/desktop_notification_service_unittest.cc', <newline>@@ -1612,7 +1613,6 @@ <newline>         'browser/task_profiler/task_profiler_data_serializer_unittest.cc', <newline>         'browser/themes/browser_theme_pack_unittest.cc', <newline>         'browser/themes/theme_service_unittest.cc', <newline>-        'browser/transport_security_persister_unittest.cc', <newline>         'browser/ui/browser_list_unittest.cc', <newline>         'browser/ui/browser_unittest.cc', <newline>         # It is safe to list */cocoa/* files in the "common" file list
f2f6b5a173c83c4b9b998dd3abcf04c74f7b1ce	mdm@chromium.org <mdm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue May 8 23:02:22 2012 +0000	Per bug 121738, ignore old saved logins for http*://www.google.com which is no longer used for Google login forms. Google login forms are now always on https://accounts.google.com, so these saved logins should be unused. This is a security feature to help minimize the damage that can be done by XSS attacks.	121738		https://chromiumcodereview.appspot.com/10209036	svn://svn.chromium.org/chrome/trunk/src@135938 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index ddfa75a..1f8d6ec 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -1387,6 +1387,7 @@ <newline>         'browser/password_manager/password_form_data.cc', <newline>         'browser/password_manager/password_form_manager_unittest.cc', <newline>         'browser/password_manager/password_manager_unittest.cc', <newline>+        'browser/password_manager/password_store_unittest.cc', <newline>         'browser/password_manager/password_store_default_unittest.cc', <newline>         'browser/password_manager/password_store_mac_unittest.cc', <newline>         'browser/password_manager/password_store_win_unittest.cc',
ac091784670a4e1391053beae4bf50f0fb1612b	zelidrag@chromium.org <zelidrag@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 4 20:04:26 2012 +0000	Fixed security issues related to gdata: protocol handler by: a) changing URL from gdata://viewfiles/<file_id>/<file_path> to drive://<file_id>, and b) registering drive: schema as local and unique origin TEST=see bug for details	chromium-os:30244		http://codereview.chromium.org/10375006	svn://svn.chromium.org/chrome/trunk/src@135402 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/chrome_content_renderer_client.cc b/chrome/renderer/chrome_content_renderer_client.cc <newline>index 46473c3..2833769 100644 <newline>--- a/chrome/renderer/chrome_content_renderer_client.cc <newline>+++ b/chrome/renderer/chrome_content_renderer_client.cc <newline>@@ -206,6 +206,12 @@ void ChromeContentRendererClient::RenderThreadStarted() { <newline>   WebString internal_scheme(ASCIIToUTF16(chrome::kChromeInternalScheme)); <newline>   WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(internal_scheme); <newline>+#if defined(OS_CHROMEOS) <newline>+  WebString drive_scheme(ASCIIToUTF16(chrome::kDriveScheme)); <newline>+  WebSecurityPolicy::registerURLSchemeAsLocal(drive_scheme); <newline>+  WebSecurityPolicy::registerURLSchemeAsNoAccess(drive_scheme); <newline>+#endif <newline>+ <newline>   // chrome: pages should not be accessible by bookmarklets or javascript: <newline>   // URLs typed in the omnibox. <newline>   WebSecurityPolicy::registerURLSchemeAsNotAllowingJavascriptURLs(
f5176bd8dc50abbdbb2e1afbd7068a9b3ece888	kaznacheev@chromium.org <kaznacheev@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 26 14:21:28 2012 +0000	[File Manager] Updated content security policy Added https://docs.google.com to image sources because this is where thumbnails for hosted documents are. TEST=			https://chromiumcodereview.appspot.com/10198025	svn://svn.chromium.org/chrome/trunk/src@134101 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/file_manager/manifest.json b/chrome/browser/resources/file_manager/manifest.json <newline>index 37eb1e1..12e5f1d 100644 <newline>--- a/chrome/browser/resources/file_manager/manifest.json <newline>+++ b/chrome/browser/resources/file_manager/manifest.json <newline>@@ -22,7 +22,7 @@ <newline>     "clipboardRead", <newline>     "https://*.googleusercontent.com/" <newline>   ], <newline>-  "content_security_policy": "default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; frame-src 'self' about:; img-src 'self' data: filesystem: https://*.googleusercontent.com chrome://extension-icon; media-src filesystem: https://*.googleusercontent.com;", <newline>+  "content_security_policy": "default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; frame-src 'self' about:; img-src 'self' data: filesystem: https://docs.google.com https://*.googleusercontent.com chrome://extension-icon; media-src filesystem: https://*.googleusercontent.com;", <newline>   "app": { <newline>     "launch": { <newline>       "local_path": "main.html"
612ee79e9dc48f0cb537eeb5a57c701b62061c7	kaznacheev@chromium.org <kaznacheev@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 26 14:21:28 2012 +0000	[File Manager] Updated content security policy Added https://docs.google.com to image sources because this is where thumbnails for hosted documents are. TEST=			https://chromiumcodereview.appspot.com/10198025	svn://svn.chromium.org/chrome/trunk/src@134101 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/file_manager/manifest.json b/chrome/browser/resources/file_manager/manifest.json <newline>index 37eb1e1..12e5f1d 100644 <newline>--- a/chrome/browser/resources/file_manager/manifest.json <newline>+++ b/chrome/browser/resources/file_manager/manifest.json <newline>@@ -22,7 +22,7 @@ <newline>     "clipboardRead", <newline>     "https://*.googleusercontent.com/" <newline>   ], <newline>-  "content_security_policy": "default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; frame-src 'self' about:; img-src 'self' data: filesystem: https://*.googleusercontent.com chrome://extension-icon; media-src filesystem: https://*.googleusercontent.com;", <newline>+  "content_security_policy": "default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; frame-src 'self' about:; img-src 'self' data: filesystem: https://docs.google.com https://*.googleusercontent.com chrome://extension-icon; media-src filesystem: https://*.googleusercontent.com;", <newline>   "app": { <newline>     "launch": { <newline>       "local_path": "main.html"
c90e20513d53762058a19722e909c8a75c2045b	kuan@chromium.org <kuan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 19 18:03:32 2012 +0000	cros gdata: implement protocol handler for viewing gdata files - this re-implements the previous implementation of chrome://gdata - create new scheme gdata:// to view contents of gdata files - url has format gdata://viewfile/<gdata_resource_id>/<gdata_file_name> - add gdata protocol handler as a hostname filter for url requests during initialization of GDataFileSystem, and remove it in destructor - reading of file contents is done in streaming manner, without the need to store entire file contents in memory before responding to url request - this also mitigates (if not fixes) the security risk imposed by chrome:// scheme TEST=make sure google docs acct has a text file, open file manager, expand Google Docs, double-click on the txt file, new tab should open with file contents	chromium-os:28510,chromium-os:29238		https://chromiumcodereview.appspot.com/10038039	svn://svn.chromium.org/chrome/trunk/src@133014 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/url_constants.h b/chrome/common/url_constants.h <newline>index 4ee5682..ddb5dfc 100644 <newline>--- a/chrome/common/url_constants.h <newline>+++ b/chrome/common/url_constants.h <newline>@@ -195,7 +195,6 @@ extern const char kChromeUIActiveDownloadsHost[]; <newline> extern const char kChromeUIChooseMobileNetworkHost[]; <newline> extern const char kChromeUICryptohomeHost[]; <newline> extern const char kChromeUIDiscardsHost[]; <newline>-extern const char kChromeUIGDataHost[]; <newline> extern const char kChromeUIIdleLogoutDialogHost[]; <newline> extern const char kChromeUIImageBurnerHost[]; <newline> extern const char kChromeUIKeyboardOverlayHost[]; <newline>@@ -344,6 +343,9 @@ extern int kNumberOfChromeDebugURLs; <newline> // Canonical schemes you can use as input to GURL.SchemeIs(). <newline> extern const char kExtensionScheme[]; <newline>+#if defined(OS_CHROMEOS) <newline>+extern const char kGDataScheme[]; <newline>+#endif  // defined(OS_CHROMEOS) <newline> // Call near the beginning of startup to register Chrome's internal URLs that <newline> // should be parsed as "standard" with the googleurl library.
b098e7bc04b2d72a563426eefefdaba210b60e7	kuan@chromium.org <kuan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 19 18:03:32 2012 +0000	cros gdata: implement protocol handler for viewing gdata files - this re-implements the previous implementation of chrome://gdata - create new scheme gdata:// to view contents of gdata files - url has format gdata://viewfile/<gdata_resource_id>/<gdata_file_name> - add gdata protocol handler as a hostname filter for url requests during initialization of GDataFileSystem, and remove it in destructor - reading of file contents is done in streaming manner, without the need to store entire file contents in memory before responding to url request - this also mitigates (if not fixes) the security risk imposed by chrome:// scheme TEST=make sure google docs acct has a text file, open file manager, expand Google Docs, double-click on the txt file, new tab should open with file contents	chromium-os:28510,chromium-os:29238		https://chromiumcodereview.appspot.com/10038039	svn://svn.chromium.org/chrome/trunk/src@133014 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/url_constants.h b/chrome/common/url_constants.h <newline>index 4ee5682..ddb5dfc 100644 <newline>--- a/chrome/common/url_constants.h <newline>+++ b/chrome/common/url_constants.h <newline>@@ -195,7 +195,6 @@ extern const char kChromeUIActiveDownloadsHost[]; <newline> extern const char kChromeUIChooseMobileNetworkHost[]; <newline> extern const char kChromeUICryptohomeHost[]; <newline> extern const char kChromeUIDiscardsHost[]; <newline>-extern const char kChromeUIGDataHost[]; <newline> extern const char kChromeUIIdleLogoutDialogHost[]; <newline> extern const char kChromeUIImageBurnerHost[]; <newline> extern const char kChromeUIKeyboardOverlayHost[]; <newline>@@ -344,6 +343,9 @@ extern int kNumberOfChromeDebugURLs; <newline> // Canonical schemes you can use as input to GURL.SchemeIs(). <newline> extern const char kExtensionScheme[]; <newline>+#if defined(OS_CHROMEOS) <newline>+extern const char kGDataScheme[]; <newline>+#endif  // defined(OS_CHROMEOS) <newline> // Call near the beginning of startup to register Chrome's internal URLs that <newline> // should be parsed as "standard" with the googleurl library.
c7511c39fd03ac56928949e8c75d46da9e708c2	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Apr 16 17:39:06 2012 +0000	Add myself and Julien as OWNERS for security-sensitive Linux files. R=jam@chromium.org			https://chromiumcodereview.appspot.com/10097001	svn://svn.chromium.org/chrome/trunk/src@132421 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/common/OWNERS b/content/common/OWNERS <newline>new file mode 100644 <newline>index 0000000..ec64cb8 <newline>--- /dev/null <newline>+++ b/content/common/OWNERS <newline>@@ -0,0 +1,2 @@ <newline>+# For sandbox_init_linux.cc <newline>+cevans@chromium.org
0d6d6256a9e6970ad477e428374f1fc89aa3ae8	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Apr 16 17:39:06 2012 +0000	Add myself and Julien as OWNERS for security-sensitive Linux files. R=jam@chromium.org			https://chromiumcodereview.appspot.com/10097001	svn://svn.chromium.org/chrome/trunk/src@132421 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/common/OWNERS b/content/common/OWNERS <newline>new file mode 100644 <newline>index 0000000..ec64cb8 <newline>--- /dev/null <newline>+++ b/content/common/OWNERS <newline>@@ -0,0 +1,2 @@ <newline>+# For sandbox_init_linux.cc <newline>+cevans@chromium.org
02c345e0c2e42241fb7f3d6380955d9475a414c	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Apr 13 18:54:18 2012 +0000	net: move HSTS preloaded and pinning info out of code. (This is a reland of r132012, which was reverted in r132016 because it broke net_unittests on ChromeOS.) This change moves information about HSTS preloaded and public key pinning, that were previously written in code, into external files that can be consumed by other programs. Those files are converted by a program (that is not part of the build process) into hsts_preloaded.h. In order to make this change easier to review, hsts_preloaded.h was created by concatenating public_key_hashes.h and transport_security_state.cc. Therefore, the diffs will show where the new, generated file differs from the previous code. public_key_hashes.h and public_key_hashes_check.go are removed and subsumed by hsts_preloaded.h. TEST=net_unittests	none		https://chromiumcodereview.appspot.com/9863001	svn://svn.chromium.org/chrome/trunk/src@132228 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/net.gyp b/net/net.gyp <newline>index b1baccf..dd08354 100644 <newline>--- a/net/net.gyp <newline>+++ b/net/net.gyp <newline>@@ -253,6 +253,7 @@ <newline>         'base/test_root_certs_win.cc', <newline>         'base/transport_security_state.cc', <newline>         'base/transport_security_state.h', <newline>+        'base/transport_security_state_static.h', <newline>         'base/upload_data.cc', <newline>         'base/upload_data.h', <newline>         'base/upload_data_stream.cc',
7874d13cf84789b35363fc10b6dc3498410fea4	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Apr 13 18:54:18 2012 +0000	net: move HSTS preloaded and pinning info out of code. (This is a reland of r132012, which was reverted in r132016 because it broke net_unittests on ChromeOS.) This change moves information about HSTS preloaded and public key pinning, that were previously written in code, into external files that can be consumed by other programs. Those files are converted by a program (that is not part of the build process) into hsts_preloaded.h. In order to make this change easier to review, hsts_preloaded.h was created by concatenating public_key_hashes.h and transport_security_state.cc. Therefore, the diffs will show where the new, generated file differs from the previous code. public_key_hashes.h and public_key_hashes_check.go are removed and subsumed by hsts_preloaded.h. TEST=net_unittests	none		https://chromiumcodereview.appspot.com/9863001	svn://svn.chromium.org/chrome/trunk/src@132228 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/net.gyp b/net/net.gyp <newline>index b1baccf..dd08354 100644 <newline>--- a/net/net.gyp <newline>+++ b/net/net.gyp <newline>@@ -253,6 +253,7 @@ <newline>         'base/test_root_certs_win.cc', <newline>         'base/transport_security_state.cc', <newline>         'base/transport_security_state.h', <newline>+        'base/transport_security_state_static.h', <newline>         'base/upload_data.cc', <newline>         'base/upload_data.h', <newline>         'base/upload_data_stream.cc',
4ed43cabcc2fb7dca9124d870441bba56bd20a1	tim@chromium.org <tim@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 12 18:12:02 2012 +0000	Revert 132012 - net: move HSTS preloaded and pinning info out of code. This change moves information about HSTS preloaded and public key pinning, that were previously written in code, into external files that can be consumed by other programs. Those files are converted by a program (that is not part of the build process) into hsts_preloaded.h. In order to make this change easier to review, hsts_preloaded.h was created by concatenating public_key_hashes.h and transport_security_state.cc. Therefore, the diffs will show where the new, generated file differs from the previous code. public_key_hashes.h and public_key_hashes_check.go are removed and subsumed by hsts_preloaded.h. TEST=net_unittests TBR=agl@chromium.org	none		https://chromiumcodereview.appspot.com/10003002	svn://svn.chromium.org/chrome/trunk/src@132016 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/net.gyp b/net/net.gyp <newline>index b6288de..d33fc22 100644 <newline>--- a/net/net.gyp <newline>+++ b/net/net.gyp <newline>@@ -253,7 +253,6 @@ <newline>         'base/test_root_certs_win.cc', <newline>         'base/transport_security_state.cc', <newline>         'base/transport_security_state.h', <newline>-        'base/transport_security_state_static.h', <newline>         'base/upload_data.cc', <newline>         'base/upload_data.h', <newline>         'base/upload_data_stream.cc',
611ef324d97e1c327fd2e4e9681b73a48e97582	tim@chromium.org <tim@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 12 18:12:02 2012 +0000	Revert 132012 - net: move HSTS preloaded and pinning info out of code. This change moves information about HSTS preloaded and public key pinning, that were previously written in code, into external files that can be consumed by other programs. Those files are converted by a program (that is not part of the build process) into hsts_preloaded.h. In order to make this change easier to review, hsts_preloaded.h was created by concatenating public_key_hashes.h and transport_security_state.cc. Therefore, the diffs will show where the new, generated file differs from the previous code. public_key_hashes.h and public_key_hashes_check.go are removed and subsumed by hsts_preloaded.h. TEST=net_unittests TBR=agl@chromium.org	none		https://chromiumcodereview.appspot.com/10003002	svn://svn.chromium.org/chrome/trunk/src@132016 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/net.gyp b/net/net.gyp <newline>index b6288de..d33fc22 100644 <newline>--- a/net/net.gyp <newline>+++ b/net/net.gyp <newline>@@ -253,7 +253,6 @@ <newline>         'base/test_root_certs_win.cc', <newline>         'base/transport_security_state.cc', <newline>         'base/transport_security_state.h', <newline>-        'base/transport_security_state_static.h', <newline>         'base/upload_data.cc', <newline>         'base/upload_data.h', <newline>         'base/upload_data_stream.cc',
36ca9fbfa1cc341bb185a74a7c390912e51cb71	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 12 17:40:14 2012 +0000	net: move HSTS preloaded and pinning info out of code. This change moves information about HSTS preloaded and public key pinning, that were previously written in code, into external files that can be consumed by other programs. Those files are converted by a program (that is not part of the build process) into hsts_preloaded.h. In order to make this change easier to review, hsts_preloaded.h was created by concatenating public_key_hashes.h and transport_security_state.cc. Therefore, the diffs will show where the new, generated file differs from the previous code. public_key_hashes.h and public_key_hashes_check.go are removed and subsumed by hsts_preloaded.h. TEST=net_unittests	none		https://chromiumcodereview.appspot.com/9863001	svn://svn.chromium.org/chrome/trunk/src@132012 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/net.gyp b/net/net.gyp <newline>index d33fc22..b6288de 100644 <newline>--- a/net/net.gyp <newline>+++ b/net/net.gyp <newline>@@ -253,6 +253,7 @@ <newline>         'base/test_root_certs_win.cc', <newline>         'base/transport_security_state.cc', <newline>         'base/transport_security_state.h', <newline>+        'base/transport_security_state_static.h', <newline>         'base/upload_data.cc', <newline>         'base/upload_data.h', <newline>         'base/upload_data_stream.cc',
ffc2b31ceab8b4096cb442ca25ac68542f52268	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 12 17:40:14 2012 +0000	net: move HSTS preloaded and pinning info out of code. This change moves information about HSTS preloaded and public key pinning, that were previously written in code, into external files that can be consumed by other programs. Those files are converted by a program (that is not part of the build process) into hsts_preloaded.h. In order to make this change easier to review, hsts_preloaded.h was created by concatenating public_key_hashes.h and transport_security_state.cc. Therefore, the diffs will show where the new, generated file differs from the previous code. public_key_hashes.h and public_key_hashes_check.go are removed and subsumed by hsts_preloaded.h. TEST=net_unittests	none		https://chromiumcodereview.appspot.com/9863001	svn://svn.chromium.org/chrome/trunk/src@132012 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/net.gyp b/net/net.gyp <newline>index d33fc22..b6288de 100644 <newline>--- a/net/net.gyp <newline>+++ b/net/net.gyp <newline>@@ -253,6 +253,7 @@ <newline>         'base/test_root_certs_win.cc', <newline>         'base/transport_security_state.cc', <newline>         'base/transport_security_state.h', <newline>+        'base/transport_security_state_static.h', <newline>         'base/upload_data.cc', <newline>         'base/upload_data.h', <newline>         'base/upload_data_stream.cc',
6fce90f6367e1ea1ecc98ad229f0a74dabbea76	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 28 15:33:40 2012 +0000	Rename hsts_preloaded.h to transport_security_state_static.h. This is a complete no-op as neither filename is actually used. This is just to make a future change easier to review. (Not reviewed.)				svn://svn.chromium.org/chrome/trunk/src@129413 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state_static.h b/net/base/transport_security_state_static.h <newline>new file mode 100644 <newline>index 0000000..ce2c713 <newline>--- /dev/null <newline>+++ b/net/base/transport_security_state_static.h <newline>@@ -0,0 +1,2836 @@ <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#ifndef NET_BASE_PUBLIC_KEY_HASHES_ <newline>+#define NET_BASE_PUBLIC_KEY_HASHES_ <newline>+#pragma once <newline>+ <newline>+// This file contains SubjectPublicKeyInfo hashes for public key pinning. The <newline>+// hashes are base64 encoded, SHA1 digests. <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICPDCCAaUCEDyRMcsf9tAbDpq40ES/Er4wDQYJKoZIhvcNAQEFBQAwXzELMAkG <newline>+A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFz <newline>+cyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTk2 <newline>+MDEyOTAwMDAwMFoXDTI4MDgwMjIzNTk1OVowXzELMAkGA1UEBhMCVVMxFzAVBgNV <newline>+BAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFzcyAzIFB1YmxpYyBQcmlt <newline>+YXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGfMA0GCSqGSIb3DQEBAQUAA4GN <newline>+ADCBiQKBgQDJXFme8huKARS0EN8EQNvjV69qRUCPhAwL0TPZ2RHP7gJYHyX3KqhE <newline>+BarsAx94f56TuZoAqiN91qyFomNFx3InzPRMxnVx0jnvT0Lwdd8KkMaOIG+YD/is <newline>+I19wKTakyYbnsZogy1Olhec9vn2a/iRFM9x2Fe0PonFkTGUugWhFpwIDAQABMA0G <newline>+CSqGSIb3DQEBBQUAA4GBABByUqkFFBkyCEHwxWsKzH4PIRnN5GfcX6kb5sroc50i <newline>+2JhucwNhkcV8sEVAbkSdjbCxlnRhLQ2pRdKkkirWmnWXbj9T/UWZYB2oK0z5XqcJ <newline>+2HUw19JlYD1n1khVdWk/kfVIC0dpImmClr7JyDiGSnoscxlIaU5rfGW/D/xwzoiQ <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3[] = <newline>+    "sha1/4n972HfV354KP560yw4uqe/baXc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGjCCAwICEQCbfgZJoz5iudXukEhxKe9XMA0GCSqGSIb3DQEBBQUAMIHKMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl <newline>+cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu <newline>+LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT <newline>+aWduIENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp <newline>+dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD <newline>+VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT <newline>+aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ <newline>+bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu <newline>+IENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMu6nFL8eB8aHm8b <newline>+N3O9+MlrlBIwT/A2R/XQkQr1F8ilYcEWQE37imGQ5XYgwREGfassbqb1EUGO+i2t <newline>+KmFZpGcmTNDovFJbcCAEWNF6yaRpvIMXZK0Fi7zQWM6NjPXr8EJJC52XJ2cybuGu <newline>+kxUccLwgTS8Y3pKI6GyFVxEa6X7jJhFUokWWVYPKMIno3Nij7SqAP395ZVc+FSBm <newline>+CC+Vk7+qRy+oRpfwEuL+wgorUeZ25rdGt+INpsyow0xZVYnm6FNcHOqd8GIWC6fJ <newline>+Xwzw3sJ2zq/3avL6QaaiMxTJ5Xpj055iN9WFZZ4O5lMkdBteHRJTW8cs54NJOxWu <newline>+imi5V5cCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAERSWwauSCPc/L8my/uRan2Te <newline>+2yFPhpk0djZX3dAVL8WtfxUfN2JzPtTnX84XA9s1+ivbrmAJXx5fj267Cz3qWhMe <newline>+DGBvtcC1IyIuBwvLqXTLR7sdwdela8wv0kL9Sd2nic9TutoAWii/gt/4uhMdUIaC <newline>+/Y4wjylGsB49Ndo4YhYYSq3mtlFs3q9i6wHQHiT+eo8SGhJouPtmmRQURVyu565p <newline>+F4ErWjfJXir0xuKhXFSbplQAz/DxwceYMBo7Nhbbo27q/a2ywtrvAkcTisDxszGt <newline>+TxzhT5yvDwyd93gN2PQ1VoDat20Xj50egWTh/sVFuq1ruQp6Tk9LhO5L8X3dEQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G3[] = <newline>+    "sha1/IvGeLsbqzPxdI0b0wuj2xVTdXgc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICsDCCAhmgAwIBAgIDC2dxMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDkwNjA4MjA0MzI3WhcNMTMwNjA3MTk0MzI3 <newline>+WjBGMQswCQYDVQQGEwJVUzETMBEGA1UEChMKR29vZ2xlIEluYzEiMCAGA1UEAxMZ <newline>+R29vZ2xlIEludGVybmV0IEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOBjQAw <newline>+gYkCgYEAye23pIucV+eEPkB9hPSP0XFjU5nneXQUr0SZMyCSjXvlKAy6rWxJfoNf <newline>+NFlOCnowzdDXxFdF7dWq1nMmzq0yE7jXDx07393cCDaob1FEm8rWIFJztyaHNWrb <newline>+qeXUWaUr/GcZOfqTGBhs3t0lig4zFEfC7wFQeeT9adGnwKziV28CAwEAAaOBozCB <newline>+oDAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFL/AMOv1QxE+Z7qekfv8atrjaxIk <newline>+MB8GA1UdIwQYMBaAFEjmaPkr0rKV10fYIyAQTzOYkJ/UMBIGA1UdEwEB/wQIMAYB <newline>+Af8CAQAwOgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2NybC5nZW90cnVzdC5jb20v <newline>+Y3Jscy9zZWN1cmVjYS5jcmwwDQYJKoZIhvcNAQEFBQADgYEAuIojxkiWsRF8YHde <newline>+BZqrocb6ghwYB8TrgbCoZutJqOkM0ymt9e8kTP3kS8p/XmOrmSfLnzYhLLkQYGfN <newline>+0rTw8Ktx5YtaiScRhKqOv5nwnQkhClIZmloJ0pC3+gz4fniisIWvXEyZ2VxVKfml <newline>+UUIuOss4jHg7y/j7lYe8vJD5UDI= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Google1024[] = <newline>+    "sha1/QMVAHW+MuvCLAO3vse6H0AWzuc0="; <newline>+ <newline>+// Not yet used publicly. <newline>+static const char kSPKIHash_Google2048[] = <newline>+    "sha1/AbkhxY0L343gKf+cki7NVWp+ozk="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDIDCCAomgAwIBAgIENd70zzANBgkqhkiG9w0BAQUFADBOMQswCQYDVQQGEwJV <newline>+UzEQMA4GA1UEChMHRXF1aWZheDEtMCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2Vy <newline>+dGlmaWNhdGUgQXV0aG9yaXR5MB4XDTk4MDgyMjE2NDE1MVoXDTE4MDgyMjE2NDE1 <newline>+MVowTjELMAkGA1UEBhMCVVMxEDAOBgNVBAoTB0VxdWlmYXgxLTArBgNVBAsTJEVx <newline>+dWlmYXggU2VjdXJlIENlcnRpZmljYXRlIEF1dGhvcml0eTCBnzANBgkqhkiG9w0B <newline>+AQEFAAOBjQAwgYkCgYEAwV2xWGcIYu6gmi0fCG2RFGiYCh7+2gRvE4RiIcPRfM6f <newline>+BeC4AfBONOziipUEZKzxa1NfBbPLZ4C/QgKO/t0BCezhABRP/PvwDN1Dulsr4R+A <newline>+cJkVV5MW8Q+XarfCaCMczE1ZMKxRHjuvK9buY0V7xdlfUNLjUA86iOe/FP3gx7kC <newline>+AwEAAaOCAQkwggEFMHAGA1UdHwRpMGcwZaBjoGGkXzBdMQswCQYDVQQGEwJVUzEQ <newline>+MA4GA1UEChMHRXF1aWZheDEtMCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2VydGlm <newline>+aWNhdGUgQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMBoGA1UdEAQTMBGBDzIwMTgw <newline>+ODIyMTY0MTUxWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gj <newline>+IBBPM5iQn9QwHQYDVR0OBBYEFEjmaPkr0rKV10fYIyAQTzOYkJ/UMAwGA1UdEwQF <newline>+MAMBAf8wGgYJKoZIhvZ9B0EABA0wCxsFVjMuMGMDAgbAMA0GCSqGSIb3DQEBBQUA <newline>+A4GBAFjOKer89961zgK5F7WF0bnj4JXMJTENAKaSbn+2kmOeUJXRmm/kEd5jhW6Y <newline>+7qj/WsjTVbJmcVfewCHrPSqnI0kBBIZCe/zuf6IWUrVnZ9NA2zsmWLIodz2uFHdh <newline>+1voqZiegDfqnc1zqcPGUIWVEX/r87yloqaKHee9570+sB3c4 <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_EquifaxSecureCA[] = <newline>+    "sha1/SOZo+SvSspXXR9gjIBBPM5iQn9Q="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICsjCCAhugAwIBAgIDBe3YMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDUwODMxMjA0MDM3WhcNMTIwODMxMjA0MDM3 <newline>+WjBIMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQWV0bmEgSW5jLjEkMCIGA1UEAxMb <newline>+QWV0bmEgSW5jLiBTZWN1cmUgU2VydmVyIENBMIGfMA0GCSqGSIb3DQEBAQUAA4GN <newline>+ADCBiQKBgQCnB2yrm4i44DG5epPu0fbe/pOZDWOvAS7qCcy6YbSkPfOHfH9Blmf3 <newline>+8L6D5yY1pzmTXaU7cDQu4qmj21toEIGwBziMmW6NsiV8nHtmtfXfHP6xrmyPUdN2 <newline>+DdTj937fnrYOoyMhGgBYEjiemeHFQxZSpKZdolFEFXbUa2/yWQafrQIDAQABo4Gj <newline>+MIGgMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQU2S4/xnaeitmFkzoxLnZeo33n <newline>+H4owHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gjIBBPM5iQn9QwEgYDVR0TAQH/BAgw <newline>+BgEB/wIBADA6BgNVHR8EMzAxMC+gLaArhilodHRwOi8vY3JsLmdlb3RydXN0LmNv <newline>+bS9jcmxzL3NlY3VyZWNhLmNybDANBgkqhkiG9w0BAQUFAAOBgQBMSoZHIrD1rq8v <newline>+UG3UYbN76xiF9FDRzWTs5Mvv4Psvf2kk426slzNO0ukFAsmwqN1mA/P9Nc4FlMMC <newline>+YtcnLNwC/syEYdQBOJjxfTVGTqh5q6jDs7S3rPJv8mrFk8ldC8PxU1ZJVfSlFCDn <newline>+6diMDgvOAJfUeJlIRLGu2k/ksI0Y1w== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Aetna[] = <newline>+    "sha1/klKqFN6/gK4wqtlOYDhwJKVDLxo="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDfTCCAuagAwIBAgIDErvmMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDIwNTIxMDQwMDAwWhcNMTgwODIxMDQwMDAw <newline>+WjBCMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEbMBkGA1UE <newline>+AxMSR2VvVHJ1c3QgR2xvYmFsIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB <newline>+CgKCAQEA2swYYzD99BcjGlZ+W988bDjkcbd4kdS8odhM+KhDtgPpTSEHCIjaWC9m <newline>+OSm9BXiLnTjoBbdqfnGk5sRgprDvgOSJKA+eJdbtg/OtppHHmMlCGDUUna2YRpIu <newline>+T8rxh0PBFpVXLVDviS2Aelet8u5fa9IAjbkU+BQVNdnARqN7csiRv8lVK83Qlz6c <newline>+JmTM386DGXHKTubU1XupGc1V3sjs0l44U+VcT4wt/lAjNvxm5suOpDkZALeVAjmR <newline>+Cw7+OC7RHQWa9k0+bw8HHa8sHo9gOeL6NlMTOdReJivbPagUvTLrGAMoUgRx5asz <newline>+PeE4uwc2hGKceeoWMPRfwCvocWvk+QIDAQABo4HwMIHtMB8GA1UdIwQYMBaAFEjm <newline>+aPkr0rKV10fYIyAQTzOYkJ/UMB0GA1UdDgQWBBTAephojYn7qwVkDBF9qn1luMrM <newline>+TjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjA6BgNVHR8EMzAxMC+g <newline>+LaArhilodHRwOi8vY3JsLmdlb3RydXN0LmNvbS9jcmxzL3NlY3VyZWNhLmNybDBO <newline>+BgNVHSAERzBFMEMGBFUdIAAwOzA5BggrBgEFBQcCARYtaHR0cHM6Ly93d3cuZ2Vv <newline>+dHJ1c3QuY29tL3Jlc291cmNlcy9yZXBvc2l0b3J5MA0GCSqGSIb3DQEBBQUAA4GB <newline>+AHbhEm5OSxYShjAGsoEIz/AIx8dxfmbuwu3UOx//8PDITtZDOLC5MH0Y0FWDomrL <newline>+NhGc6Ehmo21/uBPUR/6LWlxz/K7ZGzIZOKuXNBSqltLroxwUCEm2u+WR74M26x1W <newline>+b8ravHNjkOR/ez4iyz0H7V84dJzjA1BOoa+Y7mHyhD8S <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustGlobal[] = <newline>+    "sha1/wHqYaI2J+6sFZAwRfap9ZbjKzE4="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDizCCAvSgAwIBAgIDDW5iMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDYxMTI3MDAwMDAwWhcNMTgwODIxMTYxNTAw <newline>+WjBYMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjExMC8GA1UE <newline>+AxMoR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIw <newline>+DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL64FXv/1Hx9Z62DZHvIQlMt3/aE <newline>+CCBh1gFZapxEEa/vdv2Vfs5hMLt6g18CvQFmyu4VjW+hMJy9oYWelDrzVogAMc/Y <newline>+7mqWAtntA4z7dW3n6rhVFgUWmvTgXrGIwGSFXBVNiMe3uuB16a0FPZ3HiUjguyjI <newline>+A+Ewk2ReUsBZcCI1V4iK8ZUKg9e8MXMBNO3vRnHgawKoNXJrl5tm4MsceV/YGgRo <newline>+HkcC5p1g4jaXAd/ONZLfvmfHbXdZO4+d1pAVlLxCNBDBOfmxJz5+1op1xbKvltOi <newline>+3pvkmL594emBrbZv/NcO2uA0sA0ad+fjCJjvWPqchLc2r8LfrNL0EAZwcTUCAwEA <newline>+AaOB6DCB5TAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFCzVUEGXFYvwjzZhW0r7 <newline>+a9mZyTOSMB8GA1UdIwQYMBaAFEjmaPkr0rKV10fYIyAQTzOYkJ/UMA8GA1UdEwEB <newline>+/wQFMAMBAf8wOgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2NybC5nZW90cnVzdC5j <newline>+b20vY3Jscy9zZWN1cmVjYS5jcmwwRgYDVR0gBD8wPTA7BgRVHSAAMDMwMQYIKwYB <newline>+BQUHAgEWJWh0dHA6Ly93d3cuZ2VvdHJ1c3QuY29tL3Jlc291cmNlcy9jcHMwDQYJ <newline>+KoZIhvcNAQEFBQADgYEAr/MO1nKrx6mXyiprhDneeanwgeUIZ6vXLyACAXEMBCLJ <newline>+HoiVA8lJOq9nCEmw1Qj1ID2AkaDFh6P7yaMXkfmoL67pD9+Wcg91F4BdeAFNnx9t <newline>+e9j1QjgjGpmT9IO+OzV05zcTNXqstLaQgmwnpODsnjW9v+UpoUefWzL86Zl9Kzk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustPrimary[] = <newline>+    "sha1/sBmJ5+/7Sq/LFI9YRjl2IkFQ4bo="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIFijCCBHKgAwIBAgIKYSCKYgAAAAAACDANBgkqhkiG9w0BAQUFADBSMQswCQYD <newline>+VQQGEwJVUzEaMBgGA1UEChMRSW50ZWwgQ29ycG9yYXRpb24xJzAlBgNVBAMTHklu <newline>+dGVsIEV4dGVybmFsIEJhc2ljIFBvbGljeSBDQTAeFw0wOTA1MTUxOTI3MjZaFw0x <newline>+NTA1MTUxOTM3MjZaMFYxCzAJBgNVBAYTAlVTMRowGAYDVQQKExFJbnRlbCBDb3Jw <newline>+b3JhdGlvbjErMCkGA1UEAxMiSW50ZWwgRXh0ZXJuYWwgQmFzaWMgSXNzdWluZyBD <newline>+QSAzQjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQEM1Wn9TU9vc9C <newline>++/Tc7KB+eiYElmrcEWE32WUdHvWG+IcQHVQsikTmMyKKojNLw2B5s6Iekc8ivDo/ <newline>+wCfjZzX9JyftMnc+AArc0la87Olybzm8K9jXEfTBvTnUSFSiI9ZYefITdiUgqlAF <newline>+uljFZEHYKYtLuhrRacpmQfP4mV63NKdc2bT804HRf6YptZFa4k6YN94zlrGNrBuQ <newline>+Q74WFzz/jLBusbUpEkro6Mu/ZYFOFWQrV9lBhF9Ruk8yN+3N6n9fUo/qBigiF2kE <newline>+n9xVh1ykl7SCGL2jBUkXx4qgV27a6Si8lRRdgrHGtN/HWnSWlLXTH5l575H4Lq++ <newline>+77OFv38CAwEAAaOCAlwwggJYMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFA7G <newline>+KvdZsggQkCVvw939imYxMCvFMAsGA1UdDwQEAwIBhjASBgkrBgEEAYI3FQEEBQID <newline>+AQABMCMGCSsGAQQBgjcVAgQWBBQ5oFY2ekKQ/5Ktim+VdMeSWb4QWTAZBgkrBgEE <newline>+AYI3FAIEDB4KAFMAdQBiAEMAQTAfBgNVHSMEGDAWgBQaxgxKxEdvqNutK/D0Vgaj <newline>+7TdUDDCBvQYDVR0fBIG1MIGyMIGvoIGsoIGphk5odHRwOi8vd3d3LmludGVsLmNv <newline>+bS9yZXBvc2l0b3J5L0NSTC9JbnRlbCUyMEV4dGVybmFsJTIwQmFzaWMlMjBQb2xp <newline>+Y3klMjBDQS5jcmyGV2h0dHA6Ly9jZXJ0aWZpY2F0ZXMuaW50ZWwuY29tL3JlcG9z <newline>+aXRvcnkvQ1JML0ludGVsJTIwRXh0ZXJuYWwlMjBCYXNpYyUyMFBvbGljeSUyMENB <newline>+LmNybDCB4wYIKwYBBQUHAQEEgdYwgdMwYwYIKwYBBQUHMAKGV2h0dHA6Ly93d3cu <newline>+aW50ZWwuY29tL3JlcG9zaXRvcnkvY2VydGlmaWNhdGVzL0ludGVsJTIwRXh0ZXJu <newline>+YWwlMjBCYXNpYyUyMFBvbGljeSUyMENBLmNydDBsBggrBgEFBQcwAoZgaHR0cDov <newline>+L2NlcnRpZmljYXRlcy5pbnRlbC5jb20vcmVwb3NpdG9yeS9jZXJ0aWZpY2F0ZXMv <newline>+SW50ZWwlMjBFeHRlcm5hbCUyMEJhc2ljJTIwUG9saWN5JTIwQ0EuY3J0MA0GCSqG <newline>+SIb3DQEBBQUAA4IBAQCxtQEHchVQhXyjEqtMVUMe6gkmPsIczHxSeqNbo9dsD+6x <newline>+bT65JT+oYgpIAtfEsYXeUJu1cChqpb22U5bMAz7eaQcW5bzefufWvA6lg2048B8o <newline>+czBj/q+5P5NpYrUO8jOmN4jTjfJq3ElZ7yFWpy7rB3Vm/aN6ATYqWfMbS/xfh+JC <newline>+xmH3droUmMJI0/aZJHsLtjbjFnNsHDNrJZX1vxlM78Lb1hjskTENPmhbVbfTj5i/ <newline>+ZGnhv4tmI8QZPCNtcegXJrfhRl2D9bWpdTOPrWiLDUqzy1Z6KL7TcOS/PCl8RHCJ <newline>+XkPau/thTQCpIoDa2+c+3XA++gRTfAQ4svTO260N <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Intel[] = <newline>+    "sha1/DsYq91myCBCQJW/D3f2KZjEwK8U="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDWzCCAsSgAwIBAgIDCaxIMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDgwODE1MTY0NTE1WhcNMTMwMjE0MTc0NTE1 <newline>+WjBtMQswCQYDVQQGEwJERTEcMBoGA1UEChMTVEMgVHJ1c3RDZW50ZXIgR21iSDEe <newline>+MBwGA1UECxMVVEMgVHJ1c3RDZW50ZXIgU1NMIENBMSAwHgYDVQQDExdUQyBUcnVz <newline>+dENlbnRlciBTU0wgQ0EgSTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB <newline>+AOkCoJoNbJw33wSxNWbDdmIfDIedR8Zmr/mjOhMkXdxRYb6qrl/WfMEuo4PBcysJ <newline>+kF81LaDMkBH0zc7Hs1eYixrMVObkCmEUjxYylgOk4ExGwhmIWDJUWGslNBUIIhFf <newline>++ucDWuGZNfILQrwCWRHYBG0n/6lZPylCqopCMYhBK5sTI/PyuHEAzDL7+buep/Na <newline>+zn+oy/a6x1nobsuL9X2oFaWZb7Z6ty5kZ/U56JHa7vnsLrg4ePwiQb8jtyUdz0fD <newline>+uMHkNzK0gWxr4hm0v92otYFuOTZqNLEJneeiILxUCCMop2chr1obpq2zGVNxJ/rP <newline>+StWmcu75KBGMpT+mzFgIyf0CAwEAAaOBozCBoDAOBgNVHQ8BAf8EBAMCAQYwHQYD <newline>+VR0OBBYEFOe/bKlImXeG4tD/MKCQHQtk0IU6MB8GA1UdIwQYMBaAFEjmaPkr0rKV <newline>+10fYIyAQTzOYkJ/UMBIGA1UdEwEB/wQIMAYBAf8CAQAwOgYDVR0fBDMwMTAvoC2g <newline>+K4YpaHR0cDovL2NybC5nZW90cnVzdC5jb20vY3Jscy9zZWN1cmVjYS5jcmwwDQYJ <newline>+KoZIhvcNAQEFBQADgYEAVKyJLbJha83PggEit8+dzh50wIsKXpTV2K6K4HnUI1kh <newline>+xqocLVfQORluC+LS7L78D2EKTWLZ8WNujiP6DbbIPSTsMasuiBMQMBUlJMUqsp/M <newline>+XmQJgIGAbxsr19MY6mmB30oWuo4cjHnkMzSCfhcON6Rxvbjijk2qCWXkk2T2HAk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_TCTrustCenter[] = <newline>+    "sha1/gzuEEAB/bkqdQS3EIjk2by7lW+k="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDJDCCAo2gAwIBAgIDBfw3MA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDYwNzIxMTUwNTA2WhcNMTEwNzEyMTUwNTA2 <newline>+WjA5MQswCQYDVQQGEwJVSzEXMBUGA1UEChMOVm9kYWZvbmUgR3JvdXAxETAPBgNV <newline>+BAMTCFZvZGFmb25lMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAs61K <newline>+wbMcB+GGGbjyo1dYEiVNGRYKRsDXfeOgeq03Vebf7D5Xq6a0Qs4Rvp6CuRTSNDPi <newline>+M+0vuQRW5sib9UD8UB2x4znc6FriRV4FUpAyKNVqQ9NB0MOBpQekVlX9DzcXkn+p <newline>+zWRi6tt3CtPsaDyHo06oAwX5qu3tW3pjtf0vnQqJWwwA6Mp4YJ/acHD/vVtt67hz <newline>+a0Upz0O2DEJetb3OaqI5yaNZ91y6i7sK0KTvBQxZHeJs+y5UjluHv3ptMUZvmsf0 <newline>+SiKysXnkg5mtsZSFlfM+U7dADq1zNb764NV5sSlmbDLEkvohQyg1p9gh2HX9Jk4A <newline>+e9nnF4hjw2U33HLBXwIDAQABo4GgMIGdMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4E <newline>+FgQUR+YiAaq+68BPLD6l0UcvzlkcgvswHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gj <newline>+IBBPM5iQn9QwDwYDVR0TAQH/BAUwAwEB/zA6BgNVHR8EMzAxMC+gLaArhilodHRw <newline>+Oi8vY3JsLmdlb3RydXN0LmNvbS9jcmxzL3NlY3VyZWNhLmNybDANBgkqhkiG9w0B <newline>+AQUFAAOBgQCs37zuSY/KkPigCvJevu+ewWy9GP2bFZi5EaxKuHGF+tYFZUNkyc06 <newline>+ACYMM3ADPM6dVUYeXIDZnPfV8BJFCpdoAHkSNlg341AVjabCOWtzOYolBn0ua8Wi <newline>+BM471XfzzXD7yMliek9J4fUn2vQU7MYgEkSAA53ZkMScGDkA/c1wMQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Vodafone[] = <newline>+    "sha1/DX/hXFUUNmiZ/EDWIgjvIuvRFRw="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIID1TCCAr2gAwIBAgIDAjbRMA0GCSqGSIb3DQEBBQUAMEIxCzAJBgNVBAYTAlVT <newline>+MRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMRswGQYDVQQDExJHZW9UcnVzdCBHbG9i <newline>+YWwgQ0EwHhcNMTAwMjE5MjI0NTA1WhcNMjAwMjE4MjI0NTA1WjA8MQswCQYDVQQG <newline>+EwJVUzEXMBUGA1UEChMOR2VvVHJ1c3QsIEluYy4xFDASBgNVBAMTC1JhcGlkU1NM <newline>+IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx3H4Vsce2cy1rfa0 <newline>+l6P7oeYLUF9QqjraD/w9KSRDxhApwfxVQHLuverfn7ZB9EhLyG7+T1cSi1v6kt1e <newline>+6K3z8Buxe037z/3R5fjj3Of1c3/fAUnPjFbBvTfjW761T4uL8NpPx+PdVUdp3/Jb <newline>+ewdPPeWsIcHIHXro5/YPoar1b96oZU8QiZwD84l6pV4BcjPtqelaHnnzh8jfyMX8 <newline>+N8iamte4dsywPuf95lTq319SQXhZV63xEtZ/vNWfcNMFbPqjfWdY3SZiHTGSDHl5 <newline>+HI7PynvBZq+odEj7joLCniyZXHstXZu8W1eefDp6E63yoxhbK1kPzVw662gzxigd <newline>+gtFQiwIDAQABo4HZMIHWMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUa2k9ahhC <newline>+St2PAmU5/TUkhniRFjAwHwYDVR0jBBgwFoAUwHqYaI2J+6sFZAwRfap9ZbjKzE4w <newline>+EgYDVR0TAQH/BAgwBgEB/wIBADA6BgNVHR8EMzAxMC+gLaArhilodHRwOi8vY3Js <newline>+Lmdlb3RydXN0LmNvbS9jcmxzL2d0Z2xvYmFsLmNybDA0BggrBgEFBQcBAQQoMCYw <newline>+JAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmdlb3RydXN0LmNvbTANBgkqhkiG9w0B <newline>+AQUFAAOCAQEAq7y8Cl0YlOPBscOoTFXWvrSY8e48HM3P8yQkXJYDJ1j8Nq6iL4/x <newline>+/torAsMzvcjdSCIrYA+lAxD9d/jQ7ZZnT/3qRyBwVNypDFV+4ZYlitm12ldKvo2O <newline>+SUNjpWxOJ4cl61tt/qJ/OCjgNqutOaWlYsS3XFgsql0BYKZiZ6PAx2Ij9OdsRu61 <newline>+04BqIhPSLT90T+qvjF+0OJzbrs6vhB6m9jRRWXnT43XcvNfzc9+S7NIgWW+c+5X4 <newline>+knYYCnwPLKbK3opie9jzzl9ovY8+wXS7FXI6FoOpC+ZNmZzYV+yoAVHHb1c0XqtK <newline>+LEL2TxyJeN4mTvVvk0wVaydWTQBUbHq3tw== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_RapidSSL[] = <newline>+    "sha1/o5OZxATDsgmwgcIfIWIneMJ0jkw="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDxTCCAq2gAwIBAgIQAqxcJmoLQJuPC3nyrkYldzANBgkqhkiG9w0BAQUFADBs <newline>+MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3 <newline>+d3cuZGlnaWNlcnQuY29tMSswKQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5j <newline>+ZSBFViBSb290IENBMB4XDTA2MTExMDAwMDAwMFoXDTMxMTExMDAwMDAwMFowbDEL <newline>+MAkGA1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3 <newline>+LmRpZ2ljZXJ0LmNvbTErMCkGA1UEAxMiRGlnaUNlcnQgSGlnaCBBc3N1cmFuY2Ug <newline>+RVYgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMbM5XPm <newline>++9S75S0tMqbf5YE/yc0lSbZxKsPVlDRnogocsF9ppkCxxLeyj9CYpKlBWTrT3JTW <newline>+PNt0OKRKzE0lgvdKpVMSOO7zSW1xkX5jtqumX8OkhPhPYlG++MXs2ziS4wblCJEM <newline>+xChBVfvLWokVfnHoNb9Ncgk9vjo4UFt3MRuNs8ckRZqnrG0AFFoEt7oT61EKmEFB <newline>+Ik5lYYeBQVCmeVyJ3hlKV9Uu5l0cUyx+mM0aBhakaHPQNAQTXKFx01p8VdteZOE3 <newline>+hzBWBOURtCmAEvF5OYiiAhF8J2a3iLd48soKqDirCmTCv2ZdlYTBoSUeh10aUAsg <newline>+EsxBu24LUTi4S8sCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQF <newline>+MAMBAf8wHQYDVR0OBBYEFLE+w2kD+L9HAdSYJhoIAu9jZCvDMB8GA1UdIwQYMBaA <newline>+FLE+w2kD+L9HAdSYJhoIAu9jZCvDMA0GCSqGSIb3DQEBBQUAA4IBAQAcGgaX3Nec <newline>+nzyIZgYIVyHbIUf4KmeqvxgydkAQV8GK83rZEWWONfqe/EW1ntlMMUu4kehDLI6z <newline>+eM7b41N5cdblIZQB2lWHmiRk9opmzN6cN82oNLFpmyPInngiK3BD41VHMWEZ71jF <newline>+hS9OMPagMRYjyOfiZRYzy78aG6A9+MpeizGLYAiJLQwGXFK3xPkKmNEVX58Svnw2 <newline>+Yzi9RKR/5CYrCsSXaQ3pjOLAEFe4yHYSkVXySGnYvCoCWw9E1CAx2/S6cCZdkGCe <newline>+vEsXCS+0yx5DaMkHJ8HSXPfqIbloEpw8nL+e/IBcm2PN7EeqJSdnoDfzAIJ9VNep <newline>++OkuE6N36B9K <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_DigiCertEVRoot[] = <newline>+    "sha1/gzF+YoVCU9bXeDGQ7JGQVumRueM="; <newline>+ <newline>+// Not public <newline>+static const char kSPKIHash_Tor1[] = <newline>+    "sha1/juNxSTv9UANmpC9kF5GKpmWNx3Y="; <newline>+static const char kSPKIHash_Tor2[] = <newline>+    "sha1/lia43lPolzSPVIq34Dw57uYcLD8="; <newline>+static const char kSPKIHash_Tor3[] = <newline>+    "sha1/rzEyQIKOh77j87n5bjWUNguXF8Y="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICPTCCAaYCEQDNun9W8N/kvFT+IqyzcqpVMA0GCSqGSIb3DQEBAgUAMF8xCzAJ <newline>+BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xh <newline>+c3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05 <newline>+NjAxMjkwMDAwMDBaFw0yODA4MDEyMzU5NTlaMF8xCzAJBgNVBAYTAlVTMRcwFQYD <newline>+VQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xhc3MgMSBQdWJsaWMgUHJp <newline>+bWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOB <newline>+jQAwgYkCgYEA5Rm/baNWYS2ZSHH2Z965jeu3noaACpEO+jglr0aIguVzqKCbJF0N <newline>+H8xlbgyw0FaEGIeaBpsQoXPftFg5a27B9hXVqKg/qhIGjTGsf7A01480Z4gJzRQR <newline>+4k5FVmkfeAKA2txHkSm7NsljXMXg1y2He6G3MrB7MLoqLzGq7qNn2tsCAwEAATAN <newline>+BgkqhkiG9w0BAQIFAAOBgQBMP7iLxmjf7kMzDl3ppssHhE16M/+SG/Q2rdiVIjZo <newline>+EWx8QszznC7EBz8UsA9P/5CSdvnivErpj82ggAr3xSnxgiJduLHdgSOjeyUVRjB5 <newline>+FvjqBUuUfx3CHMjjt/QQQDwTw18fU+hI5Ia0e6E1sHslurjTjqs/OJ0ANACY89Fx <newline>+lA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass1[] = <newline>+    "sha1/I0PRSKJViZuUfUYaeX7ATP7RcLc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDhDCCAwqgAwIBAgIQL4D+I4wOIg9IZxIokYesszAKBggqhkjOPQQDAzCByjEL <newline>+MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW <newline>+ZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2ln <newline>+biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJp <newline>+U2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9y <newline>+aXR5IC0gRzQwHhcNMDcxMTA1MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCByjELMAkG <newline>+A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJp <newline>+U2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2lnbiwg <newline>+SW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2ln <newline>+biBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5 <newline>+IC0gRzQwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASnVnp8Utpkmw4tXNherJI9/gHm <newline>+GUo9FANL+mAnINmDiWn6VMaaGF5VKmTeBvaNSjutEDxlPZCIBIngMGGzrl0Bp3ve <newline>+fLK+ymVhAIau2o970ImtTR1ZmkGxvEeA3J5iw/mjgbIwga8wDwYDVR0TAQH/BAUw <newline>+AwEB/zAOBgNVHQ8BAf8EBAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJ <newline>+aW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYj <newline>+aHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFLMW <newline>+kf3upm7ktS5Jj4d4gYDs5bG1MAoGCCqGSM49BAMDA2gAMGUCMGYhDBgmYFo4e1ZC <newline>+4Kf8NoRRkSAsdk1DPcQdhCPQrNZ8NQbOzWm9kA3bbEhCHQ6qQgIxAJw9SDkjOVga <newline>+FRJZap7v1VmyHVIsmXHNxynfGyphe3HR3vPA5Q06Sqotp9iGKt0uEA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G4[] = <newline>+    "sha1/7WYxNdMb1OymFMQp4xkGn5TBJlA="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGjCCAwICEQDsoKeLbnVqAc/EfMwvlF7XMA0GCSqGSIb3DQEBBQUAMIHKMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl <newline>+cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu <newline>+LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT <newline>+aWduIENsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp <newline>+dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD <newline>+VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT <newline>+aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ <newline>+bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu <newline>+IENsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK3LpRFpxlmr8Y+1 <newline>+GQ9Wzsy1HyDkniYlS+BzZYlZ3tCD5PUPtbut8XzoIfzk6AzufEUiGXaStBO3IFsJ <newline>++mGuqPKljYXCKtbeZjbSmwL0qJJgfJxptI8kHtCGUvYynEFYHiK9zUVilQhu0Gbd <newline>+U6LM8BDcVHOLBKFGMzNcF0C5nk3T875Vg+ixiY5afJqWIpA7iCXy0lOIAgwLePLm <newline>+NxdLMEYH5IBtptiWLugs+BGzOA1mppvqySNb247i8xOOGlktqgLw7KSHZtzBP/XY <newline>+ufTsgsbSPZUd5cBPhMnZo0QoBmrXRazwa2rvTl/4EYIeOGM0ZlDUPpNz+jDDZq3/ <newline>+ky2X7wMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAj/ola09b5KROJ1WrIhVZPMq1 <newline>+CtRK26vdoV9TxaBXOcLORyu+OshWv8LZJxA6sQU8wHcxuzrTBXttmhwwjIDLk5Mq <newline>+g6sFUYICABFna/OIYUdfA5PVWw3g8dShMjWFsjrbsIKr0csKvE+MW8VLADsfKoKm <newline>+fjaF3H48ZwC15DtS4KjrXRX5xm3wrR0OhbepmnMUWluPQSjA1egtTaRezarZ7c7c <newline>+2NU8Qh0XwRJdRTjDOPP8hS6DRkiy1yBfkjaP53kPmF6Z6PDQpLv1U70qzlmwr25/ <newline>+bLvSHgCwIe34QWKCudiyxLtGUPMxxY8BqHTr9Xgn2uf3ZkPznoM+IKrDNWCRzg== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass4_G3[] = <newline>+    "sha1/PANDaGiVHPNpKri0Jtq6j+ki5b0="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGjCCAwICEQCLW3VWhFSFCwDPrzhIzrGkMA0GCSqGSIb3DQEBBQUAMIHKMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl <newline>+cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu <newline>+LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT <newline>+aWduIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp <newline>+dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD <newline>+VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT <newline>+aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ <newline>+bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu <newline>+IENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN2E1Lm0+afY8wR4 <newline>+nN493GwTFtl63SRRZsDHJlkNrAYIwpTRMx/wgzUfbhvI3qpuFU5UJ+/EbRrsC+MO <newline>+8ESlV8dAWB6jRx9x7GD2bZTIGDnt/kIYVt/kTEkQeE4BdjVjEjbdZrwBBDajVWjV <newline>+ojYJrKshJlQGrT/KFOCsyq0GHZXi+J3x4GD/wn91K0zM2v6HmSHquv4+VNfSWXjb <newline>+PG7PoBMAGrgnoeS+Z5bKoMWznN3JdZ7rMJpfo83ZrngZPyPpXNspva1VyBtUjGP2 <newline>+6KbqxzcSXKMpHgLZ2x87tNcPVkeBFQRKr4Mn0cVYiMHd9qqnoxjaaKptEVHhv2Vr <newline>+n5Z20T0CAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAq2aN17O6x5q25lXQBfGfMY1a <newline>+qtmqRiYPce2lrVNWYgFHKkTp/j90CxObufRNG7LRX7K20ohcs5/Ny9Sn2WCVhDr4 <newline>+wTcdYcrnsMXlkdpUpqwxga6X3s0IrLjAl4B/bnKk52kTlWUfxJM8/XmPBNQ+T+r3 <newline>+ns7NZ3xPZQL/kYVUc8f/NveGLezQXk//EZ9yBta4GvFMDSZl4kSAHsef493oCtrs <newline>+pSCAaWihT37ha88HQfqDjrw43bAuEbFrskLMmrz5SCJ5ShkPshw+IHTZasO+8ih4 <newline>+E1Z5T21Q6huwtVexN2ZYI/PcD98Kh8TvhgXVOBRgmaNL3gaWcSzy27YfpO8/7g== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass1_G3[] = <newline>+    "sha1/VRmyeKyygdftp6vBg5nDu2kEJLU="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGTCCAwECEGFwy0mMX5hFKeewptlQW3owDQYJKoZIhvcNAQEFBQAwgcoxCzAJ <newline>+BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVy <newline>+aVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24s <newline>+IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNp <newline>+Z24gQ2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0 <newline>+eSAtIEczMB4XDTk5MTAwMTAwMDAwMFoXDTM2MDcxNjIzNTk1OVowgcoxCzAJBgNV <newline>+BAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNp <newline>+Z24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIElu <newline>+Yy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24g <newline>+Q2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAt <newline>+IEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArwoNwtUs22e5LeWU <newline>+J92lvuCwTY+zYVY81nzD9M0+hsuiiOLh2KRpxbXiv8GmR1BeRjmL1Za6tW8UvxDO <newline>+JxOeBUebMXoT2B/Z0wI3i60sR/COgQanDTAM6/c8DyAd3HJG7qUCyFvDyVZpTMUY <newline>+wZF7C9UTAJu878NIPkZgIIUq1ZC2zYugzDLdt/1AVbJQHFauzI13TccgTacxdu9o <newline>+koqQHgiBVrKtaaNS0MscxCM9H5n+TOgWY47GCI72MfbS+uV23bUckqNJzc0BzWjN <newline>+qWm6o+sdDZykIKbBoMXRRkwXbdKsZj+WjOCE1Db/IlnF+RFgqF8EffIa9iVCYQ/E <newline>+Srg+iQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQA0JhU8wI1NQ0kdvekhktdmnLfe <newline>+xbjQ5F1fdiLAJvmEOjr5jLX77GDx6M4EsMjdpwOPMPOY36TmpDHf0xwLRtxyID+u <newline>+7gU8pDM/CzmscHhzS5kr3zDCVLCoO1Wh/hYozUK9dG6A2ydEp85EXdQbkJgNHkKU <newline>+sQAsBNB0owIFImNjzYO1+8FtYmtpdf1dcEG59b98377BMnMiIYtYgXsVkXq642RI <newline>+sH/7NiXaldDxJBQX3RiAa0YjOVT1jmIJBB2UkKab5iXiQkWquJCtvgiPqQtCGJTP <newline>+cjnhsUPgKM+351psE2tJs//jGHyJizNdrDPXp/naOlXJWBD5qu9ats9LS98q <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass2_G3[] = <newline>+    "sha1/Wr7Fddyu87COJxlD/H8lDD32YeM="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDAjCCAmsCEH3Z/gfPqB63EHln+6eJNMYwDQYJKoZIhvcNAQEFBQAwgcExCzAJ <newline>+BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xh <newline>+c3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcy <newline>+MTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3Jp <newline>+emVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMB4X <newline>+DTk4MDUxODAwMDAwMFoXDTI4MDgwMTIzNTk1OVowgcExCzAJBgNVBAYTAlVTMRcw <newline>+FQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMg <newline>+UHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEo <newline>+YykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5 <newline>+MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMIGfMA0GCSqGSIb3DQEB <newline>+AQUAA4GNADCBiQKBgQDMXtERXVxp0KvTuWpMmR9ZmDCOFoUgRm1HP9SFIIThbbP4 <newline>+pO0M8RcPO/mn+SXXwc+EY/J8Y8+iR/LGWzOOZEAEaMGAuWQcRXfH2G71lSk8UOg0 <newline>+13gfqLptQ5GVj0VXXn7F+8qkBOvqlzdUMG+7AUcyM83cV5tkaWH4mx0ciU9cZwID <newline>+AQABMA0GCSqGSIb3DQEBBQUAA4GBAFFNzb5cy5gZnBWyATl4Lk0PZ3BwmcYQWpSk <newline>+U01UbSuvDV1Ai2TT1+7eVmGSX6bEHRBhNtMsJzzoKQm5EWR0zLVznxxIqbxhAe7i <newline>+F6YM40AIOw7n60RzKprxaZLvcRTDOaxxp5EJb+RxBrO6WVcmeQD2+A2iMzAo1KpY <newline>+oJ2daZH9 <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G2[] = <newline>+    "sha1/GiG0lStik84Ys2XsnA6TTLOB5tQ="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDAzCCAmwCEQC5L2DMiJ+hekYJuFtwbIqvMA0GCSqGSIb3DQEBBQUAMIHBMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0Ns <newline>+YXNzIDIgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBH <newline>+MjE6MDgGA1UECxMxKGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9y <newline>+aXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazAe <newline>+Fw05ODA1MTgwMDAwMDBaFw0yODA4MDEyMzU5NTlaMIHBMQswCQYDVQQGEwJVUzEX <newline>+MBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDIgUHVibGlj <newline>+IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMx <newline>+KGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25s <newline>+eTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazCBnzANBgkqhkiG9w0B <newline>+AQEFAAOBjQAwgYkCgYEAp4gBIXQs5xoD8JjhlzwPIQjxnNuX6Zr8wgQGE75fUsjM <newline>+HiwSViy4AWkszJkfrbCWrnkE8hM5wXuYuggs6MKEEyyqaekJ9MepAqRCwiNPStjw <newline>+DqL7MWzJ5m+ZJwf15vRMeJ5t60aG+rmGyVTyssSv1EYcWskVMP8NbPUtDm3Of3cC <newline>+AwEAATANBgkqhkiG9w0BAQUFAAOBgQByLvl/0fFx+8Se9sVeUYpAmLho+Jscg9ji <newline>+nb3/7aHmZuovCfTK1+qlK5X2JGCGTUQug6XELaDTrnhpb3LabK4I8GOSN+a7xDAX <newline>+rXfMSTWqz9iP0b63GJZHc2pUIjRkLbYWm1lbtFFZOrMLFPQS32eg9K0yZF6xRnIn <newline>+jBJ7xUS0rg== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass2_G2[] = <newline>+    "sha1/Eje6RRfurSkm/cHN/r7t8t7ZFFw="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIE0zCCA7ugAwIBAgIQGNrRniZ96LtKIVjNzGs7SjANBgkqhkiG9w0BAQUFADCB <newline>+yjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQL <newline>+ExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJp <newline>+U2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxW <newline>+ZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0 <newline>+aG9yaXR5IC0gRzUwHhcNMDYxMTA4MDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCByjEL <newline>+MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW <newline>+ZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2ln <newline>+biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJp <newline>+U2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9y <newline>+aXR5IC0gRzUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvJAgIKXo1 <newline>+nmAMqudLO07cfLw8RRy7K+D+KQL5VwijZIUVJ/XxrcgxiV0i6CqqpkKzj/i5Vbex <newline>+t0uz/o9+B1fs70PbZmIVYc9gDaTY3vjgw2IIPVQT60nKWVSFJuUrjxuf6/WhkcIz <newline>+SdhDY2pSS9KP6HBRTdGJaXvHcPaz3BJ023tdS1bTlr8Vd6Gw9KIl8q8ckmcY5fQG <newline>+BO+QueQA5N06tRn/Arr0PO7gi+s3i+z016zy9vA9r911kTMZHRxAy3QkGSGT2RT+ <newline>+rCpSx4/VBEnkjWNHiDxpg8v+R70rfk/Fla4OndTRQ8Bnc+MUCH7lP59zuDMKz10/ <newline>+NIeWiu5T6CUVAgMBAAGjgbIwga8wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8E <newline>+BAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2UvZ2lmMCEwHzAH <newline>+BgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVy <newline>+aXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFH/TZafC3ey78DAJ80M5+gKv <newline>+MzEzMA0GCSqGSIb3DQEBBQUAA4IBAQCTJEowX2LP2BqYLz3q3JktvXf2pXkiOOzE <newline>+p6B4Eq1iDkVwZMXnl2YtmAl+X6/WzChl8gGqCBpH3vn5fJJaCGkgDdk+bW48DW7Y <newline>+5gaRQBi5+MHt39tBquCWIMnNZBU4gcmU7qKEKQsTb47bDN0lAtukixlE0kF6BWlK <newline>+WE9gyn6CagsCqiUXObXbf+eEZSqVir2G3l6BFoMtEMze/aiCKm0oHw0LxOXnGiYZ <newline>+4fQRbxC1lfznQgUy286dUV4otp6F01vvpX1FQHKOtw5rDgb7MzVIcbidJ4vEZV8N <newline>+hnacRHr2lVz2XTIIM6RUthg/aFzyQkqFOFSDX9HoLPKsEdao7WNq <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G5[] = <newline>+    "sha1/sYEIGhmkwJQf+uiVKMEkyZs0rMc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEuTCCA6GgAwIBAgIQQBrEZCGzEyEDDrvkEhrFHTANBgkqhkiG9w0BAQsFADCB <newline>+vTELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQL <newline>+ExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwOCBWZXJp <newline>+U2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MTgwNgYDVQQDEy9W <newline>+ZXJpU2lnbiBVbml2ZXJzYWwgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAe <newline>+Fw0wODA0MDIwMDAwMDBaFw0zNzEyMDEyMzU5NTlaMIG9MQswCQYDVQQGEwJVUzEX <newline>+MBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0 <newline>+IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAyMDA4IFZlcmlTaWduLCBJbmMuIC0gRm9y <newline>+IGF1dGhvcml6ZWQgdXNlIG9ubHkxODA2BgNVBAMTL1ZlcmlTaWduIFVuaXZlcnNh <newline>+bCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEF <newline>+AAOCAQ8AMIIBCgKCAQEAx2E3XrEBNNti1xWb/1hajCMj1mCOkdeQmIN65lgZOIzF <newline>+9uVkhbSicfvtvbnazU0AtMgtc6XHaXGVHzk8skQHnOgO+k1KxCHfKWGPMiJhgsWH <newline>+H26MfF8WIFFE0XBPV+rjHOPMee5Y2A7Cs0WTwCznmhcrewA3ekEzeOEz4vMQGn+H <newline>+LL729fdC4uW/h2KJXwBL38Xd5HVEMkE6HnFuacsLdUYI0crSK5XQz/u5QGtkjFdN <newline>+/BMReYTtXlT2NJ8IAfMQJQYXStrxHXpma5hgZqTZ79IugvHw7wnqRMkVauIDbjPT <newline>+rJ9VAMf2CGqUuV/c4DPxhGD5WycRtPwW8rtWaoAljQIDAQABo4GyMIGvMA8GA1Ud <newline>+EwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMG0GCCsGAQUFBwEMBGEwX6FdoFsw <newline>+WTBXMFUWCWltYWdlL2dpZjAhMB8wBwYFKw4DAhoEFI/l0xqGrI2Oa8PPgGrUSBgs <newline>+exkuMCUWI2h0dHA6Ly9sb2dvLnZlcmlzaWduLmNvbS92c2xvZ28uZ2lmMB0GA1Ud <newline>+DgQWBBS2d/ppSEefUxLVwuoHMnYH0ZcHGTANBgkqhkiG9w0BAQsFAAOCAQEASvj4 <newline>+sAPmLGd75JR3Y8xuTPl9Dg3cyLk1uXBPY/ok+myDjEedO2Pzmvl2MpWRsXe8rJq+ <newline>+seQxIcaBlVZaDrHC1LGmWazxY8u4TB1ZkErvkBYoH1quEPuBUDgMbMzxPcP1Y+Oz <newline>+4yHJJDnp/RVmRvQbEdBNc6N9Rvk97ahfYtTxP/jgdFcrGJ2BtMQo2pSXpXDrrB2+ <newline>+BxHw1dvd5Yzw1TKwg+ZX4o+/vqGqvz0dtdQ46tewXDpPaj+PwGZsY6rp2aQW9IHR <newline>+lRQOfc2VNNnSj3BzgXucfr2YYdhFh5iQxeuGMMY1v/D/w1WIg0vvBZIGcfK4mJO3 <newline>+7M2CYfE45k+XmCpajQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignUniversal[] = <newline>+    "sha1/u8I+KQuzKHcdrT6iTb30I70GsD0="; <newline>+ <newline>+// Not public <newline>+static const char kSPKIHash_Twitter1[] = <newline>+    "sha1/Vv7zwhR9TtOIN/29MFI4cgHld40="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDZjCCAk6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBEMQswCQYDVQQGEwJVUzEW <newline>+MBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEdMBsGA1UEAxMUR2VvVHJ1c3QgR2xvYmFs <newline>+IENBIDIwHhcNMDQwMzA0MDUwMDAwWhcNMTkwMzA0MDUwMDAwWjBEMQswCQYDVQQG <newline>+EwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEdMBsGA1UEAxMUR2VvVHJ1c3Qg <newline>+R2xvYmFsIENBIDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDvPE1A <newline>+PRDfO1MA4Wf+lGAVPoWI8YkNkMgoI5kF6CsgncbzYEbYwbLVjDHZ3CB5JIG/NTL8 <newline>+Y2nbsSpr7iFY8gjpeMtvy/wWUsiRxP89c96xPqfCfWbB9X5SJBri1WeR0IIQ13hL <newline>+TytCOb1kLUCgsBDTOEhGiKEMuzozKmKY+wCdE1l/bztyqu6mD4b5BWHqZ38MN5aL <newline>+5mkWRxHCJ1kDs6ZgwiFAVvqgx306E+PsV8ez1q6diYD3Aecs9pYrEw15LNnA5IZ7 <newline>+S4wMcoKK+xfNAGw6EzywhIdLFnopsk/bHdQL82Y3vdj2V7teJHq4PIu5+pIaGoSe <newline>+2HSPqht/XvT+RSIhAgMBAAGjYzBhMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE <newline>+FHE4NvICMVNHK266ZUapEBVYIAUJMB8GA1UdIwQYMBaAFHE4NvICMVNHK266ZUap <newline>+EBVYIAUJMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQUFAAOCAQEAA/e1K6td <newline>+EPx7srJerJsOflN4WT5CBP51o62sgU7XAotexC3IUnbHLB/8gTKY0UvGkpMzNTEv <newline>+/NgdRN3ggX+d6YvhZJFiCzkIjKx0nVnZellSlxG5FntvRdOW2TF9AjYPnDtuzywN <newline>+A0ZF66D0f0hExghAzN4bcLUprbqLOzRldRtxIR0sFAqwlpW41uryZfspuk/qkZN0 <newline>+abby/+Ea0AzRdoXLiiW9l14sbxWZJue2Kf8i7MkCx1YAzUm5s2x7UwQa4qjJqhIF <newline>+I8LO57sEAszAR6LkxCkvW0VXiVHuPOtSCP8HNR6fNWpHSlaY0VqFH4z1Ir+rzoPz <newline>+4iIprn2DQKi6bA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustGlobal2[] = <newline>+    "sha1/cTg28gIxU0crbrplRqkQFVggBQk="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIFaDCCA1CgAwIBAgIBATANBgkqhkiG9w0BAQUFADBFMQswCQYDVQQGEwJVUzEW <newline>+MBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEeMBwGA1UEAxMVR2VvVHJ1c3QgVW5pdmVy <newline>+c2FsIENBMB4XDTA0MDMwNDA1MDAwMFoXDTI5MDMwNDA1MDAwMFowRTELMAkGA1UE <newline>+BhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xHjAcBgNVBAMTFUdlb1RydXN0 <newline>+IFVuaXZlcnNhbCBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKYV <newline>+VaCjxuAfjJ0hUNfBvitbtaSeodlyWL0AG0y/YckUHUWCq8YdgNY96xCcOq9tJPi8 <newline>+cQGeBvV8Xx7BDlXKg5pZMK4ZyzBIle0iN430SppyZj6tlcDgFgDgEB8rMQ7XlFTT <newline>+QjOgNB0eRXbdT8oYN+yFFXoZCPzVx5zw8qkuEKmS5j1YPakWaDwvdSEYfyh3peFh <newline>+F7em6fgemdtzbvQKoiFs7tqqhZJmr/Z6a4LauiIINQ/PQvE1+mrufislzDoR5G2v <newline>+c7J2Ha3QsnhnGqQ5HFELZ1aD/ThdDc7d8Lsrlh/eezJS/R27tQahsiFepdaVaH/w <newline>+mZ7cRQg+59IJDTWU3YBOU5fXtQlEIGQWFwMCTFMNaN7VqnJNk22CDtucvc+081xd <newline>+VHppCZbW2xHBjXWotM85yM48vCR85mLK4b19p71XZQvk/iXttmkQ3CgaRr0BHdCX <newline>+teGYO8A3ZNY9lO4L4fUorgtWv3GLIylBjobFS1J72HGrH4oVpjuDWtdYAVHGTEHZ <newline>+f9hBZ3KiKN9gg6meyHv8U3NyWfWTehd2Ds735VzZC1U0oqpbtWpU5xPKV+yXbfRe <newline>+Bi9Fi1jUIxaS5BZuKGNZMN9QAZxjiRqf2xeUgnA3wySemkfWWspOqGmJch+RbNt+ <newline>+nhutxx9z3SxPGWX9f5NAEC7S8O08ni4oPmkmM8V7AgMBAAGjYzBhMA8GA1UdEwEB <newline>+/wQFMAMBAf8wHQYDVR0OBBYEFNq7LqqwDLiIJlF0XG0D08DYj3rWMB8GA1UdIwQY <newline>+MBaAFNq7LqqwDLiIJlF0XG0D08DYj3rWMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG <newline>+9w0BAQUFAAOCAgEAMXjmx7XfuJRAyXHEqDXsRh3ChfMoWIawC/yOsjmPRFWrZIRc <newline>+aanQmjg8+uUfNeVE44B5lGiku8SfPeE0zTBGi1QrlaXv9z+ZhP015s8xxtxqv6fX <newline>+IwjhmF7DWgh2qaavdy+3YL1ERmrvl/9zlcGO6JP7/TG37FcREUWbMPEaiDnBTzyn <newline>+ANXH/KttgCJwpQzgXQQpAvvLoJHRfNbDflDVnVi+QTjruXU8FdmbyUqDWcDaU/0z <newline>+uzYYm4UPFd3uLax2k7nZAY1IEKj79TiG8dsKxr2EoyNB3tZ3b4XUhRxQ4K5RirqN <newline>+Pnbiucon8l+f725ZDQbYKxek0nxru18UGkiPGkzns0ccjkxFKyDuSN/n3QmOGKja <newline>+QI2SJhFTYXNd673nxE0pN2HrrDktZy4W1vUAg4WhzH92xH3kt0tm7wNFYGm2DFKW <newline>+koRepqO1pD4r2czYG0eq8kTaT/kD6PAUyz/zg97QwVTjt+gKN02LIFkDMBmhLMi9 <newline>+ER/frslKxfMnZmaGrGiR/9nmUxwPi1xpZQomyB40w11Re9epnAahNt3ViZS82eQt <newline>+DF4JbAiXfKM9fJP/P6EUp8+1Xevb2xzEdt+Iub1FBZUbrvxGakyvSOPOrg/Sfuvm <newline>+bJxPgWp6ZKy7PtXny3YuxadIwVyQD8vIP/rmMuGNG2+k5o7Y+SlIis5z/iw= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustUniversal[] = <newline>+    "sha1/h+hbY1PGI6MSjLD/u/VR/lmADiI="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIFbDCCA1SgAwIBAgIBATANBgkqhkiG9w0BAQUFADBHMQswCQYDVQQGEwJVUzEW <newline>+MBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXR2VvVHJ1c3QgVW5pdmVy <newline>+c2FsIENBIDIwHhcNMDQwMzA0MDUwMDAwWhcNMjkwMzA0MDUwMDAwWjBHMQswCQYD <newline>+VQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXR2VvVHJ1 <newline>+c3QgVW5pdmVyc2FsIENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC <newline>+AQCzVFLByT7y2dyxUxpZKeexw0Uo5dfR7cXFS6GqdHtXr0om/Nj1XqduGdt0DE81 <newline>+WzILAePb63p3NeqqWuDW6KFXlPCQo3RWlEQwAx5cTiuFJnSCegx2oG9NzkEtoBUG <newline>+FF+3Qs17j1hhNNwqCPkuwwGmIkQcTAeC5lvO0Ep8BNMZcyfwqph/Lq9O64ceJHdq <newline>+XbboW0W63MOhBW9Wjo8QJqVJwy7XQYci4E+GymC16qFjwAGXEHm9ADwSbSsVsaxL <newline>+se4YuU6W3Nx2/zu+z18DwPw76L5GG//aQMJS9/7jOvdqdzXQ2o3rXhhqMcceujwb <newline>+KNZrVMaqW9eiLBsZzKIC9ptZvTdrhrVtgrrY6slWvKk2WP0+GfPtDCapkzj4T8Fd <newline>+IgbQl+rhrcZV4IErKIM6+vR7IVEAvlI4zs1meaj0gVbi0IMJR1FbUGrP20gaXT73 <newline>+y/Zl92zxlfgCOzJWgjl6W70viRu/obTo/3+NjN8D8WBOWBFM66M/ECuDmgFz2ZRt <newline>+hAAnZqzwcEAJQpKtT5MNYQlRJNiS1QuUYbKHsu3/mjX/hVTK7URDrBs8FmtISgoc <newline>+QIgfksILAAX/8sgCSqSqqcyZlpwvWOB94b67B9xfBHJcMTTD7F8t4D1kkCLm0ey4 <newline>+Lt1ZrtmhN79UNdxzMk+MBB4zsslG8dhcyFVQyWi9qLo2CQIDAQABo2MwYTAPBgNV <newline>+HRMBAf8EBTADAQH/MB0GA1UdDgQWBBR281Xh+qQ2+/CfXGJx7Tz0RzgQKzAfBgNV <newline>+HSMEGDAWgBR281Xh+qQ2+/CfXGJx7Tz0RzgQKzAOBgNVHQ8BAf8EBAMCAYYwDQYJ <newline>+KoZIhvcNAQEFBQADggIBAGbBxiPz2eAubl/oz66wsCVNK/g7WJtAJDday6sWSf+z <newline>+dXkzoS9tcBc0kf5nfo/sm+VegqlVHy/c1FEHEv6sFj4sNcZj/NwQ6w2jqtB8zNHQ <newline>+L1EuxBRa3ugZ4T7GzKQp5y6EqgYweHZUcyiYWTjgAA1i00J9IZ+uPTqM1fp3DRgr <newline>+Fg5fNuH8KrUwJM/gYwx7WBr+mbpCErGR9Hxo4sjoryzqyX6uuyo9DRXcNJW2GHSo <newline>+ag/HtPQTxORb7QrSpJdMKu0vbBKJPfEncKpqA1Ihn0CoZ1Dy81of398j9tx4TuaY <newline>+T1U6U+Pv8vSfx3zYWK8pIpe44L2RLrB27FcRz+8pRPPphXpgY+RdM4kX2TGq2tbz <newline>+GDVyz4crL2MjhF2EjD9XoIj8mZEoJmmZ1I+XRL6O1UixpCgp8RW04eWe3fiPpm8m <newline>+1wk8OhwRDqZsN/etRIcsKMfYdIKz0G9KV7s1KSegi+ghp4dkNl3M2Basx7InQJJV <newline>+OCiNUW7dFGdTbHFcJoRNdVq2fmBWqU2t+5sel/MN2dKXVHfaPRK34B7vCAas+YWH <newline>+6aLcr34YEoP9VhdBLtUpgn2Z9DH2canPLAEnpQW5qrJITirvn5NSUZU8UnOOVkwX <newline>+QMAJKOSLakhT2+zNVVXxxvjpoixMptEmX36vWkzaH6byHCx+rgIW0lbQL1dTR+iS <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustUniversal2[] = <newline>+    "sha1/Xk9ThoXdT57KX9wNRW99UbHcm3s="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICrjCCAjWgAwIBAgIQPLL0SAoA4v7rJDteYD7DazAKBggqhkjOPQQDAzCBmDEL <newline>+MAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsTMChj <newline>+KSAyMDA3IEdlb1RydXN0IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTE2 <newline>+MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0 <newline>+eSAtIEcyMB4XDTA3MTEwNTAwMDAwMFoXDTM4MDExODIzNTk1OVowgZgxCzAJBgNV <newline>+BAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykgMjAw <newline>+NyBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0BgNV <newline>+BAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBH <newline>+MjB2MBAGByqGSM49AgEGBSuBBAAiA2IABBWx6P0DFUPlrOuHNxFi79KDNlJ9RVcL <newline>+So17VDs6bl8VAsBQps8lL33KSLjHUGMcKiEIfJo22Av+0SbFWDEwKCXzXV2juLal <newline>+tJLtbCyf691DiaI8S0iRHVDsJt/WYC69IaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAO <newline>+BgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFBVfNVdRVfslsq0DafwBo/q+EVXVMAoG <newline>+CCqGSM49BAMDA2cAMGQCMGSWWaboCd6LuvpaiIjwH5HTRqjySkwCY/tsXzjbLkGT <newline>+qQ7mndwxHLKgpxgceeHHNgIwOlavmnRs9vuD4DPTCF+hnMJbn0bWtsuRBmOiBucz <newline>+rD6ogRLQy7rQkgu2npaqBA+K <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustPrimary_G2[] = <newline>+    "sha1/vb6nG6txV/nkddlU0rcngBqCJoI="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIID/jCCAuagAwIBAgIQFaxulBmyeUtB9iepwxgPHzANBgkqhkiG9w0BAQsFADCB <newline>+mDELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsT <newline>+MChjKSAyMDA4IEdlb1RydXN0IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25s <newline>+eTE2MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhv <newline>+cml0eSAtIEczMB4XDTA4MDQwMjAwMDAwMFoXDTM3MTIwMTIzNTk1OVowgZgxCzAJ <newline>+BgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykg <newline>+MjAwOCBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0 <newline>+BgNVBAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANziXmJYHTNXOTIz <newline>++uvLh4yn1ErdBojqZI4xmKU4kB6Yzy5jK/BGvESyiaHAKAxJcCGVn2TAppMSAmUm <newline>+hsalifD614SgcK9PGpc/BkTVyetyEH3kMSj7HGHmKAdEc5IiaacDiGydY8hS2pgn <newline>+5whMcD60yRLBxWeDXTPzAxHsatBT4tG6NmCUgLthY2xbF37fQJQeqw3CIShwiP/W <newline>+JmxsYAQlTlV+fe+/lEjetx3dcI0FX4ilm/LC7urRQEFtYjgdVgbFA0dRIBn8exAL <newline>+DmKudlW/X3e+PkkBUz2YJQN2JFodtNuJ6nnltrM7P7pMKEF/BqxqjsHQ9gUdfeZC <newline>+huOl1UcCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw <newline>+HQYDVR0OBBYEFMR5yo6hTgMdHNxr2zFblD4/MH8tMA0GCSqGSIb3DQEBCwUAA4IB <newline>+AQAtxRPPVoB7eni9n64smefv2t+UXglpp+duaIy9cr5HqQ6XErhK8WTTOd8lNNTB <newline>+zU6B8A8ExCSzNJbGpqow32hhc9f5joWJ7w5elShKKiePEI4ufIbEAp7aDHdlDkQN <newline>+kv39sxY2+hENHYwOB4lqKVb3cvTdFZx3NWZXqxNT2I7BQMXXExZacse3aQHEerGD <newline>+AWh9jUGhlBjBJVz88P6DAod8DQ3PLghcSkANPuyBYeYk28rgDi0Hsj5W3I31QYUH <newline>+SJsMC8tJP33st/3LjWeJGqvtux6jAAgIFyqCXDFdRootD4abdNlF+9RAsXqqaC2G <newline>+spki4cErx5z481+oghLrGREt <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustPrimary_G3[] = <newline>+    "sha1/nKmNAK90Dd2BgNITRaWLjy6UONY="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEKjCCAxKgAwIBAgIEOGPe+DANBgkqhkiG9w0BAQUFADCBtDEUMBIGA1UEChMLRW50cnVzdC5u <newline>+ZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9DUFNfMjA0OCBpbmNvcnAuIGJ5IHJlZi4gKGxp <newline>+bWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNV <newline>+BAMTKkVudHJ1c3QubmV0IENlcnRpZmljYXRpb24gQXV0aG9yaXR5ICgyMDQ4KTAeFw05OTEyMjQx <newline>+NzUwNTFaFw0yOTA3MjQxNDE1MTJaMIG0MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3 <newline>+d3d3LmVudHJ1c3QubmV0L0NQU18yMDQ4IGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTEl <newline>+MCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEGA1UEAxMqRW50cnVzdC5u <newline>+ZXQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgKDIwNDgpMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A <newline>+MIIBCgKCAQEArU1LqRKGsuqjIAcVFmQqK0vRvwtKTY7tgHalZ7d4QMBzQshowNtTK91euHaYNZOL <newline>+Gp18EzoOH1u3Hs/lJBQesYGpjX24zGtLA/ECDNyrpUAkAH90lKGdCCmziAv1h3edVc3kw37XamSr <newline>+hRSGlVuXMlBvPci6Zgzj/L24ScF2iUkZ/cCovYmjZy/Gn7xxGWC4LeksyZB2ZnuU4q941mVTXTzW <newline>+nLLPKQP5L6RQstRIzgUyVYr9smRMDuSYB3Xbf9+5CFVghTAp+XtIpGmG4zU/HoZdenoVve8AjhUi <newline>+VBcAkCaTvA5JaJG/+EfTnZVCwQ5N328mz8MYIWJmQ3DW1cAH4QIDAQABo0IwQDAOBgNVHQ8BAf8E <newline>+BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUVeSB0RGAvtiJuQijMfmhJAkWuXAwDQYJ <newline>+KoZIhvcNAQEFBQADggEBADubj1abMOdTmXx6eadNl9cZlZD7Bh/KM3xGY4+WZiT6QBshJ8rmcnPy <newline>+T/4xmf3IDExoU8aAghOY+rat2l098c5u9hURlIIM7j+VrxGrD9cv3h8Dj1csHsm7mhpElesYT6Yf <newline>+zX1XEC+bBAlahLVu2B064dae0Wx5XnkcFMXj0EyTO2U87d89vqbllRrDtRnDvV5bu/8j72gZyxKT <newline>+J1wDLW8w0B62GqzeWvfRqqgnpv55gcR5mTNXuhKwqeBCbJPKVt7+bYQLCIt+jerXmCHG8+c8eS9e <newline>+nNFMFY3h7CI3zJpDC5fcgJCNs2ebb0gIFVbPv/ErfF6adulZkMV8gzURZVE= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_2048[] = <newline>+    "sha1/VeSB0RGAvtiJuQijMfmhJAkWuXA="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEkTCCA3mgAwIBAgIERWtQVDANBgkqhkiG9w0BAQUFADCBsDELMAkGA1UEBhMC <newline>+VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xOTA3BgNVBAsTMHd3dy5lbnRydXN0 <newline>+Lm5ldC9DUFMgaXMgaW5jb3Jwb3JhdGVkIGJ5IHJlZmVyZW5jZTEfMB0GA1UECxMW <newline>+KGMpIDIwMDYgRW50cnVzdCwgSW5jLjEtMCsGA1UEAxMkRW50cnVzdCBSb290IENl <newline>+cnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA2MTEyNzIwMjM0MloXDTI2MTEyNzIw <newline>+NTM0MlowgbAxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMTkw <newline>+NwYDVQQLEzB3d3cuZW50cnVzdC5uZXQvQ1BTIGlzIGluY29ycG9yYXRlZCBieSBy <newline>+ZWZlcmVuY2UxHzAdBgNVBAsTFihjKSAyMDA2IEVudHJ1c3QsIEluYy4xLTArBgNV <newline>+BAMTJEVudHJ1c3QgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJ <newline>+KoZIhvcNAQEBBQADggEPADCCAQoCggEBALaVtkNC+sZtKm9I35RMOVcF7sN5EUFo <newline>+Nu3s/poBj6E4KPz3EEZmLk0eGrEaTsbRwJWIsMn/MYszA9u3g3s+IIRe7bJWKKf4 <newline>+4LlAcTfFy0cOlypowCKVYhXbR9n10Cv/gkvJrT7eTNuQgFA/CYqEAOwwCj0Yzfv9 <newline>+KlmaI5UXLEWeH25DeW0MXJj+SKfFI0dcXv1u5x609mhF0YaDW6KKjbHjKYD+JXGI <newline>+rb68j6xSlkuqUY3kEzEZ6E5Nn9uss2rVvDlUccp6en+Q3X0dgNmBu1kmwhH+5pPi <newline>+94DkZfs0Nw4pgHBNrziGLp5/V6+eF67rHMsoIV+2HNjnogQi+dPa2MsCAwEAAaOB <newline>+sDCBrTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zArBgNVHRAEJDAi <newline>+gA8yMDA2MTEyNzIwMjM0MlqBDzIwMjYxMTI3MjA1MzQyWjAfBgNVHSMEGDAWgBRo <newline>+kORnpKZTgMeGZqTx90tD+4S9bTAdBgNVHQ4EFgQUaJDkZ6SmU4DHhmak8fdLQ/uE <newline>+vW0wHQYJKoZIhvZ9B0EABBAwDhsIVjcuMTo0LjADAgSQMA0GCSqGSIb3DQEBBQUA <newline>+A4IBAQCT1DCw1wMgKtD5Y+iRDAUgqV8ZyntyTtSx29CW+1RaGSwMCPeyvIWonX9t <newline>+O1KzKtvn1ISMY/YPyyYBkVBs9F8U4pN0wBOeMDpQ47RgxRzwIkSNcUesyBrJ6Zua <newline>+AGAT/3B+XxFNSRuzFVJ7yVTav52Vr2ua2J7p8eRDjeIRRDq/r72DQnNSi6q7pynP <newline>+9WQcCk3RvKqsnyrQ/39/2n3qse0wJcGE2jTSW3iDVuycNsMm4hH2Z0kdkquM++v/ <newline>+eu6FSqdQgPCnXEqULl8FmTxSQeDNtGPPAUO6nIPcj2A781q0tHuu2guQOHXvgR1m <newline>+0vdXcDazv/wor3ElhVsT/h5/WrQ8 <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_EV[] = <newline>+    "sha1/ukKwgYhTiB2GY71MwF4I/upuu3c="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEPjCCAyagAwIBAgIESlOMKDANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMC <newline>+VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50 <newline>+cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3Qs <newline>+IEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVz <newline>+dCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIwHhcNMDkwNzA3MTcy <newline>+NTU0WhcNMzAxMjA3MTc1NTU0WjCBvjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVu <newline>+dHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwt <newline>+dGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0 <newline>+aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmlj <newline>+YXRpb24gQXV0aG9yaXR5IC0gRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK <newline>+AoIBAQC6hLZy254Ma+KZ6TABp3bqMriVQRrJ2mFOWHLP/vaCeb9zYQYKpSfYs1/T <newline>+RU4cctZOMvJyig/3gxnQaoCAAEUesMfnmr8SVycco2gvCoe9amsOXmXzHHfV1IWN <newline>+cCG0szLni6LVhjkCsbjSR87kyUnEO6fe+1R9V77w6G7CebI6C1XiUJgWMhNcL3hW <newline>+wcKUs/Ja5CeanyTXxuzQmyWC48zCxEXFjJd6BmsqEZ+pCm5IO2/b1BEZQvePB7/1 <newline>+U1+cPvQXLOZprE4yTGJ36rfo5bs0vBmLrpxR57d+tVOxMyLlbc9wPBr64ptntoP0 <newline>+jaWvYkxN4FisZDQSA/i2jZRjJKRxAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAP <newline>+BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqciZ60B7vfec7aVHUbI2fkBJmqzAN <newline>+BgkqhkiG9w0BAQsFAAOCAQEAeZ8dlsa2eT8ijYfThwMEYGprmi5ZiXMRrEPR9RP/ <newline>+jTkrwPK9T3CMqS/qF8QLVJ7UG5aYMzyorWKiAHarWWluBh1+xLlEjZivEtRh2woZ <newline>+Rkfz6/djwUAFQKXSt/S1mja/qYh2iARVBCuch38aNzx+LaUa2NSJXsq9rD1s2G2v <newline>+1fN2D807iDginWyTmsQ9v4IbZT+mD12q/OWyFcq1rca8PdCE6OoGcrBNOTJ4vz4R <newline>+nAuknZoh8/CbCzB428Hch0P+vGOaysXCHMnHjf87ElgI5rY97HosTvuDls4MPGmH <newline>+VHOkc8KT/1EQrBVUAdj8BbGJoX90g5pJ19xOe4pIb4tF9g== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_G2[] = <newline>+    "sha1/qzDTr0vY8WtYae5FaSnahLhzlIg="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIE2DCCBEGgAwIBAgIEN0rSQzANBgkqhkiG9w0BAQUFADCBwzELMAkGA1UEBhMC <newline>+VVMxFDASBgNVBAoTC0VudHJ1c3QubmV0MTswOQYDVQQLEzJ3d3cuZW50cnVzdC5u <newline>+ZXQvQ1BTIGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMc <newline>+KGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDE6MDgGA1UEAxMxRW50cnVzdC5u <newline>+ZXQgU2VjdXJlIFNlcnZlciBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05OTA1 <newline>+MjUxNjA5NDBaFw0xOTA1MjUxNjM5NDBaMIHDMQswCQYDVQQGEwJVUzEUMBIGA1UE <newline>+ChMLRW50cnVzdC5uZXQxOzA5BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5j <newline>+b3JwLiBieSByZWYuIChsaW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBF <newline>+bnRydXN0Lm5ldCBMaW1pdGVkMTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUg <newline>+U2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGdMA0GCSqGSIb3DQEBAQUA <newline>+A4GLADCBhwKBgQDNKIM0VBuJ8w+vN5Ex/68xYMmo6LIQaO2f55M28Qpku0f1BBc/ <newline>+I0dNxScZgSYMVHINiC3ZH5oSn7yzcdOAGT9HZnuMNSjSuQrfJNqc1lB5gXpa0zf3 <newline>+wkrYKZImZNHkmGw6AIr1NJtl+O3jEP/9uElY3KDegjlrgbEWGWG5VLbmQwIBA6OC <newline>+AdcwggHTMBEGCWCGSAGG+EIBAQQEAwIABzCCARkGA1UdHwSCARAwggEMMIHeoIHb <newline>+oIHYpIHVMIHSMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLRW50cnVzdC5uZXQxOzA5 <newline>+BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5jb3JwLiBieSByZWYuIChsaW1p <newline>+dHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVk <newline>+MTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRp <newline>+b24gQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMCmgJ6AlhiNodHRwOi8vd3d3LmVu <newline>+dHJ1c3QubmV0L0NSTC9uZXQxLmNybDArBgNVHRAEJDAigA8xOTk5MDUyNTE2MDk0 <newline>+MFqBDzIwMTkwNTI1MTYwOTQwWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAU8Bdi <newline>+E1U9s/8KAGv7UISX8+1i0BowHQYDVR0OBBYEFPAXYhNVPbP/CgBr+1CEl/PtYtAa <newline>+MAwGA1UdEwQFMAMBAf8wGQYJKoZIhvZ9B0EABAwwChsEVjQuMAMCBJAwDQYJKoZI <newline>+hvcNAQEFBQADgYEAkNwwAvpkdMKnCqV8IY00F6j7Rw7/JXyNEwr75Ji174z4xRAN <newline>+95K+8cPV1ZVqBLssziY2ZcgxxufuP+NXdYR6Ee9GTxj005i7qIcyunL2POI9n9cd <newline>+2cNgQ4xYDiKWL2KjLB+6rQXvqzJ4h6BUcxm1XAX5Uj5tLUUL9wqT6u0G+bI= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_SSL[] = <newline>+    "sha1/8BdiE1U9s/8KAGv7UISX8+1i0Bo="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEMjCCAxqgAwIBAgIBATANBgkqhkiG9w0BAQUFADB7MQswCQYDVQQGEwJHQjEb <newline>+MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow <newline>+GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmlj <newline>+YXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVowezEL <newline>+MAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE <newline>+BwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxITAfBgNVBAMM <newline>+GEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEBBQADggEP <newline>+ADCCAQoCggEBAL5AnfRu4ep2hxxNRUSOvkbIgwadwSr+GB+O5AL686tdUIoWMQua <newline>+BtDFcCLNSS1UY8y2bmhGC1Pqy0wkwLxyTurxFa70VJoSCsN6sjNg4tqJVfMiWPPe <newline>+3M/vg4aijJRPn2jymJBGhCfHdr/jzDUsi14HZGWCwEiwqJH5YZ92IFCokcdmtet4 <newline>+YgNW8IoaE+oxox6gmf049vYnMlhvB/VruPsUK6+3qszWY19zjNoFmag4qMsXeDZR <newline>+rOme9Hg6jc8P2ULimAyrL58OAd7vn5lJ8S3frHRNG5i1R8XlKdH5kBjHYpy+g8cm <newline>+ez6KJcfA3Z3mNWgQIJ2P2N7Sw4ScDV7oL8kCAwEAAaOBwDCBvTAdBgNVHQ4EFgQU <newline>+oBEKIz6W8Qfs4q8p74Klf9AwpLQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF <newline>+MAMBAf8wewYDVR0fBHQwcjA4oDagNIYyaHR0cDovL2NybC5jb21vZG9jYS5jb20v <newline>+QUFBQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmwwNqA0oDKGMGh0dHA6Ly9jcmwuY29t <newline>+b2RvLm5ldC9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDANBgkqhkiG9w0BAQUF <newline>+AAOCAQEACFb8AvCb6P+k+tZ7xkSAzk/ExfYAWMymtrwUSWgEdujm7l3sAg9g1o1Q <newline>+GE8mTgHj5rCl7r+8dFRBv/38ErjHT1r0iWAFf2C3BUrz9vHCv8S5dIa2LX1rzNLz <newline>+Rt0vxuBqw8M0Ayx9lt1awg6nCpnBBYurDC/zXDrPbDdVCYfeU0BsWO/8tqtlbgT2 <newline>+G9w84FoVxp7Z8VlIMCFlA2zs6SFz7JsDoeA3raAVGI/6ugLOpyypEBMs1OUIJqsi <newline>+l2D4kF501KKaU73yqWjgom7C12yxow+ev+to51byrvLjKzg6CYG1a4XXvi3tPxq3 <newline>+smPi9WIsgtRqAEFQ8TmDn5XpNpaYbg== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AAACertificateServices[] = <newline>+    "sha1/xDAoxdPjCAwQRIssd7okU5dgu/k="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGDCCAwCgAwIBAgIBATANBgkqhkiG9w0BAQUFADBlMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3 <newline>+b3JrMSEwHwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3QwHhcNMDAwNTMw <newline>+MTAzODMxWhcNMjAwNTMwMTAzODMxWjBlMQswCQYDVQQGEwJTRTEUMBIGA1UEChML <newline>+QWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSEwHwYD <newline>+VQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3QwggEiMA0GCSqGSIb3DQEBAQUA <newline>+A4IBDwAwggEKAoIBAQCWltQhSWDia+hBBwzexODcEyPNwTXH+9ZOEQpnXvUGW2ul <newline>+CDtbKRY654eyNAbFvAWlA3yCyykQruGIgb3WntP+LVbBFc7jJp0VLhD7Bo8wBN6n <newline>+tGO0/7Gcrjyvd7ZWxbWroulpOj0OM3kyP3CCkplhbY0wCI9xP6ZIVxn4JdxLZlyl <newline>+dI+Yrsj5wAYi56xz36Uu+1LcsRVlIPo1Zmne3yzxbrww2ywkEtvrNTVokMsAsJch <newline>+PXQhI2U0K7t4WaPW4XY5mqRJjox0r26kmqPZm9I4XJuiGMx1I4S+6+JNM3GOGvDC <newline>++Mcdoq0Dlyz4zyXG9rgkMbFjXZJ/Y/AlyVMuH79NAgMBAAGjgdIwgc8wHQYDVR0O <newline>+BBYEFJWxtPCUtr3H2tERCSG+wa9J/RB7MAsGA1UdDwQEAwIBBjAPBgNVHRMBAf8E <newline>+BTADAQH/MIGPBgNVHSMEgYcwgYSAFJWxtPCUtr3H2tERCSG+wa9J/RB7oWmkZzBl <newline>+MQswCQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFk <newline>+ZFRydXN0IFRUUCBOZXR3b3JrMSEwHwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENB <newline>+IFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBACxtZBsfzQ3duQH6lmM0MkhHma6X <newline>+7f1yFqZzR1r0693p9db7RcwpiURdv0Y5PejuvE1Uhh4dbOMXJ0PhiVYrqW9yTkkz <newline>+43J8KiOavD7/KCrto/8cI7pDVwlnTUtiBi34/2ydYB7YHEt9tTEv2dB8Xfjea4MY <newline>+eDdXL+gzB2ffHsdrKpV2ro9Xo/D0UrSpUwjP4E/TelOL/bscVjby/rK25Xa71SJl <newline>+pz/+0WatC7xrmYbvP33zGDLKe8bjq2RGlfgmadlVg3sslgf/WSxEo8bl6ancoWOA <newline>+WiFeIc9TVPC6b4nbqKqVz4vjccweGyBECMB6tkD9xOQ14R0WHNC8K47Wcdk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustClass1CARoot[] = <newline>+    "sha1/i9vXzKBoU0IW9MErJUT8Apyli0c="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIENjCCAx6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBvMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxJjAkBgNVBAsTHUFkZFRydXN0IEV4dGVybmFs <newline>+IFRUUCBOZXR3b3JrMSIwIAYDVQQDExlBZGRUcnVzdCBFeHRlcm5hbCBDQSBSb290 <newline>+MB4XDTAwMDUzMDEwNDgzOFoXDTIwMDUzMDEwNDgzOFowbzELMAkGA1UEBhMCU0Ux <newline>+FDASBgNVBAoTC0FkZFRydXN0IEFCMSYwJAYDVQQLEx1BZGRUcnVzdCBFeHRlcm5h <newline>+bCBUVFAgTmV0d29yazEiMCAGA1UEAxMZQWRkVHJ1c3QgRXh0ZXJuYWwgQ0EgUm9v <newline>+dDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALf3GjPm8gAELTngTlvt <newline>+H7xsD821+iO2zt6bETOXpClMfZOfvUq8k+0DGuOPz+VtUFrWlymUWoCwSXrbLpX9 <newline>+uMq/NzgtHj6RQa1wVsfwTz/oMp50ysiQVOnGXw94nZpAPA6sYapeFI+eh6FqUNzX <newline>+mk6vBbOmcZSccbNQYArHE504B4YCqOmoaSYYkKtMsE8jqzpPhNjfzp/haW+710LX <newline>+a0Tkx63ubUFfclpxCDezeWWkWaCUN/cALw3CknLa0Dhy2xSoRcRdKn23tNbE7qzN <newline>+E0S3ySvdQwAl+mG5aWpYIxG3pzOPVnVZ9c0p10a3CitlttNCbxWyuHv77+ldU9U0 <newline>+WicCAwEAAaOB3DCB2TAdBgNVHQ4EFgQUrb2YejS0Jvf6xCZU7wO94CTLVBowCwYD <newline>+VR0PBAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wgZkGA1UdIwSBkTCBjoAUrb2YejS0 <newline>+Jvf6xCZU7wO94CTLVBqhc6RxMG8xCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRU <newline>+cnVzdCBBQjEmMCQGA1UECxMdQWRkVHJ1c3QgRXh0ZXJuYWwgVFRQIE5ldHdvcmsx <newline>+IjAgBgNVBAMTGUFkZFRydXN0IEV4dGVybmFsIENBIFJvb3SCAQEwDQYJKoZIhvcN <newline>+AQEFBQADggEBALCb4IUlwtYj4g+WBpKdQZic2YR5gdkeWxQHIzZlj7DYd7usQWxH <newline>+YINRsPkyPef89iYTx4AWpb9a/IfPeHmJIZriTAcKhjW88t5RxNKWt9x+Tu5w/Rw5 <newline>+6wwCURQtjr0W4MHfRnXnJK3s9EK0hZNwEGe6nQY1ShjTK3rMUUKhemPR5ruhxSvC <newline>+Nr4TDea9Y355e6cJDUCrat2PisP29owaQgVR1EX1n6diIWgVIEM8med8vSTYqZEX <newline>+c4g/VhsxOBi0cQ+azcgOno4uG+GMmIPLHzHxREzGBHNJdmAPx/i9F4BrLunMTA5a <newline>+mnkPIAou1Z5jJh5VkpTYghdae9C8x49OhgQ= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustExternalCARoot[] = <newline>+    "sha1/T5x9IXmcrQ7YuQxXnxoCmeeQ84c="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEFTCCAv2gAwIBAgIBATANBgkqhkiG9w0BAQUFADBkMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3 <newline>+b3JrMSAwHgYDVQQDExdBZGRUcnVzdCBQdWJsaWMgQ0EgUm9vdDAeFw0wMDA1MzAx <newline>+MDQxNTBaFw0yMDA1MzAxMDQxNTBaMGQxCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtB <newline>+ZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQIE5ldHdvcmsxIDAeBgNV <newline>+BAMTF0FkZFRydXN0IFB1YmxpYyBDQSBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOC <newline>+AQ8AMIIBCgKCAQEA6Rowj4OIFMEg2Dybjxt+A3S72mnTRqX4jsIMEZBRpS9mVEBV <newline>+6tsfSlbunyNu9DnLoblv8n75XYcmYZ4c+OLspoH4IcUkzBEMP9smcnrHAZcHF/nX <newline>+GCwwfQ56HmIexkvA/X1id9NEHif2P0tEs7c42TkfYNVRknMDtABp4/MUTu7R3AnP <newline>+dzRGULD4EfL+OHn3Bzn+UZKXC1sIXzSGAa2Il+tmzV7R/9x98oTaunet3IAIx6eH <newline>+1lWfl2royBFkuucZKT8Rs3iQhCBSWxHveNCD9tVIkNAwHM+A+WD+eeSI8t0A65RF <newline>+62WUaUC6wNW0uLp9BBGo6zEFlpROWCGOn9Bg/QIDAQABo4HRMIHOMB0GA1UdDgQW <newline>+BBSBPjfYkrAfd59ctKtzquf2NGAv+jALBgNVHQ8EBAMCAQYwDwYDVR0TAQH/BAUw <newline>+AwEB/zCBjgYDVR0jBIGGMIGDgBSBPjfYkrAfd59ctKtzquf2NGAv+qFopGYwZDEL <newline>+MAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQLExRBZGRU <newline>+cnVzdCBUVFAgTmV0d29yazEgMB4GA1UEAxMXQWRkVHJ1c3QgUHVibGljIENBIFJv <newline>+b3SCAQEwDQYJKoZIhvcNAQEFBQADggEBAAP3FUr4JNojVhaTdt02KLmuG7jD8WS6 <newline>+IBh4lSknVwW8fCr0uVFV2ocC3g8WFzH4qnkuCRO7r7IgGRLlk/lL+YPoRNWyQSW/ <newline>+iHVv/xD8SlTQX/D67zZzfRs2RcYhbbQVuE7PnFylPVoAjgbjPGsye/Kf8Lb93/Ao <newline>+GEjwxrzQvzSAlsJKsW2Ox5BF3i9nrEUEo3rcVZLJR2bYGozH7ZxOmuASu7VqTITh <newline>+4SINhwBk/ox9Yjllpu9CtoAlEmEBqCQTcAARJl/6NVDFSMwGR+gn2HCNX2TmoUQm <newline>+XiLsks3/QppEIW1cxeMiHV9HEufOX1362KqxMy3ZdvJOOjMMK7MtkAY= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustPublicCARoot[] = <newline>+    "sha1/qFdl1ugyyMUZY3Namhd0OoHf7i4="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEHjCCAwagAwIBAgIBATANBgkqhkiG9w0BAQUFADBnMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3 <newline>+b3JrMSMwIQYDVQQDExpBZGRUcnVzdCBRdWFsaWZpZWQgQ0EgUm9vdDAeFw0wMDA1 <newline>+MzAxMDQ0NTBaFw0yMDA1MzAxMDQ0NTBaMGcxCzAJBgNVBAYTAlNFMRQwEgYDVQQK <newline>+EwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQIE5ldHdvcmsxIzAh <newline>+BgNVBAMTGkFkZFRydXN0IFF1YWxpZmllZCBDQSBSb290MIIBIjANBgkqhkiG9w0B <newline>+AQEFAAOCAQ8AMIIBCgKCAQEA5B6a/twJWoekn0e+EV+vhDTbYjx5eLfpMLXsDBwq <newline>+xBb/4Oxx64r1EW7tTw2R0hIYLUkVAcKkIhPHEWT/IhKauY5cLwjPcWqzZwFZ8V1G <newline>+87B4pfYOQnrjfxvM0PC3KP0q6p6zsLkEqv32x7SxuCqg+1jxGaBvcCV+PmlKfw8i <newline>+2O+tCBGaKZnhqkRFmhJePp1tUvznoD1oL/BLcHwTOK28FSXx1s6rosAx1i+f4P8U <newline>+WfyEk9mHfExUE+uf0S0R+Bg6Ot4l2ffTQO2kBhLEO+GRwVY18BTcZTYJbqukB8c1 <newline>+0cIDMzZbdSZtQvESa0NvS3GU+jQd7RNuyoB/mC9suWXY6QIDAQABo4HUMIHRMB0G <newline>+A1UdDgQWBBQ5lYtii1zJ1IC6WA+XPxUIQ8yYpzALBgNVHQ8EBAMCAQYwDwYDVR0T <newline>+AQH/BAUwAwEB/zCBkQYDVR0jBIGJMIGGgBQ5lYtii1zJ1IC6WA+XPxUIQ8yYp6Fr <newline>+pGkwZzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQL <newline>+ExRBZGRUcnVzdCBUVFAgTmV0d29yazEjMCEGA1UEAxMaQWRkVHJ1c3QgUXVhbGlm <newline>+aWVkIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBABmrder4i2VhlRO6aQTv <newline>+hsoToMeqT2QbPxj2qC0sVY8FtzDqQmodwCVRLae/DLPt7wh/bDxGGuoYQ992zPlm <newline>+hpwsaPXpF/gxsxjE1kh9I0xowX67ARRvxdlu3rsEQmr49lx95dr6h+sNNVJn0J6X <newline>+dgWTP5XHAeZpVTh/EGGZyeNfpso+gmNIquIISD6q8rKFYqa0p9m9N5xotS1WfbC3 <newline>+P6CxB9bpT9zeRXEwMn8bLgn5v1Kh7sKAPgZcLlVAwRv1cEWw3F369nJad9Jjzc9Y <newline>+iQBCYz95OdBEsIJuQRno3eDBiFrRHnGTHyQwdOUeqN48Jzd/g66ed8/wMLH/S5no <newline>+xqE= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustQualifiedCARoot[] = <newline>+    "sha1/vOS3IxJVmOVjQRkcUOS2R8J2Bdc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEHTCCAwWgAwIBAgIQToEtioJl4AsC7j41AkblPTANBgkqhkiG9w0BAQUFADCB <newline>+gTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G <newline>+A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxJzAlBgNV <newline>+BAMTHkNPTU9ETyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNjEyMDEwMDAw <newline>+MDBaFw0yOTEyMzEyMzU5NTlaMIGBMQswCQYDVQQGEwJHQjEbMBkGA1UECBMSR3Jl <newline>+YXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFDT01P <newline>+RE8gQ0EgTGltaXRlZDEnMCUGA1UEAxMeQ09NT0RPIENlcnRpZmljYXRpb24gQXV0 <newline>+aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0ECLi3LjkRv3 <newline>+UcEbVASY06m/weaKXTuH+7uIzg3jLz8GlvCiKVCZrts7oVewdFFxze1CkU1B/qnI <newline>+2GqGd0S7WWaXUF601CxwRM/aN5VCaTwwxHGzUvAhTaHYujl8HJ6jJJ3ygxaYqhZ8 <newline>+Q5sVW7euNJH+1GImGEaaP+vB+fGQV+useg2L23IwambV4EajcNxo2f8ESIl33rXp <newline>++2dtQem8Ob0y2WIC8bGoPW43nOIv4tOiJovGuFVDiOEjPqXSJDlqR6sA1KGzqSX+ <newline>+DT+nHbrTUcELpNqsOO9VUCQFZUaTNE8tja3G1CEZ0o7KBWFxB3NH5YoZEr0ETc5O <newline>+nKVIrLsm9wIDAQABo4GOMIGLMB0GA1UdDgQWBBQLWOWLxkwVN6RAqTCpIb5HNlpW <newline>+/zAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zBJBgNVHR8EQjBAMD6g <newline>+PKA6hjhodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9DZXJ0aWZpY2F0aW9u <newline>+QXV0aG9yaXR5LmNybDANBgkqhkiG9w0BAQUFAAOCAQEAPpiem/Yb6dc5t3iuHXIY <newline>+SdOH5EOC6z/JqvWote9VfCFSZfnVDeFs9D6Mk3ORLgLETgdxb8CPOGEIqB6BCsAv <newline>+IC9Bi5HcSEW88cbeunZrM8gALTFGTO3nnc+IlP8zwFboJIYmuNg4ON8qa90SzMc/ <newline>+RxdMosIGlgnW2/4/PEZB31jiVg88O8EckzXZOFKs7sjsLjBOlDW0JB9LeGna8gI4 <newline>+zJVSk/BwJVmcIGfE7vmLV2H0knZ9P4SNVbfo5azV8fUZVqZa+5Acr5Pr5RzUZ5dd <newline>+BA6+C4OmF4O5MBKgxTMVBbkN+8cFduPYSo38NBejxiEovjBFMR7HeL5YYTisO+IB <newline>+ZQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_COMODOCertificationAuthority[] = <newline>+    "sha1/EeSR0cnkwOuazs9zVF3h8agwPsM="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEPzCCAyegAwIBAgIBATANBgkqhkiG9w0BAQUFADB+MQswCQYDVQQGEwJHQjEb <newline>+MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow <newline>+GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEkMCIGA1UEAwwbU2VjdXJlIENlcnRp <newline>+ZmljYXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVow <newline>+fjELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G <newline>+A1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxJDAiBgNV <newline>+BAMMG1NlY3VyZSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEB <newline>+BQADggEPADCCAQoCggEBAMBxM4KK0HDrc4eCQNUd5MvJDkKQ+d40uaG6EfQlhfPM <newline>+cm3ye5drswfxdySRXyWP9nQ95IDC+DwN879A6vfIUtFyb+/Iq0G4bi4XKpVpDM3S <newline>+HpR7LZQdqnXXs5jLrLxkU0C8j6ysNstcrbvd4JQX7NFc0L/vpZXJkMWwrPsbQ996 <newline>+CF23uPJAGysnnlDOXmWCiIxe004MeuoIkbY2qitC++rCoznl2yY4rYsK7hljxxwk <newline>+3wN42ubqwUcaCwtGCd0C/N7Lh1/XMGNooa7cMqG6vv5Eq2i2pRcV/b3Vp6ea5EQz <newline>+6YiO/O1R65NxTq0B50SOqy3LqP4BSUjwwN3HaNiS/j0CAwEAAaOBxzCBxDAdBgNV <newline>+HQ4EFgQUPNiTiMLAggnMAZkGkyDpnnAJY08wDgYDVR0PAQH/BAQDAgEGMA8GA1Ud <newline>+EwEB/wQFMAMBAf8wgYEGA1UdHwR6MHgwO6A5oDeGNWh0dHA6Ly9jcmwuY29tb2Rv <newline>+Y2EuY29tL1NlY3VyZUNlcnRpZmljYXRlU2VydmljZXMuY3JsMDmgN6A1hjNodHRw <newline>+Oi8vY3JsLmNvbW9kby5uZXQvU2VjdXJlQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmww <newline>+DQYJKoZIhvcNAQEFBQADggEBAIcBbSMdflsXfcFhMs+P5/OKlFlm4J4oqF7Tt/Q0 <newline>+5qo5spcWxYJvMqTpjOev/e/C6LlLqqP05tqNZSH7uoDrJiiFGv45jN5bBAS0VPmj <newline>+Z55B+glSzAVIqMk/IQQezkhr/IXownuvf7fM+F86/TXGDe+X3EyrEeFryzHRbPtI <newline>+gKvcnDe4IRRLDXE97IMzbtFuMhbsmMcWi1mmNKsFVy2T96oTy9IT4rcuO81rUBcJ <newline>+aD61JlfutuC23bkpgHl9j6PwpCikFcSF9CfUa7/lXORlAnZUtOM3ZiTTGWHIUhDl <newline>+izeauan5Hb/qmZJhlv8BzaFfDbxxvA6sCx1HRR3B7Hzs/Sk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_SecureCertificateServices[] = <newline>+    "sha1/PLQahC71XPIaPaVKyNG+OQh2N7w="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEQzCCAyugAwIBAgIBATANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJHQjEb <newline>+MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow <newline>+GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDElMCMGA1UEAwwcVHJ1c3RlZCBDZXJ0 <newline>+aWZpY2F0ZSBTZXJ2aWNlczAeFw0wNDAxMDEwMDAwMDBaFw0yODEyMzEyMzU5NTla <newline>+MH8xCzAJBgNVBAYTAkdCMRswGQYDVQQIDBJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAO <newline>+BgNVBAcMB1NhbGZvcmQxGjAYBgNVBAoMEUNvbW9kbyBDQSBMaW1pdGVkMSUwIwYD <newline>+VQQDDBxUcnVzdGVkIENlcnRpZmljYXRlIFNlcnZpY2VzMIIBIjANBgkqhkiG9w0B <newline>+AQEFAAOCAQ8AMIIBCgKCAQEA33FvNlhTWvI2VFeAxHQIIO0Yfyod5jWaHiWsnOWW <newline>+fnJSoBVC21ndZHoa0Lh73TkVvFVIxO06AOoxEbrycXQaZ7jPM8yoMa+j49d/vzMt <newline>+TGo87IvDktJTdyR0nAducPy9C1t2ul/y/9c3S0pgePfw+spwtOpZqqPOSC+pw7IL <newline>+fhdyFgymBwwbOM/JYrc/oJOlh0Hyt3BAd9i+FHzjqMB6juljatEPmsbS9Is6FARW <newline>+1O24zG71++IsWL1/T2sr92AkWCTOJu80kTrV44HQsvAEAtdbtz6SrGsSivnkBbA7 <newline>+kUlcsutT6vifR4buv5XAwAaf0lteERv0xwQ1KdJVXOTt6wIDAQABo4HJMIHGMB0G <newline>+A1UdDgQWBBTFe1i97doladL3WRaoszLAeydb9DAOBgNVHQ8BAf8EBAMCAQYwDwYD <newline>+VR0TAQH/BAUwAwEB/zCBgwYDVR0fBHwwejA8oDqgOIY2aHR0cDovL2NybC5jb21v <newline>+ZG9jYS5jb20vVHJ1c3RlZENlcnRpZmljYXRlU2VydmljZXMuY3JsMDqgOKA2hjRo <newline>+dHRwOi8vY3JsLmNvbW9kby5uZXQvVHJ1c3RlZENlcnRpZmljYXRlU2VydmljZXMu <newline>+Y3JsMA0GCSqGSIb3DQEBBQUAA4IBAQDIk4E7ibSvuIQSTI3S8NtwuleGFTQQuS9/ <newline>+HrCoiWChisJ3DFBKmwCL2Iv0QeLQg4pKHBQGsKNoBXAxMKdTmw7pSqBYaWcOrp32 <newline>+pSxBvzwGa+RZzG0Q8ZZvH9/0BAKkn0U+yNj6NkZEUD+Cl5EfKNsYEYwq5GWDVxIS <newline>+jBc/lDb+XbDABHcTuPQV1T84zJQ6VdCsmPW6AF/ghhmBeC8owH7TzEIK9a5QoNE+ <newline>+xqFx7D+gIIxmOom0jtTYsU0lR+4viMi14QVFwL4Ucd56/Y57fU0IlqUSc/Atyjcn <newline>+dBInTMu2l+nZrghtWjlA3QVHdWpaIbOjGM9O9y5Xt5hwXsjEeLBi <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_TrustedCertificateServices[] = <newline>+    "sha1//nLI678ML7sOJhOTkzwsqY3cJJQ="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEXjCCA0agAwIBAgIQRL4Mi1AAIbQR0ypoBqmtaTANBgkqhkiG9w0BAQUFADCB <newline>+kzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xGzAZBgNVBAMTElVUTiAtIERBVEFDb3Jw <newline>+IFNHQzAeFw05OTA2MjQxODU3MjFaFw0xOTA2MjQxOTA2MzBaMIGTMQswCQYDVQQG <newline>+EwJVUzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYD <newline>+VQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cu <newline>+dXNlcnRydXN0LmNvbTEbMBkGA1UEAxMSVVROIC0gREFUQUNvcnAgU0dDMIIBIjAN <newline>+BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3+5YEKIrblXEjr8uRgnn4AgPLit6 <newline>+E5Qbvfa2gI5lBZMAHryv4g+OGQ0SR+ysraP6LnD43m77VkIVni5c7yPeIbkFdicZ <newline>+D0/Ww5y0vpQZY/KmEQrrU0icvvIpOxboGqBMpsn0GFlowHDyUwDAXlCCpVZvNvlK <newline>+4ESGoE1O1kduSUrLZ9emxAW5jh70/P/N5zbgnAVssjMiFdC04MwXwLLA9P4yPykq <newline>+lXvY8qdOD1R8oQ2AswkDwf9c3V6aPryuvEeKaq5xyh+xKrhfQgUL7EYw0XILyulW <newline>+bfXv33i+Ybqypa4ETLyorGkVl73v67SMvzX41MPRKA5cOp9wGDMgd8SirwIDAQAB <newline>+o4GrMIGoMAsGA1UdDwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRT <newline>+MtGzz3/64PGgXYVOktKeRR20TzA9BgNVHR8ENjA0MDKgMKAuhixodHRwOi8vY3Js <newline>+LnVzZXJ0cnVzdC5jb20vVVROLURBVEFDb3JwU0dDLmNybDAqBgNVHSUEIzAhBggr <newline>+BgEFBQcDAQYKKwYBBAGCNwoDAwYJYIZIAYb4QgQBMA0GCSqGSIb3DQEBBQUAA4IB <newline>+AQAnNZcAiosovcYzMB4p/OL31ZjUQLtgyr+rFywJNn9Q+kHcrpY6CiM+iVnJowft <newline>+Gzet/Hy+UUla3joKVAgWRcKZsYfNjGjgaQPpxE6YsjuMFrMOoAyYUJuTqXAJyCyj <newline>+j98C5OBxOvG0I3KgqgHf35g+FFCgMSa9KOlaMCZ1+XtgHI3zzVAmbQQnmt/VDUVH <newline>+KWss5nbZqSl9Mt3JNjy9rjXxEZ4du5A/EkdOjtd+D2JzHVImOBwYSf0wdJrE5SIv <newline>+2MCN7ZF6TACPcn9d2t0bi0Vr591pl6jFVkwPDPafepE39peC4N1xaf92P2BNPM/3 <newline>+mfnGV/TJVTl4uix5yaaIK/QI <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNDATACorpSGC[] = <newline>+    "sha1/UzLRs89/+uDxoF2FTpLSnkUdtE8="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEojCCA4qgAwIBAgIQRL4Mi1AAJLQR0zYlJWfJiTANBgkqhkiG9w0BAQUFADCB <newline>+rjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xNjA0BgNVBAMTLVVUTi1VU0VSRmlyc3Qt <newline>+Q2xpZW50IEF1dGhlbnRpY2F0aW9uIGFuZCBFbWFpbDAeFw05OTA3MDkxNzI4NTBa <newline>+Fw0xOTA3MDkxNzM2NThaMIGuMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAV <newline>+BgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5l <newline>+dHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTE2MDQGA1UE <newline>+AxMtVVROLVVTRVJGaXJzdC1DbGllbnQgQXV0aGVudGljYXRpb24gYW5kIEVtYWls <newline>+MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsjmFpPJ9q0E7YkY3rs3B <newline>+YHW8OWX5ShpHornMSMxqmNVNNRm5pELlzkniii8efNIxB8dOtINknS4p1aJkxIW9 <newline>+hVE1eaROaJB7HHqkkqgX8pgV8pPMyaQylbsMTzC9mKALi+VuG6JG+ni8om+rWV6l <newline>+L8/K2m2qL+usobNqqrcuZzWLeeEeaYji5kbNoKXqvgvOdjp6Dpvq/NonWz1zHyLm <newline>+SGHGTPNpsaguG7bUMSAsvIKKjqQOpdeJQ/wWWq8dcdcRWdq6hw2v+vPhwvCkxWeM <newline>+1tZUOt4KpLoDd7NlyP0e03RiqhjKaJMeoYV+9Udly/hNVyh00jT/MLbu9mIwFIws <newline>+6wIDAQABo4G5MIG2MAsGA1UdDwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud <newline>+DgQWBBSJgmd9xJ0mcABLtFBIfN49rgRufTBYBgNVHR8EUTBPME2gS6BJhkdodHRw <newline>+Oi8vY3JsLnVzZXJ0cnVzdC5jb20vVVROLVVTRVJGaXJzdC1DbGllbnRBdXRoZW50 <newline>+aWNhdGlvbmFuZEVtYWlsLmNybDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUH <newline>+AwQwDQYJKoZIhvcNAQEFBQADggEBALFtYV2mGn98q0rkMPxTbyUkxsrt4jFcKw7u <newline>+7mFVbwQ+zznexRtJlOTrIEy05p5QLnLZjfWqo7NK2lYcYJeA3IKirUq9iiv/Cwm0 <newline>+xtcgBEXkzYABurorbs6q15L+5K/r9CYdFip/bDCVNy8zEqx/3cfREYxRmLLQo5HQ <newline>+rfafnoOTHh1CuEava2bwm3/q4wMC5QJRwarVNZ1yQAOJujEdxRBoUp7fooXFXAim <newline>+eOZTT7Hot9MUnpOmw2TjrH5xzbyf6QMbzPvprDHBr3wVdAKZw7JHpsIyYdfHb0gk <newline>+USeh1YdV8nuPmD0Wnu51tvjQjvLzxq4oW6fw8zYX/MMF08oDSlQ= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNUSERFirstClientAuthenticationandEmail[] = <newline>+    "sha1/iYJnfcSdJnAAS7RQSHzePa4Ebn0="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEdDCCA1ygAwIBAgIQRL4Mi1AAJLQR0zYq/mUK/TANBgkqhkiG9w0BAQUFADCB <newline>+lzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHzAdBgNVBAMTFlVUTi1VU0VSRmlyc3Qt <newline>+SGFyZHdhcmUwHhcNOTkwNzA5MTgxMDQyWhcNMTkwNzA5MTgxOTIyWjCBlzELMAkG <newline>+A1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEe <newline>+MBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8v <newline>+d3d3LnVzZXJ0cnVzdC5jb20xHzAdBgNVBAMTFlVUTi1VU0VSRmlyc3QtSGFyZHdh <newline>+cmUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCx98M4P7Sof885glFn <newline>+0G2f0v9Y8+efK+wNiVSZuTiZFvfgIXlIwrthdBKWHTxqctU8EGc6Oe0rE81m65UJ <newline>+M6Rsl7HoxuzBdXmcRl6Nq9Bq/bkqVRcQVLMZ8Jr28bFdtqdt++BxF2uiiPsA3/4a <newline>+MXcMmgF6sTLjKwEHOG7DpV4jvEWbe1DByTCP2+UretNb+zNAHqDVmBe8i4fDidNd <newline>+oI6yqqr2jmmIBsX6iSHzCJ1pLgkzmykNRg+MzEk0sGlRvfkGzWitZky8PqxhvQqI <newline>+DsjfPe58BEydCl5rkdbux+0ojatNh4lz0G6k0B4WixThdkQDf2Os5M1JnMWS9Ksy <newline>+oUhbAgMBAAGjgbkwgbYwCwYDVR0PBAQDAgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYD <newline>+VR0OBBYEFKFyXyYbKJhDlV0HN9WFlp1L0sNFMEQGA1UdHwQ9MDswOaA3oDWGM2h0 <newline>+dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4tVVNFUkZpcnN0LUhhcmR3YXJlLmNy <newline>+bDAxBgNVHSUEKjAoBggrBgEFBQcDAQYIKwYBBQUHAwUGCCsGAQUFBwMGBggrBgEF <newline>+BQcDBzANBgkqhkiG9w0BAQUFAAOCAQEARxkP3nTGmZev/K0oXnWO6y1n7k57K9cM <newline>+//bey1WiCuFMVGWTYGufEpytXoMs61quwOQt9ABjHbjAbPLPSbtNk28Gpgoiskli <newline>+CE7/yMgUsogWXecB5BKV5UU0s4tpvc+0hY91UZ59Ojg6FEgSxvunOxqNDYJAB+gE <newline>+CJChicsZUN/KHAG8HQQZexB2lzvukJDKxA4fFm517zP4029bHpbj4HR3dHuKom4t <newline>+3XbWOTCC8KucUvIqx69JXn7HaOWCgchqJ/kniCrVWFCVH/A7HFe7fRQ5YiuayZSS <newline>+KqMiDP+JJn1fIytH1xUdqWqeUQ0qUZ6B+dQ7XnASfxAynB67nfhmqA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNUSERFirstHardware[] = <newline>+    "sha1/oXJfJhsomEOVXQc31YWWnUvSw0U="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEZjCCA06gAwIBAgIQRL4Mi1AAJLQR0zYt4LNfGzANBgkqhkiG9w0BAQUFADCB <newline>+lTELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHTAbBgNVBAMTFFVUTi1VU0VSRmlyc3Qt <newline>+T2JqZWN0MB4XDTk5MDcwOTE4MzEyMFoXDTE5MDcwOTE4NDAzNlowgZUxCzAJBgNV <newline>+BAYTAlVTMQswCQYDVQQIEwJVVDEXMBUGA1UEBxMOU2FsdCBMYWtlIENpdHkxHjAc <newline>+BgNVBAoTFVRoZSBVU0VSVFJVU1QgTmV0d29yazEhMB8GA1UECxMYaHR0cDovL3d3 <newline>+dy51c2VydHJ1c3QuY29tMR0wGwYDVQQDExRVVE4tVVNFUkZpcnN0LU9iamVjdDCC <newline>+ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM6qgT+jo2F4qjEAVZURnicP <newline>+HxzfOpuCaDDASmEd8S8O+r5596Uj71VRloTN2+O5bj4x2AogZ8f02b+U60cEPgLO <newline>+KqJdhwQJ9jCdGIqXsqoc/EHSoTbL+z2RuufZcDX65OeQw5ujm9M89RKZd7G3CeBo <newline>+5hy485RjiGpq/gt2yb70IuRnuasaXnfBhQfdDWy/7gbHd2pBnqcP1/vulBe3/IW+ <newline>+pKvEHDHd17bR5PDv3xaPslKT16HUiaEHLr/hARJCHhrh2JU022R5KP+6LhHC5ehb <newline>+kkj7RwvCbNqtMoNB86XlQXD9ZZBt+vpRxPm9lisZBCzTbafc8H9vg2XiaquHhnUC <newline>+AwEAAaOBrzCBrDALBgNVHQ8EBAMCAcYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4E <newline>+FgQU2u1kdBScFDyr3ZmpvVsoTYs8ydgwQgYDVR0fBDswOTA3oDWgM4YxaHR0cDov <newline>+L2NybC51c2VydHJ1c3QuY29tL1VUTi1VU0VSRmlyc3QtT2JqZWN0LmNybDApBgNV <newline>+HSUEIjAgBggrBgEFBQcDAwYIKwYBBQUHAwgGCisGAQQBgjcKAwQwDQYJKoZIhvcN <newline>+AQEFBQADggEBAAgfUrE3RHjb/c652pWWmKpVZIC1WkDdIaXFwfNfLEzIR1pp6ujw <newline>+NTX00CXzyKakh0q9G7FzCL3Uw8q2NbtZhncxzaeAFK4T7/yxSPlrJSUtUbYsbUXB <newline>+mMiKVl0+7kNOPmsnjtA6S4ULX9Ptaqd1y9Fahy85dRNacrACgZ++8A+EVCBibGnU <newline>+4U3GDZlDAQ0Slox4nb9QorFEqmrPF3rPbw/U+CRVX/A0FklmPlBGyWNxODFiuGK5 <newline>+81OtbLUrohKqGU8J2l7nk8aOFAj+8DCAGKCGhU3IfdeLA/5u1fedFqySLKAj5ZyR <newline>+Uh+U3xeUc8OzwcFxBSAAeL0TUh2oPs0AH8g= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNUSERFirstObject[] = <newline>+    "sha1/2u1kdBScFDyr3ZmpvVsoTYs8ydg="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICWjCCAcMCAgGlMA0GCSqGSIb3DQEBBAUAMHUxCzAJBgNVBAYTAlVTMRgwFgYD <newline>+VQQKEw9HVEUgQ29ycG9yYXRpb24xJzAlBgNVBAsTHkdURSBDeWJlclRydXN0IFNv <newline>+bHV0aW9ucywgSW5jLjEjMCEGA1UEAxMaR1RFIEN5YmVyVHJ1c3QgR2xvYmFsIFJv <newline>+b3QwHhcNOTgwODEzMDAyOTAwWhcNMTgwODEzMjM1OTAwWjB1MQswCQYDVQQGEwJV <newline>+UzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMScwJQYDVQQLEx5HVEUgQ3liZXJU <newline>+cnVzdCBTb2x1dGlvbnMsIEluYy4xIzAhBgNVBAMTGkdURSBDeWJlclRydXN0IEds <newline>+b2JhbCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCVD6C28FCc6HrH <newline>+iM3dFw4usJTQGz0O9pTAipTHBsiQl8i4ZBp6fmw8U+E3KHNgf7KXUwefU/ltWJTS <newline>+r41tiGeA5u2ylc9yMcqlHHK6XALnZELn+aks1joNrI1CqiQBOeacPwGFVw1Yh0X4 <newline>+04Wqk2kmhXBIgD8SFcd5tB8FLztimQIDAQABMA0GCSqGSIb3DQEBBAUAA4GBAG3r <newline>+GwnpXtlR22ciYaQqPEh346B8pt5zohQDhT37qw4wxYMWM4ETCJ57NE7fQMh017l9 <newline>+3PR2VX2bY1QY6fDq81yx2YtCHrnAlU66+tXifPVoYb+O7AWXX1uw16OFNMQkpw0P <newline>+lZPvy5TYnh+dXIVtx6quTx8itc2VrbqnzPmrC3p/ <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GTECyberTrustGlobalRoot[] = <newline>+    "sha1/WXkS3mF11m/EI7d3E3THlt5viHI="; <newline>+ <newline>+#endif // NET_BASE_PUBLIC_KEY_HASHES_ <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#include "net/base/transport_security_state.h" <newline>+ <newline>+#if defined(USE_OPENSSL) <newline>+#include <openssl/ecdsa.h> <newline>+#include <openssl/ssl.h> <newline>+#else  // !defined(USE_OPENSSL) <newline>+#include <cryptohi.h> <newline>+#include <hasht.h> <newline>+#include <keyhi.h> <newline>+#include <pk11pub.h> <newline>+#include <nspr.h> <newline>+#endif <newline>+ <newline>+#include <algorithm> <newline>+#include <utility> <newline>+ <newline>+#include "base/base64.h" <newline>+#include "base/json/json_reader.h" <newline>+#include "base/json/json_writer.h" <newline>+#include "base/logging.h" <newline>+#include "base/memory/scoped_ptr.h" <newline>+#include "base/metrics/histogram.h" <newline>+#include "base/sha1.h" <newline>+#include "base/string_number_conversions.h" <newline>+#include "base/string_tokenizer.h" <newline>+#include "base/string_util.h" <newline>+#include "base/time.h" <newline>+#include "base/utf_string_conversions.h" <newline>+#include "base/values.h" <newline>+#include "crypto/sha2.h" <newline>+#include "googleurl/src/gurl.h" <newline>+#include "net/base/asn1_util.h" <newline>+#include "net/base/dns_util.h" <newline>+#include "net/base/public_key_hashes.h" <newline>+#include "net/base/ssl_info.h" <newline>+#include "net/base/x509_certificate.h" <newline>+#include "net/http/http_util.h" <newline>+ <newline>+#if defined(USE_OPENSSL) <newline>+#include "crypto/openssl_util.h" <newline>+#endif <newline>+ <newline>+namespace net { <newline>+ <newline>+const long int TransportSecurityState::kMaxHSTSAgeSecs = 86400 * 365;  // 1 year <newline>+ <newline>+TransportSecurityState::TransportSecurityState(const std::string& hsts_hosts) <newline>+    : delegate_(NULL) { <newline>+  if (!hsts_hosts.empty()) { <newline>+    bool dirty; <newline>+    Deserialise(hsts_hosts, &dirty, &forced_hosts_); <newline>+  } <newline>+} <newline>+ <newline>+static std::string HashHost(const std::string& canonicalized_host) { <newline>+  char hashed[crypto::kSHA256Length]; <newline>+  crypto::SHA256HashString(canonicalized_host, hashed, sizeof(hashed)); <newline>+  return std::string(hashed, sizeof(hashed)); <newline>+} <newline>+ <newline>+void TransportSecurityState::SetDelegate( <newline>+    TransportSecurityState::Delegate* delegate) { <newline>+  delegate_ = delegate; <newline>+} <newline>+ <newline>+void TransportSecurityState::EnableHost(const std::string& host, <newline>+                                        const DomainState& state) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  const std::string canonicalized_host = CanonicalizeHost(host); <newline>+  if (canonicalized_host.empty()) <newline>+    return; <newline>+ <newline>+  // Only override a preloaded state if the new state describes a more strict <newline>+  // policy. TODO(palmer): Reconsider this? <newline>+  DomainState existing_state; <newline>+  if (IsPreloadedSTS(canonicalized_host, true, &existing_state) && <newline>+      canonicalized_host == CanonicalizeHost(existing_state.domain) && <newline>+      existing_state.IsMoreStrict(state)) { <newline>+    return; <newline>+  } <newline>+ <newline>+  // Use the original creation date if we already have this host. <newline>+  DomainState state_copy(state); <newline>+  if (GetDomainState(&existing_state, host, true) && <newline>+      !existing_state.created.is_null()) { <newline>+    state_copy.created = existing_state.created; <newline>+  } <newline>+ <newline>+  // We don't store these values. <newline>+  state_copy.preloaded = false; <newline>+  state_copy.domain.clear(); <newline>+ <newline>+  enabled_hosts_[HashHost(canonicalized_host)] = state_copy; <newline>+  DirtyNotify(); <newline>+} <newline>+ <newline>+bool TransportSecurityState::DeleteHost(const std::string& host) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  const std::string canonicalized_host = CanonicalizeHost(host); <newline>+  if (canonicalized_host.empty()) <newline>+    return false; <newline>+ <newline>+  std::map<std::string, DomainState>::iterator i = enabled_hosts_.find( <newline>+      HashHost(canonicalized_host)); <newline>+  if (i != enabled_hosts_.end()) { <newline>+    enabled_hosts_.erase(i); <newline>+    DirtyNotify(); <newline>+    return true; <newline>+  } <newline>+  return false; <newline>+} <newline>+ <newline>+bool TransportSecurityState::HasPinsForHost(DomainState* result, <newline>+                                            const std::string& host, <newline>+                                            bool sni_available) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  return HasMetadata(result, host, sni_available) && <newline>+      (!result->dynamic_spki_hashes.empty() || <newline>+       !result->preloaded_spki_hashes.empty()); <newline>+} <newline>+ <newline>+bool TransportSecurityState::GetDomainState(DomainState* result, <newline>+                                            const std::string& host, <newline>+                                            bool sni_available) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  return HasMetadata(result, host, sni_available); <newline>+} <newline>+ <newline>+bool TransportSecurityState::HasMetadata(DomainState* result, <newline>+                                         const std::string& host, <newline>+                                         bool sni_available) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  DomainState state; <newline>+  const std::string canonicalized_host = CanonicalizeHost(host); <newline>+  if (canonicalized_host.empty()) <newline>+    return false; <newline>+ <newline>+  bool has_preload = IsPreloadedSTS(canonicalized_host, sni_available, &state); <newline>+  std::string canonicalized_preload = CanonicalizeHost(state.domain); <newline>+ <newline>+  base::Time current_time(base::Time::Now()); <newline>+ <newline>+  for (size_t i = 0; canonicalized_host[i]; i += canonicalized_host[i] + 1) { <newline>+    std::string host_sub_chunk(&canonicalized_host[i], <newline>+                               canonicalized_host.size() - i); <newline>+    // Exact match of a preload always wins. <newline>+    if (has_preload && host_sub_chunk == canonicalized_preload) { <newline>+      *result = state; <newline>+      return true; <newline>+    } <newline>+ <newline>+    std::map<std::string, DomainState>::iterator j = <newline>+        enabled_hosts_.find(HashHost(host_sub_chunk)); <newline>+    if (j == enabled_hosts_.end()) <newline>+      continue; <newline>+ <newline>+    if (current_time > j->second.expiry && <newline>+        current_time > j->second.dynamic_spki_hashes_expiry) { <newline>+      enabled_hosts_.erase(j); <newline>+      DirtyNotify(); <newline>+      continue; <newline>+    } <newline>+ <newline>+    state = j->second; <newline>+    state.domain = DNSDomainToString(host_sub_chunk); <newline>+ <newline>+    // Succeed if we matched the domain exactly or if subdomain matches are <newline>+    // allowed. <newline>+    if (i == 0 || j->second.include_subdomains) { <newline>+      *result = state; <newline>+      return true; <newline>+    } <newline>+ <newline>+    return false; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+void TransportSecurityState::DeleteSince(const base::Time& time) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  bool dirtied = false; <newline>+ <newline>+  std::map<std::string, DomainState>::iterator i = enabled_hosts_.begin(); <newline>+  while (i != enabled_hosts_.end()) { <newline>+    if (i->second.created >= time) { <newline>+      dirtied = true; <newline>+      enabled_hosts_.erase(i++); <newline>+    } else { <newline>+      i++; <newline>+    } <newline>+  } <newline>+ <newline>+  if (dirtied) <newline>+    DirtyNotify(); <newline>+} <newline>+ <newline>+// MaxAgeToInt converts a string representation of a number of seconds into a <newline>+// int. We use strtol in order to handle overflow correctly. The string may <newline>+// contain an arbitary number which we should truncate correctly rather than <newline>+// throwing a parse failure. <newline>+static bool MaxAgeToInt(std::string::const_iterator begin, <newline>+                        std::string::const_iterator end, <newline>+                        int* result) { <newline>+  const std::string s(begin, end); <newline>+  char* endptr; <newline>+  long int i = strtol(s.data(), &endptr, 10 /* base */); <newline>+  if (*endptr || i < 0) <newline>+    return false; <newline>+  if (i > TransportSecurityState::kMaxHSTSAgeSecs) <newline>+    i = TransportSecurityState::kMaxHSTSAgeSecs; <newline>+  *result = i; <newline>+  return true; <newline>+} <newline>+ <newline>+// Strip, Split, StringPair, and ParsePins are private implementation details <newline>+// of ParsePinsHeader(std::string&, DomainState&). <newline>+static std::string Strip(const std::string& source) { <newline>+  if (source.empty()) <newline>+    return source; <newline>+ <newline>+  std::string::const_iterator start = source.begin(); <newline>+  std::string::const_iterator end = source.end(); <newline>+  HttpUtil::TrimLWS(&start, &end); <newline>+  return std::string(start, end); <newline>+} <newline>+ <newline>+typedef std::pair<std::string, std::string> StringPair; <newline>+ <newline>+static StringPair Split(const std::string& source, char delimiter) { <newline>+  StringPair pair; <newline>+  size_t point = source.find(delimiter); <newline>+ <newline>+  pair.first = source.substr(0, point); <newline>+  if (std::string::npos != point) <newline>+    pair.second = source.substr(point + 1); <newline>+ <newline>+  return pair; <newline>+} <newline>+ <newline>+// TODO(palmer): Support both sha256 and sha1. This will require additional <newline>+// infrastructure code changes and can come in a later patch. <newline>+// <newline>+// static <newline>+bool TransportSecurityState::ParsePin(const std::string& value, <newline>+                                      SHA1Fingerprint* out) { <newline>+  StringPair slash = Split(Strip(value), '/'); <newline>+  if (slash.first != "sha1") <newline>+    return false; <newline>+ <newline>+  std::string decoded; <newline>+  if (!base::Base64Decode(slash.second, &decoded) || <newline>+      decoded.size() != arraysize(out->data)) { <newline>+    return false; <newline>+  } <newline>+ <newline>+  memcpy(out->data, decoded.data(), arraysize(out->data)); <newline>+  return true; <newline>+} <newline>+ <newline>+static bool ParseAndAppendPin(const std::string& value, <newline>+                      FingerprintVector* fingerprints) { <newline>+  // The base64'd fingerprint MUST be a quoted-string. 20 bytes base64'd is 28 <newline>+  // characters; 32 bytes base64'd is 44 characters. TODO(palmer): Support <newline>+  // SHA256. <newline>+  size_t size = value.size(); <newline>+  if (size != 30 || value[0] != '"' || value[size - 1] != '"') <newline>+    return false; <newline>+ <newline>+  std::string unquoted = HttpUtil::Unquote(value); <newline>+  std::string decoded; <newline>+  SHA1Fingerprint fp; <newline>+ <newline>+  if (!base::Base64Decode(unquoted, &decoded) || <newline>+      decoded.size() != arraysize(fp.data)) { <newline>+    return false; <newline>+  } <newline>+ <newline>+  memcpy(fp.data, decoded.data(), arraysize(fp.data)); <newline>+  fingerprints->push_back(fp); <newline>+  return true; <newline>+} <newline>+ <newline>+// static <newline>+bool TransportSecurityState::GetPublicKeyHash( <newline>+    const X509Certificate& cert, SHA1Fingerprint* spki_hash) { <newline>+  std::string der_bytes; <newline>+  if (!X509Certificate::GetDEREncoded(cert.os_cert_handle(), &der_bytes)) <newline>+    return false; <newline>+ <newline>+  base::StringPiece spki; <newline>+  if (!asn1::ExtractSPKIFromDERCert(der_bytes, &spki)) <newline>+    return false; <newline>+ <newline>+  base::SHA1HashBytes(reinterpret_cast<const unsigned char*>(spki.data()), <newline>+                      spki.size(), spki_hash->data); <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+struct FingerprintsEqualPredicate { <newline>+  explicit FingerprintsEqualPredicate(const SHA1Fingerprint& fingerprint) : <newline>+      fingerprint_(fingerprint) {} <newline>+ <newline>+  bool operator()(const SHA1Fingerprint& other) const { <newline>+    return fingerprint_.Equals(other); <newline>+  } <newline>+ <newline>+  const SHA1Fingerprint& fingerprint_; <newline>+}; <newline>+ <newline>+// Returns true iff there is an item in |pins| which is not present in <newline>+// |from_cert_chain|. Such an SPKI hash is called a "backup pin". <newline>+static bool IsBackupPinPresent(const FingerprintVector& pins, <newline>+                               const FingerprintVector& from_cert_chain) { <newline>+  for (FingerprintVector::const_iterator <newline>+       i = pins.begin(); i != pins.end(); ++i) { <newline>+    FingerprintVector::const_iterator j = <newline>+        std::find_if(from_cert_chain.begin(), from_cert_chain.end(), <newline>+                     FingerprintsEqualPredicate(*i)); <newline>+      if (j == from_cert_chain.end()) <newline>+        return true; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+static bool HashesIntersect(const FingerprintVector& a, <newline>+                            const FingerprintVector& b) { <newline>+  for (FingerprintVector::const_iterator <newline>+       i = a.begin(); i != a.end(); ++i) { <newline>+    FingerprintVector::const_iterator j = <newline>+        std::find_if(b.begin(), b.end(), FingerprintsEqualPredicate(*i)); <newline>+      if (j != b.end()) <newline>+        return true; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+// Returns true iff |pins| contains both a live and a backup pin. A live pin <newline>+// is a pin whose SPKI is present in the certificate chain in |ssl_info|. A <newline>+// backup pin is a pin intended for disaster recovery, not day-to-day use, and <newline>+// thus must be absent from the certificate chain. The Public-Key-Pins header <newline>+// specification requires both. <newline>+static bool IsPinListValid(const FingerprintVector& pins, <newline>+                           const SSLInfo& ssl_info) { <newline>+  if (pins.size() < 2) <newline>+    return false; <newline>+ <newline>+  const FingerprintVector& from_cert_chain = ssl_info.public_key_hashes; <newline>+  if (from_cert_chain.empty()) <newline>+    return false; <newline>+ <newline>+  return IsBackupPinPresent(pins, from_cert_chain) && <newline>+      HashesIntersect(pins, from_cert_chain); <newline>+} <newline>+ <newline>+// "Public-Key-Pins" ":" <newline>+//     "max-age" "=" delta-seconds ";" <newline>+//     "pin-" algo "=" base64 [ ";" ... ] <newline>+// <newline>+// static <newline>+bool TransportSecurityState::ParsePinsHeader(const std::string& value, <newline>+                                             const SSLInfo& ssl_info, <newline>+                                             DomainState* state) { <newline>+  bool parsed_max_age = false; <newline>+  int max_age = 0; <newline>+  FingerprintVector pins; <newline>+ <newline>+  std::string source = value; <newline>+ <newline>+  while (!source.empty()) { <newline>+    StringPair semicolon = Split(source, ';'); <newline>+    semicolon.first = Strip(semicolon.first); <newline>+    semicolon.second = Strip(semicolon.second); <newline>+    StringPair equals = Split(semicolon.first, '='); <newline>+    equals.first = Strip(equals.first); <newline>+    equals.second = Strip(equals.second); <newline>+ <newline>+    if (LowerCaseEqualsASCII(equals.first, "max-age")) { <newline>+      if (equals.second.empty() || <newline>+          !MaxAgeToInt(equals.second.begin(), equals.second.end(), &max_age)) { <newline>+        return false; <newline>+      } <newline>+      if (max_age > kMaxHSTSAgeSecs) <newline>+        max_age = kMaxHSTSAgeSecs; <newline>+      parsed_max_age = true; <newline>+    } else if (LowerCaseEqualsASCII(equals.first, "pin-sha1")) { <newline>+      if (!ParseAndAppendPin(equals.second, &pins)) <newline>+        return false; <newline>+    } else if (LowerCaseEqualsASCII(equals.first, "pin-sha256")) { <newline>+      // TODO(palmer) <newline>+    } else { <newline>+      // Silently ignore unknown directives for forward compatibility. <newline>+    } <newline>+ <newline>+    source = semicolon.second; <newline>+  } <newline>+ <newline>+  if (!parsed_max_age || !IsPinListValid(pins, ssl_info)) <newline>+    return false; <newline>+ <newline>+  state->max_age = max_age; <newline>+  state->dynamic_spki_hashes_expiry = <newline>+      base::Time::Now() + base::TimeDelta::FromSeconds(max_age); <newline>+ <newline>+  state->dynamic_spki_hashes.clear(); <newline>+  if (max_age > 0) { <newline>+    for (FingerprintVector::const_iterator i = pins.begin(); <newline>+         i != pins.end(); i++) { <newline>+      state->dynamic_spki_hashes.push_back(*i); <newline>+    } <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+// "Strict-Transport-Security" ":" <newline>+//     "max-age" "=" delta-seconds [ ";" "includeSubDomains" ] <newline>+// <newline>+// static <newline>+bool TransportSecurityState::ParseHeader(const std::string& value, <newline>+                                         int* max_age, <newline>+                                         bool* include_subdomains) { <newline>+  DCHECK(max_age); <newline>+  DCHECK(include_subdomains); <newline>+ <newline>+  int max_age_candidate = 0; <newline>+ <newline>+  enum ParserState { <newline>+    START, <newline>+    AFTER_MAX_AGE_LABEL, <newline>+    AFTER_MAX_AGE_EQUALS, <newline>+    AFTER_MAX_AGE, <newline>+    AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER, <newline>+    AFTER_INCLUDE_SUBDOMAINS, <newline>+  } state = START; <newline>+ <newline>+  StringTokenizer tokenizer(value, " \t=;"); <newline>+  tokenizer.set_options(StringTokenizer::RETURN_DELIMS); <newline>+  while (tokenizer.GetNext()) { <newline>+    DCHECK(!tokenizer.token_is_delim() || tokenizer.token().length() == 1); <newline>+    switch (state) { <newline>+      case START: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (!LowerCaseEqualsASCII(tokenizer.token(), "max-age")) <newline>+          return false; <newline>+        state = AFTER_MAX_AGE_LABEL; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE_LABEL: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (*tokenizer.token_begin() != '=') <newline>+          return false; <newline>+        DCHECK_EQ(tokenizer.token().length(), 1U); <newline>+        state = AFTER_MAX_AGE_EQUALS; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE_EQUALS: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (!MaxAgeToInt(tokenizer.token_begin(), <newline>+                         tokenizer.token_end(), <newline>+                         &max_age_candidate)) <newline>+          return false; <newline>+        state = AFTER_MAX_AGE; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (*tokenizer.token_begin() != ';') <newline>+          return false; <newline>+        state = AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (!LowerCaseEqualsASCII(tokenizer.token(), "includesubdomains")) <newline>+          return false; <newline>+        state = AFTER_INCLUDE_SUBDOMAINS; <newline>+        break; <newline>+ <newline>+      case AFTER_INCLUDE_SUBDOMAINS: <newline>+        if (!IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          return false; <newline>+        break; <newline>+ <newline>+      default: <newline>+        NOTREACHED(); <newline>+    } <newline>+  } <newline>+ <newline>+  // We've consumed all the input.  Let's see what state we ended up in. <newline>+  switch (state) { <newline>+    case START: <newline>+    case AFTER_MAX_AGE_LABEL: <newline>+    case AFTER_MAX_AGE_EQUALS: <newline>+      return false; <newline>+    case AFTER_MAX_AGE: <newline>+      *max_age = max_age_candidate; <newline>+      *include_subdomains = false; <newline>+      return true; <newline>+    case AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER: <newline>+      return false; <newline>+    case AFTER_INCLUDE_SUBDOMAINS: <newline>+      *max_age = max_age_candidate; <newline>+      *include_subdomains = true; <newline>+      return true; <newline>+    default: <newline>+      NOTREACHED(); <newline>+      return false; <newline>+  } <newline>+} <newline>+ <newline>+// Side pinning and superfluous certificates: <newline>+// <newline>+// In SSLClientSocketNSS::DoVerifyCertComplete we look for certificates with a <newline>+// Subject of CN=meta. When we find one we'll currently try and parse side <newline>+// pinned key from it. <newline>+// <newline>+// A side pin is a key which can be pinned to, but also can be kept offline and <newline>+// still held by the site owner. The CN=meta certificate is just a backwards <newline>+// compatiable method of carrying a lump of bytes to the client. (We could use <newline>+// a TLS extension just as well, but it's a lot easier for admins to add extra <newline>+// certificates to the chain.) <newline>+ <newline>+// A TagMap represents the simple key-value structure that we use. Keys are <newline>+// 32-bit ints. Values are byte strings. <newline>+typedef std::map<uint32, base::StringPiece> TagMap; <newline>+ <newline>+// ParseTags parses a list of key-value pairs from |in| to |out| and advances <newline>+// |in| past the data. The key-value pair data is: <newline>+//   u16le num_tags <newline>+//   u32le tag[num_tags] <newline>+//   u16le lengths[num_tags] <newline>+//   ...data... <newline>+static bool ParseTags(base::StringPiece* in, TagMap *out) { <newline>+  // Many part of Chrome already assume little-endian. This is just to help <newline>+  // anyone who should try to port it in the future. <newline>+#if defined(__BYTE_ORDER) <newline>+  // Linux check <newline>+  COMPILE_ASSERT(__BYTE_ORDER == __LITTLE_ENDIAN, assumes_little_endian); <newline>+#elif defined(__BIG_ENDIAN__) <newline>+  // Mac check <newline>+  #error assumes little endian <newline>+#endif <newline>+ <newline>+  uint16 num_tags_16; <newline>+  if (in->size() < sizeof(num_tags_16)) <newline>+    return false; <newline>+ <newline>+  memcpy(&num_tags_16, in->data(), sizeof(num_tags_16)); <newline>+  in->remove_prefix(sizeof(num_tags_16)); <newline>+  unsigned num_tags = num_tags_16; <newline>+ <newline>+  if (in->size() < 6 * num_tags) <newline>+    return false; <newline>+ <newline>+  const uint32* tags = reinterpret_cast<const uint32*>(in->data()); <newline>+  const uint16* lens = reinterpret_cast<const uint16*>( <newline>+      in->data() + 4*num_tags); <newline>+  in->remove_prefix(6*num_tags); <newline>+ <newline>+  uint32 prev_tag = 0; <newline>+  for (unsigned i = 0; i < num_tags; i++) { <newline>+    size_t len = lens[i]; <newline>+    uint32 tag = tags[i]; <newline>+ <newline>+    if (in->size() < len) <newline>+      return false; <newline>+    // tags must be in ascending order. <newline>+    if (i > 0 && prev_tag >= tag) <newline>+      return false; <newline>+    (*out)[tag] = base::StringPiece(in->data(), len); <newline>+    in->remove_prefix(len); <newline>+    prev_tag = tag; <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+// GetTag extracts the data associated with |tag| in |tags|. <newline>+static bool GetTag(uint32 tag, const TagMap& tags, base::StringPiece* out) { <newline>+  TagMap::const_iterator i = tags.find(tag); <newline>+  if (i == tags.end()) <newline>+    return false; <newline>+ <newline>+  *out = i->second; <newline>+  return true; <newline>+} <newline>+ <newline>+// kP256SubjectPublicKeyInfoPrefix can be prepended onto a P256 elliptic curve <newline>+// point in X9.62 format in order to make a valid SubjectPublicKeyInfo. The <newline>+// ASN.1 interpretation of these bytes is: <newline>+// <newline>+//     0:d=0  hl=2 l=  89 cons: SEQUENCE <newline>+//     2:d=1  hl=2 l=  19 cons: SEQUENCE <newline>+//     4:d=2  hl=2 l=   7 prim: OBJECT            :id-ecPublicKey <newline>+//    13:d=2  hl=2 l=   8 prim: OBJECT            :prime256v1 <newline>+//    23:d=1  hl=2 l=  66 prim: BIT STRING <newline>+static const uint8 kP256SubjectPublicKeyInfoPrefix[] = { <newline>+  0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, <newline>+  0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, <newline>+  0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, <newline>+  0x42, 0x00, <newline>+}; <newline>+ <newline>+// VerifySignature returns true iff |sig| is a valid signature of <newline>+// |hash| by |pubkey|. The actual implementation is crypto library <newline>+// specific. <newline>+static bool VerifySignature(const base::StringPiece& pubkey, <newline>+                            const base::StringPiece& sig, <newline>+                            const base::StringPiece& hash); <newline>+ <newline>+#if defined(USE_OPENSSL) <newline>+ <newline>+static EVP_PKEY* DecodeX962P256PublicKey( <newline>+    const base::StringPiece& pubkey_bytes) { <newline>+  // The public key is an X9.62 encoded P256 point. <newline>+  if (pubkey_bytes.size() != 1 + 2*32) <newline>+    return NULL; <newline>+ <newline>+  std::string pubkey_spki( <newline>+      reinterpret_cast<const char*>(kP256SubjectPublicKeyInfoPrefix), <newline>+      sizeof(kP256SubjectPublicKeyInfoPrefix)); <newline>+  pubkey_spki += pubkey_bytes.as_string(); <newline>+ <newline>+  EVP_PKEY* ret = NULL; <newline>+  const unsigned char* der_pubkey = <newline>+      reinterpret_cast<const unsigned char*>(pubkey_spki.data()); <newline>+  d2i_PUBKEY(&ret, &der_pubkey, pubkey_spki.size()); <newline>+  return ret; <newline>+} <newline>+ <newline>+static bool VerifySignature(const base::StringPiece& pubkey, <newline>+                            const base::StringPiece& sig, <newline>+                            const base::StringPiece& hash) { <newline>+  crypto::ScopedOpenSSL<EVP_PKEY, EVP_PKEY_free> secpubkey( <newline>+      DecodeX962P256PublicKey(pubkey)); <newline>+  if (!secpubkey.get()) <newline>+    return false; <newline>+ <newline>+ <newline>+  crypto::ScopedOpenSSL<EC_KEY, EC_KEY_free> ec_key( <newline>+      EVP_PKEY_get1_EC_KEY(secpubkey.get())); <newline>+  if (!ec_key.get()) <newline>+    return false; <newline>+ <newline>+  return ECDSA_verify(0, reinterpret_cast<const unsigned char*>(hash.data()), <newline>+                      hash.size(), <newline>+                      reinterpret_cast<const unsigned char*>(sig.data()), <newline>+                      sig.size(), ec_key.get()) == 1; <newline>+} <newline>+ <newline>+#else <newline>+ <newline>+// DecodeX962P256PublicKey parses an uncompressed, X9.62 format, P256 elliptic <newline>+// curve point from |pubkey_bytes| and returns it as a SECKEYPublicKey. <newline>+static SECKEYPublicKey* DecodeX962P256PublicKey( <newline>+    const base::StringPiece& pubkey_bytes) { <newline>+  // The public key is an X9.62 encoded P256 point. <newline>+  if (pubkey_bytes.size() != 1 + 2*32) <newline>+    return NULL; <newline>+ <newline>+  std::string pubkey_spki( <newline>+      reinterpret_cast<const char*>(kP256SubjectPublicKeyInfoPrefix), <newline>+      sizeof(kP256SubjectPublicKeyInfoPrefix)); <newline>+  pubkey_spki += pubkey_bytes.as_string(); <newline>+ <newline>+  SECItem der; <newline>+  memset(&der, 0, sizeof(der)); <newline>+  der.data = reinterpret_cast<uint8*>(const_cast<char*>(pubkey_spki.data())); <newline>+  der.len = pubkey_spki.size(); <newline>+ <newline>+  CERTSubjectPublicKeyInfo* spki = SECKEY_DecodeDERSubjectPublicKeyInfo(&der); <newline>+  if (!spki) <newline>+    return NULL; <newline>+  SECKEYPublicKey* public_key = SECKEY_ExtractPublicKey(spki); <newline>+  SECKEY_DestroySubjectPublicKeyInfo(spki); <newline>+ <newline>+  return public_key; <newline>+} <newline>+ <newline>+static bool VerifySignature(const base::StringPiece& pubkey, <newline>+                            const base::StringPiece& sig, <newline>+                            const base::StringPiece& hash) { <newline>+  SECKEYPublicKey* secpubkey = DecodeX962P256PublicKey(pubkey); <newline>+  if (!secpubkey) <newline>+    return false; <newline>+ <newline>+  SECItem sigitem; <newline>+  memset(&sigitem, 0, sizeof(sigitem)); <newline>+  sigitem.data = reinterpret_cast<uint8*>(const_cast<char*>(sig.data())); <newline>+  sigitem.len = sig.size(); <newline>+ <newline>+  // |decoded_sigitem| is newly allocated, as is the data that it points to. <newline>+  SECItem* decoded_sigitem = DSAU_DecodeDerSigToLen( <newline>+      &sigitem, SECKEY_SignatureLen(secpubkey)); <newline>+ <newline>+  if (!decoded_sigitem) { <newline>+    SECKEY_DestroyPublicKey(secpubkey); <newline>+    return false; <newline>+  } <newline>+ <newline>+  SECItem hashitem; <newline>+  memset(&hashitem, 0, sizeof(hashitem)); <newline>+  hashitem.data = reinterpret_cast<unsigned char*>( <newline>+      const_cast<char*>(hash.data())); <newline>+  hashitem.len = hash.size(); <newline>+ <newline>+  SECStatus rv = PK11_Verify(secpubkey, decoded_sigitem, &hashitem, NULL); <newline>+  SECKEY_DestroyPublicKey(secpubkey); <newline>+  SECITEM_FreeItem(decoded_sigitem, PR_TRUE); <newline>+  return rv == SECSuccess; <newline>+} <newline>+ <newline>+#endif  // !defined(USE_OPENSSL) <newline>+ <newline>+// These are the tag values that we use. Tags are little-endian on the wire and <newline>+// these values correspond to the ASCII of the name. <newline>+static const uint32 kTagALGO = 0x4f474c41; <newline>+static const uint32 kTagP256 = 0x36353250; <newline>+static const uint32 kTagPUBK = 0x4b425550; <newline>+static const uint32 kTagSIG = 0x474953; <newline>+static const uint32 kTagSPIN = 0x4e495053; <newline>+ <newline>+// static <newline>+bool TransportSecurityState::ParseSidePin( <newline>+    const base::StringPiece& leaf_spki, <newline>+    const base::StringPiece& in_side_info, <newline>+    FingerprintVector* out_pub_key_hash) { <newline>+  base::StringPiece side_info(in_side_info); <newline>+ <newline>+  TagMap outer; <newline>+  if (!ParseTags(&side_info, &outer)) <newline>+    return false; <newline>+  // trailing data is not allowed <newline>+  if (side_info.size()) <newline>+    return false; <newline>+ <newline>+  base::StringPiece side_pin_bytes; <newline>+  if (!GetTag(kTagSPIN, outer, &side_pin_bytes)) <newline>+    return false; <newline>+ <newline>+  bool have_parsed_a_key = false; <newline>+  uint8 leaf_spki_hash[crypto::kSHA256Length]; <newline>+  bool have_leaf_spki_hash = false; <newline>+ <newline>+  while (side_pin_bytes.size() > 0) { <newline>+    TagMap side_pin; <newline>+    if (!ParseTags(&side_pin_bytes, &side_pin)) <newline>+      return false; <newline>+ <newline>+    base::StringPiece algo, pubkey, sig; <newline>+    if (!GetTag(kTagALGO, side_pin, &algo) || <newline>+        !GetTag(kTagPUBK, side_pin, &pubkey) || <newline>+        !GetTag(kTagSIG, side_pin, &sig)) { <newline>+      return false; <newline>+    } <newline>+ <newline>+    if (algo.size() != sizeof(kTagP256) || <newline>+        0 != memcmp(algo.data(), &kTagP256, sizeof(kTagP256))) { <newline>+      // We don't support anything but P256 at the moment. <newline>+      continue; <newline>+    } <newline>+ <newline>+    if (!have_leaf_spki_hash) { <newline>+      crypto::SHA256HashString( <newline>+          leaf_spki.as_string(), leaf_spki_hash, sizeof(leaf_spki_hash)); <newline>+      have_leaf_spki_hash = true; <newline>+    } <newline>+ <newline>+    if (VerifySignature(pubkey, sig, base::StringPiece( <newline>+        reinterpret_cast<const char*>(leaf_spki_hash), <newline>+        sizeof(leaf_spki_hash)))) { <newline>+      SHA1Fingerprint fpr; <newline>+      base::SHA1HashBytes( <newline>+          reinterpret_cast<const uint8*>(pubkey.data()), <newline>+          pubkey.size(), <newline>+          fpr.data); <newline>+      out_pub_key_hash->push_back(fpr); <newline>+      have_parsed_a_key = true; <newline>+    } <newline>+  } <newline>+ <newline>+  return have_parsed_a_key; <newline>+} <newline>+ <newline>+// This function converts the binary hashes, which we store in <newline>+// |enabled_hosts_|, to a base64 string which we can include in a JSON file. <newline>+static std::string HashedDomainToExternalString(const std::string& hashed) { <newline>+  std::string out; <newline>+  CHECK(base::Base64Encode(hashed, &out)); <newline>+  return out; <newline>+} <newline>+ <newline>+// This inverts |HashedDomainToExternalString|, above. It turns an external <newline>+// string (from a JSON file) into an internal (binary) string. <newline>+static std::string ExternalStringToHashedDomain(const std::string& external) { <newline>+  std::string out; <newline>+  if (!base::Base64Decode(external, &out) || <newline>+      out.size() != crypto::kSHA256Length) { <newline>+    return std::string(); <newline>+  } <newline>+ <newline>+  return out; <newline>+} <newline>+ <newline>+static ListValue* SPKIHashesToListValue(const FingerprintVector& hashes) { <newline>+  ListValue* pins = new ListValue; <newline>+ <newline>+  for (FingerprintVector::const_iterator i = hashes.begin(); <newline>+       i != hashes.end(); ++i) { <newline>+    std::string hash_str(reinterpret_cast<const char*>(i->data), <newline>+                         sizeof(i->data)); <newline>+    std::string b64; <newline>+    base::Base64Encode(hash_str, &b64); <newline>+    pins->Append(new StringValue("sha1/" + b64)); <newline>+  } <newline>+ <newline>+  return pins; <newline>+} <newline>+ <newline>+bool TransportSecurityState::Serialise(std::string* output) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  DictionaryValue toplevel; <newline>+  base::Time now = base::Time::Now(); <newline>+  for (std::map<std::string, DomainState>::const_iterator <newline>+       i = enabled_hosts_.begin(); i != enabled_hosts_.end(); ++i) { <newline>+    DictionaryValue* state = new DictionaryValue; <newline>+    state->SetBoolean("include_subdomains", i->second.include_subdomains); <newline>+    state->SetDouble("created", i->second.created.ToDoubleT()); <newline>+    state->SetDouble("expiry", i->second.expiry.ToDoubleT()); <newline>+    state->SetDouble("dynamic_spki_hashes_expiry", <newline>+                     i->second.dynamic_spki_hashes_expiry.ToDoubleT()); <newline>+ <newline>+    switch (i->second.mode) { <newline>+      case DomainState::MODE_STRICT: <newline>+        state->SetString("mode", "strict"); <newline>+        break; <newline>+      case DomainState::MODE_SPDY_ONLY: <newline>+        state->SetString("mode", "spdy-only"); <newline>+        break; <newline>+      case DomainState::MODE_PINNING_ONLY: <newline>+        state->SetString("mode", "pinning-only"); <newline>+        break; <newline>+      default: <newline>+        NOTREACHED() << "DomainState with unknown mode"; <newline>+        delete state; <newline>+        continue; <newline>+    } <newline>+ <newline>+    state->Set("preloaded_spki_hashes", <newline>+               SPKIHashesToListValue(i->second.preloaded_spki_hashes)); <newline>+ <newline>+    if (now < i->second.dynamic_spki_hashes_expiry) { <newline>+      state->Set("dynamic_spki_hashes", <newline>+                 SPKIHashesToListValue(i->second.dynamic_spki_hashes)); <newline>+    } <newline>+ <newline>+    toplevel.Set(HashedDomainToExternalString(i->first), state); <newline>+  } <newline>+ <newline>+  base::JSONWriter::WriteWithOptions(&toplevel, <newline>+                                     base::JSONWriter::OPTIONS_PRETTY_PRINT, <newline>+                                     output); <newline>+  return true; <newline>+} <newline>+ <newline>+bool TransportSecurityState::LoadEntries(const std::string& input, <newline>+                                         bool* dirty) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  enabled_hosts_.clear(); <newline>+  return Deserialise(input, dirty, &enabled_hosts_); <newline>+} <newline>+ <newline>+static bool AddHash(const std::string& type_and_base64, <newline>+                    FingerprintVector* out) { <newline>+  SHA1Fingerprint hash; <newline>+ <newline>+  if (!TransportSecurityState::ParsePin(type_and_base64, &hash)) <newline>+    return false; <newline>+ <newline>+  out->push_back(hash); <newline>+  return true; <newline>+} <newline>+ <newline>+static void SPKIHashesFromListValue(FingerprintVector* hashes, <newline>+                                    const ListValue& pins) { <newline>+  size_t num_pins = pins.GetSize(); <newline>+  for (size_t i = 0; i < num_pins; ++i) { <newline>+    std::string type_and_base64; <newline>+    if (pins.GetString(i, &type_and_base64)) <newline>+      AddHash(type_and_base64, hashes); <newline>+  } <newline>+} <newline>+ <newline>+// static <newline>+bool TransportSecurityState::Deserialise( <newline>+    const std::string& input, <newline>+    bool* dirty, <newline>+    std::map<std::string, DomainState>* out) { <newline>+  scoped_ptr<Value> value( <newline>+      base::JSONReader::Read(input, false /* do not allow trailing commas */)); <newline>+  if (!value.get() || !value->IsType(Value::TYPE_DICTIONARY)) <newline>+    return false; <newline>+ <newline>+  DictionaryValue* dict_value = reinterpret_cast<DictionaryValue*>(value.get()); <newline>+  const base::Time current_time(base::Time::Now()); <newline>+  bool dirtied = false; <newline>+ <newline>+  for (DictionaryValue::key_iterator i = dict_value->begin_keys(); <newline>+       i != dict_value->end_keys(); ++i) { <newline>+    DictionaryValue* state; <newline>+    if (!dict_value->GetDictionaryWithoutPathExpansion(*i, &state)) <newline>+      continue; <newline>+ <newline>+    bool include_subdomains; <newline>+    std::string mode_string; <newline>+    double created; <newline>+    double expiry; <newline>+    double dynamic_spki_hashes_expiry = 0.0; <newline>+ <newline>+    if (!state->GetBoolean("include_subdomains", &include_subdomains) || <newline>+        !state->GetString("mode", &mode_string) || <newline>+        !state->GetDouble("expiry", &expiry)) { <newline>+      continue; <newline>+    } <newline>+ <newline>+    // Don't fail if this key is not present. <newline>+    (void) state->GetDouble("dynamic_spki_hashes_expiry", <newline>+                            &dynamic_spki_hashes_expiry); <newline>+ <newline>+    ListValue* pins_list = NULL; <newline>+    FingerprintVector preloaded_spki_hashes; <newline>+    if (state->GetList("preloaded_spki_hashes", &pins_list)) <newline>+      SPKIHashesFromListValue(&preloaded_spki_hashes, *pins_list); <newline>+ <newline>+    FingerprintVector dynamic_spki_hashes; <newline>+    if (state->GetList("dynamic_spki_hashes", &pins_list)) <newline>+      SPKIHashesFromListValue(&dynamic_spki_hashes, *pins_list); <newline>+ <newline>+    DomainState::Mode mode; <newline>+    if (mode_string == "strict") { <newline>+      mode = DomainState::MODE_STRICT; <newline>+    } else if (mode_string == "spdy-only") { <newline>+      mode = DomainState::MODE_SPDY_ONLY; <newline>+    } else if (mode_string == "pinning-only") { <newline>+      mode = DomainState::MODE_PINNING_ONLY; <newline>+    } else { <newline>+      LOG(WARNING) << "Unknown TransportSecurityState mode string found: " <newline>+                   << mode_string; <newline>+      continue; <newline>+    } <newline>+ <newline>+    base::Time expiry_time = base::Time::FromDoubleT(expiry); <newline>+    base::Time dynamic_spki_hashes_expiry_time = <newline>+        base::Time::FromDoubleT(dynamic_spki_hashes_expiry); <newline>+    base::Time created_time; <newline>+    if (state->GetDouble("created", &created)) { <newline>+      created_time = base::Time::FromDoubleT(created); <newline>+    } else { <newline>+      // We're migrating an old entry with no creation date. Make sure we <newline>+      // write the new date back in a reasonable time frame. <newline>+      dirtied = true; <newline>+      created_time = base::Time::Now(); <newline>+    } <newline>+ <newline>+    if (expiry_time <= current_time && <newline>+        dynamic_spki_hashes_expiry_time <= current_time) { <newline>+      // Make sure we dirty the state if we drop an entry. <newline>+      dirtied = true; <newline>+      continue; <newline>+    } <newline>+ <newline>+    std::string hashed = ExternalStringToHashedDomain(*i); <newline>+    if (hashed.empty()) { <newline>+      dirtied = true; <newline>+      continue; <newline>+    } <newline>+ <newline>+    DomainState new_state; <newline>+    new_state.mode = mode; <newline>+    new_state.created = created_time; <newline>+    new_state.expiry = expiry_time; <newline>+    new_state.include_subdomains = include_subdomains; <newline>+    new_state.preloaded_spki_hashes = preloaded_spki_hashes; <newline>+    new_state.dynamic_spki_hashes = dynamic_spki_hashes; <newline>+    new_state.dynamic_spki_hashes_expiry = dynamic_spki_hashes_expiry_time; <newline>+    (*out)[hashed] = new_state; <newline>+  } <newline>+ <newline>+  *dirty = dirtied; <newline>+  return true; <newline>+} <newline>+ <newline>+TransportSecurityState::~TransportSecurityState() { <newline>+} <newline>+ <newline>+void TransportSecurityState::DirtyNotify() { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  if (delegate_) <newline>+    delegate_->StateIsDirty(this); <newline>+} <newline>+ <newline>+// static <newline>+std::string TransportSecurityState::CanonicalizeHost(const std::string& host) { <newline>+  // We cannot perform the operations as detailed in the spec here as |host| <newline>+  // has already undergone IDN processing before it reached us. Thus, we check <newline>+  // that there are no invalid characters in the host and lowercase the result. <newline>+ <newline>+  std::string new_host; <newline>+  if (!DNSDomainFromDot(host, &new_host)) { <newline>+    // DNSDomainFromDot can fail if any label is > 63 bytes or if the whole <newline>+    // name is >255 bytes. However, search terms can have those properties. <newline>+    return std::string(); <newline>+  } <newline>+ <newline>+  for (size_t i = 0; new_host[i]; i += new_host[i] + 1) { <newline>+    const unsigned label_length = static_cast<unsigned>(new_host[i]); <newline>+    if (!label_length) <newline>+      break; <newline>+ <newline>+    for (size_t j = 0; j < label_length; ++j) { <newline>+      // RFC 3490, 4.1, step 3 <newline>+      if (!IsSTD3ASCIIValidCharacter(new_host[i + 1 + j])) <newline>+        return std::string(); <newline>+ <newline>+      new_host[i + 1 + j] = tolower(new_host[i + 1 + j]); <newline>+    } <newline>+ <newline>+    // step 3(b) <newline>+    if (new_host[i + 1] == '-' || <newline>+        new_host[i + label_length] == '-') { <newline>+      return std::string(); <newline>+    } <newline>+  } <newline>+ <newline>+  return new_host; <newline>+} <newline>+ <newline>+// |ReportUMAOnPinFailure| uses these to report which domain was associated <newline>+// with the public key pinning failure. <newline>+// <newline>+// DO NOT CHANGE THE ORDERING OF THESE NAMES OR REMOVE ANY OF THEM. Add new <newline>+// domains at the END of the listing (but before DOMAIN_NUM_EVENTS). <newline>+enum SecondLevelDomainName { <newline>+  DOMAIN_NOT_PINNED, <newline>+ <newline>+  DOMAIN_GOOGLE_COM, <newline>+  DOMAIN_ANDROID_COM, <newline>+  DOMAIN_GOOGLE_ANALYTICS_COM, <newline>+  DOMAIN_GOOGLEPLEX_COM, <newline>+  DOMAIN_YTIMG_COM, <newline>+  DOMAIN_GOOGLEUSERCONTENT_COM, <newline>+  DOMAIN_YOUTUBE_COM, <newline>+  DOMAIN_GOOGLEAPIS_COM, <newline>+  DOMAIN_GOOGLEADSERVICES_COM, <newline>+  DOMAIN_GOOGLECODE_COM, <newline>+  DOMAIN_APPSPOT_COM, <newline>+  DOMAIN_GOOGLESYNDICATION_COM, <newline>+  DOMAIN_DOUBLECLICK_NET, <newline>+  DOMAIN_GSTATIC_COM, <newline>+  DOMAIN_GMAIL_COM, <newline>+  DOMAIN_GOOGLEMAIL_COM, <newline>+  DOMAIN_GOOGLEGROUPS_COM, <newline>+ <newline>+  DOMAIN_TORPROJECT_ORG, <newline>+ <newline>+  DOMAIN_TWITTER_COM, <newline>+  DOMAIN_TWIMG_COM, <newline>+ <newline>+  DOMAIN_AKAMAIHD_NET, <newline>+ <newline>+  // Boundary value for UMA_HISTOGRAM_ENUMERATION: <newline>+  DOMAIN_NUM_EVENTS <newline>+}; <newline>+ <newline>+// PublicKeyPins contains a number of SubjectPublicKeyInfo hashes for a site. <newline>+// The validated certificate chain for the site must not include any of <newline>+// |excluded_hashes| and must include one or more of |required_hashes|. <newline>+struct PublicKeyPins { <newline>+  const char* const* required_hashes; <newline>+  const char* const* excluded_hashes; <newline>+}; <newline>+ <newline>+struct HSTSPreload { <newline>+  uint8 length; <newline>+  bool include_subdomains; <newline>+  char dns_name[30]; <newline>+  bool https_required; <newline>+  PublicKeyPins pins; <newline>+  SecondLevelDomainName second_level_domain_name; <newline>+}; <newline>+ <newline>+static bool HasPreload(const struct HSTSPreload* entries, size_t num_entries, <newline>+                       const std::string& canonicalized_host, size_t i, <newline>+                       TransportSecurityState::DomainState* out, bool* ret) { <newline>+  for (size_t j = 0; j < num_entries; j++) { <newline>+    if (entries[j].length == canonicalized_host.size() - i && <newline>+        memcmp(entries[j].dns_name, &canonicalized_host[i], <newline>+               entries[j].length) == 0) { <newline>+      if (!entries[j].include_subdomains && i != 0) { <newline>+        *ret = false; <newline>+      } else { <newline>+        out->include_subdomains = entries[j].include_subdomains; <newline>+        *ret = true; <newline>+        if (!entries[j].https_required) <newline>+          out->mode = TransportSecurityState::DomainState::MODE_PINNING_ONLY; <newline>+        if (entries[j].pins.required_hashes) { <newline>+          const char* const* hash = entries[j].pins.required_hashes; <newline>+          while (*hash) { <newline>+            bool ok = AddHash(*hash, &out->preloaded_spki_hashes); <newline>+            DCHECK(ok) << " failed to parse " << *hash; <newline>+            hash++; <newline>+          } <newline>+        } <newline>+        if (entries[j].pins.excluded_hashes) { <newline>+          const char* const* hash = entries[j].pins.excluded_hashes; <newline>+          while (*hash) { <newline>+            bool ok = AddHash(*hash, &out->bad_preloaded_spki_hashes); <newline>+            DCHECK(ok) << " failed to parse " << *hash; <newline>+            hash++; <newline>+          } <newline>+        } <newline>+      } <newline>+      return true; <newline>+    } <newline>+  } <newline>+  return false; <newline>+} <newline>+ <newline>+// kNoRejectedPublicKeys is a placeholder for when no public keys are rejected. <newline>+static const char* const kNoRejectedPublicKeys[] = { <newline>+  NULL, <newline>+}; <newline>+ <newline>+static const char* const kGoogleAcceptableCerts[] = { <newline>+  kSPKIHash_VeriSignClass3, <newline>+  kSPKIHash_VeriSignClass3_G3, <newline>+  kSPKIHash_Google1024, <newline>+  kSPKIHash_Google2048, <newline>+  kSPKIHash_EquifaxSecureCA, <newline>+  NULL, <newline>+}; <newline>+static const char* const kGoogleRejectedCerts[] = { <newline>+  kSPKIHash_Aetna, <newline>+  kSPKIHash_Intel, <newline>+  kSPKIHash_TCTrustCenter, <newline>+  kSPKIHash_Vodafone, <newline>+  NULL, <newline>+}; <newline>+#define kGooglePins { \ <newline>+  kGoogleAcceptableCerts, \ <newline>+  kGoogleRejectedCerts, \ <newline>+} <newline>+ <newline>+static const char* const kTorAcceptableCerts[] = { <newline>+  kSPKIHash_RapidSSL, <newline>+  kSPKIHash_DigiCertEVRoot, <newline>+  kSPKIHash_Tor1, <newline>+  kSPKIHash_Tor2, <newline>+  kSPKIHash_Tor3, <newline>+  NULL, <newline>+}; <newline>+#define kTorPins { \ <newline>+  kTorAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+static const char* const kTwitterComAcceptableCerts[] = { <newline>+  kSPKIHash_VeriSignClass1, <newline>+  kSPKIHash_VeriSignClass3, <newline>+  kSPKIHash_VeriSignClass3_G4, <newline>+  kSPKIHash_VeriSignClass4_G3, <newline>+  kSPKIHash_VeriSignClass3_G3, <newline>+  kSPKIHash_VeriSignClass1_G3, <newline>+  kSPKIHash_VeriSignClass2_G3, <newline>+  kSPKIHash_VeriSignClass3_G2, <newline>+  kSPKIHash_VeriSignClass2_G2, <newline>+  kSPKIHash_VeriSignClass3_G5, <newline>+  kSPKIHash_VeriSignUniversal, <newline>+  kSPKIHash_GeoTrustGlobal, <newline>+  kSPKIHash_GeoTrustGlobal2, <newline>+  kSPKIHash_GeoTrustUniversal, <newline>+  kSPKIHash_GeoTrustUniversal2, <newline>+  kSPKIHash_GeoTrustPrimary, <newline>+  kSPKIHash_GeoTrustPrimary_G2, <newline>+  kSPKIHash_GeoTrustPrimary_G3, <newline>+  kSPKIHash_Twitter1, <newline>+  NULL, <newline>+}; <newline>+#define kTwitterComPins { \ <newline>+  kTwitterComAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+// kTwitterCDNAcceptableCerts are the set of public keys valid for Twitter's <newline>+// CDNs, which includes all the keys from kTwitterComAcceptableCerts. <newline>+static const char* const kTwitterCDNAcceptableCerts[] = { <newline>+  kSPKIHash_VeriSignClass1, <newline>+  kSPKIHash_VeriSignClass3, <newline>+  kSPKIHash_VeriSignClass3_G4, <newline>+  kSPKIHash_VeriSignClass4_G3, <newline>+  kSPKIHash_VeriSignClass3_G3, <newline>+  kSPKIHash_VeriSignClass1_G3, <newline>+  kSPKIHash_VeriSignClass2_G3, <newline>+  kSPKIHash_VeriSignClass3_G2, <newline>+  kSPKIHash_VeriSignClass2_G2, <newline>+  kSPKIHash_VeriSignClass3_G5, <newline>+  kSPKIHash_VeriSignUniversal, <newline>+  kSPKIHash_GeoTrustGlobal, <newline>+  kSPKIHash_GeoTrustGlobal2, <newline>+  kSPKIHash_GeoTrustUniversal, <newline>+  kSPKIHash_GeoTrustUniversal2, <newline>+  kSPKIHash_GeoTrustPrimary, <newline>+  kSPKIHash_GeoTrustPrimary_G2, <newline>+  kSPKIHash_GeoTrustPrimary_G3, <newline>+  kSPKIHash_Twitter1, <newline>+ <newline>+  kSPKIHash_Entrust_2048, <newline>+  kSPKIHash_Entrust_EV, <newline>+  kSPKIHash_Entrust_G2, <newline>+  kSPKIHash_Entrust_SSL, <newline>+  kSPKIHash_AAACertificateServices, <newline>+  kSPKIHash_AddTrustClass1CARoot, <newline>+  kSPKIHash_AddTrustExternalCARoot, <newline>+  kSPKIHash_AddTrustPublicCARoot, <newline>+  kSPKIHash_AddTrustQualifiedCARoot, <newline>+  kSPKIHash_COMODOCertificationAuthority, <newline>+  kSPKIHash_SecureCertificateServices, <newline>+  kSPKIHash_TrustedCertificateServices, <newline>+  kSPKIHash_UTNDATACorpSGC, <newline>+  kSPKIHash_UTNUSERFirstClientAuthenticationandEmail, <newline>+  kSPKIHash_UTNUSERFirstHardware, <newline>+  kSPKIHash_UTNUSERFirstObject, <newline>+  kSPKIHash_GTECyberTrustGlobalRoot, <newline>+  NULL, <newline>+}; <newline>+#define kTwitterCDNPins { \ <newline>+  kTwitterCDNAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+// kTestAcceptableCerts doesn't actually match any public keys and is used <newline>+// with "pinningtest.appspot.com", below, to test if pinning is active. <newline>+static const char* const kTestAcceptableCerts[] = { <newline>+  "sha1/AAAAAAAAAAAAAAAAAAAAAAAAAAA=", <newline>+  NULL, <newline>+}; <newline>+#define kTestPins { \ <newline>+  kTestAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+#define kNoPins { \ <newline>+  NULL, NULL, \ <newline>+} <newline>+ <newline>+#if defined(OS_CHROMEOS) <newline>+  static const bool kTwitterHSTS = true; <newline>+#else <newline>+  static const bool kTwitterHSTS = false; <newline>+#endif <newline>+ <newline>+// In the medium term this list is likely to just be hardcoded here. This <newline>+// slightly odd form removes the need for additional relocations records. <newline>+static const struct HSTSPreload kPreloadedSTS[] = { <newline>+  // (*.)google.com, iff using SSL must use an acceptable certificate. <newline>+  {12, true, "\006google\003com", false, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {25, true, "\013pinningtest\007appspot\003com", false, kTestPins, DOMAIN_APPSPOT_COM }, <newline>+  // Now we force HTTPS for subtrees of google.com. <newline>+  {19, true, "\006health\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM  }, <newline>+  {21, true, "\010checkout\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {19, true, "\006chrome\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004docs\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {18, true, "\005sites\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {25, true, "\014spreadsheets\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {22, false, "\011appengine\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {22, true, "\011encrypted\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {21, true, "\010accounts\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {21, true, "\010profiles\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004mail\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {23, true, "\012talkgadget\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004talk\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {29, true, "\020hostedtalkgadget\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004plus\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  // Other Google-related domains that must use HTTPS. <newline>+  {20, true, "\006market\007android\003com", true, kGooglePins, DOMAIN_ANDROID_COM }, <newline>+  {26, true, "\003ssl\020google-analytics\003com", true, kGooglePins, DOMAIN_GOOGLE_ANALYTICS_COM }, <newline>+  {18, true, "\005drive\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {16, true, "\012googleplex\003com", true, kGooglePins, DOMAIN_GOOGLEPLEX_COM }, <newline>+  {19, true, "\006groups\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004apis\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  // chart.apis.google.com is *not* HSTS because the certificate doesn't match <newline>+  // and there are lots of links out there that still use the name. The correct <newline>+  // hostname for this is chart.googleapis.com. <newline>+  {23, true, "\005chart\004apis\006google\003com", false, kGooglePins, DOMAIN_GOOGLE_COM}, <newline>+ <newline>+  // Other Google-related domains that must use an acceptable certificate <newline>+  // iff using SSL. <newline>+  {11, true, "\005ytimg\003com", false, kGooglePins, DOMAIN_YTIMG_COM }, <newline>+  {23, true, "\021googleusercontent\003com", false, kGooglePins, DOMAIN_GOOGLEUSERCONTENT_COM }, <newline>+  {13, true, "\007youtube\003com", false, kGooglePins, DOMAIN_YOUTUBE_COM }, <newline>+  {16, true, "\012googleapis\003com", false, kGooglePins, DOMAIN_GOOGLEAPIS_COM }, <newline>+  {22, true, "\020googleadservices\003com", false, kGooglePins, DOMAIN_GOOGLEADSERVICES_COM }, <newline>+  {16, true, "\012googlecode\003com", false, kGooglePins, DOMAIN_GOOGLECODE_COM }, <newline>+  {13, true, "\007appspot\003com", false, kGooglePins, DOMAIN_APPSPOT_COM }, <newline>+  {23, true, "\021googlesyndication\003com", false, kGooglePins, DOMAIN_GOOGLESYNDICATION_COM }, <newline>+  {17, true, "\013doubleclick\003net", false, kGooglePins, DOMAIN_DOUBLECLICK_NET }, <newline>+  {17, true, "\003ssl\007gstatic\003com", false, kGooglePins, DOMAIN_GSTATIC_COM }, <newline>+  // Exclude the learn.doubleclick.net subdomain because it uses a different <newline>+  // CA. <newline>+  {23, true, "\005learn\013doubleclick\003net", false, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  // Now we force HTTPS for other sites that have requested it. <newline>+  {16, false, "\003www\006paypal\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false, "\003www\006elanex\003biz", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true,  "\006jottit\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {19, true,  "\015sunshinepress\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {21, false, "\003www\013noisebridge\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {10, false, "\004neg9\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006riseup\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, false, "\006factor\002cc", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {22, false, "\007members\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {22, false, "\007support\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\002id\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, false, "\005lists\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {19, true, "\015splendidbacon\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {28, false, "\016aladdinschools\007appspot\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, true, "\011ottospora\002nl", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {25, false, "\003www\017paycheckrecords\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, false, "\010lastpass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {18, false, "\003www\010lastpass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, true, "\010keyerror\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\010entropia\002de", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\003www\010entropia\002de", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, true, "\005romab\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false, "\012logentries\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, false, "\003www\012logentries\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006stripe\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {27, true, "\025cloudsecurityalliance\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {15, true, "\005login\004sapo\002pt", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {19, true, "\015mattmccutchen\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, true, "\006betnet\002fr", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, true, "\010uprotect\002it", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, false, "\010squareup\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {9, true, "\004cert\002se", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, true, "\006crypto\002is", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, true, "\005simon\007butcher\004name", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {10, true, "\004linx\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\007dropcam\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\003www\007dropcam\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {30, true, "\010ebanking\014indovinabank\003com\002vn", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\007epoxate\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false, "\012torproject\003org", true, kTorPins, DOMAIN_TORPROJECT_ORG }, <newline>+  {21, true, "\004blog\012torproject\003org", true, kTorPins, DOMAIN_TORPROJECT_ORG }, <newline>+  {22, true, "\005check\012torproject\003org", true, kTorPins, DOMAIN_TORPROJECT_ORG }, <newline>+  {20, true, "\003www\012torproject\003org", true, kTorPins, DOMAIN_TORPROJECT_ORG }, <newline>+  {22, true, "\003www\014moneybookers\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\013ledgerscope\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {21, false, "\003www\013ledgerscope\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {10, false, "\004kyps\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, false, "\003www\004kyps\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, true, "\003app\007recurly\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, true, "\003api\007recurly\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\007greplin\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\003www\007greplin\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {27, true, "\006luneta\016nearbuysystems\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006ubertt\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {9, true, "\004pixi\002me", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, true, "\010grepular\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false , "\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, false , "\003www\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {26, false , "\011developer\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {30, false , "\003www\011developer\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {24, false , "\007sandbox\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {28, false , "\003www\007sandbox\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006crypto\003cat", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {25, true, "\014bigshinylock\006minazo\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {10, true, "\005crate\002io", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+ <newline>+  {13, false, "\007twitter\003com", kTwitterHSTS, kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {17, true, "\003www\007twitter\003com", kTwitterHSTS, kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {17, true, "\003api\007twitter\003com", kTwitterHSTS, kTwitterCDNPins, DOMAIN_TWITTER_COM }, <newline>+  {19, true, "\005oauth\007twitter\003com", kTwitterHSTS, kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {20, true, "\006mobile\007twitter\003com", kTwitterHSTS, kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {17, true, "\003dev\007twitter\003com", kTwitterHSTS, kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {22, true, "\010business\007twitter\003com", kTwitterHSTS, kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {22, true, "\010platform\007twitter\003com", false, kTwitterCDNPins, DOMAIN_TWITTER_COM }, <newline>+  {15, true, "\003si0\005twimg\003com", false, kTwitterCDNPins, DOMAIN_TWIMG_COM }, <newline>+  {23, true, "\010twimg0-a\010akamaihd\003net", false, kTwitterCDNPins, DOMAIN_AKAMAIHD_NET }, <newline>+}; <newline>+static const size_t kNumPreloadedSTS = ARRAYSIZE_UNSAFE(kPreloadedSTS); <newline>+ <newline>+static const struct HSTSPreload kPreloadedSNISTS[] = { <newline>+  // These SNI-only domains must always use HTTPS. <newline>+  {11, false, "\005gmail\003com", true, kGooglePins, DOMAIN_GMAIL_COM }, <newline>+  {16, false, "\012googlemail\003com", true, kGooglePins, DOMAIN_GOOGLEMAIL_COM }, <newline>+  {15, false, "\003www\005gmail\003com", true, kGooglePins, DOMAIN_GMAIL_COM }, <newline>+  {20, false, "\003www\012googlemail\003com", true, kGooglePins, DOMAIN_GOOGLEMAIL_COM }, <newline>+  // These SNI-only domains must use an acceptable certificate iff using <newline>+  // HTTPS. <newline>+  {22, true, "\020google-analytics\003com", false, kGooglePins, DOMAIN_GOOGLE_ANALYTICS_COM }, <newline>+  // www. requires SNI. <newline>+  {18, true, "\014googlegroups\003com", false, kGooglePins, DOMAIN_GOOGLEGROUPS_COM }, <newline>+}; <newline>+static const size_t kNumPreloadedSNISTS = ARRAYSIZE_UNSAFE(kPreloadedSNISTS); <newline>+ <newline>+// Returns the HSTSPreload entry for the |canonicalized_host| in |entries|, <newline>+// or NULL if there is none. Prefers exact hostname matches to those that <newline>+// match only because HSTSPreload.include_subdomains is true. <newline>+// <newline>+// |canonicalized_host| should be the hostname as canonicalized by <newline>+// CanonicalizeHost. <newline>+static const struct HSTSPreload* GetHSTSPreload( <newline>+    const std::string& canonicalized_host, <newline>+    const struct HSTSPreload* entries, <newline>+    size_t num_entries) { <newline>+  for (size_t i = 0; canonicalized_host[i]; i += canonicalized_host[i] + 1) { <newline>+    for (size_t j = 0; j < num_entries; j++) { <newline>+      const struct HSTSPreload* entry = entries + j; <newline>+ <newline>+      if (i != 0 && !entry->include_subdomains) <newline>+        continue; <newline>+ <newline>+      if (entry->length == canonicalized_host.size() - i && <newline>+          memcmp(entry->dns_name, &canonicalized_host[i], entry->length) == 0) { <newline>+        return entry; <newline>+      } <newline>+    } <newline>+  } <newline>+ <newline>+  return NULL; <newline>+} <newline>+ <newline>+// static <newline>+bool TransportSecurityState::IsGooglePinnedProperty(const std::string& host, <newline>+                                                    bool sni_available) { <newline>+  std::string canonicalized_host = CanonicalizeHost(host); <newline>+  const struct HSTSPreload* entry = <newline>+      GetHSTSPreload(canonicalized_host, kPreloadedSTS, kNumPreloadedSTS); <newline>+ <newline>+  if (entry && entry->pins.required_hashes == kGoogleAcceptableCerts) <newline>+    return true; <newline>+ <newline>+  if (sni_available) { <newline>+    entry = GetHSTSPreload(canonicalized_host, kPreloadedSNISTS, <newline>+                           kNumPreloadedSNISTS); <newline>+    if (entry && entry->pins.required_hashes == kGoogleAcceptableCerts) <newline>+      return true; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+// static <newline>+void TransportSecurityState::ReportUMAOnPinFailure(const std::string& host) { <newline>+  std::string canonicalized_host = CanonicalizeHost(host); <newline>+ <newline>+  const struct HSTSPreload* entry = <newline>+      GetHSTSPreload(canonicalized_host, kPreloadedSTS, kNumPreloadedSTS); <newline>+ <newline>+  if (!entry) { <newline>+    entry = GetHSTSPreload(canonicalized_host, kPreloadedSNISTS, <newline>+                           kNumPreloadedSNISTS); <newline>+  } <newline>+ <newline>+  DCHECK(entry); <newline>+  DCHECK(entry->pins.required_hashes); <newline>+  DCHECK(entry->second_level_domain_name != DOMAIN_NOT_PINNED); <newline>+ <newline>+  UMA_HISTOGRAM_ENUMERATION("Net.PublicKeyPinFailureDomain", <newline>+                            entry->second_level_domain_name, DOMAIN_NUM_EVENTS); <newline>+} <newline>+ <newline>+// IsPreloadedSTS returns true if the canonicalized hostname should always be <newline>+// considered to have STS enabled. <newline>+bool TransportSecurityState::IsPreloadedSTS( <newline>+    const std::string& canonicalized_host, <newline>+    bool sni_available, <newline>+    DomainState* out) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  out->preloaded = true; <newline>+  out->mode = DomainState::MODE_STRICT; <newline>+  out->include_subdomains = false; <newline>+ <newline>+  for (size_t i = 0; canonicalized_host[i]; i += canonicalized_host[i] + 1) { <newline>+    std::string host_sub_chunk(&canonicalized_host[i], <newline>+                               canonicalized_host.size() - i); <newline>+    out->domain = DNSDomainToString(host_sub_chunk); <newline>+    std::string hashed_host(HashHost(host_sub_chunk)); <newline>+    if (forced_hosts_.find(hashed_host) != forced_hosts_.end()) { <newline>+      *out = forced_hosts_[hashed_host]; <newline>+      out->domain = DNSDomainToString(host_sub_chunk); <newline>+      out->preloaded = true; <newline>+      return true; <newline>+    } <newline>+    bool ret; <newline>+    if (HasPreload(kPreloadedSTS, kNumPreloadedSTS, canonicalized_host, i, out, <newline>+                   &ret)) { <newline>+      return ret; <newline>+    } <newline>+    if (sni_available && <newline>+        HasPreload(kPreloadedSNISTS, kNumPreloadedSNISTS, canonicalized_host, i, <newline>+                   out, &ret)) { <newline>+      return ret; <newline>+    } <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+static std::string HashesToBase64String( <newline>+    const FingerprintVector& hashes) { <newline>+  std::vector<std::string> hashes_strs; <newline>+  for (FingerprintVector::const_iterator <newline>+       i = hashes.begin(); i != hashes.end(); i++) { <newline>+    std::string s; <newline>+    const std::string hash_str(reinterpret_cast<const char*>(i->data), <newline>+                               sizeof(i->data)); <newline>+    base::Base64Encode(hash_str, &s); <newline>+    hashes_strs.push_back(s); <newline>+  } <newline>+ <newline>+  return JoinString(hashes_strs, ','); <newline>+} <newline>+ <newline>+TransportSecurityState::DomainState::DomainState() <newline>+    : mode(MODE_STRICT), <newline>+      created(base::Time::Now()), <newline>+      include_subdomains(false), <newline>+      preloaded(false) { <newline>+} <newline>+ <newline>+TransportSecurityState::DomainState::~DomainState() { <newline>+} <newline>+ <newline>+bool TransportSecurityState::DomainState::IsChainOfPublicKeysPermitted( <newline>+    const FingerprintVector& hashes) { <newline>+ <newline>+  if (HashesIntersect(bad_preloaded_spki_hashes, hashes)) { <newline>+    LOG(ERROR) << "Rejecting public key chain for domain " << domain <newline>+               << ". Validated chain: " << HashesToBase64String(hashes) <newline>+               << ", matches one or more bad hashes: " <newline>+               << HashesToBase64String(bad_preloaded_spki_hashes); <newline>+    return false; <newline>+  } <newline>+ <newline>+  if (!(dynamic_spki_hashes.empty() && preloaded_spki_hashes.empty()) && <newline>+      !HashesIntersect(dynamic_spki_hashes, hashes) && <newline>+      !HashesIntersect(preloaded_spki_hashes, hashes)) { <newline>+    LOG(ERROR) << "Rejecting public key chain for domain " << domain <newline>+               << ". Validated chain: " << HashesToBase64String(hashes) <newline>+               << ", expected: " << HashesToBase64String(dynamic_spki_hashes) <newline>+               << " or: " << HashesToBase64String(preloaded_spki_hashes); <newline>+ <newline>+    return false; <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+bool TransportSecurityState::DomainState::IsMoreStrict( <newline>+    const TransportSecurityState::DomainState& other) { <newline>+  if (this->dynamic_spki_hashes.empty() && !other.dynamic_spki_hashes.empty()) <newline>+    return false; <newline>+ <newline>+  if (!this->include_subdomains && other.include_subdomains) <newline>+    return false; <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+bool TransportSecurityState::DomainState::ShouldRedirectHTTPToHTTPS() <newline>+    const { <newline>+  return mode == MODE_STRICT; <newline>+} <newline>+ <newline>+}  // namespace
8d5cd44086799941bcd1c441a7a78ccb7e647f1	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 28 15:33:40 2012 +0000	Rename hsts_preloaded.h to transport_security_state_static.h. This is a complete no-op as neither filename is actually used. This is just to make a future change easier to review. (Not reviewed.)				svn://svn.chromium.org/chrome/trunk/src@129413 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state_static.h b/net/base/transport_security_state_static.h <newline>new file mode 100644 <newline>index 0000000..ce2c713 <newline>--- /dev/null <newline>+++ b/net/base/transport_security_state_static.h <newline>@@ -0,0 +1,2836 @@ <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#ifndef NET_BASE_PUBLIC_KEY_HASHES_ <newline>+#define NET_BASE_PUBLIC_KEY_HASHES_ <newline>+#pragma once <newline>+ <newline>+// This file contains SubjectPublicKeyInfo hashes for public key pinning. The <newline>+// hashes are base64 encoded, SHA1 digests. <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICPDCCAaUCEDyRMcsf9tAbDpq40ES/Er4wDQYJKoZIhvcNAQEFBQAwXzELMAkG <newline>+A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFz <newline>+cyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTk2 <newline>+MDEyOTAwMDAwMFoXDTI4MDgwMjIzNTk1OVowXzELMAkGA1UEBhMCVVMxFzAVBgNV <newline>+BAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFzcyAzIFB1YmxpYyBQcmlt <newline>+YXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGfMA0GCSqGSIb3DQEBAQUAA4GN <newline>+ADCBiQKBgQDJXFme8huKARS0EN8EQNvjV69qRUCPhAwL0TPZ2RHP7gJYHyX3KqhE <newline>+BarsAx94f56TuZoAqiN91qyFomNFx3InzPRMxnVx0jnvT0Lwdd8KkMaOIG+YD/is <newline>+I19wKTakyYbnsZogy1Olhec9vn2a/iRFM9x2Fe0PonFkTGUugWhFpwIDAQABMA0G <newline>+CSqGSIb3DQEBBQUAA4GBABByUqkFFBkyCEHwxWsKzH4PIRnN5GfcX6kb5sroc50i <newline>+2JhucwNhkcV8sEVAbkSdjbCxlnRhLQ2pRdKkkirWmnWXbj9T/UWZYB2oK0z5XqcJ <newline>+2HUw19JlYD1n1khVdWk/kfVIC0dpImmClr7JyDiGSnoscxlIaU5rfGW/D/xwzoiQ <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3[] = <newline>+    "sha1/4n972HfV354KP560yw4uqe/baXc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGjCCAwICEQCbfgZJoz5iudXukEhxKe9XMA0GCSqGSIb3DQEBBQUAMIHKMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl <newline>+cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu <newline>+LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT <newline>+aWduIENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp <newline>+dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD <newline>+VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT <newline>+aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ <newline>+bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu <newline>+IENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMu6nFL8eB8aHm8b <newline>+N3O9+MlrlBIwT/A2R/XQkQr1F8ilYcEWQE37imGQ5XYgwREGfassbqb1EUGO+i2t <newline>+KmFZpGcmTNDovFJbcCAEWNF6yaRpvIMXZK0Fi7zQWM6NjPXr8EJJC52XJ2cybuGu <newline>+kxUccLwgTS8Y3pKI6GyFVxEa6X7jJhFUokWWVYPKMIno3Nij7SqAP395ZVc+FSBm <newline>+CC+Vk7+qRy+oRpfwEuL+wgorUeZ25rdGt+INpsyow0xZVYnm6FNcHOqd8GIWC6fJ <newline>+Xwzw3sJ2zq/3avL6QaaiMxTJ5Xpj055iN9WFZZ4O5lMkdBteHRJTW8cs54NJOxWu <newline>+imi5V5cCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAERSWwauSCPc/L8my/uRan2Te <newline>+2yFPhpk0djZX3dAVL8WtfxUfN2JzPtTnX84XA9s1+ivbrmAJXx5fj267Cz3qWhMe <newline>+DGBvtcC1IyIuBwvLqXTLR7sdwdela8wv0kL9Sd2nic9TutoAWii/gt/4uhMdUIaC <newline>+/Y4wjylGsB49Ndo4YhYYSq3mtlFs3q9i6wHQHiT+eo8SGhJouPtmmRQURVyu565p <newline>+F4ErWjfJXir0xuKhXFSbplQAz/DxwceYMBo7Nhbbo27q/a2ywtrvAkcTisDxszGt <newline>+TxzhT5yvDwyd93gN2PQ1VoDat20Xj50egWTh/sVFuq1ruQp6Tk9LhO5L8X3dEQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G3[] = <newline>+    "sha1/IvGeLsbqzPxdI0b0wuj2xVTdXgc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICsDCCAhmgAwIBAgIDC2dxMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDkwNjA4MjA0MzI3WhcNMTMwNjA3MTk0MzI3 <newline>+WjBGMQswCQYDVQQGEwJVUzETMBEGA1UEChMKR29vZ2xlIEluYzEiMCAGA1UEAxMZ <newline>+R29vZ2xlIEludGVybmV0IEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOBjQAw <newline>+gYkCgYEAye23pIucV+eEPkB9hPSP0XFjU5nneXQUr0SZMyCSjXvlKAy6rWxJfoNf <newline>+NFlOCnowzdDXxFdF7dWq1nMmzq0yE7jXDx07393cCDaob1FEm8rWIFJztyaHNWrb <newline>+qeXUWaUr/GcZOfqTGBhs3t0lig4zFEfC7wFQeeT9adGnwKziV28CAwEAAaOBozCB <newline>+oDAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFL/AMOv1QxE+Z7qekfv8atrjaxIk <newline>+MB8GA1UdIwQYMBaAFEjmaPkr0rKV10fYIyAQTzOYkJ/UMBIGA1UdEwEB/wQIMAYB <newline>+Af8CAQAwOgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2NybC5nZW90cnVzdC5jb20v <newline>+Y3Jscy9zZWN1cmVjYS5jcmwwDQYJKoZIhvcNAQEFBQADgYEAuIojxkiWsRF8YHde <newline>+BZqrocb6ghwYB8TrgbCoZutJqOkM0ymt9e8kTP3kS8p/XmOrmSfLnzYhLLkQYGfN <newline>+0rTw8Ktx5YtaiScRhKqOv5nwnQkhClIZmloJ0pC3+gz4fniisIWvXEyZ2VxVKfml <newline>+UUIuOss4jHg7y/j7lYe8vJD5UDI= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Google1024[] = <newline>+    "sha1/QMVAHW+MuvCLAO3vse6H0AWzuc0="; <newline>+ <newline>+// Not yet used publicly. <newline>+static const char kSPKIHash_Google2048[] = <newline>+    "sha1/AbkhxY0L343gKf+cki7NVWp+ozk="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDIDCCAomgAwIBAgIENd70zzANBgkqhkiG9w0BAQUFADBOMQswCQYDVQQGEwJV <newline>+UzEQMA4GA1UEChMHRXF1aWZheDEtMCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2Vy <newline>+dGlmaWNhdGUgQXV0aG9yaXR5MB4XDTk4MDgyMjE2NDE1MVoXDTE4MDgyMjE2NDE1 <newline>+MVowTjELMAkGA1UEBhMCVVMxEDAOBgNVBAoTB0VxdWlmYXgxLTArBgNVBAsTJEVx <newline>+dWlmYXggU2VjdXJlIENlcnRpZmljYXRlIEF1dGhvcml0eTCBnzANBgkqhkiG9w0B <newline>+AQEFAAOBjQAwgYkCgYEAwV2xWGcIYu6gmi0fCG2RFGiYCh7+2gRvE4RiIcPRfM6f <newline>+BeC4AfBONOziipUEZKzxa1NfBbPLZ4C/QgKO/t0BCezhABRP/PvwDN1Dulsr4R+A <newline>+cJkVV5MW8Q+XarfCaCMczE1ZMKxRHjuvK9buY0V7xdlfUNLjUA86iOe/FP3gx7kC <newline>+AwEAAaOCAQkwggEFMHAGA1UdHwRpMGcwZaBjoGGkXzBdMQswCQYDVQQGEwJVUzEQ <newline>+MA4GA1UEChMHRXF1aWZheDEtMCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2VydGlm <newline>+aWNhdGUgQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMBoGA1UdEAQTMBGBDzIwMTgw <newline>+ODIyMTY0MTUxWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gj <newline>+IBBPM5iQn9QwHQYDVR0OBBYEFEjmaPkr0rKV10fYIyAQTzOYkJ/UMAwGA1UdEwQF <newline>+MAMBAf8wGgYJKoZIhvZ9B0EABA0wCxsFVjMuMGMDAgbAMA0GCSqGSIb3DQEBBQUA <newline>+A4GBAFjOKer89961zgK5F7WF0bnj4JXMJTENAKaSbn+2kmOeUJXRmm/kEd5jhW6Y <newline>+7qj/WsjTVbJmcVfewCHrPSqnI0kBBIZCe/zuf6IWUrVnZ9NA2zsmWLIodz2uFHdh <newline>+1voqZiegDfqnc1zqcPGUIWVEX/r87yloqaKHee9570+sB3c4 <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_EquifaxSecureCA[] = <newline>+    "sha1/SOZo+SvSspXXR9gjIBBPM5iQn9Q="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICsjCCAhugAwIBAgIDBe3YMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDUwODMxMjA0MDM3WhcNMTIwODMxMjA0MDM3 <newline>+WjBIMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQWV0bmEgSW5jLjEkMCIGA1UEAxMb <newline>+QWV0bmEgSW5jLiBTZWN1cmUgU2VydmVyIENBMIGfMA0GCSqGSIb3DQEBAQUAA4GN <newline>+ADCBiQKBgQCnB2yrm4i44DG5epPu0fbe/pOZDWOvAS7qCcy6YbSkPfOHfH9Blmf3 <newline>+8L6D5yY1pzmTXaU7cDQu4qmj21toEIGwBziMmW6NsiV8nHtmtfXfHP6xrmyPUdN2 <newline>+DdTj937fnrYOoyMhGgBYEjiemeHFQxZSpKZdolFEFXbUa2/yWQafrQIDAQABo4Gj <newline>+MIGgMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQU2S4/xnaeitmFkzoxLnZeo33n <newline>+H4owHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gjIBBPM5iQn9QwEgYDVR0TAQH/BAgw <newline>+BgEB/wIBADA6BgNVHR8EMzAxMC+gLaArhilodHRwOi8vY3JsLmdlb3RydXN0LmNv <newline>+bS9jcmxzL3NlY3VyZWNhLmNybDANBgkqhkiG9w0BAQUFAAOBgQBMSoZHIrD1rq8v <newline>+UG3UYbN76xiF9FDRzWTs5Mvv4Psvf2kk426slzNO0ukFAsmwqN1mA/P9Nc4FlMMC <newline>+YtcnLNwC/syEYdQBOJjxfTVGTqh5q6jDs7S3rPJv8mrFk8ldC8PxU1ZJVfSlFCDn <newline>+6diMDgvOAJfUeJlIRLGu2k/ksI0Y1w== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Aetna[] = <newline>+    "sha1/klKqFN6/gK4wqtlOYDhwJKVDLxo="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDfTCCAuagAwIBAgIDErvmMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDIwNTIxMDQwMDAwWhcNMTgwODIxMDQwMDAw <newline>+WjBCMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEbMBkGA1UE <newline>+AxMSR2VvVHJ1c3QgR2xvYmFsIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB <newline>+CgKCAQEA2swYYzD99BcjGlZ+W988bDjkcbd4kdS8odhM+KhDtgPpTSEHCIjaWC9m <newline>+OSm9BXiLnTjoBbdqfnGk5sRgprDvgOSJKA+eJdbtg/OtppHHmMlCGDUUna2YRpIu <newline>+T8rxh0PBFpVXLVDviS2Aelet8u5fa9IAjbkU+BQVNdnARqN7csiRv8lVK83Qlz6c <newline>+JmTM386DGXHKTubU1XupGc1V3sjs0l44U+VcT4wt/lAjNvxm5suOpDkZALeVAjmR <newline>+Cw7+OC7RHQWa9k0+bw8HHa8sHo9gOeL6NlMTOdReJivbPagUvTLrGAMoUgRx5asz <newline>+PeE4uwc2hGKceeoWMPRfwCvocWvk+QIDAQABo4HwMIHtMB8GA1UdIwQYMBaAFEjm <newline>+aPkr0rKV10fYIyAQTzOYkJ/UMB0GA1UdDgQWBBTAephojYn7qwVkDBF9qn1luMrM <newline>+TjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjA6BgNVHR8EMzAxMC+g <newline>+LaArhilodHRwOi8vY3JsLmdlb3RydXN0LmNvbS9jcmxzL3NlY3VyZWNhLmNybDBO <newline>+BgNVHSAERzBFMEMGBFUdIAAwOzA5BggrBgEFBQcCARYtaHR0cHM6Ly93d3cuZ2Vv <newline>+dHJ1c3QuY29tL3Jlc291cmNlcy9yZXBvc2l0b3J5MA0GCSqGSIb3DQEBBQUAA4GB <newline>+AHbhEm5OSxYShjAGsoEIz/AIx8dxfmbuwu3UOx//8PDITtZDOLC5MH0Y0FWDomrL <newline>+NhGc6Ehmo21/uBPUR/6LWlxz/K7ZGzIZOKuXNBSqltLroxwUCEm2u+WR74M26x1W <newline>+b8ravHNjkOR/ez4iyz0H7V84dJzjA1BOoa+Y7mHyhD8S <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustGlobal[] = <newline>+    "sha1/wHqYaI2J+6sFZAwRfap9ZbjKzE4="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDizCCAvSgAwIBAgIDDW5iMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDYxMTI3MDAwMDAwWhcNMTgwODIxMTYxNTAw <newline>+WjBYMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjExMC8GA1UE <newline>+AxMoR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIw <newline>+DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL64FXv/1Hx9Z62DZHvIQlMt3/aE <newline>+CCBh1gFZapxEEa/vdv2Vfs5hMLt6g18CvQFmyu4VjW+hMJy9oYWelDrzVogAMc/Y <newline>+7mqWAtntA4z7dW3n6rhVFgUWmvTgXrGIwGSFXBVNiMe3uuB16a0FPZ3HiUjguyjI <newline>+A+Ewk2ReUsBZcCI1V4iK8ZUKg9e8MXMBNO3vRnHgawKoNXJrl5tm4MsceV/YGgRo <newline>+HkcC5p1g4jaXAd/ONZLfvmfHbXdZO4+d1pAVlLxCNBDBOfmxJz5+1op1xbKvltOi <newline>+3pvkmL594emBrbZv/NcO2uA0sA0ad+fjCJjvWPqchLc2r8LfrNL0EAZwcTUCAwEA <newline>+AaOB6DCB5TAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFCzVUEGXFYvwjzZhW0r7 <newline>+a9mZyTOSMB8GA1UdIwQYMBaAFEjmaPkr0rKV10fYIyAQTzOYkJ/UMA8GA1UdEwEB <newline>+/wQFMAMBAf8wOgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2NybC5nZW90cnVzdC5j <newline>+b20vY3Jscy9zZWN1cmVjYS5jcmwwRgYDVR0gBD8wPTA7BgRVHSAAMDMwMQYIKwYB <newline>+BQUHAgEWJWh0dHA6Ly93d3cuZ2VvdHJ1c3QuY29tL3Jlc291cmNlcy9jcHMwDQYJ <newline>+KoZIhvcNAQEFBQADgYEAr/MO1nKrx6mXyiprhDneeanwgeUIZ6vXLyACAXEMBCLJ <newline>+HoiVA8lJOq9nCEmw1Qj1ID2AkaDFh6P7yaMXkfmoL67pD9+Wcg91F4BdeAFNnx9t <newline>+e9j1QjgjGpmT9IO+OzV05zcTNXqstLaQgmwnpODsnjW9v+UpoUefWzL86Zl9Kzk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustPrimary[] = <newline>+    "sha1/sBmJ5+/7Sq/LFI9YRjl2IkFQ4bo="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIFijCCBHKgAwIBAgIKYSCKYgAAAAAACDANBgkqhkiG9w0BAQUFADBSMQswCQYD <newline>+VQQGEwJVUzEaMBgGA1UEChMRSW50ZWwgQ29ycG9yYXRpb24xJzAlBgNVBAMTHklu <newline>+dGVsIEV4dGVybmFsIEJhc2ljIFBvbGljeSBDQTAeFw0wOTA1MTUxOTI3MjZaFw0x <newline>+NTA1MTUxOTM3MjZaMFYxCzAJBgNVBAYTAlVTMRowGAYDVQQKExFJbnRlbCBDb3Jw <newline>+b3JhdGlvbjErMCkGA1UEAxMiSW50ZWwgRXh0ZXJuYWwgQmFzaWMgSXNzdWluZyBD <newline>+QSAzQjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQEM1Wn9TU9vc9C <newline>++/Tc7KB+eiYElmrcEWE32WUdHvWG+IcQHVQsikTmMyKKojNLw2B5s6Iekc8ivDo/ <newline>+wCfjZzX9JyftMnc+AArc0la87Olybzm8K9jXEfTBvTnUSFSiI9ZYefITdiUgqlAF <newline>+uljFZEHYKYtLuhrRacpmQfP4mV63NKdc2bT804HRf6YptZFa4k6YN94zlrGNrBuQ <newline>+Q74WFzz/jLBusbUpEkro6Mu/ZYFOFWQrV9lBhF9Ruk8yN+3N6n9fUo/qBigiF2kE <newline>+n9xVh1ykl7SCGL2jBUkXx4qgV27a6Si8lRRdgrHGtN/HWnSWlLXTH5l575H4Lq++ <newline>+77OFv38CAwEAAaOCAlwwggJYMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFA7G <newline>+KvdZsggQkCVvw939imYxMCvFMAsGA1UdDwQEAwIBhjASBgkrBgEEAYI3FQEEBQID <newline>+AQABMCMGCSsGAQQBgjcVAgQWBBQ5oFY2ekKQ/5Ktim+VdMeSWb4QWTAZBgkrBgEE <newline>+AYI3FAIEDB4KAFMAdQBiAEMAQTAfBgNVHSMEGDAWgBQaxgxKxEdvqNutK/D0Vgaj <newline>+7TdUDDCBvQYDVR0fBIG1MIGyMIGvoIGsoIGphk5odHRwOi8vd3d3LmludGVsLmNv <newline>+bS9yZXBvc2l0b3J5L0NSTC9JbnRlbCUyMEV4dGVybmFsJTIwQmFzaWMlMjBQb2xp <newline>+Y3klMjBDQS5jcmyGV2h0dHA6Ly9jZXJ0aWZpY2F0ZXMuaW50ZWwuY29tL3JlcG9z <newline>+aXRvcnkvQ1JML0ludGVsJTIwRXh0ZXJuYWwlMjBCYXNpYyUyMFBvbGljeSUyMENB <newline>+LmNybDCB4wYIKwYBBQUHAQEEgdYwgdMwYwYIKwYBBQUHMAKGV2h0dHA6Ly93d3cu <newline>+aW50ZWwuY29tL3JlcG9zaXRvcnkvY2VydGlmaWNhdGVzL0ludGVsJTIwRXh0ZXJu <newline>+YWwlMjBCYXNpYyUyMFBvbGljeSUyMENBLmNydDBsBggrBgEFBQcwAoZgaHR0cDov <newline>+L2NlcnRpZmljYXRlcy5pbnRlbC5jb20vcmVwb3NpdG9yeS9jZXJ0aWZpY2F0ZXMv <newline>+SW50ZWwlMjBFeHRlcm5hbCUyMEJhc2ljJTIwUG9saWN5JTIwQ0EuY3J0MA0GCSqG <newline>+SIb3DQEBBQUAA4IBAQCxtQEHchVQhXyjEqtMVUMe6gkmPsIczHxSeqNbo9dsD+6x <newline>+bT65JT+oYgpIAtfEsYXeUJu1cChqpb22U5bMAz7eaQcW5bzefufWvA6lg2048B8o <newline>+czBj/q+5P5NpYrUO8jOmN4jTjfJq3ElZ7yFWpy7rB3Vm/aN6ATYqWfMbS/xfh+JC <newline>+xmH3droUmMJI0/aZJHsLtjbjFnNsHDNrJZX1vxlM78Lb1hjskTENPmhbVbfTj5i/ <newline>+ZGnhv4tmI8QZPCNtcegXJrfhRl2D9bWpdTOPrWiLDUqzy1Z6KL7TcOS/PCl8RHCJ <newline>+XkPau/thTQCpIoDa2+c+3XA++gRTfAQ4svTO260N <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Intel[] = <newline>+    "sha1/DsYq91myCBCQJW/D3f2KZjEwK8U="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDWzCCAsSgAwIBAgIDCaxIMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDgwODE1MTY0NTE1WhcNMTMwMjE0MTc0NTE1 <newline>+WjBtMQswCQYDVQQGEwJERTEcMBoGA1UEChMTVEMgVHJ1c3RDZW50ZXIgR21iSDEe <newline>+MBwGA1UECxMVVEMgVHJ1c3RDZW50ZXIgU1NMIENBMSAwHgYDVQQDExdUQyBUcnVz <newline>+dENlbnRlciBTU0wgQ0EgSTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB <newline>+AOkCoJoNbJw33wSxNWbDdmIfDIedR8Zmr/mjOhMkXdxRYb6qrl/WfMEuo4PBcysJ <newline>+kF81LaDMkBH0zc7Hs1eYixrMVObkCmEUjxYylgOk4ExGwhmIWDJUWGslNBUIIhFf <newline>++ucDWuGZNfILQrwCWRHYBG0n/6lZPylCqopCMYhBK5sTI/PyuHEAzDL7+buep/Na <newline>+zn+oy/a6x1nobsuL9X2oFaWZb7Z6ty5kZ/U56JHa7vnsLrg4ePwiQb8jtyUdz0fD <newline>+uMHkNzK0gWxr4hm0v92otYFuOTZqNLEJneeiILxUCCMop2chr1obpq2zGVNxJ/rP <newline>+StWmcu75KBGMpT+mzFgIyf0CAwEAAaOBozCBoDAOBgNVHQ8BAf8EBAMCAQYwHQYD <newline>+VR0OBBYEFOe/bKlImXeG4tD/MKCQHQtk0IU6MB8GA1UdIwQYMBaAFEjmaPkr0rKV <newline>+10fYIyAQTzOYkJ/UMBIGA1UdEwEB/wQIMAYBAf8CAQAwOgYDVR0fBDMwMTAvoC2g <newline>+K4YpaHR0cDovL2NybC5nZW90cnVzdC5jb20vY3Jscy9zZWN1cmVjYS5jcmwwDQYJ <newline>+KoZIhvcNAQEFBQADgYEAVKyJLbJha83PggEit8+dzh50wIsKXpTV2K6K4HnUI1kh <newline>+xqocLVfQORluC+LS7L78D2EKTWLZ8WNujiP6DbbIPSTsMasuiBMQMBUlJMUqsp/M <newline>+XmQJgIGAbxsr19MY6mmB30oWuo4cjHnkMzSCfhcON6Rxvbjijk2qCWXkk2T2HAk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_TCTrustCenter[] = <newline>+    "sha1/gzuEEAB/bkqdQS3EIjk2by7lW+k="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDJDCCAo2gAwIBAgIDBfw3MA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDYwNzIxMTUwNTA2WhcNMTEwNzEyMTUwNTA2 <newline>+WjA5MQswCQYDVQQGEwJVSzEXMBUGA1UEChMOVm9kYWZvbmUgR3JvdXAxETAPBgNV <newline>+BAMTCFZvZGFmb25lMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAs61K <newline>+wbMcB+GGGbjyo1dYEiVNGRYKRsDXfeOgeq03Vebf7D5Xq6a0Qs4Rvp6CuRTSNDPi <newline>+M+0vuQRW5sib9UD8UB2x4znc6FriRV4FUpAyKNVqQ9NB0MOBpQekVlX9DzcXkn+p <newline>+zWRi6tt3CtPsaDyHo06oAwX5qu3tW3pjtf0vnQqJWwwA6Mp4YJ/acHD/vVtt67hz <newline>+a0Upz0O2DEJetb3OaqI5yaNZ91y6i7sK0KTvBQxZHeJs+y5UjluHv3ptMUZvmsf0 <newline>+SiKysXnkg5mtsZSFlfM+U7dADq1zNb764NV5sSlmbDLEkvohQyg1p9gh2HX9Jk4A <newline>+e9nnF4hjw2U33HLBXwIDAQABo4GgMIGdMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4E <newline>+FgQUR+YiAaq+68BPLD6l0UcvzlkcgvswHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gj <newline>+IBBPM5iQn9QwDwYDVR0TAQH/BAUwAwEB/zA6BgNVHR8EMzAxMC+gLaArhilodHRw <newline>+Oi8vY3JsLmdlb3RydXN0LmNvbS9jcmxzL3NlY3VyZWNhLmNybDANBgkqhkiG9w0B <newline>+AQUFAAOBgQCs37zuSY/KkPigCvJevu+ewWy9GP2bFZi5EaxKuHGF+tYFZUNkyc06 <newline>+ACYMM3ADPM6dVUYeXIDZnPfV8BJFCpdoAHkSNlg341AVjabCOWtzOYolBn0ua8Wi <newline>+BM471XfzzXD7yMliek9J4fUn2vQU7MYgEkSAA53ZkMScGDkA/c1wMQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Vodafone[] = <newline>+    "sha1/DX/hXFUUNmiZ/EDWIgjvIuvRFRw="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIID1TCCAr2gAwIBAgIDAjbRMA0GCSqGSIb3DQEBBQUAMEIxCzAJBgNVBAYTAlVT <newline>+MRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMRswGQYDVQQDExJHZW9UcnVzdCBHbG9i <newline>+YWwgQ0EwHhcNMTAwMjE5MjI0NTA1WhcNMjAwMjE4MjI0NTA1WjA8MQswCQYDVQQG <newline>+EwJVUzEXMBUGA1UEChMOR2VvVHJ1c3QsIEluYy4xFDASBgNVBAMTC1JhcGlkU1NM <newline>+IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx3H4Vsce2cy1rfa0 <newline>+l6P7oeYLUF9QqjraD/w9KSRDxhApwfxVQHLuverfn7ZB9EhLyG7+T1cSi1v6kt1e <newline>+6K3z8Buxe037z/3R5fjj3Of1c3/fAUnPjFbBvTfjW761T4uL8NpPx+PdVUdp3/Jb <newline>+ewdPPeWsIcHIHXro5/YPoar1b96oZU8QiZwD84l6pV4BcjPtqelaHnnzh8jfyMX8 <newline>+N8iamte4dsywPuf95lTq319SQXhZV63xEtZ/vNWfcNMFbPqjfWdY3SZiHTGSDHl5 <newline>+HI7PynvBZq+odEj7joLCniyZXHstXZu8W1eefDp6E63yoxhbK1kPzVw662gzxigd <newline>+gtFQiwIDAQABo4HZMIHWMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUa2k9ahhC <newline>+St2PAmU5/TUkhniRFjAwHwYDVR0jBBgwFoAUwHqYaI2J+6sFZAwRfap9ZbjKzE4w <newline>+EgYDVR0TAQH/BAgwBgEB/wIBADA6BgNVHR8EMzAxMC+gLaArhilodHRwOi8vY3Js <newline>+Lmdlb3RydXN0LmNvbS9jcmxzL2d0Z2xvYmFsLmNybDA0BggrBgEFBQcBAQQoMCYw <newline>+JAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmdlb3RydXN0LmNvbTANBgkqhkiG9w0B <newline>+AQUFAAOCAQEAq7y8Cl0YlOPBscOoTFXWvrSY8e48HM3P8yQkXJYDJ1j8Nq6iL4/x <newline>+/torAsMzvcjdSCIrYA+lAxD9d/jQ7ZZnT/3qRyBwVNypDFV+4ZYlitm12ldKvo2O <newline>+SUNjpWxOJ4cl61tt/qJ/OCjgNqutOaWlYsS3XFgsql0BYKZiZ6PAx2Ij9OdsRu61 <newline>+04BqIhPSLT90T+qvjF+0OJzbrs6vhB6m9jRRWXnT43XcvNfzc9+S7NIgWW+c+5X4 <newline>+knYYCnwPLKbK3opie9jzzl9ovY8+wXS7FXI6FoOpC+ZNmZzYV+yoAVHHb1c0XqtK <newline>+LEL2TxyJeN4mTvVvk0wVaydWTQBUbHq3tw== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_RapidSSL[] = <newline>+    "sha1/o5OZxATDsgmwgcIfIWIneMJ0jkw="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDxTCCAq2gAwIBAgIQAqxcJmoLQJuPC3nyrkYldzANBgkqhkiG9w0BAQUFADBs <newline>+MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3 <newline>+d3cuZGlnaWNlcnQuY29tMSswKQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5j <newline>+ZSBFViBSb290IENBMB4XDTA2MTExMDAwMDAwMFoXDTMxMTExMDAwMDAwMFowbDEL <newline>+MAkGA1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3 <newline>+LmRpZ2ljZXJ0LmNvbTErMCkGA1UEAxMiRGlnaUNlcnQgSGlnaCBBc3N1cmFuY2Ug <newline>+RVYgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMbM5XPm <newline>++9S75S0tMqbf5YE/yc0lSbZxKsPVlDRnogocsF9ppkCxxLeyj9CYpKlBWTrT3JTW <newline>+PNt0OKRKzE0lgvdKpVMSOO7zSW1xkX5jtqumX8OkhPhPYlG++MXs2ziS4wblCJEM <newline>+xChBVfvLWokVfnHoNb9Ncgk9vjo4UFt3MRuNs8ckRZqnrG0AFFoEt7oT61EKmEFB <newline>+Ik5lYYeBQVCmeVyJ3hlKV9Uu5l0cUyx+mM0aBhakaHPQNAQTXKFx01p8VdteZOE3 <newline>+hzBWBOURtCmAEvF5OYiiAhF8J2a3iLd48soKqDirCmTCv2ZdlYTBoSUeh10aUAsg <newline>+EsxBu24LUTi4S8sCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQF <newline>+MAMBAf8wHQYDVR0OBBYEFLE+w2kD+L9HAdSYJhoIAu9jZCvDMB8GA1UdIwQYMBaA <newline>+FLE+w2kD+L9HAdSYJhoIAu9jZCvDMA0GCSqGSIb3DQEBBQUAA4IBAQAcGgaX3Nec <newline>+nzyIZgYIVyHbIUf4KmeqvxgydkAQV8GK83rZEWWONfqe/EW1ntlMMUu4kehDLI6z <newline>+eM7b41N5cdblIZQB2lWHmiRk9opmzN6cN82oNLFpmyPInngiK3BD41VHMWEZ71jF <newline>+hS9OMPagMRYjyOfiZRYzy78aG6A9+MpeizGLYAiJLQwGXFK3xPkKmNEVX58Svnw2 <newline>+Yzi9RKR/5CYrCsSXaQ3pjOLAEFe4yHYSkVXySGnYvCoCWw9E1CAx2/S6cCZdkGCe <newline>+vEsXCS+0yx5DaMkHJ8HSXPfqIbloEpw8nL+e/IBcm2PN7EeqJSdnoDfzAIJ9VNep <newline>++OkuE6N36B9K <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_DigiCertEVRoot[] = <newline>+    "sha1/gzF+YoVCU9bXeDGQ7JGQVumRueM="; <newline>+ <newline>+// Not public <newline>+static const char kSPKIHash_Tor1[] = <newline>+    "sha1/juNxSTv9UANmpC9kF5GKpmWNx3Y="; <newline>+static const char kSPKIHash_Tor2[] = <newline>+    "sha1/lia43lPolzSPVIq34Dw57uYcLD8="; <newline>+static const char kSPKIHash_Tor3[] = <newline>+    "sha1/rzEyQIKOh77j87n5bjWUNguXF8Y="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICPTCCAaYCEQDNun9W8N/kvFT+IqyzcqpVMA0GCSqGSIb3DQEBAgUAMF8xCzAJ <newline>+BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xh <newline>+c3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05 <newline>+NjAxMjkwMDAwMDBaFw0yODA4MDEyMzU5NTlaMF8xCzAJBgNVBAYTAlVTMRcwFQYD <newline>+VQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xhc3MgMSBQdWJsaWMgUHJp <newline>+bWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOB <newline>+jQAwgYkCgYEA5Rm/baNWYS2ZSHH2Z965jeu3noaACpEO+jglr0aIguVzqKCbJF0N <newline>+H8xlbgyw0FaEGIeaBpsQoXPftFg5a27B9hXVqKg/qhIGjTGsf7A01480Z4gJzRQR <newline>+4k5FVmkfeAKA2txHkSm7NsljXMXg1y2He6G3MrB7MLoqLzGq7qNn2tsCAwEAATAN <newline>+BgkqhkiG9w0BAQIFAAOBgQBMP7iLxmjf7kMzDl3ppssHhE16M/+SG/Q2rdiVIjZo <newline>+EWx8QszznC7EBz8UsA9P/5CSdvnivErpj82ggAr3xSnxgiJduLHdgSOjeyUVRjB5 <newline>+FvjqBUuUfx3CHMjjt/QQQDwTw18fU+hI5Ia0e6E1sHslurjTjqs/OJ0ANACY89Fx <newline>+lA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass1[] = <newline>+    "sha1/I0PRSKJViZuUfUYaeX7ATP7RcLc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDhDCCAwqgAwIBAgIQL4D+I4wOIg9IZxIokYesszAKBggqhkjOPQQDAzCByjEL <newline>+MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW <newline>+ZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2ln <newline>+biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJp <newline>+U2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9y <newline>+aXR5IC0gRzQwHhcNMDcxMTA1MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCByjELMAkG <newline>+A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJp <newline>+U2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2lnbiwg <newline>+SW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2ln <newline>+biBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5 <newline>+IC0gRzQwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASnVnp8Utpkmw4tXNherJI9/gHm <newline>+GUo9FANL+mAnINmDiWn6VMaaGF5VKmTeBvaNSjutEDxlPZCIBIngMGGzrl0Bp3ve <newline>+fLK+ymVhAIau2o970ImtTR1ZmkGxvEeA3J5iw/mjgbIwga8wDwYDVR0TAQH/BAUw <newline>+AwEB/zAOBgNVHQ8BAf8EBAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJ <newline>+aW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYj <newline>+aHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFLMW <newline>+kf3upm7ktS5Jj4d4gYDs5bG1MAoGCCqGSM49BAMDA2gAMGUCMGYhDBgmYFo4e1ZC <newline>+4Kf8NoRRkSAsdk1DPcQdhCPQrNZ8NQbOzWm9kA3bbEhCHQ6qQgIxAJw9SDkjOVga <newline>+FRJZap7v1VmyHVIsmXHNxynfGyphe3HR3vPA5Q06Sqotp9iGKt0uEA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G4[] = <newline>+    "sha1/7WYxNdMb1OymFMQp4xkGn5TBJlA="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGjCCAwICEQDsoKeLbnVqAc/EfMwvlF7XMA0GCSqGSIb3DQEBBQUAMIHKMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl <newline>+cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu <newline>+LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT <newline>+aWduIENsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp <newline>+dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD <newline>+VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT <newline>+aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ <newline>+bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu <newline>+IENsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK3LpRFpxlmr8Y+1 <newline>+GQ9Wzsy1HyDkniYlS+BzZYlZ3tCD5PUPtbut8XzoIfzk6AzufEUiGXaStBO3IFsJ <newline>++mGuqPKljYXCKtbeZjbSmwL0qJJgfJxptI8kHtCGUvYynEFYHiK9zUVilQhu0Gbd <newline>+U6LM8BDcVHOLBKFGMzNcF0C5nk3T875Vg+ixiY5afJqWIpA7iCXy0lOIAgwLePLm <newline>+NxdLMEYH5IBtptiWLugs+BGzOA1mppvqySNb247i8xOOGlktqgLw7KSHZtzBP/XY <newline>+ufTsgsbSPZUd5cBPhMnZo0QoBmrXRazwa2rvTl/4EYIeOGM0ZlDUPpNz+jDDZq3/ <newline>+ky2X7wMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAj/ola09b5KROJ1WrIhVZPMq1 <newline>+CtRK26vdoV9TxaBXOcLORyu+OshWv8LZJxA6sQU8wHcxuzrTBXttmhwwjIDLk5Mq <newline>+g6sFUYICABFna/OIYUdfA5PVWw3g8dShMjWFsjrbsIKr0csKvE+MW8VLADsfKoKm <newline>+fjaF3H48ZwC15DtS4KjrXRX5xm3wrR0OhbepmnMUWluPQSjA1egtTaRezarZ7c7c <newline>+2NU8Qh0XwRJdRTjDOPP8hS6DRkiy1yBfkjaP53kPmF6Z6PDQpLv1U70qzlmwr25/ <newline>+bLvSHgCwIe34QWKCudiyxLtGUPMxxY8BqHTr9Xgn2uf3ZkPznoM+IKrDNWCRzg== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass4_G3[] = <newline>+    "sha1/PANDaGiVHPNpKri0Jtq6j+ki5b0="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGjCCAwICEQCLW3VWhFSFCwDPrzhIzrGkMA0GCSqGSIb3DQEBBQUAMIHKMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl <newline>+cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu <newline>+LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT <newline>+aWduIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp <newline>+dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD <newline>+VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT <newline>+aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ <newline>+bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu <newline>+IENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN2E1Lm0+afY8wR4 <newline>+nN493GwTFtl63SRRZsDHJlkNrAYIwpTRMx/wgzUfbhvI3qpuFU5UJ+/EbRrsC+MO <newline>+8ESlV8dAWB6jRx9x7GD2bZTIGDnt/kIYVt/kTEkQeE4BdjVjEjbdZrwBBDajVWjV <newline>+ojYJrKshJlQGrT/KFOCsyq0GHZXi+J3x4GD/wn91K0zM2v6HmSHquv4+VNfSWXjb <newline>+PG7PoBMAGrgnoeS+Z5bKoMWznN3JdZ7rMJpfo83ZrngZPyPpXNspva1VyBtUjGP2 <newline>+6KbqxzcSXKMpHgLZ2x87tNcPVkeBFQRKr4Mn0cVYiMHd9qqnoxjaaKptEVHhv2Vr <newline>+n5Z20T0CAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAq2aN17O6x5q25lXQBfGfMY1a <newline>+qtmqRiYPce2lrVNWYgFHKkTp/j90CxObufRNG7LRX7K20ohcs5/Ny9Sn2WCVhDr4 <newline>+wTcdYcrnsMXlkdpUpqwxga6X3s0IrLjAl4B/bnKk52kTlWUfxJM8/XmPBNQ+T+r3 <newline>+ns7NZ3xPZQL/kYVUc8f/NveGLezQXk//EZ9yBta4GvFMDSZl4kSAHsef493oCtrs <newline>+pSCAaWihT37ha88HQfqDjrw43bAuEbFrskLMmrz5SCJ5ShkPshw+IHTZasO+8ih4 <newline>+E1Z5T21Q6huwtVexN2ZYI/PcD98Kh8TvhgXVOBRgmaNL3gaWcSzy27YfpO8/7g== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass1_G3[] = <newline>+    "sha1/VRmyeKyygdftp6vBg5nDu2kEJLU="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGTCCAwECEGFwy0mMX5hFKeewptlQW3owDQYJKoZIhvcNAQEFBQAwgcoxCzAJ <newline>+BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVy <newline>+aVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24s <newline>+IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNp <newline>+Z24gQ2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0 <newline>+eSAtIEczMB4XDTk5MTAwMTAwMDAwMFoXDTM2MDcxNjIzNTk1OVowgcoxCzAJBgNV <newline>+BAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNp <newline>+Z24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIElu <newline>+Yy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24g <newline>+Q2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAt <newline>+IEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArwoNwtUs22e5LeWU <newline>+J92lvuCwTY+zYVY81nzD9M0+hsuiiOLh2KRpxbXiv8GmR1BeRjmL1Za6tW8UvxDO <newline>+JxOeBUebMXoT2B/Z0wI3i60sR/COgQanDTAM6/c8DyAd3HJG7qUCyFvDyVZpTMUY <newline>+wZF7C9UTAJu878NIPkZgIIUq1ZC2zYugzDLdt/1AVbJQHFauzI13TccgTacxdu9o <newline>+koqQHgiBVrKtaaNS0MscxCM9H5n+TOgWY47GCI72MfbS+uV23bUckqNJzc0BzWjN <newline>+qWm6o+sdDZykIKbBoMXRRkwXbdKsZj+WjOCE1Db/IlnF+RFgqF8EffIa9iVCYQ/E <newline>+Srg+iQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQA0JhU8wI1NQ0kdvekhktdmnLfe <newline>+xbjQ5F1fdiLAJvmEOjr5jLX77GDx6M4EsMjdpwOPMPOY36TmpDHf0xwLRtxyID+u <newline>+7gU8pDM/CzmscHhzS5kr3zDCVLCoO1Wh/hYozUK9dG6A2ydEp85EXdQbkJgNHkKU <newline>+sQAsBNB0owIFImNjzYO1+8FtYmtpdf1dcEG59b98377BMnMiIYtYgXsVkXq642RI <newline>+sH/7NiXaldDxJBQX3RiAa0YjOVT1jmIJBB2UkKab5iXiQkWquJCtvgiPqQtCGJTP <newline>+cjnhsUPgKM+351psE2tJs//jGHyJizNdrDPXp/naOlXJWBD5qu9ats9LS98q <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass2_G3[] = <newline>+    "sha1/Wr7Fddyu87COJxlD/H8lDD32YeM="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDAjCCAmsCEH3Z/gfPqB63EHln+6eJNMYwDQYJKoZIhvcNAQEFBQAwgcExCzAJ <newline>+BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xh <newline>+c3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcy <newline>+MTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3Jp <newline>+emVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMB4X <newline>+DTk4MDUxODAwMDAwMFoXDTI4MDgwMTIzNTk1OVowgcExCzAJBgNVBAYTAlVTMRcw <newline>+FQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMg <newline>+UHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEo <newline>+YykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5 <newline>+MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMIGfMA0GCSqGSIb3DQEB <newline>+AQUAA4GNADCBiQKBgQDMXtERXVxp0KvTuWpMmR9ZmDCOFoUgRm1HP9SFIIThbbP4 <newline>+pO0M8RcPO/mn+SXXwc+EY/J8Y8+iR/LGWzOOZEAEaMGAuWQcRXfH2G71lSk8UOg0 <newline>+13gfqLptQ5GVj0VXXn7F+8qkBOvqlzdUMG+7AUcyM83cV5tkaWH4mx0ciU9cZwID <newline>+AQABMA0GCSqGSIb3DQEBBQUAA4GBAFFNzb5cy5gZnBWyATl4Lk0PZ3BwmcYQWpSk <newline>+U01UbSuvDV1Ai2TT1+7eVmGSX6bEHRBhNtMsJzzoKQm5EWR0zLVznxxIqbxhAe7i <newline>+F6YM40AIOw7n60RzKprxaZLvcRTDOaxxp5EJb+RxBrO6WVcmeQD2+A2iMzAo1KpY <newline>+oJ2daZH9 <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G2[] = <newline>+    "sha1/GiG0lStik84Ys2XsnA6TTLOB5tQ="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDAzCCAmwCEQC5L2DMiJ+hekYJuFtwbIqvMA0GCSqGSIb3DQEBBQUAMIHBMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0Ns <newline>+YXNzIDIgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBH <newline>+MjE6MDgGA1UECxMxKGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9y <newline>+aXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazAe <newline>+Fw05ODA1MTgwMDAwMDBaFw0yODA4MDEyMzU5NTlaMIHBMQswCQYDVQQGEwJVUzEX <newline>+MBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDIgUHVibGlj <newline>+IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMx <newline>+KGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25s <newline>+eTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazCBnzANBgkqhkiG9w0B <newline>+AQEFAAOBjQAwgYkCgYEAp4gBIXQs5xoD8JjhlzwPIQjxnNuX6Zr8wgQGE75fUsjM <newline>+HiwSViy4AWkszJkfrbCWrnkE8hM5wXuYuggs6MKEEyyqaekJ9MepAqRCwiNPStjw <newline>+DqL7MWzJ5m+ZJwf15vRMeJ5t60aG+rmGyVTyssSv1EYcWskVMP8NbPUtDm3Of3cC <newline>+AwEAATANBgkqhkiG9w0BAQUFAAOBgQByLvl/0fFx+8Se9sVeUYpAmLho+Jscg9ji <newline>+nb3/7aHmZuovCfTK1+qlK5X2JGCGTUQug6XELaDTrnhpb3LabK4I8GOSN+a7xDAX <newline>+rXfMSTWqz9iP0b63GJZHc2pUIjRkLbYWm1lbtFFZOrMLFPQS32eg9K0yZF6xRnIn <newline>+jBJ7xUS0rg== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass2_G2[] = <newline>+    "sha1/Eje6RRfurSkm/cHN/r7t8t7ZFFw="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIE0zCCA7ugAwIBAgIQGNrRniZ96LtKIVjNzGs7SjANBgkqhkiG9w0BAQUFADCB <newline>+yjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQL <newline>+ExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJp <newline>+U2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxW <newline>+ZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0 <newline>+aG9yaXR5IC0gRzUwHhcNMDYxMTA4MDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCByjEL <newline>+MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW <newline>+ZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2ln <newline>+biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJp <newline>+U2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9y <newline>+aXR5IC0gRzUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvJAgIKXo1 <newline>+nmAMqudLO07cfLw8RRy7K+D+KQL5VwijZIUVJ/XxrcgxiV0i6CqqpkKzj/i5Vbex <newline>+t0uz/o9+B1fs70PbZmIVYc9gDaTY3vjgw2IIPVQT60nKWVSFJuUrjxuf6/WhkcIz <newline>+SdhDY2pSS9KP6HBRTdGJaXvHcPaz3BJ023tdS1bTlr8Vd6Gw9KIl8q8ckmcY5fQG <newline>+BO+QueQA5N06tRn/Arr0PO7gi+s3i+z016zy9vA9r911kTMZHRxAy3QkGSGT2RT+ <newline>+rCpSx4/VBEnkjWNHiDxpg8v+R70rfk/Fla4OndTRQ8Bnc+MUCH7lP59zuDMKz10/ <newline>+NIeWiu5T6CUVAgMBAAGjgbIwga8wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8E <newline>+BAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2UvZ2lmMCEwHzAH <newline>+BgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVy <newline>+aXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFH/TZafC3ey78DAJ80M5+gKv <newline>+MzEzMA0GCSqGSIb3DQEBBQUAA4IBAQCTJEowX2LP2BqYLz3q3JktvXf2pXkiOOzE <newline>+p6B4Eq1iDkVwZMXnl2YtmAl+X6/WzChl8gGqCBpH3vn5fJJaCGkgDdk+bW48DW7Y <newline>+5gaRQBi5+MHt39tBquCWIMnNZBU4gcmU7qKEKQsTb47bDN0lAtukixlE0kF6BWlK <newline>+WE9gyn6CagsCqiUXObXbf+eEZSqVir2G3l6BFoMtEMze/aiCKm0oHw0LxOXnGiYZ <newline>+4fQRbxC1lfznQgUy286dUV4otp6F01vvpX1FQHKOtw5rDgb7MzVIcbidJ4vEZV8N <newline>+hnacRHr2lVz2XTIIM6RUthg/aFzyQkqFOFSDX9HoLPKsEdao7WNq <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G5[] = <newline>+    "sha1/sYEIGhmkwJQf+uiVKMEkyZs0rMc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEuTCCA6GgAwIBAgIQQBrEZCGzEyEDDrvkEhrFHTANBgkqhkiG9w0BAQsFADCB <newline>+vTELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQL <newline>+ExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwOCBWZXJp <newline>+U2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MTgwNgYDVQQDEy9W <newline>+ZXJpU2lnbiBVbml2ZXJzYWwgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAe <newline>+Fw0wODA0MDIwMDAwMDBaFw0zNzEyMDEyMzU5NTlaMIG9MQswCQYDVQQGEwJVUzEX <newline>+MBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0 <newline>+IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAyMDA4IFZlcmlTaWduLCBJbmMuIC0gRm9y <newline>+IGF1dGhvcml6ZWQgdXNlIG9ubHkxODA2BgNVBAMTL1ZlcmlTaWduIFVuaXZlcnNh <newline>+bCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEF <newline>+AAOCAQ8AMIIBCgKCAQEAx2E3XrEBNNti1xWb/1hajCMj1mCOkdeQmIN65lgZOIzF <newline>+9uVkhbSicfvtvbnazU0AtMgtc6XHaXGVHzk8skQHnOgO+k1KxCHfKWGPMiJhgsWH <newline>+H26MfF8WIFFE0XBPV+rjHOPMee5Y2A7Cs0WTwCznmhcrewA3ekEzeOEz4vMQGn+H <newline>+LL729fdC4uW/h2KJXwBL38Xd5HVEMkE6HnFuacsLdUYI0crSK5XQz/u5QGtkjFdN <newline>+/BMReYTtXlT2NJ8IAfMQJQYXStrxHXpma5hgZqTZ79IugvHw7wnqRMkVauIDbjPT <newline>+rJ9VAMf2CGqUuV/c4DPxhGD5WycRtPwW8rtWaoAljQIDAQABo4GyMIGvMA8GA1Ud <newline>+EwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMG0GCCsGAQUFBwEMBGEwX6FdoFsw <newline>+WTBXMFUWCWltYWdlL2dpZjAhMB8wBwYFKw4DAhoEFI/l0xqGrI2Oa8PPgGrUSBgs <newline>+exkuMCUWI2h0dHA6Ly9sb2dvLnZlcmlzaWduLmNvbS92c2xvZ28uZ2lmMB0GA1Ud <newline>+DgQWBBS2d/ppSEefUxLVwuoHMnYH0ZcHGTANBgkqhkiG9w0BAQsFAAOCAQEASvj4 <newline>+sAPmLGd75JR3Y8xuTPl9Dg3cyLk1uXBPY/ok+myDjEedO2Pzmvl2MpWRsXe8rJq+ <newline>+seQxIcaBlVZaDrHC1LGmWazxY8u4TB1ZkErvkBYoH1quEPuBUDgMbMzxPcP1Y+Oz <newline>+4yHJJDnp/RVmRvQbEdBNc6N9Rvk97ahfYtTxP/jgdFcrGJ2BtMQo2pSXpXDrrB2+ <newline>+BxHw1dvd5Yzw1TKwg+ZX4o+/vqGqvz0dtdQ46tewXDpPaj+PwGZsY6rp2aQW9IHR <newline>+lRQOfc2VNNnSj3BzgXucfr2YYdhFh5iQxeuGMMY1v/D/w1WIg0vvBZIGcfK4mJO3 <newline>+7M2CYfE45k+XmCpajQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignUniversal[] = <newline>+    "sha1/u8I+KQuzKHcdrT6iTb30I70GsD0="; <newline>+ <newline>+// Not public <newline>+static const char kSPKIHash_Twitter1[] = <newline>+    "sha1/Vv7zwhR9TtOIN/29MFI4cgHld40="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDZjCCAk6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBEMQswCQYDVQQGEwJVUzEW <newline>+MBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEdMBsGA1UEAxMUR2VvVHJ1c3QgR2xvYmFs <newline>+IENBIDIwHhcNMDQwMzA0MDUwMDAwWhcNMTkwMzA0MDUwMDAwWjBEMQswCQYDVQQG <newline>+EwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEdMBsGA1UEAxMUR2VvVHJ1c3Qg <newline>+R2xvYmFsIENBIDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDvPE1A <newline>+PRDfO1MA4Wf+lGAVPoWI8YkNkMgoI5kF6CsgncbzYEbYwbLVjDHZ3CB5JIG/NTL8 <newline>+Y2nbsSpr7iFY8gjpeMtvy/wWUsiRxP89c96xPqfCfWbB9X5SJBri1WeR0IIQ13hL <newline>+TytCOb1kLUCgsBDTOEhGiKEMuzozKmKY+wCdE1l/bztyqu6mD4b5BWHqZ38MN5aL <newline>+5mkWRxHCJ1kDs6ZgwiFAVvqgx306E+PsV8ez1q6diYD3Aecs9pYrEw15LNnA5IZ7 <newline>+S4wMcoKK+xfNAGw6EzywhIdLFnopsk/bHdQL82Y3vdj2V7teJHq4PIu5+pIaGoSe <newline>+2HSPqht/XvT+RSIhAgMBAAGjYzBhMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE <newline>+FHE4NvICMVNHK266ZUapEBVYIAUJMB8GA1UdIwQYMBaAFHE4NvICMVNHK266ZUap <newline>+EBVYIAUJMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQUFAAOCAQEAA/e1K6td <newline>+EPx7srJerJsOflN4WT5CBP51o62sgU7XAotexC3IUnbHLB/8gTKY0UvGkpMzNTEv <newline>+/NgdRN3ggX+d6YvhZJFiCzkIjKx0nVnZellSlxG5FntvRdOW2TF9AjYPnDtuzywN <newline>+A0ZF66D0f0hExghAzN4bcLUprbqLOzRldRtxIR0sFAqwlpW41uryZfspuk/qkZN0 <newline>+abby/+Ea0AzRdoXLiiW9l14sbxWZJue2Kf8i7MkCx1YAzUm5s2x7UwQa4qjJqhIF <newline>+I8LO57sEAszAR6LkxCkvW0VXiVHuPOtSCP8HNR6fNWpHSlaY0VqFH4z1Ir+rzoPz <newline>+4iIprn2DQKi6bA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustGlobal2[] = <newline>+    "sha1/cTg28gIxU0crbrplRqkQFVggBQk="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIFaDCCA1CgAwIBAgIBATANBgkqhkiG9w0BAQUFADBFMQswCQYDVQQGEwJVUzEW <newline>+MBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEeMBwGA1UEAxMVR2VvVHJ1c3QgVW5pdmVy <newline>+c2FsIENBMB4XDTA0MDMwNDA1MDAwMFoXDTI5MDMwNDA1MDAwMFowRTELMAkGA1UE <newline>+BhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xHjAcBgNVBAMTFUdlb1RydXN0 <newline>+IFVuaXZlcnNhbCBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKYV <newline>+VaCjxuAfjJ0hUNfBvitbtaSeodlyWL0AG0y/YckUHUWCq8YdgNY96xCcOq9tJPi8 <newline>+cQGeBvV8Xx7BDlXKg5pZMK4ZyzBIle0iN430SppyZj6tlcDgFgDgEB8rMQ7XlFTT <newline>+QjOgNB0eRXbdT8oYN+yFFXoZCPzVx5zw8qkuEKmS5j1YPakWaDwvdSEYfyh3peFh <newline>+F7em6fgemdtzbvQKoiFs7tqqhZJmr/Z6a4LauiIINQ/PQvE1+mrufislzDoR5G2v <newline>+c7J2Ha3QsnhnGqQ5HFELZ1aD/ThdDc7d8Lsrlh/eezJS/R27tQahsiFepdaVaH/w <newline>+mZ7cRQg+59IJDTWU3YBOU5fXtQlEIGQWFwMCTFMNaN7VqnJNk22CDtucvc+081xd <newline>+VHppCZbW2xHBjXWotM85yM48vCR85mLK4b19p71XZQvk/iXttmkQ3CgaRr0BHdCX <newline>+teGYO8A3ZNY9lO4L4fUorgtWv3GLIylBjobFS1J72HGrH4oVpjuDWtdYAVHGTEHZ <newline>+f9hBZ3KiKN9gg6meyHv8U3NyWfWTehd2Ds735VzZC1U0oqpbtWpU5xPKV+yXbfRe <newline>+Bi9Fi1jUIxaS5BZuKGNZMN9QAZxjiRqf2xeUgnA3wySemkfWWspOqGmJch+RbNt+ <newline>+nhutxx9z3SxPGWX9f5NAEC7S8O08ni4oPmkmM8V7AgMBAAGjYzBhMA8GA1UdEwEB <newline>+/wQFMAMBAf8wHQYDVR0OBBYEFNq7LqqwDLiIJlF0XG0D08DYj3rWMB8GA1UdIwQY <newline>+MBaAFNq7LqqwDLiIJlF0XG0D08DYj3rWMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG <newline>+9w0BAQUFAAOCAgEAMXjmx7XfuJRAyXHEqDXsRh3ChfMoWIawC/yOsjmPRFWrZIRc <newline>+aanQmjg8+uUfNeVE44B5lGiku8SfPeE0zTBGi1QrlaXv9z+ZhP015s8xxtxqv6fX <newline>+IwjhmF7DWgh2qaavdy+3YL1ERmrvl/9zlcGO6JP7/TG37FcREUWbMPEaiDnBTzyn <newline>+ANXH/KttgCJwpQzgXQQpAvvLoJHRfNbDflDVnVi+QTjruXU8FdmbyUqDWcDaU/0z <newline>+uzYYm4UPFd3uLax2k7nZAY1IEKj79TiG8dsKxr2EoyNB3tZ3b4XUhRxQ4K5RirqN <newline>+Pnbiucon8l+f725ZDQbYKxek0nxru18UGkiPGkzns0ccjkxFKyDuSN/n3QmOGKja <newline>+QI2SJhFTYXNd673nxE0pN2HrrDktZy4W1vUAg4WhzH92xH3kt0tm7wNFYGm2DFKW <newline>+koRepqO1pD4r2czYG0eq8kTaT/kD6PAUyz/zg97QwVTjt+gKN02LIFkDMBmhLMi9 <newline>+ER/frslKxfMnZmaGrGiR/9nmUxwPi1xpZQomyB40w11Re9epnAahNt3ViZS82eQt <newline>+DF4JbAiXfKM9fJP/P6EUp8+1Xevb2xzEdt+Iub1FBZUbrvxGakyvSOPOrg/Sfuvm <newline>+bJxPgWp6ZKy7PtXny3YuxadIwVyQD8vIP/rmMuGNG2+k5o7Y+SlIis5z/iw= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustUniversal[] = <newline>+    "sha1/h+hbY1PGI6MSjLD/u/VR/lmADiI="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIFbDCCA1SgAwIBAgIBATANBgkqhkiG9w0BAQUFADBHMQswCQYDVQQGEwJVUzEW <newline>+MBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXR2VvVHJ1c3QgVW5pdmVy <newline>+c2FsIENBIDIwHhcNMDQwMzA0MDUwMDAwWhcNMjkwMzA0MDUwMDAwWjBHMQswCQYD <newline>+VQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXR2VvVHJ1 <newline>+c3QgVW5pdmVyc2FsIENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC <newline>+AQCzVFLByT7y2dyxUxpZKeexw0Uo5dfR7cXFS6GqdHtXr0om/Nj1XqduGdt0DE81 <newline>+WzILAePb63p3NeqqWuDW6KFXlPCQo3RWlEQwAx5cTiuFJnSCegx2oG9NzkEtoBUG <newline>+FF+3Qs17j1hhNNwqCPkuwwGmIkQcTAeC5lvO0Ep8BNMZcyfwqph/Lq9O64ceJHdq <newline>+XbboW0W63MOhBW9Wjo8QJqVJwy7XQYci4E+GymC16qFjwAGXEHm9ADwSbSsVsaxL <newline>+se4YuU6W3Nx2/zu+z18DwPw76L5GG//aQMJS9/7jOvdqdzXQ2o3rXhhqMcceujwb <newline>+KNZrVMaqW9eiLBsZzKIC9ptZvTdrhrVtgrrY6slWvKk2WP0+GfPtDCapkzj4T8Fd <newline>+IgbQl+rhrcZV4IErKIM6+vR7IVEAvlI4zs1meaj0gVbi0IMJR1FbUGrP20gaXT73 <newline>+y/Zl92zxlfgCOzJWgjl6W70viRu/obTo/3+NjN8D8WBOWBFM66M/ECuDmgFz2ZRt <newline>+hAAnZqzwcEAJQpKtT5MNYQlRJNiS1QuUYbKHsu3/mjX/hVTK7URDrBs8FmtISgoc <newline>+QIgfksILAAX/8sgCSqSqqcyZlpwvWOB94b67B9xfBHJcMTTD7F8t4D1kkCLm0ey4 <newline>+Lt1ZrtmhN79UNdxzMk+MBB4zsslG8dhcyFVQyWi9qLo2CQIDAQABo2MwYTAPBgNV <newline>+HRMBAf8EBTADAQH/MB0GA1UdDgQWBBR281Xh+qQ2+/CfXGJx7Tz0RzgQKzAfBgNV <newline>+HSMEGDAWgBR281Xh+qQ2+/CfXGJx7Tz0RzgQKzAOBgNVHQ8BAf8EBAMCAYYwDQYJ <newline>+KoZIhvcNAQEFBQADggIBAGbBxiPz2eAubl/oz66wsCVNK/g7WJtAJDday6sWSf+z <newline>+dXkzoS9tcBc0kf5nfo/sm+VegqlVHy/c1FEHEv6sFj4sNcZj/NwQ6w2jqtB8zNHQ <newline>+L1EuxBRa3ugZ4T7GzKQp5y6EqgYweHZUcyiYWTjgAA1i00J9IZ+uPTqM1fp3DRgr <newline>+Fg5fNuH8KrUwJM/gYwx7WBr+mbpCErGR9Hxo4sjoryzqyX6uuyo9DRXcNJW2GHSo <newline>+ag/HtPQTxORb7QrSpJdMKu0vbBKJPfEncKpqA1Ihn0CoZ1Dy81of398j9tx4TuaY <newline>+T1U6U+Pv8vSfx3zYWK8pIpe44L2RLrB27FcRz+8pRPPphXpgY+RdM4kX2TGq2tbz <newline>+GDVyz4crL2MjhF2EjD9XoIj8mZEoJmmZ1I+XRL6O1UixpCgp8RW04eWe3fiPpm8m <newline>+1wk8OhwRDqZsN/etRIcsKMfYdIKz0G9KV7s1KSegi+ghp4dkNl3M2Basx7InQJJV <newline>+OCiNUW7dFGdTbHFcJoRNdVq2fmBWqU2t+5sel/MN2dKXVHfaPRK34B7vCAas+YWH <newline>+6aLcr34YEoP9VhdBLtUpgn2Z9DH2canPLAEnpQW5qrJITirvn5NSUZU8UnOOVkwX <newline>+QMAJKOSLakhT2+zNVVXxxvjpoixMptEmX36vWkzaH6byHCx+rgIW0lbQL1dTR+iS <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustUniversal2[] = <newline>+    "sha1/Xk9ThoXdT57KX9wNRW99UbHcm3s="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICrjCCAjWgAwIBAgIQPLL0SAoA4v7rJDteYD7DazAKBggqhkjOPQQDAzCBmDEL <newline>+MAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsTMChj <newline>+KSAyMDA3IEdlb1RydXN0IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTE2 <newline>+MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0 <newline>+eSAtIEcyMB4XDTA3MTEwNTAwMDAwMFoXDTM4MDExODIzNTk1OVowgZgxCzAJBgNV <newline>+BAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykgMjAw <newline>+NyBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0BgNV <newline>+BAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBH <newline>+MjB2MBAGByqGSM49AgEGBSuBBAAiA2IABBWx6P0DFUPlrOuHNxFi79KDNlJ9RVcL <newline>+So17VDs6bl8VAsBQps8lL33KSLjHUGMcKiEIfJo22Av+0SbFWDEwKCXzXV2juLal <newline>+tJLtbCyf691DiaI8S0iRHVDsJt/WYC69IaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAO <newline>+BgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFBVfNVdRVfslsq0DafwBo/q+EVXVMAoG <newline>+CCqGSM49BAMDA2cAMGQCMGSWWaboCd6LuvpaiIjwH5HTRqjySkwCY/tsXzjbLkGT <newline>+qQ7mndwxHLKgpxgceeHHNgIwOlavmnRs9vuD4DPTCF+hnMJbn0bWtsuRBmOiBucz <newline>+rD6ogRLQy7rQkgu2npaqBA+K <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustPrimary_G2[] = <newline>+    "sha1/vb6nG6txV/nkddlU0rcngBqCJoI="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIID/jCCAuagAwIBAgIQFaxulBmyeUtB9iepwxgPHzANBgkqhkiG9w0BAQsFADCB <newline>+mDELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsT <newline>+MChjKSAyMDA4IEdlb1RydXN0IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25s <newline>+eTE2MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhv <newline>+cml0eSAtIEczMB4XDTA4MDQwMjAwMDAwMFoXDTM3MTIwMTIzNTk1OVowgZgxCzAJ <newline>+BgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykg <newline>+MjAwOCBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0 <newline>+BgNVBAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANziXmJYHTNXOTIz <newline>++uvLh4yn1ErdBojqZI4xmKU4kB6Yzy5jK/BGvESyiaHAKAxJcCGVn2TAppMSAmUm <newline>+hsalifD614SgcK9PGpc/BkTVyetyEH3kMSj7HGHmKAdEc5IiaacDiGydY8hS2pgn <newline>+5whMcD60yRLBxWeDXTPzAxHsatBT4tG6NmCUgLthY2xbF37fQJQeqw3CIShwiP/W <newline>+JmxsYAQlTlV+fe+/lEjetx3dcI0FX4ilm/LC7urRQEFtYjgdVgbFA0dRIBn8exAL <newline>+DmKudlW/X3e+PkkBUz2YJQN2JFodtNuJ6nnltrM7P7pMKEF/BqxqjsHQ9gUdfeZC <newline>+huOl1UcCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw <newline>+HQYDVR0OBBYEFMR5yo6hTgMdHNxr2zFblD4/MH8tMA0GCSqGSIb3DQEBCwUAA4IB <newline>+AQAtxRPPVoB7eni9n64smefv2t+UXglpp+duaIy9cr5HqQ6XErhK8WTTOd8lNNTB <newline>+zU6B8A8ExCSzNJbGpqow32hhc9f5joWJ7w5elShKKiePEI4ufIbEAp7aDHdlDkQN <newline>+kv39sxY2+hENHYwOB4lqKVb3cvTdFZx3NWZXqxNT2I7BQMXXExZacse3aQHEerGD <newline>+AWh9jUGhlBjBJVz88P6DAod8DQ3PLghcSkANPuyBYeYk28rgDi0Hsj5W3I31QYUH <newline>+SJsMC8tJP33st/3LjWeJGqvtux6jAAgIFyqCXDFdRootD4abdNlF+9RAsXqqaC2G <newline>+spki4cErx5z481+oghLrGREt <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustPrimary_G3[] = <newline>+    "sha1/nKmNAK90Dd2BgNITRaWLjy6UONY="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEKjCCAxKgAwIBAgIEOGPe+DANBgkqhkiG9w0BAQUFADCBtDEUMBIGA1UEChMLRW50cnVzdC5u <newline>+ZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9DUFNfMjA0OCBpbmNvcnAuIGJ5IHJlZi4gKGxp <newline>+bWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNV <newline>+BAMTKkVudHJ1c3QubmV0IENlcnRpZmljYXRpb24gQXV0aG9yaXR5ICgyMDQ4KTAeFw05OTEyMjQx <newline>+NzUwNTFaFw0yOTA3MjQxNDE1MTJaMIG0MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3 <newline>+d3d3LmVudHJ1c3QubmV0L0NQU18yMDQ4IGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTEl <newline>+MCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEGA1UEAxMqRW50cnVzdC5u <newline>+ZXQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgKDIwNDgpMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A <newline>+MIIBCgKCAQEArU1LqRKGsuqjIAcVFmQqK0vRvwtKTY7tgHalZ7d4QMBzQshowNtTK91euHaYNZOL <newline>+Gp18EzoOH1u3Hs/lJBQesYGpjX24zGtLA/ECDNyrpUAkAH90lKGdCCmziAv1h3edVc3kw37XamSr <newline>+hRSGlVuXMlBvPci6Zgzj/L24ScF2iUkZ/cCovYmjZy/Gn7xxGWC4LeksyZB2ZnuU4q941mVTXTzW <newline>+nLLPKQP5L6RQstRIzgUyVYr9smRMDuSYB3Xbf9+5CFVghTAp+XtIpGmG4zU/HoZdenoVve8AjhUi <newline>+VBcAkCaTvA5JaJG/+EfTnZVCwQ5N328mz8MYIWJmQ3DW1cAH4QIDAQABo0IwQDAOBgNVHQ8BAf8E <newline>+BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUVeSB0RGAvtiJuQijMfmhJAkWuXAwDQYJ <newline>+KoZIhvcNAQEFBQADggEBADubj1abMOdTmXx6eadNl9cZlZD7Bh/KM3xGY4+WZiT6QBshJ8rmcnPy <newline>+T/4xmf3IDExoU8aAghOY+rat2l098c5u9hURlIIM7j+VrxGrD9cv3h8Dj1csHsm7mhpElesYT6Yf <newline>+zX1XEC+bBAlahLVu2B064dae0Wx5XnkcFMXj0EyTO2U87d89vqbllRrDtRnDvV5bu/8j72gZyxKT <newline>+J1wDLW8w0B62GqzeWvfRqqgnpv55gcR5mTNXuhKwqeBCbJPKVt7+bYQLCIt+jerXmCHG8+c8eS9e <newline>+nNFMFY3h7CI3zJpDC5fcgJCNs2ebb0gIFVbPv/ErfF6adulZkMV8gzURZVE= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_2048[] = <newline>+    "sha1/VeSB0RGAvtiJuQijMfmhJAkWuXA="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEkTCCA3mgAwIBAgIERWtQVDANBgkqhkiG9w0BAQUFADCBsDELMAkGA1UEBhMC <newline>+VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xOTA3BgNVBAsTMHd3dy5lbnRydXN0 <newline>+Lm5ldC9DUFMgaXMgaW5jb3Jwb3JhdGVkIGJ5IHJlZmVyZW5jZTEfMB0GA1UECxMW <newline>+KGMpIDIwMDYgRW50cnVzdCwgSW5jLjEtMCsGA1UEAxMkRW50cnVzdCBSb290IENl <newline>+cnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA2MTEyNzIwMjM0MloXDTI2MTEyNzIw <newline>+NTM0MlowgbAxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMTkw <newline>+NwYDVQQLEzB3d3cuZW50cnVzdC5uZXQvQ1BTIGlzIGluY29ycG9yYXRlZCBieSBy <newline>+ZWZlcmVuY2UxHzAdBgNVBAsTFihjKSAyMDA2IEVudHJ1c3QsIEluYy4xLTArBgNV <newline>+BAMTJEVudHJ1c3QgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJ <newline>+KoZIhvcNAQEBBQADggEPADCCAQoCggEBALaVtkNC+sZtKm9I35RMOVcF7sN5EUFo <newline>+Nu3s/poBj6E4KPz3EEZmLk0eGrEaTsbRwJWIsMn/MYszA9u3g3s+IIRe7bJWKKf4 <newline>+4LlAcTfFy0cOlypowCKVYhXbR9n10Cv/gkvJrT7eTNuQgFA/CYqEAOwwCj0Yzfv9 <newline>+KlmaI5UXLEWeH25DeW0MXJj+SKfFI0dcXv1u5x609mhF0YaDW6KKjbHjKYD+JXGI <newline>+rb68j6xSlkuqUY3kEzEZ6E5Nn9uss2rVvDlUccp6en+Q3X0dgNmBu1kmwhH+5pPi <newline>+94DkZfs0Nw4pgHBNrziGLp5/V6+eF67rHMsoIV+2HNjnogQi+dPa2MsCAwEAAaOB <newline>+sDCBrTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zArBgNVHRAEJDAi <newline>+gA8yMDA2MTEyNzIwMjM0MlqBDzIwMjYxMTI3MjA1MzQyWjAfBgNVHSMEGDAWgBRo <newline>+kORnpKZTgMeGZqTx90tD+4S9bTAdBgNVHQ4EFgQUaJDkZ6SmU4DHhmak8fdLQ/uE <newline>+vW0wHQYJKoZIhvZ9B0EABBAwDhsIVjcuMTo0LjADAgSQMA0GCSqGSIb3DQEBBQUA <newline>+A4IBAQCT1DCw1wMgKtD5Y+iRDAUgqV8ZyntyTtSx29CW+1RaGSwMCPeyvIWonX9t <newline>+O1KzKtvn1ISMY/YPyyYBkVBs9F8U4pN0wBOeMDpQ47RgxRzwIkSNcUesyBrJ6Zua <newline>+AGAT/3B+XxFNSRuzFVJ7yVTav52Vr2ua2J7p8eRDjeIRRDq/r72DQnNSi6q7pynP <newline>+9WQcCk3RvKqsnyrQ/39/2n3qse0wJcGE2jTSW3iDVuycNsMm4hH2Z0kdkquM++v/ <newline>+eu6FSqdQgPCnXEqULl8FmTxSQeDNtGPPAUO6nIPcj2A781q0tHuu2guQOHXvgR1m <newline>+0vdXcDazv/wor3ElhVsT/h5/WrQ8 <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_EV[] = <newline>+    "sha1/ukKwgYhTiB2GY71MwF4I/upuu3c="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEPjCCAyagAwIBAgIESlOMKDANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMC <newline>+VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50 <newline>+cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3Qs <newline>+IEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVz <newline>+dCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIwHhcNMDkwNzA3MTcy <newline>+NTU0WhcNMzAxMjA3MTc1NTU0WjCBvjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVu <newline>+dHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwt <newline>+dGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0 <newline>+aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmlj <newline>+YXRpb24gQXV0aG9yaXR5IC0gRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK <newline>+AoIBAQC6hLZy254Ma+KZ6TABp3bqMriVQRrJ2mFOWHLP/vaCeb9zYQYKpSfYs1/T <newline>+RU4cctZOMvJyig/3gxnQaoCAAEUesMfnmr8SVycco2gvCoe9amsOXmXzHHfV1IWN <newline>+cCG0szLni6LVhjkCsbjSR87kyUnEO6fe+1R9V77w6G7CebI6C1XiUJgWMhNcL3hW <newline>+wcKUs/Ja5CeanyTXxuzQmyWC48zCxEXFjJd6BmsqEZ+pCm5IO2/b1BEZQvePB7/1 <newline>+U1+cPvQXLOZprE4yTGJ36rfo5bs0vBmLrpxR57d+tVOxMyLlbc9wPBr64ptntoP0 <newline>+jaWvYkxN4FisZDQSA/i2jZRjJKRxAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAP <newline>+BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqciZ60B7vfec7aVHUbI2fkBJmqzAN <newline>+BgkqhkiG9w0BAQsFAAOCAQEAeZ8dlsa2eT8ijYfThwMEYGprmi5ZiXMRrEPR9RP/ <newline>+jTkrwPK9T3CMqS/qF8QLVJ7UG5aYMzyorWKiAHarWWluBh1+xLlEjZivEtRh2woZ <newline>+Rkfz6/djwUAFQKXSt/S1mja/qYh2iARVBCuch38aNzx+LaUa2NSJXsq9rD1s2G2v <newline>+1fN2D807iDginWyTmsQ9v4IbZT+mD12q/OWyFcq1rca8PdCE6OoGcrBNOTJ4vz4R <newline>+nAuknZoh8/CbCzB428Hch0P+vGOaysXCHMnHjf87ElgI5rY97HosTvuDls4MPGmH <newline>+VHOkc8KT/1EQrBVUAdj8BbGJoX90g5pJ19xOe4pIb4tF9g== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_G2[] = <newline>+    "sha1/qzDTr0vY8WtYae5FaSnahLhzlIg="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIE2DCCBEGgAwIBAgIEN0rSQzANBgkqhkiG9w0BAQUFADCBwzELMAkGA1UEBhMC <newline>+VVMxFDASBgNVBAoTC0VudHJ1c3QubmV0MTswOQYDVQQLEzJ3d3cuZW50cnVzdC5u <newline>+ZXQvQ1BTIGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMc <newline>+KGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDE6MDgGA1UEAxMxRW50cnVzdC5u <newline>+ZXQgU2VjdXJlIFNlcnZlciBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05OTA1 <newline>+MjUxNjA5NDBaFw0xOTA1MjUxNjM5NDBaMIHDMQswCQYDVQQGEwJVUzEUMBIGA1UE <newline>+ChMLRW50cnVzdC5uZXQxOzA5BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5j <newline>+b3JwLiBieSByZWYuIChsaW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBF <newline>+bnRydXN0Lm5ldCBMaW1pdGVkMTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUg <newline>+U2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGdMA0GCSqGSIb3DQEBAQUA <newline>+A4GLADCBhwKBgQDNKIM0VBuJ8w+vN5Ex/68xYMmo6LIQaO2f55M28Qpku0f1BBc/ <newline>+I0dNxScZgSYMVHINiC3ZH5oSn7yzcdOAGT9HZnuMNSjSuQrfJNqc1lB5gXpa0zf3 <newline>+wkrYKZImZNHkmGw6AIr1NJtl+O3jEP/9uElY3KDegjlrgbEWGWG5VLbmQwIBA6OC <newline>+AdcwggHTMBEGCWCGSAGG+EIBAQQEAwIABzCCARkGA1UdHwSCARAwggEMMIHeoIHb <newline>+oIHYpIHVMIHSMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLRW50cnVzdC5uZXQxOzA5 <newline>+BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5jb3JwLiBieSByZWYuIChsaW1p <newline>+dHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVk <newline>+MTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRp <newline>+b24gQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMCmgJ6AlhiNodHRwOi8vd3d3LmVu <newline>+dHJ1c3QubmV0L0NSTC9uZXQxLmNybDArBgNVHRAEJDAigA8xOTk5MDUyNTE2MDk0 <newline>+MFqBDzIwMTkwNTI1MTYwOTQwWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAU8Bdi <newline>+E1U9s/8KAGv7UISX8+1i0BowHQYDVR0OBBYEFPAXYhNVPbP/CgBr+1CEl/PtYtAa <newline>+MAwGA1UdEwQFMAMBAf8wGQYJKoZIhvZ9B0EABAwwChsEVjQuMAMCBJAwDQYJKoZI <newline>+hvcNAQEFBQADgYEAkNwwAvpkdMKnCqV8IY00F6j7Rw7/JXyNEwr75Ji174z4xRAN <newline>+95K+8cPV1ZVqBLssziY2ZcgxxufuP+NXdYR6Ee9GTxj005i7qIcyunL2POI9n9cd <newline>+2cNgQ4xYDiKWL2KjLB+6rQXvqzJ4h6BUcxm1XAX5Uj5tLUUL9wqT6u0G+bI= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_SSL[] = <newline>+    "sha1/8BdiE1U9s/8KAGv7UISX8+1i0Bo="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEMjCCAxqgAwIBAgIBATANBgkqhkiG9w0BAQUFADB7MQswCQYDVQQGEwJHQjEb <newline>+MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow <newline>+GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmlj <newline>+YXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVowezEL <newline>+MAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE <newline>+BwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxITAfBgNVBAMM <newline>+GEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEBBQADggEP <newline>+ADCCAQoCggEBAL5AnfRu4ep2hxxNRUSOvkbIgwadwSr+GB+O5AL686tdUIoWMQua <newline>+BtDFcCLNSS1UY8y2bmhGC1Pqy0wkwLxyTurxFa70VJoSCsN6sjNg4tqJVfMiWPPe <newline>+3M/vg4aijJRPn2jymJBGhCfHdr/jzDUsi14HZGWCwEiwqJH5YZ92IFCokcdmtet4 <newline>+YgNW8IoaE+oxox6gmf049vYnMlhvB/VruPsUK6+3qszWY19zjNoFmag4qMsXeDZR <newline>+rOme9Hg6jc8P2ULimAyrL58OAd7vn5lJ8S3frHRNG5i1R8XlKdH5kBjHYpy+g8cm <newline>+ez6KJcfA3Z3mNWgQIJ2P2N7Sw4ScDV7oL8kCAwEAAaOBwDCBvTAdBgNVHQ4EFgQU <newline>+oBEKIz6W8Qfs4q8p74Klf9AwpLQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF <newline>+MAMBAf8wewYDVR0fBHQwcjA4oDagNIYyaHR0cDovL2NybC5jb21vZG9jYS5jb20v <newline>+QUFBQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmwwNqA0oDKGMGh0dHA6Ly9jcmwuY29t <newline>+b2RvLm5ldC9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDANBgkqhkiG9w0BAQUF <newline>+AAOCAQEACFb8AvCb6P+k+tZ7xkSAzk/ExfYAWMymtrwUSWgEdujm7l3sAg9g1o1Q <newline>+GE8mTgHj5rCl7r+8dFRBv/38ErjHT1r0iWAFf2C3BUrz9vHCv8S5dIa2LX1rzNLz <newline>+Rt0vxuBqw8M0Ayx9lt1awg6nCpnBBYurDC/zXDrPbDdVCYfeU0BsWO/8tqtlbgT2 <newline>+G9w84FoVxp7Z8VlIMCFlA2zs6SFz7JsDoeA3raAVGI/6ugLOpyypEBMs1OUIJqsi <newline>+l2D4kF501KKaU73yqWjgom7C12yxow+ev+to51byrvLjKzg6CYG1a4XXvi3tPxq3 <newline>+smPi9WIsgtRqAEFQ8TmDn5XpNpaYbg== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AAACertificateServices[] = <newline>+    "sha1/xDAoxdPjCAwQRIssd7okU5dgu/k="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGDCCAwCgAwIBAgIBATANBgkqhkiG9w0BAQUFADBlMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3 <newline>+b3JrMSEwHwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3QwHhcNMDAwNTMw <newline>+MTAzODMxWhcNMjAwNTMwMTAzODMxWjBlMQswCQYDVQQGEwJTRTEUMBIGA1UEChML <newline>+QWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSEwHwYD <newline>+VQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3QwggEiMA0GCSqGSIb3DQEBAQUA <newline>+A4IBDwAwggEKAoIBAQCWltQhSWDia+hBBwzexODcEyPNwTXH+9ZOEQpnXvUGW2ul <newline>+CDtbKRY654eyNAbFvAWlA3yCyykQruGIgb3WntP+LVbBFc7jJp0VLhD7Bo8wBN6n <newline>+tGO0/7Gcrjyvd7ZWxbWroulpOj0OM3kyP3CCkplhbY0wCI9xP6ZIVxn4JdxLZlyl <newline>+dI+Yrsj5wAYi56xz36Uu+1LcsRVlIPo1Zmne3yzxbrww2ywkEtvrNTVokMsAsJch <newline>+PXQhI2U0K7t4WaPW4XY5mqRJjox0r26kmqPZm9I4XJuiGMx1I4S+6+JNM3GOGvDC <newline>++Mcdoq0Dlyz4zyXG9rgkMbFjXZJ/Y/AlyVMuH79NAgMBAAGjgdIwgc8wHQYDVR0O <newline>+BBYEFJWxtPCUtr3H2tERCSG+wa9J/RB7MAsGA1UdDwQEAwIBBjAPBgNVHRMBAf8E <newline>+BTADAQH/MIGPBgNVHSMEgYcwgYSAFJWxtPCUtr3H2tERCSG+wa9J/RB7oWmkZzBl <newline>+MQswCQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFk <newline>+ZFRydXN0IFRUUCBOZXR3b3JrMSEwHwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENB <newline>+IFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBACxtZBsfzQ3duQH6lmM0MkhHma6X <newline>+7f1yFqZzR1r0693p9db7RcwpiURdv0Y5PejuvE1Uhh4dbOMXJ0PhiVYrqW9yTkkz <newline>+43J8KiOavD7/KCrto/8cI7pDVwlnTUtiBi34/2ydYB7YHEt9tTEv2dB8Xfjea4MY <newline>+eDdXL+gzB2ffHsdrKpV2ro9Xo/D0UrSpUwjP4E/TelOL/bscVjby/rK25Xa71SJl <newline>+pz/+0WatC7xrmYbvP33zGDLKe8bjq2RGlfgmadlVg3sslgf/WSxEo8bl6ancoWOA <newline>+WiFeIc9TVPC6b4nbqKqVz4vjccweGyBECMB6tkD9xOQ14R0WHNC8K47Wcdk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustClass1CARoot[] = <newline>+    "sha1/i9vXzKBoU0IW9MErJUT8Apyli0c="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIENjCCAx6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBvMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxJjAkBgNVBAsTHUFkZFRydXN0IEV4dGVybmFs <newline>+IFRUUCBOZXR3b3JrMSIwIAYDVQQDExlBZGRUcnVzdCBFeHRlcm5hbCBDQSBSb290 <newline>+MB4XDTAwMDUzMDEwNDgzOFoXDTIwMDUzMDEwNDgzOFowbzELMAkGA1UEBhMCU0Ux <newline>+FDASBgNVBAoTC0FkZFRydXN0IEFCMSYwJAYDVQQLEx1BZGRUcnVzdCBFeHRlcm5h <newline>+bCBUVFAgTmV0d29yazEiMCAGA1UEAxMZQWRkVHJ1c3QgRXh0ZXJuYWwgQ0EgUm9v <newline>+dDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALf3GjPm8gAELTngTlvt <newline>+H7xsD821+iO2zt6bETOXpClMfZOfvUq8k+0DGuOPz+VtUFrWlymUWoCwSXrbLpX9 <newline>+uMq/NzgtHj6RQa1wVsfwTz/oMp50ysiQVOnGXw94nZpAPA6sYapeFI+eh6FqUNzX <newline>+mk6vBbOmcZSccbNQYArHE504B4YCqOmoaSYYkKtMsE8jqzpPhNjfzp/haW+710LX <newline>+a0Tkx63ubUFfclpxCDezeWWkWaCUN/cALw3CknLa0Dhy2xSoRcRdKn23tNbE7qzN <newline>+E0S3ySvdQwAl+mG5aWpYIxG3pzOPVnVZ9c0p10a3CitlttNCbxWyuHv77+ldU9U0 <newline>+WicCAwEAAaOB3DCB2TAdBgNVHQ4EFgQUrb2YejS0Jvf6xCZU7wO94CTLVBowCwYD <newline>+VR0PBAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wgZkGA1UdIwSBkTCBjoAUrb2YejS0 <newline>+Jvf6xCZU7wO94CTLVBqhc6RxMG8xCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRU <newline>+cnVzdCBBQjEmMCQGA1UECxMdQWRkVHJ1c3QgRXh0ZXJuYWwgVFRQIE5ldHdvcmsx <newline>+IjAgBgNVBAMTGUFkZFRydXN0IEV4dGVybmFsIENBIFJvb3SCAQEwDQYJKoZIhvcN <newline>+AQEFBQADggEBALCb4IUlwtYj4g+WBpKdQZic2YR5gdkeWxQHIzZlj7DYd7usQWxH <newline>+YINRsPkyPef89iYTx4AWpb9a/IfPeHmJIZriTAcKhjW88t5RxNKWt9x+Tu5w/Rw5 <newline>+6wwCURQtjr0W4MHfRnXnJK3s9EK0hZNwEGe6nQY1ShjTK3rMUUKhemPR5ruhxSvC <newline>+Nr4TDea9Y355e6cJDUCrat2PisP29owaQgVR1EX1n6diIWgVIEM8med8vSTYqZEX <newline>+c4g/VhsxOBi0cQ+azcgOno4uG+GMmIPLHzHxREzGBHNJdmAPx/i9F4BrLunMTA5a <newline>+mnkPIAou1Z5jJh5VkpTYghdae9C8x49OhgQ= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustExternalCARoot[] = <newline>+    "sha1/T5x9IXmcrQ7YuQxXnxoCmeeQ84c="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEFTCCAv2gAwIBAgIBATANBgkqhkiG9w0BAQUFADBkMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3 <newline>+b3JrMSAwHgYDVQQDExdBZGRUcnVzdCBQdWJsaWMgQ0EgUm9vdDAeFw0wMDA1MzAx <newline>+MDQxNTBaFw0yMDA1MzAxMDQxNTBaMGQxCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtB <newline>+ZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQIE5ldHdvcmsxIDAeBgNV <newline>+BAMTF0FkZFRydXN0IFB1YmxpYyBDQSBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOC <newline>+AQ8AMIIBCgKCAQEA6Rowj4OIFMEg2Dybjxt+A3S72mnTRqX4jsIMEZBRpS9mVEBV <newline>+6tsfSlbunyNu9DnLoblv8n75XYcmYZ4c+OLspoH4IcUkzBEMP9smcnrHAZcHF/nX <newline>+GCwwfQ56HmIexkvA/X1id9NEHif2P0tEs7c42TkfYNVRknMDtABp4/MUTu7R3AnP <newline>+dzRGULD4EfL+OHn3Bzn+UZKXC1sIXzSGAa2Il+tmzV7R/9x98oTaunet3IAIx6eH <newline>+1lWfl2royBFkuucZKT8Rs3iQhCBSWxHveNCD9tVIkNAwHM+A+WD+eeSI8t0A65RF <newline>+62WUaUC6wNW0uLp9BBGo6zEFlpROWCGOn9Bg/QIDAQABo4HRMIHOMB0GA1UdDgQW <newline>+BBSBPjfYkrAfd59ctKtzquf2NGAv+jALBgNVHQ8EBAMCAQYwDwYDVR0TAQH/BAUw <newline>+AwEB/zCBjgYDVR0jBIGGMIGDgBSBPjfYkrAfd59ctKtzquf2NGAv+qFopGYwZDEL <newline>+MAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQLExRBZGRU <newline>+cnVzdCBUVFAgTmV0d29yazEgMB4GA1UEAxMXQWRkVHJ1c3QgUHVibGljIENBIFJv <newline>+b3SCAQEwDQYJKoZIhvcNAQEFBQADggEBAAP3FUr4JNojVhaTdt02KLmuG7jD8WS6 <newline>+IBh4lSknVwW8fCr0uVFV2ocC3g8WFzH4qnkuCRO7r7IgGRLlk/lL+YPoRNWyQSW/ <newline>+iHVv/xD8SlTQX/D67zZzfRs2RcYhbbQVuE7PnFylPVoAjgbjPGsye/Kf8Lb93/Ao <newline>+GEjwxrzQvzSAlsJKsW2Ox5BF3i9nrEUEo3rcVZLJR2bYGozH7ZxOmuASu7VqTITh <newline>+4SINhwBk/ox9Yjllpu9CtoAlEmEBqCQTcAARJl/6NVDFSMwGR+gn2HCNX2TmoUQm <newline>+XiLsks3/QppEIW1cxeMiHV9HEufOX1362KqxMy3ZdvJOOjMMK7MtkAY= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustPublicCARoot[] = <newline>+    "sha1/qFdl1ugyyMUZY3Namhd0OoHf7i4="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEHjCCAwagAwIBAgIBATANBgkqhkiG9w0BAQUFADBnMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3 <newline>+b3JrMSMwIQYDVQQDExpBZGRUcnVzdCBRdWFsaWZpZWQgQ0EgUm9vdDAeFw0wMDA1 <newline>+MzAxMDQ0NTBaFw0yMDA1MzAxMDQ0NTBaMGcxCzAJBgNVBAYTAlNFMRQwEgYDVQQK <newline>+EwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQIE5ldHdvcmsxIzAh <newline>+BgNVBAMTGkFkZFRydXN0IFF1YWxpZmllZCBDQSBSb290MIIBIjANBgkqhkiG9w0B <newline>+AQEFAAOCAQ8AMIIBCgKCAQEA5B6a/twJWoekn0e+EV+vhDTbYjx5eLfpMLXsDBwq <newline>+xBb/4Oxx64r1EW7tTw2R0hIYLUkVAcKkIhPHEWT/IhKauY5cLwjPcWqzZwFZ8V1G <newline>+87B4pfYOQnrjfxvM0PC3KP0q6p6zsLkEqv32x7SxuCqg+1jxGaBvcCV+PmlKfw8i <newline>+2O+tCBGaKZnhqkRFmhJePp1tUvznoD1oL/BLcHwTOK28FSXx1s6rosAx1i+f4P8U <newline>+WfyEk9mHfExUE+uf0S0R+Bg6Ot4l2ffTQO2kBhLEO+GRwVY18BTcZTYJbqukB8c1 <newline>+0cIDMzZbdSZtQvESa0NvS3GU+jQd7RNuyoB/mC9suWXY6QIDAQABo4HUMIHRMB0G <newline>+A1UdDgQWBBQ5lYtii1zJ1IC6WA+XPxUIQ8yYpzALBgNVHQ8EBAMCAQYwDwYDVR0T <newline>+AQH/BAUwAwEB/zCBkQYDVR0jBIGJMIGGgBQ5lYtii1zJ1IC6WA+XPxUIQ8yYp6Fr <newline>+pGkwZzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQL <newline>+ExRBZGRUcnVzdCBUVFAgTmV0d29yazEjMCEGA1UEAxMaQWRkVHJ1c3QgUXVhbGlm <newline>+aWVkIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBABmrder4i2VhlRO6aQTv <newline>+hsoToMeqT2QbPxj2qC0sVY8FtzDqQmodwCVRLae/DLPt7wh/bDxGGuoYQ992zPlm <newline>+hpwsaPXpF/gxsxjE1kh9I0xowX67ARRvxdlu3rsEQmr49lx95dr6h+sNNVJn0J6X <newline>+dgWTP5XHAeZpVTh/EGGZyeNfpso+gmNIquIISD6q8rKFYqa0p9m9N5xotS1WfbC3 <newline>+P6CxB9bpT9zeRXEwMn8bLgn5v1Kh7sKAPgZcLlVAwRv1cEWw3F369nJad9Jjzc9Y <newline>+iQBCYz95OdBEsIJuQRno3eDBiFrRHnGTHyQwdOUeqN48Jzd/g66ed8/wMLH/S5no <newline>+xqE= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustQualifiedCARoot[] = <newline>+    "sha1/vOS3IxJVmOVjQRkcUOS2R8J2Bdc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEHTCCAwWgAwIBAgIQToEtioJl4AsC7j41AkblPTANBgkqhkiG9w0BAQUFADCB <newline>+gTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G <newline>+A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxJzAlBgNV <newline>+BAMTHkNPTU9ETyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNjEyMDEwMDAw <newline>+MDBaFw0yOTEyMzEyMzU5NTlaMIGBMQswCQYDVQQGEwJHQjEbMBkGA1UECBMSR3Jl <newline>+YXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFDT01P <newline>+RE8gQ0EgTGltaXRlZDEnMCUGA1UEAxMeQ09NT0RPIENlcnRpZmljYXRpb24gQXV0 <newline>+aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0ECLi3LjkRv3 <newline>+UcEbVASY06m/weaKXTuH+7uIzg3jLz8GlvCiKVCZrts7oVewdFFxze1CkU1B/qnI <newline>+2GqGd0S7WWaXUF601CxwRM/aN5VCaTwwxHGzUvAhTaHYujl8HJ6jJJ3ygxaYqhZ8 <newline>+Q5sVW7euNJH+1GImGEaaP+vB+fGQV+useg2L23IwambV4EajcNxo2f8ESIl33rXp <newline>++2dtQem8Ob0y2WIC8bGoPW43nOIv4tOiJovGuFVDiOEjPqXSJDlqR6sA1KGzqSX+ <newline>+DT+nHbrTUcELpNqsOO9VUCQFZUaTNE8tja3G1CEZ0o7KBWFxB3NH5YoZEr0ETc5O <newline>+nKVIrLsm9wIDAQABo4GOMIGLMB0GA1UdDgQWBBQLWOWLxkwVN6RAqTCpIb5HNlpW <newline>+/zAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zBJBgNVHR8EQjBAMD6g <newline>+PKA6hjhodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9DZXJ0aWZpY2F0aW9u <newline>+QXV0aG9yaXR5LmNybDANBgkqhkiG9w0BAQUFAAOCAQEAPpiem/Yb6dc5t3iuHXIY <newline>+SdOH5EOC6z/JqvWote9VfCFSZfnVDeFs9D6Mk3ORLgLETgdxb8CPOGEIqB6BCsAv <newline>+IC9Bi5HcSEW88cbeunZrM8gALTFGTO3nnc+IlP8zwFboJIYmuNg4ON8qa90SzMc/ <newline>+RxdMosIGlgnW2/4/PEZB31jiVg88O8EckzXZOFKs7sjsLjBOlDW0JB9LeGna8gI4 <newline>+zJVSk/BwJVmcIGfE7vmLV2H0knZ9P4SNVbfo5azV8fUZVqZa+5Acr5Pr5RzUZ5dd <newline>+BA6+C4OmF4O5MBKgxTMVBbkN+8cFduPYSo38NBejxiEovjBFMR7HeL5YYTisO+IB <newline>+ZQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_COMODOCertificationAuthority[] = <newline>+    "sha1/EeSR0cnkwOuazs9zVF3h8agwPsM="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEPzCCAyegAwIBAgIBATANBgkqhkiG9w0BAQUFADB+MQswCQYDVQQGEwJHQjEb <newline>+MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow <newline>+GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEkMCIGA1UEAwwbU2VjdXJlIENlcnRp <newline>+ZmljYXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVow <newline>+fjELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G <newline>+A1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxJDAiBgNV <newline>+BAMMG1NlY3VyZSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEB <newline>+BQADggEPADCCAQoCggEBAMBxM4KK0HDrc4eCQNUd5MvJDkKQ+d40uaG6EfQlhfPM <newline>+cm3ye5drswfxdySRXyWP9nQ95IDC+DwN879A6vfIUtFyb+/Iq0G4bi4XKpVpDM3S <newline>+HpR7LZQdqnXXs5jLrLxkU0C8j6ysNstcrbvd4JQX7NFc0L/vpZXJkMWwrPsbQ996 <newline>+CF23uPJAGysnnlDOXmWCiIxe004MeuoIkbY2qitC++rCoznl2yY4rYsK7hljxxwk <newline>+3wN42ubqwUcaCwtGCd0C/N7Lh1/XMGNooa7cMqG6vv5Eq2i2pRcV/b3Vp6ea5EQz <newline>+6YiO/O1R65NxTq0B50SOqy3LqP4BSUjwwN3HaNiS/j0CAwEAAaOBxzCBxDAdBgNV <newline>+HQ4EFgQUPNiTiMLAggnMAZkGkyDpnnAJY08wDgYDVR0PAQH/BAQDAgEGMA8GA1Ud <newline>+EwEB/wQFMAMBAf8wgYEGA1UdHwR6MHgwO6A5oDeGNWh0dHA6Ly9jcmwuY29tb2Rv <newline>+Y2EuY29tL1NlY3VyZUNlcnRpZmljYXRlU2VydmljZXMuY3JsMDmgN6A1hjNodHRw <newline>+Oi8vY3JsLmNvbW9kby5uZXQvU2VjdXJlQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmww <newline>+DQYJKoZIhvcNAQEFBQADggEBAIcBbSMdflsXfcFhMs+P5/OKlFlm4J4oqF7Tt/Q0 <newline>+5qo5spcWxYJvMqTpjOev/e/C6LlLqqP05tqNZSH7uoDrJiiFGv45jN5bBAS0VPmj <newline>+Z55B+glSzAVIqMk/IQQezkhr/IXownuvf7fM+F86/TXGDe+X3EyrEeFryzHRbPtI <newline>+gKvcnDe4IRRLDXE97IMzbtFuMhbsmMcWi1mmNKsFVy2T96oTy9IT4rcuO81rUBcJ <newline>+aD61JlfutuC23bkpgHl9j6PwpCikFcSF9CfUa7/lXORlAnZUtOM3ZiTTGWHIUhDl <newline>+izeauan5Hb/qmZJhlv8BzaFfDbxxvA6sCx1HRR3B7Hzs/Sk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_SecureCertificateServices[] = <newline>+    "sha1/PLQahC71XPIaPaVKyNG+OQh2N7w="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEQzCCAyugAwIBAgIBATANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJHQjEb <newline>+MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow <newline>+GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDElMCMGA1UEAwwcVHJ1c3RlZCBDZXJ0 <newline>+aWZpY2F0ZSBTZXJ2aWNlczAeFw0wNDAxMDEwMDAwMDBaFw0yODEyMzEyMzU5NTla <newline>+MH8xCzAJBgNVBAYTAkdCMRswGQYDVQQIDBJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAO <newline>+BgNVBAcMB1NhbGZvcmQxGjAYBgNVBAoMEUNvbW9kbyBDQSBMaW1pdGVkMSUwIwYD <newline>+VQQDDBxUcnVzdGVkIENlcnRpZmljYXRlIFNlcnZpY2VzMIIBIjANBgkqhkiG9w0B <newline>+AQEFAAOCAQ8AMIIBCgKCAQEA33FvNlhTWvI2VFeAxHQIIO0Yfyod5jWaHiWsnOWW <newline>+fnJSoBVC21ndZHoa0Lh73TkVvFVIxO06AOoxEbrycXQaZ7jPM8yoMa+j49d/vzMt <newline>+TGo87IvDktJTdyR0nAducPy9C1t2ul/y/9c3S0pgePfw+spwtOpZqqPOSC+pw7IL <newline>+fhdyFgymBwwbOM/JYrc/oJOlh0Hyt3BAd9i+FHzjqMB6juljatEPmsbS9Is6FARW <newline>+1O24zG71++IsWL1/T2sr92AkWCTOJu80kTrV44HQsvAEAtdbtz6SrGsSivnkBbA7 <newline>+kUlcsutT6vifR4buv5XAwAaf0lteERv0xwQ1KdJVXOTt6wIDAQABo4HJMIHGMB0G <newline>+A1UdDgQWBBTFe1i97doladL3WRaoszLAeydb9DAOBgNVHQ8BAf8EBAMCAQYwDwYD <newline>+VR0TAQH/BAUwAwEB/zCBgwYDVR0fBHwwejA8oDqgOIY2aHR0cDovL2NybC5jb21v <newline>+ZG9jYS5jb20vVHJ1c3RlZENlcnRpZmljYXRlU2VydmljZXMuY3JsMDqgOKA2hjRo <newline>+dHRwOi8vY3JsLmNvbW9kby5uZXQvVHJ1c3RlZENlcnRpZmljYXRlU2VydmljZXMu <newline>+Y3JsMA0GCSqGSIb3DQEBBQUAA4IBAQDIk4E7ibSvuIQSTI3S8NtwuleGFTQQuS9/ <newline>+HrCoiWChisJ3DFBKmwCL2Iv0QeLQg4pKHBQGsKNoBXAxMKdTmw7pSqBYaWcOrp32 <newline>+pSxBvzwGa+RZzG0Q8ZZvH9/0BAKkn0U+yNj6NkZEUD+Cl5EfKNsYEYwq5GWDVxIS <newline>+jBc/lDb+XbDABHcTuPQV1T84zJQ6VdCsmPW6AF/ghhmBeC8owH7TzEIK9a5QoNE+ <newline>+xqFx7D+gIIxmOom0jtTYsU0lR+4viMi14QVFwL4Ucd56/Y57fU0IlqUSc/Atyjcn <newline>+dBInTMu2l+nZrghtWjlA3QVHdWpaIbOjGM9O9y5Xt5hwXsjEeLBi <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_TrustedCertificateServices[] = <newline>+    "sha1//nLI678ML7sOJhOTkzwsqY3cJJQ="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEXjCCA0agAwIBAgIQRL4Mi1AAIbQR0ypoBqmtaTANBgkqhkiG9w0BAQUFADCB <newline>+kzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xGzAZBgNVBAMTElVUTiAtIERBVEFDb3Jw <newline>+IFNHQzAeFw05OTA2MjQxODU3MjFaFw0xOTA2MjQxOTA2MzBaMIGTMQswCQYDVQQG <newline>+EwJVUzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYD <newline>+VQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cu <newline>+dXNlcnRydXN0LmNvbTEbMBkGA1UEAxMSVVROIC0gREFUQUNvcnAgU0dDMIIBIjAN <newline>+BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3+5YEKIrblXEjr8uRgnn4AgPLit6 <newline>+E5Qbvfa2gI5lBZMAHryv4g+OGQ0SR+ysraP6LnD43m77VkIVni5c7yPeIbkFdicZ <newline>+D0/Ww5y0vpQZY/KmEQrrU0icvvIpOxboGqBMpsn0GFlowHDyUwDAXlCCpVZvNvlK <newline>+4ESGoE1O1kduSUrLZ9emxAW5jh70/P/N5zbgnAVssjMiFdC04MwXwLLA9P4yPykq <newline>+lXvY8qdOD1R8oQ2AswkDwf9c3V6aPryuvEeKaq5xyh+xKrhfQgUL7EYw0XILyulW <newline>+bfXv33i+Ybqypa4ETLyorGkVl73v67SMvzX41MPRKA5cOp9wGDMgd8SirwIDAQAB <newline>+o4GrMIGoMAsGA1UdDwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRT <newline>+MtGzz3/64PGgXYVOktKeRR20TzA9BgNVHR8ENjA0MDKgMKAuhixodHRwOi8vY3Js <newline>+LnVzZXJ0cnVzdC5jb20vVVROLURBVEFDb3JwU0dDLmNybDAqBgNVHSUEIzAhBggr <newline>+BgEFBQcDAQYKKwYBBAGCNwoDAwYJYIZIAYb4QgQBMA0GCSqGSIb3DQEBBQUAA4IB <newline>+AQAnNZcAiosovcYzMB4p/OL31ZjUQLtgyr+rFywJNn9Q+kHcrpY6CiM+iVnJowft <newline>+Gzet/Hy+UUla3joKVAgWRcKZsYfNjGjgaQPpxE6YsjuMFrMOoAyYUJuTqXAJyCyj <newline>+j98C5OBxOvG0I3KgqgHf35g+FFCgMSa9KOlaMCZ1+XtgHI3zzVAmbQQnmt/VDUVH <newline>+KWss5nbZqSl9Mt3JNjy9rjXxEZ4du5A/EkdOjtd+D2JzHVImOBwYSf0wdJrE5SIv <newline>+2MCN7ZF6TACPcn9d2t0bi0Vr591pl6jFVkwPDPafepE39peC4N1xaf92P2BNPM/3 <newline>+mfnGV/TJVTl4uix5yaaIK/QI <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNDATACorpSGC[] = <newline>+    "sha1/UzLRs89/+uDxoF2FTpLSnkUdtE8="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEojCCA4qgAwIBAgIQRL4Mi1AAJLQR0zYlJWfJiTANBgkqhkiG9w0BAQUFADCB <newline>+rjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xNjA0BgNVBAMTLVVUTi1VU0VSRmlyc3Qt <newline>+Q2xpZW50IEF1dGhlbnRpY2F0aW9uIGFuZCBFbWFpbDAeFw05OTA3MDkxNzI4NTBa <newline>+Fw0xOTA3MDkxNzM2NThaMIGuMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAV <newline>+BgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5l <newline>+dHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTE2MDQGA1UE <newline>+AxMtVVROLVVTRVJGaXJzdC1DbGllbnQgQXV0aGVudGljYXRpb24gYW5kIEVtYWls <newline>+MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsjmFpPJ9q0E7YkY3rs3B <newline>+YHW8OWX5ShpHornMSMxqmNVNNRm5pELlzkniii8efNIxB8dOtINknS4p1aJkxIW9 <newline>+hVE1eaROaJB7HHqkkqgX8pgV8pPMyaQylbsMTzC9mKALi+VuG6JG+ni8om+rWV6l <newline>+L8/K2m2qL+usobNqqrcuZzWLeeEeaYji5kbNoKXqvgvOdjp6Dpvq/NonWz1zHyLm <newline>+SGHGTPNpsaguG7bUMSAsvIKKjqQOpdeJQ/wWWq8dcdcRWdq6hw2v+vPhwvCkxWeM <newline>+1tZUOt4KpLoDd7NlyP0e03RiqhjKaJMeoYV+9Udly/hNVyh00jT/MLbu9mIwFIws <newline>+6wIDAQABo4G5MIG2MAsGA1UdDwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud <newline>+DgQWBBSJgmd9xJ0mcABLtFBIfN49rgRufTBYBgNVHR8EUTBPME2gS6BJhkdodHRw <newline>+Oi8vY3JsLnVzZXJ0cnVzdC5jb20vVVROLVVTRVJGaXJzdC1DbGllbnRBdXRoZW50 <newline>+aWNhdGlvbmFuZEVtYWlsLmNybDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUH <newline>+AwQwDQYJKoZIhvcNAQEFBQADggEBALFtYV2mGn98q0rkMPxTbyUkxsrt4jFcKw7u <newline>+7mFVbwQ+zznexRtJlOTrIEy05p5QLnLZjfWqo7NK2lYcYJeA3IKirUq9iiv/Cwm0 <newline>+xtcgBEXkzYABurorbs6q15L+5K/r9CYdFip/bDCVNy8zEqx/3cfREYxRmLLQo5HQ <newline>+rfafnoOTHh1CuEava2bwm3/q4wMC5QJRwarVNZ1yQAOJujEdxRBoUp7fooXFXAim <newline>+eOZTT7Hot9MUnpOmw2TjrH5xzbyf6QMbzPvprDHBr3wVdAKZw7JHpsIyYdfHb0gk <newline>+USeh1YdV8nuPmD0Wnu51tvjQjvLzxq4oW6fw8zYX/MMF08oDSlQ= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNUSERFirstClientAuthenticationandEmail[] = <newline>+    "sha1/iYJnfcSdJnAAS7RQSHzePa4Ebn0="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEdDCCA1ygAwIBAgIQRL4Mi1AAJLQR0zYq/mUK/TANBgkqhkiG9w0BAQUFADCB <newline>+lzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHzAdBgNVBAMTFlVUTi1VU0VSRmlyc3Qt <newline>+SGFyZHdhcmUwHhcNOTkwNzA5MTgxMDQyWhcNMTkwNzA5MTgxOTIyWjCBlzELMAkG <newline>+A1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEe <newline>+MBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8v <newline>+d3d3LnVzZXJ0cnVzdC5jb20xHzAdBgNVBAMTFlVUTi1VU0VSRmlyc3QtSGFyZHdh <newline>+cmUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCx98M4P7Sof885glFn <newline>+0G2f0v9Y8+efK+wNiVSZuTiZFvfgIXlIwrthdBKWHTxqctU8EGc6Oe0rE81m65UJ <newline>+M6Rsl7HoxuzBdXmcRl6Nq9Bq/bkqVRcQVLMZ8Jr28bFdtqdt++BxF2uiiPsA3/4a <newline>+MXcMmgF6sTLjKwEHOG7DpV4jvEWbe1DByTCP2+UretNb+zNAHqDVmBe8i4fDidNd <newline>+oI6yqqr2jmmIBsX6iSHzCJ1pLgkzmykNRg+MzEk0sGlRvfkGzWitZky8PqxhvQqI <newline>+DsjfPe58BEydCl5rkdbux+0ojatNh4lz0G6k0B4WixThdkQDf2Os5M1JnMWS9Ksy <newline>+oUhbAgMBAAGjgbkwgbYwCwYDVR0PBAQDAgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYD <newline>+VR0OBBYEFKFyXyYbKJhDlV0HN9WFlp1L0sNFMEQGA1UdHwQ9MDswOaA3oDWGM2h0 <newline>+dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4tVVNFUkZpcnN0LUhhcmR3YXJlLmNy <newline>+bDAxBgNVHSUEKjAoBggrBgEFBQcDAQYIKwYBBQUHAwUGCCsGAQUFBwMGBggrBgEF <newline>+BQcDBzANBgkqhkiG9w0BAQUFAAOCAQEARxkP3nTGmZev/K0oXnWO6y1n7k57K9cM <newline>+//bey1WiCuFMVGWTYGufEpytXoMs61quwOQt9ABjHbjAbPLPSbtNk28Gpgoiskli <newline>+CE7/yMgUsogWXecB5BKV5UU0s4tpvc+0hY91UZ59Ojg6FEgSxvunOxqNDYJAB+gE <newline>+CJChicsZUN/KHAG8HQQZexB2lzvukJDKxA4fFm517zP4029bHpbj4HR3dHuKom4t <newline>+3XbWOTCC8KucUvIqx69JXn7HaOWCgchqJ/kniCrVWFCVH/A7HFe7fRQ5YiuayZSS <newline>+KqMiDP+JJn1fIytH1xUdqWqeUQ0qUZ6B+dQ7XnASfxAynB67nfhmqA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNUSERFirstHardware[] = <newline>+    "sha1/oXJfJhsomEOVXQc31YWWnUvSw0U="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEZjCCA06gAwIBAgIQRL4Mi1AAJLQR0zYt4LNfGzANBgkqhkiG9w0BAQUFADCB <newline>+lTELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHTAbBgNVBAMTFFVUTi1VU0VSRmlyc3Qt <newline>+T2JqZWN0MB4XDTk5MDcwOTE4MzEyMFoXDTE5MDcwOTE4NDAzNlowgZUxCzAJBgNV <newline>+BAYTAlVTMQswCQYDVQQIEwJVVDEXMBUGA1UEBxMOU2FsdCBMYWtlIENpdHkxHjAc <newline>+BgNVBAoTFVRoZSBVU0VSVFJVU1QgTmV0d29yazEhMB8GA1UECxMYaHR0cDovL3d3 <newline>+dy51c2VydHJ1c3QuY29tMR0wGwYDVQQDExRVVE4tVVNFUkZpcnN0LU9iamVjdDCC <newline>+ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM6qgT+jo2F4qjEAVZURnicP <newline>+HxzfOpuCaDDASmEd8S8O+r5596Uj71VRloTN2+O5bj4x2AogZ8f02b+U60cEPgLO <newline>+KqJdhwQJ9jCdGIqXsqoc/EHSoTbL+z2RuufZcDX65OeQw5ujm9M89RKZd7G3CeBo <newline>+5hy485RjiGpq/gt2yb70IuRnuasaXnfBhQfdDWy/7gbHd2pBnqcP1/vulBe3/IW+ <newline>+pKvEHDHd17bR5PDv3xaPslKT16HUiaEHLr/hARJCHhrh2JU022R5KP+6LhHC5ehb <newline>+kkj7RwvCbNqtMoNB86XlQXD9ZZBt+vpRxPm9lisZBCzTbafc8H9vg2XiaquHhnUC <newline>+AwEAAaOBrzCBrDALBgNVHQ8EBAMCAcYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4E <newline>+FgQU2u1kdBScFDyr3ZmpvVsoTYs8ydgwQgYDVR0fBDswOTA3oDWgM4YxaHR0cDov <newline>+L2NybC51c2VydHJ1c3QuY29tL1VUTi1VU0VSRmlyc3QtT2JqZWN0LmNybDApBgNV <newline>+HSUEIjAgBggrBgEFBQcDAwYIKwYBBQUHAwgGCisGAQQBgjcKAwQwDQYJKoZIhvcN <newline>+AQEFBQADggEBAAgfUrE3RHjb/c652pWWmKpVZIC1WkDdIaXFwfNfLEzIR1pp6ujw <newline>+NTX00CXzyKakh0q9G7FzCL3Uw8q2NbtZhncxzaeAFK4T7/yxSPlrJSUtUbYsbUXB <newline>+mMiKVl0+7kNOPmsnjtA6S4ULX9Ptaqd1y9Fahy85dRNacrACgZ++8A+EVCBibGnU <newline>+4U3GDZlDAQ0Slox4nb9QorFEqmrPF3rPbw/U+CRVX/A0FklmPlBGyWNxODFiuGK5 <newline>+81OtbLUrohKqGU8J2l7nk8aOFAj+8DCAGKCGhU3IfdeLA/5u1fedFqySLKAj5ZyR <newline>+Uh+U3xeUc8OzwcFxBSAAeL0TUh2oPs0AH8g= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNUSERFirstObject[] = <newline>+    "sha1/2u1kdBScFDyr3ZmpvVsoTYs8ydg="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICWjCCAcMCAgGlMA0GCSqGSIb3DQEBBAUAMHUxCzAJBgNVBAYTAlVTMRgwFgYD <newline>+VQQKEw9HVEUgQ29ycG9yYXRpb24xJzAlBgNVBAsTHkdURSBDeWJlclRydXN0IFNv <newline>+bHV0aW9ucywgSW5jLjEjMCEGA1UEAxMaR1RFIEN5YmVyVHJ1c3QgR2xvYmFsIFJv <newline>+b3QwHhcNOTgwODEzMDAyOTAwWhcNMTgwODEzMjM1OTAwWjB1MQswCQYDVQQGEwJV <newline>+UzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMScwJQYDVQQLEx5HVEUgQ3liZXJU <newline>+cnVzdCBTb2x1dGlvbnMsIEluYy4xIzAhBgNVBAMTGkdURSBDeWJlclRydXN0IEds <newline>+b2JhbCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCVD6C28FCc6HrH <newline>+iM3dFw4usJTQGz0O9pTAipTHBsiQl8i4ZBp6fmw8U+E3KHNgf7KXUwefU/ltWJTS <newline>+r41tiGeA5u2ylc9yMcqlHHK6XALnZELn+aks1joNrI1CqiQBOeacPwGFVw1Yh0X4 <newline>+04Wqk2kmhXBIgD8SFcd5tB8FLztimQIDAQABMA0GCSqGSIb3DQEBBAUAA4GBAG3r <newline>+GwnpXtlR22ciYaQqPEh346B8pt5zohQDhT37qw4wxYMWM4ETCJ57NE7fQMh017l9 <newline>+3PR2VX2bY1QY6fDq81yx2YtCHrnAlU66+tXifPVoYb+O7AWXX1uw16OFNMQkpw0P <newline>+lZPvy5TYnh+dXIVtx6quTx8itc2VrbqnzPmrC3p/ <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GTECyberTrustGlobalRoot[] = <newline>+    "sha1/WXkS3mF11m/EI7d3E3THlt5viHI="; <newline>+ <newline>+#endif // NET_BASE_PUBLIC_KEY_HASHES_ <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#include "net/base/transport_security_state.h" <newline>+ <newline>+#if defined(USE_OPENSSL) <newline>+#include <openssl/ecdsa.h> <newline>+#include <openssl/ssl.h> <newline>+#else  // !defined(USE_OPENSSL) <newline>+#include <cryptohi.h> <newline>+#include <hasht.h> <newline>+#include <keyhi.h> <newline>+#include <pk11pub.h> <newline>+#include <nspr.h> <newline>+#endif <newline>+ <newline>+#include <algorithm> <newline>+#include <utility> <newline>+ <newline>+#include "base/base64.h" <newline>+#include "base/json/json_reader.h" <newline>+#include "base/json/json_writer.h" <newline>+#include "base/logging.h" <newline>+#include "base/memory/scoped_ptr.h" <newline>+#include "base/metrics/histogram.h" <newline>+#include "base/sha1.h" <newline>+#include "base/string_number_conversions.h" <newline>+#include "base/string_tokenizer.h" <newline>+#include "base/string_util.h" <newline>+#include "base/time.h" <newline>+#include "base/utf_string_conversions.h" <newline>+#include "base/values.h" <newline>+#include "crypto/sha2.h" <newline>+#include "googleurl/src/gurl.h" <newline>+#include "net/base/asn1_util.h" <newline>+#include "net/base/dns_util.h" <newline>+#include "net/base/public_key_hashes.h" <newline>+#include "net/base/ssl_info.h" <newline>+#include "net/base/x509_certificate.h" <newline>+#include "net/http/http_util.h" <newline>+ <newline>+#if defined(USE_OPENSSL) <newline>+#include "crypto/openssl_util.h" <newline>+#endif <newline>+ <newline>+namespace net { <newline>+ <newline>+const long int TransportSecurityState::kMaxHSTSAgeSecs = 86400 * 365;  // 1 year <newline>+ <newline>+TransportSecurityState::TransportSecurityState(const std::string& hsts_hosts) <newline>+    : delegate_(NULL) { <newline>+  if (!hsts_hosts.empty()) { <newline>+    bool dirty; <newline>+    Deserialise(hsts_hosts, &dirty, &forced_hosts_); <newline>+  } <newline>+} <newline>+ <newline>+static std::string HashHost(const std::string& canonicalized_host) { <newline>+  char hashed[crypto::kSHA256Length]; <newline>+  crypto::SHA256HashString(canonicalized_host, hashed, sizeof(hashed)); <newline>+  return std::string(hashed, sizeof(hashed)); <newline>+} <newline>+ <newline>+void TransportSecurityState::SetDelegate( <newline>+    TransportSecurityState::Delegate* delegate) { <newline>+  delegate_ = delegate; <newline>+} <newline>+ <newline>+void TransportSecurityState::EnableHost(const std::string& host, <newline>+                                        const DomainState& state) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  const std::string canonicalized_host = CanonicalizeHost(host); <newline>+  if (canonicalized_host.empty()) <newline>+    return; <newline>+ <newline>+  // Only override a preloaded state if the new state describes a more strict <newline>+  // policy. TODO(palmer): Reconsider this? <newline>+  DomainState existing_state; <newline>+  if (IsPreloadedSTS(canonicalized_host, true, &existing_state) && <newline>+      canonicalized_host == CanonicalizeHost(existing_state.domain) && <newline>+      existing_state.IsMoreStrict(state)) { <newline>+    return; <newline>+  } <newline>+ <newline>+  // Use the original creation date if we already have this host. <newline>+  DomainState state_copy(state); <newline>+  if (GetDomainState(&existing_state, host, true) && <newline>+      !existing_state.created.is_null()) { <newline>+    state_copy.created = existing_state.created; <newline>+  } <newline>+ <newline>+  // We don't store these values. <newline>+  state_copy.preloaded = false; <newline>+  state_copy.domain.clear(); <newline>+ <newline>+  enabled_hosts_[HashHost(canonicalized_host)] = state_copy; <newline>+  DirtyNotify(); <newline>+} <newline>+ <newline>+bool TransportSecurityState::DeleteHost(const std::string& host) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  const std::string canonicalized_host = CanonicalizeHost(host); <newline>+  if (canonicalized_host.empty()) <newline>+    return false; <newline>+ <newline>+  std::map<std::string, DomainState>::iterator i = enabled_hosts_.find( <newline>+      HashHost(canonicalized_host)); <newline>+  if (i != enabled_hosts_.end()) { <newline>+    enabled_hosts_.erase(i); <newline>+    DirtyNotify(); <newline>+    return true; <newline>+  } <newline>+  return false; <newline>+} <newline>+ <newline>+bool TransportSecurityState::HasPinsForHost(DomainState* result, <newline>+                                            const std::string& host, <newline>+                                            bool sni_available) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  return HasMetadata(result, host, sni_available) && <newline>+      (!result->dynamic_spki_hashes.empty() || <newline>+       !result->preloaded_spki_hashes.empty()); <newline>+} <newline>+ <newline>+bool TransportSecurityState::GetDomainState(DomainState* result, <newline>+                                            const std::string& host, <newline>+                                            bool sni_available) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  return HasMetadata(result, host, sni_available); <newline>+} <newline>+ <newline>+bool TransportSecurityState::HasMetadata(DomainState* result, <newline>+                                         const std::string& host, <newline>+                                         bool sni_available) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  DomainState state; <newline>+  const std::string canonicalized_host = CanonicalizeHost(host); <newline>+  if (canonicalized_host.empty()) <newline>+    return false; <newline>+ <newline>+  bool has_preload = IsPreloadedSTS(canonicalized_host, sni_available, &state); <newline>+  std::string canonicalized_preload = CanonicalizeHost(state.domain); <newline>+ <newline>+  base::Time current_time(base::Time::Now()); <newline>+ <newline>+  for (size_t i = 0; canonicalized_host[i]; i += canonicalized_host[i] + 1) { <newline>+    std::string host_sub_chunk(&canonicalized_host[i], <newline>+                               canonicalized_host.size() - i); <newline>+    // Exact match of a preload always wins. <newline>+    if (has_preload && host_sub_chunk == canonicalized_preload) { <newline>+      *result = state; <newline>+      return true; <newline>+    } <newline>+ <newline>+    std::map<std::string, DomainState>::iterator j = <newline>+        enabled_hosts_.find(HashHost(host_sub_chunk)); <newline>+    if (j == enabled_hosts_.end()) <newline>+      continue; <newline>+ <newline>+    if (current_time > j->second.expiry && <newline>+        current_time > j->second.dynamic_spki_hashes_expiry) { <newline>+      enabled_hosts_.erase(j); <newline>+      DirtyNotify(); <newline>+      continue; <newline>+    } <newline>+ <newline>+    state = j->second; <newline>+    state.domain = DNSDomainToString(host_sub_chunk); <newline>+ <newline>+    // Succeed if we matched the domain exactly or if subdomain matches are <newline>+    // allowed. <newline>+    if (i == 0 || j->second.include_subdomains) { <newline>+      *result = state; <newline>+      return true; <newline>+    } <newline>+ <newline>+    return false; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+void TransportSecurityState::DeleteSince(const base::Time& time) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  bool dirtied = false; <newline>+ <newline>+  std::map<std::string, DomainState>::iterator i = enabled_hosts_.begin(); <newline>+  while (i != enabled_hosts_.end()) { <newline>+    if (i->second.created >= time) { <newline>+      dirtied = true; <newline>+      enabled_hosts_.erase(i++); <newline>+    } else { <newline>+      i++; <newline>+    } <newline>+  } <newline>+ <newline>+  if (dirtied) <newline>+    DirtyNotify(); <newline>+} <newline>+ <newline>+// MaxAgeToInt converts a string representation of a number of seconds into a <newline>+// int. We use strtol in order to handle overflow correctly. The string may <newline>+// contain an arbitary number which we should truncate correctly rather than <newline>+// throwing a parse failure. <newline>+static bool MaxAgeToInt(std::string::const_iterator begin, <newline>+                        std::string::const_iterator end, <newline>+                        int* result) { <newline>+  const std::string s(begin, end); <newline>+  char* endptr; <newline>+  long int i = strtol(s.data(), &endptr, 10 /* base */); <newline>+  if (*endptr || i < 0) <newline>+    return false; <newline>+  if (i > TransportSecurityState::kMaxHSTSAgeSecs) <newline>+    i = TransportSecurityState::kMaxHSTSAgeSecs; <newline>+  *result = i; <newline>+  return true; <newline>+} <newline>+ <newline>+// Strip, Split, StringPair, and ParsePins are private implementation details <newline>+// of ParsePinsHeader(std::string&, DomainState&). <newline>+static std::string Strip(const std::string& source) { <newline>+  if (source.empty()) <newline>+    return source; <newline>+ <newline>+  std::string::const_iterator start = source.begin(); <newline>+  std::string::const_iterator end = source.end(); <newline>+  HttpUtil::TrimLWS(&start, &end); <newline>+  return std::string(start, end); <newline>+} <newline>+ <newline>+typedef std::pair<std::string, std::string> StringPair; <newline>+ <newline>+static StringPair Split(const std::string& source, char delimiter) { <newline>+  StringPair pair; <newline>+  size_t point = source.find(delimiter); <newline>+ <newline>+  pair.first = source.substr(0, point); <newline>+  if (std::string::npos != point) <newline>+    pair.second = source.substr(point + 1); <newline>+ <newline>+  return pair; <newline>+} <newline>+ <newline>+// TODO(palmer): Support both sha256 and sha1. This will require additional <newline>+// infrastructure code changes and can come in a later patch. <newline>+// <newline>+// static <newline>+bool TransportSecurityState::ParsePin(const std::string& value, <newline>+                                      SHA1Fingerprint* out) { <newline>+  StringPair slash = Split(Strip(value), '/'); <newline>+  if (slash.first != "sha1") <newline>+    return false; <newline>+ <newline>+  std::string decoded; <newline>+  if (!base::Base64Decode(slash.second, &decoded) || <newline>+      decoded.size() != arraysize(out->data)) { <newline>+    return false; <newline>+  } <newline>+ <newline>+  memcpy(out->data, decoded.data(), arraysize(out->data)); <newline>+  return true; <newline>+} <newline>+ <newline>+static bool ParseAndAppendPin(const std::string& value, <newline>+                      FingerprintVector* fingerprints) { <newline>+  // The base64'd fingerprint MUST be a quoted-string. 20 bytes base64'd is 28 <newline>+  // characters; 32 bytes base64'd is 44 characters. TODO(palmer): Support <newline>+  // SHA256. <newline>+  size_t size = value.size(); <newline>+  if (size != 30 || value[0] != '"' || value[size - 1] != '"') <newline>+    return false; <newline>+ <newline>+  std::string unquoted = HttpUtil::Unquote(value); <newline>+  std::string decoded; <newline>+  SHA1Fingerprint fp; <newline>+ <newline>+  if (!base::Base64Decode(unquoted, &decoded) || <newline>+      decoded.size() != arraysize(fp.data)) { <newline>+    return false; <newline>+  } <newline>+ <newline>+  memcpy(fp.data, decoded.data(), arraysize(fp.data)); <newline>+  fingerprints->push_back(fp); <newline>+  return true; <newline>+} <newline>+ <newline>+// static <newline>+bool TransportSecurityState::GetPublicKeyHash( <newline>+    const X509Certificate& cert, SHA1Fingerprint* spki_hash) { <newline>+  std::string der_bytes; <newline>+  if (!X509Certificate::GetDEREncoded(cert.os_cert_handle(), &der_bytes)) <newline>+    return false; <newline>+ <newline>+  base::StringPiece spki; <newline>+  if (!asn1::ExtractSPKIFromDERCert(der_bytes, &spki)) <newline>+    return false; <newline>+ <newline>+  base::SHA1HashBytes(reinterpret_cast<const unsigned char*>(spki.data()), <newline>+                      spki.size(), spki_hash->data); <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+struct FingerprintsEqualPredicate { <newline>+  explicit FingerprintsEqualPredicate(const SHA1Fingerprint& fingerprint) : <newline>+      fingerprint_(fingerprint) {} <newline>+ <newline>+  bool operator()(const SHA1Fingerprint& other) const { <newline>+    return fingerprint_.Equals(other); <newline>+  } <newline>+ <newline>+  const SHA1Fingerprint& fingerprint_; <newline>+}; <newline>+ <newline>+// Returns true iff there is an item in |pins| which is not present in <newline>+// |from_cert_chain|. Such an SPKI hash is called a "backup pin". <newline>+static bool IsBackupPinPresent(const FingerprintVector& pins, <newline>+                               const FingerprintVector& from_cert_chain) { <newline>+  for (FingerprintVector::const_iterator <newline>+       i = pins.begin(); i != pins.end(); ++i) { <newline>+    FingerprintVector::const_iterator j = <newline>+        std::find_if(from_cert_chain.begin(), from_cert_chain.end(), <newline>+                     FingerprintsEqualPredicate(*i)); <newline>+      if (j == from_cert_chain.end()) <newline>+        return true; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+static bool HashesIntersect(const FingerprintVector& a, <newline>+                            const FingerprintVector& b) { <newline>+  for (FingerprintVector::const_iterator <newline>+       i = a.begin(); i != a.end(); ++i) { <newline>+    FingerprintVector::const_iterator j = <newline>+        std::find_if(b.begin(), b.end(), FingerprintsEqualPredicate(*i)); <newline>+      if (j != b.end()) <newline>+        return true; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+// Returns true iff |pins| contains both a live and a backup pin. A live pin <newline>+// is a pin whose SPKI is present in the certificate chain in |ssl_info|. A <newline>+// backup pin is a pin intended for disaster recovery, not day-to-day use, and <newline>+// thus must be absent from the certificate chain. The Public-Key-Pins header <newline>+// specification requires both. <newline>+static bool IsPinListValid(const FingerprintVector& pins, <newline>+                           const SSLInfo& ssl_info) { <newline>+  if (pins.size() < 2) <newline>+    return false; <newline>+ <newline>+  const FingerprintVector& from_cert_chain = ssl_info.public_key_hashes; <newline>+  if (from_cert_chain.empty()) <newline>+    return false; <newline>+ <newline>+  return IsBackupPinPresent(pins, from_cert_chain) && <newline>+      HashesIntersect(pins, from_cert_chain); <newline>+} <newline>+ <newline>+// "Public-Key-Pins" ":" <newline>+//     "max-age" "=" delta-seconds ";" <newline>+//     "pin-" algo "=" base64 [ ";" ... ] <newline>+// <newline>+// static <newline>+bool TransportSecurityState::ParsePinsHeader(const std::string& value, <newline>+                                             const SSLInfo& ssl_info, <newline>+                                             DomainState* state) { <newline>+  bool parsed_max_age = false; <newline>+  int max_age = 0; <newline>+  FingerprintVector pins; <newline>+ <newline>+  std::string source = value; <newline>+ <newline>+  while (!source.empty()) { <newline>+    StringPair semicolon = Split(source, ';'); <newline>+    semicolon.first = Strip(semicolon.first); <newline>+    semicolon.second = Strip(semicolon.second); <newline>+    StringPair equals = Split(semicolon.first, '='); <newline>+    equals.first = Strip(equals.first); <newline>+    equals.second = Strip(equals.second); <newline>+ <newline>+    if (LowerCaseEqualsASCII(equals.first, "max-age")) { <newline>+      if (equals.second.empty() || <newline>+          !MaxAgeToInt(equals.second.begin(), equals.second.end(), &max_age)) { <newline>+        return false; <newline>+      } <newline>+      if (max_age > kMaxHSTSAgeSecs) <newline>+        max_age = kMaxHSTSAgeSecs; <newline>+      parsed_max_age = true; <newline>+    } else if (LowerCaseEqualsASCII(equals.first, "pin-sha1")) { <newline>+      if (!ParseAndAppendPin(equals.second, &pins)) <newline>+        return false; <newline>+    } else if (LowerCaseEqualsASCII(equals.first, "pin-sha256")) { <newline>+      // TODO(palmer) <newline>+    } else { <newline>+      // Silently ignore unknown directives for forward compatibility. <newline>+    } <newline>+ <newline>+    source = semicolon.second; <newline>+  } <newline>+ <newline>+  if (!parsed_max_age || !IsPinListValid(pins, ssl_info)) <newline>+    return false; <newline>+ <newline>+  state->max_age = max_age; <newline>+  state->dynamic_spki_hashes_expiry = <newline>+      base::Time::Now() + base::TimeDelta::FromSeconds(max_age); <newline>+ <newline>+  state->dynamic_spki_hashes.clear(); <newline>+  if (max_age > 0) { <newline>+    for (FingerprintVector::const_iterator i = pins.begin(); <newline>+         i != pins.end(); i++) { <newline>+      state->dynamic_spki_hashes.push_back(*i); <newline>+    } <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+// "Strict-Transport-Security" ":" <newline>+//     "max-age" "=" delta-seconds [ ";" "includeSubDomains" ] <newline>+// <newline>+// static <newline>+bool TransportSecurityState::ParseHeader(const std::string& value, <newline>+                                         int* max_age, <newline>+                                         bool* include_subdomains) { <newline>+  DCHECK(max_age); <newline>+  DCHECK(include_subdomains); <newline>+ <newline>+  int max_age_candidate = 0; <newline>+ <newline>+  enum ParserState { <newline>+    START, <newline>+    AFTER_MAX_AGE_LABEL, <newline>+    AFTER_MAX_AGE_EQUALS, <newline>+    AFTER_MAX_AGE, <newline>+    AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER, <newline>+    AFTER_INCLUDE_SUBDOMAINS, <newline>+  } state = START; <newline>+ <newline>+  StringTokenizer tokenizer(value, " \t=;"); <newline>+  tokenizer.set_options(StringTokenizer::RETURN_DELIMS); <newline>+  while (tokenizer.GetNext()) { <newline>+    DCHECK(!tokenizer.token_is_delim() || tokenizer.token().length() == 1); <newline>+    switch (state) { <newline>+      case START: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (!LowerCaseEqualsASCII(tokenizer.token(), "max-age")) <newline>+          return false; <newline>+        state = AFTER_MAX_AGE_LABEL; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE_LABEL: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (*tokenizer.token_begin() != '=') <newline>+          return false; <newline>+        DCHECK_EQ(tokenizer.token().length(), 1U); <newline>+        state = AFTER_MAX_AGE_EQUALS; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE_EQUALS: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (!MaxAgeToInt(tokenizer.token_begin(), <newline>+                         tokenizer.token_end(), <newline>+                         &max_age_candidate)) <newline>+          return false; <newline>+        state = AFTER_MAX_AGE; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (*tokenizer.token_begin() != ';') <newline>+          return false; <newline>+        state = AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (!LowerCaseEqualsASCII(tokenizer.token(), "includesubdomains")) <newline>+          return false; <newline>+        state = AFTER_INCLUDE_SUBDOMAINS; <newline>+        break; <newline>+ <newline>+      case AFTER_INCLUDE_SUBDOMAINS: <newline>+        if (!IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          return false; <newline>+        break; <newline>+ <newline>+      default: <newline>+        NOTREACHED(); <newline>+    } <newline>+  } <newline>+ <newline>+  // We've consumed all the input.  Let's see what state we ended up in. <newline>+  switch (state) { <newline>+    case START: <newline>+    case AFTER_MAX_AGE_LABEL: <newline>+    case AFTER_MAX_AGE_EQUALS: <newline>+      return false; <newline>+    case AFTER_MAX_AGE: <newline>+      *max_age = max_age_candidate; <newline>+      *include_subdomains = false; <newline>+      return true; <newline>+    case AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER: <newline>+      return false; <newline>+    case AFTER_INCLUDE_SUBDOMAINS: <newline>+      *max_age = max_age_candidate; <newline>+      *include_subdomains = true; <newline>+      return true; <newline>+    default: <newline>+      NOTREACHED(); <newline>+      return false; <newline>+  } <newline>+} <newline>+ <newline>+// Side pinning and superfluous certificates: <newline>+// <newline>+// In SSLClientSocketNSS::DoVerifyCertComplete we look for certificates with a <newline>+// Subject of CN=meta. When we find one we'll currently try and parse side <newline>+// pinned key from it. <newline>+// <newline>+// A side pin is a key which can be pinned to, but also can be kept offline and <newline>+// still held by the site owner. The CN=meta certificate is just a backwards <newline>+// compatiable method of carrying a lump of bytes to the client. (We could use <newline>+// a TLS extension just as well, but it's a lot easier for admins to add extra <newline>+// certificates to the chain.) <newline>+ <newline>+// A TagMap represents the simple key-value structure that we use. Keys are <newline>+// 32-bit ints. Values are byte strings. <newline>+typedef std::map<uint32, base::StringPiece> TagMap; <newline>+ <newline>+// ParseTags parses a list of key-value pairs from |in| to |out| and advances <newline>+// |in| past the data. The key-value pair data is: <newline>+//   u16le num_tags <newline>+//   u32le tag[num_tags] <newline>+//   u16le lengths[num_tags] <newline>+//   ...data... <newline>+static bool ParseTags(base::StringPiece* in, TagMap *out) { <newline>+  // Many part of Chrome already assume little-endian. This is just to help <newline>+  // anyone who should try to port it in the future. <newline>+#if defined(__BYTE_ORDER) <newline>+  // Linux check <newline>+  COMPILE_ASSERT(__BYTE_ORDER == __LITTLE_ENDIAN, assumes_little_endian); <newline>+#elif defined(__BIG_ENDIAN__) <newline>+  // Mac check <newline>+  #error assumes little endian <newline>+#endif <newline>+ <newline>+  uint16 num_tags_16; <newline>+  if (in->size() < sizeof(num_tags_16)) <newline>+    return false; <newline>+ <newline>+  memcpy(&num_tags_16, in->data(), sizeof(num_tags_16)); <newline>+  in->remove_prefix(sizeof(num_tags_16)); <newline>+  unsigned num_tags = num_tags_16; <newline>+ <newline>+  if (in->size() < 6 * num_tags) <newline>+    return false; <newline>+ <newline>+  const uint32* tags = reinterpret_cast<const uint32*>(in->data()); <newline>+  const uint16* lens = reinterpret_cast<const uint16*>( <newline>+      in->data() + 4*num_tags); <newline>+  in->remove_prefix(6*num_tags); <newline>+ <newline>+  uint32 prev_tag = 0; <newline>+  for (unsigned i = 0; i < num_tags; i++) { <newline>+    size_t len = lens[i]; <newline>+    uint32 tag = tags[i]; <newline>+ <newline>+    if (in->size() < len) <newline>+      return false; <newline>+    // tags must be in ascending order. <newline>+    if (i > 0 && prev_tag >= tag) <newline>+      return false; <newline>+    (*out)[tag] = base::StringPiece(in->data(), len); <newline>+    in->remove_prefix(len); <newline>+    prev_tag = tag; <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+// GetTag extracts the data associated with |tag| in |tags|. <newline>+static bool GetTag(uint32 tag, const TagMap& tags, base::StringPiece* out) { <newline>+  TagMap::const_iterator i = tags.find(tag); <newline>+  if (i == tags.end()) <newline>+    return false; <newline>+ <newline>+  *out = i->second; <newline>+  return true; <newline>+} <newline>+ <newline>+// kP256SubjectPublicKeyInfoPrefix can be prepended onto a P256 elliptic curve <newline>+// point in X9.62 format in order to make a valid SubjectPublicKeyInfo. The <newline>+// ASN.1 interpretation of these bytes is: <newline>+// <newline>+//     0:d=0  hl=2 l=  89 cons: SEQUENCE <newline>+//     2:d=1  hl=2 l=  19 cons: SEQUENCE <newline>+//     4:d=2  hl=2 l=   7 prim: OBJECT            :id-ecPublicKey <newline>+//    13:d=2  hl=2 l=   8 prim: OBJECT            :prime256v1 <newline>+//    23:d=1  hl=2 l=  66 prim: BIT STRING <newline>+static const uint8 kP256SubjectPublicKeyInfoPrefix[] = { <newline>+  0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, <newline>+  0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, <newline>+  0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, <newline>+  0x42, 0x00, <newline>+}; <newline>+ <newline>+// VerifySignature returns true iff |sig| is a valid signature of <newline>+// |hash| by |pubkey|. The actual implementation is crypto library <newline>+// specific. <newline>+static bool VerifySignature(const base::StringPiece& pubkey, <newline>+                            const base::StringPiece& sig, <newline>+                            const base::StringPiece& hash); <newline>+ <newline>+#if defined(USE_OPENSSL) <newline>+ <newline>+static EVP_PKEY* DecodeX962P256PublicKey( <newline>+    const base::StringPiece& pubkey_bytes) { <newline>+  // The public key is an X9.62 encoded P256 point. <newline>+  if (pubkey_bytes.size() != 1 + 2*32) <newline>+    return NULL; <newline>+ <newline>+  std::string pubkey_spki( <newline>+      reinterpret_cast<const char*>(kP256SubjectPublicKeyInfoPrefix), <newline>+      sizeof(kP256SubjectPublicKeyInfoPrefix)); <newline>+  pubkey_spki += pubkey_bytes.as_string(); <newline>+ <newline>+  EVP_PKEY* ret = NULL; <newline>+  const unsigned char* der_pubkey = <newline>+      reinterpret_cast<const unsigned char*>(pubkey_spki.data()); <newline>+  d2i_PUBKEY(&ret, &der_pubkey, pubkey_spki.size()); <newline>+  return ret; <newline>+} <newline>+ <newline>+static bool VerifySignature(const base::StringPiece& pubkey, <newline>+                            const base::StringPiece& sig, <newline>+                            const base::StringPiece& hash) { <newline>+  crypto::ScopedOpenSSL<EVP_PKEY, EVP_PKEY_free> secpubkey( <newline>+      DecodeX962P256PublicKey(pubkey)); <newline>+  if (!secpubkey.get()) <newline>+    return false; <newline>+ <newline>+ <newline>+  crypto::ScopedOpenSSL<EC_KEY, EC_KEY_free> ec_key( <newline>+      EVP_PKEY_get1_EC_KEY(secpubkey.get())); <newline>+  if (!ec_key.get()) <newline>+    return false; <newline>+ <newline>+  return ECDSA_verify(0, reinterpret_cast<const unsigned char*>(hash.data()), <newline>+                      hash.size(), <newline>+                      reinterpret_cast<const unsigned char*>(sig.data()), <newline>+                      sig.size(), ec_key.get()) == 1; <newline>+} <newline>+ <newline>+#else <newline>+ <newline>+// DecodeX962P256PublicKey parses an uncompressed, X9.62 format, P256 elliptic <newline>+// curve point from |pubkey_bytes| and returns it as a SECKEYPublicKey. <newline>+static SECKEYPublicKey* DecodeX962P256PublicKey( <newline>+    const base::StringPiece& pubkey_bytes) { <newline>+  // The public key is an X9.62 encoded P256 point. <newline>+  if (pubkey_bytes.size() != 1 + 2*32) <newline>+    return NULL; <newline>+ <newline>+  std::string pubkey_spki( <newline>+      reinterpret_cast<const char*>(kP256SubjectPublicKeyInfoPrefix), <newline>+      sizeof(kP256SubjectPublicKeyInfoPrefix)); <newline>+  pubkey_spki += pubkey_bytes.as_string(); <newline>+ <newline>+  SECItem der; <newline>+  memset(&der, 0, sizeof(der)); <newline>+  der.data = reinterpret_cast<uint8*>(const_cast<char*>(pubkey_spki.data())); <newline>+  der.len = pubkey_spki.size(); <newline>+ <newline>+  CERTSubjectPublicKeyInfo* spki = SECKEY_DecodeDERSubjectPublicKeyInfo(&der); <newline>+  if (!spki) <newline>+    return NULL; <newline>+  SECKEYPublicKey* public_key = SECKEY_ExtractPublicKey(spki); <newline>+  SECKEY_DestroySubjectPublicKeyInfo(spki); <newline>+ <newline>+  return public_key; <newline>+} <newline>+ <newline>+static bool VerifySignature(const base::StringPiece& pubkey, <newline>+                            const base::StringPiece& sig, <newline>+                            const base::StringPiece& hash) { <newline>+  SECKEYPublicKey* secpubkey = DecodeX962P256PublicKey(pubkey); <newline>+  if (!secpubkey) <newline>+    return false; <newline>+ <newline>+  SECItem sigitem; <newline>+  memset(&sigitem, 0, sizeof(sigitem)); <newline>+  sigitem.data = reinterpret_cast<uint8*>(const_cast<char*>(sig.data())); <newline>+  sigitem.len = sig.size(); <newline>+ <newline>+  // |decoded_sigitem| is newly allocated, as is the data that it points to. <newline>+  SECItem* decoded_sigitem = DSAU_DecodeDerSigToLen( <newline>+      &sigitem, SECKEY_SignatureLen(secpubkey)); <newline>+ <newline>+  if (!decoded_sigitem) { <newline>+    SECKEY_DestroyPublicKey(secpubkey); <newline>+    return false; <newline>+  } <newline>+ <newline>+  SECItem hashitem; <newline>+  memset(&hashitem, 0, sizeof(hashitem)); <newline>+  hashitem.data = reinterpret_cast<unsigned char*>( <newline>+      const_cast<char*>(hash.data())); <newline>+  hashitem.len = hash.size(); <newline>+ <newline>+  SECStatus rv = PK11_Verify(secpubkey, decoded_sigitem, &hashitem, NULL); <newline>+  SECKEY_DestroyPublicKey(secpubkey); <newline>+  SECITEM_FreeItem(decoded_sigitem, PR_TRUE); <newline>+  return rv == SECSuccess; <newline>+} <newline>+ <newline>+#endif  // !defined(USE_OPENSSL) <newline>+ <newline>+// These are the tag values that we use. Tags are little-endian on the wire and <newline>+// these values correspond to the ASCII of the name. <newline>+static const uint32 kTagALGO = 0x4f474c41; <newline>+static const uint32 kTagP256 = 0x36353250; <newline>+static const uint32 kTagPUBK = 0x4b425550; <newline>+static const uint32 kTagSIG = 0x474953; <newline>+static const uint32 kTagSPIN = 0x4e495053; <newline>+ <newline>+// static <newline>+bool TransportSecurityState::ParseSidePin( <newline>+    const base::StringPiece& leaf_spki, <newline>+    const base::StringPiece& in_side_info, <newline>+    FingerprintVector* out_pub_key_hash) { <newline>+  base::StringPiece side_info(in_side_info); <newline>+ <newline>+  TagMap outer; <newline>+  if (!ParseTags(&side_info, &outer)) <newline>+    return false; <newline>+  // trailing data is not allowed <newline>+  if (side_info.size()) <newline>+    return false; <newline>+ <newline>+  base::StringPiece side_pin_bytes; <newline>+  if (!GetTag(kTagSPIN, outer, &side_pin_bytes)) <newline>+    return false; <newline>+ <newline>+  bool have_parsed_a_key = false; <newline>+  uint8 leaf_spki_hash[crypto::kSHA256Length]; <newline>+  bool have_leaf_spki_hash = false; <newline>+ <newline>+  while (side_pin_bytes.size() > 0) { <newline>+    TagMap side_pin; <newline>+    if (!ParseTags(&side_pin_bytes, &side_pin)) <newline>+      return false; <newline>+ <newline>+    base::StringPiece algo, pubkey, sig; <newline>+    if (!GetTag(kTagALGO, side_pin, &algo) || <newline>+        !GetTag(kTagPUBK, side_pin, &pubkey) || <newline>+        !GetTag(kTagSIG, side_pin, &sig)) { <newline>+      return false; <newline>+    } <newline>+ <newline>+    if (algo.size() != sizeof(kTagP256) || <newline>+        0 != memcmp(algo.data(), &kTagP256, sizeof(kTagP256))) { <newline>+      // We don't support anything but P256 at the moment. <newline>+      continue; <newline>+    } <newline>+ <newline>+    if (!have_leaf_spki_hash) { <newline>+      crypto::SHA256HashString( <newline>+          leaf_spki.as_string(), leaf_spki_hash, sizeof(leaf_spki_hash)); <newline>+      have_leaf_spki_hash = true; <newline>+    } <newline>+ <newline>+    if (VerifySignature(pubkey, sig, base::StringPiece( <newline>+        reinterpret_cast<const char*>(leaf_spki_hash), <newline>+        sizeof(leaf_spki_hash)))) { <newline>+      SHA1Fingerprint fpr; <newline>+      base::SHA1HashBytes( <newline>+          reinterpret_cast<const uint8*>(pubkey.data()), <newline>+          pubkey.size(), <newline>+          fpr.data); <newline>+      out_pub_key_hash->push_back(fpr); <newline>+      have_parsed_a_key = true; <newline>+    } <newline>+  } <newline>+ <newline>+  return have_parsed_a_key; <newline>+} <newline>+ <newline>+// This function converts the binary hashes, which we store in <newline>+// |enabled_hosts_|, to a base64 string which we can include in a JSON file. <newline>+static std::string HashedDomainToExternalString(const std::string& hashed) { <newline>+  std::string out; <newline>+  CHECK(base::Base64Encode(hashed, &out)); <newline>+  return out; <newline>+} <newline>+ <newline>+// This inverts |HashedDomainToExternalString|, above. It turns an external <newline>+// string (from a JSON file) into an internal (binary) string. <newline>+static std::string ExternalStringToHashedDomain(const std::string& external) { <newline>+  std::string out; <newline>+  if (!base::Base64Decode(external, &out) || <newline>+      out.size() != crypto::kSHA256Length) { <newline>+    return std::string(); <newline>+  } <newline>+ <newline>+  return out; <newline>+} <newline>+ <newline>+static ListValue* SPKIHashesToListValue(const FingerprintVector& hashes) { <newline>+  ListValue* pins = new ListValue; <newline>+ <newline>+  for (FingerprintVector::const_iterator i = hashes.begin(); <newline>+       i != hashes.end(); ++i) { <newline>+    std::string hash_str(reinterpret_cast<const char*>(i->data), <newline>+                         sizeof(i->data)); <newline>+    std::string b64; <newline>+    base::Base64Encode(hash_str, &b64); <newline>+    pins->Append(new StringValue("sha1/" + b64)); <newline>+  } <newline>+ <newline>+  return pins; <newline>+} <newline>+ <newline>+bool TransportSecurityState::Serialise(std::string* output) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  DictionaryValue toplevel; <newline>+  base::Time now = base::Time::Now(); <newline>+  for (std::map<std::string, DomainState>::const_iterator <newline>+       i = enabled_hosts_.begin(); i != enabled_hosts_.end(); ++i) { <newline>+    DictionaryValue* state = new DictionaryValue; <newline>+    state->SetBoolean("include_subdomains", i->second.include_subdomains); <newline>+    state->SetDouble("created", i->second.created.ToDoubleT()); <newline>+    state->SetDouble("expiry", i->second.expiry.ToDoubleT()); <newline>+    state->SetDouble("dynamic_spki_hashes_expiry", <newline>+                     i->second.dynamic_spki_hashes_expiry.ToDoubleT()); <newline>+ <newline>+    switch (i->second.mode) { <newline>+      case DomainState::MODE_STRICT: <newline>+        state->SetString("mode", "strict"); <newline>+        break; <newline>+      case DomainState::MODE_SPDY_ONLY: <newline>+        state->SetString("mode", "spdy-only"); <newline>+        break; <newline>+      case DomainState::MODE_PINNING_ONLY: <newline>+        state->SetString("mode", "pinning-only"); <newline>+        break; <newline>+      default: <newline>+        NOTREACHED() << "DomainState with unknown mode"; <newline>+        delete state; <newline>+        continue; <newline>+    } <newline>+ <newline>+    state->Set("preloaded_spki_hashes", <newline>+               SPKIHashesToListValue(i->second.preloaded_spki_hashes)); <newline>+ <newline>+    if (now < i->second.dynamic_spki_hashes_expiry) { <newline>+      state->Set("dynamic_spki_hashes", <newline>+                 SPKIHashesToListValue(i->second.dynamic_spki_hashes)); <newline>+    } <newline>+ <newline>+    toplevel.Set(HashedDomainToExternalString(i->first), state); <newline>+  } <newline>+ <newline>+  base::JSONWriter::WriteWithOptions(&toplevel, <newline>+                                     base::JSONWriter::OPTIONS_PRETTY_PRINT, <newline>+                                     output); <newline>+  return true; <newline>+} <newline>+ <newline>+bool TransportSecurityState::LoadEntries(const std::string& input, <newline>+                                         bool* dirty) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  enabled_hosts_.clear(); <newline>+  return Deserialise(input, dirty, &enabled_hosts_); <newline>+} <newline>+ <newline>+static bool AddHash(const std::string& type_and_base64, <newline>+                    FingerprintVector* out) { <newline>+  SHA1Fingerprint hash; <newline>+ <newline>+  if (!TransportSecurityState::ParsePin(type_and_base64, &hash)) <newline>+    return false; <newline>+ <newline>+  out->push_back(hash); <newline>+  return true; <newline>+} <newline>+ <newline>+static void SPKIHashesFromListValue(FingerprintVector* hashes, <newline>+                                    const ListValue& pins) { <newline>+  size_t num_pins = pins.GetSize(); <newline>+  for (size_t i = 0; i < num_pins; ++i) { <newline>+    std::string type_and_base64; <newline>+    if (pins.GetString(i, &type_and_base64)) <newline>+      AddHash(type_and_base64, hashes); <newline>+  } <newline>+} <newline>+ <newline>+// static <newline>+bool TransportSecurityState::Deserialise( <newline>+    const std::string& input, <newline>+    bool* dirty, <newline>+    std::map<std::string, DomainState>* out) { <newline>+  scoped_ptr<Value> value( <newline>+      base::JSONReader::Read(input, false /* do not allow trailing commas */)); <newline>+  if (!value.get() || !value->IsType(Value::TYPE_DICTIONARY)) <newline>+    return false; <newline>+ <newline>+  DictionaryValue* dict_value = reinterpret_cast<DictionaryValue*>(value.get()); <newline>+  const base::Time current_time(base::Time::Now()); <newline>+  bool dirtied = false; <newline>+ <newline>+  for (DictionaryValue::key_iterator i = dict_value->begin_keys(); <newline>+       i != dict_value->end_keys(); ++i) { <newline>+    DictionaryValue* state; <newline>+    if (!dict_value->GetDictionaryWithoutPathExpansion(*i, &state)) <newline>+      continue; <newline>+ <newline>+    bool include_subdomains; <newline>+    std::string mode_string; <newline>+    double created; <newline>+    double expiry; <newline>+    double dynamic_spki_hashes_expiry = 0.0; <newline>+ <newline>+    if (!state->GetBoolean("include_subdomains", &include_subdomains) || <newline>+        !state->GetString("mode", &mode_string) || <newline>+        !state->GetDouble("expiry", &expiry)) { <newline>+      continue; <newline>+    } <newline>+ <newline>+    // Don't fail if this key is not present. <newline>+    (void) state->GetDouble("dynamic_spki_hashes_expiry", <newline>+                            &dynamic_spki_hashes_expiry); <newline>+ <newline>+    ListValue* pins_list = NULL; <newline>+    FingerprintVector preloaded_spki_hashes; <newline>+    if (state->GetList("preloaded_spki_hashes", &pins_list)) <newline>+      SPKIHashesFromListValue(&preloaded_spki_hashes, *pins_list); <newline>+ <newline>+    FingerprintVector dynamic_spki_hashes; <newline>+    if (state->GetList("dynamic_spki_hashes", &pins_list)) <newline>+      SPKIHashesFromListValue(&dynamic_spki_hashes, *pins_list); <newline>+ <newline>+    DomainState::Mode mode; <newline>+    if (mode_string == "strict") { <newline>+      mode = DomainState::MODE_STRICT; <newline>+    } else if (mode_string == "spdy-only") { <newline>+      mode = DomainState::MODE_SPDY_ONLY; <newline>+    } else if (mode_string == "pinning-only") { <newline>+      mode = DomainState::MODE_PINNING_ONLY; <newline>+    } else { <newline>+      LOG(WARNING) << "Unknown TransportSecurityState mode string found: " <newline>+                   << mode_string; <newline>+      continue; <newline>+    } <newline>+ <newline>+    base::Time expiry_time = base::Time::FromDoubleT(expiry); <newline>+    base::Time dynamic_spki_hashes_expiry_time = <newline>+        base::Time::FromDoubleT(dynamic_spki_hashes_expiry); <newline>+    base::Time created_time; <newline>+    if (state->GetDouble("created", &created)) { <newline>+      created_time = base::Time::FromDoubleT(created); <newline>+    } else { <newline>+      // We're migrating an old entry with no creation date. Make sure we <newline>+      // write the new date back in a reasonable time frame. <newline>+      dirtied = true; <newline>+      created_time = base::Time::Now(); <newline>+    } <newline>+ <newline>+    if (expiry_time <= current_time && <newline>+        dynamic_spki_hashes_expiry_time <= current_time) { <newline>+      // Make sure we dirty the state if we drop an entry. <newline>+      dirtied = true; <newline>+      continue; <newline>+    } <newline>+ <newline>+    std::string hashed = ExternalStringToHashedDomain(*i); <newline>+    if (hashed.empty()) { <newline>+      dirtied = true; <newline>+      continue; <newline>+    } <newline>+ <newline>+    DomainState new_state; <newline>+    new_state.mode = mode; <newline>+    new_state.created = created_time; <newline>+    new_state.expiry = expiry_time; <newline>+    new_state.include_subdomains = include_subdomains; <newline>+    new_state.preloaded_spki_hashes = preloaded_spki_hashes; <newline>+    new_state.dynamic_spki_hashes = dynamic_spki_hashes; <newline>+    new_state.dynamic_spki_hashes_expiry = dynamic_spki_hashes_expiry_time; <newline>+    (*out)[hashed] = new_state; <newline>+  } <newline>+ <newline>+  *dirty = dirtied; <newline>+  return true; <newline>+} <newline>+ <newline>+TransportSecurityState::~TransportSecurityState() { <newline>+} <newline>+ <newline>+void TransportSecurityState::DirtyNotify() { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  if (delegate_) <newline>+    delegate_->StateIsDirty(this); <newline>+} <newline>+ <newline>+// static <newline>+std::string TransportSecurityState::CanonicalizeHost(const std::string& host) { <newline>+  // We cannot perform the operations as detailed in the spec here as |host| <newline>+  // has already undergone IDN processing before it reached us. Thus, we check <newline>+  // that there are no invalid characters in the host and lowercase the result. <newline>+ <newline>+  std::string new_host; <newline>+  if (!DNSDomainFromDot(host, &new_host)) { <newline>+    // DNSDomainFromDot can fail if any label is > 63 bytes or if the whole <newline>+    // name is >255 bytes. However, search terms can have those properties. <newline>+    return std::string(); <newline>+  } <newline>+ <newline>+  for (size_t i = 0; new_host[i]; i += new_host[i] + 1) { <newline>+    const unsigned label_length = static_cast<unsigned>(new_host[i]); <newline>+    if (!label_length) <newline>+      break; <newline>+ <newline>+    for (size_t j = 0; j < label_length; ++j) { <newline>+      // RFC 3490, 4.1, step 3 <newline>+      if (!IsSTD3ASCIIValidCharacter(new_host[i + 1 + j])) <newline>+        return std::string(); <newline>+ <newline>+      new_host[i + 1 + j] = tolower(new_host[i + 1 + j]); <newline>+    } <newline>+ <newline>+    // step 3(b) <newline>+    if (new_host[i + 1] == '-' || <newline>+        new_host[i + label_length] == '-') { <newline>+      return std::string(); <newline>+    } <newline>+  } <newline>+ <newline>+  return new_host; <newline>+} <newline>+ <newline>+// |ReportUMAOnPinFailure| uses these to report which domain was associated <newline>+// with the public key pinning failure. <newline>+// <newline>+// DO NOT CHANGE THE ORDERING OF THESE NAMES OR REMOVE ANY OF THEM. Add new <newline>+// domains at the END of the listing (but before DOMAIN_NUM_EVENTS). <newline>+enum SecondLevelDomainName { <newline>+  DOMAIN_NOT_PINNED, <newline>+ <newline>+  DOMAIN_GOOGLE_COM, <newline>+  DOMAIN_ANDROID_COM, <newline>+  DOMAIN_GOOGLE_ANALYTICS_COM, <newline>+  DOMAIN_GOOGLEPLEX_COM, <newline>+  DOMAIN_YTIMG_COM, <newline>+  DOMAIN_GOOGLEUSERCONTENT_COM, <newline>+  DOMAIN_YOUTUBE_COM, <newline>+  DOMAIN_GOOGLEAPIS_COM, <newline>+  DOMAIN_GOOGLEADSERVICES_COM, <newline>+  DOMAIN_GOOGLECODE_COM, <newline>+  DOMAIN_APPSPOT_COM, <newline>+  DOMAIN_GOOGLESYNDICATION_COM, <newline>+  DOMAIN_DOUBLECLICK_NET, <newline>+  DOMAIN_GSTATIC_COM, <newline>+  DOMAIN_GMAIL_COM, <newline>+  DOMAIN_GOOGLEMAIL_COM, <newline>+  DOMAIN_GOOGLEGROUPS_COM, <newline>+ <newline>+  DOMAIN_TORPROJECT_ORG, <newline>+ <newline>+  DOMAIN_TWITTER_COM, <newline>+  DOMAIN_TWIMG_COM, <newline>+ <newline>+  DOMAIN_AKAMAIHD_NET, <newline>+ <newline>+  // Boundary value for UMA_HISTOGRAM_ENUMERATION: <newline>+  DOMAIN_NUM_EVENTS <newline>+}; <newline>+ <newline>+// PublicKeyPins contains a number of SubjectPublicKeyInfo hashes for a site. <newline>+// The validated certificate chain for the site must not include any of <newline>+// |excluded_hashes| and must include one or more of |required_hashes|. <newline>+struct PublicKeyPins { <newline>+  const char* const* required_hashes; <newline>+  const char* const* excluded_hashes; <newline>+}; <newline>+ <newline>+struct HSTSPreload { <newline>+  uint8 length; <newline>+  bool include_subdomains; <newline>+  char dns_name[30]; <newline>+  bool https_required; <newline>+  PublicKeyPins pins; <newline>+  SecondLevelDomainName second_level_domain_name; <newline>+}; <newline>+ <newline>+static bool HasPreload(const struct HSTSPreload* entries, size_t num_entries, <newline>+                       const std::string& canonicalized_host, size_t i, <newline>+                       TransportSecurityState::DomainState* out, bool* ret) { <newline>+  for (size_t j = 0; j < num_entries; j++) { <newline>+    if (entries[j].length == canonicalized_host.size() - i && <newline>+        memcmp(entries[j].dns_name, &canonicalized_host[i], <newline>+               entries[j].length) == 0) { <newline>+      if (!entries[j].include_subdomains && i != 0) { <newline>+        *ret = false; <newline>+      } else { <newline>+        out->include_subdomains = entries[j].include_subdomains; <newline>+        *ret = true; <newline>+        if (!entries[j].https_required) <newline>+          out->mode = TransportSecurityState::DomainState::MODE_PINNING_ONLY; <newline>+        if (entries[j].pins.required_hashes) { <newline>+          const char* const* hash = entries[j].pins.required_hashes; <newline>+          while (*hash) { <newline>+            bool ok = AddHash(*hash, &out->preloaded_spki_hashes); <newline>+            DCHECK(ok) << " failed to parse " << *hash; <newline>+            hash++; <newline>+          } <newline>+        } <newline>+        if (entries[j].pins.excluded_hashes) { <newline>+          const char* const* hash = entries[j].pins.excluded_hashes; <newline>+          while (*hash) { <newline>+            bool ok = AddHash(*hash, &out->bad_preloaded_spki_hashes); <newline>+            DCHECK(ok) << " failed to parse " << *hash; <newline>+            hash++; <newline>+          } <newline>+        } <newline>+      } <newline>+      return true; <newline>+    } <newline>+  } <newline>+  return false; <newline>+} <newline>+ <newline>+// kNoRejectedPublicKeys is a placeholder for when no public keys are rejected. <newline>+static const char* const kNoRejectedPublicKeys[] = { <newline>+  NULL, <newline>+}; <newline>+ <newline>+static const char* const kGoogleAcceptableCerts[] = { <newline>+  kSPKIHash_VeriSignClass3, <newline>+  kSPKIHash_VeriSignClass3_G3, <newline>+  kSPKIHash_Google1024, <newline>+  kSPKIHash_Google2048, <newline>+  kSPKIHash_EquifaxSecureCA, <newline>+  NULL, <newline>+}; <newline>+static const char* const kGoogleRejectedCerts[] = { <newline>+  kSPKIHash_Aetna, <newline>+  kSPKIHash_Intel, <newline>+  kSPKIHash_TCTrustCenter, <newline>+  kSPKIHash_Vodafone, <newline>+  NULL, <newline>+}; <newline>+#define kGooglePins { \ <newline>+  kGoogleAcceptableCerts, \ <newline>+  kGoogleRejectedCerts, \ <newline>+} <newline>+ <newline>+static const char* const kTorAcceptableCerts[] = { <newline>+  kSPKIHash_RapidSSL, <newline>+  kSPKIHash_DigiCertEVRoot, <newline>+  kSPKIHash_Tor1, <newline>+  kSPKIHash_Tor2, <newline>+  kSPKIHash_Tor3, <newline>+  NULL, <newline>+}; <newline>+#define kTorPins { \ <newline>+  kTorAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+static const char* const kTwitterComAcceptableCerts[] = { <newline>+  kSPKIHash_VeriSignClass1, <newline>+  kSPKIHash_VeriSignClass3, <newline>+  kSPKIHash_VeriSignClass3_G4, <newline>+  kSPKIHash_VeriSignClass4_G3, <newline>+  kSPKIHash_VeriSignClass3_G3, <newline>+  kSPKIHash_VeriSignClass1_G3, <newline>+  kSPKIHash_VeriSignClass2_G3, <newline>+  kSPKIHash_VeriSignClass3_G2, <newline>+  kSPKIHash_VeriSignClass2_G2, <newline>+  kSPKIHash_VeriSignClass3_G5, <newline>+  kSPKIHash_VeriSignUniversal, <newline>+  kSPKIHash_GeoTrustGlobal, <newline>+  kSPKIHash_GeoTrustGlobal2, <newline>+  kSPKIHash_GeoTrustUniversal, <newline>+  kSPKIHash_GeoTrustUniversal2, <newline>+  kSPKIHash_GeoTrustPrimary, <newline>+  kSPKIHash_GeoTrustPrimary_G2, <newline>+  kSPKIHash_GeoTrustPrimary_G3, <newline>+  kSPKIHash_Twitter1, <newline>+  NULL, <newline>+}; <newline>+#define kTwitterComPins { \ <newline>+  kTwitterComAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+// kTwitterCDNAcceptableCerts are the set of public keys valid for Twitter's <newline>+// CDNs, which includes all the keys from kTwitterComAcceptableCerts. <newline>+static const char* const kTwitterCDNAcceptableCerts[] = { <newline>+  kSPKIHash_VeriSignClass1, <newline>+  kSPKIHash_VeriSignClass3, <newline>+  kSPKIHash_VeriSignClass3_G4, <newline>+  kSPKIHash_VeriSignClass4_G3, <newline>+  kSPKIHash_VeriSignClass3_G3, <newline>+  kSPKIHash_VeriSignClass1_G3, <newline>+  kSPKIHash_VeriSignClass2_G3, <newline>+  kSPKIHash_VeriSignClass3_G2, <newline>+  kSPKIHash_VeriSignClass2_G2, <newline>+  kSPKIHash_VeriSignClass3_G5, <newline>+  kSPKIHash_VeriSignUniversal, <newline>+  kSPKIHash_GeoTrustGlobal, <newline>+  kSPKIHash_GeoTrustGlobal2, <newline>+  kSPKIHash_GeoTrustUniversal, <newline>+  kSPKIHash_GeoTrustUniversal2, <newline>+  kSPKIHash_GeoTrustPrimary, <newline>+  kSPKIHash_GeoTrustPrimary_G2, <newline>+  kSPKIHash_GeoTrustPrimary_G3, <newline>+  kSPKIHash_Twitter1, <newline>+ <newline>+  kSPKIHash_Entrust_2048, <newline>+  kSPKIHash_Entrust_EV, <newline>+  kSPKIHash_Entrust_G2, <newline>+  kSPKIHash_Entrust_SSL, <newline>+  kSPKIHash_AAACertificateServices, <newline>+  kSPKIHash_AddTrustClass1CARoot, <newline>+  kSPKIHash_AddTrustExternalCARoot, <newline>+  kSPKIHash_AddTrustPublicCARoot, <newline>+  kSPKIHash_AddTrustQualifiedCARoot, <newline>+  kSPKIHash_COMODOCertificationAuthority, <newline>+  kSPKIHash_SecureCertificateServices, <newline>+  kSPKIHash_TrustedCertificateServices, <newline>+  kSPKIHash_UTNDATACorpSGC, <newline>+  kSPKIHash_UTNUSERFirstClientAuthenticationandEmail, <newline>+  kSPKIHash_UTNUSERFirstHardware, <newline>+  kSPKIHash_UTNUSERFirstObject, <newline>+  kSPKIHash_GTECyberTrustGlobalRoot, <newline>+  NULL, <newline>+}; <newline>+#define kTwitterCDNPins { \ <newline>+  kTwitterCDNAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+// kTestAcceptableCerts doesn't actually match any public keys and is used <newline>+// with "pinningtest.appspot.com", below, to test if pinning is active. <newline>+static const char* const kTestAcceptableCerts[] = { <newline>+  "sha1/AAAAAAAAAAAAAAAAAAAAAAAAAAA=", <newline>+  NULL, <newline>+}; <newline>+#define kTestPins { \ <newline>+  kTestAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+#define kNoPins { \ <newline>+  NULL, NULL, \ <newline>+} <newline>+ <newline>+#if defined(OS_CHROMEOS) <newline>+  static const bool kTwitterHSTS = true; <newline>+#else <newline>+  static const bool kTwitterHSTS = false; <newline>+#endif <newline>+ <newline>+// In the medium term this list is likely to just be hardcoded here. This <newline>+// slightly odd form removes the need for additional relocations records. <newline>+static const struct HSTSPreload kPreloadedSTS[] = { <newline>+  // (*.)google.com, iff using SSL must use an acceptable certificate. <newline>+  {12, true, "\006google\003com", false, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {25, true, "\013pinningtest\007appspot\003com", false, kTestPins, DOMAIN_APPSPOT_COM }, <newline>+  // Now we force HTTPS for subtrees of google.com. <newline>+  {19, true, "\006health\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM  }, <newline>+  {21, true, "\010checkout\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {19, true, "\006chrome\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004docs\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {18, true, "\005sites\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {25, true, "\014spreadsheets\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {22, false, "\011appengine\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {22, true, "\011encrypted\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {21, true, "\010accounts\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {21, true, "\010profiles\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004mail\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {23, true, "\012talkgadget\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004talk\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {29, true, "\020hostedtalkgadget\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004plus\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  // Other Google-related domains that must use HTTPS. <newline>+  {20, true, "\006market\007android\003com", true, kGooglePins, DOMAIN_ANDROID_COM }, <newline>+  {26, true, "\003ssl\020google-analytics\003com", true, kGooglePins, DOMAIN_GOOGLE_ANALYTICS_COM }, <newline>+  {18, true, "\005drive\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {16, true, "\012googleplex\003com", true, kGooglePins, DOMAIN_GOOGLEPLEX_COM }, <newline>+  {19, true, "\006groups\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004apis\006google\003com", true, kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  // chart.apis.google.com is *not* HSTS because the certificate doesn't match <newline>+  // and there are lots of links out there that still use the name. The correct <newline>+  // hostname for this is chart.googleapis.com. <newline>+  {23, true, "\005chart\004apis\006google\003com", false, kGooglePins, DOMAIN_GOOGLE_COM}, <newline>+ <newline>+  // Other Google-related domains that must use an acceptable certificate <newline>+  // iff using SSL. <newline>+  {11, true, "\005ytimg\003com", false, kGooglePins, DOMAIN_YTIMG_COM }, <newline>+  {23, true, "\021googleusercontent\003com", false, kGooglePins, DOMAIN_GOOGLEUSERCONTENT_COM }, <newline>+  {13, true, "\007youtube\003com", false, kGooglePins, DOMAIN_YOUTUBE_COM }, <newline>+  {16, true, "\012googleapis\003com", false, kGooglePins, DOMAIN_GOOGLEAPIS_COM }, <newline>+  {22, true, "\020googleadservices\003com", false, kGooglePins, DOMAIN_GOOGLEADSERVICES_COM }, <newline>+  {16, true, "\012googlecode\003com", false, kGooglePins, DOMAIN_GOOGLECODE_COM }, <newline>+  {13, true, "\007appspot\003com", false, kGooglePins, DOMAIN_APPSPOT_COM }, <newline>+  {23, true, "\021googlesyndication\003com", false, kGooglePins, DOMAIN_GOOGLESYNDICATION_COM }, <newline>+  {17, true, "\013doubleclick\003net", false, kGooglePins, DOMAIN_DOUBLECLICK_NET }, <newline>+  {17, true, "\003ssl\007gstatic\003com", false, kGooglePins, DOMAIN_GSTATIC_COM }, <newline>+  // Exclude the learn.doubleclick.net subdomain because it uses a different <newline>+  // CA. <newline>+  {23, true, "\005learn\013doubleclick\003net", false, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  // Now we force HTTPS for other sites that have requested it. <newline>+  {16, false, "\003www\006paypal\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false, "\003www\006elanex\003biz", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true,  "\006jottit\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {19, true,  "\015sunshinepress\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {21, false, "\003www\013noisebridge\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {10, false, "\004neg9\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006riseup\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, false, "\006factor\002cc", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {22, false, "\007members\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {22, false, "\007support\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\002id\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, false, "\005lists\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {19, true, "\015splendidbacon\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {28, false, "\016aladdinschools\007appspot\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, true, "\011ottospora\002nl", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {25, false, "\003www\017paycheckrecords\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, false, "\010lastpass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {18, false, "\003www\010lastpass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, true, "\010keyerror\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\010entropia\002de", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\003www\010entropia\002de", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, true, "\005romab\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false, "\012logentries\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, false, "\003www\012logentries\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006stripe\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {27, true, "\025cloudsecurityalliance\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {15, true, "\005login\004sapo\002pt", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {19, true, "\015mattmccutchen\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, true, "\006betnet\002fr", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, true, "\010uprotect\002it", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, false, "\010squareup\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {9, true, "\004cert\002se", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, true, "\006crypto\002is", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, true, "\005simon\007butcher\004name", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {10, true, "\004linx\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\007dropcam\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\003www\007dropcam\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {30, true, "\010ebanking\014indovinabank\003com\002vn", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\007epoxate\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false, "\012torproject\003org", true, kTorPins, DOMAIN_TORPROJECT_ORG }, <newline>+  {21, true, "\004blog\012torproject\003org", true, kTorPins, DOMAIN_TORPROJECT_ORG }, <newline>+  {22, true, "\005check\012torproject\003org", true, kTorPins, DOMAIN_TORPROJECT_ORG }, <newline>+  {20, true, "\003www\012torproject\003org", true, kTorPins, DOMAIN_TORPROJECT_ORG }, <newline>+  {22, true, "\003www\014moneybookers\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\013ledgerscope\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {21, false, "\003www\013ledgerscope\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {10, false, "\004kyps\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, false, "\003www\004kyps\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, true, "\003app\007recurly\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, true, "\003api\007recurly\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\007greplin\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\003www\007greplin\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {27, true, "\006luneta\016nearbuysystems\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006ubertt\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {9, true, "\004pixi\002me", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, true, "\010grepular\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false , "\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, false , "\003www\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {26, false , "\011developer\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {30, false , "\003www\011developer\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {24, false , "\007sandbox\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {28, false , "\003www\007sandbox\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006crypto\003cat", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {25, true, "\014bigshinylock\006minazo\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {10, true, "\005crate\002io", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+ <newline>+  {13, false, "\007twitter\003com", kTwitterHSTS, kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {17, true, "\003www\007twitter\003com", kTwitterHSTS, kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {17, true, "\003api\007twitter\003com", kTwitterHSTS, kTwitterCDNPins, DOMAIN_TWITTER_COM }, <newline>+  {19, true, "\005oauth\007twitter\003com", kTwitterHSTS, kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {20, true, "\006mobile\007twitter\003com", kTwitterHSTS, kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {17, true, "\003dev\007twitter\003com", kTwitterHSTS, kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {22, true, "\010business\007twitter\003com", kTwitterHSTS, kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {22, true, "\010platform\007twitter\003com", false, kTwitterCDNPins, DOMAIN_TWITTER_COM }, <newline>+  {15, true, "\003si0\005twimg\003com", false, kTwitterCDNPins, DOMAIN_TWIMG_COM }, <newline>+  {23, true, "\010twimg0-a\010akamaihd\003net", false, kTwitterCDNPins, DOMAIN_AKAMAIHD_NET }, <newline>+}; <newline>+static const size_t kNumPreloadedSTS = ARRAYSIZE_UNSAFE(kPreloadedSTS); <newline>+ <newline>+static const struct HSTSPreload kPreloadedSNISTS[] = { <newline>+  // These SNI-only domains must always use HTTPS. <newline>+  {11, false, "\005gmail\003com", true, kGooglePins, DOMAIN_GMAIL_COM }, <newline>+  {16, false, "\012googlemail\003com", true, kGooglePins, DOMAIN_GOOGLEMAIL_COM }, <newline>+  {15, false, "\003www\005gmail\003com", true, kGooglePins, DOMAIN_GMAIL_COM }, <newline>+  {20, false, "\003www\012googlemail\003com", true, kGooglePins, DOMAIN_GOOGLEMAIL_COM }, <newline>+  // These SNI-only domains must use an acceptable certificate iff using <newline>+  // HTTPS. <newline>+  {22, true, "\020google-analytics\003com", false, kGooglePins, DOMAIN_GOOGLE_ANALYTICS_COM }, <newline>+  // www. requires SNI. <newline>+  {18, true, "\014googlegroups\003com", false, kGooglePins, DOMAIN_GOOGLEGROUPS_COM }, <newline>+}; <newline>+static const size_t kNumPreloadedSNISTS = ARRAYSIZE_UNSAFE(kPreloadedSNISTS); <newline>+ <newline>+// Returns the HSTSPreload entry for the |canonicalized_host| in |entries|, <newline>+// or NULL if there is none. Prefers exact hostname matches to those that <newline>+// match only because HSTSPreload.include_subdomains is true. <newline>+// <newline>+// |canonicalized_host| should be the hostname as canonicalized by <newline>+// CanonicalizeHost. <newline>+static const struct HSTSPreload* GetHSTSPreload( <newline>+    const std::string& canonicalized_host, <newline>+    const struct HSTSPreload* entries, <newline>+    size_t num_entries) { <newline>+  for (size_t i = 0; canonicalized_host[i]; i += canonicalized_host[i] + 1) { <newline>+    for (size_t j = 0; j < num_entries; j++) { <newline>+      const struct HSTSPreload* entry = entries + j; <newline>+ <newline>+      if (i != 0 && !entry->include_subdomains) <newline>+        continue; <newline>+ <newline>+      if (entry->length == canonicalized_host.size() - i && <newline>+          memcmp(entry->dns_name, &canonicalized_host[i], entry->length) == 0) { <newline>+        return entry; <newline>+      } <newline>+    } <newline>+  } <newline>+ <newline>+  return NULL; <newline>+} <newline>+ <newline>+// static <newline>+bool TransportSecurityState::IsGooglePinnedProperty(const std::string& host, <newline>+                                                    bool sni_available) { <newline>+  std::string canonicalized_host = CanonicalizeHost(host); <newline>+  const struct HSTSPreload* entry = <newline>+      GetHSTSPreload(canonicalized_host, kPreloadedSTS, kNumPreloadedSTS); <newline>+ <newline>+  if (entry && entry->pins.required_hashes == kGoogleAcceptableCerts) <newline>+    return true; <newline>+ <newline>+  if (sni_available) { <newline>+    entry = GetHSTSPreload(canonicalized_host, kPreloadedSNISTS, <newline>+                           kNumPreloadedSNISTS); <newline>+    if (entry && entry->pins.required_hashes == kGoogleAcceptableCerts) <newline>+      return true; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+// static <newline>+void TransportSecurityState::ReportUMAOnPinFailure(const std::string& host) { <newline>+  std::string canonicalized_host = CanonicalizeHost(host); <newline>+ <newline>+  const struct HSTSPreload* entry = <newline>+      GetHSTSPreload(canonicalized_host, kPreloadedSTS, kNumPreloadedSTS); <newline>+ <newline>+  if (!entry) { <newline>+    entry = GetHSTSPreload(canonicalized_host, kPreloadedSNISTS, <newline>+                           kNumPreloadedSNISTS); <newline>+  } <newline>+ <newline>+  DCHECK(entry); <newline>+  DCHECK(entry->pins.required_hashes); <newline>+  DCHECK(entry->second_level_domain_name != DOMAIN_NOT_PINNED); <newline>+ <newline>+  UMA_HISTOGRAM_ENUMERATION("Net.PublicKeyPinFailureDomain", <newline>+                            entry->second_level_domain_name, DOMAIN_NUM_EVENTS); <newline>+} <newline>+ <newline>+// IsPreloadedSTS returns true if the canonicalized hostname should always be <newline>+// considered to have STS enabled. <newline>+bool TransportSecurityState::IsPreloadedSTS( <newline>+    const std::string& canonicalized_host, <newline>+    bool sni_available, <newline>+    DomainState* out) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  out->preloaded = true; <newline>+  out->mode = DomainState::MODE_STRICT; <newline>+  out->include_subdomains = false; <newline>+ <newline>+  for (size_t i = 0; canonicalized_host[i]; i += canonicalized_host[i] + 1) { <newline>+    std::string host_sub_chunk(&canonicalized_host[i], <newline>+                               canonicalized_host.size() - i); <newline>+    out->domain = DNSDomainToString(host_sub_chunk); <newline>+    std::string hashed_host(HashHost(host_sub_chunk)); <newline>+    if (forced_hosts_.find(hashed_host) != forced_hosts_.end()) { <newline>+      *out = forced_hosts_[hashed_host]; <newline>+      out->domain = DNSDomainToString(host_sub_chunk); <newline>+      out->preloaded = true; <newline>+      return true; <newline>+    } <newline>+    bool ret; <newline>+    if (HasPreload(kPreloadedSTS, kNumPreloadedSTS, canonicalized_host, i, out, <newline>+                   &ret)) { <newline>+      return ret; <newline>+    } <newline>+    if (sni_available && <newline>+        HasPreload(kPreloadedSNISTS, kNumPreloadedSNISTS, canonicalized_host, i, <newline>+                   out, &ret)) { <newline>+      return ret; <newline>+    } <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+static std::string HashesToBase64String( <newline>+    const FingerprintVector& hashes) { <newline>+  std::vector<std::string> hashes_strs; <newline>+  for (FingerprintVector::const_iterator <newline>+       i = hashes.begin(); i != hashes.end(); i++) { <newline>+    std::string s; <newline>+    const std::string hash_str(reinterpret_cast<const char*>(i->data), <newline>+                               sizeof(i->data)); <newline>+    base::Base64Encode(hash_str, &s); <newline>+    hashes_strs.push_back(s); <newline>+  } <newline>+ <newline>+  return JoinString(hashes_strs, ','); <newline>+} <newline>+ <newline>+TransportSecurityState::DomainState::DomainState() <newline>+    : mode(MODE_STRICT), <newline>+      created(base::Time::Now()), <newline>+      include_subdomains(false), <newline>+      preloaded(false) { <newline>+} <newline>+ <newline>+TransportSecurityState::DomainState::~DomainState() { <newline>+} <newline>+ <newline>+bool TransportSecurityState::DomainState::IsChainOfPublicKeysPermitted( <newline>+    const FingerprintVector& hashes) { <newline>+ <newline>+  if (HashesIntersect(bad_preloaded_spki_hashes, hashes)) { <newline>+    LOG(ERROR) << "Rejecting public key chain for domain " << domain <newline>+               << ". Validated chain: " << HashesToBase64String(hashes) <newline>+               << ", matches one or more bad hashes: " <newline>+               << HashesToBase64String(bad_preloaded_spki_hashes); <newline>+    return false; <newline>+  } <newline>+ <newline>+  if (!(dynamic_spki_hashes.empty() && preloaded_spki_hashes.empty()) && <newline>+      !HashesIntersect(dynamic_spki_hashes, hashes) && <newline>+      !HashesIntersect(preloaded_spki_hashes, hashes)) { <newline>+    LOG(ERROR) << "Rejecting public key chain for domain " << domain <newline>+               << ". Validated chain: " << HashesToBase64String(hashes) <newline>+               << ", expected: " << HashesToBase64String(dynamic_spki_hashes) <newline>+               << " or: " << HashesToBase64String(preloaded_spki_hashes); <newline>+ <newline>+    return false; <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+bool TransportSecurityState::DomainState::IsMoreStrict( <newline>+    const TransportSecurityState::DomainState& other) { <newline>+  if (this->dynamic_spki_hashes.empty() && !other.dynamic_spki_hashes.empty()) <newline>+    return false; <newline>+ <newline>+  if (!this->include_subdomains && other.include_subdomains) <newline>+    return false; <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+bool TransportSecurityState::DomainState::ShouldRedirectHTTPToHTTPS() <newline>+    const { <newline>+  return mode == MODE_STRICT; <newline>+} <newline>+ <newline>+}  // namespace
f21998d5620ed2b999e7bf5f0beebdd54f908bc	scottmg@chromium.org <scottmg@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 27 05:41:23 2012 +0000	gyp r1246 -> r1282 The majority of these are test-only additions that don't affect existing build system functionality. r1247 Explicit paths to tools for ninja, rather than relying on environment r1248 Unbreak Windows build r1249 Unbreak Mac and vs2005 - Don't run tests on OS where they're not applicable. r1250 Fallback behaviour was broken for forcing express version r1251 MSBuild: TargetPath should match Lib.OutputFile or Link.OutputFile to avoid the MSB8012 warning. r1252 ninja windows: test for additional link dependencies r1253 ninja windows: test for runtime library settings r1254 ninja windows: test RTTI flag r1255 ninja windows: test for function level linking r1256 ninja windows: test ASLR (aka DYNAMICBASE) flag r1257 ninja windows: test for additional linker options r1258 ninja windows: test exception handling flags r1259 ninja windows: test for additional compiler options r1260 ninja windows: test linker subsystem flag r1261 Add run_dumpbin as test function for VS-based testers r1262 ninja windows: test for warning level r1263 ninja windows: add test for delayload dlls r1264 ninja windows: test for warning as error flag r1265 Fix exception handling test on vs2010 r1266 Don't try to find devenv on non-Windows. r1267 ninja windows: test for compiler optimization settings r1268 Correct topological sort. r1269 ninja windows: test that default libraries are correctly linked against r1270 ninja windows: test for opt:ref/noref r1271 ninja windows: test for opt:icf/noicf r1272 ninja windows: test for buffer security setting r1273 ninja windows: test for nxcompat linker flag r1274 ninja windows: test for linker debug information flag r1275 ninja windows: add test for RTC flag r1276 ninja windows: test for debug format setting r1277 ninja windows: test for incremental linking flag r1278 ninja windows: test for linker additional library directories r1279 ninja windows: test for linker fixed base address flag r1280 ninja windows: Fixes for recently added tests r1281 ninja windows: Various style fixes for recently added tests r1282 Change build commands to use @rsp files R=thakis@chromium.org			http://codereview.chromium.org/9863020	svn://svn.chromium.org/chrome/trunk/src@129146 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 6d49d67..219b532 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -119,7 +119,7 @@ deps = { <newline>     (Var("googlecode_url") % "grit-i18n") + "/trunk@18", <newline>   "src/tools/gyp": <newline>-    (Var("googlecode_url") % "gyp") + "/trunk@1246", <newline>+    (Var("googlecode_url") % "gyp") + "/trunk@1282", <newline>   "src/v8": <newline>     (Var("googlecode_url") % "v8") + "/trunk@" + Var("v8_revision"),
50832ed8fef1c38c2bbc85414734f98669fe495	scottmg@chromium.org <scottmg@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 27 05:41:23 2012 +0000	gyp r1246 -> r1282 The majority of these are test-only additions that don't affect existing build system functionality. r1247 Explicit paths to tools for ninja, rather than relying on environment r1248 Unbreak Windows build r1249 Unbreak Mac and vs2005 - Don't run tests on OS where they're not applicable. r1250 Fallback behaviour was broken for forcing express version r1251 MSBuild: TargetPath should match Lib.OutputFile or Link.OutputFile to avoid the MSB8012 warning. r1252 ninja windows: test for additional link dependencies r1253 ninja windows: test for runtime library settings r1254 ninja windows: test RTTI flag r1255 ninja windows: test for function level linking r1256 ninja windows: test ASLR (aka DYNAMICBASE) flag r1257 ninja windows: test for additional linker options r1258 ninja windows: test exception handling flags r1259 ninja windows: test for additional compiler options r1260 ninja windows: test linker subsystem flag r1261 Add run_dumpbin as test function for VS-based testers r1262 ninja windows: test for warning level r1263 ninja windows: add test for delayload dlls r1264 ninja windows: test for warning as error flag r1265 Fix exception handling test on vs2010 r1266 Don't try to find devenv on non-Windows. r1267 ninja windows: test for compiler optimization settings r1268 Correct topological sort. r1269 ninja windows: test that default libraries are correctly linked against r1270 ninja windows: test for opt:ref/noref r1271 ninja windows: test for opt:icf/noicf r1272 ninja windows: test for buffer security setting r1273 ninja windows: test for nxcompat linker flag r1274 ninja windows: test for linker debug information flag r1275 ninja windows: add test for RTC flag r1276 ninja windows: test for debug format setting r1277 ninja windows: test for incremental linking flag r1278 ninja windows: test for linker additional library directories r1279 ninja windows: test for linker fixed base address flag r1280 ninja windows: Fixes for recently added tests r1281 ninja windows: Various style fixes for recently added tests r1282 Change build commands to use @rsp files R=thakis@chromium.org			http://codereview.chromium.org/9863020	svn://svn.chromium.org/chrome/trunk/src@129146 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 6d49d67..219b532 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -119,7 +119,7 @@ deps = { <newline>     (Var("googlecode_url") % "grit-i18n") + "/trunk@18", <newline>   "src/tools/gyp": <newline>-    (Var("googlecode_url") % "gyp") + "/trunk@1246", <newline>+    (Var("googlecode_url") % "gyp") + "/trunk@1282", <newline>   "src/v8": <newline>     (Var("googlecode_url") % "v8") + "/trunk@" + Var("v8_revision"),
7af6c47bffdbd7345b360677f70215ce8449770	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 26 20:06:05 2012 +0000	Add hsts_preloaded.h This CL is the result of: % cat public_key_hashes.h transport_security_state.cc > hsts_preloaded.h This is purely to make a future CL easier to review. (Not reviewed)				svn://svn.chromium.org/chrome/trunk/src@128984 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/hsts_preloaded.h b/net/base/hsts_preloaded.h <newline>new file mode 100644 <newline>index 0000000..342c435 <newline>--- /dev/null <newline>+++ b/net/base/hsts_preloaded.h <newline>@@ -0,0 +1,2904 @@ <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#ifndef NET_BASE_PUBLIC_KEY_HASHES_ <newline>+#define NET_BASE_PUBLIC_KEY_HASHES_ <newline>+#pragma once <newline>+ <newline>+// This file contains SubjectPublicKeyInfo hashes for public key pinning. The <newline>+// hashes are base64 encoded, SHA1 digests. <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICPDCCAaUCEDyRMcsf9tAbDpq40ES/Er4wDQYJKoZIhvcNAQEFBQAwXzELMAkG <newline>+A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFz <newline>+cyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTk2 <newline>+MDEyOTAwMDAwMFoXDTI4MDgwMjIzNTk1OVowXzELMAkGA1UEBhMCVVMxFzAVBgNV <newline>+BAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFzcyAzIFB1YmxpYyBQcmlt <newline>+YXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGfMA0GCSqGSIb3DQEBAQUAA4GN <newline>+ADCBiQKBgQDJXFme8huKARS0EN8EQNvjV69qRUCPhAwL0TPZ2RHP7gJYHyX3KqhE <newline>+BarsAx94f56TuZoAqiN91qyFomNFx3InzPRMxnVx0jnvT0Lwdd8KkMaOIG+YD/is <newline>+I19wKTakyYbnsZogy1Olhec9vn2a/iRFM9x2Fe0PonFkTGUugWhFpwIDAQABMA0G <newline>+CSqGSIb3DQEBBQUAA4GBABByUqkFFBkyCEHwxWsKzH4PIRnN5GfcX6kb5sroc50i <newline>+2JhucwNhkcV8sEVAbkSdjbCxlnRhLQ2pRdKkkirWmnWXbj9T/UWZYB2oK0z5XqcJ <newline>+2HUw19JlYD1n1khVdWk/kfVIC0dpImmClr7JyDiGSnoscxlIaU5rfGW/D/xwzoiQ <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3[] = <newline>+    "sha1/4n972HfV354KP560yw4uqe/baXc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGjCCAwICEQCbfgZJoz5iudXukEhxKe9XMA0GCSqGSIb3DQEBBQUAMIHKMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl <newline>+cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu <newline>+LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT <newline>+aWduIENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp <newline>+dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD <newline>+VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT <newline>+aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ <newline>+bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu <newline>+IENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMu6nFL8eB8aHm8b <newline>+N3O9+MlrlBIwT/A2R/XQkQr1F8ilYcEWQE37imGQ5XYgwREGfassbqb1EUGO+i2t <newline>+KmFZpGcmTNDovFJbcCAEWNF6yaRpvIMXZK0Fi7zQWM6NjPXr8EJJC52XJ2cybuGu <newline>+kxUccLwgTS8Y3pKI6GyFVxEa6X7jJhFUokWWVYPKMIno3Nij7SqAP395ZVc+FSBm <newline>+CC+Vk7+qRy+oRpfwEuL+wgorUeZ25rdGt+INpsyow0xZVYnm6FNcHOqd8GIWC6fJ <newline>+Xwzw3sJ2zq/3avL6QaaiMxTJ5Xpj055iN9WFZZ4O5lMkdBteHRJTW8cs54NJOxWu <newline>+imi5V5cCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAERSWwauSCPc/L8my/uRan2Te <newline>+2yFPhpk0djZX3dAVL8WtfxUfN2JzPtTnX84XA9s1+ivbrmAJXx5fj267Cz3qWhMe <newline>+DGBvtcC1IyIuBwvLqXTLR7sdwdela8wv0kL9Sd2nic9TutoAWii/gt/4uhMdUIaC <newline>+/Y4wjylGsB49Ndo4YhYYSq3mtlFs3q9i6wHQHiT+eo8SGhJouPtmmRQURVyu565p <newline>+F4ErWjfJXir0xuKhXFSbplQAz/DxwceYMBo7Nhbbo27q/a2ywtrvAkcTisDxszGt <newline>+TxzhT5yvDwyd93gN2PQ1VoDat20Xj50egWTh/sVFuq1ruQp6Tk9LhO5L8X3dEQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G3[] = <newline>+    "sha1/IvGeLsbqzPxdI0b0wuj2xVTdXgc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICsDCCAhmgAwIBAgIDC2dxMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDkwNjA4MjA0MzI3WhcNMTMwNjA3MTk0MzI3 <newline>+WjBGMQswCQYDVQQGEwJVUzETMBEGA1UEChMKR29vZ2xlIEluYzEiMCAGA1UEAxMZ <newline>+R29vZ2xlIEludGVybmV0IEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOBjQAw <newline>+gYkCgYEAye23pIucV+eEPkB9hPSP0XFjU5nneXQUr0SZMyCSjXvlKAy6rWxJfoNf <newline>+NFlOCnowzdDXxFdF7dWq1nMmzq0yE7jXDx07393cCDaob1FEm8rWIFJztyaHNWrb <newline>+qeXUWaUr/GcZOfqTGBhs3t0lig4zFEfC7wFQeeT9adGnwKziV28CAwEAAaOBozCB <newline>+oDAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFL/AMOv1QxE+Z7qekfv8atrjaxIk <newline>+MB8GA1UdIwQYMBaAFEjmaPkr0rKV10fYIyAQTzOYkJ/UMBIGA1UdEwEB/wQIMAYB <newline>+Af8CAQAwOgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2NybC5nZW90cnVzdC5jb20v <newline>+Y3Jscy9zZWN1cmVjYS5jcmwwDQYJKoZIhvcNAQEFBQADgYEAuIojxkiWsRF8YHde <newline>+BZqrocb6ghwYB8TrgbCoZutJqOkM0ymt9e8kTP3kS8p/XmOrmSfLnzYhLLkQYGfN <newline>+0rTw8Ktx5YtaiScRhKqOv5nwnQkhClIZmloJ0pC3+gz4fniisIWvXEyZ2VxVKfml <newline>+UUIuOss4jHg7y/j7lYe8vJD5UDI= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Google1024[] = <newline>+    "sha1/QMVAHW+MuvCLAO3vse6H0AWzuc0="; <newline>+ <newline>+// Not yet used publicly. <newline>+static const char kSPKIHash_Google2048[] = <newline>+    "sha1/AbkhxY0L343gKf+cki7NVWp+ozk="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDIDCCAomgAwIBAgIENd70zzANBgkqhkiG9w0BAQUFADBOMQswCQYDVQQGEwJV <newline>+UzEQMA4GA1UEChMHRXF1aWZheDEtMCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2Vy <newline>+dGlmaWNhdGUgQXV0aG9yaXR5MB4XDTk4MDgyMjE2NDE1MVoXDTE4MDgyMjE2NDE1 <newline>+MVowTjELMAkGA1UEBhMCVVMxEDAOBgNVBAoTB0VxdWlmYXgxLTArBgNVBAsTJEVx <newline>+dWlmYXggU2VjdXJlIENlcnRpZmljYXRlIEF1dGhvcml0eTCBnzANBgkqhkiG9w0B <newline>+AQEFAAOBjQAwgYkCgYEAwV2xWGcIYu6gmi0fCG2RFGiYCh7+2gRvE4RiIcPRfM6f <newline>+BeC4AfBONOziipUEZKzxa1NfBbPLZ4C/QgKO/t0BCezhABRP/PvwDN1Dulsr4R+A <newline>+cJkVV5MW8Q+XarfCaCMczE1ZMKxRHjuvK9buY0V7xdlfUNLjUA86iOe/FP3gx7kC <newline>+AwEAAaOCAQkwggEFMHAGA1UdHwRpMGcwZaBjoGGkXzBdMQswCQYDVQQGEwJVUzEQ <newline>+MA4GA1UEChMHRXF1aWZheDEtMCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2VydGlm <newline>+aWNhdGUgQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMBoGA1UdEAQTMBGBDzIwMTgw <newline>+ODIyMTY0MTUxWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gj <newline>+IBBPM5iQn9QwHQYDVR0OBBYEFEjmaPkr0rKV10fYIyAQTzOYkJ/UMAwGA1UdEwQF <newline>+MAMBAf8wGgYJKoZIhvZ9B0EABA0wCxsFVjMuMGMDAgbAMA0GCSqGSIb3DQEBBQUA <newline>+A4GBAFjOKer89961zgK5F7WF0bnj4JXMJTENAKaSbn+2kmOeUJXRmm/kEd5jhW6Y <newline>+7qj/WsjTVbJmcVfewCHrPSqnI0kBBIZCe/zuf6IWUrVnZ9NA2zsmWLIodz2uFHdh <newline>+1voqZiegDfqnc1zqcPGUIWVEX/r87yloqaKHee9570+sB3c4 <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_EquifaxSecureCA[] = <newline>+    "sha1/SOZo+SvSspXXR9gjIBBPM5iQn9Q="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICsjCCAhugAwIBAgIDBe3YMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDUwODMxMjA0MDM3WhcNMTIwODMxMjA0MDM3 <newline>+WjBIMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQWV0bmEgSW5jLjEkMCIGA1UEAxMb <newline>+QWV0bmEgSW5jLiBTZWN1cmUgU2VydmVyIENBMIGfMA0GCSqGSIb3DQEBAQUAA4GN <newline>+ADCBiQKBgQCnB2yrm4i44DG5epPu0fbe/pOZDWOvAS7qCcy6YbSkPfOHfH9Blmf3 <newline>+8L6D5yY1pzmTXaU7cDQu4qmj21toEIGwBziMmW6NsiV8nHtmtfXfHP6xrmyPUdN2 <newline>+DdTj937fnrYOoyMhGgBYEjiemeHFQxZSpKZdolFEFXbUa2/yWQafrQIDAQABo4Gj <newline>+MIGgMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQU2S4/xnaeitmFkzoxLnZeo33n <newline>+H4owHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gjIBBPM5iQn9QwEgYDVR0TAQH/BAgw <newline>+BgEB/wIBADA6BgNVHR8EMzAxMC+gLaArhilodHRwOi8vY3JsLmdlb3RydXN0LmNv <newline>+bS9jcmxzL3NlY3VyZWNhLmNybDANBgkqhkiG9w0BAQUFAAOBgQBMSoZHIrD1rq8v <newline>+UG3UYbN76xiF9FDRzWTs5Mvv4Psvf2kk426slzNO0ukFAsmwqN1mA/P9Nc4FlMMC <newline>+YtcnLNwC/syEYdQBOJjxfTVGTqh5q6jDs7S3rPJv8mrFk8ldC8PxU1ZJVfSlFCDn <newline>+6diMDgvOAJfUeJlIRLGu2k/ksI0Y1w== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Aetna[] = <newline>+    "sha1/klKqFN6/gK4wqtlOYDhwJKVDLxo="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDfTCCAuagAwIBAgIDErvmMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDIwNTIxMDQwMDAwWhcNMTgwODIxMDQwMDAw <newline>+WjBCMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEbMBkGA1UE <newline>+AxMSR2VvVHJ1c3QgR2xvYmFsIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB <newline>+CgKCAQEA2swYYzD99BcjGlZ+W988bDjkcbd4kdS8odhM+KhDtgPpTSEHCIjaWC9m <newline>+OSm9BXiLnTjoBbdqfnGk5sRgprDvgOSJKA+eJdbtg/OtppHHmMlCGDUUna2YRpIu <newline>+T8rxh0PBFpVXLVDviS2Aelet8u5fa9IAjbkU+BQVNdnARqN7csiRv8lVK83Qlz6c <newline>+JmTM386DGXHKTubU1XupGc1V3sjs0l44U+VcT4wt/lAjNvxm5suOpDkZALeVAjmR <newline>+Cw7+OC7RHQWa9k0+bw8HHa8sHo9gOeL6NlMTOdReJivbPagUvTLrGAMoUgRx5asz <newline>+PeE4uwc2hGKceeoWMPRfwCvocWvk+QIDAQABo4HwMIHtMB8GA1UdIwQYMBaAFEjm <newline>+aPkr0rKV10fYIyAQTzOYkJ/UMB0GA1UdDgQWBBTAephojYn7qwVkDBF9qn1luMrM <newline>+TjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjA6BgNVHR8EMzAxMC+g <newline>+LaArhilodHRwOi8vY3JsLmdlb3RydXN0LmNvbS9jcmxzL3NlY3VyZWNhLmNybDBO <newline>+BgNVHSAERzBFMEMGBFUdIAAwOzA5BggrBgEFBQcCARYtaHR0cHM6Ly93d3cuZ2Vv <newline>+dHJ1c3QuY29tL3Jlc291cmNlcy9yZXBvc2l0b3J5MA0GCSqGSIb3DQEBBQUAA4GB <newline>+AHbhEm5OSxYShjAGsoEIz/AIx8dxfmbuwu3UOx//8PDITtZDOLC5MH0Y0FWDomrL <newline>+NhGc6Ehmo21/uBPUR/6LWlxz/K7ZGzIZOKuXNBSqltLroxwUCEm2u+WR74M26x1W <newline>+b8ravHNjkOR/ez4iyz0H7V84dJzjA1BOoa+Y7mHyhD8S <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustGlobal[] = <newline>+    "sha1/wHqYaI2J+6sFZAwRfap9ZbjKzE4="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDizCCAvSgAwIBAgIDDW5iMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDYxMTI3MDAwMDAwWhcNMTgwODIxMTYxNTAw <newline>+WjBYMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjExMC8GA1UE <newline>+AxMoR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIw <newline>+DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL64FXv/1Hx9Z62DZHvIQlMt3/aE <newline>+CCBh1gFZapxEEa/vdv2Vfs5hMLt6g18CvQFmyu4VjW+hMJy9oYWelDrzVogAMc/Y <newline>+7mqWAtntA4z7dW3n6rhVFgUWmvTgXrGIwGSFXBVNiMe3uuB16a0FPZ3HiUjguyjI <newline>+A+Ewk2ReUsBZcCI1V4iK8ZUKg9e8MXMBNO3vRnHgawKoNXJrl5tm4MsceV/YGgRo <newline>+HkcC5p1g4jaXAd/ONZLfvmfHbXdZO4+d1pAVlLxCNBDBOfmxJz5+1op1xbKvltOi <newline>+3pvkmL594emBrbZv/NcO2uA0sA0ad+fjCJjvWPqchLc2r8LfrNL0EAZwcTUCAwEA <newline>+AaOB6DCB5TAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFCzVUEGXFYvwjzZhW0r7 <newline>+a9mZyTOSMB8GA1UdIwQYMBaAFEjmaPkr0rKV10fYIyAQTzOYkJ/UMA8GA1UdEwEB <newline>+/wQFMAMBAf8wOgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2NybC5nZW90cnVzdC5j <newline>+b20vY3Jscy9zZWN1cmVjYS5jcmwwRgYDVR0gBD8wPTA7BgRVHSAAMDMwMQYIKwYB <newline>+BQUHAgEWJWh0dHA6Ly93d3cuZ2VvdHJ1c3QuY29tL3Jlc291cmNlcy9jcHMwDQYJ <newline>+KoZIhvcNAQEFBQADgYEAr/MO1nKrx6mXyiprhDneeanwgeUIZ6vXLyACAXEMBCLJ <newline>+HoiVA8lJOq9nCEmw1Qj1ID2AkaDFh6P7yaMXkfmoL67pD9+Wcg91F4BdeAFNnx9t <newline>+e9j1QjgjGpmT9IO+OzV05zcTNXqstLaQgmwnpODsnjW9v+UpoUefWzL86Zl9Kzk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustPrimary[] = <newline>+    "sha1/sBmJ5+/7Sq/LFI9YRjl2IkFQ4bo="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIFijCCBHKgAwIBAgIKYSCKYgAAAAAACDANBgkqhkiG9w0BAQUFADBSMQswCQYD <newline>+VQQGEwJVUzEaMBgGA1UEChMRSW50ZWwgQ29ycG9yYXRpb24xJzAlBgNVBAMTHklu <newline>+dGVsIEV4dGVybmFsIEJhc2ljIFBvbGljeSBDQTAeFw0wOTA1MTUxOTI3MjZaFw0x <newline>+NTA1MTUxOTM3MjZaMFYxCzAJBgNVBAYTAlVTMRowGAYDVQQKExFJbnRlbCBDb3Jw <newline>+b3JhdGlvbjErMCkGA1UEAxMiSW50ZWwgRXh0ZXJuYWwgQmFzaWMgSXNzdWluZyBD <newline>+QSAzQjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQEM1Wn9TU9vc9C <newline>++/Tc7KB+eiYElmrcEWE32WUdHvWG+IcQHVQsikTmMyKKojNLw2B5s6Iekc8ivDo/ <newline>+wCfjZzX9JyftMnc+AArc0la87Olybzm8K9jXEfTBvTnUSFSiI9ZYefITdiUgqlAF <newline>+uljFZEHYKYtLuhrRacpmQfP4mV63NKdc2bT804HRf6YptZFa4k6YN94zlrGNrBuQ <newline>+Q74WFzz/jLBusbUpEkro6Mu/ZYFOFWQrV9lBhF9Ruk8yN+3N6n9fUo/qBigiF2kE <newline>+n9xVh1ykl7SCGL2jBUkXx4qgV27a6Si8lRRdgrHGtN/HWnSWlLXTH5l575H4Lq++ <newline>+77OFv38CAwEAAaOCAlwwggJYMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFA7G <newline>+KvdZsggQkCVvw939imYxMCvFMAsGA1UdDwQEAwIBhjASBgkrBgEEAYI3FQEEBQID <newline>+AQABMCMGCSsGAQQBgjcVAgQWBBQ5oFY2ekKQ/5Ktim+VdMeSWb4QWTAZBgkrBgEE <newline>+AYI3FAIEDB4KAFMAdQBiAEMAQTAfBgNVHSMEGDAWgBQaxgxKxEdvqNutK/D0Vgaj <newline>+7TdUDDCBvQYDVR0fBIG1MIGyMIGvoIGsoIGphk5odHRwOi8vd3d3LmludGVsLmNv <newline>+bS9yZXBvc2l0b3J5L0NSTC9JbnRlbCUyMEV4dGVybmFsJTIwQmFzaWMlMjBQb2xp <newline>+Y3klMjBDQS5jcmyGV2h0dHA6Ly9jZXJ0aWZpY2F0ZXMuaW50ZWwuY29tL3JlcG9z <newline>+aXRvcnkvQ1JML0ludGVsJTIwRXh0ZXJuYWwlMjBCYXNpYyUyMFBvbGljeSUyMENB <newline>+LmNybDCB4wYIKwYBBQUHAQEEgdYwgdMwYwYIKwYBBQUHMAKGV2h0dHA6Ly93d3cu <newline>+aW50ZWwuY29tL3JlcG9zaXRvcnkvY2VydGlmaWNhdGVzL0ludGVsJTIwRXh0ZXJu <newline>+YWwlMjBCYXNpYyUyMFBvbGljeSUyMENBLmNydDBsBggrBgEFBQcwAoZgaHR0cDov <newline>+L2NlcnRpZmljYXRlcy5pbnRlbC5jb20vcmVwb3NpdG9yeS9jZXJ0aWZpY2F0ZXMv <newline>+SW50ZWwlMjBFeHRlcm5hbCUyMEJhc2ljJTIwUG9saWN5JTIwQ0EuY3J0MA0GCSqG <newline>+SIb3DQEBBQUAA4IBAQCxtQEHchVQhXyjEqtMVUMe6gkmPsIczHxSeqNbo9dsD+6x <newline>+bT65JT+oYgpIAtfEsYXeUJu1cChqpb22U5bMAz7eaQcW5bzefufWvA6lg2048B8o <newline>+czBj/q+5P5NpYrUO8jOmN4jTjfJq3ElZ7yFWpy7rB3Vm/aN6ATYqWfMbS/xfh+JC <newline>+xmH3droUmMJI0/aZJHsLtjbjFnNsHDNrJZX1vxlM78Lb1hjskTENPmhbVbfTj5i/ <newline>+ZGnhv4tmI8QZPCNtcegXJrfhRl2D9bWpdTOPrWiLDUqzy1Z6KL7TcOS/PCl8RHCJ <newline>+XkPau/thTQCpIoDa2+c+3XA++gRTfAQ4svTO260N <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Intel[] = <newline>+    "sha1/DsYq91myCBCQJW/D3f2KZjEwK8U="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDWzCCAsSgAwIBAgIDCaxIMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDgwODE1MTY0NTE1WhcNMTMwMjE0MTc0NTE1 <newline>+WjBtMQswCQYDVQQGEwJERTEcMBoGA1UEChMTVEMgVHJ1c3RDZW50ZXIgR21iSDEe <newline>+MBwGA1UECxMVVEMgVHJ1c3RDZW50ZXIgU1NMIENBMSAwHgYDVQQDExdUQyBUcnVz <newline>+dENlbnRlciBTU0wgQ0EgSTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB <newline>+AOkCoJoNbJw33wSxNWbDdmIfDIedR8Zmr/mjOhMkXdxRYb6qrl/WfMEuo4PBcysJ <newline>+kF81LaDMkBH0zc7Hs1eYixrMVObkCmEUjxYylgOk4ExGwhmIWDJUWGslNBUIIhFf <newline>++ucDWuGZNfILQrwCWRHYBG0n/6lZPylCqopCMYhBK5sTI/PyuHEAzDL7+buep/Na <newline>+zn+oy/a6x1nobsuL9X2oFaWZb7Z6ty5kZ/U56JHa7vnsLrg4ePwiQb8jtyUdz0fD <newline>+uMHkNzK0gWxr4hm0v92otYFuOTZqNLEJneeiILxUCCMop2chr1obpq2zGVNxJ/rP <newline>+StWmcu75KBGMpT+mzFgIyf0CAwEAAaOBozCBoDAOBgNVHQ8BAf8EBAMCAQYwHQYD <newline>+VR0OBBYEFOe/bKlImXeG4tD/MKCQHQtk0IU6MB8GA1UdIwQYMBaAFEjmaPkr0rKV <newline>+10fYIyAQTzOYkJ/UMBIGA1UdEwEB/wQIMAYBAf8CAQAwOgYDVR0fBDMwMTAvoC2g <newline>+K4YpaHR0cDovL2NybC5nZW90cnVzdC5jb20vY3Jscy9zZWN1cmVjYS5jcmwwDQYJ <newline>+KoZIhvcNAQEFBQADgYEAVKyJLbJha83PggEit8+dzh50wIsKXpTV2K6K4HnUI1kh <newline>+xqocLVfQORluC+LS7L78D2EKTWLZ8WNujiP6DbbIPSTsMasuiBMQMBUlJMUqsp/M <newline>+XmQJgIGAbxsr19MY6mmB30oWuo4cjHnkMzSCfhcON6Rxvbjijk2qCWXkk2T2HAk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_TCTrustCenter[] = <newline>+    "sha1/gzuEEAB/bkqdQS3EIjk2by7lW+k="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDJDCCAo2gAwIBAgIDBfw3MA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDYwNzIxMTUwNTA2WhcNMTEwNzEyMTUwNTA2 <newline>+WjA5MQswCQYDVQQGEwJVSzEXMBUGA1UEChMOVm9kYWZvbmUgR3JvdXAxETAPBgNV <newline>+BAMTCFZvZGFmb25lMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAs61K <newline>+wbMcB+GGGbjyo1dYEiVNGRYKRsDXfeOgeq03Vebf7D5Xq6a0Qs4Rvp6CuRTSNDPi <newline>+M+0vuQRW5sib9UD8UB2x4znc6FriRV4FUpAyKNVqQ9NB0MOBpQekVlX9DzcXkn+p <newline>+zWRi6tt3CtPsaDyHo06oAwX5qu3tW3pjtf0vnQqJWwwA6Mp4YJ/acHD/vVtt67hz <newline>+a0Upz0O2DEJetb3OaqI5yaNZ91y6i7sK0KTvBQxZHeJs+y5UjluHv3ptMUZvmsf0 <newline>+SiKysXnkg5mtsZSFlfM+U7dADq1zNb764NV5sSlmbDLEkvohQyg1p9gh2HX9Jk4A <newline>+e9nnF4hjw2U33HLBXwIDAQABo4GgMIGdMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4E <newline>+FgQUR+YiAaq+68BPLD6l0UcvzlkcgvswHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gj <newline>+IBBPM5iQn9QwDwYDVR0TAQH/BAUwAwEB/zA6BgNVHR8EMzAxMC+gLaArhilodHRw <newline>+Oi8vY3JsLmdlb3RydXN0LmNvbS9jcmxzL3NlY3VyZWNhLmNybDANBgkqhkiG9w0B <newline>+AQUFAAOBgQCs37zuSY/KkPigCvJevu+ewWy9GP2bFZi5EaxKuHGF+tYFZUNkyc06 <newline>+ACYMM3ADPM6dVUYeXIDZnPfV8BJFCpdoAHkSNlg341AVjabCOWtzOYolBn0ua8Wi <newline>+BM471XfzzXD7yMliek9J4fUn2vQU7MYgEkSAA53ZkMScGDkA/c1wMQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Vodafone[] = <newline>+    "sha1/DX/hXFUUNmiZ/EDWIgjvIuvRFRw="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIID1TCCAr2gAwIBAgIDAjbRMA0GCSqGSIb3DQEBBQUAMEIxCzAJBgNVBAYTAlVT <newline>+MRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMRswGQYDVQQDExJHZW9UcnVzdCBHbG9i <newline>+YWwgQ0EwHhcNMTAwMjE5MjI0NTA1WhcNMjAwMjE4MjI0NTA1WjA8MQswCQYDVQQG <newline>+EwJVUzEXMBUGA1UEChMOR2VvVHJ1c3QsIEluYy4xFDASBgNVBAMTC1JhcGlkU1NM <newline>+IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx3H4Vsce2cy1rfa0 <newline>+l6P7oeYLUF9QqjraD/w9KSRDxhApwfxVQHLuverfn7ZB9EhLyG7+T1cSi1v6kt1e <newline>+6K3z8Buxe037z/3R5fjj3Of1c3/fAUnPjFbBvTfjW761T4uL8NpPx+PdVUdp3/Jb <newline>+ewdPPeWsIcHIHXro5/YPoar1b96oZU8QiZwD84l6pV4BcjPtqelaHnnzh8jfyMX8 <newline>+N8iamte4dsywPuf95lTq319SQXhZV63xEtZ/vNWfcNMFbPqjfWdY3SZiHTGSDHl5 <newline>+HI7PynvBZq+odEj7joLCniyZXHstXZu8W1eefDp6E63yoxhbK1kPzVw662gzxigd <newline>+gtFQiwIDAQABo4HZMIHWMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUa2k9ahhC <newline>+St2PAmU5/TUkhniRFjAwHwYDVR0jBBgwFoAUwHqYaI2J+6sFZAwRfap9ZbjKzE4w <newline>+EgYDVR0TAQH/BAgwBgEB/wIBADA6BgNVHR8EMzAxMC+gLaArhilodHRwOi8vY3Js <newline>+Lmdlb3RydXN0LmNvbS9jcmxzL2d0Z2xvYmFsLmNybDA0BggrBgEFBQcBAQQoMCYw <newline>+JAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmdlb3RydXN0LmNvbTANBgkqhkiG9w0B <newline>+AQUFAAOCAQEAq7y8Cl0YlOPBscOoTFXWvrSY8e48HM3P8yQkXJYDJ1j8Nq6iL4/x <newline>+/torAsMzvcjdSCIrYA+lAxD9d/jQ7ZZnT/3qRyBwVNypDFV+4ZYlitm12ldKvo2O <newline>+SUNjpWxOJ4cl61tt/qJ/OCjgNqutOaWlYsS3XFgsql0BYKZiZ6PAx2Ij9OdsRu61 <newline>+04BqIhPSLT90T+qvjF+0OJzbrs6vhB6m9jRRWXnT43XcvNfzc9+S7NIgWW+c+5X4 <newline>+knYYCnwPLKbK3opie9jzzl9ovY8+wXS7FXI6FoOpC+ZNmZzYV+yoAVHHb1c0XqtK <newline>+LEL2TxyJeN4mTvVvk0wVaydWTQBUbHq3tw== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_RapidSSL[] = <newline>+    "sha1/o5OZxATDsgmwgcIfIWIneMJ0jkw="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDxTCCAq2gAwIBAgIQAqxcJmoLQJuPC3nyrkYldzANBgkqhkiG9w0BAQUFADBs <newline>+MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3 <newline>+d3cuZGlnaWNlcnQuY29tMSswKQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5j <newline>+ZSBFViBSb290IENBMB4XDTA2MTExMDAwMDAwMFoXDTMxMTExMDAwMDAwMFowbDEL <newline>+MAkGA1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3 <newline>+LmRpZ2ljZXJ0LmNvbTErMCkGA1UEAxMiRGlnaUNlcnQgSGlnaCBBc3N1cmFuY2Ug <newline>+RVYgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMbM5XPm <newline>++9S75S0tMqbf5YE/yc0lSbZxKsPVlDRnogocsF9ppkCxxLeyj9CYpKlBWTrT3JTW <newline>+PNt0OKRKzE0lgvdKpVMSOO7zSW1xkX5jtqumX8OkhPhPYlG++MXs2ziS4wblCJEM <newline>+xChBVfvLWokVfnHoNb9Ncgk9vjo4UFt3MRuNs8ckRZqnrG0AFFoEt7oT61EKmEFB <newline>+Ik5lYYeBQVCmeVyJ3hlKV9Uu5l0cUyx+mM0aBhakaHPQNAQTXKFx01p8VdteZOE3 <newline>+hzBWBOURtCmAEvF5OYiiAhF8J2a3iLd48soKqDirCmTCv2ZdlYTBoSUeh10aUAsg <newline>+EsxBu24LUTi4S8sCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQF <newline>+MAMBAf8wHQYDVR0OBBYEFLE+w2kD+L9HAdSYJhoIAu9jZCvDMB8GA1UdIwQYMBaA <newline>+FLE+w2kD+L9HAdSYJhoIAu9jZCvDMA0GCSqGSIb3DQEBBQUAA4IBAQAcGgaX3Nec <newline>+nzyIZgYIVyHbIUf4KmeqvxgydkAQV8GK83rZEWWONfqe/EW1ntlMMUu4kehDLI6z <newline>+eM7b41N5cdblIZQB2lWHmiRk9opmzN6cN82oNLFpmyPInngiK3BD41VHMWEZ71jF <newline>+hS9OMPagMRYjyOfiZRYzy78aG6A9+MpeizGLYAiJLQwGXFK3xPkKmNEVX58Svnw2 <newline>+Yzi9RKR/5CYrCsSXaQ3pjOLAEFe4yHYSkVXySGnYvCoCWw9E1CAx2/S6cCZdkGCe <newline>+vEsXCS+0yx5DaMkHJ8HSXPfqIbloEpw8nL+e/IBcm2PN7EeqJSdnoDfzAIJ9VNep <newline>++OkuE6N36B9K <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_DigiCertEVRoot[] = <newline>+    "sha1/gzF+YoVCU9bXeDGQ7JGQVumRueM="; <newline>+ <newline>+// Not public <newline>+static const char kSPKIHash_Tor1[] = <newline>+    "sha1/juNxSTv9UANmpC9kF5GKpmWNx3Y="; <newline>+static const char kSPKIHash_Tor2[] = <newline>+    "sha1/lia43lPolzSPVIq34Dw57uYcLD8="; <newline>+static const char kSPKIHash_Tor3[] = <newline>+    "sha1/rzEyQIKOh77j87n5bjWUNguXF8Y="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICPTCCAaYCEQDNun9W8N/kvFT+IqyzcqpVMA0GCSqGSIb3DQEBAgUAMF8xCzAJ <newline>+BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xh <newline>+c3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05 <newline>+NjAxMjkwMDAwMDBaFw0yODA4MDEyMzU5NTlaMF8xCzAJBgNVBAYTAlVTMRcwFQYD <newline>+VQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xhc3MgMSBQdWJsaWMgUHJp <newline>+bWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOB <newline>+jQAwgYkCgYEA5Rm/baNWYS2ZSHH2Z965jeu3noaACpEO+jglr0aIguVzqKCbJF0N <newline>+H8xlbgyw0FaEGIeaBpsQoXPftFg5a27B9hXVqKg/qhIGjTGsf7A01480Z4gJzRQR <newline>+4k5FVmkfeAKA2txHkSm7NsljXMXg1y2He6G3MrB7MLoqLzGq7qNn2tsCAwEAATAN <newline>+BgkqhkiG9w0BAQIFAAOBgQBMP7iLxmjf7kMzDl3ppssHhE16M/+SG/Q2rdiVIjZo <newline>+EWx8QszznC7EBz8UsA9P/5CSdvnivErpj82ggAr3xSnxgiJduLHdgSOjeyUVRjB5 <newline>+FvjqBUuUfx3CHMjjt/QQQDwTw18fU+hI5Ia0e6E1sHslurjTjqs/OJ0ANACY89Fx <newline>+lA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass1[] = <newline>+    "sha1/I0PRSKJViZuUfUYaeX7ATP7RcLc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDhDCCAwqgAwIBAgIQL4D+I4wOIg9IZxIokYesszAKBggqhkjOPQQDAzCByjEL <newline>+MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW <newline>+ZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2ln <newline>+biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJp <newline>+U2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9y <newline>+aXR5IC0gRzQwHhcNMDcxMTA1MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCByjELMAkG <newline>+A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJp <newline>+U2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2lnbiwg <newline>+SW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2ln <newline>+biBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5 <newline>+IC0gRzQwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASnVnp8Utpkmw4tXNherJI9/gHm <newline>+GUo9FANL+mAnINmDiWn6VMaaGF5VKmTeBvaNSjutEDxlPZCIBIngMGGzrl0Bp3ve <newline>+fLK+ymVhAIau2o970ImtTR1ZmkGxvEeA3J5iw/mjgbIwga8wDwYDVR0TAQH/BAUw <newline>+AwEB/zAOBgNVHQ8BAf8EBAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJ <newline>+aW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYj <newline>+aHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFLMW <newline>+kf3upm7ktS5Jj4d4gYDs5bG1MAoGCCqGSM49BAMDA2gAMGUCMGYhDBgmYFo4e1ZC <newline>+4Kf8NoRRkSAsdk1DPcQdhCPQrNZ8NQbOzWm9kA3bbEhCHQ6qQgIxAJw9SDkjOVga <newline>+FRJZap7v1VmyHVIsmXHNxynfGyphe3HR3vPA5Q06Sqotp9iGKt0uEA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G4[] = <newline>+    "sha1/7WYxNdMb1OymFMQp4xkGn5TBJlA="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGjCCAwICEQDsoKeLbnVqAc/EfMwvlF7XMA0GCSqGSIb3DQEBBQUAMIHKMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl <newline>+cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu <newline>+LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT <newline>+aWduIENsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp <newline>+dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD <newline>+VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT <newline>+aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ <newline>+bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu <newline>+IENsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK3LpRFpxlmr8Y+1 <newline>+GQ9Wzsy1HyDkniYlS+BzZYlZ3tCD5PUPtbut8XzoIfzk6AzufEUiGXaStBO3IFsJ <newline>++mGuqPKljYXCKtbeZjbSmwL0qJJgfJxptI8kHtCGUvYynEFYHiK9zUVilQhu0Gbd <newline>+U6LM8BDcVHOLBKFGMzNcF0C5nk3T875Vg+ixiY5afJqWIpA7iCXy0lOIAgwLePLm <newline>+NxdLMEYH5IBtptiWLugs+BGzOA1mppvqySNb247i8xOOGlktqgLw7KSHZtzBP/XY <newline>+ufTsgsbSPZUd5cBPhMnZo0QoBmrXRazwa2rvTl/4EYIeOGM0ZlDUPpNz+jDDZq3/ <newline>+ky2X7wMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAj/ola09b5KROJ1WrIhVZPMq1 <newline>+CtRK26vdoV9TxaBXOcLORyu+OshWv8LZJxA6sQU8wHcxuzrTBXttmhwwjIDLk5Mq <newline>+g6sFUYICABFna/OIYUdfA5PVWw3g8dShMjWFsjrbsIKr0csKvE+MW8VLADsfKoKm <newline>+fjaF3H48ZwC15DtS4KjrXRX5xm3wrR0OhbepmnMUWluPQSjA1egtTaRezarZ7c7c <newline>+2NU8Qh0XwRJdRTjDOPP8hS6DRkiy1yBfkjaP53kPmF6Z6PDQpLv1U70qzlmwr25/ <newline>+bLvSHgCwIe34QWKCudiyxLtGUPMxxY8BqHTr9Xgn2uf3ZkPznoM+IKrDNWCRzg== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass4_G3[] = <newline>+    "sha1/PANDaGiVHPNpKri0Jtq6j+ki5b0="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGjCCAwICEQCLW3VWhFSFCwDPrzhIzrGkMA0GCSqGSIb3DQEBBQUAMIHKMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl <newline>+cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu <newline>+LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT <newline>+aWduIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp <newline>+dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD <newline>+VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT <newline>+aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ <newline>+bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu <newline>+IENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN2E1Lm0+afY8wR4 <newline>+nN493GwTFtl63SRRZsDHJlkNrAYIwpTRMx/wgzUfbhvI3qpuFU5UJ+/EbRrsC+MO <newline>+8ESlV8dAWB6jRx9x7GD2bZTIGDnt/kIYVt/kTEkQeE4BdjVjEjbdZrwBBDajVWjV <newline>+ojYJrKshJlQGrT/KFOCsyq0GHZXi+J3x4GD/wn91K0zM2v6HmSHquv4+VNfSWXjb <newline>+PG7PoBMAGrgnoeS+Z5bKoMWznN3JdZ7rMJpfo83ZrngZPyPpXNspva1VyBtUjGP2 <newline>+6KbqxzcSXKMpHgLZ2x87tNcPVkeBFQRKr4Mn0cVYiMHd9qqnoxjaaKptEVHhv2Vr <newline>+n5Z20T0CAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAq2aN17O6x5q25lXQBfGfMY1a <newline>+qtmqRiYPce2lrVNWYgFHKkTp/j90CxObufRNG7LRX7K20ohcs5/Ny9Sn2WCVhDr4 <newline>+wTcdYcrnsMXlkdpUpqwxga6X3s0IrLjAl4B/bnKk52kTlWUfxJM8/XmPBNQ+T+r3 <newline>+ns7NZ3xPZQL/kYVUc8f/NveGLezQXk//EZ9yBta4GvFMDSZl4kSAHsef493oCtrs <newline>+pSCAaWihT37ha88HQfqDjrw43bAuEbFrskLMmrz5SCJ5ShkPshw+IHTZasO+8ih4 <newline>+E1Z5T21Q6huwtVexN2ZYI/PcD98Kh8TvhgXVOBRgmaNL3gaWcSzy27YfpO8/7g== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass1_G3[] = <newline>+    "sha1/VRmyeKyygdftp6vBg5nDu2kEJLU="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGTCCAwECEGFwy0mMX5hFKeewptlQW3owDQYJKoZIhvcNAQEFBQAwgcoxCzAJ <newline>+BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVy <newline>+aVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24s <newline>+IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNp <newline>+Z24gQ2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0 <newline>+eSAtIEczMB4XDTk5MTAwMTAwMDAwMFoXDTM2MDcxNjIzNTk1OVowgcoxCzAJBgNV <newline>+BAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNp <newline>+Z24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIElu <newline>+Yy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24g <newline>+Q2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAt <newline>+IEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArwoNwtUs22e5LeWU <newline>+J92lvuCwTY+zYVY81nzD9M0+hsuiiOLh2KRpxbXiv8GmR1BeRjmL1Za6tW8UvxDO <newline>+JxOeBUebMXoT2B/Z0wI3i60sR/COgQanDTAM6/c8DyAd3HJG7qUCyFvDyVZpTMUY <newline>+wZF7C9UTAJu878NIPkZgIIUq1ZC2zYugzDLdt/1AVbJQHFauzI13TccgTacxdu9o <newline>+koqQHgiBVrKtaaNS0MscxCM9H5n+TOgWY47GCI72MfbS+uV23bUckqNJzc0BzWjN <newline>+qWm6o+sdDZykIKbBoMXRRkwXbdKsZj+WjOCE1Db/IlnF+RFgqF8EffIa9iVCYQ/E <newline>+Srg+iQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQA0JhU8wI1NQ0kdvekhktdmnLfe <newline>+xbjQ5F1fdiLAJvmEOjr5jLX77GDx6M4EsMjdpwOPMPOY36TmpDHf0xwLRtxyID+u <newline>+7gU8pDM/CzmscHhzS5kr3zDCVLCoO1Wh/hYozUK9dG6A2ydEp85EXdQbkJgNHkKU <newline>+sQAsBNB0owIFImNjzYO1+8FtYmtpdf1dcEG59b98377BMnMiIYtYgXsVkXq642RI <newline>+sH/7NiXaldDxJBQX3RiAa0YjOVT1jmIJBB2UkKab5iXiQkWquJCtvgiPqQtCGJTP <newline>+cjnhsUPgKM+351psE2tJs//jGHyJizNdrDPXp/naOlXJWBD5qu9ats9LS98q <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass2_G3[] = <newline>+    "sha1/Wr7Fddyu87COJxlD/H8lDD32YeM="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDAjCCAmsCEH3Z/gfPqB63EHln+6eJNMYwDQYJKoZIhvcNAQEFBQAwgcExCzAJ <newline>+BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xh <newline>+c3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcy <newline>+MTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3Jp <newline>+emVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMB4X <newline>+DTk4MDUxODAwMDAwMFoXDTI4MDgwMTIzNTk1OVowgcExCzAJBgNVBAYTAlVTMRcw <newline>+FQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMg <newline>+UHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEo <newline>+YykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5 <newline>+MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMIGfMA0GCSqGSIb3DQEB <newline>+AQUAA4GNADCBiQKBgQDMXtERXVxp0KvTuWpMmR9ZmDCOFoUgRm1HP9SFIIThbbP4 <newline>+pO0M8RcPO/mn+SXXwc+EY/J8Y8+iR/LGWzOOZEAEaMGAuWQcRXfH2G71lSk8UOg0 <newline>+13gfqLptQ5GVj0VXXn7F+8qkBOvqlzdUMG+7AUcyM83cV5tkaWH4mx0ciU9cZwID <newline>+AQABMA0GCSqGSIb3DQEBBQUAA4GBAFFNzb5cy5gZnBWyATl4Lk0PZ3BwmcYQWpSk <newline>+U01UbSuvDV1Ai2TT1+7eVmGSX6bEHRBhNtMsJzzoKQm5EWR0zLVznxxIqbxhAe7i <newline>+F6YM40AIOw7n60RzKprxaZLvcRTDOaxxp5EJb+RxBrO6WVcmeQD2+A2iMzAo1KpY <newline>+oJ2daZH9 <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G2[] = <newline>+    "sha1/GiG0lStik84Ys2XsnA6TTLOB5tQ="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDAzCCAmwCEQC5L2DMiJ+hekYJuFtwbIqvMA0GCSqGSIb3DQEBBQUAMIHBMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0Ns <newline>+YXNzIDIgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBH <newline>+MjE6MDgGA1UECxMxKGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9y <newline>+aXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazAe <newline>+Fw05ODA1MTgwMDAwMDBaFw0yODA4MDEyMzU5NTlaMIHBMQswCQYDVQQGEwJVUzEX <newline>+MBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDIgUHVibGlj <newline>+IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMx <newline>+KGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25s <newline>+eTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazCBnzANBgkqhkiG9w0B <newline>+AQEFAAOBjQAwgYkCgYEAp4gBIXQs5xoD8JjhlzwPIQjxnNuX6Zr8wgQGE75fUsjM <newline>+HiwSViy4AWkszJkfrbCWrnkE8hM5wXuYuggs6MKEEyyqaekJ9MepAqRCwiNPStjw <newline>+DqL7MWzJ5m+ZJwf15vRMeJ5t60aG+rmGyVTyssSv1EYcWskVMP8NbPUtDm3Of3cC <newline>+AwEAATANBgkqhkiG9w0BAQUFAAOBgQByLvl/0fFx+8Se9sVeUYpAmLho+Jscg9ji <newline>+nb3/7aHmZuovCfTK1+qlK5X2JGCGTUQug6XELaDTrnhpb3LabK4I8GOSN+a7xDAX <newline>+rXfMSTWqz9iP0b63GJZHc2pUIjRkLbYWm1lbtFFZOrMLFPQS32eg9K0yZF6xRnIn <newline>+jBJ7xUS0rg== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass2_G2[] = <newline>+    "sha1/Eje6RRfurSkm/cHN/r7t8t7ZFFw="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIE0zCCA7ugAwIBAgIQGNrRniZ96LtKIVjNzGs7SjANBgkqhkiG9w0BAQUFADCB <newline>+yjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQL <newline>+ExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJp <newline>+U2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxW <newline>+ZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0 <newline>+aG9yaXR5IC0gRzUwHhcNMDYxMTA4MDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCByjEL <newline>+MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW <newline>+ZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2ln <newline>+biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJp <newline>+U2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9y <newline>+aXR5IC0gRzUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvJAgIKXo1 <newline>+nmAMqudLO07cfLw8RRy7K+D+KQL5VwijZIUVJ/XxrcgxiV0i6CqqpkKzj/i5Vbex <newline>+t0uz/o9+B1fs70PbZmIVYc9gDaTY3vjgw2IIPVQT60nKWVSFJuUrjxuf6/WhkcIz <newline>+SdhDY2pSS9KP6HBRTdGJaXvHcPaz3BJ023tdS1bTlr8Vd6Gw9KIl8q8ckmcY5fQG <newline>+BO+QueQA5N06tRn/Arr0PO7gi+s3i+z016zy9vA9r911kTMZHRxAy3QkGSGT2RT+ <newline>+rCpSx4/VBEnkjWNHiDxpg8v+R70rfk/Fla4OndTRQ8Bnc+MUCH7lP59zuDMKz10/ <newline>+NIeWiu5T6CUVAgMBAAGjgbIwga8wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8E <newline>+BAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2UvZ2lmMCEwHzAH <newline>+BgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVy <newline>+aXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFH/TZafC3ey78DAJ80M5+gKv <newline>+MzEzMA0GCSqGSIb3DQEBBQUAA4IBAQCTJEowX2LP2BqYLz3q3JktvXf2pXkiOOzE <newline>+p6B4Eq1iDkVwZMXnl2YtmAl+X6/WzChl8gGqCBpH3vn5fJJaCGkgDdk+bW48DW7Y <newline>+5gaRQBi5+MHt39tBquCWIMnNZBU4gcmU7qKEKQsTb47bDN0lAtukixlE0kF6BWlK <newline>+WE9gyn6CagsCqiUXObXbf+eEZSqVir2G3l6BFoMtEMze/aiCKm0oHw0LxOXnGiYZ <newline>+4fQRbxC1lfznQgUy286dUV4otp6F01vvpX1FQHKOtw5rDgb7MzVIcbidJ4vEZV8N <newline>+hnacRHr2lVz2XTIIM6RUthg/aFzyQkqFOFSDX9HoLPKsEdao7WNq <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G5[] = <newline>+    "sha1/sYEIGhmkwJQf+uiVKMEkyZs0rMc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEuTCCA6GgAwIBAgIQQBrEZCGzEyEDDrvkEhrFHTANBgkqhkiG9w0BAQsFADCB <newline>+vTELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQL <newline>+ExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwOCBWZXJp <newline>+U2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MTgwNgYDVQQDEy9W <newline>+ZXJpU2lnbiBVbml2ZXJzYWwgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAe <newline>+Fw0wODA0MDIwMDAwMDBaFw0zNzEyMDEyMzU5NTlaMIG9MQswCQYDVQQGEwJVUzEX <newline>+MBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0 <newline>+IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAyMDA4IFZlcmlTaWduLCBJbmMuIC0gRm9y <newline>+IGF1dGhvcml6ZWQgdXNlIG9ubHkxODA2BgNVBAMTL1ZlcmlTaWduIFVuaXZlcnNh <newline>+bCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEF <newline>+AAOCAQ8AMIIBCgKCAQEAx2E3XrEBNNti1xWb/1hajCMj1mCOkdeQmIN65lgZOIzF <newline>+9uVkhbSicfvtvbnazU0AtMgtc6XHaXGVHzk8skQHnOgO+k1KxCHfKWGPMiJhgsWH <newline>+H26MfF8WIFFE0XBPV+rjHOPMee5Y2A7Cs0WTwCznmhcrewA3ekEzeOEz4vMQGn+H <newline>+LL729fdC4uW/h2KJXwBL38Xd5HVEMkE6HnFuacsLdUYI0crSK5XQz/u5QGtkjFdN <newline>+/BMReYTtXlT2NJ8IAfMQJQYXStrxHXpma5hgZqTZ79IugvHw7wnqRMkVauIDbjPT <newline>+rJ9VAMf2CGqUuV/c4DPxhGD5WycRtPwW8rtWaoAljQIDAQABo4GyMIGvMA8GA1Ud <newline>+EwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMG0GCCsGAQUFBwEMBGEwX6FdoFsw <newline>+WTBXMFUWCWltYWdlL2dpZjAhMB8wBwYFKw4DAhoEFI/l0xqGrI2Oa8PPgGrUSBgs <newline>+exkuMCUWI2h0dHA6Ly9sb2dvLnZlcmlzaWduLmNvbS92c2xvZ28uZ2lmMB0GA1Ud <newline>+DgQWBBS2d/ppSEefUxLVwuoHMnYH0ZcHGTANBgkqhkiG9w0BAQsFAAOCAQEASvj4 <newline>+sAPmLGd75JR3Y8xuTPl9Dg3cyLk1uXBPY/ok+myDjEedO2Pzmvl2MpWRsXe8rJq+ <newline>+seQxIcaBlVZaDrHC1LGmWazxY8u4TB1ZkErvkBYoH1quEPuBUDgMbMzxPcP1Y+Oz <newline>+4yHJJDnp/RVmRvQbEdBNc6N9Rvk97ahfYtTxP/jgdFcrGJ2BtMQo2pSXpXDrrB2+ <newline>+BxHw1dvd5Yzw1TKwg+ZX4o+/vqGqvz0dtdQ46tewXDpPaj+PwGZsY6rp2aQW9IHR <newline>+lRQOfc2VNNnSj3BzgXucfr2YYdhFh5iQxeuGMMY1v/D/w1WIg0vvBZIGcfK4mJO3 <newline>+7M2CYfE45k+XmCpajQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignUniversal[] = <newline>+    "sha1/u8I+KQuzKHcdrT6iTb30I70GsD0="; <newline>+ <newline>+// Not public <newline>+static const char kSPKIHash_Twitter1[] = <newline>+    "sha1/Vv7zwhR9TtOIN/29MFI4cgHld40="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDZjCCAk6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBEMQswCQYDVQQGEwJVUzEW <newline>+MBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEdMBsGA1UEAxMUR2VvVHJ1c3QgR2xvYmFs <newline>+IENBIDIwHhcNMDQwMzA0MDUwMDAwWhcNMTkwMzA0MDUwMDAwWjBEMQswCQYDVQQG <newline>+EwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEdMBsGA1UEAxMUR2VvVHJ1c3Qg <newline>+R2xvYmFsIENBIDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDvPE1A <newline>+PRDfO1MA4Wf+lGAVPoWI8YkNkMgoI5kF6CsgncbzYEbYwbLVjDHZ3CB5JIG/NTL8 <newline>+Y2nbsSpr7iFY8gjpeMtvy/wWUsiRxP89c96xPqfCfWbB9X5SJBri1WeR0IIQ13hL <newline>+TytCOb1kLUCgsBDTOEhGiKEMuzozKmKY+wCdE1l/bztyqu6mD4b5BWHqZ38MN5aL <newline>+5mkWRxHCJ1kDs6ZgwiFAVvqgx306E+PsV8ez1q6diYD3Aecs9pYrEw15LNnA5IZ7 <newline>+S4wMcoKK+xfNAGw6EzywhIdLFnopsk/bHdQL82Y3vdj2V7teJHq4PIu5+pIaGoSe <newline>+2HSPqht/XvT+RSIhAgMBAAGjYzBhMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE <newline>+FHE4NvICMVNHK266ZUapEBVYIAUJMB8GA1UdIwQYMBaAFHE4NvICMVNHK266ZUap <newline>+EBVYIAUJMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQUFAAOCAQEAA/e1K6td <newline>+EPx7srJerJsOflN4WT5CBP51o62sgU7XAotexC3IUnbHLB/8gTKY0UvGkpMzNTEv <newline>+/NgdRN3ggX+d6YvhZJFiCzkIjKx0nVnZellSlxG5FntvRdOW2TF9AjYPnDtuzywN <newline>+A0ZF66D0f0hExghAzN4bcLUprbqLOzRldRtxIR0sFAqwlpW41uryZfspuk/qkZN0 <newline>+abby/+Ea0AzRdoXLiiW9l14sbxWZJue2Kf8i7MkCx1YAzUm5s2x7UwQa4qjJqhIF <newline>+I8LO57sEAszAR6LkxCkvW0VXiVHuPOtSCP8HNR6fNWpHSlaY0VqFH4z1Ir+rzoPz <newline>+4iIprn2DQKi6bA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustGlobal2[] = <newline>+    "sha1/cTg28gIxU0crbrplRqkQFVggBQk="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIFaDCCA1CgAwIBAgIBATANBgkqhkiG9w0BAQUFADBFMQswCQYDVQQGEwJVUzEW <newline>+MBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEeMBwGA1UEAxMVR2VvVHJ1c3QgVW5pdmVy <newline>+c2FsIENBMB4XDTA0MDMwNDA1MDAwMFoXDTI5MDMwNDA1MDAwMFowRTELMAkGA1UE <newline>+BhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xHjAcBgNVBAMTFUdlb1RydXN0 <newline>+IFVuaXZlcnNhbCBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKYV <newline>+VaCjxuAfjJ0hUNfBvitbtaSeodlyWL0AG0y/YckUHUWCq8YdgNY96xCcOq9tJPi8 <newline>+cQGeBvV8Xx7BDlXKg5pZMK4ZyzBIle0iN430SppyZj6tlcDgFgDgEB8rMQ7XlFTT <newline>+QjOgNB0eRXbdT8oYN+yFFXoZCPzVx5zw8qkuEKmS5j1YPakWaDwvdSEYfyh3peFh <newline>+F7em6fgemdtzbvQKoiFs7tqqhZJmr/Z6a4LauiIINQ/PQvE1+mrufislzDoR5G2v <newline>+c7J2Ha3QsnhnGqQ5HFELZ1aD/ThdDc7d8Lsrlh/eezJS/R27tQahsiFepdaVaH/w <newline>+mZ7cRQg+59IJDTWU3YBOU5fXtQlEIGQWFwMCTFMNaN7VqnJNk22CDtucvc+081xd <newline>+VHppCZbW2xHBjXWotM85yM48vCR85mLK4b19p71XZQvk/iXttmkQ3CgaRr0BHdCX <newline>+teGYO8A3ZNY9lO4L4fUorgtWv3GLIylBjobFS1J72HGrH4oVpjuDWtdYAVHGTEHZ <newline>+f9hBZ3KiKN9gg6meyHv8U3NyWfWTehd2Ds735VzZC1U0oqpbtWpU5xPKV+yXbfRe <newline>+Bi9Fi1jUIxaS5BZuKGNZMN9QAZxjiRqf2xeUgnA3wySemkfWWspOqGmJch+RbNt+ <newline>+nhutxx9z3SxPGWX9f5NAEC7S8O08ni4oPmkmM8V7AgMBAAGjYzBhMA8GA1UdEwEB <newline>+/wQFMAMBAf8wHQYDVR0OBBYEFNq7LqqwDLiIJlF0XG0D08DYj3rWMB8GA1UdIwQY <newline>+MBaAFNq7LqqwDLiIJlF0XG0D08DYj3rWMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG <newline>+9w0BAQUFAAOCAgEAMXjmx7XfuJRAyXHEqDXsRh3ChfMoWIawC/yOsjmPRFWrZIRc <newline>+aanQmjg8+uUfNeVE44B5lGiku8SfPeE0zTBGi1QrlaXv9z+ZhP015s8xxtxqv6fX <newline>+IwjhmF7DWgh2qaavdy+3YL1ERmrvl/9zlcGO6JP7/TG37FcREUWbMPEaiDnBTzyn <newline>+ANXH/KttgCJwpQzgXQQpAvvLoJHRfNbDflDVnVi+QTjruXU8FdmbyUqDWcDaU/0z <newline>+uzYYm4UPFd3uLax2k7nZAY1IEKj79TiG8dsKxr2EoyNB3tZ3b4XUhRxQ4K5RirqN <newline>+Pnbiucon8l+f725ZDQbYKxek0nxru18UGkiPGkzns0ccjkxFKyDuSN/n3QmOGKja <newline>+QI2SJhFTYXNd673nxE0pN2HrrDktZy4W1vUAg4WhzH92xH3kt0tm7wNFYGm2DFKW <newline>+koRepqO1pD4r2czYG0eq8kTaT/kD6PAUyz/zg97QwVTjt+gKN02LIFkDMBmhLMi9 <newline>+ER/frslKxfMnZmaGrGiR/9nmUxwPi1xpZQomyB40w11Re9epnAahNt3ViZS82eQt <newline>+DF4JbAiXfKM9fJP/P6EUp8+1Xevb2xzEdt+Iub1FBZUbrvxGakyvSOPOrg/Sfuvm <newline>+bJxPgWp6ZKy7PtXny3YuxadIwVyQD8vIP/rmMuGNG2+k5o7Y+SlIis5z/iw= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustUniversal[] = <newline>+    "sha1/h+hbY1PGI6MSjLD/u/VR/lmADiI="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIFbDCCA1SgAwIBAgIBATANBgkqhkiG9w0BAQUFADBHMQswCQYDVQQGEwJVUzEW <newline>+MBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXR2VvVHJ1c3QgVW5pdmVy <newline>+c2FsIENBIDIwHhcNMDQwMzA0MDUwMDAwWhcNMjkwMzA0MDUwMDAwWjBHMQswCQYD <newline>+VQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXR2VvVHJ1 <newline>+c3QgVW5pdmVyc2FsIENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC <newline>+AQCzVFLByT7y2dyxUxpZKeexw0Uo5dfR7cXFS6GqdHtXr0om/Nj1XqduGdt0DE81 <newline>+WzILAePb63p3NeqqWuDW6KFXlPCQo3RWlEQwAx5cTiuFJnSCegx2oG9NzkEtoBUG <newline>+FF+3Qs17j1hhNNwqCPkuwwGmIkQcTAeC5lvO0Ep8BNMZcyfwqph/Lq9O64ceJHdq <newline>+XbboW0W63MOhBW9Wjo8QJqVJwy7XQYci4E+GymC16qFjwAGXEHm9ADwSbSsVsaxL <newline>+se4YuU6W3Nx2/zu+z18DwPw76L5GG//aQMJS9/7jOvdqdzXQ2o3rXhhqMcceujwb <newline>+KNZrVMaqW9eiLBsZzKIC9ptZvTdrhrVtgrrY6slWvKk2WP0+GfPtDCapkzj4T8Fd <newline>+IgbQl+rhrcZV4IErKIM6+vR7IVEAvlI4zs1meaj0gVbi0IMJR1FbUGrP20gaXT73 <newline>+y/Zl92zxlfgCOzJWgjl6W70viRu/obTo/3+NjN8D8WBOWBFM66M/ECuDmgFz2ZRt <newline>+hAAnZqzwcEAJQpKtT5MNYQlRJNiS1QuUYbKHsu3/mjX/hVTK7URDrBs8FmtISgoc <newline>+QIgfksILAAX/8sgCSqSqqcyZlpwvWOB94b67B9xfBHJcMTTD7F8t4D1kkCLm0ey4 <newline>+Lt1ZrtmhN79UNdxzMk+MBB4zsslG8dhcyFVQyWi9qLo2CQIDAQABo2MwYTAPBgNV <newline>+HRMBAf8EBTADAQH/MB0GA1UdDgQWBBR281Xh+qQ2+/CfXGJx7Tz0RzgQKzAfBgNV <newline>+HSMEGDAWgBR281Xh+qQ2+/CfXGJx7Tz0RzgQKzAOBgNVHQ8BAf8EBAMCAYYwDQYJ <newline>+KoZIhvcNAQEFBQADggIBAGbBxiPz2eAubl/oz66wsCVNK/g7WJtAJDday6sWSf+z <newline>+dXkzoS9tcBc0kf5nfo/sm+VegqlVHy/c1FEHEv6sFj4sNcZj/NwQ6w2jqtB8zNHQ <newline>+L1EuxBRa3ugZ4T7GzKQp5y6EqgYweHZUcyiYWTjgAA1i00J9IZ+uPTqM1fp3DRgr <newline>+Fg5fNuH8KrUwJM/gYwx7WBr+mbpCErGR9Hxo4sjoryzqyX6uuyo9DRXcNJW2GHSo <newline>+ag/HtPQTxORb7QrSpJdMKu0vbBKJPfEncKpqA1Ihn0CoZ1Dy81of398j9tx4TuaY <newline>+T1U6U+Pv8vSfx3zYWK8pIpe44L2RLrB27FcRz+8pRPPphXpgY+RdM4kX2TGq2tbz <newline>+GDVyz4crL2MjhF2EjD9XoIj8mZEoJmmZ1I+XRL6O1UixpCgp8RW04eWe3fiPpm8m <newline>+1wk8OhwRDqZsN/etRIcsKMfYdIKz0G9KV7s1KSegi+ghp4dkNl3M2Basx7InQJJV <newline>+OCiNUW7dFGdTbHFcJoRNdVq2fmBWqU2t+5sel/MN2dKXVHfaPRK34B7vCAas+YWH <newline>+6aLcr34YEoP9VhdBLtUpgn2Z9DH2canPLAEnpQW5qrJITirvn5NSUZU8UnOOVkwX <newline>+QMAJKOSLakhT2+zNVVXxxvjpoixMptEmX36vWkzaH6byHCx+rgIW0lbQL1dTR+iS <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustUniversal2[] = <newline>+    "sha1/Xk9ThoXdT57KX9wNRW99UbHcm3s="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICrjCCAjWgAwIBAgIQPLL0SAoA4v7rJDteYD7DazAKBggqhkjOPQQDAzCBmDEL <newline>+MAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsTMChj <newline>+KSAyMDA3IEdlb1RydXN0IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTE2 <newline>+MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0 <newline>+eSAtIEcyMB4XDTA3MTEwNTAwMDAwMFoXDTM4MDExODIzNTk1OVowgZgxCzAJBgNV <newline>+BAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykgMjAw <newline>+NyBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0BgNV <newline>+BAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBH <newline>+MjB2MBAGByqGSM49AgEGBSuBBAAiA2IABBWx6P0DFUPlrOuHNxFi79KDNlJ9RVcL <newline>+So17VDs6bl8VAsBQps8lL33KSLjHUGMcKiEIfJo22Av+0SbFWDEwKCXzXV2juLal <newline>+tJLtbCyf691DiaI8S0iRHVDsJt/WYC69IaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAO <newline>+BgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFBVfNVdRVfslsq0DafwBo/q+EVXVMAoG <newline>+CCqGSM49BAMDA2cAMGQCMGSWWaboCd6LuvpaiIjwH5HTRqjySkwCY/tsXzjbLkGT <newline>+qQ7mndwxHLKgpxgceeHHNgIwOlavmnRs9vuD4DPTCF+hnMJbn0bWtsuRBmOiBucz <newline>+rD6ogRLQy7rQkgu2npaqBA+K <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustPrimary_G2[] = <newline>+    "sha1/vb6nG6txV/nkddlU0rcngBqCJoI="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIID/jCCAuagAwIBAgIQFaxulBmyeUtB9iepwxgPHzANBgkqhkiG9w0BAQsFADCB <newline>+mDELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsT <newline>+MChjKSAyMDA4IEdlb1RydXN0IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25s <newline>+eTE2MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhv <newline>+cml0eSAtIEczMB4XDTA4MDQwMjAwMDAwMFoXDTM3MTIwMTIzNTk1OVowgZgxCzAJ <newline>+BgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykg <newline>+MjAwOCBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0 <newline>+BgNVBAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANziXmJYHTNXOTIz <newline>++uvLh4yn1ErdBojqZI4xmKU4kB6Yzy5jK/BGvESyiaHAKAxJcCGVn2TAppMSAmUm <newline>+hsalifD614SgcK9PGpc/BkTVyetyEH3kMSj7HGHmKAdEc5IiaacDiGydY8hS2pgn <newline>+5whMcD60yRLBxWeDXTPzAxHsatBT4tG6NmCUgLthY2xbF37fQJQeqw3CIShwiP/W <newline>+JmxsYAQlTlV+fe+/lEjetx3dcI0FX4ilm/LC7urRQEFtYjgdVgbFA0dRIBn8exAL <newline>+DmKudlW/X3e+PkkBUz2YJQN2JFodtNuJ6nnltrM7P7pMKEF/BqxqjsHQ9gUdfeZC <newline>+huOl1UcCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw <newline>+HQYDVR0OBBYEFMR5yo6hTgMdHNxr2zFblD4/MH8tMA0GCSqGSIb3DQEBCwUAA4IB <newline>+AQAtxRPPVoB7eni9n64smefv2t+UXglpp+duaIy9cr5HqQ6XErhK8WTTOd8lNNTB <newline>+zU6B8A8ExCSzNJbGpqow32hhc9f5joWJ7w5elShKKiePEI4ufIbEAp7aDHdlDkQN <newline>+kv39sxY2+hENHYwOB4lqKVb3cvTdFZx3NWZXqxNT2I7BQMXXExZacse3aQHEerGD <newline>+AWh9jUGhlBjBJVz88P6DAod8DQ3PLghcSkANPuyBYeYk28rgDi0Hsj5W3I31QYUH <newline>+SJsMC8tJP33st/3LjWeJGqvtux6jAAgIFyqCXDFdRootD4abdNlF+9RAsXqqaC2G <newline>+spki4cErx5z481+oghLrGREt <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustPrimary_G3[] = <newline>+    "sha1/nKmNAK90Dd2BgNITRaWLjy6UONY="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEKjCCAxKgAwIBAgIEOGPe+DANBgkqhkiG9w0BAQUFADCBtDEUMBIGA1UEChMLRW50cnVzdC5u <newline>+ZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9DUFNfMjA0OCBpbmNvcnAuIGJ5IHJlZi4gKGxp <newline>+bWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNV <newline>+BAMTKkVudHJ1c3QubmV0IENlcnRpZmljYXRpb24gQXV0aG9yaXR5ICgyMDQ4KTAeFw05OTEyMjQx <newline>+NzUwNTFaFw0yOTA3MjQxNDE1MTJaMIG0MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3 <newline>+d3d3LmVudHJ1c3QubmV0L0NQU18yMDQ4IGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTEl <newline>+MCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEGA1UEAxMqRW50cnVzdC5u <newline>+ZXQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgKDIwNDgpMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A <newline>+MIIBCgKCAQEArU1LqRKGsuqjIAcVFmQqK0vRvwtKTY7tgHalZ7d4QMBzQshowNtTK91euHaYNZOL <newline>+Gp18EzoOH1u3Hs/lJBQesYGpjX24zGtLA/ECDNyrpUAkAH90lKGdCCmziAv1h3edVc3kw37XamSr <newline>+hRSGlVuXMlBvPci6Zgzj/L24ScF2iUkZ/cCovYmjZy/Gn7xxGWC4LeksyZB2ZnuU4q941mVTXTzW <newline>+nLLPKQP5L6RQstRIzgUyVYr9smRMDuSYB3Xbf9+5CFVghTAp+XtIpGmG4zU/HoZdenoVve8AjhUi <newline>+VBcAkCaTvA5JaJG/+EfTnZVCwQ5N328mz8MYIWJmQ3DW1cAH4QIDAQABo0IwQDAOBgNVHQ8BAf8E <newline>+BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUVeSB0RGAvtiJuQijMfmhJAkWuXAwDQYJ <newline>+KoZIhvcNAQEFBQADggEBADubj1abMOdTmXx6eadNl9cZlZD7Bh/KM3xGY4+WZiT6QBshJ8rmcnPy <newline>+T/4xmf3IDExoU8aAghOY+rat2l098c5u9hURlIIM7j+VrxGrD9cv3h8Dj1csHsm7mhpElesYT6Yf <newline>+zX1XEC+bBAlahLVu2B064dae0Wx5XnkcFMXj0EyTO2U87d89vqbllRrDtRnDvV5bu/8j72gZyxKT <newline>+J1wDLW8w0B62GqzeWvfRqqgnpv55gcR5mTNXuhKwqeBCbJPKVt7+bYQLCIt+jerXmCHG8+c8eS9e <newline>+nNFMFY3h7CI3zJpDC5fcgJCNs2ebb0gIFVbPv/ErfF6adulZkMV8gzURZVE= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_2048[] = <newline>+    "sha1/VeSB0RGAvtiJuQijMfmhJAkWuXA="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEkTCCA3mgAwIBAgIERWtQVDANBgkqhkiG9w0BAQUFADCBsDELMAkGA1UEBhMC <newline>+VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xOTA3BgNVBAsTMHd3dy5lbnRydXN0 <newline>+Lm5ldC9DUFMgaXMgaW5jb3Jwb3JhdGVkIGJ5IHJlZmVyZW5jZTEfMB0GA1UECxMW <newline>+KGMpIDIwMDYgRW50cnVzdCwgSW5jLjEtMCsGA1UEAxMkRW50cnVzdCBSb290IENl <newline>+cnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA2MTEyNzIwMjM0MloXDTI2MTEyNzIw <newline>+NTM0MlowgbAxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMTkw <newline>+NwYDVQQLEzB3d3cuZW50cnVzdC5uZXQvQ1BTIGlzIGluY29ycG9yYXRlZCBieSBy <newline>+ZWZlcmVuY2UxHzAdBgNVBAsTFihjKSAyMDA2IEVudHJ1c3QsIEluYy4xLTArBgNV <newline>+BAMTJEVudHJ1c3QgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJ <newline>+KoZIhvcNAQEBBQADggEPADCCAQoCggEBALaVtkNC+sZtKm9I35RMOVcF7sN5EUFo <newline>+Nu3s/poBj6E4KPz3EEZmLk0eGrEaTsbRwJWIsMn/MYszA9u3g3s+IIRe7bJWKKf4 <newline>+4LlAcTfFy0cOlypowCKVYhXbR9n10Cv/gkvJrT7eTNuQgFA/CYqEAOwwCj0Yzfv9 <newline>+KlmaI5UXLEWeH25DeW0MXJj+SKfFI0dcXv1u5x609mhF0YaDW6KKjbHjKYD+JXGI <newline>+rb68j6xSlkuqUY3kEzEZ6E5Nn9uss2rVvDlUccp6en+Q3X0dgNmBu1kmwhH+5pPi <newline>+94DkZfs0Nw4pgHBNrziGLp5/V6+eF67rHMsoIV+2HNjnogQi+dPa2MsCAwEAAaOB <newline>+sDCBrTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zArBgNVHRAEJDAi <newline>+gA8yMDA2MTEyNzIwMjM0MlqBDzIwMjYxMTI3MjA1MzQyWjAfBgNVHSMEGDAWgBRo <newline>+kORnpKZTgMeGZqTx90tD+4S9bTAdBgNVHQ4EFgQUaJDkZ6SmU4DHhmak8fdLQ/uE <newline>+vW0wHQYJKoZIhvZ9B0EABBAwDhsIVjcuMTo0LjADAgSQMA0GCSqGSIb3DQEBBQUA <newline>+A4IBAQCT1DCw1wMgKtD5Y+iRDAUgqV8ZyntyTtSx29CW+1RaGSwMCPeyvIWonX9t <newline>+O1KzKtvn1ISMY/YPyyYBkVBs9F8U4pN0wBOeMDpQ47RgxRzwIkSNcUesyBrJ6Zua <newline>+AGAT/3B+XxFNSRuzFVJ7yVTav52Vr2ua2J7p8eRDjeIRRDq/r72DQnNSi6q7pynP <newline>+9WQcCk3RvKqsnyrQ/39/2n3qse0wJcGE2jTSW3iDVuycNsMm4hH2Z0kdkquM++v/ <newline>+eu6FSqdQgPCnXEqULl8FmTxSQeDNtGPPAUO6nIPcj2A781q0tHuu2guQOHXvgR1m <newline>+0vdXcDazv/wor3ElhVsT/h5/WrQ8 <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_EV[] = <newline>+    "sha1/ukKwgYhTiB2GY71MwF4I/upuu3c="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEPjCCAyagAwIBAgIESlOMKDANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMC <newline>+VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50 <newline>+cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3Qs <newline>+IEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVz <newline>+dCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIwHhcNMDkwNzA3MTcy <newline>+NTU0WhcNMzAxMjA3MTc1NTU0WjCBvjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVu <newline>+dHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwt <newline>+dGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0 <newline>+aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmlj <newline>+YXRpb24gQXV0aG9yaXR5IC0gRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK <newline>+AoIBAQC6hLZy254Ma+KZ6TABp3bqMriVQRrJ2mFOWHLP/vaCeb9zYQYKpSfYs1/T <newline>+RU4cctZOMvJyig/3gxnQaoCAAEUesMfnmr8SVycco2gvCoe9amsOXmXzHHfV1IWN <newline>+cCG0szLni6LVhjkCsbjSR87kyUnEO6fe+1R9V77w6G7CebI6C1XiUJgWMhNcL3hW <newline>+wcKUs/Ja5CeanyTXxuzQmyWC48zCxEXFjJd6BmsqEZ+pCm5IO2/b1BEZQvePB7/1 <newline>+U1+cPvQXLOZprE4yTGJ36rfo5bs0vBmLrpxR57d+tVOxMyLlbc9wPBr64ptntoP0 <newline>+jaWvYkxN4FisZDQSA/i2jZRjJKRxAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAP <newline>+BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqciZ60B7vfec7aVHUbI2fkBJmqzAN <newline>+BgkqhkiG9w0BAQsFAAOCAQEAeZ8dlsa2eT8ijYfThwMEYGprmi5ZiXMRrEPR9RP/ <newline>+jTkrwPK9T3CMqS/qF8QLVJ7UG5aYMzyorWKiAHarWWluBh1+xLlEjZivEtRh2woZ <newline>+Rkfz6/djwUAFQKXSt/S1mja/qYh2iARVBCuch38aNzx+LaUa2NSJXsq9rD1s2G2v <newline>+1fN2D807iDginWyTmsQ9v4IbZT+mD12q/OWyFcq1rca8PdCE6OoGcrBNOTJ4vz4R <newline>+nAuknZoh8/CbCzB428Hch0P+vGOaysXCHMnHjf87ElgI5rY97HosTvuDls4MPGmH <newline>+VHOkc8KT/1EQrBVUAdj8BbGJoX90g5pJ19xOe4pIb4tF9g== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_G2[] = <newline>+    "sha1/qzDTr0vY8WtYae5FaSnahLhzlIg="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIE2DCCBEGgAwIBAgIEN0rSQzANBgkqhkiG9w0BAQUFADCBwzELMAkGA1UEBhMC <newline>+VVMxFDASBgNVBAoTC0VudHJ1c3QubmV0MTswOQYDVQQLEzJ3d3cuZW50cnVzdC5u <newline>+ZXQvQ1BTIGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMc <newline>+KGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDE6MDgGA1UEAxMxRW50cnVzdC5u <newline>+ZXQgU2VjdXJlIFNlcnZlciBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05OTA1 <newline>+MjUxNjA5NDBaFw0xOTA1MjUxNjM5NDBaMIHDMQswCQYDVQQGEwJVUzEUMBIGA1UE <newline>+ChMLRW50cnVzdC5uZXQxOzA5BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5j <newline>+b3JwLiBieSByZWYuIChsaW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBF <newline>+bnRydXN0Lm5ldCBMaW1pdGVkMTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUg <newline>+U2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGdMA0GCSqGSIb3DQEBAQUA <newline>+A4GLADCBhwKBgQDNKIM0VBuJ8w+vN5Ex/68xYMmo6LIQaO2f55M28Qpku0f1BBc/ <newline>+I0dNxScZgSYMVHINiC3ZH5oSn7yzcdOAGT9HZnuMNSjSuQrfJNqc1lB5gXpa0zf3 <newline>+wkrYKZImZNHkmGw6AIr1NJtl+O3jEP/9uElY3KDegjlrgbEWGWG5VLbmQwIBA6OC <newline>+AdcwggHTMBEGCWCGSAGG+EIBAQQEAwIABzCCARkGA1UdHwSCARAwggEMMIHeoIHb <newline>+oIHYpIHVMIHSMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLRW50cnVzdC5uZXQxOzA5 <newline>+BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5jb3JwLiBieSByZWYuIChsaW1p <newline>+dHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVk <newline>+MTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRp <newline>+b24gQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMCmgJ6AlhiNodHRwOi8vd3d3LmVu <newline>+dHJ1c3QubmV0L0NSTC9uZXQxLmNybDArBgNVHRAEJDAigA8xOTk5MDUyNTE2MDk0 <newline>+MFqBDzIwMTkwNTI1MTYwOTQwWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAU8Bdi <newline>+E1U9s/8KAGv7UISX8+1i0BowHQYDVR0OBBYEFPAXYhNVPbP/CgBr+1CEl/PtYtAa <newline>+MAwGA1UdEwQFMAMBAf8wGQYJKoZIhvZ9B0EABAwwChsEVjQuMAMCBJAwDQYJKoZI <newline>+hvcNAQEFBQADgYEAkNwwAvpkdMKnCqV8IY00F6j7Rw7/JXyNEwr75Ji174z4xRAN <newline>+95K+8cPV1ZVqBLssziY2ZcgxxufuP+NXdYR6Ee9GTxj005i7qIcyunL2POI9n9cd <newline>+2cNgQ4xYDiKWL2KjLB+6rQXvqzJ4h6BUcxm1XAX5Uj5tLUUL9wqT6u0G+bI= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_SSL[] = <newline>+    "sha1/8BdiE1U9s/8KAGv7UISX8+1i0Bo="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEMjCCAxqgAwIBAgIBATANBgkqhkiG9w0BAQUFADB7MQswCQYDVQQGEwJHQjEb <newline>+MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow <newline>+GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmlj <newline>+YXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVowezEL <newline>+MAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE <newline>+BwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxITAfBgNVBAMM <newline>+GEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEBBQADggEP <newline>+ADCCAQoCggEBAL5AnfRu4ep2hxxNRUSOvkbIgwadwSr+GB+O5AL686tdUIoWMQua <newline>+BtDFcCLNSS1UY8y2bmhGC1Pqy0wkwLxyTurxFa70VJoSCsN6sjNg4tqJVfMiWPPe <newline>+3M/vg4aijJRPn2jymJBGhCfHdr/jzDUsi14HZGWCwEiwqJH5YZ92IFCokcdmtet4 <newline>+YgNW8IoaE+oxox6gmf049vYnMlhvB/VruPsUK6+3qszWY19zjNoFmag4qMsXeDZR <newline>+rOme9Hg6jc8P2ULimAyrL58OAd7vn5lJ8S3frHRNG5i1R8XlKdH5kBjHYpy+g8cm <newline>+ez6KJcfA3Z3mNWgQIJ2P2N7Sw4ScDV7oL8kCAwEAAaOBwDCBvTAdBgNVHQ4EFgQU <newline>+oBEKIz6W8Qfs4q8p74Klf9AwpLQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF <newline>+MAMBAf8wewYDVR0fBHQwcjA4oDagNIYyaHR0cDovL2NybC5jb21vZG9jYS5jb20v <newline>+QUFBQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmwwNqA0oDKGMGh0dHA6Ly9jcmwuY29t <newline>+b2RvLm5ldC9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDANBgkqhkiG9w0BAQUF <newline>+AAOCAQEACFb8AvCb6P+k+tZ7xkSAzk/ExfYAWMymtrwUSWgEdujm7l3sAg9g1o1Q <newline>+GE8mTgHj5rCl7r+8dFRBv/38ErjHT1r0iWAFf2C3BUrz9vHCv8S5dIa2LX1rzNLz <newline>+Rt0vxuBqw8M0Ayx9lt1awg6nCpnBBYurDC/zXDrPbDdVCYfeU0BsWO/8tqtlbgT2 <newline>+G9w84FoVxp7Z8VlIMCFlA2zs6SFz7JsDoeA3raAVGI/6ugLOpyypEBMs1OUIJqsi <newline>+l2D4kF501KKaU73yqWjgom7C12yxow+ev+to51byrvLjKzg6CYG1a4XXvi3tPxq3 <newline>+smPi9WIsgtRqAEFQ8TmDn5XpNpaYbg== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AAACertificateServices[] = <newline>+    "sha1/xDAoxdPjCAwQRIssd7okU5dgu/k="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGDCCAwCgAwIBAgIBATANBgkqhkiG9w0BAQUFADBlMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3 <newline>+b3JrMSEwHwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3QwHhcNMDAwNTMw <newline>+MTAzODMxWhcNMjAwNTMwMTAzODMxWjBlMQswCQYDVQQGEwJTRTEUMBIGA1UEChML <newline>+QWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSEwHwYD <newline>+VQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3QwggEiMA0GCSqGSIb3DQEBAQUA <newline>+A4IBDwAwggEKAoIBAQCWltQhSWDia+hBBwzexODcEyPNwTXH+9ZOEQpnXvUGW2ul <newline>+CDtbKRY654eyNAbFvAWlA3yCyykQruGIgb3WntP+LVbBFc7jJp0VLhD7Bo8wBN6n <newline>+tGO0/7Gcrjyvd7ZWxbWroulpOj0OM3kyP3CCkplhbY0wCI9xP6ZIVxn4JdxLZlyl <newline>+dI+Yrsj5wAYi56xz36Uu+1LcsRVlIPo1Zmne3yzxbrww2ywkEtvrNTVokMsAsJch <newline>+PXQhI2U0K7t4WaPW4XY5mqRJjox0r26kmqPZm9I4XJuiGMx1I4S+6+JNM3GOGvDC <newline>++Mcdoq0Dlyz4zyXG9rgkMbFjXZJ/Y/AlyVMuH79NAgMBAAGjgdIwgc8wHQYDVR0O <newline>+BBYEFJWxtPCUtr3H2tERCSG+wa9J/RB7MAsGA1UdDwQEAwIBBjAPBgNVHRMBAf8E <newline>+BTADAQH/MIGPBgNVHSMEgYcwgYSAFJWxtPCUtr3H2tERCSG+wa9J/RB7oWmkZzBl <newline>+MQswCQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFk <newline>+ZFRydXN0IFRUUCBOZXR3b3JrMSEwHwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENB <newline>+IFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBACxtZBsfzQ3duQH6lmM0MkhHma6X <newline>+7f1yFqZzR1r0693p9db7RcwpiURdv0Y5PejuvE1Uhh4dbOMXJ0PhiVYrqW9yTkkz <newline>+43J8KiOavD7/KCrto/8cI7pDVwlnTUtiBi34/2ydYB7YHEt9tTEv2dB8Xfjea4MY <newline>+eDdXL+gzB2ffHsdrKpV2ro9Xo/D0UrSpUwjP4E/TelOL/bscVjby/rK25Xa71SJl <newline>+pz/+0WatC7xrmYbvP33zGDLKe8bjq2RGlfgmadlVg3sslgf/WSxEo8bl6ancoWOA <newline>+WiFeIc9TVPC6b4nbqKqVz4vjccweGyBECMB6tkD9xOQ14R0WHNC8K47Wcdk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustClass1CARoot[] = <newline>+    "sha1/i9vXzKBoU0IW9MErJUT8Apyli0c="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIENjCCAx6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBvMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxJjAkBgNVBAsTHUFkZFRydXN0IEV4dGVybmFs <newline>+IFRUUCBOZXR3b3JrMSIwIAYDVQQDExlBZGRUcnVzdCBFeHRlcm5hbCBDQSBSb290 <newline>+MB4XDTAwMDUzMDEwNDgzOFoXDTIwMDUzMDEwNDgzOFowbzELMAkGA1UEBhMCU0Ux <newline>+FDASBgNVBAoTC0FkZFRydXN0IEFCMSYwJAYDVQQLEx1BZGRUcnVzdCBFeHRlcm5h <newline>+bCBUVFAgTmV0d29yazEiMCAGA1UEAxMZQWRkVHJ1c3QgRXh0ZXJuYWwgQ0EgUm9v <newline>+dDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALf3GjPm8gAELTngTlvt <newline>+H7xsD821+iO2zt6bETOXpClMfZOfvUq8k+0DGuOPz+VtUFrWlymUWoCwSXrbLpX9 <newline>+uMq/NzgtHj6RQa1wVsfwTz/oMp50ysiQVOnGXw94nZpAPA6sYapeFI+eh6FqUNzX <newline>+mk6vBbOmcZSccbNQYArHE504B4YCqOmoaSYYkKtMsE8jqzpPhNjfzp/haW+710LX <newline>+a0Tkx63ubUFfclpxCDezeWWkWaCUN/cALw3CknLa0Dhy2xSoRcRdKn23tNbE7qzN <newline>+E0S3ySvdQwAl+mG5aWpYIxG3pzOPVnVZ9c0p10a3CitlttNCbxWyuHv77+ldU9U0 <newline>+WicCAwEAAaOB3DCB2TAdBgNVHQ4EFgQUrb2YejS0Jvf6xCZU7wO94CTLVBowCwYD <newline>+VR0PBAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wgZkGA1UdIwSBkTCBjoAUrb2YejS0 <newline>+Jvf6xCZU7wO94CTLVBqhc6RxMG8xCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRU <newline>+cnVzdCBBQjEmMCQGA1UECxMdQWRkVHJ1c3QgRXh0ZXJuYWwgVFRQIE5ldHdvcmsx <newline>+IjAgBgNVBAMTGUFkZFRydXN0IEV4dGVybmFsIENBIFJvb3SCAQEwDQYJKoZIhvcN <newline>+AQEFBQADggEBALCb4IUlwtYj4g+WBpKdQZic2YR5gdkeWxQHIzZlj7DYd7usQWxH <newline>+YINRsPkyPef89iYTx4AWpb9a/IfPeHmJIZriTAcKhjW88t5RxNKWt9x+Tu5w/Rw5 <newline>+6wwCURQtjr0W4MHfRnXnJK3s9EK0hZNwEGe6nQY1ShjTK3rMUUKhemPR5ruhxSvC <newline>+Nr4TDea9Y355e6cJDUCrat2PisP29owaQgVR1EX1n6diIWgVIEM8med8vSTYqZEX <newline>+c4g/VhsxOBi0cQ+azcgOno4uG+GMmIPLHzHxREzGBHNJdmAPx/i9F4BrLunMTA5a <newline>+mnkPIAou1Z5jJh5VkpTYghdae9C8x49OhgQ= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustExternalCARoot[] = <newline>+    "sha1/T5x9IXmcrQ7YuQxXnxoCmeeQ84c="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEFTCCAv2gAwIBAgIBATANBgkqhkiG9w0BAQUFADBkMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3 <newline>+b3JrMSAwHgYDVQQDExdBZGRUcnVzdCBQdWJsaWMgQ0EgUm9vdDAeFw0wMDA1MzAx <newline>+MDQxNTBaFw0yMDA1MzAxMDQxNTBaMGQxCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtB <newline>+ZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQIE5ldHdvcmsxIDAeBgNV <newline>+BAMTF0FkZFRydXN0IFB1YmxpYyBDQSBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOC <newline>+AQ8AMIIBCgKCAQEA6Rowj4OIFMEg2Dybjxt+A3S72mnTRqX4jsIMEZBRpS9mVEBV <newline>+6tsfSlbunyNu9DnLoblv8n75XYcmYZ4c+OLspoH4IcUkzBEMP9smcnrHAZcHF/nX <newline>+GCwwfQ56HmIexkvA/X1id9NEHif2P0tEs7c42TkfYNVRknMDtABp4/MUTu7R3AnP <newline>+dzRGULD4EfL+OHn3Bzn+UZKXC1sIXzSGAa2Il+tmzV7R/9x98oTaunet3IAIx6eH <newline>+1lWfl2royBFkuucZKT8Rs3iQhCBSWxHveNCD9tVIkNAwHM+A+WD+eeSI8t0A65RF <newline>+62WUaUC6wNW0uLp9BBGo6zEFlpROWCGOn9Bg/QIDAQABo4HRMIHOMB0GA1UdDgQW <newline>+BBSBPjfYkrAfd59ctKtzquf2NGAv+jALBgNVHQ8EBAMCAQYwDwYDVR0TAQH/BAUw <newline>+AwEB/zCBjgYDVR0jBIGGMIGDgBSBPjfYkrAfd59ctKtzquf2NGAv+qFopGYwZDEL <newline>+MAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQLExRBZGRU <newline>+cnVzdCBUVFAgTmV0d29yazEgMB4GA1UEAxMXQWRkVHJ1c3QgUHVibGljIENBIFJv <newline>+b3SCAQEwDQYJKoZIhvcNAQEFBQADggEBAAP3FUr4JNojVhaTdt02KLmuG7jD8WS6 <newline>+IBh4lSknVwW8fCr0uVFV2ocC3g8WFzH4qnkuCRO7r7IgGRLlk/lL+YPoRNWyQSW/ <newline>+iHVv/xD8SlTQX/D67zZzfRs2RcYhbbQVuE7PnFylPVoAjgbjPGsye/Kf8Lb93/Ao <newline>+GEjwxrzQvzSAlsJKsW2Ox5BF3i9nrEUEo3rcVZLJR2bYGozH7ZxOmuASu7VqTITh <newline>+4SINhwBk/ox9Yjllpu9CtoAlEmEBqCQTcAARJl/6NVDFSMwGR+gn2HCNX2TmoUQm <newline>+XiLsks3/QppEIW1cxeMiHV9HEufOX1362KqxMy3ZdvJOOjMMK7MtkAY= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustPublicCARoot[] = <newline>+    "sha1/qFdl1ugyyMUZY3Namhd0OoHf7i4="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEHjCCAwagAwIBAgIBATANBgkqhkiG9w0BAQUFADBnMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3 <newline>+b3JrMSMwIQYDVQQDExpBZGRUcnVzdCBRdWFsaWZpZWQgQ0EgUm9vdDAeFw0wMDA1 <newline>+MzAxMDQ0NTBaFw0yMDA1MzAxMDQ0NTBaMGcxCzAJBgNVBAYTAlNFMRQwEgYDVQQK <newline>+EwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQIE5ldHdvcmsxIzAh <newline>+BgNVBAMTGkFkZFRydXN0IFF1YWxpZmllZCBDQSBSb290MIIBIjANBgkqhkiG9w0B <newline>+AQEFAAOCAQ8AMIIBCgKCAQEA5B6a/twJWoekn0e+EV+vhDTbYjx5eLfpMLXsDBwq <newline>+xBb/4Oxx64r1EW7tTw2R0hIYLUkVAcKkIhPHEWT/IhKauY5cLwjPcWqzZwFZ8V1G <newline>+87B4pfYOQnrjfxvM0PC3KP0q6p6zsLkEqv32x7SxuCqg+1jxGaBvcCV+PmlKfw8i <newline>+2O+tCBGaKZnhqkRFmhJePp1tUvznoD1oL/BLcHwTOK28FSXx1s6rosAx1i+f4P8U <newline>+WfyEk9mHfExUE+uf0S0R+Bg6Ot4l2ffTQO2kBhLEO+GRwVY18BTcZTYJbqukB8c1 <newline>+0cIDMzZbdSZtQvESa0NvS3GU+jQd7RNuyoB/mC9suWXY6QIDAQABo4HUMIHRMB0G <newline>+A1UdDgQWBBQ5lYtii1zJ1IC6WA+XPxUIQ8yYpzALBgNVHQ8EBAMCAQYwDwYDVR0T <newline>+AQH/BAUwAwEB/zCBkQYDVR0jBIGJMIGGgBQ5lYtii1zJ1IC6WA+XPxUIQ8yYp6Fr <newline>+pGkwZzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQL <newline>+ExRBZGRUcnVzdCBUVFAgTmV0d29yazEjMCEGA1UEAxMaQWRkVHJ1c3QgUXVhbGlm <newline>+aWVkIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBABmrder4i2VhlRO6aQTv <newline>+hsoToMeqT2QbPxj2qC0sVY8FtzDqQmodwCVRLae/DLPt7wh/bDxGGuoYQ992zPlm <newline>+hpwsaPXpF/gxsxjE1kh9I0xowX67ARRvxdlu3rsEQmr49lx95dr6h+sNNVJn0J6X <newline>+dgWTP5XHAeZpVTh/EGGZyeNfpso+gmNIquIISD6q8rKFYqa0p9m9N5xotS1WfbC3 <newline>+P6CxB9bpT9zeRXEwMn8bLgn5v1Kh7sKAPgZcLlVAwRv1cEWw3F369nJad9Jjzc9Y <newline>+iQBCYz95OdBEsIJuQRno3eDBiFrRHnGTHyQwdOUeqN48Jzd/g66ed8/wMLH/S5no <newline>+xqE= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustQualifiedCARoot[] = <newline>+    "sha1/vOS3IxJVmOVjQRkcUOS2R8J2Bdc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEHTCCAwWgAwIBAgIQToEtioJl4AsC7j41AkblPTANBgkqhkiG9w0BAQUFADCB <newline>+gTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G <newline>+A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxJzAlBgNV <newline>+BAMTHkNPTU9ETyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNjEyMDEwMDAw <newline>+MDBaFw0yOTEyMzEyMzU5NTlaMIGBMQswCQYDVQQGEwJHQjEbMBkGA1UECBMSR3Jl <newline>+YXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFDT01P <newline>+RE8gQ0EgTGltaXRlZDEnMCUGA1UEAxMeQ09NT0RPIENlcnRpZmljYXRpb24gQXV0 <newline>+aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0ECLi3LjkRv3 <newline>+UcEbVASY06m/weaKXTuH+7uIzg3jLz8GlvCiKVCZrts7oVewdFFxze1CkU1B/qnI <newline>+2GqGd0S7WWaXUF601CxwRM/aN5VCaTwwxHGzUvAhTaHYujl8HJ6jJJ3ygxaYqhZ8 <newline>+Q5sVW7euNJH+1GImGEaaP+vB+fGQV+useg2L23IwambV4EajcNxo2f8ESIl33rXp <newline>++2dtQem8Ob0y2WIC8bGoPW43nOIv4tOiJovGuFVDiOEjPqXSJDlqR6sA1KGzqSX+ <newline>+DT+nHbrTUcELpNqsOO9VUCQFZUaTNE8tja3G1CEZ0o7KBWFxB3NH5YoZEr0ETc5O <newline>+nKVIrLsm9wIDAQABo4GOMIGLMB0GA1UdDgQWBBQLWOWLxkwVN6RAqTCpIb5HNlpW <newline>+/zAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zBJBgNVHR8EQjBAMD6g <newline>+PKA6hjhodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9DZXJ0aWZpY2F0aW9u <newline>+QXV0aG9yaXR5LmNybDANBgkqhkiG9w0BAQUFAAOCAQEAPpiem/Yb6dc5t3iuHXIY <newline>+SdOH5EOC6z/JqvWote9VfCFSZfnVDeFs9D6Mk3ORLgLETgdxb8CPOGEIqB6BCsAv <newline>+IC9Bi5HcSEW88cbeunZrM8gALTFGTO3nnc+IlP8zwFboJIYmuNg4ON8qa90SzMc/ <newline>+RxdMosIGlgnW2/4/PEZB31jiVg88O8EckzXZOFKs7sjsLjBOlDW0JB9LeGna8gI4 <newline>+zJVSk/BwJVmcIGfE7vmLV2H0knZ9P4SNVbfo5azV8fUZVqZa+5Acr5Pr5RzUZ5dd <newline>+BA6+C4OmF4O5MBKgxTMVBbkN+8cFduPYSo38NBejxiEovjBFMR7HeL5YYTisO+IB <newline>+ZQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_COMODOCertificationAuthority[] = <newline>+    "sha1/EeSR0cnkwOuazs9zVF3h8agwPsM="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEPzCCAyegAwIBAgIBATANBgkqhkiG9w0BAQUFADB+MQswCQYDVQQGEwJHQjEb <newline>+MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow <newline>+GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEkMCIGA1UEAwwbU2VjdXJlIENlcnRp <newline>+ZmljYXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVow <newline>+fjELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G <newline>+A1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxJDAiBgNV <newline>+BAMMG1NlY3VyZSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEB <newline>+BQADggEPADCCAQoCggEBAMBxM4KK0HDrc4eCQNUd5MvJDkKQ+d40uaG6EfQlhfPM <newline>+cm3ye5drswfxdySRXyWP9nQ95IDC+DwN879A6vfIUtFyb+/Iq0G4bi4XKpVpDM3S <newline>+HpR7LZQdqnXXs5jLrLxkU0C8j6ysNstcrbvd4JQX7NFc0L/vpZXJkMWwrPsbQ996 <newline>+CF23uPJAGysnnlDOXmWCiIxe004MeuoIkbY2qitC++rCoznl2yY4rYsK7hljxxwk <newline>+3wN42ubqwUcaCwtGCd0C/N7Lh1/XMGNooa7cMqG6vv5Eq2i2pRcV/b3Vp6ea5EQz <newline>+6YiO/O1R65NxTq0B50SOqy3LqP4BSUjwwN3HaNiS/j0CAwEAAaOBxzCBxDAdBgNV <newline>+HQ4EFgQUPNiTiMLAggnMAZkGkyDpnnAJY08wDgYDVR0PAQH/BAQDAgEGMA8GA1Ud <newline>+EwEB/wQFMAMBAf8wgYEGA1UdHwR6MHgwO6A5oDeGNWh0dHA6Ly9jcmwuY29tb2Rv <newline>+Y2EuY29tL1NlY3VyZUNlcnRpZmljYXRlU2VydmljZXMuY3JsMDmgN6A1hjNodHRw <newline>+Oi8vY3JsLmNvbW9kby5uZXQvU2VjdXJlQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmww <newline>+DQYJKoZIhvcNAQEFBQADggEBAIcBbSMdflsXfcFhMs+P5/OKlFlm4J4oqF7Tt/Q0 <newline>+5qo5spcWxYJvMqTpjOev/e/C6LlLqqP05tqNZSH7uoDrJiiFGv45jN5bBAS0VPmj <newline>+Z55B+glSzAVIqMk/IQQezkhr/IXownuvf7fM+F86/TXGDe+X3EyrEeFryzHRbPtI <newline>+gKvcnDe4IRRLDXE97IMzbtFuMhbsmMcWi1mmNKsFVy2T96oTy9IT4rcuO81rUBcJ <newline>+aD61JlfutuC23bkpgHl9j6PwpCikFcSF9CfUa7/lXORlAnZUtOM3ZiTTGWHIUhDl <newline>+izeauan5Hb/qmZJhlv8BzaFfDbxxvA6sCx1HRR3B7Hzs/Sk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_SecureCertificateServices[] = <newline>+    "sha1/PLQahC71XPIaPaVKyNG+OQh2N7w="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEQzCCAyugAwIBAgIBATANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJHQjEb <newline>+MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow <newline>+GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDElMCMGA1UEAwwcVHJ1c3RlZCBDZXJ0 <newline>+aWZpY2F0ZSBTZXJ2aWNlczAeFw0wNDAxMDEwMDAwMDBaFw0yODEyMzEyMzU5NTla <newline>+MH8xCzAJBgNVBAYTAkdCMRswGQYDVQQIDBJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAO <newline>+BgNVBAcMB1NhbGZvcmQxGjAYBgNVBAoMEUNvbW9kbyBDQSBMaW1pdGVkMSUwIwYD <newline>+VQQDDBxUcnVzdGVkIENlcnRpZmljYXRlIFNlcnZpY2VzMIIBIjANBgkqhkiG9w0B <newline>+AQEFAAOCAQ8AMIIBCgKCAQEA33FvNlhTWvI2VFeAxHQIIO0Yfyod5jWaHiWsnOWW <newline>+fnJSoBVC21ndZHoa0Lh73TkVvFVIxO06AOoxEbrycXQaZ7jPM8yoMa+j49d/vzMt <newline>+TGo87IvDktJTdyR0nAducPy9C1t2ul/y/9c3S0pgePfw+spwtOpZqqPOSC+pw7IL <newline>+fhdyFgymBwwbOM/JYrc/oJOlh0Hyt3BAd9i+FHzjqMB6juljatEPmsbS9Is6FARW <newline>+1O24zG71++IsWL1/T2sr92AkWCTOJu80kTrV44HQsvAEAtdbtz6SrGsSivnkBbA7 <newline>+kUlcsutT6vifR4buv5XAwAaf0lteERv0xwQ1KdJVXOTt6wIDAQABo4HJMIHGMB0G <newline>+A1UdDgQWBBTFe1i97doladL3WRaoszLAeydb9DAOBgNVHQ8BAf8EBAMCAQYwDwYD <newline>+VR0TAQH/BAUwAwEB/zCBgwYDVR0fBHwwejA8oDqgOIY2aHR0cDovL2NybC5jb21v <newline>+ZG9jYS5jb20vVHJ1c3RlZENlcnRpZmljYXRlU2VydmljZXMuY3JsMDqgOKA2hjRo <newline>+dHRwOi8vY3JsLmNvbW9kby5uZXQvVHJ1c3RlZENlcnRpZmljYXRlU2VydmljZXMu <newline>+Y3JsMA0GCSqGSIb3DQEBBQUAA4IBAQDIk4E7ibSvuIQSTI3S8NtwuleGFTQQuS9/ <newline>+HrCoiWChisJ3DFBKmwCL2Iv0QeLQg4pKHBQGsKNoBXAxMKdTmw7pSqBYaWcOrp32 <newline>+pSxBvzwGa+RZzG0Q8ZZvH9/0BAKkn0U+yNj6NkZEUD+Cl5EfKNsYEYwq5GWDVxIS <newline>+jBc/lDb+XbDABHcTuPQV1T84zJQ6VdCsmPW6AF/ghhmBeC8owH7TzEIK9a5QoNE+ <newline>+xqFx7D+gIIxmOom0jtTYsU0lR+4viMi14QVFwL4Ucd56/Y57fU0IlqUSc/Atyjcn <newline>+dBInTMu2l+nZrghtWjlA3QVHdWpaIbOjGM9O9y5Xt5hwXsjEeLBi <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_TrustedCertificateServices[] = <newline>+    "sha1//nLI678ML7sOJhOTkzwsqY3cJJQ="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEXjCCA0agAwIBAgIQRL4Mi1AAIbQR0ypoBqmtaTANBgkqhkiG9w0BAQUFADCB <newline>+kzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xGzAZBgNVBAMTElVUTiAtIERBVEFDb3Jw <newline>+IFNHQzAeFw05OTA2MjQxODU3MjFaFw0xOTA2MjQxOTA2MzBaMIGTMQswCQYDVQQG <newline>+EwJVUzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYD <newline>+VQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cu <newline>+dXNlcnRydXN0LmNvbTEbMBkGA1UEAxMSVVROIC0gREFUQUNvcnAgU0dDMIIBIjAN <newline>+BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3+5YEKIrblXEjr8uRgnn4AgPLit6 <newline>+E5Qbvfa2gI5lBZMAHryv4g+OGQ0SR+ysraP6LnD43m77VkIVni5c7yPeIbkFdicZ <newline>+D0/Ww5y0vpQZY/KmEQrrU0icvvIpOxboGqBMpsn0GFlowHDyUwDAXlCCpVZvNvlK <newline>+4ESGoE1O1kduSUrLZ9emxAW5jh70/P/N5zbgnAVssjMiFdC04MwXwLLA9P4yPykq <newline>+lXvY8qdOD1R8oQ2AswkDwf9c3V6aPryuvEeKaq5xyh+xKrhfQgUL7EYw0XILyulW <newline>+bfXv33i+Ybqypa4ETLyorGkVl73v67SMvzX41MPRKA5cOp9wGDMgd8SirwIDAQAB <newline>+o4GrMIGoMAsGA1UdDwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRT <newline>+MtGzz3/64PGgXYVOktKeRR20TzA9BgNVHR8ENjA0MDKgMKAuhixodHRwOi8vY3Js <newline>+LnVzZXJ0cnVzdC5jb20vVVROLURBVEFDb3JwU0dDLmNybDAqBgNVHSUEIzAhBggr <newline>+BgEFBQcDAQYKKwYBBAGCNwoDAwYJYIZIAYb4QgQBMA0GCSqGSIb3DQEBBQUAA4IB <newline>+AQAnNZcAiosovcYzMB4p/OL31ZjUQLtgyr+rFywJNn9Q+kHcrpY6CiM+iVnJowft <newline>+Gzet/Hy+UUla3joKVAgWRcKZsYfNjGjgaQPpxE6YsjuMFrMOoAyYUJuTqXAJyCyj <newline>+j98C5OBxOvG0I3KgqgHf35g+FFCgMSa9KOlaMCZ1+XtgHI3zzVAmbQQnmt/VDUVH <newline>+KWss5nbZqSl9Mt3JNjy9rjXxEZ4du5A/EkdOjtd+D2JzHVImOBwYSf0wdJrE5SIv <newline>+2MCN7ZF6TACPcn9d2t0bi0Vr591pl6jFVkwPDPafepE39peC4N1xaf92P2BNPM/3 <newline>+mfnGV/TJVTl4uix5yaaIK/QI <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNDATACorpSGC[] = <newline>+    "sha1/UzLRs89/+uDxoF2FTpLSnkUdtE8="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEojCCA4qgAwIBAgIQRL4Mi1AAJLQR0zYlJWfJiTANBgkqhkiG9w0BAQUFADCB <newline>+rjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xNjA0BgNVBAMTLVVUTi1VU0VSRmlyc3Qt <newline>+Q2xpZW50IEF1dGhlbnRpY2F0aW9uIGFuZCBFbWFpbDAeFw05OTA3MDkxNzI4NTBa <newline>+Fw0xOTA3MDkxNzM2NThaMIGuMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAV <newline>+BgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5l <newline>+dHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTE2MDQGA1UE <newline>+AxMtVVROLVVTRVJGaXJzdC1DbGllbnQgQXV0aGVudGljYXRpb24gYW5kIEVtYWls <newline>+MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsjmFpPJ9q0E7YkY3rs3B <newline>+YHW8OWX5ShpHornMSMxqmNVNNRm5pELlzkniii8efNIxB8dOtINknS4p1aJkxIW9 <newline>+hVE1eaROaJB7HHqkkqgX8pgV8pPMyaQylbsMTzC9mKALi+VuG6JG+ni8om+rWV6l <newline>+L8/K2m2qL+usobNqqrcuZzWLeeEeaYji5kbNoKXqvgvOdjp6Dpvq/NonWz1zHyLm <newline>+SGHGTPNpsaguG7bUMSAsvIKKjqQOpdeJQ/wWWq8dcdcRWdq6hw2v+vPhwvCkxWeM <newline>+1tZUOt4KpLoDd7NlyP0e03RiqhjKaJMeoYV+9Udly/hNVyh00jT/MLbu9mIwFIws <newline>+6wIDAQABo4G5MIG2MAsGA1UdDwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud <newline>+DgQWBBSJgmd9xJ0mcABLtFBIfN49rgRufTBYBgNVHR8EUTBPME2gS6BJhkdodHRw <newline>+Oi8vY3JsLnVzZXJ0cnVzdC5jb20vVVROLVVTRVJGaXJzdC1DbGllbnRBdXRoZW50 <newline>+aWNhdGlvbmFuZEVtYWlsLmNybDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUH <newline>+AwQwDQYJKoZIhvcNAQEFBQADggEBALFtYV2mGn98q0rkMPxTbyUkxsrt4jFcKw7u <newline>+7mFVbwQ+zznexRtJlOTrIEy05p5QLnLZjfWqo7NK2lYcYJeA3IKirUq9iiv/Cwm0 <newline>+xtcgBEXkzYABurorbs6q15L+5K/r9CYdFip/bDCVNy8zEqx/3cfREYxRmLLQo5HQ <newline>+rfafnoOTHh1CuEava2bwm3/q4wMC5QJRwarVNZ1yQAOJujEdxRBoUp7fooXFXAim <newline>+eOZTT7Hot9MUnpOmw2TjrH5xzbyf6QMbzPvprDHBr3wVdAKZw7JHpsIyYdfHb0gk <newline>+USeh1YdV8nuPmD0Wnu51tvjQjvLzxq4oW6fw8zYX/MMF08oDSlQ= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNUSERFirstClientAuthenticationandEmail[] = <newline>+    "sha1/iYJnfcSdJnAAS7RQSHzePa4Ebn0="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEdDCCA1ygAwIBAgIQRL4Mi1AAJLQR0zYq/mUK/TANBgkqhkiG9w0BAQUFADCB <newline>+lzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHzAdBgNVBAMTFlVUTi1VU0VSRmlyc3Qt <newline>+SGFyZHdhcmUwHhcNOTkwNzA5MTgxMDQyWhcNMTkwNzA5MTgxOTIyWjCBlzELMAkG <newline>+A1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEe <newline>+MBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8v <newline>+d3d3LnVzZXJ0cnVzdC5jb20xHzAdBgNVBAMTFlVUTi1VU0VSRmlyc3QtSGFyZHdh <newline>+cmUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCx98M4P7Sof885glFn <newline>+0G2f0v9Y8+efK+wNiVSZuTiZFvfgIXlIwrthdBKWHTxqctU8EGc6Oe0rE81m65UJ <newline>+M6Rsl7HoxuzBdXmcRl6Nq9Bq/bkqVRcQVLMZ8Jr28bFdtqdt++BxF2uiiPsA3/4a <newline>+MXcMmgF6sTLjKwEHOG7DpV4jvEWbe1DByTCP2+UretNb+zNAHqDVmBe8i4fDidNd <newline>+oI6yqqr2jmmIBsX6iSHzCJ1pLgkzmykNRg+MzEk0sGlRvfkGzWitZky8PqxhvQqI <newline>+DsjfPe58BEydCl5rkdbux+0ojatNh4lz0G6k0B4WixThdkQDf2Os5M1JnMWS9Ksy <newline>+oUhbAgMBAAGjgbkwgbYwCwYDVR0PBAQDAgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYD <newline>+VR0OBBYEFKFyXyYbKJhDlV0HN9WFlp1L0sNFMEQGA1UdHwQ9MDswOaA3oDWGM2h0 <newline>+dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4tVVNFUkZpcnN0LUhhcmR3YXJlLmNy <newline>+bDAxBgNVHSUEKjAoBggrBgEFBQcDAQYIKwYBBQUHAwUGCCsGAQUFBwMGBggrBgEF <newline>+BQcDBzANBgkqhkiG9w0BAQUFAAOCAQEARxkP3nTGmZev/K0oXnWO6y1n7k57K9cM <newline>+//bey1WiCuFMVGWTYGufEpytXoMs61quwOQt9ABjHbjAbPLPSbtNk28Gpgoiskli <newline>+CE7/yMgUsogWXecB5BKV5UU0s4tpvc+0hY91UZ59Ojg6FEgSxvunOxqNDYJAB+gE <newline>+CJChicsZUN/KHAG8HQQZexB2lzvukJDKxA4fFm517zP4029bHpbj4HR3dHuKom4t <newline>+3XbWOTCC8KucUvIqx69JXn7HaOWCgchqJ/kniCrVWFCVH/A7HFe7fRQ5YiuayZSS <newline>+KqMiDP+JJn1fIytH1xUdqWqeUQ0qUZ6B+dQ7XnASfxAynB67nfhmqA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNUSERFirstHardware[] = <newline>+    "sha1/oXJfJhsomEOVXQc31YWWnUvSw0U="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEZjCCA06gAwIBAgIQRL4Mi1AAJLQR0zYt4LNfGzANBgkqhkiG9w0BAQUFADCB <newline>+lTELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHTAbBgNVBAMTFFVUTi1VU0VSRmlyc3Qt <newline>+T2JqZWN0MB4XDTk5MDcwOTE4MzEyMFoXDTE5MDcwOTE4NDAzNlowgZUxCzAJBgNV <newline>+BAYTAlVTMQswCQYDVQQIEwJVVDEXMBUGA1UEBxMOU2FsdCBMYWtlIENpdHkxHjAc <newline>+BgNVBAoTFVRoZSBVU0VSVFJVU1QgTmV0d29yazEhMB8GA1UECxMYaHR0cDovL3d3 <newline>+dy51c2VydHJ1c3QuY29tMR0wGwYDVQQDExRVVE4tVVNFUkZpcnN0LU9iamVjdDCC <newline>+ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM6qgT+jo2F4qjEAVZURnicP <newline>+HxzfOpuCaDDASmEd8S8O+r5596Uj71VRloTN2+O5bj4x2AogZ8f02b+U60cEPgLO <newline>+KqJdhwQJ9jCdGIqXsqoc/EHSoTbL+z2RuufZcDX65OeQw5ujm9M89RKZd7G3CeBo <newline>+5hy485RjiGpq/gt2yb70IuRnuasaXnfBhQfdDWy/7gbHd2pBnqcP1/vulBe3/IW+ <newline>+pKvEHDHd17bR5PDv3xaPslKT16HUiaEHLr/hARJCHhrh2JU022R5KP+6LhHC5ehb <newline>+kkj7RwvCbNqtMoNB86XlQXD9ZZBt+vpRxPm9lisZBCzTbafc8H9vg2XiaquHhnUC <newline>+AwEAAaOBrzCBrDALBgNVHQ8EBAMCAcYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4E <newline>+FgQU2u1kdBScFDyr3ZmpvVsoTYs8ydgwQgYDVR0fBDswOTA3oDWgM4YxaHR0cDov <newline>+L2NybC51c2VydHJ1c3QuY29tL1VUTi1VU0VSRmlyc3QtT2JqZWN0LmNybDApBgNV <newline>+HSUEIjAgBggrBgEFBQcDAwYIKwYBBQUHAwgGCisGAQQBgjcKAwQwDQYJKoZIhvcN <newline>+AQEFBQADggEBAAgfUrE3RHjb/c652pWWmKpVZIC1WkDdIaXFwfNfLEzIR1pp6ujw <newline>+NTX00CXzyKakh0q9G7FzCL3Uw8q2NbtZhncxzaeAFK4T7/yxSPlrJSUtUbYsbUXB <newline>+mMiKVl0+7kNOPmsnjtA6S4ULX9Ptaqd1y9Fahy85dRNacrACgZ++8A+EVCBibGnU <newline>+4U3GDZlDAQ0Slox4nb9QorFEqmrPF3rPbw/U+CRVX/A0FklmPlBGyWNxODFiuGK5 <newline>+81OtbLUrohKqGU8J2l7nk8aOFAj+8DCAGKCGhU3IfdeLA/5u1fedFqySLKAj5ZyR <newline>+Uh+U3xeUc8OzwcFxBSAAeL0TUh2oPs0AH8g= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNUSERFirstObject[] = <newline>+    "sha1/2u1kdBScFDyr3ZmpvVsoTYs8ydg="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICWjCCAcMCAgGlMA0GCSqGSIb3DQEBBAUAMHUxCzAJBgNVBAYTAlVTMRgwFgYD <newline>+VQQKEw9HVEUgQ29ycG9yYXRpb24xJzAlBgNVBAsTHkdURSBDeWJlclRydXN0IFNv <newline>+bHV0aW9ucywgSW5jLjEjMCEGA1UEAxMaR1RFIEN5YmVyVHJ1c3QgR2xvYmFsIFJv <newline>+b3QwHhcNOTgwODEzMDAyOTAwWhcNMTgwODEzMjM1OTAwWjB1MQswCQYDVQQGEwJV <newline>+UzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMScwJQYDVQQLEx5HVEUgQ3liZXJU <newline>+cnVzdCBTb2x1dGlvbnMsIEluYy4xIzAhBgNVBAMTGkdURSBDeWJlclRydXN0IEds <newline>+b2JhbCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCVD6C28FCc6HrH <newline>+iM3dFw4usJTQGz0O9pTAipTHBsiQl8i4ZBp6fmw8U+E3KHNgf7KXUwefU/ltWJTS <newline>+r41tiGeA5u2ylc9yMcqlHHK6XALnZELn+aks1joNrI1CqiQBOeacPwGFVw1Yh0X4 <newline>+04Wqk2kmhXBIgD8SFcd5tB8FLztimQIDAQABMA0GCSqGSIb3DQEBBAUAA4GBAG3r <newline>+GwnpXtlR22ciYaQqPEh346B8pt5zohQDhT37qw4wxYMWM4ETCJ57NE7fQMh017l9 <newline>+3PR2VX2bY1QY6fDq81yx2YtCHrnAlU66+tXifPVoYb+O7AWXX1uw16OFNMQkpw0P <newline>+lZPvy5TYnh+dXIVtx6quTx8itc2VrbqnzPmrC3p/ <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GTECyberTrustGlobalRoot[] = <newline>+    "sha1/WXkS3mF11m/EI7d3E3THlt5viHI="; <newline>+ <newline>+#endif // NET_BASE_PUBLIC_KEY_HASHES_ <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#include "net/base/transport_security_state.h" <newline>+ <newline>+#if defined(USE_OPENSSL) <newline>+#include <openssl/ecdsa.h> <newline>+#include <openssl/ssl.h> <newline>+#else  // !defined(USE_OPENSSL) <newline>+#include <cryptohi.h> <newline>+#include <hasht.h> <newline>+#include <keyhi.h> <newline>+#include <pk11pub.h> <newline>+#include <nspr.h> <newline>+#endif <newline>+ <newline>+#include <algorithm> <newline>+#include <utility> <newline>+ <newline>+#include "base/base64.h" <newline>+#include "base/json/json_reader.h" <newline>+#include "base/json/json_writer.h" <newline>+#include "base/logging.h" <newline>+#include "base/memory/scoped_ptr.h" <newline>+#include "base/metrics/histogram.h" <newline>+#include "base/sha1.h" <newline>+#include "base/string_number_conversions.h" <newline>+#include "base/string_tokenizer.h" <newline>+#include "base/string_util.h" <newline>+#include "base/time.h" <newline>+#include "base/utf_string_conversions.h" <newline>+#include "base/values.h" <newline>+#include "crypto/sha2.h" <newline>+#include "googleurl/src/gurl.h" <newline>+#include "net/base/asn1_util.h" <newline>+#include "net/base/dns_util.h" <newline>+#include "net/base/public_key_hashes.h" <newline>+#include "net/base/ssl_info.h" <newline>+#include "net/base/x509_certificate.h" <newline>+#include "net/http/http_util.h" <newline>+ <newline>+#if defined(USE_OPENSSL) <newline>+#include "crypto/openssl_util.h" <newline>+#endif <newline>+ <newline>+namespace net { <newline>+ <newline>+const long int TransportSecurityState::kMaxHSTSAgeSecs = 86400 * 365;  // 1 year <newline>+ <newline>+TransportSecurityState::TransportSecurityState(const std::string& hsts_hosts) <newline>+    : delegate_(NULL) { <newline>+  if (!hsts_hosts.empty()) { <newline>+    bool dirty; <newline>+    Deserialise(hsts_hosts, &dirty, &forced_hosts_); <newline>+  } <newline>+} <newline>+ <newline>+static std::string HashHost(const std::string& canonicalized_host) { <newline>+  char hashed[crypto::kSHA256Length]; <newline>+  crypto::SHA256HashString(canonicalized_host, hashed, sizeof(hashed)); <newline>+  return std::string(hashed, sizeof(hashed)); <newline>+} <newline>+ <newline>+void TransportSecurityState::SetDelegate( <newline>+    TransportSecurityState::Delegate* delegate) { <newline>+  delegate_ = delegate; <newline>+} <newline>+ <newline>+void TransportSecurityState::EnableHost(const std::string& host, <newline>+                                        const DomainState& state) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  const std::string canonicalized_host = CanonicalizeHost(host); <newline>+  if (canonicalized_host.empty()) <newline>+    return; <newline>+ <newline>+  // Only override a preloaded state if the new state describes a more strict <newline>+  // policy. TODO(palmer): Reconsider this? <newline>+  DomainState existing_state; <newline>+  if (IsPreloadedSTS(canonicalized_host, true, &existing_state) && <newline>+      canonicalized_host == CanonicalizeHost(existing_state.domain) && <newline>+      existing_state.IsMoreStrict(state)) { <newline>+    return; <newline>+  } <newline>+ <newline>+  // Use the original creation date if we already have this host. <newline>+  DomainState state_copy(state); <newline>+  if (GetDomainState(&existing_state, host, true) && <newline>+      !existing_state.created.is_null()) { <newline>+    state_copy.created = existing_state.created; <newline>+  } <newline>+ <newline>+  // We don't store these values. <newline>+  state_copy.preloaded = false; <newline>+  state_copy.domain.clear(); <newline>+ <newline>+  enabled_hosts_[HashHost(canonicalized_host)] = state_copy; <newline>+  DirtyNotify(); <newline>+} <newline>+ <newline>+bool TransportSecurityState::DeleteHost(const std::string& host) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  const std::string canonicalized_host = CanonicalizeHost(host); <newline>+  if (canonicalized_host.empty()) <newline>+    return false; <newline>+ <newline>+  std::map<std::string, DomainState>::iterator i = enabled_hosts_.find( <newline>+      HashHost(canonicalized_host)); <newline>+  if (i != enabled_hosts_.end()) { <newline>+    enabled_hosts_.erase(i); <newline>+    DirtyNotify(); <newline>+    return true; <newline>+  } <newline>+  return false; <newline>+} <newline>+ <newline>+bool TransportSecurityState::HasPinsForHost(DomainState* result, <newline>+                                            const std::string& host, <newline>+                                            bool sni_available) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  return HasMetadata(result, host, sni_available) && <newline>+      (!result->dynamic_spki_hashes.empty() || <newline>+       !result->preloaded_spki_hashes.empty()); <newline>+} <newline>+ <newline>+bool TransportSecurityState::GetDomainState(DomainState* result, <newline>+                                            const std::string& host, <newline>+                                            bool sni_available) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  return HasMetadata(result, host, sni_available); <newline>+} <newline>+ <newline>+bool TransportSecurityState::HasMetadata(DomainState* result, <newline>+                                         const std::string& host, <newline>+                                         bool sni_available) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  DomainState state; <newline>+  const std::string canonicalized_host = CanonicalizeHost(host); <newline>+  if (canonicalized_host.empty()) <newline>+    return false; <newline>+ <newline>+  bool has_preload = IsPreloadedSTS(canonicalized_host, sni_available, &state); <newline>+  std::string canonicalized_preload = CanonicalizeHost(state.domain); <newline>+ <newline>+  base::Time current_time(base::Time::Now()); <newline>+ <newline>+  for (size_t i = 0; canonicalized_host[i]; i += canonicalized_host[i] + 1) { <newline>+    std::string host_sub_chunk(&canonicalized_host[i], <newline>+                               canonicalized_host.size() - i); <newline>+    // Exact match of a preload always wins. <newline>+    if (has_preload && host_sub_chunk == canonicalized_preload) { <newline>+      *result = state; <newline>+      return true; <newline>+    } <newline>+ <newline>+    std::map<std::string, DomainState>::iterator j = <newline>+        enabled_hosts_.find(HashHost(host_sub_chunk)); <newline>+    if (j == enabled_hosts_.end()) <newline>+      continue; <newline>+ <newline>+    if (current_time > j->second.expiry && <newline>+        current_time > j->second.dynamic_spki_hashes_expiry) { <newline>+      enabled_hosts_.erase(j); <newline>+      DirtyNotify(); <newline>+      continue; <newline>+    } <newline>+ <newline>+    state = j->second; <newline>+    state.domain = DNSDomainToString(host_sub_chunk); <newline>+ <newline>+    // Succeed if we matched the domain exactly or if subdomain matches are <newline>+    // allowed. <newline>+    if (i == 0 || j->second.include_subdomains) { <newline>+      *result = state; <newline>+      return true; <newline>+    } <newline>+ <newline>+    return false; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+void TransportSecurityState::DeleteSince(const base::Time& time) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  bool dirtied = false; <newline>+ <newline>+  std::map<std::string, DomainState>::iterator i = enabled_hosts_.begin(); <newline>+  while (i != enabled_hosts_.end()) { <newline>+    if (i->second.created >= time) { <newline>+      dirtied = true; <newline>+      enabled_hosts_.erase(i++); <newline>+    } else { <newline>+      i++; <newline>+    } <newline>+  } <newline>+ <newline>+  if (dirtied) <newline>+    DirtyNotify(); <newline>+} <newline>+ <newline>+// MaxAgeToInt converts a string representation of a number of seconds into a <newline>+// int. We use strtol in order to handle overflow correctly. The string may <newline>+// contain an arbitary number which we should truncate correctly rather than <newline>+// throwing a parse failure. <newline>+static bool MaxAgeToInt(std::string::const_iterator begin, <newline>+                        std::string::const_iterator end, <newline>+                        int* result) { <newline>+  const std::string s(begin, end); <newline>+  char* endptr; <newline>+  long int i = strtol(s.data(), &endptr, 10 /* base */); <newline>+  if (*endptr || i < 0) <newline>+    return false; <newline>+  if (i > TransportSecurityState::kMaxHSTSAgeSecs) <newline>+    i = TransportSecurityState::kMaxHSTSAgeSecs; <newline>+  *result = i; <newline>+  return true; <newline>+} <newline>+ <newline>+// Strip, Split, StringPair, and ParsePins are private implementation details <newline>+// of ParsePinsHeader(std::string&, DomainState&). <newline>+static std::string Strip(const std::string& source) { <newline>+  if (source.empty()) <newline>+    return source; <newline>+ <newline>+  std::string::const_iterator start = source.begin(); <newline>+  std::string::const_iterator end = source.end(); <newline>+  HttpUtil::TrimLWS(&start, &end); <newline>+  return std::string(start, end); <newline>+} <newline>+ <newline>+typedef std::pair<std::string, std::string> StringPair; <newline>+ <newline>+static StringPair Split(const std::string& source, char delimiter) { <newline>+  StringPair pair; <newline>+  size_t point = source.find(delimiter); <newline>+ <newline>+  pair.first = source.substr(0, point); <newline>+  if (std::string::npos != point) <newline>+    pair.second = source.substr(point + 1); <newline>+ <newline>+  return pair; <newline>+} <newline>+ <newline>+// TODO(palmer): Support both sha256 and sha1. This will require additional <newline>+// infrastructure code changes and can come in a later patch. <newline>+// <newline>+// static <newline>+bool TransportSecurityState::ParsePin(const std::string& value, <newline>+                                      SHA1Fingerprint* out) { <newline>+  StringPair slash = Split(Strip(value), '/'); <newline>+  if (slash.first != "sha1") <newline>+    return false; <newline>+ <newline>+  std::string decoded; <newline>+  if (!base::Base64Decode(slash.second, &decoded) || <newline>+      decoded.size() != arraysize(out->data)) { <newline>+    return false; <newline>+  } <newline>+ <newline>+  memcpy(out->data, decoded.data(), arraysize(out->data)); <newline>+  return true; <newline>+} <newline>+ <newline>+static bool ParseAndAppendPin(const std::string& value, <newline>+                      FingerprintVector* fingerprints) { <newline>+  // The base64'd fingerprint MUST be a quoted-string. 20 bytes base64'd is 28 <newline>+  // characters; 32 bytes base64'd is 44 characters. TODO(palmer): Support <newline>+  // SHA256. <newline>+  size_t size = value.size(); <newline>+  if (size != 30 || value[0] != '"' || value[size - 1] != '"') <newline>+    return false; <newline>+ <newline>+  std::string unquoted = HttpUtil::Unquote(value); <newline>+  std::string decoded; <newline>+  SHA1Fingerprint fp; <newline>+ <newline>+  if (!base::Base64Decode(unquoted, &decoded) || <newline>+      decoded.size() != arraysize(fp.data)) { <newline>+    return false; <newline>+  } <newline>+ <newline>+  memcpy(fp.data, decoded.data(), arraysize(fp.data)); <newline>+  fingerprints->push_back(fp); <newline>+  return true; <newline>+} <newline>+ <newline>+// static <newline>+bool TransportSecurityState::GetPublicKeyHash( <newline>+    const X509Certificate& cert, SHA1Fingerprint* spki_hash) { <newline>+  std::string der_bytes; <newline>+  if (!X509Certificate::GetDEREncoded(cert.os_cert_handle(), &der_bytes)) <newline>+    return false; <newline>+ <newline>+  base::StringPiece spki; <newline>+  if (!asn1::ExtractSPKIFromDERCert(der_bytes, &spki)) <newline>+    return false; <newline>+ <newline>+  base::SHA1HashBytes(reinterpret_cast<const unsigned char*>(spki.data()), <newline>+                      spki.size(), spki_hash->data); <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+struct FingerprintsEqualPredicate { <newline>+  explicit FingerprintsEqualPredicate(const SHA1Fingerprint& fingerprint) : <newline>+      fingerprint_(fingerprint) {} <newline>+ <newline>+  bool operator()(const SHA1Fingerprint& other) const { <newline>+    return fingerprint_.Equals(other); <newline>+  } <newline>+ <newline>+  const SHA1Fingerprint& fingerprint_; <newline>+}; <newline>+ <newline>+// Returns true iff there is an item in |pins| which is not present in <newline>+// |from_cert_chain|. Such an SPKI hash is called a "backup pin". <newline>+static bool IsBackupPinPresent(const FingerprintVector& pins, <newline>+                               const FingerprintVector& from_cert_chain) { <newline>+  for (FingerprintVector::const_iterator <newline>+       i = pins.begin(); i != pins.end(); ++i) { <newline>+    FingerprintVector::const_iterator j = <newline>+        std::find_if(from_cert_chain.begin(), from_cert_chain.end(), <newline>+                     FingerprintsEqualPredicate(*i)); <newline>+      if (j == from_cert_chain.end()) <newline>+        return true; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+static bool HashesIntersect(const FingerprintVector& a, <newline>+                            const FingerprintVector& b) { <newline>+  for (FingerprintVector::const_iterator <newline>+       i = a.begin(); i != a.end(); ++i) { <newline>+    FingerprintVector::const_iterator j = <newline>+        std::find_if(b.begin(), b.end(), FingerprintsEqualPredicate(*i)); <newline>+      if (j != b.end()) <newline>+        return true; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+// Returns true iff |pins| contains both a live and a backup pin. A live pin <newline>+// is a pin whose SPKI is present in the certificate chain in |ssl_info|. A <newline>+// backup pin is a pin intended for disaster recovery, not day-to-day use, and <newline>+// thus must be absent from the certificate chain. The Public-Key-Pins header <newline>+// specification requires both. <newline>+static bool IsPinListValid(const FingerprintVector& pins, <newline>+                           const SSLInfo& ssl_info) { <newline>+  if (pins.size() < 2) <newline>+    return false; <newline>+ <newline>+  const FingerprintVector& from_cert_chain = ssl_info.public_key_hashes; <newline>+  if (from_cert_chain.empty()) <newline>+    return false; <newline>+ <newline>+  return IsBackupPinPresent(pins, from_cert_chain) && <newline>+      HashesIntersect(pins, from_cert_chain); <newline>+} <newline>+ <newline>+// "Public-Key-Pins" ":" <newline>+//     "max-age" "=" delta-seconds ";" <newline>+//     "pin-" algo "=" base64 [ ";" ... ] <newline>+// <newline>+// static <newline>+bool TransportSecurityState::ParsePinsHeader(const std::string& value, <newline>+                                             const SSLInfo& ssl_info, <newline>+                                             DomainState* state) { <newline>+  bool parsed_max_age = false; <newline>+  int max_age = 0; <newline>+  FingerprintVector pins; <newline>+ <newline>+  std::string source = value; <newline>+ <newline>+  while (!source.empty()) { <newline>+    StringPair semicolon = Split(source, ';'); <newline>+    semicolon.first = Strip(semicolon.first); <newline>+    semicolon.second = Strip(semicolon.second); <newline>+    StringPair equals = Split(semicolon.first, '='); <newline>+    equals.first = Strip(equals.first); <newline>+    equals.second = Strip(equals.second); <newline>+ <newline>+    if (LowerCaseEqualsASCII(equals.first, "max-age")) { <newline>+      if (equals.second.empty() || <newline>+          !MaxAgeToInt(equals.second.begin(), equals.second.end(), &max_age)) { <newline>+        return false; <newline>+      } <newline>+      if (max_age > kMaxHSTSAgeSecs) <newline>+        max_age = kMaxHSTSAgeSecs; <newline>+      parsed_max_age = true; <newline>+    } else if (LowerCaseEqualsASCII(equals.first, "pin-sha1")) { <newline>+      if (!ParseAndAppendPin(equals.second, &pins)) <newline>+        return false; <newline>+    } else if (LowerCaseEqualsASCII(equals.first, "pin-sha256")) { <newline>+      // TODO(palmer) <newline>+    } else { <newline>+      // Silently ignore unknown directives for forward compatibility. <newline>+    } <newline>+ <newline>+    source = semicolon.second; <newline>+  } <newline>+ <newline>+  if (!parsed_max_age || !IsPinListValid(pins, ssl_info)) <newline>+    return false; <newline>+ <newline>+  state->max_age = max_age; <newline>+  state->dynamic_spki_hashes_expiry = <newline>+      base::Time::Now() + base::TimeDelta::FromSeconds(max_age); <newline>+ <newline>+  state->dynamic_spki_hashes.clear(); <newline>+  if (max_age > 0) { <newline>+    for (FingerprintVector::const_iterator i = pins.begin(); <newline>+         i != pins.end(); i++) { <newline>+      state->dynamic_spki_hashes.push_back(*i); <newline>+    } <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+// "Strict-Transport-Security" ":" <newline>+//     "max-age" "=" delta-seconds [ ";" "includeSubDomains" ] <newline>+// <newline>+// static <newline>+bool TransportSecurityState::ParseHeader(const std::string& value, <newline>+                                         int* max_age, <newline>+                                         bool* include_subdomains) { <newline>+  DCHECK(max_age); <newline>+  DCHECK(include_subdomains); <newline>+ <newline>+  int max_age_candidate = 0; <newline>+ <newline>+  enum ParserState { <newline>+    START, <newline>+    AFTER_MAX_AGE_LABEL, <newline>+    AFTER_MAX_AGE_EQUALS, <newline>+    AFTER_MAX_AGE, <newline>+    AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER, <newline>+    AFTER_INCLUDE_SUBDOMAINS, <newline>+  } state = START; <newline>+ <newline>+  StringTokenizer tokenizer(value, " \t=;"); <newline>+  tokenizer.set_options(StringTokenizer::RETURN_DELIMS); <newline>+  while (tokenizer.GetNext()) { <newline>+    DCHECK(!tokenizer.token_is_delim() || tokenizer.token().length() == 1); <newline>+    switch (state) { <newline>+      case START: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (!LowerCaseEqualsASCII(tokenizer.token(), "max-age")) <newline>+          return false; <newline>+        state = AFTER_MAX_AGE_LABEL; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE_LABEL: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (*tokenizer.token_begin() != '=') <newline>+          return false; <newline>+        DCHECK_EQ(tokenizer.token().length(), 1U); <newline>+        state = AFTER_MAX_AGE_EQUALS; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE_EQUALS: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (!MaxAgeToInt(tokenizer.token_begin(), <newline>+                         tokenizer.token_end(), <newline>+                         &max_age_candidate)) <newline>+          return false; <newline>+        state = AFTER_MAX_AGE; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (*tokenizer.token_begin() != ';') <newline>+          return false; <newline>+        state = AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (!LowerCaseEqualsASCII(tokenizer.token(), "includesubdomains")) <newline>+          return false; <newline>+        state = AFTER_INCLUDE_SUBDOMAINS; <newline>+        break; <newline>+ <newline>+      case AFTER_INCLUDE_SUBDOMAINS: <newline>+        if (!IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          return false; <newline>+        break; <newline>+ <newline>+      default: <newline>+        NOTREACHED(); <newline>+    } <newline>+  } <newline>+ <newline>+  // We've consumed all the input.  Let's see what state we ended up in. <newline>+  switch (state) { <newline>+    case START: <newline>+    case AFTER_MAX_AGE_LABEL: <newline>+    case AFTER_MAX_AGE_EQUALS: <newline>+      return false; <newline>+    case AFTER_MAX_AGE: <newline>+      *max_age = max_age_candidate; <newline>+      *include_subdomains = false; <newline>+      return true; <newline>+    case AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER: <newline>+      return false; <newline>+    case AFTER_INCLUDE_SUBDOMAINS: <newline>+      *max_age = max_age_candidate; <newline>+      *include_subdomains = true; <newline>+      return true; <newline>+    default: <newline>+      NOTREACHED(); <newline>+      return false; <newline>+  } <newline>+} <newline>+ <newline>+// Side pinning and superfluous certificates: <newline>+// <newline>+// In SSLClientSocketNSS::DoVerifyCertComplete we look for certificates with a <newline>+// Subject of CN=meta. When we find one we'll currently try and parse side <newline>+// pinned key from it. <newline>+// <newline>+// A side pin is a key which can be pinned to, but also can be kept offline and <newline>+// still held by the site owner. The CN=meta certificate is just a backwards <newline>+// compatiable method of carrying a lump of bytes to the client. (We could use <newline>+// a TLS extension just as well, but it's a lot easier for admins to add extra <newline>+// certificates to the chain.) <newline>+ <newline>+// A TagMap represents the simple key-value structure that we use. Keys are <newline>+// 32-bit ints. Values are byte strings. <newline>+typedef std::map<uint32, base::StringPiece> TagMap; <newline>+ <newline>+// ParseTags parses a list of key-value pairs from |in| to |out| and advances <newline>+// |in| past the data. The key-value pair data is: <newline>+//   u16le num_tags <newline>+//   u32le tag[num_tags] <newline>+//   u16le lengths[num_tags] <newline>+//   ...data... <newline>+static bool ParseTags(base::StringPiece* in, TagMap *out) { <newline>+  // Many part of Chrome already assume little-endian. This is just to help <newline>+  // anyone who should try to port it in the future. <newline>+#if defined(__BYTE_ORDER) <newline>+  // Linux check <newline>+  COMPILE_ASSERT(__BYTE_ORDER == __LITTLE_ENDIAN, assumes_little_endian); <newline>+#elif defined(__BIG_ENDIAN__) <newline>+  // Mac check <newline>+  #error assumes little endian <newline>+#endif <newline>+ <newline>+  uint16 num_tags_16; <newline>+  if (in->size() < sizeof(num_tags_16)) <newline>+    return false; <newline>+ <newline>+  memcpy(&num_tags_16, in->data(), sizeof(num_tags_16)); <newline>+  in->remove_prefix(sizeof(num_tags_16)); <newline>+  unsigned num_tags = num_tags_16; <newline>+ <newline>+  if (in->size() < 6 * num_tags) <newline>+    return false; <newline>+ <newline>+  const uint32* tags = reinterpret_cast<const uint32*>(in->data()); <newline>+  const uint16* lens = reinterpret_cast<const uint16*>( <newline>+      in->data() + 4*num_tags); <newline>+  in->remove_prefix(6*num_tags); <newline>+ <newline>+  uint32 prev_tag = 0; <newline>+  for (unsigned i = 0; i < num_tags; i++) { <newline>+    size_t len = lens[i]; <newline>+    uint32 tag = tags[i]; <newline>+ <newline>+    if (in->size() < len) <newline>+      return false; <newline>+    // tags must be in ascending order. <newline>+    if (i > 0 && prev_tag >= tag) <newline>+      return false; <newline>+    (*out)[tag] = base::StringPiece(in->data(), len); <newline>+    in->remove_prefix(len); <newline>+    prev_tag = tag; <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+// GetTag extracts the data associated with |tag| in |tags|. <newline>+static bool GetTag(uint32 tag, const TagMap& tags, base::StringPiece* out) { <newline>+  TagMap::const_iterator i = tags.find(tag); <newline>+  if (i == tags.end()) <newline>+    return false; <newline>+ <newline>+  *out = i->second; <newline>+  return true; <newline>+} <newline>+ <newline>+// kP256SubjectPublicKeyInfoPrefix can be prepended onto a P256 elliptic curve <newline>+// point in X9.62 format in order to make a valid SubjectPublicKeyInfo. The <newline>+// ASN.1 interpretation of these bytes is: <newline>+// <newline>+//     0:d=0  hl=2 l=  89 cons: SEQUENCE <newline>+//     2:d=1  hl=2 l=  19 cons: SEQUENCE <newline>+//     4:d=2  hl=2 l=   7 prim: OBJECT            :id-ecPublicKey <newline>+//    13:d=2  hl=2 l=   8 prim: OBJECT            :prime256v1 <newline>+//    23:d=1  hl=2 l=  66 prim: BIT STRING <newline>+static const uint8 kP256SubjectPublicKeyInfoPrefix[] = { <newline>+  0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, <newline>+  0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, <newline>+  0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, <newline>+  0x42, 0x00, <newline>+}; <newline>+ <newline>+// VerifySignature returns true iff |sig| is a valid signature of <newline>+// |hash| by |pubkey|. The actual implementation is crypto library <newline>+// specific. <newline>+static bool VerifySignature(const base::StringPiece& pubkey, <newline>+                            const base::StringPiece& sig, <newline>+                            const base::StringPiece& hash); <newline>+ <newline>+#if defined(USE_OPENSSL) <newline>+ <newline>+static EVP_PKEY* DecodeX962P256PublicKey( <newline>+    const base::StringPiece& pubkey_bytes) { <newline>+  // The public key is an X9.62 encoded P256 point. <newline>+  if (pubkey_bytes.size() != 1 + 2*32) <newline>+    return NULL; <newline>+ <newline>+  std::string pubkey_spki( <newline>+      reinterpret_cast<const char*>(kP256SubjectPublicKeyInfoPrefix), <newline>+      sizeof(kP256SubjectPublicKeyInfoPrefix)); <newline>+  pubkey_spki += pubkey_bytes.as_string(); <newline>+ <newline>+  EVP_PKEY* ret = NULL; <newline>+  const unsigned char* der_pubkey = <newline>+      reinterpret_cast<const unsigned char*>(pubkey_spki.data()); <newline>+  d2i_PUBKEY(&ret, &der_pubkey, pubkey_spki.size()); <newline>+  return ret; <newline>+} <newline>+ <newline>+static bool VerifySignature(const base::StringPiece& pubkey, <newline>+                            const base::StringPiece& sig, <newline>+                            const base::StringPiece& hash) { <newline>+  crypto::ScopedOpenSSL<EVP_PKEY, EVP_PKEY_free> secpubkey( <newline>+      DecodeX962P256PublicKey(pubkey)); <newline>+  if (!secpubkey.get()) <newline>+    return false; <newline>+ <newline>+ <newline>+  crypto::ScopedOpenSSL<EC_KEY, EC_KEY_free> ec_key( <newline>+      EVP_PKEY_get1_EC_KEY(secpubkey.get())); <newline>+  if (!ec_key.get()) <newline>+    return false; <newline>+ <newline>+  return ECDSA_verify(0, reinterpret_cast<const unsigned char*>(hash.data()), <newline>+                      hash.size(), <newline>+                      reinterpret_cast<const unsigned char*>(sig.data()), <newline>+                      sig.size(), ec_key.get()) == 1; <newline>+} <newline>+ <newline>+#else <newline>+ <newline>+// DecodeX962P256PublicKey parses an uncompressed, X9.62 format, P256 elliptic <newline>+// curve point from |pubkey_bytes| and returns it as a SECKEYPublicKey. <newline>+static SECKEYPublicKey* DecodeX962P256PublicKey( <newline>+    const base::StringPiece& pubkey_bytes) { <newline>+  // The public key is an X9.62 encoded P256 point. <newline>+  if (pubkey_bytes.size() != 1 + 2*32) <newline>+    return NULL; <newline>+ <newline>+  std::string pubkey_spki( <newline>+      reinterpret_cast<const char*>(kP256SubjectPublicKeyInfoPrefix), <newline>+      sizeof(kP256SubjectPublicKeyInfoPrefix)); <newline>+  pubkey_spki += pubkey_bytes.as_string(); <newline>+ <newline>+  SECItem der; <newline>+  memset(&der, 0, sizeof(der)); <newline>+  der.data = reinterpret_cast<uint8*>(const_cast<char*>(pubkey_spki.data())); <newline>+  der.len = pubkey_spki.size(); <newline>+ <newline>+  CERTSubjectPublicKeyInfo* spki = SECKEY_DecodeDERSubjectPublicKeyInfo(&der); <newline>+  if (!spki) <newline>+    return NULL; <newline>+  SECKEYPublicKey* public_key = SECKEY_ExtractPublicKey(spki); <newline>+  SECKEY_DestroySubjectPublicKeyInfo(spki); <newline>+ <newline>+  return public_key; <newline>+} <newline>+ <newline>+static bool VerifySignature(const base::StringPiece& pubkey, <newline>+                            const base::StringPiece& sig, <newline>+                            const base::StringPiece& hash) { <newline>+  SECKEYPublicKey* secpubkey = DecodeX962P256PublicKey(pubkey); <newline>+  if (!secpubkey) <newline>+    return false; <newline>+ <newline>+  SECItem sigitem; <newline>+  memset(&sigitem, 0, sizeof(sigitem)); <newline>+  sigitem.data = reinterpret_cast<uint8*>(const_cast<char*>(sig.data())); <newline>+  sigitem.len = sig.size(); <newline>+ <newline>+  // |decoded_sigitem| is newly allocated, as is the data that it points to. <newline>+  SECItem* decoded_sigitem = DSAU_DecodeDerSigToLen( <newline>+      &sigitem, SECKEY_SignatureLen(secpubkey)); <newline>+ <newline>+  if (!decoded_sigitem) { <newline>+    SECKEY_DestroyPublicKey(secpubkey); <newline>+    return false; <newline>+  } <newline>+ <newline>+  SECItem hashitem; <newline>+  memset(&hashitem, 0, sizeof(hashitem)); <newline>+  hashitem.data = reinterpret_cast<unsigned char*>( <newline>+      const_cast<char*>(hash.data())); <newline>+  hashitem.len = hash.size(); <newline>+ <newline>+  SECStatus rv = PK11_Verify(secpubkey, decoded_sigitem, &hashitem, NULL); <newline>+  SECKEY_DestroyPublicKey(secpubkey); <newline>+  SECITEM_FreeItem(decoded_sigitem, PR_TRUE); <newline>+  return rv == SECSuccess; <newline>+} <newline>+ <newline>+#endif  // !defined(USE_OPENSSL) <newline>+ <newline>+// These are the tag values that we use. Tags are little-endian on the wire and <newline>+// these values correspond to the ASCII of the name. <newline>+static const uint32 kTagALGO = 0x4f474c41; <newline>+static const uint32 kTagP256 = 0x36353250; <newline>+static const uint32 kTagPUBK = 0x4b425550; <newline>+static const uint32 kTagSIG = 0x474953; <newline>+static const uint32 kTagSPIN = 0x4e495053; <newline>+ <newline>+// static <newline>+bool TransportSecurityState::ParseSidePin( <newline>+    const base::StringPiece& leaf_spki, <newline>+    const base::StringPiece& in_side_info, <newline>+    FingerprintVector* out_pub_key_hash) { <newline>+  base::StringPiece side_info(in_side_info); <newline>+ <newline>+  TagMap outer; <newline>+  if (!ParseTags(&side_info, &outer)) <newline>+    return false; <newline>+  // trailing data is not allowed <newline>+  if (side_info.size()) <newline>+    return false; <newline>+ <newline>+  base::StringPiece side_pin_bytes; <newline>+  if (!GetTag(kTagSPIN, outer, &side_pin_bytes)) <newline>+    return false; <newline>+ <newline>+  bool have_parsed_a_key = false; <newline>+  uint8 leaf_spki_hash[crypto::kSHA256Length]; <newline>+  bool have_leaf_spki_hash = false; <newline>+ <newline>+  while (side_pin_bytes.size() > 0) { <newline>+    TagMap side_pin; <newline>+    if (!ParseTags(&side_pin_bytes, &side_pin)) <newline>+      return false; <newline>+ <newline>+    base::StringPiece algo, pubkey, sig; <newline>+    if (!GetTag(kTagALGO, side_pin, &algo) || <newline>+        !GetTag(kTagPUBK, side_pin, &pubkey) || <newline>+        !GetTag(kTagSIG, side_pin, &sig)) { <newline>+      return false; <newline>+    } <newline>+ <newline>+    if (algo.size() != sizeof(kTagP256) || <newline>+        0 != memcmp(algo.data(), &kTagP256, sizeof(kTagP256))) { <newline>+      // We don't support anything but P256 at the moment. <newline>+      continue; <newline>+    } <newline>+ <newline>+    if (!have_leaf_spki_hash) { <newline>+      crypto::SHA256HashString( <newline>+          leaf_spki.as_string(), leaf_spki_hash, sizeof(leaf_spki_hash)); <newline>+      have_leaf_spki_hash = true; <newline>+    } <newline>+ <newline>+    if (VerifySignature(pubkey, sig, base::StringPiece( <newline>+        reinterpret_cast<const char*>(leaf_spki_hash), <newline>+        sizeof(leaf_spki_hash)))) { <newline>+      SHA1Fingerprint fpr; <newline>+      base::SHA1HashBytes( <newline>+          reinterpret_cast<const uint8*>(pubkey.data()), <newline>+          pubkey.size(), <newline>+          fpr.data); <newline>+      out_pub_key_hash->push_back(fpr); <newline>+      have_parsed_a_key = true; <newline>+    } <newline>+  } <newline>+ <newline>+  return have_parsed_a_key; <newline>+} <newline>+ <newline>+// This function converts the binary hashes, which we store in <newline>+// |enabled_hosts_|, to a base64 string which we can include in a JSON file. <newline>+static std::string HashedDomainToExternalString(const std::string& hashed) { <newline>+  std::string out; <newline>+  CHECK(base::Base64Encode(hashed, &out)); <newline>+  return out; <newline>+} <newline>+ <newline>+// This inverts |HashedDomainToExternalString|, above. It turns an external <newline>+// string (from a JSON file) into an internal (binary) string. <newline>+static std::string ExternalStringToHashedDomain(const std::string& external) { <newline>+  std::string out; <newline>+  if (!base::Base64Decode(external, &out) || <newline>+      out.size() != crypto::kSHA256Length) { <newline>+    return std::string(); <newline>+  } <newline>+ <newline>+  return out; <newline>+} <newline>+ <newline>+static ListValue* SPKIHashesToListValue(const FingerprintVector& hashes) { <newline>+  ListValue* pins = new ListValue; <newline>+ <newline>+  for (FingerprintVector::const_iterator i = hashes.begin(); <newline>+       i != hashes.end(); ++i) { <newline>+    std::string hash_str(reinterpret_cast<const char*>(i->data), <newline>+                         sizeof(i->data)); <newline>+    std::string b64; <newline>+    base::Base64Encode(hash_str, &b64); <newline>+    pins->Append(new StringValue("sha1/" + b64)); <newline>+  } <newline>+ <newline>+  return pins; <newline>+} <newline>+ <newline>+bool TransportSecurityState::Serialise(std::string* output) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  DictionaryValue toplevel; <newline>+  base::Time now = base::Time::Now(); <newline>+  for (std::map<std::string, DomainState>::const_iterator <newline>+       i = enabled_hosts_.begin(); i != enabled_hosts_.end(); ++i) { <newline>+    DictionaryValue* state = new DictionaryValue; <newline>+    state->SetBoolean("include_subdomains", i->second.include_subdomains); <newline>+    state->SetDouble("created", i->second.created.ToDoubleT()); <newline>+    state->SetDouble("expiry", i->second.expiry.ToDoubleT()); <newline>+    state->SetDouble("dynamic_spki_hashes_expiry", <newline>+                     i->second.dynamic_spki_hashes_expiry.ToDoubleT()); <newline>+ <newline>+    switch (i->second.mode) { <newline>+      case DomainState::MODE_STRICT: <newline>+        state->SetString("mode", "strict"); <newline>+        break; <newline>+      case DomainState::MODE_SPDY_ONLY: <newline>+        state->SetString("mode", "spdy-only"); <newline>+        break; <newline>+      case DomainState::MODE_PINNING_ONLY: <newline>+        state->SetString("mode", "pinning-only"); <newline>+        break; <newline>+      default: <newline>+        NOTREACHED() << "DomainState with unknown mode"; <newline>+        delete state; <newline>+        continue; <newline>+    } <newline>+ <newline>+    state->Set("preloaded_spki_hashes", <newline>+               SPKIHashesToListValue(i->second.preloaded_spki_hashes)); <newline>+ <newline>+    if (now < i->second.dynamic_spki_hashes_expiry) { <newline>+      state->Set("dynamic_spki_hashes", <newline>+                 SPKIHashesToListValue(i->second.dynamic_spki_hashes)); <newline>+    } <newline>+ <newline>+    toplevel.Set(HashedDomainToExternalString(i->first), state); <newline>+  } <newline>+ <newline>+  base::JSONWriter::WriteWithOptions(&toplevel, <newline>+                                     base::JSONWriter::OPTIONS_PRETTY_PRINT, <newline>+                                     output); <newline>+  return true; <newline>+} <newline>+ <newline>+bool TransportSecurityState::LoadEntries(const std::string& input, <newline>+                                         bool* dirty) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  enabled_hosts_.clear(); <newline>+  return Deserialise(input, dirty, &enabled_hosts_); <newline>+} <newline>+ <newline>+static bool AddHash(const std::string& type_and_base64, <newline>+                    FingerprintVector* out) { <newline>+  SHA1Fingerprint hash; <newline>+ <newline>+  if (!TransportSecurityState::ParsePin(type_and_base64, &hash)) <newline>+    return false; <newline>+ <newline>+  out->push_back(hash); <newline>+  return true; <newline>+} <newline>+ <newline>+static void SPKIHashesFromListValue(FingerprintVector* hashes, <newline>+                                    const ListValue& pins) { <newline>+  size_t num_pins = pins.GetSize(); <newline>+  for (size_t i = 0; i < num_pins; ++i) { <newline>+    std::string type_and_base64; <newline>+    if (pins.GetString(i, &type_and_base64)) <newline>+      AddHash(type_and_base64, hashes); <newline>+  } <newline>+} <newline>+ <newline>+// static <newline>+bool TransportSecurityState::Deserialise( <newline>+    const std::string& input, <newline>+    bool* dirty, <newline>+    std::map<std::string, DomainState>* out) { <newline>+  scoped_ptr<Value> value( <newline>+      base::JSONReader::Read(input, false /* do not allow trailing commas */)); <newline>+  if (!value.get() || !value->IsType(Value::TYPE_DICTIONARY)) <newline>+    return false; <newline>+ <newline>+  DictionaryValue* dict_value = reinterpret_cast<DictionaryValue*>(value.get()); <newline>+  const base::Time current_time(base::Time::Now()); <newline>+  bool dirtied = false; <newline>+ <newline>+  for (DictionaryValue::key_iterator i = dict_value->begin_keys(); <newline>+       i != dict_value->end_keys(); ++i) { <newline>+    DictionaryValue* state; <newline>+    if (!dict_value->GetDictionaryWithoutPathExpansion(*i, &state)) <newline>+      continue; <newline>+ <newline>+    bool include_subdomains; <newline>+    std::string mode_string; <newline>+    double created; <newline>+    double expiry; <newline>+    double dynamic_spki_hashes_expiry = 0.0; <newline>+ <newline>+    if (!state->GetBoolean("include_subdomains", &include_subdomains) || <newline>+        !state->GetString("mode", &mode_string) || <newline>+        !state->GetDouble("expiry", &expiry)) { <newline>+      continue; <newline>+    } <newline>+ <newline>+    // Don't fail if this key is not present. <newline>+    (void) state->GetDouble("dynamic_spki_hashes_expiry", <newline>+                            &dynamic_spki_hashes_expiry); <newline>+ <newline>+    ListValue* pins_list = NULL; <newline>+    FingerprintVector preloaded_spki_hashes; <newline>+    if (state->GetList("preloaded_spki_hashes", &pins_list)) <newline>+      SPKIHashesFromListValue(&preloaded_spki_hashes, *pins_list); <newline>+ <newline>+    FingerprintVector dynamic_spki_hashes; <newline>+    if (state->GetList("dynamic_spki_hashes", &pins_list)) <newline>+      SPKIHashesFromListValue(&dynamic_spki_hashes, *pins_list); <newline>+ <newline>+    DomainState::Mode mode; <newline>+    if (mode_string == "strict") { <newline>+      mode = DomainState::MODE_STRICT; <newline>+    } else if (mode_string == "spdy-only") { <newline>+      mode = DomainState::MODE_SPDY_ONLY; <newline>+    } else if (mode_string == "pinning-only") { <newline>+      mode = DomainState::MODE_PINNING_ONLY; <newline>+    } else { <newline>+      LOG(WARNING) << "Unknown TransportSecurityState mode string found: " <newline>+                   << mode_string; <newline>+      continue; <newline>+    } <newline>+ <newline>+    base::Time expiry_time = base::Time::FromDoubleT(expiry); <newline>+    base::Time dynamic_spki_hashes_expiry_time = <newline>+        base::Time::FromDoubleT(dynamic_spki_hashes_expiry); <newline>+    base::Time created_time; <newline>+    if (state->GetDouble("created", &created)) { <newline>+      created_time = base::Time::FromDoubleT(created); <newline>+    } else { <newline>+      // We're migrating an old entry with no creation date. Make sure we <newline>+      // write the new date back in a reasonable time frame. <newline>+      dirtied = true; <newline>+      created_time = base::Time::Now(); <newline>+    } <newline>+ <newline>+    if (expiry_time <= current_time && <newline>+        dynamic_spki_hashes_expiry_time <= current_time) { <newline>+      // Make sure we dirty the state if we drop an entry. <newline>+      dirtied = true; <newline>+      continue; <newline>+    } <newline>+ <newline>+    std::string hashed = ExternalStringToHashedDomain(*i); <newline>+    if (hashed.empty()) { <newline>+      dirtied = true; <newline>+      continue; <newline>+    } <newline>+ <newline>+    DomainState new_state; <newline>+    new_state.mode = mode; <newline>+    new_state.created = created_time; <newline>+    new_state.expiry = expiry_time; <newline>+    new_state.include_subdomains = include_subdomains; <newline>+    new_state.preloaded_spki_hashes = preloaded_spki_hashes; <newline>+    new_state.dynamic_spki_hashes = dynamic_spki_hashes; <newline>+    new_state.dynamic_spki_hashes_expiry = dynamic_spki_hashes_expiry_time; <newline>+    (*out)[hashed] = new_state; <newline>+  } <newline>+ <newline>+  *dirty = dirtied; <newline>+  return true; <newline>+} <newline>+ <newline>+TransportSecurityState::~TransportSecurityState() { <newline>+} <newline>+ <newline>+void TransportSecurityState::DirtyNotify() { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  if (delegate_) <newline>+    delegate_->StateIsDirty(this); <newline>+} <newline>+ <newline>+// static <newline>+std::string TransportSecurityState::CanonicalizeHost(const std::string& host) { <newline>+  // We cannot perform the operations as detailed in the spec here as |host| <newline>+  // has already undergone IDN processing before it reached us. Thus, we check <newline>+  // that there are no invalid characters in the host and lowercase the result. <newline>+ <newline>+  std::string new_host; <newline>+  if (!DNSDomainFromDot(host, &new_host)) { <newline>+    // DNSDomainFromDot can fail if any label is > 63 bytes or if the whole <newline>+    // name is >255 bytes. However, search terms can have those properties. <newline>+    return std::string(); <newline>+  } <newline>+ <newline>+  for (size_t i = 0; new_host[i]; i += new_host[i] + 1) { <newline>+    const unsigned label_length = static_cast<unsigned>(new_host[i]); <newline>+    if (!label_length) <newline>+      break; <newline>+ <newline>+    for (size_t j = 0; j < label_length; ++j) { <newline>+      // RFC 3490, 4.1, step 3 <newline>+      if (!IsSTD3ASCIIValidCharacter(new_host[i + 1 + j])) <newline>+        return std::string(); <newline>+ <newline>+      new_host[i + 1 + j] = tolower(new_host[i + 1 + j]); <newline>+    } <newline>+ <newline>+    // step 3(b) <newline>+    if (new_host[i + 1] == '-' || <newline>+        new_host[i + label_length] == '-') { <newline>+      return std::string(); <newline>+    } <newline>+  } <newline>+ <newline>+  return new_host; <newline>+} <newline>+ <newline>+// |ReportUMAOnPinFailure| uses these to report which domain was associated <newline>+// with the public key pinning failure. <newline>+// <newline>+// DO NOT CHANGE THE ORDERING OF THESE NAMES OR REMOVE ANY OF THEM. Add new <newline>+// domains at the END of the listing (but before DOMAIN_NUM_EVENTS). <newline>+enum SecondLevelDomainName { <newline>+  DOMAIN_NOT_PINNED, <newline>+ <newline>+  DOMAIN_GOOGLE_COM, <newline>+  DOMAIN_ANDROID_COM, <newline>+  DOMAIN_GOOGLE_ANALYTICS_COM, <newline>+  DOMAIN_GOOGLEPLEX_COM, <newline>+  DOMAIN_YTIMG_COM, <newline>+  DOMAIN_GOOGLEUSERCONTENT_COM, <newline>+  DOMAIN_YOUTUBE_COM, <newline>+  DOMAIN_GOOGLEAPIS_COM, <newline>+  DOMAIN_GOOGLEADSERVICES_COM, <newline>+  DOMAIN_GOOGLECODE_COM, <newline>+  DOMAIN_APPSPOT_COM, <newline>+  DOMAIN_GOOGLESYNDICATION_COM, <newline>+  DOMAIN_DOUBLECLICK_NET, <newline>+  DOMAIN_GSTATIC_COM, <newline>+  DOMAIN_GMAIL_COM, <newline>+  DOMAIN_GOOGLEMAIL_COM, <newline>+  DOMAIN_GOOGLEGROUPS_COM, <newline>+ <newline>+  DOMAIN_TORPROJECT_ORG, <newline>+ <newline>+  DOMAIN_TWITTER_COM, <newline>+  DOMAIN_TWIMG_COM, <newline>+ <newline>+  DOMAIN_AKAMAIHD_NET, <newline>+ <newline>+  // Boundary value for UMA_HISTOGRAM_ENUMERATION: <newline>+  DOMAIN_NUM_EVENTS <newline>+}; <newline>+ <newline>+// PublicKeyPins contains a number of SubjectPublicKeyInfo hashes for a site. <newline>+// The validated certificate chain for the site must not include any of <newline>+// |excluded_hashes| and must include one or more of |required_hashes|. <newline>+struct PublicKeyPins { <newline>+  const char* const* required_hashes; <newline>+  const char* const* excluded_hashes; <newline>+}; <newline>+ <newline>+struct HSTSPreload { <newline>+  uint8 length; <newline>+  bool include_subdomains; <newline>+  char dns_name[30]; <newline>+  bool https_required; <newline>+  PublicKeyPins pins; <newline>+  SecondLevelDomainName second_level_domain_name; <newline>+}; <newline>+ <newline>+static bool HasPreload(const struct HSTSPreload* entries, size_t num_entries, <newline>+                       const std::string& canonicalized_host, size_t i, <newline>+                       TransportSecurityState::DomainState* out, bool* ret) { <newline>+  for (size_t j = 0; j < num_entries; j++) { <newline>+    if (entries[j].length == canonicalized_host.size() - i && <newline>+        memcmp(entries[j].dns_name, &canonicalized_host[i], <newline>+               entries[j].length) == 0) { <newline>+      if (!entries[j].include_subdomains && i != 0) { <newline>+        *ret = false; <newline>+      } else { <newline>+        out->include_subdomains = entries[j].include_subdomains; <newline>+        *ret = true; <newline>+        if (!entries[j].https_required) <newline>+          out->mode = TransportSecurityState::DomainState::MODE_PINNING_ONLY; <newline>+        if (entries[j].pins.required_hashes) { <newline>+          const char* const* hash = entries[j].pins.required_hashes; <newline>+          while (*hash) { <newline>+            bool ok = AddHash(*hash, &out->preloaded_spki_hashes); <newline>+            DCHECK(ok) << " failed to parse " << *hash; <newline>+            hash++; <newline>+          } <newline>+        } <newline>+        if (entries[j].pins.excluded_hashes) { <newline>+          const char* const* hash = entries[j].pins.excluded_hashes; <newline>+          while (*hash) { <newline>+            bool ok = AddHash(*hash, &out->bad_preloaded_spki_hashes); <newline>+            DCHECK(ok) << " failed to parse " << *hash; <newline>+            hash++; <newline>+          } <newline>+        } <newline>+      } <newline>+      return true; <newline>+    } <newline>+  } <newline>+  return false; <newline>+} <newline>+ <newline>+// kNoRejectedPublicKeys is a placeholder for when no public keys are rejected. <newline>+static const char* const kNoRejectedPublicKeys[] = { <newline>+  NULL, <newline>+}; <newline>+ <newline>+static const char* const kGoogleAcceptableCerts[] = { <newline>+  kSPKIHash_VeriSignClass3, <newline>+  kSPKIHash_VeriSignClass3_G3, <newline>+  kSPKIHash_Google1024, <newline>+  kSPKIHash_Google2048, <newline>+  kSPKIHash_EquifaxSecureCA, <newline>+  NULL, <newline>+}; <newline>+static const char* const kGoogleRejectedCerts[] = { <newline>+  kSPKIHash_Aetna, <newline>+  kSPKIHash_Intel, <newline>+  kSPKIHash_TCTrustCenter, <newline>+  kSPKIHash_Vodafone, <newline>+  NULL, <newline>+}; <newline>+#define kGooglePins { \ <newline>+  kGoogleAcceptableCerts, \ <newline>+  kGoogleRejectedCerts, \ <newline>+} <newline>+ <newline>+static const char* const kTorAcceptableCerts[] = { <newline>+  kSPKIHash_RapidSSL, <newline>+  kSPKIHash_DigiCertEVRoot, <newline>+  kSPKIHash_Tor1, <newline>+  kSPKIHash_Tor2, <newline>+  kSPKIHash_Tor3, <newline>+  NULL, <newline>+}; <newline>+#define kTorPins { \ <newline>+  kTorAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+static const char* const kTwitterComAcceptableCerts[] = { <newline>+  kSPKIHash_VeriSignClass1, <newline>+  kSPKIHash_VeriSignClass3, <newline>+  kSPKIHash_VeriSignClass3_G4, <newline>+  kSPKIHash_VeriSignClass4_G3, <newline>+  kSPKIHash_VeriSignClass3_G3, <newline>+  kSPKIHash_VeriSignClass1_G3, <newline>+  kSPKIHash_VeriSignClass2_G3, <newline>+  kSPKIHash_VeriSignClass3_G2, <newline>+  kSPKIHash_VeriSignClass2_G2, <newline>+  kSPKIHash_VeriSignClass3_G5, <newline>+  kSPKIHash_VeriSignUniversal, <newline>+  kSPKIHash_GeoTrustGlobal, <newline>+  kSPKIHash_GeoTrustGlobal2, <newline>+  kSPKIHash_GeoTrustUniversal, <newline>+  kSPKIHash_GeoTrustUniversal2, <newline>+  kSPKIHash_GeoTrustPrimary, <newline>+  kSPKIHash_GeoTrustPrimary_G2, <newline>+  kSPKIHash_GeoTrustPrimary_G3, <newline>+  kSPKIHash_Twitter1, <newline>+  NULL, <newline>+}; <newline>+#define kTwitterComPins { \ <newline>+  kTwitterComAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+// kTwitterCDNAcceptableCerts are the set of public keys valid for Twitter's <newline>+// CDNs, which includes all the keys from kTwitterComAcceptableCerts. <newline>+static const char* const kTwitterCDNAcceptableCerts[] = { <newline>+  kSPKIHash_VeriSignClass1, <newline>+  kSPKIHash_VeriSignClass3, <newline>+  kSPKIHash_VeriSignClass3_G4, <newline>+  kSPKIHash_VeriSignClass4_G3, <newline>+  kSPKIHash_VeriSignClass3_G3, <newline>+  kSPKIHash_VeriSignClass1_G3, <newline>+  kSPKIHash_VeriSignClass2_G3, <newline>+  kSPKIHash_VeriSignClass3_G2, <newline>+  kSPKIHash_VeriSignClass2_G2, <newline>+  kSPKIHash_VeriSignClass3_G5, <newline>+  kSPKIHash_VeriSignUniversal, <newline>+  kSPKIHash_GeoTrustGlobal, <newline>+  kSPKIHash_GeoTrustGlobal2, <newline>+  kSPKIHash_GeoTrustUniversal, <newline>+  kSPKIHash_GeoTrustUniversal2, <newline>+  kSPKIHash_GeoTrustPrimary, <newline>+  kSPKIHash_GeoTrustPrimary_G2, <newline>+  kSPKIHash_GeoTrustPrimary_G3, <newline>+  kSPKIHash_Twitter1, <newline>+ <newline>+  kSPKIHash_Entrust_2048, <newline>+  kSPKIHash_Entrust_EV, <newline>+  kSPKIHash_Entrust_G2, <newline>+  kSPKIHash_Entrust_SSL, <newline>+  kSPKIHash_AAACertificateServices, <newline>+  kSPKIHash_AddTrustClass1CARoot, <newline>+  kSPKIHash_AddTrustExternalCARoot, <newline>+  kSPKIHash_AddTrustPublicCARoot, <newline>+  kSPKIHash_AddTrustQualifiedCARoot, <newline>+  kSPKIHash_COMODOCertificationAuthority, <newline>+  kSPKIHash_SecureCertificateServices, <newline>+  kSPKIHash_TrustedCertificateServices, <newline>+  kSPKIHash_UTNDATACorpSGC, <newline>+  kSPKIHash_UTNUSERFirstClientAuthenticationandEmail, <newline>+  kSPKIHash_UTNUSERFirstHardware, <newline>+  kSPKIHash_UTNUSERFirstObject, <newline>+  kSPKIHash_GTECyberTrustGlobalRoot, <newline>+  NULL, <newline>+}; <newline>+#define kTwitterCDNPins { \ <newline>+  kTwitterCDNAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+// kTestAcceptableCerts doesn't actually match any public keys and is used <newline>+// with "pinningtest.appspot.com", below, to test if pinning is active. <newline>+static const char* const kTestAcceptableCerts[] = { <newline>+  "sha1/AAAAAAAAAAAAAAAAAAAAAAAAAAA=", <newline>+  NULL, <newline>+}; <newline>+#define kTestPins { \ <newline>+  kTestAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+#define kNoPins { \ <newline>+  NULL, NULL, \ <newline>+} <newline>+ <newline>+#if defined(OS_CHROMEOS) <newline>+  static const bool kTwitterHSTS = true; <newline>+#else <newline>+  static const bool kTwitterHSTS = false; <newline>+#endif <newline>+ <newline>+// In the medium term this list is likely to just be hardcoded here. This <newline>+// slightly odd form removes the need for additional relocations records. <newline>+static const struct HSTSPreload kPreloadedSTS[] = { <newline>+  // (*.)google.com, iff using SSL must use an acceptable certificate. <newline>+  {12, true, "\006google\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {25, true, "\013pinningtest\007appspot\003com", false, <newline>+      kTestPins, DOMAIN_APPSPOT_COM }, <newline>+  // Now we force HTTPS for subtrees of google.com. <newline>+  {19, true, "\006health\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM  }, <newline>+  {21, true, "\010checkout\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {19, true, "\006chrome\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004docs\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {18, true, "\005sites\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {25, true, "\014spreadsheets\006google\003com", true, <newline>+      kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {22, false, "\011appengine\006google\003com", true, <newline>+      kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {22, true, "\011encrypted\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {21, true, "\010accounts\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {21, true, "\010profiles\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004mail\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {23, true, "\012talkgadget\006google\003com", true, <newline>+      kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004talk\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {29, true, "\020hostedtalkgadget\006google\003com", true, <newline>+      kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004plus\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  // Other Google-related domains that must use HTTPS. <newline>+  {20, true, "\006market\007android\003com", true, kGooglePins, <newline>+      DOMAIN_ANDROID_COM }, <newline>+  {26, true, "\003ssl\020google-analytics\003com", true, <newline>+      kGooglePins, DOMAIN_GOOGLE_ANALYTICS_COM }, <newline>+  {18, true, "\005drive\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {16, true, "\012googleplex\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLEPLEX_COM }, <newline>+  {19, true, "\006groups\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004apis\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  // chart.apis.google.com is *not* HSTS because the certificate doesn't match <newline>+  // and there are lots of links out there that still use the name. The correct <newline>+  // hostname for this is chart.googleapis.com. <newline>+  {23, true, "\005chart\004apis\006google\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM}, <newline>+ <newline>+  // Other Google-related domains that must use an acceptable certificate <newline>+  // iff using SSL. <newline>+  {11, true, "\005ytimg\003com", false, kGooglePins, <newline>+      DOMAIN_YTIMG_COM }, <newline>+  {23, true, "\021googleusercontent\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLEUSERCONTENT_COM }, <newline>+  {13, true, "\007youtube\003com", false, kGooglePins, <newline>+      DOMAIN_YOUTUBE_COM }, <newline>+  {16, true, "\012googleapis\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLEAPIS_COM }, <newline>+  {22, true, "\020googleadservices\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLEADSERVICES_COM }, <newline>+  {16, true, "\012googlecode\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLECODE_COM }, <newline>+  {13, true, "\007appspot\003com", false, kGooglePins, <newline>+      DOMAIN_APPSPOT_COM }, <newline>+  {23, true, "\021googlesyndication\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLESYNDICATION_COM }, <newline>+  {17, true, "\013doubleclick\003net", false, kGooglePins, <newline>+      DOMAIN_DOUBLECLICK_NET }, <newline>+  {17, true, "\003ssl\007gstatic\003com", false, kGooglePins, <newline>+      DOMAIN_GSTATIC_COM }, <newline>+  // Exclude the learn.doubleclick.net subdomain because it uses a different <newline>+  // CA. <newline>+  {23, true, "\005learn\013doubleclick\003net", false, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  // Now we force HTTPS for other sites that have requested it. <newline>+  {16, false, "\003www\006paypal\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false, "\003www\006elanex\003biz", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true,  "\006jottit\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {19, true,  "\015sunshinepress\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {21, false, "\003www\013noisebridge\003net", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {10, false, "\004neg9\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006riseup\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, false, "\006factor\002cc", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {22, false, "\007members\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {22, false, "\007support\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\002id\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, false, "\005lists\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {19, true, "\015splendidbacon\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {28, false, "\016aladdinschools\007appspot\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {14, true, "\011ottospora\002nl", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {25, false, "\003www\017paycheckrecords\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {14, false, "\010lastpass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {18, false, "\003www\010lastpass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, true, "\010keyerror\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\010entropia\002de", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\003www\010entropia\002de", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, true, "\005romab\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false, "\012logentries\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, false, "\003www\012logentries\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006stripe\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {27, true, "\025cloudsecurityalliance\003org", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {15, true, "\005login\004sapo\002pt", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {19, true, "\015mattmccutchen\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, true, "\006betnet\002fr", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, true, "\010uprotect\002it", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, false, "\010squareup\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {9, true, "\004cert\002se", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, true, "\006crypto\002is", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, true, "\005simon\007butcher\004name", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {10, true, "\004linx\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\007dropcam\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\003www\007dropcam\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {30, true, "\010ebanking\014indovinabank\003com\002vn", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\007epoxate\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false, "\012torproject\003org", true, kTorPins, <newline>+      DOMAIN_TORPROJECT_ORG }, <newline>+  {21, true, "\004blog\012torproject\003org", true, kTorPins, <newline>+      DOMAIN_TORPROJECT_ORG }, <newline>+  {22, true, "\005check\012torproject\003org", true, kTorPins, <newline>+      DOMAIN_TORPROJECT_ORG }, <newline>+  {20, true, "\003www\012torproject\003org", true, kTorPins, <newline>+      DOMAIN_TORPROJECT_ORG }, <newline>+  {22, true, "\003www\014moneybookers\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\013ledgerscope\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {21, false, "\003www\013ledgerscope\003net", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {10, false, "\004kyps\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, false, "\003www\004kyps\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, true, "\003app\007recurly\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, true, "\003api\007recurly\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\007greplin\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\003www\007greplin\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {27, true, "\006luneta\016nearbuysystems\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006ubertt\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {9, true, "\004pixi\002me", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, true, "\010grepular\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false , "\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, false , "\003www\012mydigipass\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {26, false , "\011developer\012mydigipass\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {30, false , "\003www\011developer\012mydigipass\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {24, false , "\007sandbox\012mydigipass\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {28, false , "\003www\007sandbox\012mydigipass\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006crypto\003cat", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {25, true, "\014bigshinylock\006minazo\003net", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {10, true, "\005crate\002io", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+ <newline>+  {13, false, "\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {17, true, "\003www\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {17, true, "\003api\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterCDNPins, DOMAIN_TWITTER_COM }, <newline>+  {19, true, "\005oauth\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {20, true, "\006mobile\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {17, true, "\003dev\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {22, true, "\010business\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {22, true, "\010platform\007twitter\003com", false, <newline>+      kTwitterCDNPins, DOMAIN_TWITTER_COM }, <newline>+  {15, true, "\003si0\005twimg\003com", false, kTwitterCDNPins, <newline>+      DOMAIN_TWIMG_COM }, <newline>+  {23, true, "\010twimg0-a\010akamaihd\003net", false, <newline>+      kTwitterCDNPins, DOMAIN_AKAMAIHD_NET }, <newline>+}; <newline>+static const size_t kNumPreloadedSTS = ARRAYSIZE_UNSAFE(kPreloadedSTS); <newline>+ <newline>+static const struct HSTSPreload kPreloadedSNISTS[] = { <newline>+  // These SNI-only domains must always use HTTPS. <newline>+  {11, false, "\005gmail\003com", true, kGooglePins, <newline>+      DOMAIN_GMAIL_COM }, <newline>+  {16, false, "\012googlemail\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLEMAIL_COM }, <newline>+  {15, false, "\003www\005gmail\003com", true, kGooglePins, <newline>+      DOMAIN_GMAIL_COM }, <newline>+  {20, false, "\003www\012googlemail\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLEMAIL_COM }, <newline>+  // These SNI-only domains must use an acceptable certificate iff using <newline>+  // HTTPS. <newline>+  {22, true, "\020google-analytics\003com", false, kGooglePins, <newline>+     DOMAIN_GOOGLE_ANALYTICS_COM }, <newline>+  // www. requires SNI. <newline>+  {18, true, "\014googlegroups\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLEGROUPS_COM }, <newline>+}; <newline>+static const size_t kNumPreloadedSNISTS = ARRAYSIZE_UNSAFE(kPreloadedSNISTS); <newline>+ <newline>+// Returns the HSTSPreload entry for the |canonicalized_host| in |entries|, <newline>+// or NULL if there is none. Prefers exact hostname matches to those that <newline>+// match only because HSTSPreload.include_subdomains is true. <newline>+// <newline>+// |canonicalized_host| should be the hostname as canonicalized by <newline>+// CanonicalizeHost. <newline>+static const struct HSTSPreload* GetHSTSPreload( <newline>+    const std::string& canonicalized_host, <newline>+    const struct HSTSPreload* entries, <newline>+    size_t num_entries) { <newline>+  for (size_t i = 0; canonicalized_host[i]; i += canonicalized_host[i] + 1) { <newline>+    for (size_t j = 0; j < num_entries; j++) { <newline>+      const struct HSTSPreload* entry = entries + j; <newline>+ <newline>+      if (i != 0 && !entry->include_subdomains) <newline>+        continue; <newline>+ <newline>+      if (entry->length == canonicalized_host.size() - i && <newline>+          memcmp(entry->dns_name, &canonicalized_host[i], entry->length) == 0) { <newline>+        return entry; <newline>+      } <newline>+    } <newline>+  } <newline>+ <newline>+  return NULL; <newline>+} <newline>+ <newline>+// static <newline>+bool TransportSecurityState::IsGooglePinnedProperty(const std::string& host, <newline>+                                                    bool sni_available) { <newline>+  std::string canonicalized_host = CanonicalizeHost(host); <newline>+  const struct HSTSPreload* entry = <newline>+      GetHSTSPreload(canonicalized_host, kPreloadedSTS, kNumPreloadedSTS); <newline>+ <newline>+  if (entry && entry->pins.required_hashes == kGoogleAcceptableCerts) <newline>+    return true; <newline>+ <newline>+  if (sni_available) { <newline>+    entry = GetHSTSPreload(canonicalized_host, kPreloadedSNISTS, <newline>+                           kNumPreloadedSNISTS); <newline>+    if (entry && entry->pins.required_hashes == kGoogleAcceptableCerts) <newline>+      return true; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+// static <newline>+void TransportSecurityState::ReportUMAOnPinFailure(const std::string& host) { <newline>+  std::string canonicalized_host = CanonicalizeHost(host); <newline>+ <newline>+  const struct HSTSPreload* entry = <newline>+      GetHSTSPreload(canonicalized_host, kPreloadedSTS, kNumPreloadedSTS); <newline>+ <newline>+  if (!entry) { <newline>+    entry = GetHSTSPreload(canonicalized_host, kPreloadedSNISTS, <newline>+                           kNumPreloadedSNISTS); <newline>+  } <newline>+ <newline>+  DCHECK(entry); <newline>+  DCHECK(entry->pins.required_hashes); <newline>+  DCHECK(entry->second_level_domain_name != DOMAIN_NOT_PINNED); <newline>+ <newline>+  UMA_HISTOGRAM_ENUMERATION("Net.PublicKeyPinFailureDomain", <newline>+                            entry->second_level_domain_name, DOMAIN_NUM_EVENTS); <newline>+} <newline>+ <newline>+// IsPreloadedSTS returns true if the canonicalized hostname should always be <newline>+// considered to have STS enabled. <newline>+bool TransportSecurityState::IsPreloadedSTS( <newline>+    const std::string& canonicalized_host, <newline>+    bool sni_available, <newline>+    DomainState* out) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  out->preloaded = true; <newline>+  out->mode = DomainState::MODE_STRICT; <newline>+  out->include_subdomains = false; <newline>+ <newline>+  for (size_t i = 0; canonicalized_host[i]; i += canonicalized_host[i] + 1) { <newline>+    std::string host_sub_chunk(&canonicalized_host[i], <newline>+                               canonicalized_host.size() - i); <newline>+    out->domain = DNSDomainToString(host_sub_chunk); <newline>+    std::string hashed_host(HashHost(host_sub_chunk)); <newline>+    if (forced_hosts_.find(hashed_host) != forced_hosts_.end()) { <newline>+      *out = forced_hosts_[hashed_host]; <newline>+      out->domain = DNSDomainToString(host_sub_chunk); <newline>+      out->preloaded = true; <newline>+      return true; <newline>+    } <newline>+    bool ret; <newline>+    if (HasPreload(kPreloadedSTS, kNumPreloadedSTS, canonicalized_host, i, out, <newline>+                   &ret)) { <newline>+      return ret; <newline>+    } <newline>+    if (sni_available && <newline>+        HasPreload(kPreloadedSNISTS, kNumPreloadedSNISTS, canonicalized_host, i, <newline>+                   out, &ret)) { <newline>+      return ret; <newline>+    } <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+static std::string HashesToBase64String( <newline>+    const FingerprintVector& hashes) { <newline>+  std::vector<std::string> hashes_strs; <newline>+  for (FingerprintVector::const_iterator <newline>+       i = hashes.begin(); i != hashes.end(); i++) { <newline>+    std::string s; <newline>+    const std::string hash_str(reinterpret_cast<const char*>(i->data), <newline>+                               sizeof(i->data)); <newline>+    base::Base64Encode(hash_str, &s); <newline>+    hashes_strs.push_back(s); <newline>+  } <newline>+ <newline>+  return JoinString(hashes_strs, ','); <newline>+} <newline>+ <newline>+TransportSecurityState::DomainState::DomainState() <newline>+    : mode(MODE_STRICT), <newline>+      created(base::Time::Now()), <newline>+      include_subdomains(false), <newline>+      preloaded(false) { <newline>+} <newline>+ <newline>+TransportSecurityState::DomainState::~DomainState() { <newline>+} <newline>+ <newline>+bool TransportSecurityState::DomainState::IsChainOfPublicKeysPermitted( <newline>+    const FingerprintVector& hashes) { <newline>+ <newline>+  if (HashesIntersect(bad_preloaded_spki_hashes, hashes)) { <newline>+    LOG(ERROR) << "Rejecting public key chain for domain " << domain <newline>+               << ". Validated chain: " << HashesToBase64String(hashes) <newline>+               << ", matches one or more bad hashes: " <newline>+               << HashesToBase64String(bad_preloaded_spki_hashes); <newline>+    return false; <newline>+  } <newline>+ <newline>+  if (!(dynamic_spki_hashes.empty() && preloaded_spki_hashes.empty()) && <newline>+      !HashesIntersect(dynamic_spki_hashes, hashes) && <newline>+      !HashesIntersect(preloaded_spki_hashes, hashes)) { <newline>+    LOG(ERROR) << "Rejecting public key chain for domain " << domain <newline>+               << ". Validated chain: " << HashesToBase64String(hashes) <newline>+               << ", expected: " << HashesToBase64String(dynamic_spki_hashes) <newline>+               << " or: " << HashesToBase64String(preloaded_spki_hashes); <newline>+ <newline>+    return false; <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+bool TransportSecurityState::DomainState::IsMoreStrict( <newline>+    const TransportSecurityState::DomainState& other) { <newline>+  if (this->dynamic_spki_hashes.empty() && !other.dynamic_spki_hashes.empty()) <newline>+    return false; <newline>+ <newline>+  if (!this->include_subdomains && other.include_subdomains) <newline>+    return false; <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+bool TransportSecurityState::DomainState::ShouldRedirectHTTPToHTTPS() <newline>+    const { <newline>+  return mode == MODE_STRICT; <newline>+} <newline>+ <newline>+}  // namespace
a79de7b4d24ac33f08ecaec4e4748170ee4bf82	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 26 20:06:05 2012 +0000	Add hsts_preloaded.h This CL is the result of: % cat public_key_hashes.h transport_security_state.cc > hsts_preloaded.h This is purely to make a future CL easier to review. (Not reviewed)				svn://svn.chromium.org/chrome/trunk/src@128984 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/hsts_preloaded.h b/net/base/hsts_preloaded.h <newline>new file mode 100644 <newline>index 0000000..342c435 <newline>--- /dev/null <newline>+++ b/net/base/hsts_preloaded.h <newline>@@ -0,0 +1,2904 @@ <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#ifndef NET_BASE_PUBLIC_KEY_HASHES_ <newline>+#define NET_BASE_PUBLIC_KEY_HASHES_ <newline>+#pragma once <newline>+ <newline>+// This file contains SubjectPublicKeyInfo hashes for public key pinning. The <newline>+// hashes are base64 encoded, SHA1 digests. <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICPDCCAaUCEDyRMcsf9tAbDpq40ES/Er4wDQYJKoZIhvcNAQEFBQAwXzELMAkG <newline>+A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFz <newline>+cyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTk2 <newline>+MDEyOTAwMDAwMFoXDTI4MDgwMjIzNTk1OVowXzELMAkGA1UEBhMCVVMxFzAVBgNV <newline>+BAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFzcyAzIFB1YmxpYyBQcmlt <newline>+YXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGfMA0GCSqGSIb3DQEBAQUAA4GN <newline>+ADCBiQKBgQDJXFme8huKARS0EN8EQNvjV69qRUCPhAwL0TPZ2RHP7gJYHyX3KqhE <newline>+BarsAx94f56TuZoAqiN91qyFomNFx3InzPRMxnVx0jnvT0Lwdd8KkMaOIG+YD/is <newline>+I19wKTakyYbnsZogy1Olhec9vn2a/iRFM9x2Fe0PonFkTGUugWhFpwIDAQABMA0G <newline>+CSqGSIb3DQEBBQUAA4GBABByUqkFFBkyCEHwxWsKzH4PIRnN5GfcX6kb5sroc50i <newline>+2JhucwNhkcV8sEVAbkSdjbCxlnRhLQ2pRdKkkirWmnWXbj9T/UWZYB2oK0z5XqcJ <newline>+2HUw19JlYD1n1khVdWk/kfVIC0dpImmClr7JyDiGSnoscxlIaU5rfGW/D/xwzoiQ <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3[] = <newline>+    "sha1/4n972HfV354KP560yw4uqe/baXc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGjCCAwICEQCbfgZJoz5iudXukEhxKe9XMA0GCSqGSIb3DQEBBQUAMIHKMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl <newline>+cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu <newline>+LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT <newline>+aWduIENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp <newline>+dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD <newline>+VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT <newline>+aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ <newline>+bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu <newline>+IENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMu6nFL8eB8aHm8b <newline>+N3O9+MlrlBIwT/A2R/XQkQr1F8ilYcEWQE37imGQ5XYgwREGfassbqb1EUGO+i2t <newline>+KmFZpGcmTNDovFJbcCAEWNF6yaRpvIMXZK0Fi7zQWM6NjPXr8EJJC52XJ2cybuGu <newline>+kxUccLwgTS8Y3pKI6GyFVxEa6X7jJhFUokWWVYPKMIno3Nij7SqAP395ZVc+FSBm <newline>+CC+Vk7+qRy+oRpfwEuL+wgorUeZ25rdGt+INpsyow0xZVYnm6FNcHOqd8GIWC6fJ <newline>+Xwzw3sJ2zq/3avL6QaaiMxTJ5Xpj055iN9WFZZ4O5lMkdBteHRJTW8cs54NJOxWu <newline>+imi5V5cCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAERSWwauSCPc/L8my/uRan2Te <newline>+2yFPhpk0djZX3dAVL8WtfxUfN2JzPtTnX84XA9s1+ivbrmAJXx5fj267Cz3qWhMe <newline>+DGBvtcC1IyIuBwvLqXTLR7sdwdela8wv0kL9Sd2nic9TutoAWii/gt/4uhMdUIaC <newline>+/Y4wjylGsB49Ndo4YhYYSq3mtlFs3q9i6wHQHiT+eo8SGhJouPtmmRQURVyu565p <newline>+F4ErWjfJXir0xuKhXFSbplQAz/DxwceYMBo7Nhbbo27q/a2ywtrvAkcTisDxszGt <newline>+TxzhT5yvDwyd93gN2PQ1VoDat20Xj50egWTh/sVFuq1ruQp6Tk9LhO5L8X3dEQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G3[] = <newline>+    "sha1/IvGeLsbqzPxdI0b0wuj2xVTdXgc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICsDCCAhmgAwIBAgIDC2dxMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDkwNjA4MjA0MzI3WhcNMTMwNjA3MTk0MzI3 <newline>+WjBGMQswCQYDVQQGEwJVUzETMBEGA1UEChMKR29vZ2xlIEluYzEiMCAGA1UEAxMZ <newline>+R29vZ2xlIEludGVybmV0IEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOBjQAw <newline>+gYkCgYEAye23pIucV+eEPkB9hPSP0XFjU5nneXQUr0SZMyCSjXvlKAy6rWxJfoNf <newline>+NFlOCnowzdDXxFdF7dWq1nMmzq0yE7jXDx07393cCDaob1FEm8rWIFJztyaHNWrb <newline>+qeXUWaUr/GcZOfqTGBhs3t0lig4zFEfC7wFQeeT9adGnwKziV28CAwEAAaOBozCB <newline>+oDAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFL/AMOv1QxE+Z7qekfv8atrjaxIk <newline>+MB8GA1UdIwQYMBaAFEjmaPkr0rKV10fYIyAQTzOYkJ/UMBIGA1UdEwEB/wQIMAYB <newline>+Af8CAQAwOgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2NybC5nZW90cnVzdC5jb20v <newline>+Y3Jscy9zZWN1cmVjYS5jcmwwDQYJKoZIhvcNAQEFBQADgYEAuIojxkiWsRF8YHde <newline>+BZqrocb6ghwYB8TrgbCoZutJqOkM0ymt9e8kTP3kS8p/XmOrmSfLnzYhLLkQYGfN <newline>+0rTw8Ktx5YtaiScRhKqOv5nwnQkhClIZmloJ0pC3+gz4fniisIWvXEyZ2VxVKfml <newline>+UUIuOss4jHg7y/j7lYe8vJD5UDI= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Google1024[] = <newline>+    "sha1/QMVAHW+MuvCLAO3vse6H0AWzuc0="; <newline>+ <newline>+// Not yet used publicly. <newline>+static const char kSPKIHash_Google2048[] = <newline>+    "sha1/AbkhxY0L343gKf+cki7NVWp+ozk="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDIDCCAomgAwIBAgIENd70zzANBgkqhkiG9w0BAQUFADBOMQswCQYDVQQGEwJV <newline>+UzEQMA4GA1UEChMHRXF1aWZheDEtMCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2Vy <newline>+dGlmaWNhdGUgQXV0aG9yaXR5MB4XDTk4MDgyMjE2NDE1MVoXDTE4MDgyMjE2NDE1 <newline>+MVowTjELMAkGA1UEBhMCVVMxEDAOBgNVBAoTB0VxdWlmYXgxLTArBgNVBAsTJEVx <newline>+dWlmYXggU2VjdXJlIENlcnRpZmljYXRlIEF1dGhvcml0eTCBnzANBgkqhkiG9w0B <newline>+AQEFAAOBjQAwgYkCgYEAwV2xWGcIYu6gmi0fCG2RFGiYCh7+2gRvE4RiIcPRfM6f <newline>+BeC4AfBONOziipUEZKzxa1NfBbPLZ4C/QgKO/t0BCezhABRP/PvwDN1Dulsr4R+A <newline>+cJkVV5MW8Q+XarfCaCMczE1ZMKxRHjuvK9buY0V7xdlfUNLjUA86iOe/FP3gx7kC <newline>+AwEAAaOCAQkwggEFMHAGA1UdHwRpMGcwZaBjoGGkXzBdMQswCQYDVQQGEwJVUzEQ <newline>+MA4GA1UEChMHRXF1aWZheDEtMCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2VydGlm <newline>+aWNhdGUgQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMBoGA1UdEAQTMBGBDzIwMTgw <newline>+ODIyMTY0MTUxWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gj <newline>+IBBPM5iQn9QwHQYDVR0OBBYEFEjmaPkr0rKV10fYIyAQTzOYkJ/UMAwGA1UdEwQF <newline>+MAMBAf8wGgYJKoZIhvZ9B0EABA0wCxsFVjMuMGMDAgbAMA0GCSqGSIb3DQEBBQUA <newline>+A4GBAFjOKer89961zgK5F7WF0bnj4JXMJTENAKaSbn+2kmOeUJXRmm/kEd5jhW6Y <newline>+7qj/WsjTVbJmcVfewCHrPSqnI0kBBIZCe/zuf6IWUrVnZ9NA2zsmWLIodz2uFHdh <newline>+1voqZiegDfqnc1zqcPGUIWVEX/r87yloqaKHee9570+sB3c4 <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_EquifaxSecureCA[] = <newline>+    "sha1/SOZo+SvSspXXR9gjIBBPM5iQn9Q="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICsjCCAhugAwIBAgIDBe3YMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDUwODMxMjA0MDM3WhcNMTIwODMxMjA0MDM3 <newline>+WjBIMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQWV0bmEgSW5jLjEkMCIGA1UEAxMb <newline>+QWV0bmEgSW5jLiBTZWN1cmUgU2VydmVyIENBMIGfMA0GCSqGSIb3DQEBAQUAA4GN <newline>+ADCBiQKBgQCnB2yrm4i44DG5epPu0fbe/pOZDWOvAS7qCcy6YbSkPfOHfH9Blmf3 <newline>+8L6D5yY1pzmTXaU7cDQu4qmj21toEIGwBziMmW6NsiV8nHtmtfXfHP6xrmyPUdN2 <newline>+DdTj937fnrYOoyMhGgBYEjiemeHFQxZSpKZdolFEFXbUa2/yWQafrQIDAQABo4Gj <newline>+MIGgMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQU2S4/xnaeitmFkzoxLnZeo33n <newline>+H4owHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gjIBBPM5iQn9QwEgYDVR0TAQH/BAgw <newline>+BgEB/wIBADA6BgNVHR8EMzAxMC+gLaArhilodHRwOi8vY3JsLmdlb3RydXN0LmNv <newline>+bS9jcmxzL3NlY3VyZWNhLmNybDANBgkqhkiG9w0BAQUFAAOBgQBMSoZHIrD1rq8v <newline>+UG3UYbN76xiF9FDRzWTs5Mvv4Psvf2kk426slzNO0ukFAsmwqN1mA/P9Nc4FlMMC <newline>+YtcnLNwC/syEYdQBOJjxfTVGTqh5q6jDs7S3rPJv8mrFk8ldC8PxU1ZJVfSlFCDn <newline>+6diMDgvOAJfUeJlIRLGu2k/ksI0Y1w== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Aetna[] = <newline>+    "sha1/klKqFN6/gK4wqtlOYDhwJKVDLxo="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDfTCCAuagAwIBAgIDErvmMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDIwNTIxMDQwMDAwWhcNMTgwODIxMDQwMDAw <newline>+WjBCMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEbMBkGA1UE <newline>+AxMSR2VvVHJ1c3QgR2xvYmFsIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB <newline>+CgKCAQEA2swYYzD99BcjGlZ+W988bDjkcbd4kdS8odhM+KhDtgPpTSEHCIjaWC9m <newline>+OSm9BXiLnTjoBbdqfnGk5sRgprDvgOSJKA+eJdbtg/OtppHHmMlCGDUUna2YRpIu <newline>+T8rxh0PBFpVXLVDviS2Aelet8u5fa9IAjbkU+BQVNdnARqN7csiRv8lVK83Qlz6c <newline>+JmTM386DGXHKTubU1XupGc1V3sjs0l44U+VcT4wt/lAjNvxm5suOpDkZALeVAjmR <newline>+Cw7+OC7RHQWa9k0+bw8HHa8sHo9gOeL6NlMTOdReJivbPagUvTLrGAMoUgRx5asz <newline>+PeE4uwc2hGKceeoWMPRfwCvocWvk+QIDAQABo4HwMIHtMB8GA1UdIwQYMBaAFEjm <newline>+aPkr0rKV10fYIyAQTzOYkJ/UMB0GA1UdDgQWBBTAephojYn7qwVkDBF9qn1luMrM <newline>+TjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjA6BgNVHR8EMzAxMC+g <newline>+LaArhilodHRwOi8vY3JsLmdlb3RydXN0LmNvbS9jcmxzL3NlY3VyZWNhLmNybDBO <newline>+BgNVHSAERzBFMEMGBFUdIAAwOzA5BggrBgEFBQcCARYtaHR0cHM6Ly93d3cuZ2Vv <newline>+dHJ1c3QuY29tL3Jlc291cmNlcy9yZXBvc2l0b3J5MA0GCSqGSIb3DQEBBQUAA4GB <newline>+AHbhEm5OSxYShjAGsoEIz/AIx8dxfmbuwu3UOx//8PDITtZDOLC5MH0Y0FWDomrL <newline>+NhGc6Ehmo21/uBPUR/6LWlxz/K7ZGzIZOKuXNBSqltLroxwUCEm2u+WR74M26x1W <newline>+b8ravHNjkOR/ez4iyz0H7V84dJzjA1BOoa+Y7mHyhD8S <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustGlobal[] = <newline>+    "sha1/wHqYaI2J+6sFZAwRfap9ZbjKzE4="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDizCCAvSgAwIBAgIDDW5iMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDYxMTI3MDAwMDAwWhcNMTgwODIxMTYxNTAw <newline>+WjBYMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjExMC8GA1UE <newline>+AxMoR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIw <newline>+DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL64FXv/1Hx9Z62DZHvIQlMt3/aE <newline>+CCBh1gFZapxEEa/vdv2Vfs5hMLt6g18CvQFmyu4VjW+hMJy9oYWelDrzVogAMc/Y <newline>+7mqWAtntA4z7dW3n6rhVFgUWmvTgXrGIwGSFXBVNiMe3uuB16a0FPZ3HiUjguyjI <newline>+A+Ewk2ReUsBZcCI1V4iK8ZUKg9e8MXMBNO3vRnHgawKoNXJrl5tm4MsceV/YGgRo <newline>+HkcC5p1g4jaXAd/ONZLfvmfHbXdZO4+d1pAVlLxCNBDBOfmxJz5+1op1xbKvltOi <newline>+3pvkmL594emBrbZv/NcO2uA0sA0ad+fjCJjvWPqchLc2r8LfrNL0EAZwcTUCAwEA <newline>+AaOB6DCB5TAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFCzVUEGXFYvwjzZhW0r7 <newline>+a9mZyTOSMB8GA1UdIwQYMBaAFEjmaPkr0rKV10fYIyAQTzOYkJ/UMA8GA1UdEwEB <newline>+/wQFMAMBAf8wOgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2NybC5nZW90cnVzdC5j <newline>+b20vY3Jscy9zZWN1cmVjYS5jcmwwRgYDVR0gBD8wPTA7BgRVHSAAMDMwMQYIKwYB <newline>+BQUHAgEWJWh0dHA6Ly93d3cuZ2VvdHJ1c3QuY29tL3Jlc291cmNlcy9jcHMwDQYJ <newline>+KoZIhvcNAQEFBQADgYEAr/MO1nKrx6mXyiprhDneeanwgeUIZ6vXLyACAXEMBCLJ <newline>+HoiVA8lJOq9nCEmw1Qj1ID2AkaDFh6P7yaMXkfmoL67pD9+Wcg91F4BdeAFNnx9t <newline>+e9j1QjgjGpmT9IO+OzV05zcTNXqstLaQgmwnpODsnjW9v+UpoUefWzL86Zl9Kzk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustPrimary[] = <newline>+    "sha1/sBmJ5+/7Sq/LFI9YRjl2IkFQ4bo="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIFijCCBHKgAwIBAgIKYSCKYgAAAAAACDANBgkqhkiG9w0BAQUFADBSMQswCQYD <newline>+VQQGEwJVUzEaMBgGA1UEChMRSW50ZWwgQ29ycG9yYXRpb24xJzAlBgNVBAMTHklu <newline>+dGVsIEV4dGVybmFsIEJhc2ljIFBvbGljeSBDQTAeFw0wOTA1MTUxOTI3MjZaFw0x <newline>+NTA1MTUxOTM3MjZaMFYxCzAJBgNVBAYTAlVTMRowGAYDVQQKExFJbnRlbCBDb3Jw <newline>+b3JhdGlvbjErMCkGA1UEAxMiSW50ZWwgRXh0ZXJuYWwgQmFzaWMgSXNzdWluZyBD <newline>+QSAzQjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQEM1Wn9TU9vc9C <newline>++/Tc7KB+eiYElmrcEWE32WUdHvWG+IcQHVQsikTmMyKKojNLw2B5s6Iekc8ivDo/ <newline>+wCfjZzX9JyftMnc+AArc0la87Olybzm8K9jXEfTBvTnUSFSiI9ZYefITdiUgqlAF <newline>+uljFZEHYKYtLuhrRacpmQfP4mV63NKdc2bT804HRf6YptZFa4k6YN94zlrGNrBuQ <newline>+Q74WFzz/jLBusbUpEkro6Mu/ZYFOFWQrV9lBhF9Ruk8yN+3N6n9fUo/qBigiF2kE <newline>+n9xVh1ykl7SCGL2jBUkXx4qgV27a6Si8lRRdgrHGtN/HWnSWlLXTH5l575H4Lq++ <newline>+77OFv38CAwEAAaOCAlwwggJYMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFA7G <newline>+KvdZsggQkCVvw939imYxMCvFMAsGA1UdDwQEAwIBhjASBgkrBgEEAYI3FQEEBQID <newline>+AQABMCMGCSsGAQQBgjcVAgQWBBQ5oFY2ekKQ/5Ktim+VdMeSWb4QWTAZBgkrBgEE <newline>+AYI3FAIEDB4KAFMAdQBiAEMAQTAfBgNVHSMEGDAWgBQaxgxKxEdvqNutK/D0Vgaj <newline>+7TdUDDCBvQYDVR0fBIG1MIGyMIGvoIGsoIGphk5odHRwOi8vd3d3LmludGVsLmNv <newline>+bS9yZXBvc2l0b3J5L0NSTC9JbnRlbCUyMEV4dGVybmFsJTIwQmFzaWMlMjBQb2xp <newline>+Y3klMjBDQS5jcmyGV2h0dHA6Ly9jZXJ0aWZpY2F0ZXMuaW50ZWwuY29tL3JlcG9z <newline>+aXRvcnkvQ1JML0ludGVsJTIwRXh0ZXJuYWwlMjBCYXNpYyUyMFBvbGljeSUyMENB <newline>+LmNybDCB4wYIKwYBBQUHAQEEgdYwgdMwYwYIKwYBBQUHMAKGV2h0dHA6Ly93d3cu <newline>+aW50ZWwuY29tL3JlcG9zaXRvcnkvY2VydGlmaWNhdGVzL0ludGVsJTIwRXh0ZXJu <newline>+YWwlMjBCYXNpYyUyMFBvbGljeSUyMENBLmNydDBsBggrBgEFBQcwAoZgaHR0cDov <newline>+L2NlcnRpZmljYXRlcy5pbnRlbC5jb20vcmVwb3NpdG9yeS9jZXJ0aWZpY2F0ZXMv <newline>+SW50ZWwlMjBFeHRlcm5hbCUyMEJhc2ljJTIwUG9saWN5JTIwQ0EuY3J0MA0GCSqG <newline>+SIb3DQEBBQUAA4IBAQCxtQEHchVQhXyjEqtMVUMe6gkmPsIczHxSeqNbo9dsD+6x <newline>+bT65JT+oYgpIAtfEsYXeUJu1cChqpb22U5bMAz7eaQcW5bzefufWvA6lg2048B8o <newline>+czBj/q+5P5NpYrUO8jOmN4jTjfJq3ElZ7yFWpy7rB3Vm/aN6ATYqWfMbS/xfh+JC <newline>+xmH3droUmMJI0/aZJHsLtjbjFnNsHDNrJZX1vxlM78Lb1hjskTENPmhbVbfTj5i/ <newline>+ZGnhv4tmI8QZPCNtcegXJrfhRl2D9bWpdTOPrWiLDUqzy1Z6KL7TcOS/PCl8RHCJ <newline>+XkPau/thTQCpIoDa2+c+3XA++gRTfAQ4svTO260N <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Intel[] = <newline>+    "sha1/DsYq91myCBCQJW/D3f2KZjEwK8U="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDWzCCAsSgAwIBAgIDCaxIMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDgwODE1MTY0NTE1WhcNMTMwMjE0MTc0NTE1 <newline>+WjBtMQswCQYDVQQGEwJERTEcMBoGA1UEChMTVEMgVHJ1c3RDZW50ZXIgR21iSDEe <newline>+MBwGA1UECxMVVEMgVHJ1c3RDZW50ZXIgU1NMIENBMSAwHgYDVQQDExdUQyBUcnVz <newline>+dENlbnRlciBTU0wgQ0EgSTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB <newline>+AOkCoJoNbJw33wSxNWbDdmIfDIedR8Zmr/mjOhMkXdxRYb6qrl/WfMEuo4PBcysJ <newline>+kF81LaDMkBH0zc7Hs1eYixrMVObkCmEUjxYylgOk4ExGwhmIWDJUWGslNBUIIhFf <newline>++ucDWuGZNfILQrwCWRHYBG0n/6lZPylCqopCMYhBK5sTI/PyuHEAzDL7+buep/Na <newline>+zn+oy/a6x1nobsuL9X2oFaWZb7Z6ty5kZ/U56JHa7vnsLrg4ePwiQb8jtyUdz0fD <newline>+uMHkNzK0gWxr4hm0v92otYFuOTZqNLEJneeiILxUCCMop2chr1obpq2zGVNxJ/rP <newline>+StWmcu75KBGMpT+mzFgIyf0CAwEAAaOBozCBoDAOBgNVHQ8BAf8EBAMCAQYwHQYD <newline>+VR0OBBYEFOe/bKlImXeG4tD/MKCQHQtk0IU6MB8GA1UdIwQYMBaAFEjmaPkr0rKV <newline>+10fYIyAQTzOYkJ/UMBIGA1UdEwEB/wQIMAYBAf8CAQAwOgYDVR0fBDMwMTAvoC2g <newline>+K4YpaHR0cDovL2NybC5nZW90cnVzdC5jb20vY3Jscy9zZWN1cmVjYS5jcmwwDQYJ <newline>+KoZIhvcNAQEFBQADgYEAVKyJLbJha83PggEit8+dzh50wIsKXpTV2K6K4HnUI1kh <newline>+xqocLVfQORluC+LS7L78D2EKTWLZ8WNujiP6DbbIPSTsMasuiBMQMBUlJMUqsp/M <newline>+XmQJgIGAbxsr19MY6mmB30oWuo4cjHnkMzSCfhcON6Rxvbjijk2qCWXkk2T2HAk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_TCTrustCenter[] = <newline>+    "sha1/gzuEEAB/bkqdQS3EIjk2by7lW+k="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDJDCCAo2gAwIBAgIDBfw3MA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT <newline>+MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0 <newline>+aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDYwNzIxMTUwNTA2WhcNMTEwNzEyMTUwNTA2 <newline>+WjA5MQswCQYDVQQGEwJVSzEXMBUGA1UEChMOVm9kYWZvbmUgR3JvdXAxETAPBgNV <newline>+BAMTCFZvZGFmb25lMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAs61K <newline>+wbMcB+GGGbjyo1dYEiVNGRYKRsDXfeOgeq03Vebf7D5Xq6a0Qs4Rvp6CuRTSNDPi <newline>+M+0vuQRW5sib9UD8UB2x4znc6FriRV4FUpAyKNVqQ9NB0MOBpQekVlX9DzcXkn+p <newline>+zWRi6tt3CtPsaDyHo06oAwX5qu3tW3pjtf0vnQqJWwwA6Mp4YJ/acHD/vVtt67hz <newline>+a0Upz0O2DEJetb3OaqI5yaNZ91y6i7sK0KTvBQxZHeJs+y5UjluHv3ptMUZvmsf0 <newline>+SiKysXnkg5mtsZSFlfM+U7dADq1zNb764NV5sSlmbDLEkvohQyg1p9gh2HX9Jk4A <newline>+e9nnF4hjw2U33HLBXwIDAQABo4GgMIGdMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4E <newline>+FgQUR+YiAaq+68BPLD6l0UcvzlkcgvswHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gj <newline>+IBBPM5iQn9QwDwYDVR0TAQH/BAUwAwEB/zA6BgNVHR8EMzAxMC+gLaArhilodHRw <newline>+Oi8vY3JsLmdlb3RydXN0LmNvbS9jcmxzL3NlY3VyZWNhLmNybDANBgkqhkiG9w0B <newline>+AQUFAAOBgQCs37zuSY/KkPigCvJevu+ewWy9GP2bFZi5EaxKuHGF+tYFZUNkyc06 <newline>+ACYMM3ADPM6dVUYeXIDZnPfV8BJFCpdoAHkSNlg341AVjabCOWtzOYolBn0ua8Wi <newline>+BM471XfzzXD7yMliek9J4fUn2vQU7MYgEkSAA53ZkMScGDkA/c1wMQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Vodafone[] = <newline>+    "sha1/DX/hXFUUNmiZ/EDWIgjvIuvRFRw="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIID1TCCAr2gAwIBAgIDAjbRMA0GCSqGSIb3DQEBBQUAMEIxCzAJBgNVBAYTAlVT <newline>+MRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMRswGQYDVQQDExJHZW9UcnVzdCBHbG9i <newline>+YWwgQ0EwHhcNMTAwMjE5MjI0NTA1WhcNMjAwMjE4MjI0NTA1WjA8MQswCQYDVQQG <newline>+EwJVUzEXMBUGA1UEChMOR2VvVHJ1c3QsIEluYy4xFDASBgNVBAMTC1JhcGlkU1NM <newline>+IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx3H4Vsce2cy1rfa0 <newline>+l6P7oeYLUF9QqjraD/w9KSRDxhApwfxVQHLuverfn7ZB9EhLyG7+T1cSi1v6kt1e <newline>+6K3z8Buxe037z/3R5fjj3Of1c3/fAUnPjFbBvTfjW761T4uL8NpPx+PdVUdp3/Jb <newline>+ewdPPeWsIcHIHXro5/YPoar1b96oZU8QiZwD84l6pV4BcjPtqelaHnnzh8jfyMX8 <newline>+N8iamte4dsywPuf95lTq319SQXhZV63xEtZ/vNWfcNMFbPqjfWdY3SZiHTGSDHl5 <newline>+HI7PynvBZq+odEj7joLCniyZXHstXZu8W1eefDp6E63yoxhbK1kPzVw662gzxigd <newline>+gtFQiwIDAQABo4HZMIHWMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUa2k9ahhC <newline>+St2PAmU5/TUkhniRFjAwHwYDVR0jBBgwFoAUwHqYaI2J+6sFZAwRfap9ZbjKzE4w <newline>+EgYDVR0TAQH/BAgwBgEB/wIBADA6BgNVHR8EMzAxMC+gLaArhilodHRwOi8vY3Js <newline>+Lmdlb3RydXN0LmNvbS9jcmxzL2d0Z2xvYmFsLmNybDA0BggrBgEFBQcBAQQoMCYw <newline>+JAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmdlb3RydXN0LmNvbTANBgkqhkiG9w0B <newline>+AQUFAAOCAQEAq7y8Cl0YlOPBscOoTFXWvrSY8e48HM3P8yQkXJYDJ1j8Nq6iL4/x <newline>+/torAsMzvcjdSCIrYA+lAxD9d/jQ7ZZnT/3qRyBwVNypDFV+4ZYlitm12ldKvo2O <newline>+SUNjpWxOJ4cl61tt/qJ/OCjgNqutOaWlYsS3XFgsql0BYKZiZ6PAx2Ij9OdsRu61 <newline>+04BqIhPSLT90T+qvjF+0OJzbrs6vhB6m9jRRWXnT43XcvNfzc9+S7NIgWW+c+5X4 <newline>+knYYCnwPLKbK3opie9jzzl9ovY8+wXS7FXI6FoOpC+ZNmZzYV+yoAVHHb1c0XqtK <newline>+LEL2TxyJeN4mTvVvk0wVaydWTQBUbHq3tw== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_RapidSSL[] = <newline>+    "sha1/o5OZxATDsgmwgcIfIWIneMJ0jkw="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDxTCCAq2gAwIBAgIQAqxcJmoLQJuPC3nyrkYldzANBgkqhkiG9w0BAQUFADBs <newline>+MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3 <newline>+d3cuZGlnaWNlcnQuY29tMSswKQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5j <newline>+ZSBFViBSb290IENBMB4XDTA2MTExMDAwMDAwMFoXDTMxMTExMDAwMDAwMFowbDEL <newline>+MAkGA1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3 <newline>+LmRpZ2ljZXJ0LmNvbTErMCkGA1UEAxMiRGlnaUNlcnQgSGlnaCBBc3N1cmFuY2Ug <newline>+RVYgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMbM5XPm <newline>++9S75S0tMqbf5YE/yc0lSbZxKsPVlDRnogocsF9ppkCxxLeyj9CYpKlBWTrT3JTW <newline>+PNt0OKRKzE0lgvdKpVMSOO7zSW1xkX5jtqumX8OkhPhPYlG++MXs2ziS4wblCJEM <newline>+xChBVfvLWokVfnHoNb9Ncgk9vjo4UFt3MRuNs8ckRZqnrG0AFFoEt7oT61EKmEFB <newline>+Ik5lYYeBQVCmeVyJ3hlKV9Uu5l0cUyx+mM0aBhakaHPQNAQTXKFx01p8VdteZOE3 <newline>+hzBWBOURtCmAEvF5OYiiAhF8J2a3iLd48soKqDirCmTCv2ZdlYTBoSUeh10aUAsg <newline>+EsxBu24LUTi4S8sCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQF <newline>+MAMBAf8wHQYDVR0OBBYEFLE+w2kD+L9HAdSYJhoIAu9jZCvDMB8GA1UdIwQYMBaA <newline>+FLE+w2kD+L9HAdSYJhoIAu9jZCvDMA0GCSqGSIb3DQEBBQUAA4IBAQAcGgaX3Nec <newline>+nzyIZgYIVyHbIUf4KmeqvxgydkAQV8GK83rZEWWONfqe/EW1ntlMMUu4kehDLI6z <newline>+eM7b41N5cdblIZQB2lWHmiRk9opmzN6cN82oNLFpmyPInngiK3BD41VHMWEZ71jF <newline>+hS9OMPagMRYjyOfiZRYzy78aG6A9+MpeizGLYAiJLQwGXFK3xPkKmNEVX58Svnw2 <newline>+Yzi9RKR/5CYrCsSXaQ3pjOLAEFe4yHYSkVXySGnYvCoCWw9E1CAx2/S6cCZdkGCe <newline>+vEsXCS+0yx5DaMkHJ8HSXPfqIbloEpw8nL+e/IBcm2PN7EeqJSdnoDfzAIJ9VNep <newline>++OkuE6N36B9K <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_DigiCertEVRoot[] = <newline>+    "sha1/gzF+YoVCU9bXeDGQ7JGQVumRueM="; <newline>+ <newline>+// Not public <newline>+static const char kSPKIHash_Tor1[] = <newline>+    "sha1/juNxSTv9UANmpC9kF5GKpmWNx3Y="; <newline>+static const char kSPKIHash_Tor2[] = <newline>+    "sha1/lia43lPolzSPVIq34Dw57uYcLD8="; <newline>+static const char kSPKIHash_Tor3[] = <newline>+    "sha1/rzEyQIKOh77j87n5bjWUNguXF8Y="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICPTCCAaYCEQDNun9W8N/kvFT+IqyzcqpVMA0GCSqGSIb3DQEBAgUAMF8xCzAJ <newline>+BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xh <newline>+c3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05 <newline>+NjAxMjkwMDAwMDBaFw0yODA4MDEyMzU5NTlaMF8xCzAJBgNVBAYTAlVTMRcwFQYD <newline>+VQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xhc3MgMSBQdWJsaWMgUHJp <newline>+bWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOB <newline>+jQAwgYkCgYEA5Rm/baNWYS2ZSHH2Z965jeu3noaACpEO+jglr0aIguVzqKCbJF0N <newline>+H8xlbgyw0FaEGIeaBpsQoXPftFg5a27B9hXVqKg/qhIGjTGsf7A01480Z4gJzRQR <newline>+4k5FVmkfeAKA2txHkSm7NsljXMXg1y2He6G3MrB7MLoqLzGq7qNn2tsCAwEAATAN <newline>+BgkqhkiG9w0BAQIFAAOBgQBMP7iLxmjf7kMzDl3ppssHhE16M/+SG/Q2rdiVIjZo <newline>+EWx8QszznC7EBz8UsA9P/5CSdvnivErpj82ggAr3xSnxgiJduLHdgSOjeyUVRjB5 <newline>+FvjqBUuUfx3CHMjjt/QQQDwTw18fU+hI5Ia0e6E1sHslurjTjqs/OJ0ANACY89Fx <newline>+lA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass1[] = <newline>+    "sha1/I0PRSKJViZuUfUYaeX7ATP7RcLc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDhDCCAwqgAwIBAgIQL4D+I4wOIg9IZxIokYesszAKBggqhkjOPQQDAzCByjEL <newline>+MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW <newline>+ZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2ln <newline>+biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJp <newline>+U2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9y <newline>+aXR5IC0gRzQwHhcNMDcxMTA1MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCByjELMAkG <newline>+A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJp <newline>+U2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2lnbiwg <newline>+SW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2ln <newline>+biBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5 <newline>+IC0gRzQwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASnVnp8Utpkmw4tXNherJI9/gHm <newline>+GUo9FANL+mAnINmDiWn6VMaaGF5VKmTeBvaNSjutEDxlPZCIBIngMGGzrl0Bp3ve <newline>+fLK+ymVhAIau2o970ImtTR1ZmkGxvEeA3J5iw/mjgbIwga8wDwYDVR0TAQH/BAUw <newline>+AwEB/zAOBgNVHQ8BAf8EBAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJ <newline>+aW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYj <newline>+aHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFLMW <newline>+kf3upm7ktS5Jj4d4gYDs5bG1MAoGCCqGSM49BAMDA2gAMGUCMGYhDBgmYFo4e1ZC <newline>+4Kf8NoRRkSAsdk1DPcQdhCPQrNZ8NQbOzWm9kA3bbEhCHQ6qQgIxAJw9SDkjOVga <newline>+FRJZap7v1VmyHVIsmXHNxynfGyphe3HR3vPA5Q06Sqotp9iGKt0uEA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G4[] = <newline>+    "sha1/7WYxNdMb1OymFMQp4xkGn5TBJlA="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGjCCAwICEQDsoKeLbnVqAc/EfMwvlF7XMA0GCSqGSIb3DQEBBQUAMIHKMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl <newline>+cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu <newline>+LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT <newline>+aWduIENsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp <newline>+dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD <newline>+VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT <newline>+aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ <newline>+bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu <newline>+IENsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK3LpRFpxlmr8Y+1 <newline>+GQ9Wzsy1HyDkniYlS+BzZYlZ3tCD5PUPtbut8XzoIfzk6AzufEUiGXaStBO3IFsJ <newline>++mGuqPKljYXCKtbeZjbSmwL0qJJgfJxptI8kHtCGUvYynEFYHiK9zUVilQhu0Gbd <newline>+U6LM8BDcVHOLBKFGMzNcF0C5nk3T875Vg+ixiY5afJqWIpA7iCXy0lOIAgwLePLm <newline>+NxdLMEYH5IBtptiWLugs+BGzOA1mppvqySNb247i8xOOGlktqgLw7KSHZtzBP/XY <newline>+ufTsgsbSPZUd5cBPhMnZo0QoBmrXRazwa2rvTl/4EYIeOGM0ZlDUPpNz+jDDZq3/ <newline>+ky2X7wMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAj/ola09b5KROJ1WrIhVZPMq1 <newline>+CtRK26vdoV9TxaBXOcLORyu+OshWv8LZJxA6sQU8wHcxuzrTBXttmhwwjIDLk5Mq <newline>+g6sFUYICABFna/OIYUdfA5PVWw3g8dShMjWFsjrbsIKr0csKvE+MW8VLADsfKoKm <newline>+fjaF3H48ZwC15DtS4KjrXRX5xm3wrR0OhbepmnMUWluPQSjA1egtTaRezarZ7c7c <newline>+2NU8Qh0XwRJdRTjDOPP8hS6DRkiy1yBfkjaP53kPmF6Z6PDQpLv1U70qzlmwr25/ <newline>+bLvSHgCwIe34QWKCudiyxLtGUPMxxY8BqHTr9Xgn2uf3ZkPznoM+IKrDNWCRzg== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass4_G3[] = <newline>+    "sha1/PANDaGiVHPNpKri0Jtq6j+ki5b0="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGjCCAwICEQCLW3VWhFSFCwDPrzhIzrGkMA0GCSqGSIb3DQEBBQUAMIHKMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl <newline>+cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu <newline>+LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT <newline>+aWduIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp <newline>+dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD <newline>+VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT <newline>+aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ <newline>+bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu <newline>+IENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN2E1Lm0+afY8wR4 <newline>+nN493GwTFtl63SRRZsDHJlkNrAYIwpTRMx/wgzUfbhvI3qpuFU5UJ+/EbRrsC+MO <newline>+8ESlV8dAWB6jRx9x7GD2bZTIGDnt/kIYVt/kTEkQeE4BdjVjEjbdZrwBBDajVWjV <newline>+ojYJrKshJlQGrT/KFOCsyq0GHZXi+J3x4GD/wn91K0zM2v6HmSHquv4+VNfSWXjb <newline>+PG7PoBMAGrgnoeS+Z5bKoMWznN3JdZ7rMJpfo83ZrngZPyPpXNspva1VyBtUjGP2 <newline>+6KbqxzcSXKMpHgLZ2x87tNcPVkeBFQRKr4Mn0cVYiMHd9qqnoxjaaKptEVHhv2Vr <newline>+n5Z20T0CAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAq2aN17O6x5q25lXQBfGfMY1a <newline>+qtmqRiYPce2lrVNWYgFHKkTp/j90CxObufRNG7LRX7K20ohcs5/Ny9Sn2WCVhDr4 <newline>+wTcdYcrnsMXlkdpUpqwxga6X3s0IrLjAl4B/bnKk52kTlWUfxJM8/XmPBNQ+T+r3 <newline>+ns7NZ3xPZQL/kYVUc8f/NveGLezQXk//EZ9yBta4GvFMDSZl4kSAHsef493oCtrs <newline>+pSCAaWihT37ha88HQfqDjrw43bAuEbFrskLMmrz5SCJ5ShkPshw+IHTZasO+8ih4 <newline>+E1Z5T21Q6huwtVexN2ZYI/PcD98Kh8TvhgXVOBRgmaNL3gaWcSzy27YfpO8/7g== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass1_G3[] = <newline>+    "sha1/VRmyeKyygdftp6vBg5nDu2kEJLU="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGTCCAwECEGFwy0mMX5hFKeewptlQW3owDQYJKoZIhvcNAQEFBQAwgcoxCzAJ <newline>+BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVy <newline>+aVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24s <newline>+IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNp <newline>+Z24gQ2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0 <newline>+eSAtIEczMB4XDTk5MTAwMTAwMDAwMFoXDTM2MDcxNjIzNTk1OVowgcoxCzAJBgNV <newline>+BAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNp <newline>+Z24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIElu <newline>+Yy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24g <newline>+Q2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAt <newline>+IEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArwoNwtUs22e5LeWU <newline>+J92lvuCwTY+zYVY81nzD9M0+hsuiiOLh2KRpxbXiv8GmR1BeRjmL1Za6tW8UvxDO <newline>+JxOeBUebMXoT2B/Z0wI3i60sR/COgQanDTAM6/c8DyAd3HJG7qUCyFvDyVZpTMUY <newline>+wZF7C9UTAJu878NIPkZgIIUq1ZC2zYugzDLdt/1AVbJQHFauzI13TccgTacxdu9o <newline>+koqQHgiBVrKtaaNS0MscxCM9H5n+TOgWY47GCI72MfbS+uV23bUckqNJzc0BzWjN <newline>+qWm6o+sdDZykIKbBoMXRRkwXbdKsZj+WjOCE1Db/IlnF+RFgqF8EffIa9iVCYQ/E <newline>+Srg+iQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQA0JhU8wI1NQ0kdvekhktdmnLfe <newline>+xbjQ5F1fdiLAJvmEOjr5jLX77GDx6M4EsMjdpwOPMPOY36TmpDHf0xwLRtxyID+u <newline>+7gU8pDM/CzmscHhzS5kr3zDCVLCoO1Wh/hYozUK9dG6A2ydEp85EXdQbkJgNHkKU <newline>+sQAsBNB0owIFImNjzYO1+8FtYmtpdf1dcEG59b98377BMnMiIYtYgXsVkXq642RI <newline>+sH/7NiXaldDxJBQX3RiAa0YjOVT1jmIJBB2UkKab5iXiQkWquJCtvgiPqQtCGJTP <newline>+cjnhsUPgKM+351psE2tJs//jGHyJizNdrDPXp/naOlXJWBD5qu9ats9LS98q <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass2_G3[] = <newline>+    "sha1/Wr7Fddyu87COJxlD/H8lDD32YeM="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDAjCCAmsCEH3Z/gfPqB63EHln+6eJNMYwDQYJKoZIhvcNAQEFBQAwgcExCzAJ <newline>+BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xh <newline>+c3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcy <newline>+MTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3Jp <newline>+emVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMB4X <newline>+DTk4MDUxODAwMDAwMFoXDTI4MDgwMTIzNTk1OVowgcExCzAJBgNVBAYTAlVTMRcw <newline>+FQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMg <newline>+UHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEo <newline>+YykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5 <newline>+MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMIGfMA0GCSqGSIb3DQEB <newline>+AQUAA4GNADCBiQKBgQDMXtERXVxp0KvTuWpMmR9ZmDCOFoUgRm1HP9SFIIThbbP4 <newline>+pO0M8RcPO/mn+SXXwc+EY/J8Y8+iR/LGWzOOZEAEaMGAuWQcRXfH2G71lSk8UOg0 <newline>+13gfqLptQ5GVj0VXXn7F+8qkBOvqlzdUMG+7AUcyM83cV5tkaWH4mx0ciU9cZwID <newline>+AQABMA0GCSqGSIb3DQEBBQUAA4GBAFFNzb5cy5gZnBWyATl4Lk0PZ3BwmcYQWpSk <newline>+U01UbSuvDV1Ai2TT1+7eVmGSX6bEHRBhNtMsJzzoKQm5EWR0zLVznxxIqbxhAe7i <newline>+F6YM40AIOw7n60RzKprxaZLvcRTDOaxxp5EJb+RxBrO6WVcmeQD2+A2iMzAo1KpY <newline>+oJ2daZH9 <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G2[] = <newline>+    "sha1/GiG0lStik84Ys2XsnA6TTLOB5tQ="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDAzCCAmwCEQC5L2DMiJ+hekYJuFtwbIqvMA0GCSqGSIb3DQEBBQUAMIHBMQsw <newline>+CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0Ns <newline>+YXNzIDIgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBH <newline>+MjE6MDgGA1UECxMxKGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9y <newline>+aXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazAe <newline>+Fw05ODA1MTgwMDAwMDBaFw0yODA4MDEyMzU5NTlaMIHBMQswCQYDVQQGEwJVUzEX <newline>+MBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDIgUHVibGlj <newline>+IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMx <newline>+KGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25s <newline>+eTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazCBnzANBgkqhkiG9w0B <newline>+AQEFAAOBjQAwgYkCgYEAp4gBIXQs5xoD8JjhlzwPIQjxnNuX6Zr8wgQGE75fUsjM <newline>+HiwSViy4AWkszJkfrbCWrnkE8hM5wXuYuggs6MKEEyyqaekJ9MepAqRCwiNPStjw <newline>+DqL7MWzJ5m+ZJwf15vRMeJ5t60aG+rmGyVTyssSv1EYcWskVMP8NbPUtDm3Of3cC <newline>+AwEAATANBgkqhkiG9w0BAQUFAAOBgQByLvl/0fFx+8Se9sVeUYpAmLho+Jscg9ji <newline>+nb3/7aHmZuovCfTK1+qlK5X2JGCGTUQug6XELaDTrnhpb3LabK4I8GOSN+a7xDAX <newline>+rXfMSTWqz9iP0b63GJZHc2pUIjRkLbYWm1lbtFFZOrMLFPQS32eg9K0yZF6xRnIn <newline>+jBJ7xUS0rg== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass2_G2[] = <newline>+    "sha1/Eje6RRfurSkm/cHN/r7t8t7ZFFw="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIE0zCCA7ugAwIBAgIQGNrRniZ96LtKIVjNzGs7SjANBgkqhkiG9w0BAQUFADCB <newline>+yjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQL <newline>+ExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJp <newline>+U2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxW <newline>+ZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0 <newline>+aG9yaXR5IC0gRzUwHhcNMDYxMTA4MDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCByjEL <newline>+MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW <newline>+ZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2ln <newline>+biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJp <newline>+U2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9y <newline>+aXR5IC0gRzUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvJAgIKXo1 <newline>+nmAMqudLO07cfLw8RRy7K+D+KQL5VwijZIUVJ/XxrcgxiV0i6CqqpkKzj/i5Vbex <newline>+t0uz/o9+B1fs70PbZmIVYc9gDaTY3vjgw2IIPVQT60nKWVSFJuUrjxuf6/WhkcIz <newline>+SdhDY2pSS9KP6HBRTdGJaXvHcPaz3BJ023tdS1bTlr8Vd6Gw9KIl8q8ckmcY5fQG <newline>+BO+QueQA5N06tRn/Arr0PO7gi+s3i+z016zy9vA9r911kTMZHRxAy3QkGSGT2RT+ <newline>+rCpSx4/VBEnkjWNHiDxpg8v+R70rfk/Fla4OndTRQ8Bnc+MUCH7lP59zuDMKz10/ <newline>+NIeWiu5T6CUVAgMBAAGjgbIwga8wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8E <newline>+BAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2UvZ2lmMCEwHzAH <newline>+BgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVy <newline>+aXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFH/TZafC3ey78DAJ80M5+gKv <newline>+MzEzMA0GCSqGSIb3DQEBBQUAA4IBAQCTJEowX2LP2BqYLz3q3JktvXf2pXkiOOzE <newline>+p6B4Eq1iDkVwZMXnl2YtmAl+X6/WzChl8gGqCBpH3vn5fJJaCGkgDdk+bW48DW7Y <newline>+5gaRQBi5+MHt39tBquCWIMnNZBU4gcmU7qKEKQsTb47bDN0lAtukixlE0kF6BWlK <newline>+WE9gyn6CagsCqiUXObXbf+eEZSqVir2G3l6BFoMtEMze/aiCKm0oHw0LxOXnGiYZ <newline>+4fQRbxC1lfznQgUy286dUV4otp6F01vvpX1FQHKOtw5rDgb7MzVIcbidJ4vEZV8N <newline>+hnacRHr2lVz2XTIIM6RUthg/aFzyQkqFOFSDX9HoLPKsEdao7WNq <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignClass3_G5[] = <newline>+    "sha1/sYEIGhmkwJQf+uiVKMEkyZs0rMc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEuTCCA6GgAwIBAgIQQBrEZCGzEyEDDrvkEhrFHTANBgkqhkiG9w0BAQsFADCB <newline>+vTELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQL <newline>+ExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwOCBWZXJp <newline>+U2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MTgwNgYDVQQDEy9W <newline>+ZXJpU2lnbiBVbml2ZXJzYWwgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAe <newline>+Fw0wODA0MDIwMDAwMDBaFw0zNzEyMDEyMzU5NTlaMIG9MQswCQYDVQQGEwJVUzEX <newline>+MBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0 <newline>+IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAyMDA4IFZlcmlTaWduLCBJbmMuIC0gRm9y <newline>+IGF1dGhvcml6ZWQgdXNlIG9ubHkxODA2BgNVBAMTL1ZlcmlTaWduIFVuaXZlcnNh <newline>+bCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEF <newline>+AAOCAQ8AMIIBCgKCAQEAx2E3XrEBNNti1xWb/1hajCMj1mCOkdeQmIN65lgZOIzF <newline>+9uVkhbSicfvtvbnazU0AtMgtc6XHaXGVHzk8skQHnOgO+k1KxCHfKWGPMiJhgsWH <newline>+H26MfF8WIFFE0XBPV+rjHOPMee5Y2A7Cs0WTwCznmhcrewA3ekEzeOEz4vMQGn+H <newline>+LL729fdC4uW/h2KJXwBL38Xd5HVEMkE6HnFuacsLdUYI0crSK5XQz/u5QGtkjFdN <newline>+/BMReYTtXlT2NJ8IAfMQJQYXStrxHXpma5hgZqTZ79IugvHw7wnqRMkVauIDbjPT <newline>+rJ9VAMf2CGqUuV/c4DPxhGD5WycRtPwW8rtWaoAljQIDAQABo4GyMIGvMA8GA1Ud <newline>+EwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMG0GCCsGAQUFBwEMBGEwX6FdoFsw <newline>+WTBXMFUWCWltYWdlL2dpZjAhMB8wBwYFKw4DAhoEFI/l0xqGrI2Oa8PPgGrUSBgs <newline>+exkuMCUWI2h0dHA6Ly9sb2dvLnZlcmlzaWduLmNvbS92c2xvZ28uZ2lmMB0GA1Ud <newline>+DgQWBBS2d/ppSEefUxLVwuoHMnYH0ZcHGTANBgkqhkiG9w0BAQsFAAOCAQEASvj4 <newline>+sAPmLGd75JR3Y8xuTPl9Dg3cyLk1uXBPY/ok+myDjEedO2Pzmvl2MpWRsXe8rJq+ <newline>+seQxIcaBlVZaDrHC1LGmWazxY8u4TB1ZkErvkBYoH1quEPuBUDgMbMzxPcP1Y+Oz <newline>+4yHJJDnp/RVmRvQbEdBNc6N9Rvk97ahfYtTxP/jgdFcrGJ2BtMQo2pSXpXDrrB2+ <newline>+BxHw1dvd5Yzw1TKwg+ZX4o+/vqGqvz0dtdQ46tewXDpPaj+PwGZsY6rp2aQW9IHR <newline>+lRQOfc2VNNnSj3BzgXucfr2YYdhFh5iQxeuGMMY1v/D/w1WIg0vvBZIGcfK4mJO3 <newline>+7M2CYfE45k+XmCpajQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_VeriSignUniversal[] = <newline>+    "sha1/u8I+KQuzKHcdrT6iTb30I70GsD0="; <newline>+ <newline>+// Not public <newline>+static const char kSPKIHash_Twitter1[] = <newline>+    "sha1/Vv7zwhR9TtOIN/29MFI4cgHld40="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIDZjCCAk6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBEMQswCQYDVQQGEwJVUzEW <newline>+MBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEdMBsGA1UEAxMUR2VvVHJ1c3QgR2xvYmFs <newline>+IENBIDIwHhcNMDQwMzA0MDUwMDAwWhcNMTkwMzA0MDUwMDAwWjBEMQswCQYDVQQG <newline>+EwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEdMBsGA1UEAxMUR2VvVHJ1c3Qg <newline>+R2xvYmFsIENBIDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDvPE1A <newline>+PRDfO1MA4Wf+lGAVPoWI8YkNkMgoI5kF6CsgncbzYEbYwbLVjDHZ3CB5JIG/NTL8 <newline>+Y2nbsSpr7iFY8gjpeMtvy/wWUsiRxP89c96xPqfCfWbB9X5SJBri1WeR0IIQ13hL <newline>+TytCOb1kLUCgsBDTOEhGiKEMuzozKmKY+wCdE1l/bztyqu6mD4b5BWHqZ38MN5aL <newline>+5mkWRxHCJ1kDs6ZgwiFAVvqgx306E+PsV8ez1q6diYD3Aecs9pYrEw15LNnA5IZ7 <newline>+S4wMcoKK+xfNAGw6EzywhIdLFnopsk/bHdQL82Y3vdj2V7teJHq4PIu5+pIaGoSe <newline>+2HSPqht/XvT+RSIhAgMBAAGjYzBhMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE <newline>+FHE4NvICMVNHK266ZUapEBVYIAUJMB8GA1UdIwQYMBaAFHE4NvICMVNHK266ZUap <newline>+EBVYIAUJMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQUFAAOCAQEAA/e1K6td <newline>+EPx7srJerJsOflN4WT5CBP51o62sgU7XAotexC3IUnbHLB/8gTKY0UvGkpMzNTEv <newline>+/NgdRN3ggX+d6YvhZJFiCzkIjKx0nVnZellSlxG5FntvRdOW2TF9AjYPnDtuzywN <newline>+A0ZF66D0f0hExghAzN4bcLUprbqLOzRldRtxIR0sFAqwlpW41uryZfspuk/qkZN0 <newline>+abby/+Ea0AzRdoXLiiW9l14sbxWZJue2Kf8i7MkCx1YAzUm5s2x7UwQa4qjJqhIF <newline>+I8LO57sEAszAR6LkxCkvW0VXiVHuPOtSCP8HNR6fNWpHSlaY0VqFH4z1Ir+rzoPz <newline>+4iIprn2DQKi6bA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustGlobal2[] = <newline>+    "sha1/cTg28gIxU0crbrplRqkQFVggBQk="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIFaDCCA1CgAwIBAgIBATANBgkqhkiG9w0BAQUFADBFMQswCQYDVQQGEwJVUzEW <newline>+MBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEeMBwGA1UEAxMVR2VvVHJ1c3QgVW5pdmVy <newline>+c2FsIENBMB4XDTA0MDMwNDA1MDAwMFoXDTI5MDMwNDA1MDAwMFowRTELMAkGA1UE <newline>+BhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xHjAcBgNVBAMTFUdlb1RydXN0 <newline>+IFVuaXZlcnNhbCBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKYV <newline>+VaCjxuAfjJ0hUNfBvitbtaSeodlyWL0AG0y/YckUHUWCq8YdgNY96xCcOq9tJPi8 <newline>+cQGeBvV8Xx7BDlXKg5pZMK4ZyzBIle0iN430SppyZj6tlcDgFgDgEB8rMQ7XlFTT <newline>+QjOgNB0eRXbdT8oYN+yFFXoZCPzVx5zw8qkuEKmS5j1YPakWaDwvdSEYfyh3peFh <newline>+F7em6fgemdtzbvQKoiFs7tqqhZJmr/Z6a4LauiIINQ/PQvE1+mrufislzDoR5G2v <newline>+c7J2Ha3QsnhnGqQ5HFELZ1aD/ThdDc7d8Lsrlh/eezJS/R27tQahsiFepdaVaH/w <newline>+mZ7cRQg+59IJDTWU3YBOU5fXtQlEIGQWFwMCTFMNaN7VqnJNk22CDtucvc+081xd <newline>+VHppCZbW2xHBjXWotM85yM48vCR85mLK4b19p71XZQvk/iXttmkQ3CgaRr0BHdCX <newline>+teGYO8A3ZNY9lO4L4fUorgtWv3GLIylBjobFS1J72HGrH4oVpjuDWtdYAVHGTEHZ <newline>+f9hBZ3KiKN9gg6meyHv8U3NyWfWTehd2Ds735VzZC1U0oqpbtWpU5xPKV+yXbfRe <newline>+Bi9Fi1jUIxaS5BZuKGNZMN9QAZxjiRqf2xeUgnA3wySemkfWWspOqGmJch+RbNt+ <newline>+nhutxx9z3SxPGWX9f5NAEC7S8O08ni4oPmkmM8V7AgMBAAGjYzBhMA8GA1UdEwEB <newline>+/wQFMAMBAf8wHQYDVR0OBBYEFNq7LqqwDLiIJlF0XG0D08DYj3rWMB8GA1UdIwQY <newline>+MBaAFNq7LqqwDLiIJlF0XG0D08DYj3rWMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG <newline>+9w0BAQUFAAOCAgEAMXjmx7XfuJRAyXHEqDXsRh3ChfMoWIawC/yOsjmPRFWrZIRc <newline>+aanQmjg8+uUfNeVE44B5lGiku8SfPeE0zTBGi1QrlaXv9z+ZhP015s8xxtxqv6fX <newline>+IwjhmF7DWgh2qaavdy+3YL1ERmrvl/9zlcGO6JP7/TG37FcREUWbMPEaiDnBTzyn <newline>+ANXH/KttgCJwpQzgXQQpAvvLoJHRfNbDflDVnVi+QTjruXU8FdmbyUqDWcDaU/0z <newline>+uzYYm4UPFd3uLax2k7nZAY1IEKj79TiG8dsKxr2EoyNB3tZ3b4XUhRxQ4K5RirqN <newline>+Pnbiucon8l+f725ZDQbYKxek0nxru18UGkiPGkzns0ccjkxFKyDuSN/n3QmOGKja <newline>+QI2SJhFTYXNd673nxE0pN2HrrDktZy4W1vUAg4WhzH92xH3kt0tm7wNFYGm2DFKW <newline>+koRepqO1pD4r2czYG0eq8kTaT/kD6PAUyz/zg97QwVTjt+gKN02LIFkDMBmhLMi9 <newline>+ER/frslKxfMnZmaGrGiR/9nmUxwPi1xpZQomyB40w11Re9epnAahNt3ViZS82eQt <newline>+DF4JbAiXfKM9fJP/P6EUp8+1Xevb2xzEdt+Iub1FBZUbrvxGakyvSOPOrg/Sfuvm <newline>+bJxPgWp6ZKy7PtXny3YuxadIwVyQD8vIP/rmMuGNG2+k5o7Y+SlIis5z/iw= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustUniversal[] = <newline>+    "sha1/h+hbY1PGI6MSjLD/u/VR/lmADiI="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIFbDCCA1SgAwIBAgIBATANBgkqhkiG9w0BAQUFADBHMQswCQYDVQQGEwJVUzEW <newline>+MBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXR2VvVHJ1c3QgVW5pdmVy <newline>+c2FsIENBIDIwHhcNMDQwMzA0MDUwMDAwWhcNMjkwMzA0MDUwMDAwWjBHMQswCQYD <newline>+VQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXR2VvVHJ1 <newline>+c3QgVW5pdmVyc2FsIENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC <newline>+AQCzVFLByT7y2dyxUxpZKeexw0Uo5dfR7cXFS6GqdHtXr0om/Nj1XqduGdt0DE81 <newline>+WzILAePb63p3NeqqWuDW6KFXlPCQo3RWlEQwAx5cTiuFJnSCegx2oG9NzkEtoBUG <newline>+FF+3Qs17j1hhNNwqCPkuwwGmIkQcTAeC5lvO0Ep8BNMZcyfwqph/Lq9O64ceJHdq <newline>+XbboW0W63MOhBW9Wjo8QJqVJwy7XQYci4E+GymC16qFjwAGXEHm9ADwSbSsVsaxL <newline>+se4YuU6W3Nx2/zu+z18DwPw76L5GG//aQMJS9/7jOvdqdzXQ2o3rXhhqMcceujwb <newline>+KNZrVMaqW9eiLBsZzKIC9ptZvTdrhrVtgrrY6slWvKk2WP0+GfPtDCapkzj4T8Fd <newline>+IgbQl+rhrcZV4IErKIM6+vR7IVEAvlI4zs1meaj0gVbi0IMJR1FbUGrP20gaXT73 <newline>+y/Zl92zxlfgCOzJWgjl6W70viRu/obTo/3+NjN8D8WBOWBFM66M/ECuDmgFz2ZRt <newline>+hAAnZqzwcEAJQpKtT5MNYQlRJNiS1QuUYbKHsu3/mjX/hVTK7URDrBs8FmtISgoc <newline>+QIgfksILAAX/8sgCSqSqqcyZlpwvWOB94b67B9xfBHJcMTTD7F8t4D1kkCLm0ey4 <newline>+Lt1ZrtmhN79UNdxzMk+MBB4zsslG8dhcyFVQyWi9qLo2CQIDAQABo2MwYTAPBgNV <newline>+HRMBAf8EBTADAQH/MB0GA1UdDgQWBBR281Xh+qQ2+/CfXGJx7Tz0RzgQKzAfBgNV <newline>+HSMEGDAWgBR281Xh+qQ2+/CfXGJx7Tz0RzgQKzAOBgNVHQ8BAf8EBAMCAYYwDQYJ <newline>+KoZIhvcNAQEFBQADggIBAGbBxiPz2eAubl/oz66wsCVNK/g7WJtAJDday6sWSf+z <newline>+dXkzoS9tcBc0kf5nfo/sm+VegqlVHy/c1FEHEv6sFj4sNcZj/NwQ6w2jqtB8zNHQ <newline>+L1EuxBRa3ugZ4T7GzKQp5y6EqgYweHZUcyiYWTjgAA1i00J9IZ+uPTqM1fp3DRgr <newline>+Fg5fNuH8KrUwJM/gYwx7WBr+mbpCErGR9Hxo4sjoryzqyX6uuyo9DRXcNJW2GHSo <newline>+ag/HtPQTxORb7QrSpJdMKu0vbBKJPfEncKpqA1Ihn0CoZ1Dy81of398j9tx4TuaY <newline>+T1U6U+Pv8vSfx3zYWK8pIpe44L2RLrB27FcRz+8pRPPphXpgY+RdM4kX2TGq2tbz <newline>+GDVyz4crL2MjhF2EjD9XoIj8mZEoJmmZ1I+XRL6O1UixpCgp8RW04eWe3fiPpm8m <newline>+1wk8OhwRDqZsN/etRIcsKMfYdIKz0G9KV7s1KSegi+ghp4dkNl3M2Basx7InQJJV <newline>+OCiNUW7dFGdTbHFcJoRNdVq2fmBWqU2t+5sel/MN2dKXVHfaPRK34B7vCAas+YWH <newline>+6aLcr34YEoP9VhdBLtUpgn2Z9DH2canPLAEnpQW5qrJITirvn5NSUZU8UnOOVkwX <newline>+QMAJKOSLakhT2+zNVVXxxvjpoixMptEmX36vWkzaH6byHCx+rgIW0lbQL1dTR+iS <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustUniversal2[] = <newline>+    "sha1/Xk9ThoXdT57KX9wNRW99UbHcm3s="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICrjCCAjWgAwIBAgIQPLL0SAoA4v7rJDteYD7DazAKBggqhkjOPQQDAzCBmDEL <newline>+MAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsTMChj <newline>+KSAyMDA3IEdlb1RydXN0IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTE2 <newline>+MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0 <newline>+eSAtIEcyMB4XDTA3MTEwNTAwMDAwMFoXDTM4MDExODIzNTk1OVowgZgxCzAJBgNV <newline>+BAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykgMjAw <newline>+NyBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0BgNV <newline>+BAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBH <newline>+MjB2MBAGByqGSM49AgEGBSuBBAAiA2IABBWx6P0DFUPlrOuHNxFi79KDNlJ9RVcL <newline>+So17VDs6bl8VAsBQps8lL33KSLjHUGMcKiEIfJo22Av+0SbFWDEwKCXzXV2juLal <newline>+tJLtbCyf691DiaI8S0iRHVDsJt/WYC69IaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAO <newline>+BgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFBVfNVdRVfslsq0DafwBo/q+EVXVMAoG <newline>+CCqGSM49BAMDA2cAMGQCMGSWWaboCd6LuvpaiIjwH5HTRqjySkwCY/tsXzjbLkGT <newline>+qQ7mndwxHLKgpxgceeHHNgIwOlavmnRs9vuD4DPTCF+hnMJbn0bWtsuRBmOiBucz <newline>+rD6ogRLQy7rQkgu2npaqBA+K <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustPrimary_G2[] = <newline>+    "sha1/vb6nG6txV/nkddlU0rcngBqCJoI="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIID/jCCAuagAwIBAgIQFaxulBmyeUtB9iepwxgPHzANBgkqhkiG9w0BAQsFADCB <newline>+mDELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsT <newline>+MChjKSAyMDA4IEdlb1RydXN0IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25s <newline>+eTE2MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhv <newline>+cml0eSAtIEczMB4XDTA4MDQwMjAwMDAwMFoXDTM3MTIwMTIzNTk1OVowgZgxCzAJ <newline>+BgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykg <newline>+MjAwOCBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0 <newline>+BgNVBAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg <newline>+LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANziXmJYHTNXOTIz <newline>++uvLh4yn1ErdBojqZI4xmKU4kB6Yzy5jK/BGvESyiaHAKAxJcCGVn2TAppMSAmUm <newline>+hsalifD614SgcK9PGpc/BkTVyetyEH3kMSj7HGHmKAdEc5IiaacDiGydY8hS2pgn <newline>+5whMcD60yRLBxWeDXTPzAxHsatBT4tG6NmCUgLthY2xbF37fQJQeqw3CIShwiP/W <newline>+JmxsYAQlTlV+fe+/lEjetx3dcI0FX4ilm/LC7urRQEFtYjgdVgbFA0dRIBn8exAL <newline>+DmKudlW/X3e+PkkBUz2YJQN2JFodtNuJ6nnltrM7P7pMKEF/BqxqjsHQ9gUdfeZC <newline>+huOl1UcCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw <newline>+HQYDVR0OBBYEFMR5yo6hTgMdHNxr2zFblD4/MH8tMA0GCSqGSIb3DQEBCwUAA4IB <newline>+AQAtxRPPVoB7eni9n64smefv2t+UXglpp+duaIy9cr5HqQ6XErhK8WTTOd8lNNTB <newline>+zU6B8A8ExCSzNJbGpqow32hhc9f5joWJ7w5elShKKiePEI4ufIbEAp7aDHdlDkQN <newline>+kv39sxY2+hENHYwOB4lqKVb3cvTdFZx3NWZXqxNT2I7BQMXXExZacse3aQHEerGD <newline>+AWh9jUGhlBjBJVz88P6DAod8DQ3PLghcSkANPuyBYeYk28rgDi0Hsj5W3I31QYUH <newline>+SJsMC8tJP33st/3LjWeJGqvtux6jAAgIFyqCXDFdRootD4abdNlF+9RAsXqqaC2G <newline>+spki4cErx5z481+oghLrGREt <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GeoTrustPrimary_G3[] = <newline>+    "sha1/nKmNAK90Dd2BgNITRaWLjy6UONY="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEKjCCAxKgAwIBAgIEOGPe+DANBgkqhkiG9w0BAQUFADCBtDEUMBIGA1UEChMLRW50cnVzdC5u <newline>+ZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9DUFNfMjA0OCBpbmNvcnAuIGJ5IHJlZi4gKGxp <newline>+bWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNV <newline>+BAMTKkVudHJ1c3QubmV0IENlcnRpZmljYXRpb24gQXV0aG9yaXR5ICgyMDQ4KTAeFw05OTEyMjQx <newline>+NzUwNTFaFw0yOTA3MjQxNDE1MTJaMIG0MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3 <newline>+d3d3LmVudHJ1c3QubmV0L0NQU18yMDQ4IGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTEl <newline>+MCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEGA1UEAxMqRW50cnVzdC5u <newline>+ZXQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgKDIwNDgpMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A <newline>+MIIBCgKCAQEArU1LqRKGsuqjIAcVFmQqK0vRvwtKTY7tgHalZ7d4QMBzQshowNtTK91euHaYNZOL <newline>+Gp18EzoOH1u3Hs/lJBQesYGpjX24zGtLA/ECDNyrpUAkAH90lKGdCCmziAv1h3edVc3kw37XamSr <newline>+hRSGlVuXMlBvPci6Zgzj/L24ScF2iUkZ/cCovYmjZy/Gn7xxGWC4LeksyZB2ZnuU4q941mVTXTzW <newline>+nLLPKQP5L6RQstRIzgUyVYr9smRMDuSYB3Xbf9+5CFVghTAp+XtIpGmG4zU/HoZdenoVve8AjhUi <newline>+VBcAkCaTvA5JaJG/+EfTnZVCwQ5N328mz8MYIWJmQ3DW1cAH4QIDAQABo0IwQDAOBgNVHQ8BAf8E <newline>+BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUVeSB0RGAvtiJuQijMfmhJAkWuXAwDQYJ <newline>+KoZIhvcNAQEFBQADggEBADubj1abMOdTmXx6eadNl9cZlZD7Bh/KM3xGY4+WZiT6QBshJ8rmcnPy <newline>+T/4xmf3IDExoU8aAghOY+rat2l098c5u9hURlIIM7j+VrxGrD9cv3h8Dj1csHsm7mhpElesYT6Yf <newline>+zX1XEC+bBAlahLVu2B064dae0Wx5XnkcFMXj0EyTO2U87d89vqbllRrDtRnDvV5bu/8j72gZyxKT <newline>+J1wDLW8w0B62GqzeWvfRqqgnpv55gcR5mTNXuhKwqeBCbJPKVt7+bYQLCIt+jerXmCHG8+c8eS9e <newline>+nNFMFY3h7CI3zJpDC5fcgJCNs2ebb0gIFVbPv/ErfF6adulZkMV8gzURZVE= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_2048[] = <newline>+    "sha1/VeSB0RGAvtiJuQijMfmhJAkWuXA="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEkTCCA3mgAwIBAgIERWtQVDANBgkqhkiG9w0BAQUFADCBsDELMAkGA1UEBhMC <newline>+VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xOTA3BgNVBAsTMHd3dy5lbnRydXN0 <newline>+Lm5ldC9DUFMgaXMgaW5jb3Jwb3JhdGVkIGJ5IHJlZmVyZW5jZTEfMB0GA1UECxMW <newline>+KGMpIDIwMDYgRW50cnVzdCwgSW5jLjEtMCsGA1UEAxMkRW50cnVzdCBSb290IENl <newline>+cnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA2MTEyNzIwMjM0MloXDTI2MTEyNzIw <newline>+NTM0MlowgbAxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMTkw <newline>+NwYDVQQLEzB3d3cuZW50cnVzdC5uZXQvQ1BTIGlzIGluY29ycG9yYXRlZCBieSBy <newline>+ZWZlcmVuY2UxHzAdBgNVBAsTFihjKSAyMDA2IEVudHJ1c3QsIEluYy4xLTArBgNV <newline>+BAMTJEVudHJ1c3QgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJ <newline>+KoZIhvcNAQEBBQADggEPADCCAQoCggEBALaVtkNC+sZtKm9I35RMOVcF7sN5EUFo <newline>+Nu3s/poBj6E4KPz3EEZmLk0eGrEaTsbRwJWIsMn/MYszA9u3g3s+IIRe7bJWKKf4 <newline>+4LlAcTfFy0cOlypowCKVYhXbR9n10Cv/gkvJrT7eTNuQgFA/CYqEAOwwCj0Yzfv9 <newline>+KlmaI5UXLEWeH25DeW0MXJj+SKfFI0dcXv1u5x609mhF0YaDW6KKjbHjKYD+JXGI <newline>+rb68j6xSlkuqUY3kEzEZ6E5Nn9uss2rVvDlUccp6en+Q3X0dgNmBu1kmwhH+5pPi <newline>+94DkZfs0Nw4pgHBNrziGLp5/V6+eF67rHMsoIV+2HNjnogQi+dPa2MsCAwEAAaOB <newline>+sDCBrTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zArBgNVHRAEJDAi <newline>+gA8yMDA2MTEyNzIwMjM0MlqBDzIwMjYxMTI3MjA1MzQyWjAfBgNVHSMEGDAWgBRo <newline>+kORnpKZTgMeGZqTx90tD+4S9bTAdBgNVHQ4EFgQUaJDkZ6SmU4DHhmak8fdLQ/uE <newline>+vW0wHQYJKoZIhvZ9B0EABBAwDhsIVjcuMTo0LjADAgSQMA0GCSqGSIb3DQEBBQUA <newline>+A4IBAQCT1DCw1wMgKtD5Y+iRDAUgqV8ZyntyTtSx29CW+1RaGSwMCPeyvIWonX9t <newline>+O1KzKtvn1ISMY/YPyyYBkVBs9F8U4pN0wBOeMDpQ47RgxRzwIkSNcUesyBrJ6Zua <newline>+AGAT/3B+XxFNSRuzFVJ7yVTav52Vr2ua2J7p8eRDjeIRRDq/r72DQnNSi6q7pynP <newline>+9WQcCk3RvKqsnyrQ/39/2n3qse0wJcGE2jTSW3iDVuycNsMm4hH2Z0kdkquM++v/ <newline>+eu6FSqdQgPCnXEqULl8FmTxSQeDNtGPPAUO6nIPcj2A781q0tHuu2guQOHXvgR1m <newline>+0vdXcDazv/wor3ElhVsT/h5/WrQ8 <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_EV[] = <newline>+    "sha1/ukKwgYhTiB2GY71MwF4I/upuu3c="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEPjCCAyagAwIBAgIESlOMKDANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMC <newline>+VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50 <newline>+cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3Qs <newline>+IEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVz <newline>+dCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIwHhcNMDkwNzA3MTcy <newline>+NTU0WhcNMzAxMjA3MTc1NTU0WjCBvjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVu <newline>+dHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwt <newline>+dGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0 <newline>+aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmlj <newline>+YXRpb24gQXV0aG9yaXR5IC0gRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK <newline>+AoIBAQC6hLZy254Ma+KZ6TABp3bqMriVQRrJ2mFOWHLP/vaCeb9zYQYKpSfYs1/T <newline>+RU4cctZOMvJyig/3gxnQaoCAAEUesMfnmr8SVycco2gvCoe9amsOXmXzHHfV1IWN <newline>+cCG0szLni6LVhjkCsbjSR87kyUnEO6fe+1R9V77w6G7CebI6C1XiUJgWMhNcL3hW <newline>+wcKUs/Ja5CeanyTXxuzQmyWC48zCxEXFjJd6BmsqEZ+pCm5IO2/b1BEZQvePB7/1 <newline>+U1+cPvQXLOZprE4yTGJ36rfo5bs0vBmLrpxR57d+tVOxMyLlbc9wPBr64ptntoP0 <newline>+jaWvYkxN4FisZDQSA/i2jZRjJKRxAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAP <newline>+BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqciZ60B7vfec7aVHUbI2fkBJmqzAN <newline>+BgkqhkiG9w0BAQsFAAOCAQEAeZ8dlsa2eT8ijYfThwMEYGprmi5ZiXMRrEPR9RP/ <newline>+jTkrwPK9T3CMqS/qF8QLVJ7UG5aYMzyorWKiAHarWWluBh1+xLlEjZivEtRh2woZ <newline>+Rkfz6/djwUAFQKXSt/S1mja/qYh2iARVBCuch38aNzx+LaUa2NSJXsq9rD1s2G2v <newline>+1fN2D807iDginWyTmsQ9v4IbZT+mD12q/OWyFcq1rca8PdCE6OoGcrBNOTJ4vz4R <newline>+nAuknZoh8/CbCzB428Hch0P+vGOaysXCHMnHjf87ElgI5rY97HosTvuDls4MPGmH <newline>+VHOkc8KT/1EQrBVUAdj8BbGJoX90g5pJ19xOe4pIb4tF9g== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_G2[] = <newline>+    "sha1/qzDTr0vY8WtYae5FaSnahLhzlIg="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIE2DCCBEGgAwIBAgIEN0rSQzANBgkqhkiG9w0BAQUFADCBwzELMAkGA1UEBhMC <newline>+VVMxFDASBgNVBAoTC0VudHJ1c3QubmV0MTswOQYDVQQLEzJ3d3cuZW50cnVzdC5u <newline>+ZXQvQ1BTIGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMc <newline>+KGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDE6MDgGA1UEAxMxRW50cnVzdC5u <newline>+ZXQgU2VjdXJlIFNlcnZlciBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05OTA1 <newline>+MjUxNjA5NDBaFw0xOTA1MjUxNjM5NDBaMIHDMQswCQYDVQQGEwJVUzEUMBIGA1UE <newline>+ChMLRW50cnVzdC5uZXQxOzA5BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5j <newline>+b3JwLiBieSByZWYuIChsaW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBF <newline>+bnRydXN0Lm5ldCBMaW1pdGVkMTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUg <newline>+U2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGdMA0GCSqGSIb3DQEBAQUA <newline>+A4GLADCBhwKBgQDNKIM0VBuJ8w+vN5Ex/68xYMmo6LIQaO2f55M28Qpku0f1BBc/ <newline>+I0dNxScZgSYMVHINiC3ZH5oSn7yzcdOAGT9HZnuMNSjSuQrfJNqc1lB5gXpa0zf3 <newline>+wkrYKZImZNHkmGw6AIr1NJtl+O3jEP/9uElY3KDegjlrgbEWGWG5VLbmQwIBA6OC <newline>+AdcwggHTMBEGCWCGSAGG+EIBAQQEAwIABzCCARkGA1UdHwSCARAwggEMMIHeoIHb <newline>+oIHYpIHVMIHSMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLRW50cnVzdC5uZXQxOzA5 <newline>+BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5jb3JwLiBieSByZWYuIChsaW1p <newline>+dHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVk <newline>+MTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRp <newline>+b24gQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMCmgJ6AlhiNodHRwOi8vd3d3LmVu <newline>+dHJ1c3QubmV0L0NSTC9uZXQxLmNybDArBgNVHRAEJDAigA8xOTk5MDUyNTE2MDk0 <newline>+MFqBDzIwMTkwNTI1MTYwOTQwWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAU8Bdi <newline>+E1U9s/8KAGv7UISX8+1i0BowHQYDVR0OBBYEFPAXYhNVPbP/CgBr+1CEl/PtYtAa <newline>+MAwGA1UdEwQFMAMBAf8wGQYJKoZIhvZ9B0EABAwwChsEVjQuMAMCBJAwDQYJKoZI <newline>+hvcNAQEFBQADgYEAkNwwAvpkdMKnCqV8IY00F6j7Rw7/JXyNEwr75Ji174z4xRAN <newline>+95K+8cPV1ZVqBLssziY2ZcgxxufuP+NXdYR6Ee9GTxj005i7qIcyunL2POI9n9cd <newline>+2cNgQ4xYDiKWL2KjLB+6rQXvqzJ4h6BUcxm1XAX5Uj5tLUUL9wqT6u0G+bI= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_Entrust_SSL[] = <newline>+    "sha1/8BdiE1U9s/8KAGv7UISX8+1i0Bo="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEMjCCAxqgAwIBAgIBATANBgkqhkiG9w0BAQUFADB7MQswCQYDVQQGEwJHQjEb <newline>+MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow <newline>+GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmlj <newline>+YXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVowezEL <newline>+MAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE <newline>+BwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxITAfBgNVBAMM <newline>+GEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEBBQADggEP <newline>+ADCCAQoCggEBAL5AnfRu4ep2hxxNRUSOvkbIgwadwSr+GB+O5AL686tdUIoWMQua <newline>+BtDFcCLNSS1UY8y2bmhGC1Pqy0wkwLxyTurxFa70VJoSCsN6sjNg4tqJVfMiWPPe <newline>+3M/vg4aijJRPn2jymJBGhCfHdr/jzDUsi14HZGWCwEiwqJH5YZ92IFCokcdmtet4 <newline>+YgNW8IoaE+oxox6gmf049vYnMlhvB/VruPsUK6+3qszWY19zjNoFmag4qMsXeDZR <newline>+rOme9Hg6jc8P2ULimAyrL58OAd7vn5lJ8S3frHRNG5i1R8XlKdH5kBjHYpy+g8cm <newline>+ez6KJcfA3Z3mNWgQIJ2P2N7Sw4ScDV7oL8kCAwEAAaOBwDCBvTAdBgNVHQ4EFgQU <newline>+oBEKIz6W8Qfs4q8p74Klf9AwpLQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF <newline>+MAMBAf8wewYDVR0fBHQwcjA4oDagNIYyaHR0cDovL2NybC5jb21vZG9jYS5jb20v <newline>+QUFBQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmwwNqA0oDKGMGh0dHA6Ly9jcmwuY29t <newline>+b2RvLm5ldC9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDANBgkqhkiG9w0BAQUF <newline>+AAOCAQEACFb8AvCb6P+k+tZ7xkSAzk/ExfYAWMymtrwUSWgEdujm7l3sAg9g1o1Q <newline>+GE8mTgHj5rCl7r+8dFRBv/38ErjHT1r0iWAFf2C3BUrz9vHCv8S5dIa2LX1rzNLz <newline>+Rt0vxuBqw8M0Ayx9lt1awg6nCpnBBYurDC/zXDrPbDdVCYfeU0BsWO/8tqtlbgT2 <newline>+G9w84FoVxp7Z8VlIMCFlA2zs6SFz7JsDoeA3raAVGI/6ugLOpyypEBMs1OUIJqsi <newline>+l2D4kF501KKaU73yqWjgom7C12yxow+ev+to51byrvLjKzg6CYG1a4XXvi3tPxq3 <newline>+smPi9WIsgtRqAEFQ8TmDn5XpNpaYbg== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AAACertificateServices[] = <newline>+    "sha1/xDAoxdPjCAwQRIssd7okU5dgu/k="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEGDCCAwCgAwIBAgIBATANBgkqhkiG9w0BAQUFADBlMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3 <newline>+b3JrMSEwHwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3QwHhcNMDAwNTMw <newline>+MTAzODMxWhcNMjAwNTMwMTAzODMxWjBlMQswCQYDVQQGEwJTRTEUMBIGA1UEChML <newline>+QWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSEwHwYD <newline>+VQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3QwggEiMA0GCSqGSIb3DQEBAQUA <newline>+A4IBDwAwggEKAoIBAQCWltQhSWDia+hBBwzexODcEyPNwTXH+9ZOEQpnXvUGW2ul <newline>+CDtbKRY654eyNAbFvAWlA3yCyykQruGIgb3WntP+LVbBFc7jJp0VLhD7Bo8wBN6n <newline>+tGO0/7Gcrjyvd7ZWxbWroulpOj0OM3kyP3CCkplhbY0wCI9xP6ZIVxn4JdxLZlyl <newline>+dI+Yrsj5wAYi56xz36Uu+1LcsRVlIPo1Zmne3yzxbrww2ywkEtvrNTVokMsAsJch <newline>+PXQhI2U0K7t4WaPW4XY5mqRJjox0r26kmqPZm9I4XJuiGMx1I4S+6+JNM3GOGvDC <newline>++Mcdoq0Dlyz4zyXG9rgkMbFjXZJ/Y/AlyVMuH79NAgMBAAGjgdIwgc8wHQYDVR0O <newline>+BBYEFJWxtPCUtr3H2tERCSG+wa9J/RB7MAsGA1UdDwQEAwIBBjAPBgNVHRMBAf8E <newline>+BTADAQH/MIGPBgNVHSMEgYcwgYSAFJWxtPCUtr3H2tERCSG+wa9J/RB7oWmkZzBl <newline>+MQswCQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFk <newline>+ZFRydXN0IFRUUCBOZXR3b3JrMSEwHwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENB <newline>+IFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBACxtZBsfzQ3duQH6lmM0MkhHma6X <newline>+7f1yFqZzR1r0693p9db7RcwpiURdv0Y5PejuvE1Uhh4dbOMXJ0PhiVYrqW9yTkkz <newline>+43J8KiOavD7/KCrto/8cI7pDVwlnTUtiBi34/2ydYB7YHEt9tTEv2dB8Xfjea4MY <newline>+eDdXL+gzB2ffHsdrKpV2ro9Xo/D0UrSpUwjP4E/TelOL/bscVjby/rK25Xa71SJl <newline>+pz/+0WatC7xrmYbvP33zGDLKe8bjq2RGlfgmadlVg3sslgf/WSxEo8bl6ancoWOA <newline>+WiFeIc9TVPC6b4nbqKqVz4vjccweGyBECMB6tkD9xOQ14R0WHNC8K47Wcdk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustClass1CARoot[] = <newline>+    "sha1/i9vXzKBoU0IW9MErJUT8Apyli0c="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIENjCCAx6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBvMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxJjAkBgNVBAsTHUFkZFRydXN0IEV4dGVybmFs <newline>+IFRUUCBOZXR3b3JrMSIwIAYDVQQDExlBZGRUcnVzdCBFeHRlcm5hbCBDQSBSb290 <newline>+MB4XDTAwMDUzMDEwNDgzOFoXDTIwMDUzMDEwNDgzOFowbzELMAkGA1UEBhMCU0Ux <newline>+FDASBgNVBAoTC0FkZFRydXN0IEFCMSYwJAYDVQQLEx1BZGRUcnVzdCBFeHRlcm5h <newline>+bCBUVFAgTmV0d29yazEiMCAGA1UEAxMZQWRkVHJ1c3QgRXh0ZXJuYWwgQ0EgUm9v <newline>+dDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALf3GjPm8gAELTngTlvt <newline>+H7xsD821+iO2zt6bETOXpClMfZOfvUq8k+0DGuOPz+VtUFrWlymUWoCwSXrbLpX9 <newline>+uMq/NzgtHj6RQa1wVsfwTz/oMp50ysiQVOnGXw94nZpAPA6sYapeFI+eh6FqUNzX <newline>+mk6vBbOmcZSccbNQYArHE504B4YCqOmoaSYYkKtMsE8jqzpPhNjfzp/haW+710LX <newline>+a0Tkx63ubUFfclpxCDezeWWkWaCUN/cALw3CknLa0Dhy2xSoRcRdKn23tNbE7qzN <newline>+E0S3ySvdQwAl+mG5aWpYIxG3pzOPVnVZ9c0p10a3CitlttNCbxWyuHv77+ldU9U0 <newline>+WicCAwEAAaOB3DCB2TAdBgNVHQ4EFgQUrb2YejS0Jvf6xCZU7wO94CTLVBowCwYD <newline>+VR0PBAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wgZkGA1UdIwSBkTCBjoAUrb2YejS0 <newline>+Jvf6xCZU7wO94CTLVBqhc6RxMG8xCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRU <newline>+cnVzdCBBQjEmMCQGA1UECxMdQWRkVHJ1c3QgRXh0ZXJuYWwgVFRQIE5ldHdvcmsx <newline>+IjAgBgNVBAMTGUFkZFRydXN0IEV4dGVybmFsIENBIFJvb3SCAQEwDQYJKoZIhvcN <newline>+AQEFBQADggEBALCb4IUlwtYj4g+WBpKdQZic2YR5gdkeWxQHIzZlj7DYd7usQWxH <newline>+YINRsPkyPef89iYTx4AWpb9a/IfPeHmJIZriTAcKhjW88t5RxNKWt9x+Tu5w/Rw5 <newline>+6wwCURQtjr0W4MHfRnXnJK3s9EK0hZNwEGe6nQY1ShjTK3rMUUKhemPR5ruhxSvC <newline>+Nr4TDea9Y355e6cJDUCrat2PisP29owaQgVR1EX1n6diIWgVIEM8med8vSTYqZEX <newline>+c4g/VhsxOBi0cQ+azcgOno4uG+GMmIPLHzHxREzGBHNJdmAPx/i9F4BrLunMTA5a <newline>+mnkPIAou1Z5jJh5VkpTYghdae9C8x49OhgQ= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustExternalCARoot[] = <newline>+    "sha1/T5x9IXmcrQ7YuQxXnxoCmeeQ84c="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEFTCCAv2gAwIBAgIBATANBgkqhkiG9w0BAQUFADBkMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3 <newline>+b3JrMSAwHgYDVQQDExdBZGRUcnVzdCBQdWJsaWMgQ0EgUm9vdDAeFw0wMDA1MzAx <newline>+MDQxNTBaFw0yMDA1MzAxMDQxNTBaMGQxCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtB <newline>+ZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQIE5ldHdvcmsxIDAeBgNV <newline>+BAMTF0FkZFRydXN0IFB1YmxpYyBDQSBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOC <newline>+AQ8AMIIBCgKCAQEA6Rowj4OIFMEg2Dybjxt+A3S72mnTRqX4jsIMEZBRpS9mVEBV <newline>+6tsfSlbunyNu9DnLoblv8n75XYcmYZ4c+OLspoH4IcUkzBEMP9smcnrHAZcHF/nX <newline>+GCwwfQ56HmIexkvA/X1id9NEHif2P0tEs7c42TkfYNVRknMDtABp4/MUTu7R3AnP <newline>+dzRGULD4EfL+OHn3Bzn+UZKXC1sIXzSGAa2Il+tmzV7R/9x98oTaunet3IAIx6eH <newline>+1lWfl2royBFkuucZKT8Rs3iQhCBSWxHveNCD9tVIkNAwHM+A+WD+eeSI8t0A65RF <newline>+62WUaUC6wNW0uLp9BBGo6zEFlpROWCGOn9Bg/QIDAQABo4HRMIHOMB0GA1UdDgQW <newline>+BBSBPjfYkrAfd59ctKtzquf2NGAv+jALBgNVHQ8EBAMCAQYwDwYDVR0TAQH/BAUw <newline>+AwEB/zCBjgYDVR0jBIGGMIGDgBSBPjfYkrAfd59ctKtzquf2NGAv+qFopGYwZDEL <newline>+MAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQLExRBZGRU <newline>+cnVzdCBUVFAgTmV0d29yazEgMB4GA1UEAxMXQWRkVHJ1c3QgUHVibGljIENBIFJv <newline>+b3SCAQEwDQYJKoZIhvcNAQEFBQADggEBAAP3FUr4JNojVhaTdt02KLmuG7jD8WS6 <newline>+IBh4lSknVwW8fCr0uVFV2ocC3g8WFzH4qnkuCRO7r7IgGRLlk/lL+YPoRNWyQSW/ <newline>+iHVv/xD8SlTQX/D67zZzfRs2RcYhbbQVuE7PnFylPVoAjgbjPGsye/Kf8Lb93/Ao <newline>+GEjwxrzQvzSAlsJKsW2Ox5BF3i9nrEUEo3rcVZLJR2bYGozH7ZxOmuASu7VqTITh <newline>+4SINhwBk/ox9Yjllpu9CtoAlEmEBqCQTcAARJl/6NVDFSMwGR+gn2HCNX2TmoUQm <newline>+XiLsks3/QppEIW1cxeMiHV9HEufOX1362KqxMy3ZdvJOOjMMK7MtkAY= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustPublicCARoot[] = <newline>+    "sha1/qFdl1ugyyMUZY3Namhd0OoHf7i4="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEHjCCAwagAwIBAgIBATANBgkqhkiG9w0BAQUFADBnMQswCQYDVQQGEwJTRTEU <newline>+MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3 <newline>+b3JrMSMwIQYDVQQDExpBZGRUcnVzdCBRdWFsaWZpZWQgQ0EgUm9vdDAeFw0wMDA1 <newline>+MzAxMDQ0NTBaFw0yMDA1MzAxMDQ0NTBaMGcxCzAJBgNVBAYTAlNFMRQwEgYDVQQK <newline>+EwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQIE5ldHdvcmsxIzAh <newline>+BgNVBAMTGkFkZFRydXN0IFF1YWxpZmllZCBDQSBSb290MIIBIjANBgkqhkiG9w0B <newline>+AQEFAAOCAQ8AMIIBCgKCAQEA5B6a/twJWoekn0e+EV+vhDTbYjx5eLfpMLXsDBwq <newline>+xBb/4Oxx64r1EW7tTw2R0hIYLUkVAcKkIhPHEWT/IhKauY5cLwjPcWqzZwFZ8V1G <newline>+87B4pfYOQnrjfxvM0PC3KP0q6p6zsLkEqv32x7SxuCqg+1jxGaBvcCV+PmlKfw8i <newline>+2O+tCBGaKZnhqkRFmhJePp1tUvznoD1oL/BLcHwTOK28FSXx1s6rosAx1i+f4P8U <newline>+WfyEk9mHfExUE+uf0S0R+Bg6Ot4l2ffTQO2kBhLEO+GRwVY18BTcZTYJbqukB8c1 <newline>+0cIDMzZbdSZtQvESa0NvS3GU+jQd7RNuyoB/mC9suWXY6QIDAQABo4HUMIHRMB0G <newline>+A1UdDgQWBBQ5lYtii1zJ1IC6WA+XPxUIQ8yYpzALBgNVHQ8EBAMCAQYwDwYDVR0T <newline>+AQH/BAUwAwEB/zCBkQYDVR0jBIGJMIGGgBQ5lYtii1zJ1IC6WA+XPxUIQ8yYp6Fr <newline>+pGkwZzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQL <newline>+ExRBZGRUcnVzdCBUVFAgTmV0d29yazEjMCEGA1UEAxMaQWRkVHJ1c3QgUXVhbGlm <newline>+aWVkIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBABmrder4i2VhlRO6aQTv <newline>+hsoToMeqT2QbPxj2qC0sVY8FtzDqQmodwCVRLae/DLPt7wh/bDxGGuoYQ992zPlm <newline>+hpwsaPXpF/gxsxjE1kh9I0xowX67ARRvxdlu3rsEQmr49lx95dr6h+sNNVJn0J6X <newline>+dgWTP5XHAeZpVTh/EGGZyeNfpso+gmNIquIISD6q8rKFYqa0p9m9N5xotS1WfbC3 <newline>+P6CxB9bpT9zeRXEwMn8bLgn5v1Kh7sKAPgZcLlVAwRv1cEWw3F369nJad9Jjzc9Y <newline>+iQBCYz95OdBEsIJuQRno3eDBiFrRHnGTHyQwdOUeqN48Jzd/g66ed8/wMLH/S5no <newline>+xqE= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_AddTrustQualifiedCARoot[] = <newline>+    "sha1/vOS3IxJVmOVjQRkcUOS2R8J2Bdc="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEHTCCAwWgAwIBAgIQToEtioJl4AsC7j41AkblPTANBgkqhkiG9w0BAQUFADCB <newline>+gTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G <newline>+A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxJzAlBgNV <newline>+BAMTHkNPTU9ETyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNjEyMDEwMDAw <newline>+MDBaFw0yOTEyMzEyMzU5NTlaMIGBMQswCQYDVQQGEwJHQjEbMBkGA1UECBMSR3Jl <newline>+YXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFDT01P <newline>+RE8gQ0EgTGltaXRlZDEnMCUGA1UEAxMeQ09NT0RPIENlcnRpZmljYXRpb24gQXV0 <newline>+aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0ECLi3LjkRv3 <newline>+UcEbVASY06m/weaKXTuH+7uIzg3jLz8GlvCiKVCZrts7oVewdFFxze1CkU1B/qnI <newline>+2GqGd0S7WWaXUF601CxwRM/aN5VCaTwwxHGzUvAhTaHYujl8HJ6jJJ3ygxaYqhZ8 <newline>+Q5sVW7euNJH+1GImGEaaP+vB+fGQV+useg2L23IwambV4EajcNxo2f8ESIl33rXp <newline>++2dtQem8Ob0y2WIC8bGoPW43nOIv4tOiJovGuFVDiOEjPqXSJDlqR6sA1KGzqSX+ <newline>+DT+nHbrTUcELpNqsOO9VUCQFZUaTNE8tja3G1CEZ0o7KBWFxB3NH5YoZEr0ETc5O <newline>+nKVIrLsm9wIDAQABo4GOMIGLMB0GA1UdDgQWBBQLWOWLxkwVN6RAqTCpIb5HNlpW <newline>+/zAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zBJBgNVHR8EQjBAMD6g <newline>+PKA6hjhodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9DZXJ0aWZpY2F0aW9u <newline>+QXV0aG9yaXR5LmNybDANBgkqhkiG9w0BAQUFAAOCAQEAPpiem/Yb6dc5t3iuHXIY <newline>+SdOH5EOC6z/JqvWote9VfCFSZfnVDeFs9D6Mk3ORLgLETgdxb8CPOGEIqB6BCsAv <newline>+IC9Bi5HcSEW88cbeunZrM8gALTFGTO3nnc+IlP8zwFboJIYmuNg4ON8qa90SzMc/ <newline>+RxdMosIGlgnW2/4/PEZB31jiVg88O8EckzXZOFKs7sjsLjBOlDW0JB9LeGna8gI4 <newline>+zJVSk/BwJVmcIGfE7vmLV2H0knZ9P4SNVbfo5azV8fUZVqZa+5Acr5Pr5RzUZ5dd <newline>+BA6+C4OmF4O5MBKgxTMVBbkN+8cFduPYSo38NBejxiEovjBFMR7HeL5YYTisO+IB <newline>+ZQ== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_COMODOCertificationAuthority[] = <newline>+    "sha1/EeSR0cnkwOuazs9zVF3h8agwPsM="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEPzCCAyegAwIBAgIBATANBgkqhkiG9w0BAQUFADB+MQswCQYDVQQGEwJHQjEb <newline>+MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow <newline>+GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEkMCIGA1UEAwwbU2VjdXJlIENlcnRp <newline>+ZmljYXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVow <newline>+fjELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G <newline>+A1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxJDAiBgNV <newline>+BAMMG1NlY3VyZSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEB <newline>+BQADggEPADCCAQoCggEBAMBxM4KK0HDrc4eCQNUd5MvJDkKQ+d40uaG6EfQlhfPM <newline>+cm3ye5drswfxdySRXyWP9nQ95IDC+DwN879A6vfIUtFyb+/Iq0G4bi4XKpVpDM3S <newline>+HpR7LZQdqnXXs5jLrLxkU0C8j6ysNstcrbvd4JQX7NFc0L/vpZXJkMWwrPsbQ996 <newline>+CF23uPJAGysnnlDOXmWCiIxe004MeuoIkbY2qitC++rCoznl2yY4rYsK7hljxxwk <newline>+3wN42ubqwUcaCwtGCd0C/N7Lh1/XMGNooa7cMqG6vv5Eq2i2pRcV/b3Vp6ea5EQz <newline>+6YiO/O1R65NxTq0B50SOqy3LqP4BSUjwwN3HaNiS/j0CAwEAAaOBxzCBxDAdBgNV <newline>+HQ4EFgQUPNiTiMLAggnMAZkGkyDpnnAJY08wDgYDVR0PAQH/BAQDAgEGMA8GA1Ud <newline>+EwEB/wQFMAMBAf8wgYEGA1UdHwR6MHgwO6A5oDeGNWh0dHA6Ly9jcmwuY29tb2Rv <newline>+Y2EuY29tL1NlY3VyZUNlcnRpZmljYXRlU2VydmljZXMuY3JsMDmgN6A1hjNodHRw <newline>+Oi8vY3JsLmNvbW9kby5uZXQvU2VjdXJlQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmww <newline>+DQYJKoZIhvcNAQEFBQADggEBAIcBbSMdflsXfcFhMs+P5/OKlFlm4J4oqF7Tt/Q0 <newline>+5qo5spcWxYJvMqTpjOev/e/C6LlLqqP05tqNZSH7uoDrJiiFGv45jN5bBAS0VPmj <newline>+Z55B+glSzAVIqMk/IQQezkhr/IXownuvf7fM+F86/TXGDe+X3EyrEeFryzHRbPtI <newline>+gKvcnDe4IRRLDXE97IMzbtFuMhbsmMcWi1mmNKsFVy2T96oTy9IT4rcuO81rUBcJ <newline>+aD61JlfutuC23bkpgHl9j6PwpCikFcSF9CfUa7/lXORlAnZUtOM3ZiTTGWHIUhDl <newline>+izeauan5Hb/qmZJhlv8BzaFfDbxxvA6sCx1HRR3B7Hzs/Sk= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_SecureCertificateServices[] = <newline>+    "sha1/PLQahC71XPIaPaVKyNG+OQh2N7w="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEQzCCAyugAwIBAgIBATANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJHQjEb <newline>+MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow <newline>+GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDElMCMGA1UEAwwcVHJ1c3RlZCBDZXJ0 <newline>+aWZpY2F0ZSBTZXJ2aWNlczAeFw0wNDAxMDEwMDAwMDBaFw0yODEyMzEyMzU5NTla <newline>+MH8xCzAJBgNVBAYTAkdCMRswGQYDVQQIDBJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAO <newline>+BgNVBAcMB1NhbGZvcmQxGjAYBgNVBAoMEUNvbW9kbyBDQSBMaW1pdGVkMSUwIwYD <newline>+VQQDDBxUcnVzdGVkIENlcnRpZmljYXRlIFNlcnZpY2VzMIIBIjANBgkqhkiG9w0B <newline>+AQEFAAOCAQ8AMIIBCgKCAQEA33FvNlhTWvI2VFeAxHQIIO0Yfyod5jWaHiWsnOWW <newline>+fnJSoBVC21ndZHoa0Lh73TkVvFVIxO06AOoxEbrycXQaZ7jPM8yoMa+j49d/vzMt <newline>+TGo87IvDktJTdyR0nAducPy9C1t2ul/y/9c3S0pgePfw+spwtOpZqqPOSC+pw7IL <newline>+fhdyFgymBwwbOM/JYrc/oJOlh0Hyt3BAd9i+FHzjqMB6juljatEPmsbS9Is6FARW <newline>+1O24zG71++IsWL1/T2sr92AkWCTOJu80kTrV44HQsvAEAtdbtz6SrGsSivnkBbA7 <newline>+kUlcsutT6vifR4buv5XAwAaf0lteERv0xwQ1KdJVXOTt6wIDAQABo4HJMIHGMB0G <newline>+A1UdDgQWBBTFe1i97doladL3WRaoszLAeydb9DAOBgNVHQ8BAf8EBAMCAQYwDwYD <newline>+VR0TAQH/BAUwAwEB/zCBgwYDVR0fBHwwejA8oDqgOIY2aHR0cDovL2NybC5jb21v <newline>+ZG9jYS5jb20vVHJ1c3RlZENlcnRpZmljYXRlU2VydmljZXMuY3JsMDqgOKA2hjRo <newline>+dHRwOi8vY3JsLmNvbW9kby5uZXQvVHJ1c3RlZENlcnRpZmljYXRlU2VydmljZXMu <newline>+Y3JsMA0GCSqGSIb3DQEBBQUAA4IBAQDIk4E7ibSvuIQSTI3S8NtwuleGFTQQuS9/ <newline>+HrCoiWChisJ3DFBKmwCL2Iv0QeLQg4pKHBQGsKNoBXAxMKdTmw7pSqBYaWcOrp32 <newline>+pSxBvzwGa+RZzG0Q8ZZvH9/0BAKkn0U+yNj6NkZEUD+Cl5EfKNsYEYwq5GWDVxIS <newline>+jBc/lDb+XbDABHcTuPQV1T84zJQ6VdCsmPW6AF/ghhmBeC8owH7TzEIK9a5QoNE+ <newline>+xqFx7D+gIIxmOom0jtTYsU0lR+4viMi14QVFwL4Ucd56/Y57fU0IlqUSc/Atyjcn <newline>+dBInTMu2l+nZrghtWjlA3QVHdWpaIbOjGM9O9y5Xt5hwXsjEeLBi <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_TrustedCertificateServices[] = <newline>+    "sha1//nLI678ML7sOJhOTkzwsqY3cJJQ="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEXjCCA0agAwIBAgIQRL4Mi1AAIbQR0ypoBqmtaTANBgkqhkiG9w0BAQUFADCB <newline>+kzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xGzAZBgNVBAMTElVUTiAtIERBVEFDb3Jw <newline>+IFNHQzAeFw05OTA2MjQxODU3MjFaFw0xOTA2MjQxOTA2MzBaMIGTMQswCQYDVQQG <newline>+EwJVUzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYD <newline>+VQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cu <newline>+dXNlcnRydXN0LmNvbTEbMBkGA1UEAxMSVVROIC0gREFUQUNvcnAgU0dDMIIBIjAN <newline>+BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3+5YEKIrblXEjr8uRgnn4AgPLit6 <newline>+E5Qbvfa2gI5lBZMAHryv4g+OGQ0SR+ysraP6LnD43m77VkIVni5c7yPeIbkFdicZ <newline>+D0/Ww5y0vpQZY/KmEQrrU0icvvIpOxboGqBMpsn0GFlowHDyUwDAXlCCpVZvNvlK <newline>+4ESGoE1O1kduSUrLZ9emxAW5jh70/P/N5zbgnAVssjMiFdC04MwXwLLA9P4yPykq <newline>+lXvY8qdOD1R8oQ2AswkDwf9c3V6aPryuvEeKaq5xyh+xKrhfQgUL7EYw0XILyulW <newline>+bfXv33i+Ybqypa4ETLyorGkVl73v67SMvzX41MPRKA5cOp9wGDMgd8SirwIDAQAB <newline>+o4GrMIGoMAsGA1UdDwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRT <newline>+MtGzz3/64PGgXYVOktKeRR20TzA9BgNVHR8ENjA0MDKgMKAuhixodHRwOi8vY3Js <newline>+LnVzZXJ0cnVzdC5jb20vVVROLURBVEFDb3JwU0dDLmNybDAqBgNVHSUEIzAhBggr <newline>+BgEFBQcDAQYKKwYBBAGCNwoDAwYJYIZIAYb4QgQBMA0GCSqGSIb3DQEBBQUAA4IB <newline>+AQAnNZcAiosovcYzMB4p/OL31ZjUQLtgyr+rFywJNn9Q+kHcrpY6CiM+iVnJowft <newline>+Gzet/Hy+UUla3joKVAgWRcKZsYfNjGjgaQPpxE6YsjuMFrMOoAyYUJuTqXAJyCyj <newline>+j98C5OBxOvG0I3KgqgHf35g+FFCgMSa9KOlaMCZ1+XtgHI3zzVAmbQQnmt/VDUVH <newline>+KWss5nbZqSl9Mt3JNjy9rjXxEZ4du5A/EkdOjtd+D2JzHVImOBwYSf0wdJrE5SIv <newline>+2MCN7ZF6TACPcn9d2t0bi0Vr591pl6jFVkwPDPafepE39peC4N1xaf92P2BNPM/3 <newline>+mfnGV/TJVTl4uix5yaaIK/QI <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNDATACorpSGC[] = <newline>+    "sha1/UzLRs89/+uDxoF2FTpLSnkUdtE8="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEojCCA4qgAwIBAgIQRL4Mi1AAJLQR0zYlJWfJiTANBgkqhkiG9w0BAQUFADCB <newline>+rjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xNjA0BgNVBAMTLVVUTi1VU0VSRmlyc3Qt <newline>+Q2xpZW50IEF1dGhlbnRpY2F0aW9uIGFuZCBFbWFpbDAeFw05OTA3MDkxNzI4NTBa <newline>+Fw0xOTA3MDkxNzM2NThaMIGuMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAV <newline>+BgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5l <newline>+dHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTE2MDQGA1UE <newline>+AxMtVVROLVVTRVJGaXJzdC1DbGllbnQgQXV0aGVudGljYXRpb24gYW5kIEVtYWls <newline>+MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsjmFpPJ9q0E7YkY3rs3B <newline>+YHW8OWX5ShpHornMSMxqmNVNNRm5pELlzkniii8efNIxB8dOtINknS4p1aJkxIW9 <newline>+hVE1eaROaJB7HHqkkqgX8pgV8pPMyaQylbsMTzC9mKALi+VuG6JG+ni8om+rWV6l <newline>+L8/K2m2qL+usobNqqrcuZzWLeeEeaYji5kbNoKXqvgvOdjp6Dpvq/NonWz1zHyLm <newline>+SGHGTPNpsaguG7bUMSAsvIKKjqQOpdeJQ/wWWq8dcdcRWdq6hw2v+vPhwvCkxWeM <newline>+1tZUOt4KpLoDd7NlyP0e03RiqhjKaJMeoYV+9Udly/hNVyh00jT/MLbu9mIwFIws <newline>+6wIDAQABo4G5MIG2MAsGA1UdDwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud <newline>+DgQWBBSJgmd9xJ0mcABLtFBIfN49rgRufTBYBgNVHR8EUTBPME2gS6BJhkdodHRw <newline>+Oi8vY3JsLnVzZXJ0cnVzdC5jb20vVVROLVVTRVJGaXJzdC1DbGllbnRBdXRoZW50 <newline>+aWNhdGlvbmFuZEVtYWlsLmNybDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUH <newline>+AwQwDQYJKoZIhvcNAQEFBQADggEBALFtYV2mGn98q0rkMPxTbyUkxsrt4jFcKw7u <newline>+7mFVbwQ+zznexRtJlOTrIEy05p5QLnLZjfWqo7NK2lYcYJeA3IKirUq9iiv/Cwm0 <newline>+xtcgBEXkzYABurorbs6q15L+5K/r9CYdFip/bDCVNy8zEqx/3cfREYxRmLLQo5HQ <newline>+rfafnoOTHh1CuEava2bwm3/q4wMC5QJRwarVNZ1yQAOJujEdxRBoUp7fooXFXAim <newline>+eOZTT7Hot9MUnpOmw2TjrH5xzbyf6QMbzPvprDHBr3wVdAKZw7JHpsIyYdfHb0gk <newline>+USeh1YdV8nuPmD0Wnu51tvjQjvLzxq4oW6fw8zYX/MMF08oDSlQ= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNUSERFirstClientAuthenticationandEmail[] = <newline>+    "sha1/iYJnfcSdJnAAS7RQSHzePa4Ebn0="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEdDCCA1ygAwIBAgIQRL4Mi1AAJLQR0zYq/mUK/TANBgkqhkiG9w0BAQUFADCB <newline>+lzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHzAdBgNVBAMTFlVUTi1VU0VSRmlyc3Qt <newline>+SGFyZHdhcmUwHhcNOTkwNzA5MTgxMDQyWhcNMTkwNzA5MTgxOTIyWjCBlzELMAkG <newline>+A1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEe <newline>+MBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8v <newline>+d3d3LnVzZXJ0cnVzdC5jb20xHzAdBgNVBAMTFlVUTi1VU0VSRmlyc3QtSGFyZHdh <newline>+cmUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCx98M4P7Sof885glFn <newline>+0G2f0v9Y8+efK+wNiVSZuTiZFvfgIXlIwrthdBKWHTxqctU8EGc6Oe0rE81m65UJ <newline>+M6Rsl7HoxuzBdXmcRl6Nq9Bq/bkqVRcQVLMZ8Jr28bFdtqdt++BxF2uiiPsA3/4a <newline>+MXcMmgF6sTLjKwEHOG7DpV4jvEWbe1DByTCP2+UretNb+zNAHqDVmBe8i4fDidNd <newline>+oI6yqqr2jmmIBsX6iSHzCJ1pLgkzmykNRg+MzEk0sGlRvfkGzWitZky8PqxhvQqI <newline>+DsjfPe58BEydCl5rkdbux+0ojatNh4lz0G6k0B4WixThdkQDf2Os5M1JnMWS9Ksy <newline>+oUhbAgMBAAGjgbkwgbYwCwYDVR0PBAQDAgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYD <newline>+VR0OBBYEFKFyXyYbKJhDlV0HN9WFlp1L0sNFMEQGA1UdHwQ9MDswOaA3oDWGM2h0 <newline>+dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4tVVNFUkZpcnN0LUhhcmR3YXJlLmNy <newline>+bDAxBgNVHSUEKjAoBggrBgEFBQcDAQYIKwYBBQUHAwUGCCsGAQUFBwMGBggrBgEF <newline>+BQcDBzANBgkqhkiG9w0BAQUFAAOCAQEARxkP3nTGmZev/K0oXnWO6y1n7k57K9cM <newline>+//bey1WiCuFMVGWTYGufEpytXoMs61quwOQt9ABjHbjAbPLPSbtNk28Gpgoiskli <newline>+CE7/yMgUsogWXecB5BKV5UU0s4tpvc+0hY91UZ59Ojg6FEgSxvunOxqNDYJAB+gE <newline>+CJChicsZUN/KHAG8HQQZexB2lzvukJDKxA4fFm517zP4029bHpbj4HR3dHuKom4t <newline>+3XbWOTCC8KucUvIqx69JXn7HaOWCgchqJ/kniCrVWFCVH/A7HFe7fRQ5YiuayZSS <newline>+KqMiDP+JJn1fIytH1xUdqWqeUQ0qUZ6B+dQ7XnASfxAynB67nfhmqA== <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNUSERFirstHardware[] = <newline>+    "sha1/oXJfJhsomEOVXQc31YWWnUvSw0U="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIIEZjCCA06gAwIBAgIQRL4Mi1AAJLQR0zYt4LNfGzANBgkqhkiG9w0BAQUFADCB <newline>+lTELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug <newline>+Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho <newline>+dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHTAbBgNVBAMTFFVUTi1VU0VSRmlyc3Qt <newline>+T2JqZWN0MB4XDTk5MDcwOTE4MzEyMFoXDTE5MDcwOTE4NDAzNlowgZUxCzAJBgNV <newline>+BAYTAlVTMQswCQYDVQQIEwJVVDEXMBUGA1UEBxMOU2FsdCBMYWtlIENpdHkxHjAc <newline>+BgNVBAoTFVRoZSBVU0VSVFJVU1QgTmV0d29yazEhMB8GA1UECxMYaHR0cDovL3d3 <newline>+dy51c2VydHJ1c3QuY29tMR0wGwYDVQQDExRVVE4tVVNFUkZpcnN0LU9iamVjdDCC <newline>+ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM6qgT+jo2F4qjEAVZURnicP <newline>+HxzfOpuCaDDASmEd8S8O+r5596Uj71VRloTN2+O5bj4x2AogZ8f02b+U60cEPgLO <newline>+KqJdhwQJ9jCdGIqXsqoc/EHSoTbL+z2RuufZcDX65OeQw5ujm9M89RKZd7G3CeBo <newline>+5hy485RjiGpq/gt2yb70IuRnuasaXnfBhQfdDWy/7gbHd2pBnqcP1/vulBe3/IW+ <newline>+pKvEHDHd17bR5PDv3xaPslKT16HUiaEHLr/hARJCHhrh2JU022R5KP+6LhHC5ehb <newline>+kkj7RwvCbNqtMoNB86XlQXD9ZZBt+vpRxPm9lisZBCzTbafc8H9vg2XiaquHhnUC <newline>+AwEAAaOBrzCBrDALBgNVHQ8EBAMCAcYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4E <newline>+FgQU2u1kdBScFDyr3ZmpvVsoTYs8ydgwQgYDVR0fBDswOTA3oDWgM4YxaHR0cDov <newline>+L2NybC51c2VydHJ1c3QuY29tL1VUTi1VU0VSRmlyc3QtT2JqZWN0LmNybDApBgNV <newline>+HSUEIjAgBggrBgEFBQcDAwYIKwYBBQUHAwgGCisGAQQBgjcKAwQwDQYJKoZIhvcN <newline>+AQEFBQADggEBAAgfUrE3RHjb/c652pWWmKpVZIC1WkDdIaXFwfNfLEzIR1pp6ujw <newline>+NTX00CXzyKakh0q9G7FzCL3Uw8q2NbtZhncxzaeAFK4T7/yxSPlrJSUtUbYsbUXB <newline>+mMiKVl0+7kNOPmsnjtA6S4ULX9Ptaqd1y9Fahy85dRNacrACgZ++8A+EVCBibGnU <newline>+4U3GDZlDAQ0Slox4nb9QorFEqmrPF3rPbw/U+CRVX/A0FklmPlBGyWNxODFiuGK5 <newline>+81OtbLUrohKqGU8J2l7nk8aOFAj+8DCAGKCGhU3IfdeLA/5u1fedFqySLKAj5ZyR <newline>+Uh+U3xeUc8OzwcFxBSAAeL0TUh2oPs0AH8g= <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_UTNUSERFirstObject[] = <newline>+    "sha1/2u1kdBScFDyr3ZmpvVsoTYs8ydg="; <newline>+ <newline>+#if 0 <newline>+-----BEGIN CERTIFICATE----- <newline>+MIICWjCCAcMCAgGlMA0GCSqGSIb3DQEBBAUAMHUxCzAJBgNVBAYTAlVTMRgwFgYD <newline>+VQQKEw9HVEUgQ29ycG9yYXRpb24xJzAlBgNVBAsTHkdURSBDeWJlclRydXN0IFNv <newline>+bHV0aW9ucywgSW5jLjEjMCEGA1UEAxMaR1RFIEN5YmVyVHJ1c3QgR2xvYmFsIFJv <newline>+b3QwHhcNOTgwODEzMDAyOTAwWhcNMTgwODEzMjM1OTAwWjB1MQswCQYDVQQGEwJV <newline>+UzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMScwJQYDVQQLEx5HVEUgQ3liZXJU <newline>+cnVzdCBTb2x1dGlvbnMsIEluYy4xIzAhBgNVBAMTGkdURSBDeWJlclRydXN0IEds <newline>+b2JhbCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCVD6C28FCc6HrH <newline>+iM3dFw4usJTQGz0O9pTAipTHBsiQl8i4ZBp6fmw8U+E3KHNgf7KXUwefU/ltWJTS <newline>+r41tiGeA5u2ylc9yMcqlHHK6XALnZELn+aks1joNrI1CqiQBOeacPwGFVw1Yh0X4 <newline>+04Wqk2kmhXBIgD8SFcd5tB8FLztimQIDAQABMA0GCSqGSIb3DQEBBAUAA4GBAG3r <newline>+GwnpXtlR22ciYaQqPEh346B8pt5zohQDhT37qw4wxYMWM4ETCJ57NE7fQMh017l9 <newline>+3PR2VX2bY1QY6fDq81yx2YtCHrnAlU66+tXifPVoYb+O7AWXX1uw16OFNMQkpw0P <newline>+lZPvy5TYnh+dXIVtx6quTx8itc2VrbqnzPmrC3p/ <newline>+-----END CERTIFICATE----- <newline>+#endif <newline>+static const char kSPKIHash_GTECyberTrustGlobalRoot[] = <newline>+    "sha1/WXkS3mF11m/EI7d3E3THlt5viHI="; <newline>+ <newline>+#endif // NET_BASE_PUBLIC_KEY_HASHES_ <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#include "net/base/transport_security_state.h" <newline>+ <newline>+#if defined(USE_OPENSSL) <newline>+#include <openssl/ecdsa.h> <newline>+#include <openssl/ssl.h> <newline>+#else  // !defined(USE_OPENSSL) <newline>+#include <cryptohi.h> <newline>+#include <hasht.h> <newline>+#include <keyhi.h> <newline>+#include <pk11pub.h> <newline>+#include <nspr.h> <newline>+#endif <newline>+ <newline>+#include <algorithm> <newline>+#include <utility> <newline>+ <newline>+#include "base/base64.h" <newline>+#include "base/json/json_reader.h" <newline>+#include "base/json/json_writer.h" <newline>+#include "base/logging.h" <newline>+#include "base/memory/scoped_ptr.h" <newline>+#include "base/metrics/histogram.h" <newline>+#include "base/sha1.h" <newline>+#include "base/string_number_conversions.h" <newline>+#include "base/string_tokenizer.h" <newline>+#include "base/string_util.h" <newline>+#include "base/time.h" <newline>+#include "base/utf_string_conversions.h" <newline>+#include "base/values.h" <newline>+#include "crypto/sha2.h" <newline>+#include "googleurl/src/gurl.h" <newline>+#include "net/base/asn1_util.h" <newline>+#include "net/base/dns_util.h" <newline>+#include "net/base/public_key_hashes.h" <newline>+#include "net/base/ssl_info.h" <newline>+#include "net/base/x509_certificate.h" <newline>+#include "net/http/http_util.h" <newline>+ <newline>+#if defined(USE_OPENSSL) <newline>+#include "crypto/openssl_util.h" <newline>+#endif <newline>+ <newline>+namespace net { <newline>+ <newline>+const long int TransportSecurityState::kMaxHSTSAgeSecs = 86400 * 365;  // 1 year <newline>+ <newline>+TransportSecurityState::TransportSecurityState(const std::string& hsts_hosts) <newline>+    : delegate_(NULL) { <newline>+  if (!hsts_hosts.empty()) { <newline>+    bool dirty; <newline>+    Deserialise(hsts_hosts, &dirty, &forced_hosts_); <newline>+  } <newline>+} <newline>+ <newline>+static std::string HashHost(const std::string& canonicalized_host) { <newline>+  char hashed[crypto::kSHA256Length]; <newline>+  crypto::SHA256HashString(canonicalized_host, hashed, sizeof(hashed)); <newline>+  return std::string(hashed, sizeof(hashed)); <newline>+} <newline>+ <newline>+void TransportSecurityState::SetDelegate( <newline>+    TransportSecurityState::Delegate* delegate) { <newline>+  delegate_ = delegate; <newline>+} <newline>+ <newline>+void TransportSecurityState::EnableHost(const std::string& host, <newline>+                                        const DomainState& state) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  const std::string canonicalized_host = CanonicalizeHost(host); <newline>+  if (canonicalized_host.empty()) <newline>+    return; <newline>+ <newline>+  // Only override a preloaded state if the new state describes a more strict <newline>+  // policy. TODO(palmer): Reconsider this? <newline>+  DomainState existing_state; <newline>+  if (IsPreloadedSTS(canonicalized_host, true, &existing_state) && <newline>+      canonicalized_host == CanonicalizeHost(existing_state.domain) && <newline>+      existing_state.IsMoreStrict(state)) { <newline>+    return; <newline>+  } <newline>+ <newline>+  // Use the original creation date if we already have this host. <newline>+  DomainState state_copy(state); <newline>+  if (GetDomainState(&existing_state, host, true) && <newline>+      !existing_state.created.is_null()) { <newline>+    state_copy.created = existing_state.created; <newline>+  } <newline>+ <newline>+  // We don't store these values. <newline>+  state_copy.preloaded = false; <newline>+  state_copy.domain.clear(); <newline>+ <newline>+  enabled_hosts_[HashHost(canonicalized_host)] = state_copy; <newline>+  DirtyNotify(); <newline>+} <newline>+ <newline>+bool TransportSecurityState::DeleteHost(const std::string& host) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  const std::string canonicalized_host = CanonicalizeHost(host); <newline>+  if (canonicalized_host.empty()) <newline>+    return false; <newline>+ <newline>+  std::map<std::string, DomainState>::iterator i = enabled_hosts_.find( <newline>+      HashHost(canonicalized_host)); <newline>+  if (i != enabled_hosts_.end()) { <newline>+    enabled_hosts_.erase(i); <newline>+    DirtyNotify(); <newline>+    return true; <newline>+  } <newline>+  return false; <newline>+} <newline>+ <newline>+bool TransportSecurityState::HasPinsForHost(DomainState* result, <newline>+                                            const std::string& host, <newline>+                                            bool sni_available) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  return HasMetadata(result, host, sni_available) && <newline>+      (!result->dynamic_spki_hashes.empty() || <newline>+       !result->preloaded_spki_hashes.empty()); <newline>+} <newline>+ <newline>+bool TransportSecurityState::GetDomainState(DomainState* result, <newline>+                                            const std::string& host, <newline>+                                            bool sni_available) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  return HasMetadata(result, host, sni_available); <newline>+} <newline>+ <newline>+bool TransportSecurityState::HasMetadata(DomainState* result, <newline>+                                         const std::string& host, <newline>+                                         bool sni_available) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  DomainState state; <newline>+  const std::string canonicalized_host = CanonicalizeHost(host); <newline>+  if (canonicalized_host.empty()) <newline>+    return false; <newline>+ <newline>+  bool has_preload = IsPreloadedSTS(canonicalized_host, sni_available, &state); <newline>+  std::string canonicalized_preload = CanonicalizeHost(state.domain); <newline>+ <newline>+  base::Time current_time(base::Time::Now()); <newline>+ <newline>+  for (size_t i = 0; canonicalized_host[i]; i += canonicalized_host[i] + 1) { <newline>+    std::string host_sub_chunk(&canonicalized_host[i], <newline>+                               canonicalized_host.size() - i); <newline>+    // Exact match of a preload always wins. <newline>+    if (has_preload && host_sub_chunk == canonicalized_preload) { <newline>+      *result = state; <newline>+      return true; <newline>+    } <newline>+ <newline>+    std::map<std::string, DomainState>::iterator j = <newline>+        enabled_hosts_.find(HashHost(host_sub_chunk)); <newline>+    if (j == enabled_hosts_.end()) <newline>+      continue; <newline>+ <newline>+    if (current_time > j->second.expiry && <newline>+        current_time > j->second.dynamic_spki_hashes_expiry) { <newline>+      enabled_hosts_.erase(j); <newline>+      DirtyNotify(); <newline>+      continue; <newline>+    } <newline>+ <newline>+    state = j->second; <newline>+    state.domain = DNSDomainToString(host_sub_chunk); <newline>+ <newline>+    // Succeed if we matched the domain exactly or if subdomain matches are <newline>+    // allowed. <newline>+    if (i == 0 || j->second.include_subdomains) { <newline>+      *result = state; <newline>+      return true; <newline>+    } <newline>+ <newline>+    return false; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+void TransportSecurityState::DeleteSince(const base::Time& time) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  bool dirtied = false; <newline>+ <newline>+  std::map<std::string, DomainState>::iterator i = enabled_hosts_.begin(); <newline>+  while (i != enabled_hosts_.end()) { <newline>+    if (i->second.created >= time) { <newline>+      dirtied = true; <newline>+      enabled_hosts_.erase(i++); <newline>+    } else { <newline>+      i++; <newline>+    } <newline>+  } <newline>+ <newline>+  if (dirtied) <newline>+    DirtyNotify(); <newline>+} <newline>+ <newline>+// MaxAgeToInt converts a string representation of a number of seconds into a <newline>+// int. We use strtol in order to handle overflow correctly. The string may <newline>+// contain an arbitary number which we should truncate correctly rather than <newline>+// throwing a parse failure. <newline>+static bool MaxAgeToInt(std::string::const_iterator begin, <newline>+                        std::string::const_iterator end, <newline>+                        int* result) { <newline>+  const std::string s(begin, end); <newline>+  char* endptr; <newline>+  long int i = strtol(s.data(), &endptr, 10 /* base */); <newline>+  if (*endptr || i < 0) <newline>+    return false; <newline>+  if (i > TransportSecurityState::kMaxHSTSAgeSecs) <newline>+    i = TransportSecurityState::kMaxHSTSAgeSecs; <newline>+  *result = i; <newline>+  return true; <newline>+} <newline>+ <newline>+// Strip, Split, StringPair, and ParsePins are private implementation details <newline>+// of ParsePinsHeader(std::string&, DomainState&). <newline>+static std::string Strip(const std::string& source) { <newline>+  if (source.empty()) <newline>+    return source; <newline>+ <newline>+  std::string::const_iterator start = source.begin(); <newline>+  std::string::const_iterator end = source.end(); <newline>+  HttpUtil::TrimLWS(&start, &end); <newline>+  return std::string(start, end); <newline>+} <newline>+ <newline>+typedef std::pair<std::string, std::string> StringPair; <newline>+ <newline>+static StringPair Split(const std::string& source, char delimiter) { <newline>+  StringPair pair; <newline>+  size_t point = source.find(delimiter); <newline>+ <newline>+  pair.first = source.substr(0, point); <newline>+  if (std::string::npos != point) <newline>+    pair.second = source.substr(point + 1); <newline>+ <newline>+  return pair; <newline>+} <newline>+ <newline>+// TODO(palmer): Support both sha256 and sha1. This will require additional <newline>+// infrastructure code changes and can come in a later patch. <newline>+// <newline>+// static <newline>+bool TransportSecurityState::ParsePin(const std::string& value, <newline>+                                      SHA1Fingerprint* out) { <newline>+  StringPair slash = Split(Strip(value), '/'); <newline>+  if (slash.first != "sha1") <newline>+    return false; <newline>+ <newline>+  std::string decoded; <newline>+  if (!base::Base64Decode(slash.second, &decoded) || <newline>+      decoded.size() != arraysize(out->data)) { <newline>+    return false; <newline>+  } <newline>+ <newline>+  memcpy(out->data, decoded.data(), arraysize(out->data)); <newline>+  return true; <newline>+} <newline>+ <newline>+static bool ParseAndAppendPin(const std::string& value, <newline>+                      FingerprintVector* fingerprints) { <newline>+  // The base64'd fingerprint MUST be a quoted-string. 20 bytes base64'd is 28 <newline>+  // characters; 32 bytes base64'd is 44 characters. TODO(palmer): Support <newline>+  // SHA256. <newline>+  size_t size = value.size(); <newline>+  if (size != 30 || value[0] != '"' || value[size - 1] != '"') <newline>+    return false; <newline>+ <newline>+  std::string unquoted = HttpUtil::Unquote(value); <newline>+  std::string decoded; <newline>+  SHA1Fingerprint fp; <newline>+ <newline>+  if (!base::Base64Decode(unquoted, &decoded) || <newline>+      decoded.size() != arraysize(fp.data)) { <newline>+    return false; <newline>+  } <newline>+ <newline>+  memcpy(fp.data, decoded.data(), arraysize(fp.data)); <newline>+  fingerprints->push_back(fp); <newline>+  return true; <newline>+} <newline>+ <newline>+// static <newline>+bool TransportSecurityState::GetPublicKeyHash( <newline>+    const X509Certificate& cert, SHA1Fingerprint* spki_hash) { <newline>+  std::string der_bytes; <newline>+  if (!X509Certificate::GetDEREncoded(cert.os_cert_handle(), &der_bytes)) <newline>+    return false; <newline>+ <newline>+  base::StringPiece spki; <newline>+  if (!asn1::ExtractSPKIFromDERCert(der_bytes, &spki)) <newline>+    return false; <newline>+ <newline>+  base::SHA1HashBytes(reinterpret_cast<const unsigned char*>(spki.data()), <newline>+                      spki.size(), spki_hash->data); <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+struct FingerprintsEqualPredicate { <newline>+  explicit FingerprintsEqualPredicate(const SHA1Fingerprint& fingerprint) : <newline>+      fingerprint_(fingerprint) {} <newline>+ <newline>+  bool operator()(const SHA1Fingerprint& other) const { <newline>+    return fingerprint_.Equals(other); <newline>+  } <newline>+ <newline>+  const SHA1Fingerprint& fingerprint_; <newline>+}; <newline>+ <newline>+// Returns true iff there is an item in |pins| which is not present in <newline>+// |from_cert_chain|. Such an SPKI hash is called a "backup pin". <newline>+static bool IsBackupPinPresent(const FingerprintVector& pins, <newline>+                               const FingerprintVector& from_cert_chain) { <newline>+  for (FingerprintVector::const_iterator <newline>+       i = pins.begin(); i != pins.end(); ++i) { <newline>+    FingerprintVector::const_iterator j = <newline>+        std::find_if(from_cert_chain.begin(), from_cert_chain.end(), <newline>+                     FingerprintsEqualPredicate(*i)); <newline>+      if (j == from_cert_chain.end()) <newline>+        return true; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+static bool HashesIntersect(const FingerprintVector& a, <newline>+                            const FingerprintVector& b) { <newline>+  for (FingerprintVector::const_iterator <newline>+       i = a.begin(); i != a.end(); ++i) { <newline>+    FingerprintVector::const_iterator j = <newline>+        std::find_if(b.begin(), b.end(), FingerprintsEqualPredicate(*i)); <newline>+      if (j != b.end()) <newline>+        return true; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+// Returns true iff |pins| contains both a live and a backup pin. A live pin <newline>+// is a pin whose SPKI is present in the certificate chain in |ssl_info|. A <newline>+// backup pin is a pin intended for disaster recovery, not day-to-day use, and <newline>+// thus must be absent from the certificate chain. The Public-Key-Pins header <newline>+// specification requires both. <newline>+static bool IsPinListValid(const FingerprintVector& pins, <newline>+                           const SSLInfo& ssl_info) { <newline>+  if (pins.size() < 2) <newline>+    return false; <newline>+ <newline>+  const FingerprintVector& from_cert_chain = ssl_info.public_key_hashes; <newline>+  if (from_cert_chain.empty()) <newline>+    return false; <newline>+ <newline>+  return IsBackupPinPresent(pins, from_cert_chain) && <newline>+      HashesIntersect(pins, from_cert_chain); <newline>+} <newline>+ <newline>+// "Public-Key-Pins" ":" <newline>+//     "max-age" "=" delta-seconds ";" <newline>+//     "pin-" algo "=" base64 [ ";" ... ] <newline>+// <newline>+// static <newline>+bool TransportSecurityState::ParsePinsHeader(const std::string& value, <newline>+                                             const SSLInfo& ssl_info, <newline>+                                             DomainState* state) { <newline>+  bool parsed_max_age = false; <newline>+  int max_age = 0; <newline>+  FingerprintVector pins; <newline>+ <newline>+  std::string source = value; <newline>+ <newline>+  while (!source.empty()) { <newline>+    StringPair semicolon = Split(source, ';'); <newline>+    semicolon.first = Strip(semicolon.first); <newline>+    semicolon.second = Strip(semicolon.second); <newline>+    StringPair equals = Split(semicolon.first, '='); <newline>+    equals.first = Strip(equals.first); <newline>+    equals.second = Strip(equals.second); <newline>+ <newline>+    if (LowerCaseEqualsASCII(equals.first, "max-age")) { <newline>+      if (equals.second.empty() || <newline>+          !MaxAgeToInt(equals.second.begin(), equals.second.end(), &max_age)) { <newline>+        return false; <newline>+      } <newline>+      if (max_age > kMaxHSTSAgeSecs) <newline>+        max_age = kMaxHSTSAgeSecs; <newline>+      parsed_max_age = true; <newline>+    } else if (LowerCaseEqualsASCII(equals.first, "pin-sha1")) { <newline>+      if (!ParseAndAppendPin(equals.second, &pins)) <newline>+        return false; <newline>+    } else if (LowerCaseEqualsASCII(equals.first, "pin-sha256")) { <newline>+      // TODO(palmer) <newline>+    } else { <newline>+      // Silently ignore unknown directives for forward compatibility. <newline>+    } <newline>+ <newline>+    source = semicolon.second; <newline>+  } <newline>+ <newline>+  if (!parsed_max_age || !IsPinListValid(pins, ssl_info)) <newline>+    return false; <newline>+ <newline>+  state->max_age = max_age; <newline>+  state->dynamic_spki_hashes_expiry = <newline>+      base::Time::Now() + base::TimeDelta::FromSeconds(max_age); <newline>+ <newline>+  state->dynamic_spki_hashes.clear(); <newline>+  if (max_age > 0) { <newline>+    for (FingerprintVector::const_iterator i = pins.begin(); <newline>+         i != pins.end(); i++) { <newline>+      state->dynamic_spki_hashes.push_back(*i); <newline>+    } <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+// "Strict-Transport-Security" ":" <newline>+//     "max-age" "=" delta-seconds [ ";" "includeSubDomains" ] <newline>+// <newline>+// static <newline>+bool TransportSecurityState::ParseHeader(const std::string& value, <newline>+                                         int* max_age, <newline>+                                         bool* include_subdomains) { <newline>+  DCHECK(max_age); <newline>+  DCHECK(include_subdomains); <newline>+ <newline>+  int max_age_candidate = 0; <newline>+ <newline>+  enum ParserState { <newline>+    START, <newline>+    AFTER_MAX_AGE_LABEL, <newline>+    AFTER_MAX_AGE_EQUALS, <newline>+    AFTER_MAX_AGE, <newline>+    AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER, <newline>+    AFTER_INCLUDE_SUBDOMAINS, <newline>+  } state = START; <newline>+ <newline>+  StringTokenizer tokenizer(value, " \t=;"); <newline>+  tokenizer.set_options(StringTokenizer::RETURN_DELIMS); <newline>+  while (tokenizer.GetNext()) { <newline>+    DCHECK(!tokenizer.token_is_delim() || tokenizer.token().length() == 1); <newline>+    switch (state) { <newline>+      case START: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (!LowerCaseEqualsASCII(tokenizer.token(), "max-age")) <newline>+          return false; <newline>+        state = AFTER_MAX_AGE_LABEL; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE_LABEL: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (*tokenizer.token_begin() != '=') <newline>+          return false; <newline>+        DCHECK_EQ(tokenizer.token().length(), 1U); <newline>+        state = AFTER_MAX_AGE_EQUALS; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE_EQUALS: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (!MaxAgeToInt(tokenizer.token_begin(), <newline>+                         tokenizer.token_end(), <newline>+                         &max_age_candidate)) <newline>+          return false; <newline>+        state = AFTER_MAX_AGE; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (*tokenizer.token_begin() != ';') <newline>+          return false; <newline>+        state = AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER; <newline>+        break; <newline>+ <newline>+      case AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER: <newline>+        if (IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          continue; <newline>+        if (!LowerCaseEqualsASCII(tokenizer.token(), "includesubdomains")) <newline>+          return false; <newline>+        state = AFTER_INCLUDE_SUBDOMAINS; <newline>+        break; <newline>+ <newline>+      case AFTER_INCLUDE_SUBDOMAINS: <newline>+        if (!IsAsciiWhitespace(*tokenizer.token_begin())) <newline>+          return false; <newline>+        break; <newline>+ <newline>+      default: <newline>+        NOTREACHED(); <newline>+    } <newline>+  } <newline>+ <newline>+  // We've consumed all the input.  Let's see what state we ended up in. <newline>+  switch (state) { <newline>+    case START: <newline>+    case AFTER_MAX_AGE_LABEL: <newline>+    case AFTER_MAX_AGE_EQUALS: <newline>+      return false; <newline>+    case AFTER_MAX_AGE: <newline>+      *max_age = max_age_candidate; <newline>+      *include_subdomains = false; <newline>+      return true; <newline>+    case AFTER_MAX_AGE_INCLUDE_SUB_DOMAINS_DELIMITER: <newline>+      return false; <newline>+    case AFTER_INCLUDE_SUBDOMAINS: <newline>+      *max_age = max_age_candidate; <newline>+      *include_subdomains = true; <newline>+      return true; <newline>+    default: <newline>+      NOTREACHED(); <newline>+      return false; <newline>+  } <newline>+} <newline>+ <newline>+// Side pinning and superfluous certificates: <newline>+// <newline>+// In SSLClientSocketNSS::DoVerifyCertComplete we look for certificates with a <newline>+// Subject of CN=meta. When we find one we'll currently try and parse side <newline>+// pinned key from it. <newline>+// <newline>+// A side pin is a key which can be pinned to, but also can be kept offline and <newline>+// still held by the site owner. The CN=meta certificate is just a backwards <newline>+// compatiable method of carrying a lump of bytes to the client. (We could use <newline>+// a TLS extension just as well, but it's a lot easier for admins to add extra <newline>+// certificates to the chain.) <newline>+ <newline>+// A TagMap represents the simple key-value structure that we use. Keys are <newline>+// 32-bit ints. Values are byte strings. <newline>+typedef std::map<uint32, base::StringPiece> TagMap; <newline>+ <newline>+// ParseTags parses a list of key-value pairs from |in| to |out| and advances <newline>+// |in| past the data. The key-value pair data is: <newline>+//   u16le num_tags <newline>+//   u32le tag[num_tags] <newline>+//   u16le lengths[num_tags] <newline>+//   ...data... <newline>+static bool ParseTags(base::StringPiece* in, TagMap *out) { <newline>+  // Many part of Chrome already assume little-endian. This is just to help <newline>+  // anyone who should try to port it in the future. <newline>+#if defined(__BYTE_ORDER) <newline>+  // Linux check <newline>+  COMPILE_ASSERT(__BYTE_ORDER == __LITTLE_ENDIAN, assumes_little_endian); <newline>+#elif defined(__BIG_ENDIAN__) <newline>+  // Mac check <newline>+  #error assumes little endian <newline>+#endif <newline>+ <newline>+  uint16 num_tags_16; <newline>+  if (in->size() < sizeof(num_tags_16)) <newline>+    return false; <newline>+ <newline>+  memcpy(&num_tags_16, in->data(), sizeof(num_tags_16)); <newline>+  in->remove_prefix(sizeof(num_tags_16)); <newline>+  unsigned num_tags = num_tags_16; <newline>+ <newline>+  if (in->size() < 6 * num_tags) <newline>+    return false; <newline>+ <newline>+  const uint32* tags = reinterpret_cast<const uint32*>(in->data()); <newline>+  const uint16* lens = reinterpret_cast<const uint16*>( <newline>+      in->data() + 4*num_tags); <newline>+  in->remove_prefix(6*num_tags); <newline>+ <newline>+  uint32 prev_tag = 0; <newline>+  for (unsigned i = 0; i < num_tags; i++) { <newline>+    size_t len = lens[i]; <newline>+    uint32 tag = tags[i]; <newline>+ <newline>+    if (in->size() < len) <newline>+      return false; <newline>+    // tags must be in ascending order. <newline>+    if (i > 0 && prev_tag >= tag) <newline>+      return false; <newline>+    (*out)[tag] = base::StringPiece(in->data(), len); <newline>+    in->remove_prefix(len); <newline>+    prev_tag = tag; <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+// GetTag extracts the data associated with |tag| in |tags|. <newline>+static bool GetTag(uint32 tag, const TagMap& tags, base::StringPiece* out) { <newline>+  TagMap::const_iterator i = tags.find(tag); <newline>+  if (i == tags.end()) <newline>+    return false; <newline>+ <newline>+  *out = i->second; <newline>+  return true; <newline>+} <newline>+ <newline>+// kP256SubjectPublicKeyInfoPrefix can be prepended onto a P256 elliptic curve <newline>+// point in X9.62 format in order to make a valid SubjectPublicKeyInfo. The <newline>+// ASN.1 interpretation of these bytes is: <newline>+// <newline>+//     0:d=0  hl=2 l=  89 cons: SEQUENCE <newline>+//     2:d=1  hl=2 l=  19 cons: SEQUENCE <newline>+//     4:d=2  hl=2 l=   7 prim: OBJECT            :id-ecPublicKey <newline>+//    13:d=2  hl=2 l=   8 prim: OBJECT            :prime256v1 <newline>+//    23:d=1  hl=2 l=  66 prim: BIT STRING <newline>+static const uint8 kP256SubjectPublicKeyInfoPrefix[] = { <newline>+  0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, <newline>+  0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, <newline>+  0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, <newline>+  0x42, 0x00, <newline>+}; <newline>+ <newline>+// VerifySignature returns true iff |sig| is a valid signature of <newline>+// |hash| by |pubkey|. The actual implementation is crypto library <newline>+// specific. <newline>+static bool VerifySignature(const base::StringPiece& pubkey, <newline>+                            const base::StringPiece& sig, <newline>+                            const base::StringPiece& hash); <newline>+ <newline>+#if defined(USE_OPENSSL) <newline>+ <newline>+static EVP_PKEY* DecodeX962P256PublicKey( <newline>+    const base::StringPiece& pubkey_bytes) { <newline>+  // The public key is an X9.62 encoded P256 point. <newline>+  if (pubkey_bytes.size() != 1 + 2*32) <newline>+    return NULL; <newline>+ <newline>+  std::string pubkey_spki( <newline>+      reinterpret_cast<const char*>(kP256SubjectPublicKeyInfoPrefix), <newline>+      sizeof(kP256SubjectPublicKeyInfoPrefix)); <newline>+  pubkey_spki += pubkey_bytes.as_string(); <newline>+ <newline>+  EVP_PKEY* ret = NULL; <newline>+  const unsigned char* der_pubkey = <newline>+      reinterpret_cast<const unsigned char*>(pubkey_spki.data()); <newline>+  d2i_PUBKEY(&ret, &der_pubkey, pubkey_spki.size()); <newline>+  return ret; <newline>+} <newline>+ <newline>+static bool VerifySignature(const base::StringPiece& pubkey, <newline>+                            const base::StringPiece& sig, <newline>+                            const base::StringPiece& hash) { <newline>+  crypto::ScopedOpenSSL<EVP_PKEY, EVP_PKEY_free> secpubkey( <newline>+      DecodeX962P256PublicKey(pubkey)); <newline>+  if (!secpubkey.get()) <newline>+    return false; <newline>+ <newline>+ <newline>+  crypto::ScopedOpenSSL<EC_KEY, EC_KEY_free> ec_key( <newline>+      EVP_PKEY_get1_EC_KEY(secpubkey.get())); <newline>+  if (!ec_key.get()) <newline>+    return false; <newline>+ <newline>+  return ECDSA_verify(0, reinterpret_cast<const unsigned char*>(hash.data()), <newline>+                      hash.size(), <newline>+                      reinterpret_cast<const unsigned char*>(sig.data()), <newline>+                      sig.size(), ec_key.get()) == 1; <newline>+} <newline>+ <newline>+#else <newline>+ <newline>+// DecodeX962P256PublicKey parses an uncompressed, X9.62 format, P256 elliptic <newline>+// curve point from |pubkey_bytes| and returns it as a SECKEYPublicKey. <newline>+static SECKEYPublicKey* DecodeX962P256PublicKey( <newline>+    const base::StringPiece& pubkey_bytes) { <newline>+  // The public key is an X9.62 encoded P256 point. <newline>+  if (pubkey_bytes.size() != 1 + 2*32) <newline>+    return NULL; <newline>+ <newline>+  std::string pubkey_spki( <newline>+      reinterpret_cast<const char*>(kP256SubjectPublicKeyInfoPrefix), <newline>+      sizeof(kP256SubjectPublicKeyInfoPrefix)); <newline>+  pubkey_spki += pubkey_bytes.as_string(); <newline>+ <newline>+  SECItem der; <newline>+  memset(&der, 0, sizeof(der)); <newline>+  der.data = reinterpret_cast<uint8*>(const_cast<char*>(pubkey_spki.data())); <newline>+  der.len = pubkey_spki.size(); <newline>+ <newline>+  CERTSubjectPublicKeyInfo* spki = SECKEY_DecodeDERSubjectPublicKeyInfo(&der); <newline>+  if (!spki) <newline>+    return NULL; <newline>+  SECKEYPublicKey* public_key = SECKEY_ExtractPublicKey(spki); <newline>+  SECKEY_DestroySubjectPublicKeyInfo(spki); <newline>+ <newline>+  return public_key; <newline>+} <newline>+ <newline>+static bool VerifySignature(const base::StringPiece& pubkey, <newline>+                            const base::StringPiece& sig, <newline>+                            const base::StringPiece& hash) { <newline>+  SECKEYPublicKey* secpubkey = DecodeX962P256PublicKey(pubkey); <newline>+  if (!secpubkey) <newline>+    return false; <newline>+ <newline>+  SECItem sigitem; <newline>+  memset(&sigitem, 0, sizeof(sigitem)); <newline>+  sigitem.data = reinterpret_cast<uint8*>(const_cast<char*>(sig.data())); <newline>+  sigitem.len = sig.size(); <newline>+ <newline>+  // |decoded_sigitem| is newly allocated, as is the data that it points to. <newline>+  SECItem* decoded_sigitem = DSAU_DecodeDerSigToLen( <newline>+      &sigitem, SECKEY_SignatureLen(secpubkey)); <newline>+ <newline>+  if (!decoded_sigitem) { <newline>+    SECKEY_DestroyPublicKey(secpubkey); <newline>+    return false; <newline>+  } <newline>+ <newline>+  SECItem hashitem; <newline>+  memset(&hashitem, 0, sizeof(hashitem)); <newline>+  hashitem.data = reinterpret_cast<unsigned char*>( <newline>+      const_cast<char*>(hash.data())); <newline>+  hashitem.len = hash.size(); <newline>+ <newline>+  SECStatus rv = PK11_Verify(secpubkey, decoded_sigitem, &hashitem, NULL); <newline>+  SECKEY_DestroyPublicKey(secpubkey); <newline>+  SECITEM_FreeItem(decoded_sigitem, PR_TRUE); <newline>+  return rv == SECSuccess; <newline>+} <newline>+ <newline>+#endif  // !defined(USE_OPENSSL) <newline>+ <newline>+// These are the tag values that we use. Tags are little-endian on the wire and <newline>+// these values correspond to the ASCII of the name. <newline>+static const uint32 kTagALGO = 0x4f474c41; <newline>+static const uint32 kTagP256 = 0x36353250; <newline>+static const uint32 kTagPUBK = 0x4b425550; <newline>+static const uint32 kTagSIG = 0x474953; <newline>+static const uint32 kTagSPIN = 0x4e495053; <newline>+ <newline>+// static <newline>+bool TransportSecurityState::ParseSidePin( <newline>+    const base::StringPiece& leaf_spki, <newline>+    const base::StringPiece& in_side_info, <newline>+    FingerprintVector* out_pub_key_hash) { <newline>+  base::StringPiece side_info(in_side_info); <newline>+ <newline>+  TagMap outer; <newline>+  if (!ParseTags(&side_info, &outer)) <newline>+    return false; <newline>+  // trailing data is not allowed <newline>+  if (side_info.size()) <newline>+    return false; <newline>+ <newline>+  base::StringPiece side_pin_bytes; <newline>+  if (!GetTag(kTagSPIN, outer, &side_pin_bytes)) <newline>+    return false; <newline>+ <newline>+  bool have_parsed_a_key = false; <newline>+  uint8 leaf_spki_hash[crypto::kSHA256Length]; <newline>+  bool have_leaf_spki_hash = false; <newline>+ <newline>+  while (side_pin_bytes.size() > 0) { <newline>+    TagMap side_pin; <newline>+    if (!ParseTags(&side_pin_bytes, &side_pin)) <newline>+      return false; <newline>+ <newline>+    base::StringPiece algo, pubkey, sig; <newline>+    if (!GetTag(kTagALGO, side_pin, &algo) || <newline>+        !GetTag(kTagPUBK, side_pin, &pubkey) || <newline>+        !GetTag(kTagSIG, side_pin, &sig)) { <newline>+      return false; <newline>+    } <newline>+ <newline>+    if (algo.size() != sizeof(kTagP256) || <newline>+        0 != memcmp(algo.data(), &kTagP256, sizeof(kTagP256))) { <newline>+      // We don't support anything but P256 at the moment. <newline>+      continue; <newline>+    } <newline>+ <newline>+    if (!have_leaf_spki_hash) { <newline>+      crypto::SHA256HashString( <newline>+          leaf_spki.as_string(), leaf_spki_hash, sizeof(leaf_spki_hash)); <newline>+      have_leaf_spki_hash = true; <newline>+    } <newline>+ <newline>+    if (VerifySignature(pubkey, sig, base::StringPiece( <newline>+        reinterpret_cast<const char*>(leaf_spki_hash), <newline>+        sizeof(leaf_spki_hash)))) { <newline>+      SHA1Fingerprint fpr; <newline>+      base::SHA1HashBytes( <newline>+          reinterpret_cast<const uint8*>(pubkey.data()), <newline>+          pubkey.size(), <newline>+          fpr.data); <newline>+      out_pub_key_hash->push_back(fpr); <newline>+      have_parsed_a_key = true; <newline>+    } <newline>+  } <newline>+ <newline>+  return have_parsed_a_key; <newline>+} <newline>+ <newline>+// This function converts the binary hashes, which we store in <newline>+// |enabled_hosts_|, to a base64 string which we can include in a JSON file. <newline>+static std::string HashedDomainToExternalString(const std::string& hashed) { <newline>+  std::string out; <newline>+  CHECK(base::Base64Encode(hashed, &out)); <newline>+  return out; <newline>+} <newline>+ <newline>+// This inverts |HashedDomainToExternalString|, above. It turns an external <newline>+// string (from a JSON file) into an internal (binary) string. <newline>+static std::string ExternalStringToHashedDomain(const std::string& external) { <newline>+  std::string out; <newline>+  if (!base::Base64Decode(external, &out) || <newline>+      out.size() != crypto::kSHA256Length) { <newline>+    return std::string(); <newline>+  } <newline>+ <newline>+  return out; <newline>+} <newline>+ <newline>+static ListValue* SPKIHashesToListValue(const FingerprintVector& hashes) { <newline>+  ListValue* pins = new ListValue; <newline>+ <newline>+  for (FingerprintVector::const_iterator i = hashes.begin(); <newline>+       i != hashes.end(); ++i) { <newline>+    std::string hash_str(reinterpret_cast<const char*>(i->data), <newline>+                         sizeof(i->data)); <newline>+    std::string b64; <newline>+    base::Base64Encode(hash_str, &b64); <newline>+    pins->Append(new StringValue("sha1/" + b64)); <newline>+  } <newline>+ <newline>+  return pins; <newline>+} <newline>+ <newline>+bool TransportSecurityState::Serialise(std::string* output) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  DictionaryValue toplevel; <newline>+  base::Time now = base::Time::Now(); <newline>+  for (std::map<std::string, DomainState>::const_iterator <newline>+       i = enabled_hosts_.begin(); i != enabled_hosts_.end(); ++i) { <newline>+    DictionaryValue* state = new DictionaryValue; <newline>+    state->SetBoolean("include_subdomains", i->second.include_subdomains); <newline>+    state->SetDouble("created", i->second.created.ToDoubleT()); <newline>+    state->SetDouble("expiry", i->second.expiry.ToDoubleT()); <newline>+    state->SetDouble("dynamic_spki_hashes_expiry", <newline>+                     i->second.dynamic_spki_hashes_expiry.ToDoubleT()); <newline>+ <newline>+    switch (i->second.mode) { <newline>+      case DomainState::MODE_STRICT: <newline>+        state->SetString("mode", "strict"); <newline>+        break; <newline>+      case DomainState::MODE_SPDY_ONLY: <newline>+        state->SetString("mode", "spdy-only"); <newline>+        break; <newline>+      case DomainState::MODE_PINNING_ONLY: <newline>+        state->SetString("mode", "pinning-only"); <newline>+        break; <newline>+      default: <newline>+        NOTREACHED() << "DomainState with unknown mode"; <newline>+        delete state; <newline>+        continue; <newline>+    } <newline>+ <newline>+    state->Set("preloaded_spki_hashes", <newline>+               SPKIHashesToListValue(i->second.preloaded_spki_hashes)); <newline>+ <newline>+    if (now < i->second.dynamic_spki_hashes_expiry) { <newline>+      state->Set("dynamic_spki_hashes", <newline>+                 SPKIHashesToListValue(i->second.dynamic_spki_hashes)); <newline>+    } <newline>+ <newline>+    toplevel.Set(HashedDomainToExternalString(i->first), state); <newline>+  } <newline>+ <newline>+  base::JSONWriter::WriteWithOptions(&toplevel, <newline>+                                     base::JSONWriter::OPTIONS_PRETTY_PRINT, <newline>+                                     output); <newline>+  return true; <newline>+} <newline>+ <newline>+bool TransportSecurityState::LoadEntries(const std::string& input, <newline>+                                         bool* dirty) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  enabled_hosts_.clear(); <newline>+  return Deserialise(input, dirty, &enabled_hosts_); <newline>+} <newline>+ <newline>+static bool AddHash(const std::string& type_and_base64, <newline>+                    FingerprintVector* out) { <newline>+  SHA1Fingerprint hash; <newline>+ <newline>+  if (!TransportSecurityState::ParsePin(type_and_base64, &hash)) <newline>+    return false; <newline>+ <newline>+  out->push_back(hash); <newline>+  return true; <newline>+} <newline>+ <newline>+static void SPKIHashesFromListValue(FingerprintVector* hashes, <newline>+                                    const ListValue& pins) { <newline>+  size_t num_pins = pins.GetSize(); <newline>+  for (size_t i = 0; i < num_pins; ++i) { <newline>+    std::string type_and_base64; <newline>+    if (pins.GetString(i, &type_and_base64)) <newline>+      AddHash(type_and_base64, hashes); <newline>+  } <newline>+} <newline>+ <newline>+// static <newline>+bool TransportSecurityState::Deserialise( <newline>+    const std::string& input, <newline>+    bool* dirty, <newline>+    std::map<std::string, DomainState>* out) { <newline>+  scoped_ptr<Value> value( <newline>+      base::JSONReader::Read(input, false /* do not allow trailing commas */)); <newline>+  if (!value.get() || !value->IsType(Value::TYPE_DICTIONARY)) <newline>+    return false; <newline>+ <newline>+  DictionaryValue* dict_value = reinterpret_cast<DictionaryValue*>(value.get()); <newline>+  const base::Time current_time(base::Time::Now()); <newline>+  bool dirtied = false; <newline>+ <newline>+  for (DictionaryValue::key_iterator i = dict_value->begin_keys(); <newline>+       i != dict_value->end_keys(); ++i) { <newline>+    DictionaryValue* state; <newline>+    if (!dict_value->GetDictionaryWithoutPathExpansion(*i, &state)) <newline>+      continue; <newline>+ <newline>+    bool include_subdomains; <newline>+    std::string mode_string; <newline>+    double created; <newline>+    double expiry; <newline>+    double dynamic_spki_hashes_expiry = 0.0; <newline>+ <newline>+    if (!state->GetBoolean("include_subdomains", &include_subdomains) || <newline>+        !state->GetString("mode", &mode_string) || <newline>+        !state->GetDouble("expiry", &expiry)) { <newline>+      continue; <newline>+    } <newline>+ <newline>+    // Don't fail if this key is not present. <newline>+    (void) state->GetDouble("dynamic_spki_hashes_expiry", <newline>+                            &dynamic_spki_hashes_expiry); <newline>+ <newline>+    ListValue* pins_list = NULL; <newline>+    FingerprintVector preloaded_spki_hashes; <newline>+    if (state->GetList("preloaded_spki_hashes", &pins_list)) <newline>+      SPKIHashesFromListValue(&preloaded_spki_hashes, *pins_list); <newline>+ <newline>+    FingerprintVector dynamic_spki_hashes; <newline>+    if (state->GetList("dynamic_spki_hashes", &pins_list)) <newline>+      SPKIHashesFromListValue(&dynamic_spki_hashes, *pins_list); <newline>+ <newline>+    DomainState::Mode mode; <newline>+    if (mode_string == "strict") { <newline>+      mode = DomainState::MODE_STRICT; <newline>+    } else if (mode_string == "spdy-only") { <newline>+      mode = DomainState::MODE_SPDY_ONLY; <newline>+    } else if (mode_string == "pinning-only") { <newline>+      mode = DomainState::MODE_PINNING_ONLY; <newline>+    } else { <newline>+      LOG(WARNING) << "Unknown TransportSecurityState mode string found: " <newline>+                   << mode_string; <newline>+      continue; <newline>+    } <newline>+ <newline>+    base::Time expiry_time = base::Time::FromDoubleT(expiry); <newline>+    base::Time dynamic_spki_hashes_expiry_time = <newline>+        base::Time::FromDoubleT(dynamic_spki_hashes_expiry); <newline>+    base::Time created_time; <newline>+    if (state->GetDouble("created", &created)) { <newline>+      created_time = base::Time::FromDoubleT(created); <newline>+    } else { <newline>+      // We're migrating an old entry with no creation date. Make sure we <newline>+      // write the new date back in a reasonable time frame. <newline>+      dirtied = true; <newline>+      created_time = base::Time::Now(); <newline>+    } <newline>+ <newline>+    if (expiry_time <= current_time && <newline>+        dynamic_spki_hashes_expiry_time <= current_time) { <newline>+      // Make sure we dirty the state if we drop an entry. <newline>+      dirtied = true; <newline>+      continue; <newline>+    } <newline>+ <newline>+    std::string hashed = ExternalStringToHashedDomain(*i); <newline>+    if (hashed.empty()) { <newline>+      dirtied = true; <newline>+      continue; <newline>+    } <newline>+ <newline>+    DomainState new_state; <newline>+    new_state.mode = mode; <newline>+    new_state.created = created_time; <newline>+    new_state.expiry = expiry_time; <newline>+    new_state.include_subdomains = include_subdomains; <newline>+    new_state.preloaded_spki_hashes = preloaded_spki_hashes; <newline>+    new_state.dynamic_spki_hashes = dynamic_spki_hashes; <newline>+    new_state.dynamic_spki_hashes_expiry = dynamic_spki_hashes_expiry_time; <newline>+    (*out)[hashed] = new_state; <newline>+  } <newline>+ <newline>+  *dirty = dirtied; <newline>+  return true; <newline>+} <newline>+ <newline>+TransportSecurityState::~TransportSecurityState() { <newline>+} <newline>+ <newline>+void TransportSecurityState::DirtyNotify() { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  if (delegate_) <newline>+    delegate_->StateIsDirty(this); <newline>+} <newline>+ <newline>+// static <newline>+std::string TransportSecurityState::CanonicalizeHost(const std::string& host) { <newline>+  // We cannot perform the operations as detailed in the spec here as |host| <newline>+  // has already undergone IDN processing before it reached us. Thus, we check <newline>+  // that there are no invalid characters in the host and lowercase the result. <newline>+ <newline>+  std::string new_host; <newline>+  if (!DNSDomainFromDot(host, &new_host)) { <newline>+    // DNSDomainFromDot can fail if any label is > 63 bytes or if the whole <newline>+    // name is >255 bytes. However, search terms can have those properties. <newline>+    return std::string(); <newline>+  } <newline>+ <newline>+  for (size_t i = 0; new_host[i]; i += new_host[i] + 1) { <newline>+    const unsigned label_length = static_cast<unsigned>(new_host[i]); <newline>+    if (!label_length) <newline>+      break; <newline>+ <newline>+    for (size_t j = 0; j < label_length; ++j) { <newline>+      // RFC 3490, 4.1, step 3 <newline>+      if (!IsSTD3ASCIIValidCharacter(new_host[i + 1 + j])) <newline>+        return std::string(); <newline>+ <newline>+      new_host[i + 1 + j] = tolower(new_host[i + 1 + j]); <newline>+    } <newline>+ <newline>+    // step 3(b) <newline>+    if (new_host[i + 1] == '-' || <newline>+        new_host[i + label_length] == '-') { <newline>+      return std::string(); <newline>+    } <newline>+  } <newline>+ <newline>+  return new_host; <newline>+} <newline>+ <newline>+// |ReportUMAOnPinFailure| uses these to report which domain was associated <newline>+// with the public key pinning failure. <newline>+// <newline>+// DO NOT CHANGE THE ORDERING OF THESE NAMES OR REMOVE ANY OF THEM. Add new <newline>+// domains at the END of the listing (but before DOMAIN_NUM_EVENTS). <newline>+enum SecondLevelDomainName { <newline>+  DOMAIN_NOT_PINNED, <newline>+ <newline>+  DOMAIN_GOOGLE_COM, <newline>+  DOMAIN_ANDROID_COM, <newline>+  DOMAIN_GOOGLE_ANALYTICS_COM, <newline>+  DOMAIN_GOOGLEPLEX_COM, <newline>+  DOMAIN_YTIMG_COM, <newline>+  DOMAIN_GOOGLEUSERCONTENT_COM, <newline>+  DOMAIN_YOUTUBE_COM, <newline>+  DOMAIN_GOOGLEAPIS_COM, <newline>+  DOMAIN_GOOGLEADSERVICES_COM, <newline>+  DOMAIN_GOOGLECODE_COM, <newline>+  DOMAIN_APPSPOT_COM, <newline>+  DOMAIN_GOOGLESYNDICATION_COM, <newline>+  DOMAIN_DOUBLECLICK_NET, <newline>+  DOMAIN_GSTATIC_COM, <newline>+  DOMAIN_GMAIL_COM, <newline>+  DOMAIN_GOOGLEMAIL_COM, <newline>+  DOMAIN_GOOGLEGROUPS_COM, <newline>+ <newline>+  DOMAIN_TORPROJECT_ORG, <newline>+ <newline>+  DOMAIN_TWITTER_COM, <newline>+  DOMAIN_TWIMG_COM, <newline>+ <newline>+  DOMAIN_AKAMAIHD_NET, <newline>+ <newline>+  // Boundary value for UMA_HISTOGRAM_ENUMERATION: <newline>+  DOMAIN_NUM_EVENTS <newline>+}; <newline>+ <newline>+// PublicKeyPins contains a number of SubjectPublicKeyInfo hashes for a site. <newline>+// The validated certificate chain for the site must not include any of <newline>+// |excluded_hashes| and must include one or more of |required_hashes|. <newline>+struct PublicKeyPins { <newline>+  const char* const* required_hashes; <newline>+  const char* const* excluded_hashes; <newline>+}; <newline>+ <newline>+struct HSTSPreload { <newline>+  uint8 length; <newline>+  bool include_subdomains; <newline>+  char dns_name[30]; <newline>+  bool https_required; <newline>+  PublicKeyPins pins; <newline>+  SecondLevelDomainName second_level_domain_name; <newline>+}; <newline>+ <newline>+static bool HasPreload(const struct HSTSPreload* entries, size_t num_entries, <newline>+                       const std::string& canonicalized_host, size_t i, <newline>+                       TransportSecurityState::DomainState* out, bool* ret) { <newline>+  for (size_t j = 0; j < num_entries; j++) { <newline>+    if (entries[j].length == canonicalized_host.size() - i && <newline>+        memcmp(entries[j].dns_name, &canonicalized_host[i], <newline>+               entries[j].length) == 0) { <newline>+      if (!entries[j].include_subdomains && i != 0) { <newline>+        *ret = false; <newline>+      } else { <newline>+        out->include_subdomains = entries[j].include_subdomains; <newline>+        *ret = true; <newline>+        if (!entries[j].https_required) <newline>+          out->mode = TransportSecurityState::DomainState::MODE_PINNING_ONLY; <newline>+        if (entries[j].pins.required_hashes) { <newline>+          const char* const* hash = entries[j].pins.required_hashes; <newline>+          while (*hash) { <newline>+            bool ok = AddHash(*hash, &out->preloaded_spki_hashes); <newline>+            DCHECK(ok) << " failed to parse " << *hash; <newline>+            hash++; <newline>+          } <newline>+        } <newline>+        if (entries[j].pins.excluded_hashes) { <newline>+          const char* const* hash = entries[j].pins.excluded_hashes; <newline>+          while (*hash) { <newline>+            bool ok = AddHash(*hash, &out->bad_preloaded_spki_hashes); <newline>+            DCHECK(ok) << " failed to parse " << *hash; <newline>+            hash++; <newline>+          } <newline>+        } <newline>+      } <newline>+      return true; <newline>+    } <newline>+  } <newline>+  return false; <newline>+} <newline>+ <newline>+// kNoRejectedPublicKeys is a placeholder for when no public keys are rejected. <newline>+static const char* const kNoRejectedPublicKeys[] = { <newline>+  NULL, <newline>+}; <newline>+ <newline>+static const char* const kGoogleAcceptableCerts[] = { <newline>+  kSPKIHash_VeriSignClass3, <newline>+  kSPKIHash_VeriSignClass3_G3, <newline>+  kSPKIHash_Google1024, <newline>+  kSPKIHash_Google2048, <newline>+  kSPKIHash_EquifaxSecureCA, <newline>+  NULL, <newline>+}; <newline>+static const char* const kGoogleRejectedCerts[] = { <newline>+  kSPKIHash_Aetna, <newline>+  kSPKIHash_Intel, <newline>+  kSPKIHash_TCTrustCenter, <newline>+  kSPKIHash_Vodafone, <newline>+  NULL, <newline>+}; <newline>+#define kGooglePins { \ <newline>+  kGoogleAcceptableCerts, \ <newline>+  kGoogleRejectedCerts, \ <newline>+} <newline>+ <newline>+static const char* const kTorAcceptableCerts[] = { <newline>+  kSPKIHash_RapidSSL, <newline>+  kSPKIHash_DigiCertEVRoot, <newline>+  kSPKIHash_Tor1, <newline>+  kSPKIHash_Tor2, <newline>+  kSPKIHash_Tor3, <newline>+  NULL, <newline>+}; <newline>+#define kTorPins { \ <newline>+  kTorAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+static const char* const kTwitterComAcceptableCerts[] = { <newline>+  kSPKIHash_VeriSignClass1, <newline>+  kSPKIHash_VeriSignClass3, <newline>+  kSPKIHash_VeriSignClass3_G4, <newline>+  kSPKIHash_VeriSignClass4_G3, <newline>+  kSPKIHash_VeriSignClass3_G3, <newline>+  kSPKIHash_VeriSignClass1_G3, <newline>+  kSPKIHash_VeriSignClass2_G3, <newline>+  kSPKIHash_VeriSignClass3_G2, <newline>+  kSPKIHash_VeriSignClass2_G2, <newline>+  kSPKIHash_VeriSignClass3_G5, <newline>+  kSPKIHash_VeriSignUniversal, <newline>+  kSPKIHash_GeoTrustGlobal, <newline>+  kSPKIHash_GeoTrustGlobal2, <newline>+  kSPKIHash_GeoTrustUniversal, <newline>+  kSPKIHash_GeoTrustUniversal2, <newline>+  kSPKIHash_GeoTrustPrimary, <newline>+  kSPKIHash_GeoTrustPrimary_G2, <newline>+  kSPKIHash_GeoTrustPrimary_G3, <newline>+  kSPKIHash_Twitter1, <newline>+  NULL, <newline>+}; <newline>+#define kTwitterComPins { \ <newline>+  kTwitterComAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+// kTwitterCDNAcceptableCerts are the set of public keys valid for Twitter's <newline>+// CDNs, which includes all the keys from kTwitterComAcceptableCerts. <newline>+static const char* const kTwitterCDNAcceptableCerts[] = { <newline>+  kSPKIHash_VeriSignClass1, <newline>+  kSPKIHash_VeriSignClass3, <newline>+  kSPKIHash_VeriSignClass3_G4, <newline>+  kSPKIHash_VeriSignClass4_G3, <newline>+  kSPKIHash_VeriSignClass3_G3, <newline>+  kSPKIHash_VeriSignClass1_G3, <newline>+  kSPKIHash_VeriSignClass2_G3, <newline>+  kSPKIHash_VeriSignClass3_G2, <newline>+  kSPKIHash_VeriSignClass2_G2, <newline>+  kSPKIHash_VeriSignClass3_G5, <newline>+  kSPKIHash_VeriSignUniversal, <newline>+  kSPKIHash_GeoTrustGlobal, <newline>+  kSPKIHash_GeoTrustGlobal2, <newline>+  kSPKIHash_GeoTrustUniversal, <newline>+  kSPKIHash_GeoTrustUniversal2, <newline>+  kSPKIHash_GeoTrustPrimary, <newline>+  kSPKIHash_GeoTrustPrimary_G2, <newline>+  kSPKIHash_GeoTrustPrimary_G3, <newline>+  kSPKIHash_Twitter1, <newline>+ <newline>+  kSPKIHash_Entrust_2048, <newline>+  kSPKIHash_Entrust_EV, <newline>+  kSPKIHash_Entrust_G2, <newline>+  kSPKIHash_Entrust_SSL, <newline>+  kSPKIHash_AAACertificateServices, <newline>+  kSPKIHash_AddTrustClass1CARoot, <newline>+  kSPKIHash_AddTrustExternalCARoot, <newline>+  kSPKIHash_AddTrustPublicCARoot, <newline>+  kSPKIHash_AddTrustQualifiedCARoot, <newline>+  kSPKIHash_COMODOCertificationAuthority, <newline>+  kSPKIHash_SecureCertificateServices, <newline>+  kSPKIHash_TrustedCertificateServices, <newline>+  kSPKIHash_UTNDATACorpSGC, <newline>+  kSPKIHash_UTNUSERFirstClientAuthenticationandEmail, <newline>+  kSPKIHash_UTNUSERFirstHardware, <newline>+  kSPKIHash_UTNUSERFirstObject, <newline>+  kSPKIHash_GTECyberTrustGlobalRoot, <newline>+  NULL, <newline>+}; <newline>+#define kTwitterCDNPins { \ <newline>+  kTwitterCDNAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+// kTestAcceptableCerts doesn't actually match any public keys and is used <newline>+// with "pinningtest.appspot.com", below, to test if pinning is active. <newline>+static const char* const kTestAcceptableCerts[] = { <newline>+  "sha1/AAAAAAAAAAAAAAAAAAAAAAAAAAA=", <newline>+  NULL, <newline>+}; <newline>+#define kTestPins { \ <newline>+  kTestAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>+ <newline>+#define kNoPins { \ <newline>+  NULL, NULL, \ <newline>+} <newline>+ <newline>+#if defined(OS_CHROMEOS) <newline>+  static const bool kTwitterHSTS = true; <newline>+#else <newline>+  static const bool kTwitterHSTS = false; <newline>+#endif <newline>+ <newline>+// In the medium term this list is likely to just be hardcoded here. This <newline>+// slightly odd form removes the need for additional relocations records. <newline>+static const struct HSTSPreload kPreloadedSTS[] = { <newline>+  // (*.)google.com, iff using SSL must use an acceptable certificate. <newline>+  {12, true, "\006google\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {25, true, "\013pinningtest\007appspot\003com", false, <newline>+      kTestPins, DOMAIN_APPSPOT_COM }, <newline>+  // Now we force HTTPS for subtrees of google.com. <newline>+  {19, true, "\006health\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM  }, <newline>+  {21, true, "\010checkout\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {19, true, "\006chrome\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004docs\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {18, true, "\005sites\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {25, true, "\014spreadsheets\006google\003com", true, <newline>+      kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {22, false, "\011appengine\006google\003com", true, <newline>+      kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {22, true, "\011encrypted\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {21, true, "\010accounts\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {21, true, "\010profiles\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004mail\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {23, true, "\012talkgadget\006google\003com", true, <newline>+      kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004talk\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {29, true, "\020hostedtalkgadget\006google\003com", true, <newline>+      kGooglePins, DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004plus\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  // Other Google-related domains that must use HTTPS. <newline>+  {20, true, "\006market\007android\003com", true, kGooglePins, <newline>+      DOMAIN_ANDROID_COM }, <newline>+  {26, true, "\003ssl\020google-analytics\003com", true, <newline>+      kGooglePins, DOMAIN_GOOGLE_ANALYTICS_COM }, <newline>+  {18, true, "\005drive\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {16, true, "\012googleplex\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLEPLEX_COM }, <newline>+  {19, true, "\006groups\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  {17, true, "\004apis\006google\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM }, <newline>+  // chart.apis.google.com is *not* HSTS because the certificate doesn't match <newline>+  // and there are lots of links out there that still use the name. The correct <newline>+  // hostname for this is chart.googleapis.com. <newline>+  {23, true, "\005chart\004apis\006google\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLE_COM}, <newline>+ <newline>+  // Other Google-related domains that must use an acceptable certificate <newline>+  // iff using SSL. <newline>+  {11, true, "\005ytimg\003com", false, kGooglePins, <newline>+      DOMAIN_YTIMG_COM }, <newline>+  {23, true, "\021googleusercontent\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLEUSERCONTENT_COM }, <newline>+  {13, true, "\007youtube\003com", false, kGooglePins, <newline>+      DOMAIN_YOUTUBE_COM }, <newline>+  {16, true, "\012googleapis\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLEAPIS_COM }, <newline>+  {22, true, "\020googleadservices\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLEADSERVICES_COM }, <newline>+  {16, true, "\012googlecode\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLECODE_COM }, <newline>+  {13, true, "\007appspot\003com", false, kGooglePins, <newline>+      DOMAIN_APPSPOT_COM }, <newline>+  {23, true, "\021googlesyndication\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLESYNDICATION_COM }, <newline>+  {17, true, "\013doubleclick\003net", false, kGooglePins, <newline>+      DOMAIN_DOUBLECLICK_NET }, <newline>+  {17, true, "\003ssl\007gstatic\003com", false, kGooglePins, <newline>+      DOMAIN_GSTATIC_COM }, <newline>+  // Exclude the learn.doubleclick.net subdomain because it uses a different <newline>+  // CA. <newline>+  {23, true, "\005learn\013doubleclick\003net", false, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  // Now we force HTTPS for other sites that have requested it. <newline>+  {16, false, "\003www\006paypal\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false, "\003www\006elanex\003biz", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true,  "\006jottit\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {19, true,  "\015sunshinepress\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {21, false, "\003www\013noisebridge\003net", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {10, false, "\004neg9\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006riseup\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, false, "\006factor\002cc", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {22, false, "\007members\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {22, false, "\007support\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\002id\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, false, "\005lists\010mayfirst\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {19, true, "\015splendidbacon\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {28, false, "\016aladdinschools\007appspot\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {14, true, "\011ottospora\002nl", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {25, false, "\003www\017paycheckrecords\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {14, false, "\010lastpass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {18, false, "\003www\010lastpass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, true, "\010keyerror\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\010entropia\002de", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\003www\010entropia\002de", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, true, "\005romab\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false, "\012logentries\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, false, "\003www\012logentries\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006stripe\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {27, true, "\025cloudsecurityalliance\003org", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {15, true, "\005login\004sapo\002pt", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {19, true, "\015mattmccutchen\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, true, "\006betnet\002fr", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, true, "\010uprotect\002it", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, false, "\010squareup\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {9, true, "\004cert\002se", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {11, true, "\006crypto\002is", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, true, "\005simon\007butcher\004name", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {10, true, "\004linx\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\007dropcam\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\003www\007dropcam\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {30, true, "\010ebanking\014indovinabank\003com\002vn", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\007epoxate\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false, "\012torproject\003org", true, kTorPins, <newline>+      DOMAIN_TORPROJECT_ORG }, <newline>+  {21, true, "\004blog\012torproject\003org", true, kTorPins, <newline>+      DOMAIN_TORPROJECT_ORG }, <newline>+  {22, true, "\005check\012torproject\003org", true, kTorPins, <newline>+      DOMAIN_TORPROJECT_ORG }, <newline>+  {20, true, "\003www\012torproject\003org", true, kTorPins, <newline>+      DOMAIN_TORPROJECT_ORG }, <newline>+  {22, true, "\003www\014moneybookers\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\013ledgerscope\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {21, false, "\003www\013ledgerscope\003net", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {10, false, "\004kyps\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, false, "\003www\004kyps\003net", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, true, "\003app\007recurly\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, true, "\003api\007recurly\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {13, false, "\007greplin\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {17, false, "\003www\007greplin\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {27, true, "\006luneta\016nearbuysystems\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006ubertt\003org", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {9, true, "\004pixi\002me", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {14, true, "\010grepular\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {16, false , "\012mydigipass\003com", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {20, false , "\003www\012mydigipass\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {26, false , "\011developer\012mydigipass\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {30, false , "\003www\011developer\012mydigipass\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {24, false , "\007sandbox\012mydigipass\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {28, false , "\003www\007sandbox\012mydigipass\003com", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {12, true, "\006crypto\003cat", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+  {25, true, "\014bigshinylock\006minazo\003net", true, kNoPins, <newline>+      DOMAIN_NOT_PINNED }, <newline>+  {10, true, "\005crate\002io", true, kNoPins, DOMAIN_NOT_PINNED }, <newline>+ <newline>+  {13, false, "\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {17, true, "\003www\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {17, true, "\003api\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterCDNPins, DOMAIN_TWITTER_COM }, <newline>+  {19, true, "\005oauth\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {20, true, "\006mobile\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {17, true, "\003dev\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {22, true, "\010business\007twitter\003com", kTwitterHSTS, <newline>+      kTwitterComPins, DOMAIN_TWITTER_COM }, <newline>+  {22, true, "\010platform\007twitter\003com", false, <newline>+      kTwitterCDNPins, DOMAIN_TWITTER_COM }, <newline>+  {15, true, "\003si0\005twimg\003com", false, kTwitterCDNPins, <newline>+      DOMAIN_TWIMG_COM }, <newline>+  {23, true, "\010twimg0-a\010akamaihd\003net", false, <newline>+      kTwitterCDNPins, DOMAIN_AKAMAIHD_NET }, <newline>+}; <newline>+static const size_t kNumPreloadedSTS = ARRAYSIZE_UNSAFE(kPreloadedSTS); <newline>+ <newline>+static const struct HSTSPreload kPreloadedSNISTS[] = { <newline>+  // These SNI-only domains must always use HTTPS. <newline>+  {11, false, "\005gmail\003com", true, kGooglePins, <newline>+      DOMAIN_GMAIL_COM }, <newline>+  {16, false, "\012googlemail\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLEMAIL_COM }, <newline>+  {15, false, "\003www\005gmail\003com", true, kGooglePins, <newline>+      DOMAIN_GMAIL_COM }, <newline>+  {20, false, "\003www\012googlemail\003com", true, kGooglePins, <newline>+      DOMAIN_GOOGLEMAIL_COM }, <newline>+  // These SNI-only domains must use an acceptable certificate iff using <newline>+  // HTTPS. <newline>+  {22, true, "\020google-analytics\003com", false, kGooglePins, <newline>+     DOMAIN_GOOGLE_ANALYTICS_COM }, <newline>+  // www. requires SNI. <newline>+  {18, true, "\014googlegroups\003com", false, kGooglePins, <newline>+      DOMAIN_GOOGLEGROUPS_COM }, <newline>+}; <newline>+static const size_t kNumPreloadedSNISTS = ARRAYSIZE_UNSAFE(kPreloadedSNISTS); <newline>+ <newline>+// Returns the HSTSPreload entry for the |canonicalized_host| in |entries|, <newline>+// or NULL if there is none. Prefers exact hostname matches to those that <newline>+// match only because HSTSPreload.include_subdomains is true. <newline>+// <newline>+// |canonicalized_host| should be the hostname as canonicalized by <newline>+// CanonicalizeHost. <newline>+static const struct HSTSPreload* GetHSTSPreload( <newline>+    const std::string& canonicalized_host, <newline>+    const struct HSTSPreload* entries, <newline>+    size_t num_entries) { <newline>+  for (size_t i = 0; canonicalized_host[i]; i += canonicalized_host[i] + 1) { <newline>+    for (size_t j = 0; j < num_entries; j++) { <newline>+      const struct HSTSPreload* entry = entries + j; <newline>+ <newline>+      if (i != 0 && !entry->include_subdomains) <newline>+        continue; <newline>+ <newline>+      if (entry->length == canonicalized_host.size() - i && <newline>+          memcmp(entry->dns_name, &canonicalized_host[i], entry->length) == 0) { <newline>+        return entry; <newline>+      } <newline>+    } <newline>+  } <newline>+ <newline>+  return NULL; <newline>+} <newline>+ <newline>+// static <newline>+bool TransportSecurityState::IsGooglePinnedProperty(const std::string& host, <newline>+                                                    bool sni_available) { <newline>+  std::string canonicalized_host = CanonicalizeHost(host); <newline>+  const struct HSTSPreload* entry = <newline>+      GetHSTSPreload(canonicalized_host, kPreloadedSTS, kNumPreloadedSTS); <newline>+ <newline>+  if (entry && entry->pins.required_hashes == kGoogleAcceptableCerts) <newline>+    return true; <newline>+ <newline>+  if (sni_available) { <newline>+    entry = GetHSTSPreload(canonicalized_host, kPreloadedSNISTS, <newline>+                           kNumPreloadedSNISTS); <newline>+    if (entry && entry->pins.required_hashes == kGoogleAcceptableCerts) <newline>+      return true; <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+// static <newline>+void TransportSecurityState::ReportUMAOnPinFailure(const std::string& host) { <newline>+  std::string canonicalized_host = CanonicalizeHost(host); <newline>+ <newline>+  const struct HSTSPreload* entry = <newline>+      GetHSTSPreload(canonicalized_host, kPreloadedSTS, kNumPreloadedSTS); <newline>+ <newline>+  if (!entry) { <newline>+    entry = GetHSTSPreload(canonicalized_host, kPreloadedSNISTS, <newline>+                           kNumPreloadedSNISTS); <newline>+  } <newline>+ <newline>+  DCHECK(entry); <newline>+  DCHECK(entry->pins.required_hashes); <newline>+  DCHECK(entry->second_level_domain_name != DOMAIN_NOT_PINNED); <newline>+ <newline>+  UMA_HISTOGRAM_ENUMERATION("Net.PublicKeyPinFailureDomain", <newline>+                            entry->second_level_domain_name, DOMAIN_NUM_EVENTS); <newline>+} <newline>+ <newline>+// IsPreloadedSTS returns true if the canonicalized hostname should always be <newline>+// considered to have STS enabled. <newline>+bool TransportSecurityState::IsPreloadedSTS( <newline>+    const std::string& canonicalized_host, <newline>+    bool sni_available, <newline>+    DomainState* out) { <newline>+  DCHECK(CalledOnValidThread()); <newline>+ <newline>+  out->preloaded = true; <newline>+  out->mode = DomainState::MODE_STRICT; <newline>+  out->include_subdomains = false; <newline>+ <newline>+  for (size_t i = 0; canonicalized_host[i]; i += canonicalized_host[i] + 1) { <newline>+    std::string host_sub_chunk(&canonicalized_host[i], <newline>+                               canonicalized_host.size() - i); <newline>+    out->domain = DNSDomainToString(host_sub_chunk); <newline>+    std::string hashed_host(HashHost(host_sub_chunk)); <newline>+    if (forced_hosts_.find(hashed_host) != forced_hosts_.end()) { <newline>+      *out = forced_hosts_[hashed_host]; <newline>+      out->domain = DNSDomainToString(host_sub_chunk); <newline>+      out->preloaded = true; <newline>+      return true; <newline>+    } <newline>+    bool ret; <newline>+    if (HasPreload(kPreloadedSTS, kNumPreloadedSTS, canonicalized_host, i, out, <newline>+                   &ret)) { <newline>+      return ret; <newline>+    } <newline>+    if (sni_available && <newline>+        HasPreload(kPreloadedSNISTS, kNumPreloadedSNISTS, canonicalized_host, i, <newline>+                   out, &ret)) { <newline>+      return ret; <newline>+    } <newline>+  } <newline>+ <newline>+  return false; <newline>+} <newline>+ <newline>+static std::string HashesToBase64String( <newline>+    const FingerprintVector& hashes) { <newline>+  std::vector<std::string> hashes_strs; <newline>+  for (FingerprintVector::const_iterator <newline>+       i = hashes.begin(); i != hashes.end(); i++) { <newline>+    std::string s; <newline>+    const std::string hash_str(reinterpret_cast<const char*>(i->data), <newline>+                               sizeof(i->data)); <newline>+    base::Base64Encode(hash_str, &s); <newline>+    hashes_strs.push_back(s); <newline>+  } <newline>+ <newline>+  return JoinString(hashes_strs, ','); <newline>+} <newline>+ <newline>+TransportSecurityState::DomainState::DomainState() <newline>+    : mode(MODE_STRICT), <newline>+      created(base::Time::Now()), <newline>+      include_subdomains(false), <newline>+      preloaded(false) { <newline>+} <newline>+ <newline>+TransportSecurityState::DomainState::~DomainState() { <newline>+} <newline>+ <newline>+bool TransportSecurityState::DomainState::IsChainOfPublicKeysPermitted( <newline>+    const FingerprintVector& hashes) { <newline>+ <newline>+  if (HashesIntersect(bad_preloaded_spki_hashes, hashes)) { <newline>+    LOG(ERROR) << "Rejecting public key chain for domain " << domain <newline>+               << ". Validated chain: " << HashesToBase64String(hashes) <newline>+               << ", matches one or more bad hashes: " <newline>+               << HashesToBase64String(bad_preloaded_spki_hashes); <newline>+    return false; <newline>+  } <newline>+ <newline>+  if (!(dynamic_spki_hashes.empty() && preloaded_spki_hashes.empty()) && <newline>+      !HashesIntersect(dynamic_spki_hashes, hashes) && <newline>+      !HashesIntersect(preloaded_spki_hashes, hashes)) { <newline>+    LOG(ERROR) << "Rejecting public key chain for domain " << domain <newline>+               << ". Validated chain: " << HashesToBase64String(hashes) <newline>+               << ", expected: " << HashesToBase64String(dynamic_spki_hashes) <newline>+               << " or: " << HashesToBase64String(preloaded_spki_hashes); <newline>+ <newline>+    return false; <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+bool TransportSecurityState::DomainState::IsMoreStrict( <newline>+    const TransportSecurityState::DomainState& other) { <newline>+  if (this->dynamic_spki_hashes.empty() && !other.dynamic_spki_hashes.empty()) <newline>+    return false; <newline>+ <newline>+  if (!this->include_subdomains && other.include_subdomains) <newline>+    return false; <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline>+bool TransportSecurityState::DomainState::ShouldRedirectHTTPToHTTPS() <newline>+    const { <newline>+  return mode == MODE_STRICT; <newline>+} <newline>+ <newline>+}  // namespace
105e7c339a9e785891b130239c9a96356c4b0b4	alexeypa@chromium.org <alexeypa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 20 21:22:23 2012 +0000	Enable positional parameters for base::vsnprintf and base::vswprintf on Windows. This is to avoid bugs like http://code.google.com/p/chromium/issues/detail?id=118064 in the future. Positional parameters are supported by the VC++ runtime via the set of "_p" flavored printf-like routines. MSDN claims that "By default the positional functions behave identically to the non position ones, if no positional formatting is present." There is a little difference that require some attention though. Currently base::vsnprintf and base::vswprintf wrappers use "_s" functions (so called "security enhanced versions"). Judging by looking at the CRT code, _p functions implement the same checks as _s ones do. The base wrappers call the CRT routines so that count == (sizeOfBuffer - 1). This reduces most of the additional code in _vsnprintf_s (comparing to _vsprintf_p) to no-op. Namely: 1. When truncation happens the tail of the buffer is filled with a pattern: _SECURECRT__FILL_STRING(string, sizeInBytes, count + 1); This does not happen in our case because sizeInBytes == count + 1. 2. The special case check shown below was never true since sizeInBytes != count in our case: if (count == 0 && string == NULL && sizeInBytes == 0) 3. The following checks in _vsnprintf_s are also implemented in _vsnprintf_helper: _VALIDATE_RETURN(format != NULL, EINVAL, -1); _VALIDATE_RETURN(string != NULL && sizeInBytes > 0, EINVAL, -1); The only remaining difference between _vsnprintf_s and _vsprintf_p is that the former NULL-terminates the buffer and fills the rest a pattern if _vsnprintf_helper failed because of any reason other than truncation: string[0] = 0; _SECURECRT__FILL_STRING(string, sizeInBytes, 1); This CL write NULL to the end of the buffer in any error case (truncation or other reason).			http://codereview.chromium.org/9702002	svn://svn.chromium.org/chrome/trunk/src@127788 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/stringprintf_unittest.cc b/base/stringprintf_unittest.cc <newline>index ffb9c77..6f4458b 100644 <newline>--- a/base/stringprintf_unittest.cc <newline>+++ b/base/stringprintf_unittest.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -149,4 +149,17 @@ TEST(StringPrintfTest, Invalid) { <newline> } <newline> #endif <newline>+// Test that the positional parameters work. <newline>+TEST(StringPrintfTest, PositionalParameters) { <newline>+  std::string out; <newline>+  SStringPrintf(&out, "%1$s %1$s", "test"); <newline>+  EXPECT_STREQ("test test", out.c_str()); <newline>+ <newline>+#if defined(OS_WIN) <newline>+  std::wstring wout; <newline>+  SStringPrintf(&wout, L"%1$ls %1$ls", L"test"); <newline>+  EXPECT_STREQ(L"test test", wout.c_str()); <newline>+#endif <newline>+} <newline>+ <newline> }  // namespace base
9913e7a98457fc2a25f89328fd639e17ffdf427	alexeypa@chromium.org <alexeypa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 20 21:22:23 2012 +0000	Enable positional parameters for base::vsnprintf and base::vswprintf on Windows. This is to avoid bugs like http://code.google.com/p/chromium/issues/detail?id=118064 in the future. Positional parameters are supported by the VC++ runtime via the set of "_p" flavored printf-like routines. MSDN claims that "By default the positional functions behave identically to the non position ones, if no positional formatting is present." There is a little difference that require some attention though. Currently base::vsnprintf and base::vswprintf wrappers use "_s" functions (so called "security enhanced versions"). Judging by looking at the CRT code, _p functions implement the same checks as _s ones do. The base wrappers call the CRT routines so that count == (sizeOfBuffer - 1). This reduces most of the additional code in _vsnprintf_s (comparing to _vsprintf_p) to no-op. Namely: 1. When truncation happens the tail of the buffer is filled with a pattern: _SECURECRT__FILL_STRING(string, sizeInBytes, count + 1); This does not happen in our case because sizeInBytes == count + 1. 2. The special case check shown below was never true since sizeInBytes != count in our case: if (count == 0 && string == NULL && sizeInBytes == 0) 3. The following checks in _vsnprintf_s are also implemented in _vsnprintf_helper: _VALIDATE_RETURN(format != NULL, EINVAL, -1); _VALIDATE_RETURN(string != NULL && sizeInBytes > 0, EINVAL, -1); The only remaining difference between _vsnprintf_s and _vsprintf_p is that the former NULL-terminates the buffer and fills the rest a pattern if _vsnprintf_helper failed because of any reason other than truncation: string[0] = 0; _SECURECRT__FILL_STRING(string, sizeInBytes, 1); This CL write NULL to the end of the buffer in any error case (truncation or other reason).			http://codereview.chromium.org/9702002	svn://svn.chromium.org/chrome/trunk/src@127788 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/stringprintf_unittest.cc b/base/stringprintf_unittest.cc <newline>index ffb9c77..6f4458b 100644 <newline>--- a/base/stringprintf_unittest.cc <newline>+++ b/base/stringprintf_unittest.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -149,4 +149,17 @@ TEST(StringPrintfTest, Invalid) { <newline> } <newline> #endif <newline>+// Test that the positional parameters work. <newline>+TEST(StringPrintfTest, PositionalParameters) { <newline>+  std::string out; <newline>+  SStringPrintf(&out, "%1$s %1$s", "test"); <newline>+  EXPECT_STREQ("test test", out.c_str()); <newline>+ <newline>+#if defined(OS_WIN) <newline>+  std::wstring wout; <newline>+  SStringPrintf(&wout, L"%1$ls %1$ls", L"test"); <newline>+  EXPECT_STREQ(L"test test", wout.c_str()); <newline>+#endif <newline>+} <newline>+ <newline> }  // namespace base
6e0db1296382970af257c295b4787a7b12a2724	dalecurtis@google.com <dalecurtis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 20 20:13:17 2012 +0000	Roll FFmpeg DEPS for mp3 and security fixes. ffmpeg_revision: http://src.chromium.org/viewvc/chrome/trunk/deps/third_party/ffmpeg/?view=log ffmpeg_hash: http://git.chromium.org/gitweb/?p=chromium/third_party/ffmpeg.git&a=commit Pulls in the following upstream patches: c7a9f96 vp8: avoid race condition on segment map. 0781696 threads: fix old frames returned after avcodec_flush_buffers() 7d627c4 mp3_probe: consider id3 tags to be low scoring mp3. TEST=ffmpeg_regression_tests, media_unittests, manual playback.	93932, 110309		https://chromiumcodereview.appspot.com/9742001	svn://svn.chromium.org/chrome/trunk/src@127759 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 0d8f678..8407308 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -46,8 +46,8 @@ vars = { <newline>   # These two FFmpeg variables must be updated together.  One is used for SVN <newline>   # checkouts and the other for Git checkouts. <newline>-  "ffmpeg_revision": "126470", <newline>-  "ffmpeg_hash": "ddcf259fa5fb83159d441bd71f54e617e2a4afd3", <newline>+  "ffmpeg_revision": "127595", <newline>+  "ffmpeg_hash": "c4db435602131b218d0c39e85ccf18a4be195e60", <newline>   "sfntly_revision": "128", <newline>   "skia_revision": "3441",
6e3afcd0cd30d1887773f6524ae25ebffd313ea	dalecurtis@google.com <dalecurtis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 20 20:13:17 2012 +0000	Roll FFmpeg DEPS for mp3 and security fixes. ffmpeg_revision: http://src.chromium.org/viewvc/chrome/trunk/deps/third_party/ffmpeg/?view=log ffmpeg_hash: http://git.chromium.org/gitweb/?p=chromium/third_party/ffmpeg.git&a=commit Pulls in the following upstream patches: c7a9f96 vp8: avoid race condition on segment map. 0781696 threads: fix old frames returned after avcodec_flush_buffers() 7d627c4 mp3_probe: consider id3 tags to be low scoring mp3. TEST=ffmpeg_regression_tests, media_unittests, manual playback.	93932, 110309		https://chromiumcodereview.appspot.com/9742001	svn://svn.chromium.org/chrome/trunk/src@127759 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 0d8f678..8407308 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -46,8 +46,8 @@ vars = { <newline>   # These two FFmpeg variables must be updated together.  One is used for SVN <newline>   # checkouts and the other for Git checkouts. <newline>-  "ffmpeg_revision": "126470", <newline>-  "ffmpeg_hash": "ddcf259fa5fb83159d441bd71f54e617e2a4afd3", <newline>+  "ffmpeg_revision": "127595", <newline>+  "ffmpeg_hash": "c4db435602131b218d0c39e85ccf18a4be195e60", <newline>   "sfntly_revision": "128", <newline>   "skia_revision": "3441",
ef8bcc2fda766c2ae22eac9c8f47dbb07e8ebdb	keybuk@google.com <keybuk@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 19 18:16:41 2012 +0000	bluetooth: add support for Passkey pairing Bluetooth 2.1 onwards defines a pairing mechanism where a device without capability for Input or Display, and that declines Passkey-less pairing for security reasons, can require us to enter a six-digit numeric Passkey to perform pairing. This will, of course, never happen. But in case it does, implement support for it. This requires us knowing whether the device is expecting a PIN Code or Passkey, and in the latter case converting the String we receive from JavaScript into a numeric to return. TEST=verified with a fake device Change-Id: I0fe420f8fab7073ab8c158eb372ec227f7fa53f5 R=satorux1@chromium.org	chromium-os:21320		https://chromiumcodereview.appspot.com/9704074	svn://svn.chromium.org/chrome/trunk/src@127506 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/options2/chromeos/bluetooth_options_handler2.cc b/chrome/browser/ui/webui/options2/chromeos/bluetooth_options_handler2.cc <newline>index dd45c75..b1cce391 100644 <newline>--- a/chrome/browser/ui/webui/options2/chromeos/bluetooth_options_handler2.cc <newline>+++ b/chrome/browser/ui/webui/options2/chromeos/bluetooth_options_handler2.cc <newline>@@ -6,6 +6,7 @@ <newline> #include "base/bind.h" <newline> #include "base/command_line.h" <newline>+#include "base/string_number_conversions.h" <newline> #include "base/utf_string_conversions.h" <newline> #include "base/values.h" <newline> #include "chrome/browser/chromeos/bluetooth/bluetooth_adapter.h" <newline>@@ -23,7 +24,7 @@ namespace { <newline> // value stored in each list element is indicated by the following constants. <newline> const int kUpdateDeviceAddressIndex = 0; <newline> const int kUpdateDeviceCommandIndex = 1; <newline>-const int kUpdateDevicePasskeyIndex = 2; <newline>+const int kUpdateDeviceAuthTokenIndex = 2; <newline> // |UpdateDeviceCallback| provides a command value of one of the following <newline> // constants that indicates what update it is providing to us. <newline>@@ -233,14 +234,33 @@ void BluetoothOptionsHandler::UpdateDeviceCallback( <newline>   if (command == kConnectCommand) { <newline>     int size = args->GetSize(); <newline>-    if (size > kUpdateDevicePasskeyIndex) { <newline>+    if (size > kUpdateDeviceAuthTokenIndex) { <newline>       // PIN code or Passkey entry during the pairing process. <newline>-      // TODO(keybuk, kevers): disambiguate PIN (string) vs. Passkey (integer) <newline>-      std::string pincode; <newline>-      args->GetString(kUpdateDevicePasskeyIndex, &pincode); <newline>-      DVLOG(1) << "PIN code supplied: " << address << ": " << pincode; <newline>- <newline>-      device->SetPinCode(pincode); <newline>+      std::string auth_token; <newline>+      args->GetString(kUpdateDeviceAuthTokenIndex, &auth_token); <newline>+ <newline>+      if (device->ExpectingPinCode()) { <newline>+        // PIN Code is an array of 1 to 16 8-bit bytes, the usual <newline>+        // interpretation, and the one shared by BlueZ, is a UTF-8 string <newline>+        // of as many characters that will fit in that space, thus we <newline>+        // can use the auth token from JavaScript unmodified. <newline>+        DVLOG(1) << "PIN Code supplied: " << address << ": " << auth_token; <newline>+        device->SetPinCode(auth_token); <newline>+      } else if (device->ExpectingPasskey()) { <newline>+        // Passkey is a numeric in the range 0-999999, in this case the <newline>+        // JavaScript code should have ensured the auth token string only <newline>+        // contains digits so a simple conversion is sufficient. In the <newline>+        // failure case, just use 0 since that's the most likely Passkey <newline>+        // anyway, and if it's refused the device will request a new one. <newline>+        unsigned passkey = 0; <newline>+        base::StringToUint(auth_token, &passkey); <newline>+ <newline>+        DVLOG(1) << "Passkey supplied: " << address << ": " << passkey; <newline>+        device->SetPasskey(passkey); <newline>+      } else { <newline>+        LOG(WARNING) << "Auth token supplied after pairing ended: " << address <newline>+                     << ": " << auth_token; <newline>+      } <newline>     } else { <newline>       // Connection request. <newline>       DVLOG(1) << "Connect: " << address;
84a65aef61f9809cbe083ef93fb66ff016d5776	keybuk@google.com <keybuk@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 19 18:16:41 2012 +0000	bluetooth: add support for Passkey pairing Bluetooth 2.1 onwards defines a pairing mechanism where a device without capability for Input or Display, and that declines Passkey-less pairing for security reasons, can require us to enter a six-digit numeric Passkey to perform pairing. This will, of course, never happen. But in case it does, implement support for it. This requires us knowing whether the device is expecting a PIN Code or Passkey, and in the latter case converting the String we receive from JavaScript into a numeric to return. TEST=verified with a fake device Change-Id: I0fe420f8fab7073ab8c158eb372ec227f7fa53f5 R=satorux1@chromium.org	chromium-os:21320		https://chromiumcodereview.appspot.com/9704074	svn://svn.chromium.org/chrome/trunk/src@127506 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/options2/chromeos/bluetooth_options_handler2.cc b/chrome/browser/ui/webui/options2/chromeos/bluetooth_options_handler2.cc <newline>index dd45c75..b1cce391 100644 <newline>--- a/chrome/browser/ui/webui/options2/chromeos/bluetooth_options_handler2.cc <newline>+++ b/chrome/browser/ui/webui/options2/chromeos/bluetooth_options_handler2.cc <newline>@@ -6,6 +6,7 @@ <newline> #include "base/bind.h" <newline> #include "base/command_line.h" <newline>+#include "base/string_number_conversions.h" <newline> #include "base/utf_string_conversions.h" <newline> #include "base/values.h" <newline> #include "chrome/browser/chromeos/bluetooth/bluetooth_adapter.h" <newline>@@ -23,7 +24,7 @@ namespace { <newline> // value stored in each list element is indicated by the following constants. <newline> const int kUpdateDeviceAddressIndex = 0; <newline> const int kUpdateDeviceCommandIndex = 1; <newline>-const int kUpdateDevicePasskeyIndex = 2; <newline>+const int kUpdateDeviceAuthTokenIndex = 2; <newline> // |UpdateDeviceCallback| provides a command value of one of the following <newline> // constants that indicates what update it is providing to us. <newline>@@ -233,14 +234,33 @@ void BluetoothOptionsHandler::UpdateDeviceCallback( <newline>   if (command == kConnectCommand) { <newline>     int size = args->GetSize(); <newline>-    if (size > kUpdateDevicePasskeyIndex) { <newline>+    if (size > kUpdateDeviceAuthTokenIndex) { <newline>       // PIN code or Passkey entry during the pairing process. <newline>-      // TODO(keybuk, kevers): disambiguate PIN (string) vs. Passkey (integer) <newline>-      std::string pincode; <newline>-      args->GetString(kUpdateDevicePasskeyIndex, &pincode); <newline>-      DVLOG(1) << "PIN code supplied: " << address << ": " << pincode; <newline>- <newline>-      device->SetPinCode(pincode); <newline>+      std::string auth_token; <newline>+      args->GetString(kUpdateDeviceAuthTokenIndex, &auth_token); <newline>+ <newline>+      if (device->ExpectingPinCode()) { <newline>+        // PIN Code is an array of 1 to 16 8-bit bytes, the usual <newline>+        // interpretation, and the one shared by BlueZ, is a UTF-8 string <newline>+        // of as many characters that will fit in that space, thus we <newline>+        // can use the auth token from JavaScript unmodified. <newline>+        DVLOG(1) << "PIN Code supplied: " << address << ": " << auth_token; <newline>+        device->SetPinCode(auth_token); <newline>+      } else if (device->ExpectingPasskey()) { <newline>+        // Passkey is a numeric in the range 0-999999, in this case the <newline>+        // JavaScript code should have ensured the auth token string only <newline>+        // contains digits so a simple conversion is sufficient. In the <newline>+        // failure case, just use 0 since that's the most likely Passkey <newline>+        // anyway, and if it's refused the device will request a new one. <newline>+        unsigned passkey = 0; <newline>+        base::StringToUint(auth_token, &passkey); <newline>+ <newline>+        DVLOG(1) << "Passkey supplied: " << address << ": " << passkey; <newline>+        device->SetPasskey(passkey); <newline>+      } else { <newline>+        LOG(WARNING) << "Auth token supplied after pairing ended: " << address <newline>+                     << ": " << auth_token; <newline>+      } <newline>     } else { <newline>       // Connection request. <newline>       DVLOG(1) << "Connect: " << address;
bfb531f82278bede5d4bd78ceb012f3f6d85bfb	rsleevi@chromium.org <rsleevi@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 15 05:21:47 2012 +0000	Revert 126777 - Broke 'win' trybot (shared + all = fails linking pyautolib due to over swigging) Exposed GetSecurityState and GetPageType to pyAuto. The GetSecurityState retrieves different security states for the current tab. The GetPageType returns the type of page showing (normal, interstitial, error). Added additional tests that uses the exposed hooks. - testSSLCertOK - testSSLCertIsExpiredAndCertNameMismatches - testSSLCertAuthorityOK TEST=none TBR=dyu@chromium.org	none		https://chromiumcodereview.appspot.com/9705052	svn://svn.chromium.org/chrome/trunk/src@126848 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/pyautolib/pyautolib.i b/chrome/test/pyautolib/pyautolib.i <newline>index 8d3c60a..5c15397 100644 <newline>--- a/chrome/test/pyautolib/pyautolib.i <newline>+++ b/chrome/test/pyautolib/pyautolib.i <newline>@@ -17,10 +17,8 @@ <newline> %module(docstring="Python interface to Automation Proxy.") pyautolib <newline> %feature("autodoc", "1"); <newline>-%include <cpointer.i> <newline>-%include <std_string.i> <newline> %include <std_wstring.i> <newline>-%include <typemaps.i> <newline>+%include <std_string.i> <newline> %include "chrome/test/pyautolib/argc_argv.i" <newline>@@ -32,11 +30,6 @@ <newline> %include "chrome/app/chrome_dll_resource.h" <newline> %include "chrome/common/automation_constants.h" <newline> %include "chrome/common/pref_names.h" <newline>-%include "content/public/common/page_type.h" <newline>-%include "content/public/common/security_style.h" <newline>-// Must come before cert_status_flags.h <newline>-%include "net/base/net_export.h" <newline>-%include "net/base/cert_status_flags.h" <newline> %{ <newline> #include "chrome/common/automation_constants.h" <newline>@@ -154,42 +147,6 @@ class TabProxy { <newline>           "button, if false to 'Take me out of there' button.") <newline>       TakeActionOnSSLBlockingPage; <newline>   bool TakeActionOnSSLBlockingPage(bool proceed); <newline>-  %extend { <newline>-    %feature("docstring", "Retrieves the different security states for the " <newline>-             "current tab.") <newline>-        GetSecurityState; <newline>-    PyObject* GetSecurityState() { <newline>-      content::SecurityStyle security_style; <newline>-      net::CertStatus ssl_cert_status; <newline>-      int insecure_content_status; <newline>-      PyObject* result_dict = PyDict_New(); <newline>-      if ($self->GetSecurityState( <newline>-          &security_style, &ssl_cert_status, &insecure_content_status)) { <newline>-        PyDict_SetItem(result_dict, PyString_FromString("security_style"), <newline>-                       PyInt_FromLong(security_style)); <newline>-        PyDict_SetItem(result_dict, PyString_FromString("ssl_cert_status"), <newline>-                       PyInt_FromLong(ssl_cert_status)); <newline>-        PyDict_SetItem(result_dict, <newline>-                       PyString_FromString("insecure_content_status"), <newline>-                       PyInt_FromLong(insecure_content_status)); <newline>-      } <newline>-      return result_dict; <newline>-    } <newline>-  }; <newline>-  %extend { <newline>-    %feature("docstring", "Returns the type of page currently showing " <newline>-             "(normal, interstitial, error.") <newline>-        GetPageType; <newline>-    PyObject* GetPageType() { <newline>-      content::PageType page_type; <newline>-      PyObject* result_dict = PyDict_New(); <newline>-      if ($self->GetPageType(&page_type)) { <newline>-        PyDict_SetItem(result_dict, PyString_FromString("page_type"), <newline>-                       PyInt_FromLong(page_type)); <newline>-      } <newline>-      return result_dict; <newline>-    } <newline>-  }; <newline>   // HTTP Auth <newline>   %feature("docstring", <newline>@@ -518,6 +475,3 @@ struct HTTPSOptions { <newline> %{ <newline> typedef net::TestServer::HTTPSOptions HTTPSOptions; <newline> %} <newline>- <newline>-%pointer_class(int, int_ptr); <newline>-%pointer_class(uint32, uint32_ptr);
fd13395a6cfaecb0463563b4deaa1e7b8eff87c	rsleevi@chromium.org <rsleevi@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 15 05:21:47 2012 +0000	Revert 126777 - Broke 'win' trybot (shared + all = fails linking pyautolib due to over swigging) Exposed GetSecurityState and GetPageType to pyAuto. The GetSecurityState retrieves different security states for the current tab. The GetPageType returns the type of page showing (normal, interstitial, error). Added additional tests that uses the exposed hooks. - testSSLCertOK - testSSLCertIsExpiredAndCertNameMismatches - testSSLCertAuthorityOK TEST=none TBR=dyu@chromium.org	none		https://chromiumcodereview.appspot.com/9705052	svn://svn.chromium.org/chrome/trunk/src@126848 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/pyautolib/pyautolib.i b/chrome/test/pyautolib/pyautolib.i <newline>index 8d3c60a..5c15397 100644 <newline>--- a/chrome/test/pyautolib/pyautolib.i <newline>+++ b/chrome/test/pyautolib/pyautolib.i <newline>@@ -17,10 +17,8 @@ <newline> %module(docstring="Python interface to Automation Proxy.") pyautolib <newline> %feature("autodoc", "1"); <newline>-%include <cpointer.i> <newline>-%include <std_string.i> <newline> %include <std_wstring.i> <newline>-%include <typemaps.i> <newline>+%include <std_string.i> <newline> %include "chrome/test/pyautolib/argc_argv.i" <newline>@@ -32,11 +30,6 @@ <newline> %include "chrome/app/chrome_dll_resource.h" <newline> %include "chrome/common/automation_constants.h" <newline> %include "chrome/common/pref_names.h" <newline>-%include "content/public/common/page_type.h" <newline>-%include "content/public/common/security_style.h" <newline>-// Must come before cert_status_flags.h <newline>-%include "net/base/net_export.h" <newline>-%include "net/base/cert_status_flags.h" <newline> %{ <newline> #include "chrome/common/automation_constants.h" <newline>@@ -154,42 +147,6 @@ class TabProxy { <newline>           "button, if false to 'Take me out of there' button.") <newline>       TakeActionOnSSLBlockingPage; <newline>   bool TakeActionOnSSLBlockingPage(bool proceed); <newline>-  %extend { <newline>-    %feature("docstring", "Retrieves the different security states for the " <newline>-             "current tab.") <newline>-        GetSecurityState; <newline>-    PyObject* GetSecurityState() { <newline>-      content::SecurityStyle security_style; <newline>-      net::CertStatus ssl_cert_status; <newline>-      int insecure_content_status; <newline>-      PyObject* result_dict = PyDict_New(); <newline>-      if ($self->GetSecurityState( <newline>-          &security_style, &ssl_cert_status, &insecure_content_status)) { <newline>-        PyDict_SetItem(result_dict, PyString_FromString("security_style"), <newline>-                       PyInt_FromLong(security_style)); <newline>-        PyDict_SetItem(result_dict, PyString_FromString("ssl_cert_status"), <newline>-                       PyInt_FromLong(ssl_cert_status)); <newline>-        PyDict_SetItem(result_dict, <newline>-                       PyString_FromString("insecure_content_status"), <newline>-                       PyInt_FromLong(insecure_content_status)); <newline>-      } <newline>-      return result_dict; <newline>-    } <newline>-  }; <newline>-  %extend { <newline>-    %feature("docstring", "Returns the type of page currently showing " <newline>-             "(normal, interstitial, error.") <newline>-        GetPageType; <newline>-    PyObject* GetPageType() { <newline>-      content::PageType page_type; <newline>-      PyObject* result_dict = PyDict_New(); <newline>-      if ($self->GetPageType(&page_type)) { <newline>-        PyDict_SetItem(result_dict, PyString_FromString("page_type"), <newline>-                       PyInt_FromLong(page_type)); <newline>-      } <newline>-      return result_dict; <newline>-    } <newline>-  }; <newline>   // HTTP Auth <newline>   %feature("docstring", <newline>@@ -518,6 +475,3 @@ struct HTTPSOptions { <newline> %{ <newline> typedef net::TestServer::HTTPSOptions HTTPSOptions; <newline> %} <newline>- <newline>-%pointer_class(int, int_ptr); <newline>-%pointer_class(uint32, uint32_ptr);
c64c8d67434b00be4d820f0f0046efbc19ee320	dyu@chromium.org <dyu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 14 23:10:46 2012 +0000	Exposed GetSecurityState and GetPageType to pyAuto. The GetSecurityState retrieves different security states for the current tab. The GetPageType returns the type of page showing (normal, interstitial, error). Added additional tests that uses the exposed hooks. - testSSLCertOK - testSSLCertIsExpiredAndCertNameMismatches - testSSLCertAuthorityOK TEST=none	none		https://chromiumcodereview.appspot.com/9535022	svn://svn.chromium.org/chrome/trunk/src@126777 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/pyautolib/pyautolib.i b/chrome/test/pyautolib/pyautolib.i <newline>index 5c15397..8d3c60a 100644 <newline>--- a/chrome/test/pyautolib/pyautolib.i <newline>+++ b/chrome/test/pyautolib/pyautolib.i <newline>@@ -17,8 +17,10 @@ <newline> %module(docstring="Python interface to Automation Proxy.") pyautolib <newline> %feature("autodoc", "1"); <newline>-%include <std_wstring.i> <newline>+%include <cpointer.i> <newline> %include <std_string.i> <newline>+%include <std_wstring.i> <newline>+%include <typemaps.i> <newline> %include "chrome/test/pyautolib/argc_argv.i" <newline>@@ -30,6 +32,11 @@ <newline> %include "chrome/app/chrome_dll_resource.h" <newline> %include "chrome/common/automation_constants.h" <newline> %include "chrome/common/pref_names.h" <newline>+%include "content/public/common/page_type.h" <newline>+%include "content/public/common/security_style.h" <newline>+// Must come before cert_status_flags.h <newline>+%include "net/base/net_export.h" <newline>+%include "net/base/cert_status_flags.h" <newline> %{ <newline> #include "chrome/common/automation_constants.h" <newline>@@ -147,6 +154,42 @@ class TabProxy { <newline>           "button, if false to 'Take me out of there' button.") <newline>       TakeActionOnSSLBlockingPage; <newline>   bool TakeActionOnSSLBlockingPage(bool proceed); <newline>+  %extend { <newline>+    %feature("docstring", "Retrieves the different security states for the " <newline>+             "current tab.") <newline>+        GetSecurityState; <newline>+    PyObject* GetSecurityState() { <newline>+      content::SecurityStyle security_style; <newline>+      net::CertStatus ssl_cert_status; <newline>+      int insecure_content_status; <newline>+      PyObject* result_dict = PyDict_New(); <newline>+      if ($self->GetSecurityState( <newline>+          &security_style, &ssl_cert_status, &insecure_content_status)) { <newline>+        PyDict_SetItem(result_dict, PyString_FromString("security_style"), <newline>+                       PyInt_FromLong(security_style)); <newline>+        PyDict_SetItem(result_dict, PyString_FromString("ssl_cert_status"), <newline>+                       PyInt_FromLong(ssl_cert_status)); <newline>+        PyDict_SetItem(result_dict, <newline>+                       PyString_FromString("insecure_content_status"), <newline>+                       PyInt_FromLong(insecure_content_status)); <newline>+      } <newline>+      return result_dict; <newline>+    } <newline>+  }; <newline>+  %extend { <newline>+    %feature("docstring", "Returns the type of page currently showing " <newline>+             "(normal, interstitial, error.") <newline>+        GetPageType; <newline>+    PyObject* GetPageType() { <newline>+      content::PageType page_type; <newline>+      PyObject* result_dict = PyDict_New(); <newline>+      if ($self->GetPageType(&page_type)) { <newline>+        PyDict_SetItem(result_dict, PyString_FromString("page_type"), <newline>+                       PyInt_FromLong(page_type)); <newline>+      } <newline>+      return result_dict; <newline>+    } <newline>+  }; <newline>   // HTTP Auth <newline>   %feature("docstring", <newline>@@ -475,3 +518,6 @@ struct HTTPSOptions { <newline> %{ <newline> typedef net::TestServer::HTTPSOptions HTTPSOptions; <newline> %} <newline>+ <newline>+%pointer_class(int, int_ptr); <newline>+%pointer_class(uint32, uint32_ptr);
bb74b9e9a4f1775767360d2294030b93157981e	dyu@chromium.org <dyu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 14 23:10:46 2012 +0000	Exposed GetSecurityState and GetPageType to pyAuto. The GetSecurityState retrieves different security states for the current tab. The GetPageType returns the type of page showing (normal, interstitial, error). Added additional tests that uses the exposed hooks. - testSSLCertOK - testSSLCertIsExpiredAndCertNameMismatches - testSSLCertAuthorityOK TEST=none	none		https://chromiumcodereview.appspot.com/9535022	svn://svn.chromium.org/chrome/trunk/src@126777 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/pyautolib/pyautolib.i b/chrome/test/pyautolib/pyautolib.i <newline>index 5c15397..8d3c60a 100644 <newline>--- a/chrome/test/pyautolib/pyautolib.i <newline>+++ b/chrome/test/pyautolib/pyautolib.i <newline>@@ -17,8 +17,10 @@ <newline> %module(docstring="Python interface to Automation Proxy.") pyautolib <newline> %feature("autodoc", "1"); <newline>-%include <std_wstring.i> <newline>+%include <cpointer.i> <newline> %include <std_string.i> <newline>+%include <std_wstring.i> <newline>+%include <typemaps.i> <newline> %include "chrome/test/pyautolib/argc_argv.i" <newline>@@ -30,6 +32,11 @@ <newline> %include "chrome/app/chrome_dll_resource.h" <newline> %include "chrome/common/automation_constants.h" <newline> %include "chrome/common/pref_names.h" <newline>+%include "content/public/common/page_type.h" <newline>+%include "content/public/common/security_style.h" <newline>+// Must come before cert_status_flags.h <newline>+%include "net/base/net_export.h" <newline>+%include "net/base/cert_status_flags.h" <newline> %{ <newline> #include "chrome/common/automation_constants.h" <newline>@@ -147,6 +154,42 @@ class TabProxy { <newline>           "button, if false to 'Take me out of there' button.") <newline>       TakeActionOnSSLBlockingPage; <newline>   bool TakeActionOnSSLBlockingPage(bool proceed); <newline>+  %extend { <newline>+    %feature("docstring", "Retrieves the different security states for the " <newline>+             "current tab.") <newline>+        GetSecurityState; <newline>+    PyObject* GetSecurityState() { <newline>+      content::SecurityStyle security_style; <newline>+      net::CertStatus ssl_cert_status; <newline>+      int insecure_content_status; <newline>+      PyObject* result_dict = PyDict_New(); <newline>+      if ($self->GetSecurityState( <newline>+          &security_style, &ssl_cert_status, &insecure_content_status)) { <newline>+        PyDict_SetItem(result_dict, PyString_FromString("security_style"), <newline>+                       PyInt_FromLong(security_style)); <newline>+        PyDict_SetItem(result_dict, PyString_FromString("ssl_cert_status"), <newline>+                       PyInt_FromLong(ssl_cert_status)); <newline>+        PyDict_SetItem(result_dict, <newline>+                       PyString_FromString("insecure_content_status"), <newline>+                       PyInt_FromLong(insecure_content_status)); <newline>+      } <newline>+      return result_dict; <newline>+    } <newline>+  }; <newline>+  %extend { <newline>+    %feature("docstring", "Returns the type of page currently showing " <newline>+             "(normal, interstitial, error.") <newline>+        GetPageType; <newline>+    PyObject* GetPageType() { <newline>+      content::PageType page_type; <newline>+      PyObject* result_dict = PyDict_New(); <newline>+      if ($self->GetPageType(&page_type)) { <newline>+        PyDict_SetItem(result_dict, PyString_FromString("page_type"), <newline>+                       PyInt_FromLong(page_type)); <newline>+      } <newline>+      return result_dict; <newline>+    } <newline>+  }; <newline>   // HTTP Auth <newline>   %feature("docstring", <newline>@@ -475,3 +518,6 @@ struct HTTPSOptions { <newline> %{ <newline> typedef net::TestServer::HTTPSOptions HTTPSOptions; <newline> %} <newline>+ <newline>+%pointer_class(int, int_ptr); <newline>+%pointer_class(uint32, uint32_ptr);
b5d9147ea50dec6a77b49ffede2e561a8370d15	dalecurtis@google.com <dalecurtis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 14 18:20:58 2012 +0000	Roll deps for ffmpeg security fixes and add new test case. Includes many upstream h264 fixes as well. ffmpeg_revision: http://src.chromium.org/viewvc/chrome?view=rev&revision=126470 ffmpeg_hash: http://git.chromium.org/gitweb/?p=chromium/third_party/ffmpeg.git;a=commit;h=ddcf259fa5fb83159d441bd71f54e617e2a4afd3 Includes the following patches: ddcf259 Update Windows binaries to pull in latest fixes. 707d08c h264: Fix invalid interlaced/progressive MB combinations for direct mode prediction. d6e7e28 h264: error out on invalid bitdepth. 8b29ceb h264: prevent overreads in intra PCM decoding. 9d8f016 h264: fix mmxext chroma deblock to use correct TC values. 8052a84 h264: change underread for 10bit QPEL to overread. f476438 h264: don't use redzone in loopfilter on win64. 400de19 Revert commit c98c1f434 due to webm regression. ed45601 Move struc FFTContext below SECTION_RODATA d881f5b Reverts removal of problen check in a2edf3dd. TEST=ffmpeg_regression_tests	117912		https://chromiumcodereview.appspot.com/9693060	svn://svn.chromium.org/chrome/trunk/src@126683 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/ffmpeg/ffmpeg_regression_tests.cc b/media/ffmpeg/ffmpeg_regression_tests.cc <newline>index 294fd22..a145bdd 100644 <newline>--- a/media/ffmpeg/ffmpeg_regression_tests.cc <newline>+++ b/media/ffmpeg/ffmpeg_regression_tests.cc <newline>@@ -136,6 +136,8 @@ FFMPEG_TEST_CASE(WEBM_4, "security/out.webm.68798.1929", <newline>                  DECODER_ERROR_NOT_SUPPORTED, DECODER_ERROR_NOT_SUPPORTED); <newline> FFMPEG_TEST_CASE(WEBM_5, "content/frame_size_change.webm", PIPELINE_OK, <newline>                  PIPELINE_OK); <newline>+FFMPEG_TEST_CASE(WEBM_6, "security/117912.webm", DEMUXER_ERROR_COULD_NOT_OPEN, <newline>+                 DEMUXER_ERROR_COULD_NOT_OPEN); <newline> // Flaky, maybe larger issues.  All eventually fail in the browser. <newline> FFMPEG_TEST_CASE(FLAKY_Cr99652, "security/99652.webm", PIPELINE_OK,
aeda7a42266dab9938534fa8b2c027c3a436364	dalecurtis@google.com <dalecurtis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 14 18:20:58 2012 +0000	Roll deps for ffmpeg security fixes and add new test case. Includes many upstream h264 fixes as well. ffmpeg_revision: http://src.chromium.org/viewvc/chrome?view=rev&revision=126470 ffmpeg_hash: http://git.chromium.org/gitweb/?p=chromium/third_party/ffmpeg.git;a=commit;h=ddcf259fa5fb83159d441bd71f54e617e2a4afd3 Includes the following patches: ddcf259 Update Windows binaries to pull in latest fixes. 707d08c h264: Fix invalid interlaced/progressive MB combinations for direct mode prediction. d6e7e28 h264: error out on invalid bitdepth. 8b29ceb h264: prevent overreads in intra PCM decoding. 9d8f016 h264: fix mmxext chroma deblock to use correct TC values. 8052a84 h264: change underread for 10bit QPEL to overread. f476438 h264: don't use redzone in loopfilter on win64. 400de19 Revert commit c98c1f434 due to webm regression. ed45601 Move struc FFTContext below SECTION_RODATA d881f5b Reverts removal of problen check in a2edf3dd. TEST=ffmpeg_regression_tests	117912		https://chromiumcodereview.appspot.com/9693060	svn://svn.chromium.org/chrome/trunk/src@126683 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/ffmpeg/ffmpeg_regression_tests.cc b/media/ffmpeg/ffmpeg_regression_tests.cc <newline>index 294fd22..a145bdd 100644 <newline>--- a/media/ffmpeg/ffmpeg_regression_tests.cc <newline>+++ b/media/ffmpeg/ffmpeg_regression_tests.cc <newline>@@ -136,6 +136,8 @@ FFMPEG_TEST_CASE(WEBM_4, "security/out.webm.68798.1929", <newline>                  DECODER_ERROR_NOT_SUPPORTED, DECODER_ERROR_NOT_SUPPORTED); <newline> FFMPEG_TEST_CASE(WEBM_5, "content/frame_size_change.webm", PIPELINE_OK, <newline>                  PIPELINE_OK); <newline>+FFMPEG_TEST_CASE(WEBM_6, "security/117912.webm", DEMUXER_ERROR_COULD_NOT_OPEN, <newline>+                 DEMUXER_ERROR_COULD_NOT_OPEN); <newline> // Flaky, maybe larger issues.  All eventually fail in the browser. <newline> FFMPEG_TEST_CASE(FLAKY_Cr99652, "security/99652.webm", PIPELINE_OK,
d7b0900f0989f1c5bc4860c43c37fe5268e3386	alexeypa@chromium.org <alexeypa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 12 19:23:07 2012 +0000	Chromoting: Implemented security attention sequence (SAS) emulation on Windows. The default SAS is Ctrl+Alt+Delete. It can neither be intercepted by the client (at least on Windows) nor it can be injected the same way other key strokes are injected. This CL makes the Windows host to interpret a double Scroll Lock as a SAS and invoke the Chromoting service to issue the actual SAS.			http://codereview.chromium.org/9617027	svn://svn.chromium.org/chrome/trunk/src@126186 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/remoting/remoting.gyp b/remoting/remoting.gyp <newline>index 285ff03..14da577 100644 <newline>--- a/remoting/remoting.gyp <newline>+++ b/remoting/remoting.gyp <newline>@@ -234,6 +234,7 @@ <newline>             '../base/base.gyp:base', <newline>             '../base/base.gyp:base_i18n', <newline>             '../media/media.gyp:media', <newline>+            '../ipc/ipc.gyp:ipc', <newline>           ], <newline>           'sources': [ <newline>             'host/host_event_logger_win.cc', <newline>@@ -279,13 +280,18 @@ <newline>           'dependencies': [ <newline>             '../base/base.gyp:base', <newline>             '../base/third_party/dynamic_annotations/dynamic_annotations.gyp:dynamic_annotations', <newline>+            '../ipc/ipc.gyp:ipc', <newline>           ], <newline>           'sources': [ <newline>             'base/scoped_sc_handle_win.h', <newline>+            'host/chromoting_messages.cc', <newline>+            'host/chromoting_messages.h', <newline>             'host/host_service.rc', <newline>             'host/host_service_resource.h', <newline>             'host/host_service_win.cc', <newline>             'host/host_service_win.h', <newline>+            'host/sas_injector.h', <newline>+            'host/sas_injector_win.cc', <newline>             'host/wts_console_monitor_win.h', <newline>             'host/wts_console_observer_win.h', <newline>             'host/wts_session_process_launcher_win.cc', <newline>@@ -404,6 +410,11 @@ <newline>             }], <newline>           ],  # conditions <newline>         }],  # OS=="mac" <newline>+        [ 'OS=="win"', { <newline>+          'dependencies': [ <newline>+            '../ipc/ipc.gyp:ipc' <newline>+          ], <newline>+        }], <newline>         ['OS!="win"', { <newline>           'sources!': [ <newline>             'host/plugin/host_plugin.def', <newline>@@ -641,6 +652,8 @@ <newline>         'host/screen_recorder.h', <newline>         'host/server_log_entry.cc', <newline>         'host/server_log_entry.h', <newline>+        'host/session_event_executor_win.cc', <newline>+        'host/session_event_executor_win.h', <newline>         'host/signaling_connector.cc', <newline>         'host/signaling_connector.h', <newline>         'host/ui_strings.cc', <newline>@@ -690,6 +703,12 @@ <newline>             ], <newline>           }, <newline>         }], <newline>+        ['OS=="win"', { <newline>+          'sources': [ <newline>+            'host/chromoting_messages.cc', <newline>+            'host/chromoting_messages.h', <newline>+          ], <newline>+        }], <newline>       ], <newline>     },  # end of target 'remoting_host' <newline>@@ -750,6 +769,13 @@ <newline>         'host/it2me_host_user_interface.h', <newline>         'host/simple_host_process.cc', <newline>       ], <newline>+      'conditions': [ <newline>+        [ 'OS=="win"', { <newline>+          'dependencies': [ <newline>+            '../ipc/ipc.gyp:ipc' <newline>+          ], <newline>+        }], <newline>+      ], <newline>     },  # end of target 'remoting_simple_host' <newline>     { <newline>@@ -1021,6 +1047,11 @@ <newline>         'run_all_unittests.cc', <newline>       ], <newline>       'conditions': [ <newline>+        [ 'OS=="win"', { <newline>+          'dependencies': [ <newline>+            '../ipc/ipc.gyp:ipc' <newline>+          ], <newline>+        }], <newline>         ['chromeos == 0', { <newline>           'dependencies': [ <newline>             'remoting_host'
2b374409956cdad6d90ae6913f02251b09d8280	alexeypa@chromium.org <alexeypa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 12 19:23:07 2012 +0000	Chromoting: Implemented security attention sequence (SAS) emulation on Windows. The default SAS is Ctrl+Alt+Delete. It can neither be intercepted by the client (at least on Windows) nor it can be injected the same way other key strokes are injected. This CL makes the Windows host to interpret a double Scroll Lock as a SAS and invoke the Chromoting service to issue the actual SAS.			http://codereview.chromium.org/9617027	svn://svn.chromium.org/chrome/trunk/src@126186 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/remoting/remoting.gyp b/remoting/remoting.gyp <newline>index 285ff03..14da577 100644 <newline>--- a/remoting/remoting.gyp <newline>+++ b/remoting/remoting.gyp <newline>@@ -234,6 +234,7 @@ <newline>             '../base/base.gyp:base', <newline>             '../base/base.gyp:base_i18n', <newline>             '../media/media.gyp:media', <newline>+            '../ipc/ipc.gyp:ipc', <newline>           ], <newline>           'sources': [ <newline>             'host/host_event_logger_win.cc', <newline>@@ -279,13 +280,18 @@ <newline>           'dependencies': [ <newline>             '../base/base.gyp:base', <newline>             '../base/third_party/dynamic_annotations/dynamic_annotations.gyp:dynamic_annotations', <newline>+            '../ipc/ipc.gyp:ipc', <newline>           ], <newline>           'sources': [ <newline>             'base/scoped_sc_handle_win.h', <newline>+            'host/chromoting_messages.cc', <newline>+            'host/chromoting_messages.h', <newline>             'host/host_service.rc', <newline>             'host/host_service_resource.h', <newline>             'host/host_service_win.cc', <newline>             'host/host_service_win.h', <newline>+            'host/sas_injector.h', <newline>+            'host/sas_injector_win.cc', <newline>             'host/wts_console_monitor_win.h', <newline>             'host/wts_console_observer_win.h', <newline>             'host/wts_session_process_launcher_win.cc', <newline>@@ -404,6 +410,11 @@ <newline>             }], <newline>           ],  # conditions <newline>         }],  # OS=="mac" <newline>+        [ 'OS=="win"', { <newline>+          'dependencies': [ <newline>+            '../ipc/ipc.gyp:ipc' <newline>+          ], <newline>+        }], <newline>         ['OS!="win"', { <newline>           'sources!': [ <newline>             'host/plugin/host_plugin.def', <newline>@@ -641,6 +652,8 @@ <newline>         'host/screen_recorder.h', <newline>         'host/server_log_entry.cc', <newline>         'host/server_log_entry.h', <newline>+        'host/session_event_executor_win.cc', <newline>+        'host/session_event_executor_win.h', <newline>         'host/signaling_connector.cc', <newline>         'host/signaling_connector.h', <newline>         'host/ui_strings.cc', <newline>@@ -690,6 +703,12 @@ <newline>             ], <newline>           }, <newline>         }], <newline>+        ['OS=="win"', { <newline>+          'sources': [ <newline>+            'host/chromoting_messages.cc', <newline>+            'host/chromoting_messages.h', <newline>+          ], <newline>+        }], <newline>       ], <newline>     },  # end of target 'remoting_host' <newline>@@ -750,6 +769,13 @@ <newline>         'host/it2me_host_user_interface.h', <newline>         'host/simple_host_process.cc', <newline>       ], <newline>+      'conditions': [ <newline>+        [ 'OS=="win"', { <newline>+          'dependencies': [ <newline>+            '../ipc/ipc.gyp:ipc' <newline>+          ], <newline>+        }], <newline>+      ], <newline>     },  # end of target 'remoting_simple_host' <newline>     { <newline>@@ -1021,6 +1047,11 @@ <newline>         'run_all_unittests.cc', <newline>       ], <newline>       'conditions': [ <newline>+        [ 'OS=="win"', { <newline>+          'dependencies': [ <newline>+            '../ipc/ipc.gyp:ipc' <newline>+          ], <newline>+        }], <newline>         ['chromeos == 0', { <newline>           'dependencies': [ <newline>             'remoting_host'
e43e7c366c9c10c6bd22f4d947afc78a90b4dbd	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 24 20:49:55 2012 +0000	ots: roll r81->r82 Picks up this commit: Remove dependency on winsock2 (ws2_32.dll) on Windows. Use intrinsics for byte order conversion, per suggestion by maruel. Are there any other opentype tests to verify functionality? Wiki page says I need security team access to get the malicious fonts. Patch-by: dcurtis TEST=No longer crashes with new ffmpeg.	115477			svn://svn.chromium.org/chrome/trunk/src@123542 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index b732f03..0d6ccd3 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -159,7 +159,7 @@ deps = { <newline>     Var("webkit_trunk") + "/Tools/TestWebKitAPI@" + Var("webkit_revision"), <newline>   "src/third_party/ots": <newline>-    (Var("googlecode_url") % "ots") + "/trunk@81", <newline>+    (Var("googlecode_url") % "ots") + "/trunk@82", <newline>   "src/tools/page_cycler/acid3": <newline>     "/trunk/deps/page_cycler/acid3@102714",
4fa8419eb47a5b046b7499d15c22e231e126d74	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 24 20:49:55 2012 +0000	ots: roll r81->r82 Picks up this commit: Remove dependency on winsock2 (ws2_32.dll) on Windows. Use intrinsics for byte order conversion, per suggestion by maruel. Are there any other opentype tests to verify functionality? Wiki page says I need security team access to get the malicious fonts. Patch-by: dcurtis TEST=No longer crashes with new ffmpeg.	115477			svn://svn.chromium.org/chrome/trunk/src@123542 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index b732f03..0d6ccd3 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -159,7 +159,7 @@ deps = { <newline>     Var("webkit_trunk") + "/Tools/TestWebKitAPI@" + Var("webkit_revision"), <newline>   "src/third_party/ots": <newline>-    (Var("googlecode_url") % "ots") + "/trunk@81", <newline>+    (Var("googlecode_url") % "ots") + "/trunk@82", <newline>   "src/tools/page_cycler/acid3": <newline>     "/trunk/deps/page_cycler/acid3@102714",
5a2ba387be709f6c1237aa184f54c3075f3660f	jorgelo@chromium.org <jorgelo@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Feb 18 01:26:20 2012 +0000	Set LINUX_SANDBOX_PATH when on Linux or Chrome OS. LINUX_SANDBOX_PATH was being set when 'toolkit_use_gtk' was on. With the Aura switch, GTK was no longer used and the sandbox stopped working. TEST=security_RendererSandbox passes again Change-Id: I2a47256740a99a27d5b1cc1ce6e6ebb265e3841d	chromium-os:26299		http://codereview.chromium.org/9414035	svn://svn.chromium.org/chrome/trunk/src@122655 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/content_browser.gypi b/content/content_browser.gypi <newline>index c1b81a5..ebcf8ed 100644 <newline>--- a/content/content_browser.gypi <newline>+++ b/content/content_browser.gypi <newline>@@ -741,6 +741,12 @@ <newline>         '../build/linux/system.gyp:x11', <newline>         '../dbus/dbus.gyp:dbus', <newline>       ], <newline>+    }], <newline>+    ['OS=="linux"', { <newline>+      'dependencies': [ <newline>+        '../build/linux/system.gyp:udev', <newline>+      ], <newline>+      # Set LINUX_SANDBOX_PATH for Linux, including Chrome OS <newline>       'conditions': [ <newline>         ['linux_sandbox_path != ""', { <newline>           'defines': [ <newline>@@ -749,11 +755,6 @@ <newline>         }], <newline>       ], <newline>     }], <newline>-    ['OS=="linux"', { <newline>-      'dependencies': [ <newline>-        '../build/linux/system.gyp:udev', <newline>-      ], <newline>-    }], <newline>     ['OS=="linux" and toolkit_uses_gtk==0', { <newline>       'dependencies': [ <newline>         '../build/linux/system.gyp:dbus',
33b9f6a54a41c7a2d39b5cba3a2b032e754db00	jorgelo@chromium.org <jorgelo@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Feb 18 01:26:20 2012 +0000	Set LINUX_SANDBOX_PATH when on Linux or Chrome OS. LINUX_SANDBOX_PATH was being set when 'toolkit_use_gtk' was on. With the Aura switch, GTK was no longer used and the sandbox stopped working. TEST=security_RendererSandbox passes again Change-Id: I2a47256740a99a27d5b1cc1ce6e6ebb265e3841d	chromium-os:26299		http://codereview.chromium.org/9414035	svn://svn.chromium.org/chrome/trunk/src@122655 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/content_browser.gypi b/content/content_browser.gypi <newline>index c1b81a5..ebcf8ed 100644 <newline>--- a/content/content_browser.gypi <newline>+++ b/content/content_browser.gypi <newline>@@ -741,6 +741,12 @@ <newline>         '../build/linux/system.gyp:x11', <newline>         '../dbus/dbus.gyp:dbus', <newline>       ], <newline>+    }], <newline>+    ['OS=="linux"', { <newline>+      'dependencies': [ <newline>+        '../build/linux/system.gyp:udev', <newline>+      ], <newline>+      # Set LINUX_SANDBOX_PATH for Linux, including Chrome OS <newline>       'conditions': [ <newline>         ['linux_sandbox_path != ""', { <newline>           'defines': [ <newline>@@ -749,11 +755,6 @@ <newline>         }], <newline>       ], <newline>     }], <newline>-    ['OS=="linux"', { <newline>-      'dependencies': [ <newline>-        '../build/linux/system.gyp:udev', <newline>-      ], <newline>-    }], <newline>     ['OS=="linux" and toolkit_uses_gtk==0', { <newline>       'dependencies': [ <newline>         '../build/linux/system.gyp:dbus',
d4a9e1643c20d064993f818f70f3f33bdbde068	brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 17 22:59:33 2012 +0000	Add process type to the pepper message filter. This adds the concept of process type to the pepper message filter. This cleans up the existing checks for the security origin since we don't have to rely on the existance of the process ID being set. TEST=none	none		http://codereview.chromium.org/9423014	svn://svn.chromium.org/chrome/trunk/src@122614 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/browser/renderer_host/render_process_host_impl.cc b/content/browser/renderer_host/render_process_host_impl.cc <newline>index f9dd954..0174d49 100644 <newline>--- a/content/browser/renderer_host/render_process_host_impl.cc <newline>+++ b/content/browser/renderer_host/render_process_host_impl.cc <newline>@@ -473,7 +473,8 @@ void RenderProcessHostImpl::CreateMessageFilters() { <newline>   channel_->AddFilter(new media_stream::MediaStreamDispatcherHost( <newline>       resource_context, GetID())); <newline>   channel_->AddFilter(new PepperFileMessageFilter(GetID(), browser_context)); <newline>-  channel_->AddFilter(new PepperMessageFilter(GetID(), resource_context)); <newline>+  channel_->AddFilter(new PepperMessageFilter(PepperMessageFilter::RENDERER, <newline>+                                              GetID(), resource_context)); <newline>   channel_->AddFilter(new speech_input::SpeechInputDispatcherHost( <newline>       GetID(), browser_context->GetRequestContext(), <newline>       browser_context->GetSpeechInputPreferences(), resource_context));
038b82cee4dff308fafc18a7ac1b3f305c9d5c6	brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 17 22:59:33 2012 +0000	Add process type to the pepper message filter. This adds the concept of process type to the pepper message filter. This cleans up the existing checks for the security origin since we don't have to rely on the existance of the process ID being set. TEST=none	none		http://codereview.chromium.org/9423014	svn://svn.chromium.org/chrome/trunk/src@122614 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/browser/renderer_host/render_process_host_impl.cc b/content/browser/renderer_host/render_process_host_impl.cc <newline>index f9dd954..0174d49 100644 <newline>--- a/content/browser/renderer_host/render_process_host_impl.cc <newline>+++ b/content/browser/renderer_host/render_process_host_impl.cc <newline>@@ -473,7 +473,8 @@ void RenderProcessHostImpl::CreateMessageFilters() { <newline>   channel_->AddFilter(new media_stream::MediaStreamDispatcherHost( <newline>       resource_context, GetID())); <newline>   channel_->AddFilter(new PepperFileMessageFilter(GetID(), browser_context)); <newline>-  channel_->AddFilter(new PepperMessageFilter(GetID(), resource_context)); <newline>+  channel_->AddFilter(new PepperMessageFilter(PepperMessageFilter::RENDERER, <newline>+                                              GetID(), resource_context)); <newline>   channel_->AddFilter(new speech_input::SpeechInputDispatcherHost( <newline>       GetID(), browser_context->GetRequestContext(), <newline>       browser_context->GetSpeechInputPreferences(), resource_context));
77526417e110e88532f2399dbda5b6fd4648423	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 15 23:00:09 2012 +0000	Enforce object-src 'none' content security policy on webui pages except for a whitelist of exceptions.	114224.		http://codereview.chromium.org/9395026	svn://svn.chromium.org/chrome/trunk/src@122178 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc b/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>index ffc384c..9199e84 100644 <newline>--- a/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>+++ b/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>@@ -47,10 +47,13 @@ namespace { <newline> // TODO(tsepez) chrome-extension: permits the ChromeVox screen reader <newline> //     extension to function on these pages.  Remove it when the extension <newline> //     is updated to stop injecting script into the pages. <newline>-const char kChromeURLContentSecurityPolicyHeader[] = <newline>-    "X-WebKit-CSP: object-src 'self'; script-src chrome://resources " <newline>+const char kChromeURLContentSecurityPolicyHeaderBase[] = <newline>+    "X-WebKit-CSP: script-src chrome://resources " <newline>     "chrome-extension://mndnfokpggljbaajbnioimlmbfngpief " <newline>-    "'self' 'unsafe-eval'"; <newline>+    "'self' 'unsafe-eval'; "; <newline>+ <newline>+// TODO(tsepez) The following should be replaced with a centralized table. <newline>+// See crbug.com/104631. <newline> // If you are inserting new exemptions into this list, then you have a bug. <newline> // It is not acceptable to disable content-security-policy on chrome:// pages <newline>@@ -89,8 +92,43 @@ class ChromeURLContentSecurityPolicyExceptionSet <newline>   } <newline> }; <newline>+// It is OK to add URLs to this set which slightly reduces the CSP for them. <newline>+class ChromeURLContentSecurityPolicyObjectTagSet <newline>+    : public std::set<std::string> { <newline>+ public: <newline>+  ChromeURLContentSecurityPolicyObjectTagSet() : std::set<std::string>() { <newline>+    insert(chrome::kChromeUIPrintHost); <newline>+  } <newline>+}; <newline>+ <newline> base::LazyInstance<ChromeURLContentSecurityPolicyExceptionSet> <newline>-    g_chrome_url_content_security_policy_exceptions = LAZY_INSTANCE_INITIALIZER; <newline>+    g_chrome_url_content_security_policy_exception_set = <newline>+        LAZY_INSTANCE_INITIALIZER; <newline>+ <newline>+base::LazyInstance<ChromeURLContentSecurityPolicyObjectTagSet> <newline>+    g_chrome_url_content_security_policy_object_tag_set = <newline>+        LAZY_INSTANCE_INITIALIZER; <newline>+ <newline>+// Determine the least-privileged content security policy header, if any, <newline>+// that is compatible with a given WebUI URL, and append it to the existing <newline>+// response headers. <newline>+void AddContentSecurityPolicyHeader( <newline>+    const GURL& url, net::HttpResponseHeaders* headers) { <newline>+  ChromeURLContentSecurityPolicyExceptionSet* exceptions = <newline>+      g_chrome_url_content_security_policy_exception_set.Pointer(); <newline>+ <newline>+  if (exceptions->find(url.host()) == exceptions->end()) { <newline>+    std::string base = kChromeURLContentSecurityPolicyHeaderBase; <newline>+    ChromeURLContentSecurityPolicyObjectTagSet* object_tag_set = <newline>+        g_chrome_url_content_security_policy_object_tag_set.Pointer(); <newline>+ <newline>+    base.append(object_tag_set->find(url.host()) == object_tag_set->end() ? <newline>+                "object-src 'none';" : <newline>+                "object-src 'self';"); <newline>+ <newline>+    headers->AddHeader(base); <newline>+  } <newline>+} <newline> // Parse a URL into the components used to resolve its request. |source_name| <newline> // is the hostname and |path| is the remaining portion of the URL. <newline>@@ -215,10 +253,7 @@ void URLRequestChromeJob::GetResponseInfo(net::HttpResponseInfo* info) { <newline>   // status code of 200. Without this they return a 0, which makes the status <newline>   // indistiguishable from other error types. Instant relies on getting a 200. <newline>   info->headers = new net::HttpResponseHeaders("HTTP/1.1 200 OK"); <newline>-  ChromeURLContentSecurityPolicyExceptionSet* exceptions = <newline>-      g_chrome_url_content_security_policy_exceptions.Pointer(); <newline>-  if (exceptions->find(request_->url().host()) == exceptions->end()) <newline>-    info->headers->AddHeader(kChromeURLContentSecurityPolicyHeader); <newline>+  AddContentSecurityPolicyHeader(request_->url(), info->headers); <newline> } <newline> void URLRequestChromeJob::DataAvailable(RefCountedMemory* bytes) {
8c119da0066b18c472559dd80e58e9895d5ee06	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 15 23:00:09 2012 +0000	Enforce object-src 'none' content security policy on webui pages except for a whitelist of exceptions.	114224.		http://codereview.chromium.org/9395026	svn://svn.chromium.org/chrome/trunk/src@122178 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc b/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>index ffc384c..9199e84 100644 <newline>--- a/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>+++ b/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>@@ -47,10 +47,13 @@ namespace { <newline> // TODO(tsepez) chrome-extension: permits the ChromeVox screen reader <newline> //     extension to function on these pages.  Remove it when the extension <newline> //     is updated to stop injecting script into the pages. <newline>-const char kChromeURLContentSecurityPolicyHeader[] = <newline>-    "X-WebKit-CSP: object-src 'self'; script-src chrome://resources " <newline>+const char kChromeURLContentSecurityPolicyHeaderBase[] = <newline>+    "X-WebKit-CSP: script-src chrome://resources " <newline>     "chrome-extension://mndnfokpggljbaajbnioimlmbfngpief " <newline>-    "'self' 'unsafe-eval'"; <newline>+    "'self' 'unsafe-eval'; "; <newline>+ <newline>+// TODO(tsepez) The following should be replaced with a centralized table. <newline>+// See crbug.com/104631. <newline> // If you are inserting new exemptions into this list, then you have a bug. <newline> // It is not acceptable to disable content-security-policy on chrome:// pages <newline>@@ -89,8 +92,43 @@ class ChromeURLContentSecurityPolicyExceptionSet <newline>   } <newline> }; <newline>+// It is OK to add URLs to this set which slightly reduces the CSP for them. <newline>+class ChromeURLContentSecurityPolicyObjectTagSet <newline>+    : public std::set<std::string> { <newline>+ public: <newline>+  ChromeURLContentSecurityPolicyObjectTagSet() : std::set<std::string>() { <newline>+    insert(chrome::kChromeUIPrintHost); <newline>+  } <newline>+}; <newline>+ <newline> base::LazyInstance<ChromeURLContentSecurityPolicyExceptionSet> <newline>-    g_chrome_url_content_security_policy_exceptions = LAZY_INSTANCE_INITIALIZER; <newline>+    g_chrome_url_content_security_policy_exception_set = <newline>+        LAZY_INSTANCE_INITIALIZER; <newline>+ <newline>+base::LazyInstance<ChromeURLContentSecurityPolicyObjectTagSet> <newline>+    g_chrome_url_content_security_policy_object_tag_set = <newline>+        LAZY_INSTANCE_INITIALIZER; <newline>+ <newline>+// Determine the least-privileged content security policy header, if any, <newline>+// that is compatible with a given WebUI URL, and append it to the existing <newline>+// response headers. <newline>+void AddContentSecurityPolicyHeader( <newline>+    const GURL& url, net::HttpResponseHeaders* headers) { <newline>+  ChromeURLContentSecurityPolicyExceptionSet* exceptions = <newline>+      g_chrome_url_content_security_policy_exception_set.Pointer(); <newline>+ <newline>+  if (exceptions->find(url.host()) == exceptions->end()) { <newline>+    std::string base = kChromeURLContentSecurityPolicyHeaderBase; <newline>+    ChromeURLContentSecurityPolicyObjectTagSet* object_tag_set = <newline>+        g_chrome_url_content_security_policy_object_tag_set.Pointer(); <newline>+ <newline>+    base.append(object_tag_set->find(url.host()) == object_tag_set->end() ? <newline>+                "object-src 'none';" : <newline>+                "object-src 'self';"); <newline>+ <newline>+    headers->AddHeader(base); <newline>+  } <newline>+} <newline> // Parse a URL into the components used to resolve its request. |source_name| <newline> // is the hostname and |path| is the remaining portion of the URL. <newline>@@ -215,10 +253,7 @@ void URLRequestChromeJob::GetResponseInfo(net::HttpResponseInfo* info) { <newline>   // status code of 200. Without this they return a 0, which makes the status <newline>   // indistiguishable from other error types. Instant relies on getting a 200. <newline>   info->headers = new net::HttpResponseHeaders("HTTP/1.1 200 OK"); <newline>-  ChromeURLContentSecurityPolicyExceptionSet* exceptions = <newline>-      g_chrome_url_content_security_policy_exceptions.Pointer(); <newline>-  if (exceptions->find(request_->url().host()) == exceptions->end()) <newline>-    info->headers->AddHeader(kChromeURLContentSecurityPolicyHeader); <newline>+  AddContentSecurityPolicyHeader(request_->url(), info->headers); <newline> } <newline> void URLRequestChromeJob::DataAvailable(RefCountedMemory* bytes) {
66b28b5892985a094426787b9f6b2fca27ebec1	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 9 05:36:28 2012 +0000	Don't use system libpng by default. It causes security maintenance problems for ChromeOS. It's worth noting that we also don't use the system library for many other important components such as libxml. R=wad,abarth	112822		https://chromiumcodereview.appspot.com/9365007	svn://svn.chromium.org/chrome/trunk/src@121199 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libpng/libpng.gyp b/third_party/libpng/libpng.gyp <newline>index 5325310..978877e 100644 <newline>--- a/third_party/libpng/libpng.gyp <newline>+++ b/third_party/libpng/libpng.gyp <newline>@@ -6,8 +6,9 @@ <newline>   'variables': { <newline>     'conditions': [ <newline>       [ 'os_posix == 1 and OS != "mac" and OS != "android"', { <newline>-        # Link to system .so since we already use it due to GTK. <newline>-        'use_system_libpng%': 1, <newline>+        # Maybe link to system .so once the security concerns are thought <newline>+        # through, since we already use it due to GTK. <newline>+        'use_system_libpng%': 0, <newline>       }, {  # os_posix != 1 or OS == "mac" <newline>         'use_system_libpng%': 0, <newline>       }],
6336270df808b7a25bf46b8d2cc039fd567e438	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 9 05:36:28 2012 +0000	Don't use system libpng by default. It causes security maintenance problems for ChromeOS. It's worth noting that we also don't use the system library for many other important components such as libxml. R=wad,abarth	112822		https://chromiumcodereview.appspot.com/9365007	svn://svn.chromium.org/chrome/trunk/src@121199 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libpng/libpng.gyp b/third_party/libpng/libpng.gyp <newline>index 5325310..978877e 100644 <newline>--- a/third_party/libpng/libpng.gyp <newline>+++ b/third_party/libpng/libpng.gyp <newline>@@ -6,8 +6,9 @@ <newline>   'variables': { <newline>     'conditions': [ <newline>       [ 'os_posix == 1 and OS != "mac" and OS != "android"', { <newline>-        # Link to system .so since we already use it due to GTK. <newline>-        'use_system_libpng%': 1, <newline>+        # Maybe link to system .so once the security concerns are thought <newline>+        # through, since we already use it due to GTK. <newline>+        'use_system_libpng%': 0, <newline>       }, {  # os_posix != 1 or OS == "mac" <newline>         'use_system_libpng%': 0, <newline>       }],
3b9c7ceaefb9eae435c7f03db95ad03248a9244	ananta@chromium.org <ananta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 9 01:47:59 2012 +0000	Create a content public browser API around the ChildProcessSecurityPolicy class. The implementation of this interface lives in content\browser\child_process_security_policy_impl.cc/.h. Moved some security checks from the TabContentsDelegate implementation (chrome\browser) to the TabContents code in content.	98716		https://chromiumcodereview.appspot.com/9360014	svn://svn.chromium.org/chrome/trunk/src@121137 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/public/browser/child_process_security_policy.h b/content/public/browser/child_process_security_policy.h <newline>new file mode 100644 <newline>index 0000000..eccd9d3 <newline>--- /dev/null <newline>+++ b/content/public/browser/child_process_security_policy.h <newline>@@ -0,0 +1,68 @@ <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#ifndef CONTENT_PUBLIC_BROWSER_CHILD_PROCESS_SECURITY_POLICY_H_ <newline>+#define CONTENT_PUBLIC_BROWSER_CHILD_PROCESS_SECURITY_POLICY_H_ <newline>+#pragma once <newline>+ <newline>+#include <set> <newline>+#include <string> <newline>+ <newline>+#include "base/basictypes.h" <newline>+#include "content/common/content_export.h" <newline>+ <newline>+class FilePath; <newline>+ <newline>+namespace content { <newline>+ <newline>+// The ChildProcessSecurityPolicy class is used to grant and revoke security <newline>+// capabilities for child processes.  For example, it restricts whether a child <newline>+// process is permitted to load file:// URLs based on whether the process <newline>+// has ever been commanded to load file:// URLs by the browser. <newline>+// <newline>+// ChildProcessSecurityPolicy is a singleton that may be used on any thread. <newline>+// <newline>+class ChildProcessSecurityPolicy { <newline>+ public: <newline>+  virtual ~ChildProcessSecurityPolicy() {} <newline>+ <newline>+  // There is one global ChildProcessSecurityPolicy object for the entire <newline>+  // browser process.  The object returned by this method may be accessed on <newline>+  // any thread. <newline>+  static CONTENT_EXPORT ChildProcessSecurityPolicy* GetInstance(); <newline>+ <newline>+  // Web-safe schemes can be requested by any child process.  Once a web-safe <newline>+  // scheme has been registered, any child process can request URLs with <newline>+  // that scheme.  There is no mechanism for revoking web-safe schemes. <newline>+  virtual void RegisterWebSafeScheme(const std::string& scheme) = 0; <newline>+ <newline>+  // Returns true iff |scheme| has been registered as a web-safe scheme. <newline>+  virtual bool IsWebSafeScheme(const std::string& scheme) = 0; <newline>+ <newline>+  // Sets the list of disabled schemes. <newline>+  // URLs using these schemes won't be loaded at all. The previous list of <newline>+  // schemes is overwritten. An empty |schemes| disables this feature. <newline>+  // Schemes listed as disabled take precedence over Web-safe schemes. <newline>+  virtual void RegisterDisabledSchemes( <newline>+      const std::set<std::string>& schemes) = 0; <newline>+ <newline>+  // Grants certain permissions to a file. |permissions| must be a bit-set of <newline>+  // base::PlatformFileFlags. <newline>+  virtual void GrantPermissionsForFile(int child_id, <newline>+                                       const FilePath& file, <newline>+                                       int permissions) = 0; <newline>+ <newline>+  // Whenever the user picks a file from a <input type="file"> element, the <newline>+  // browser should call this function to grant the child process the capability <newline>+  // to upload the file to the web. <newline>+  virtual void GrantReadFile(int child_id, const FilePath& file) = 0; <newline>+ <newline>+  // Grants the child process the capability to access URLs of the provided <newline>+  // scheme. <newline>+  virtual void GrantScheme(int child_id, const std::string& scheme) = 0; <newline>+}; <newline>+ <newline>+};  // namespace content <newline>+ <newline>+#endif  // CONTENT_PUBLIC_BROWSER_CHILD_PROCESS_SECURITY_POLICY_H_
953542108e0ffd871acc0de0919fe3da151db6c	ananta@chromium.org <ananta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 9 01:47:59 2012 +0000	Create a content public browser API around the ChildProcessSecurityPolicy class. The implementation of this interface lives in content\browser\child_process_security_policy_impl.cc/.h. Moved some security checks from the TabContentsDelegate implementation (chrome\browser) to the TabContents code in content.	98716		https://chromiumcodereview.appspot.com/9360014	svn://svn.chromium.org/chrome/trunk/src@121137 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/public/browser/child_process_security_policy.h b/content/public/browser/child_process_security_policy.h <newline>new file mode 100644 <newline>index 0000000..eccd9d3 <newline>--- /dev/null <newline>+++ b/content/public/browser/child_process_security_policy.h <newline>@@ -0,0 +1,68 @@ <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#ifndef CONTENT_PUBLIC_BROWSER_CHILD_PROCESS_SECURITY_POLICY_H_ <newline>+#define CONTENT_PUBLIC_BROWSER_CHILD_PROCESS_SECURITY_POLICY_H_ <newline>+#pragma once <newline>+ <newline>+#include <set> <newline>+#include <string> <newline>+ <newline>+#include "base/basictypes.h" <newline>+#include "content/common/content_export.h" <newline>+ <newline>+class FilePath; <newline>+ <newline>+namespace content { <newline>+ <newline>+// The ChildProcessSecurityPolicy class is used to grant and revoke security <newline>+// capabilities for child processes.  For example, it restricts whether a child <newline>+// process is permitted to load file:// URLs based on whether the process <newline>+// has ever been commanded to load file:// URLs by the browser. <newline>+// <newline>+// ChildProcessSecurityPolicy is a singleton that may be used on any thread. <newline>+// <newline>+class ChildProcessSecurityPolicy { <newline>+ public: <newline>+  virtual ~ChildProcessSecurityPolicy() {} <newline>+ <newline>+  // There is one global ChildProcessSecurityPolicy object for the entire <newline>+  // browser process.  The object returned by this method may be accessed on <newline>+  // any thread. <newline>+  static CONTENT_EXPORT ChildProcessSecurityPolicy* GetInstance(); <newline>+ <newline>+  // Web-safe schemes can be requested by any child process.  Once a web-safe <newline>+  // scheme has been registered, any child process can request URLs with <newline>+  // that scheme.  There is no mechanism for revoking web-safe schemes. <newline>+  virtual void RegisterWebSafeScheme(const std::string& scheme) = 0; <newline>+ <newline>+  // Returns true iff |scheme| has been registered as a web-safe scheme. <newline>+  virtual bool IsWebSafeScheme(const std::string& scheme) = 0; <newline>+ <newline>+  // Sets the list of disabled schemes. <newline>+  // URLs using these schemes won't be loaded at all. The previous list of <newline>+  // schemes is overwritten. An empty |schemes| disables this feature. <newline>+  // Schemes listed as disabled take precedence over Web-safe schemes. <newline>+  virtual void RegisterDisabledSchemes( <newline>+      const std::set<std::string>& schemes) = 0; <newline>+ <newline>+  // Grants certain permissions to a file. |permissions| must be a bit-set of <newline>+  // base::PlatformFileFlags. <newline>+  virtual void GrantPermissionsForFile(int child_id, <newline>+                                       const FilePath& file, <newline>+                                       int permissions) = 0; <newline>+ <newline>+  // Whenever the user picks a file from a <input type="file"> element, the <newline>+  // browser should call this function to grant the child process the capability <newline>+  // to upload the file to the web. <newline>+  virtual void GrantReadFile(int child_id, const FilePath& file) = 0; <newline>+ <newline>+  // Grants the child process the capability to access URLs of the provided <newline>+  // scheme. <newline>+  virtual void GrantScheme(int child_id, const std::string& scheme) = 0; <newline>+}; <newline>+ <newline>+};  // namespace content <newline>+ <newline>+#endif  // CONTENT_PUBLIC_BROWSER_CHILD_PROCESS_SECURITY_POLICY_H_
7e6fa5602edc44523393383520fae945bf6f337	csilv@chromium.org <csilv@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 8 23:39:44 2012 +0000	Revert 121044 - Don't use system libpng by default. It causes security maintenance problems for ChromeOS. It's worth noting that we also don't use the system library for many other important components such as libxml. Reverting due to compile errors on Linux: http://chromegw.corp.google.com/i/chromium/builders/Linux%20Builder%20%28dbg%29%28shared%29/builds/17665/steps/compile/logs/stdio TBR=cevans@chromium.org	112822		https://chromiumcodereview.appspot.com/9374001	svn://svn.chromium.org/chrome/trunk/src@121090 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libpng/libpng.gyp b/third_party/libpng/libpng.gyp <newline>index beccefe..5325310 100644 <newline>--- a/third_party/libpng/libpng.gyp <newline>+++ b/third_party/libpng/libpng.gyp <newline>@@ -1,4 +1,4 @@ <newline>-# Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+# Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline> # Use of this source code is governed by a BSD-style license that can be <newline> # found in the LICENSE file. <newline>@@ -6,9 +6,8 @@ <newline>   'variables': { <newline>     'conditions': [ <newline>       [ 'os_posix == 1 and OS != "mac" and OS != "android"', { <newline>-        # Maybe link to system .so once the security concerns are thought <newline>-        # through, since we already use it due to GTK. <newline>-        'use_system_libpng%': 0, <newline>+        # Link to system .so since we already use it due to GTK. <newline>+        'use_system_libpng%': 1, <newline>       }, {  # os_posix != 1 or OS == "mac" <newline>         'use_system_libpng%': 0, <newline>       }],
e1f5e02e91002563a90c031999face8db78ee3c	csilv@chromium.org <csilv@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 8 23:39:44 2012 +0000	Revert 121044 - Don't use system libpng by default. It causes security maintenance problems for ChromeOS. It's worth noting that we also don't use the system library for many other important components such as libxml. Reverting due to compile errors on Linux: http://chromegw.corp.google.com/i/chromium/builders/Linux%20Builder%20%28dbg%29%28shared%29/builds/17665/steps/compile/logs/stdio TBR=cevans@chromium.org	112822		https://chromiumcodereview.appspot.com/9374001	svn://svn.chromium.org/chrome/trunk/src@121090 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libpng/libpng.gyp b/third_party/libpng/libpng.gyp <newline>index beccefe..5325310 100644 <newline>--- a/third_party/libpng/libpng.gyp <newline>+++ b/third_party/libpng/libpng.gyp <newline>@@ -1,4 +1,4 @@ <newline>-# Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+# Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline> # Use of this source code is governed by a BSD-style license that can be <newline> # found in the LICENSE file. <newline>@@ -6,9 +6,8 @@ <newline>   'variables': { <newline>     'conditions': [ <newline>       [ 'os_posix == 1 and OS != "mac" and OS != "android"', { <newline>-        # Maybe link to system .so once the security concerns are thought <newline>-        # through, since we already use it due to GTK. <newline>-        'use_system_libpng%': 0, <newline>+        # Link to system .so since we already use it due to GTK. <newline>+        'use_system_libpng%': 1, <newline>       }, {  # os_posix != 1 or OS == "mac" <newline>         'use_system_libpng%': 0, <newline>       }],
1509e2b34ce9b7f096f6d0dedd425dbc5f1edcd	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 8 21:43:49 2012 +0000	Don't use system libpng by default. It causes security maintenance problems for ChromeOS. It's worth noting that we also don't use the system library for many other important components such as libxml.	112822		http://codereview.chromium.org/9365007	svn://svn.chromium.org/chrome/trunk/src@121044 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libpng/libpng.gyp b/third_party/libpng/libpng.gyp <newline>index 5325310..beccefe 100644 <newline>--- a/third_party/libpng/libpng.gyp <newline>+++ b/third_party/libpng/libpng.gyp <newline>@@ -1,4 +1,4 @@ <newline>-# Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+# Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline> # Use of this source code is governed by a BSD-style license that can be <newline> # found in the LICENSE file. <newline>@@ -6,8 +6,9 @@ <newline>   'variables': { <newline>     'conditions': [ <newline>       [ 'os_posix == 1 and OS != "mac" and OS != "android"', { <newline>-        # Link to system .so since we already use it due to GTK. <newline>-        'use_system_libpng%': 1, <newline>+        # Maybe link to system .so once the security concerns are thought <newline>+        # through, since we already use it due to GTK. <newline>+        'use_system_libpng%': 0, <newline>       }, {  # os_posix != 1 or OS == "mac" <newline>         'use_system_libpng%': 0, <newline>       }],
1eb17e9535bf2025d8ae6045a88ea21f1eeb4ba	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 8 21:43:49 2012 +0000	Don't use system libpng by default. It causes security maintenance problems for ChromeOS. It's worth noting that we also don't use the system library for many other important components such as libxml.	112822		http://codereview.chromium.org/9365007	svn://svn.chromium.org/chrome/trunk/src@121044 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libpng/libpng.gyp b/third_party/libpng/libpng.gyp <newline>index 5325310..beccefe 100644 <newline>--- a/third_party/libpng/libpng.gyp <newline>+++ b/third_party/libpng/libpng.gyp <newline>@@ -1,4 +1,4 @@ <newline>-# Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+# Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline> # Use of this source code is governed by a BSD-style license that can be <newline> # found in the LICENSE file. <newline>@@ -6,8 +6,9 @@ <newline>   'variables': { <newline>     'conditions': [ <newline>       [ 'os_posix == 1 and OS != "mac" and OS != "android"', { <newline>-        # Link to system .so since we already use it due to GTK. <newline>-        'use_system_libpng%': 1, <newline>+        # Maybe link to system .so once the security concerns are thought <newline>+        # through, since we already use it due to GTK. <newline>+        'use_system_libpng%': 0, <newline>       }, {  # os_posix != 1 or OS == "mac" <newline>         'use_system_libpng%': 0, <newline>       }],
65b3c4132027ecec10aa516b1c2f751d12522ba	dalecurtis@chromium.org <dalecurtis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 7 06:45:55 2012 +0000	Fix incomplete teardown of demuxer. I ran into an issue with PipelineIntegrationTests where one of the security videos was causing ~FileDataSource to DCHECK complain about file_ never being torn down. Tracing this back, it's because we return NULL for the demuxer when an error is encountered. This prevents demuxer->Stop() from being called which leaves the data source in an unhappy state. TEST=PipelineIntegrationTests/media_unittests	none		http://codereview.chromium.org/9350004	svn://svn.chromium.org/chrome/trunk/src@120730 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/filters/ffmpeg_demuxer_factory.cc b/media/filters/ffmpeg_demuxer_factory.cc <newline>index 0c5e402..13494b9 100644 <newline>--- a/media/filters/ffmpeg_demuxer_factory.cc <newline>+++ b/media/filters/ffmpeg_demuxer_factory.cc <newline>@@ -22,11 +22,7 @@ FFmpegDemuxerFactory::~FFmpegDemuxerFactory() {} <newline> static void DemuxerInitDone(const DemuxerFactory::BuildCallback& cb, <newline>                             const scoped_refptr<FFmpegDemuxer>& demuxer, <newline>                             PipelineStatus status) { <newline>-  if (status != PIPELINE_OK) { <newline>-    cb.Run(status, NULL); <newline>-    return; <newline>-  } <newline>-  cb.Run(PIPELINE_OK, demuxer); <newline>+  cb.Run(status, demuxer); <newline> } <newline> void FFmpegDemuxerFactory::Build(const std::string& url,
d4154b7addac3548b34cf487800775682e0144f	dalecurtis@chromium.org <dalecurtis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 7 06:45:55 2012 +0000	Fix incomplete teardown of demuxer. I ran into an issue with PipelineIntegrationTests where one of the security videos was causing ~FileDataSource to DCHECK complain about file_ never being torn down. Tracing this back, it's because we return NULL for the demuxer when an error is encountered. This prevents demuxer->Stop() from being called which leaves the data source in an unhappy state. TEST=PipelineIntegrationTests/media_unittests	none		http://codereview.chromium.org/9350004	svn://svn.chromium.org/chrome/trunk/src@120730 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/filters/ffmpeg_demuxer_factory.cc b/media/filters/ffmpeg_demuxer_factory.cc <newline>index 0c5e402..13494b9 100644 <newline>--- a/media/filters/ffmpeg_demuxer_factory.cc <newline>+++ b/media/filters/ffmpeg_demuxer_factory.cc <newline>@@ -22,11 +22,7 @@ FFmpegDemuxerFactory::~FFmpegDemuxerFactory() {} <newline> static void DemuxerInitDone(const DemuxerFactory::BuildCallback& cb, <newline>                             const scoped_refptr<FFmpegDemuxer>& demuxer, <newline>                             PipelineStatus status) { <newline>-  if (status != PIPELINE_OK) { <newline>-    cb.Run(status, NULL); <newline>-    return; <newline>-  } <newline>-  cb.Run(PIPELINE_OK, demuxer); <newline>+  cb.Run(status, demuxer); <newline> } <newline> void FFmpegDemuxerFactory::Build(const std::string& url,
c1a97dfa88dab1e0d66e3fccf4b8e9a37287df6	ananta@chromium.org <ananta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 1 20:26:58 2012 +0000	Removing unnecessary includes of the content\browser\child_process_security_policy.h file in preparation for creating a public content API around the ChildProcessSecurityPolicy class.	98716		https://chromiumcodereview.appspot.com/9307023	svn://svn.chromium.org/chrome/trunk/src@120096 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/extensions/extension_message_service.cc b/chrome/browser/extensions/extension_message_service.cc <newline>index 097e2f6..21cb99a 100644 <newline>--- a/chrome/browser/extensions/extension_message_service.cc <newline>+++ b/chrome/browser/extensions/extension_message_service.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -16,7 +16,6 @@ <newline> #include "chrome/browser/ui/tab_contents/tab_contents_wrapper.h" <newline> #include "chrome/common/extensions/extension.h" <newline> #include "chrome/common/extensions/extension_messages.h" <newline>-#include "content/browser/child_process_security_policy.h" <newline> #include "content/browser/renderer_host/render_view_host.h" <newline> #include "content/public/browser/notification_service.h" <newline> #include "content/public/browser/notification_types.h"
fce15bcdfd22b6d9eb60c9741932d9c917b3bcc	ananta@chromium.org <ananta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 1 20:26:58 2012 +0000	Removing unnecessary includes of the content\browser\child_process_security_policy.h file in preparation for creating a public content API around the ChildProcessSecurityPolicy class.	98716		https://chromiumcodereview.appspot.com/9307023	svn://svn.chromium.org/chrome/trunk/src@120096 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/extensions/extension_message_service.cc b/chrome/browser/extensions/extension_message_service.cc <newline>index 097e2f6..21cb99a 100644 <newline>--- a/chrome/browser/extensions/extension_message_service.cc <newline>+++ b/chrome/browser/extensions/extension_message_service.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -16,7 +16,6 @@ <newline> #include "chrome/browser/ui/tab_contents/tab_contents_wrapper.h" <newline> #include "chrome/common/extensions/extension.h" <newline> #include "chrome/common/extensions/extension_messages.h" <newline>-#include "content/browser/child_process_security_policy.h" <newline> #include "content/browser/renderer_host/render_view_host.h" <newline> #include "content/public/browser/notification_service.h" <newline> #include "content/public/browser/notification_types.h"
bb9af6cb129a36b6244314899370a40f8b75e35	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jan 26 08:31:45 2012 +0000	Improving `content_security_policy` documentation. Added a document just for `content_security_policy` explaining the default restrictions, and offering pointers regarding best practice. Also updated the Analytics example and documentation accordingly. TEST=	111049		https://chromiumcodereview.appspot.com/9212044	svn://svn.chromium.org/chrome/trunk/src@119211 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/tut_analytics.html b/chrome/common/extensions/docs/tut_analytics.html <newline>index 180cf1e..74bca00 100644 <newline>--- a/chrome/common/extensions/docs/tut_analytics.html <newline>+++ b/chrome/common/extensions/docs/tut_analytics.html <newline>@@ -394,7 +394,7 @@ extension.</p> <newline> <p> <newline>   You will also need a <a href="http://www.google.com/analytics">Google <newline>-  Analytics account</a> set up to track your extension.  Note that when setting <newline>+  Analytics account</a> set up to track your extension. Note that when setting <newline>   up the account, you can use any value in the Website's URL field, as your <newline>   extension will not have an URL of its own. <newline> </p> <newline>@@ -403,26 +403,20 @@ extension.</p> <newline>   <img src="images/tut_analytics/screenshot01.png" style="width:400px;height:82px;" alt="The analytics setup with info for a chrome extension filled out."> <newline> </p> <newline>-<p> <newline>-  Also note that Google Analytics requires version <strong>4.0.302.2</strong> <newline>-  of Google Chrome to work correctly.  Users with an earlier version of Google <newline>-  Chrome will not show up on your Google Analytics reports.  View <newline>-  <a href="faq.html#faq-dev-14">this FAQ entry</a> to learn how to check which <newline>-  version of Google Chrome is deployed to which platform. <newline>-</p> <newline>- <newline> <h2 id="toc-installing">Installing the tracking code</h2> <newline> <p> <newline>   The standard Google Analytics tracking code snippet fetches a file named <newline>   <code>ga.js</code> from an SSL protected URL if the current page <newline>-  was loaded using the <code>https://</code> protocol.  <strong>It is strongly <newline>-  advised to use the SSL protected ga.js in an extension</strong>, <newline>-  but Google Chrome extension <newline>-  pages are hosted under <code>chrome-extension://</code> URLs, so the tracking <newline>-  snippet must be modified slightly to pull <code>ga.js</code> directly from <newline>-  <code>https://ssl.google-analytics.com/ga.js</code> instead of the default <newline>-  location. <newline>+  was loaded using the <code>https://</code> protocol.  <strong>Chrome <newline>+  extensions and applications may <em>only</em> use the SSL-protected version of <newline>+  <code>ga.js</code></strong>. Loading <code>ga.js</code> over insecure HTTP is <newline>+  disallowed by Chrome's default <a href="contentSecurityPolicy.html">Content <newline>+  Security Policy</a>. This, plus the fact that Chrome extensions are hosted <newline>+  under the <code>chrome-extension://</code> schema, requires a slight <newline>+  modification to the usual tracking snippet to pull <code>ga.js</code> directly <newline>+  from <code>https://ssl.google-analytics.com/ga.js</code> instead of the <newline>+  default location. <newline> </p> <newline> <p> <newline>@@ -439,28 +433,45 @@ extension.</p> <newline> </pre> <newline> <p> <newline>-  Here is a background page which loads the asynchronous tracking code and <newline>+  You'll also need to ensure that your extension has access to load the resource <newline>+  by relaxing the default content security policy. The policy definition in your <newline>+  <a href="manifest.html"><code>manifest.json</code></a> might look like: <newline>+</p> <newline>+ <newline>+<pre>{ <newline>+  ..., <newline>+  "content_security_policy": "script-src 'self' https://ssl.google-analytics.com; object-src 'self'", <newline>+  ... <newline>+}</pre> <newline>+ <newline>+<p> <newline>+  Here is a popup page (<code>popup.html</code>) which loads the asynchronous <newline>+  tracking code via an external JavaScript file (<code>popup.js</code>) and <newline>   tracks a single page view: <newline> </p> <newline>-<pre>&lt;!DOCTYPE html&gt; <newline>+<pre>popup.js: <newline>+========= <newline>+ <newline>+var _gaq = _gaq || []; <newline>+_gaq.push(['_setAccount', 'UA-XXXXXXXX-X']); <newline>+_gaq.push(['_trackPageview']); <newline>+ <newline>+(function() { <newline>+  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; <newline>+  ga.src = 'https://ssl.google-analytics.com/ga.js'; <newline>+  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); <newline>+})(); <newline>+ <newline>+popup.html: <newline>+=========== <newline>+&lt;!DOCTYPE html&gt; <newline> &lt;html&gt; <newline>  &lt;head&gt; <newline>    ... <newline>+  &lt;script src="popup.js"&gt;&lt;/script&gt; <newline>  &lt;/head&gt; <newline>  &lt;body&gt; <newline>-   &lt;script&gt; <newline>-     var _gaq = _gaq || []; <newline>-     _gaq.push(['_setAccount', 'UA-XXXXXXXX-X']); <newline>-     _gaq.push(['_trackPageview']); <newline>- <newline>-     (function() { <newline>-       var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; <newline>-       ga.src = 'https://ssl.google-analytics.com/ga.js'; <newline>-       var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); <newline>-     })(); <newline>-   &lt;/script&gt; <newline>- <newline>    ... <newline>  &lt;/body&gt; <newline> &lt;/html&gt; <newline>@@ -514,27 +525,28 @@ extension.</p> <newline>   three buttons users may click: <newline> </p> <newline>-<pre>  &lt;button&gt;Button 1&lt;/button&gt; <newline>-  &lt;button&gt;Button 2&lt;/button&gt; <newline>-  &lt;button&gt;Button 3&lt;/button&gt; <newline>+<pre>  &lt;button id='button1'&gt;Button 1&lt;/button&gt; <newline>+  &lt;button id='button2'&gt;Button 2&lt;/button&gt; <newline>+  &lt;button id='button3'&gt;Button 3&lt;/button&gt; <newline> </pre> <newline> <p> <newline>   Write a function that sends click events to Google Analytics: <newline> </p> <newline>-<pre>  function trackButton(button_id) { <newline>-    _gaq.push(['_trackEvent', 'button' + button_id, 'clicked']); <newline>+<pre>  function trackButton(e) { <newline>+    _gaq.push(['_trackEvent', e.target.id, 'clicked']); <newline>   }; <newline> </pre> <newline> <p> <newline>-  And call it when each button is pressed: <newline>+  And use it as an event handler for each button's click: <newline> </p> <newline>-<pre>  &lt;button onclick="trackButton(1);"&gt;Button 1&lt;/button&gt; <newline>-  &lt;button onclick="trackButton(2);"&gt;Button 2&lt;/button&gt; <newline>-  &lt;button onclick="trackButton(3);"&gt;Button 3&lt;/button&gt; <newline>+<pre>  var buttons = document.querySelectorAll('button'); <newline>+  for (var i = 0; i &lt; buttons.length; i++) { <newline>+    buttons[i].addEventListener('click', trackButtonClick); <newline>+  } <newline> </pre> <newline> <p>
b77fe592eed618a37d3b73ba0dff5b1968b4efa	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jan 26 08:31:45 2012 +0000	Improving `content_security_policy` documentation. Added a document just for `content_security_policy` explaining the default restrictions, and offering pointers regarding best practice. Also updated the Analytics example and documentation accordingly. TEST=	111049		https://chromiumcodereview.appspot.com/9212044	svn://svn.chromium.org/chrome/trunk/src@119211 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/tut_analytics.html b/chrome/common/extensions/docs/tut_analytics.html <newline>index 180cf1e..74bca00 100644 <newline>--- a/chrome/common/extensions/docs/tut_analytics.html <newline>+++ b/chrome/common/extensions/docs/tut_analytics.html <newline>@@ -394,7 +394,7 @@ extension.</p> <newline> <p> <newline>   You will also need a <a href="http://www.google.com/analytics">Google <newline>-  Analytics account</a> set up to track your extension.  Note that when setting <newline>+  Analytics account</a> set up to track your extension. Note that when setting <newline>   up the account, you can use any value in the Website's URL field, as your <newline>   extension will not have an URL of its own. <newline> </p> <newline>@@ -403,26 +403,20 @@ extension.</p> <newline>   <img src="images/tut_analytics/screenshot01.png" style="width:400px;height:82px;" alt="The analytics setup with info for a chrome extension filled out."> <newline> </p> <newline>-<p> <newline>-  Also note that Google Analytics requires version <strong>4.0.302.2</strong> <newline>-  of Google Chrome to work correctly.  Users with an earlier version of Google <newline>-  Chrome will not show up on your Google Analytics reports.  View <newline>-  <a href="faq.html#faq-dev-14">this FAQ entry</a> to learn how to check which <newline>-  version of Google Chrome is deployed to which platform. <newline>-</p> <newline>- <newline> <h2 id="toc-installing">Installing the tracking code</h2> <newline> <p> <newline>   The standard Google Analytics tracking code snippet fetches a file named <newline>   <code>ga.js</code> from an SSL protected URL if the current page <newline>-  was loaded using the <code>https://</code> protocol.  <strong>It is strongly <newline>-  advised to use the SSL protected ga.js in an extension</strong>, <newline>-  but Google Chrome extension <newline>-  pages are hosted under <code>chrome-extension://</code> URLs, so the tracking <newline>-  snippet must be modified slightly to pull <code>ga.js</code> directly from <newline>-  <code>https://ssl.google-analytics.com/ga.js</code> instead of the default <newline>-  location. <newline>+  was loaded using the <code>https://</code> protocol.  <strong>Chrome <newline>+  extensions and applications may <em>only</em> use the SSL-protected version of <newline>+  <code>ga.js</code></strong>. Loading <code>ga.js</code> over insecure HTTP is <newline>+  disallowed by Chrome's default <a href="contentSecurityPolicy.html">Content <newline>+  Security Policy</a>. This, plus the fact that Chrome extensions are hosted <newline>+  under the <code>chrome-extension://</code> schema, requires a slight <newline>+  modification to the usual tracking snippet to pull <code>ga.js</code> directly <newline>+  from <code>https://ssl.google-analytics.com/ga.js</code> instead of the <newline>+  default location. <newline> </p> <newline> <p> <newline>@@ -439,28 +433,45 @@ extension.</p> <newline> </pre> <newline> <p> <newline>-  Here is a background page which loads the asynchronous tracking code and <newline>+  You'll also need to ensure that your extension has access to load the resource <newline>+  by relaxing the default content security policy. The policy definition in your <newline>+  <a href="manifest.html"><code>manifest.json</code></a> might look like: <newline>+</p> <newline>+ <newline>+<pre>{ <newline>+  ..., <newline>+  "content_security_policy": "script-src 'self' https://ssl.google-analytics.com; object-src 'self'", <newline>+  ... <newline>+}</pre> <newline>+ <newline>+<p> <newline>+  Here is a popup page (<code>popup.html</code>) which loads the asynchronous <newline>+  tracking code via an external JavaScript file (<code>popup.js</code>) and <newline>   tracks a single page view: <newline> </p> <newline>-<pre>&lt;!DOCTYPE html&gt; <newline>+<pre>popup.js: <newline>+========= <newline>+ <newline>+var _gaq = _gaq || []; <newline>+_gaq.push(['_setAccount', 'UA-XXXXXXXX-X']); <newline>+_gaq.push(['_trackPageview']); <newline>+ <newline>+(function() { <newline>+  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; <newline>+  ga.src = 'https://ssl.google-analytics.com/ga.js'; <newline>+  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); <newline>+})(); <newline>+ <newline>+popup.html: <newline>+=========== <newline>+&lt;!DOCTYPE html&gt; <newline> &lt;html&gt; <newline>  &lt;head&gt; <newline>    ... <newline>+  &lt;script src="popup.js"&gt;&lt;/script&gt; <newline>  &lt;/head&gt; <newline>  &lt;body&gt; <newline>-   &lt;script&gt; <newline>-     var _gaq = _gaq || []; <newline>-     _gaq.push(['_setAccount', 'UA-XXXXXXXX-X']); <newline>-     _gaq.push(['_trackPageview']); <newline>- <newline>-     (function() { <newline>-       var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; <newline>-       ga.src = 'https://ssl.google-analytics.com/ga.js'; <newline>-       var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); <newline>-     })(); <newline>-   &lt;/script&gt; <newline>- <newline>    ... <newline>  &lt;/body&gt; <newline> &lt;/html&gt; <newline>@@ -514,27 +525,28 @@ extension.</p> <newline>   three buttons users may click: <newline> </p> <newline>-<pre>  &lt;button&gt;Button 1&lt;/button&gt; <newline>-  &lt;button&gt;Button 2&lt;/button&gt; <newline>-  &lt;button&gt;Button 3&lt;/button&gt; <newline>+<pre>  &lt;button id='button1'&gt;Button 1&lt;/button&gt; <newline>+  &lt;button id='button2'&gt;Button 2&lt;/button&gt; <newline>+  &lt;button id='button3'&gt;Button 3&lt;/button&gt; <newline> </pre> <newline> <p> <newline>   Write a function that sends click events to Google Analytics: <newline> </p> <newline>-<pre>  function trackButton(button_id) { <newline>-    _gaq.push(['_trackEvent', 'button' + button_id, 'clicked']); <newline>+<pre>  function trackButton(e) { <newline>+    _gaq.push(['_trackEvent', e.target.id, 'clicked']); <newline>   }; <newline> </pre> <newline> <p> <newline>-  And call it when each button is pressed: <newline>+  And use it as an event handler for each button's click: <newline> </p> <newline>-<pre>  &lt;button onclick="trackButton(1);"&gt;Button 1&lt;/button&gt; <newline>-  &lt;button onclick="trackButton(2);"&gt;Button 2&lt;/button&gt; <newline>-  &lt;button onclick="trackButton(3);"&gt;Button 3&lt;/button&gt; <newline>+<pre>  var buttons = document.querySelectorAll('button'); <newline>+  for (var i = 0; i &lt; buttons.length; i++) { <newline>+    buttons[i].addEventListener('click', trackButtonClick); <newline>+  } <newline> </pre> <newline> <p>
6856735768cefecd83c4ce03b4280fd98385165	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jan 25 21:41:41 2012 +0000	Add comments about not skirting content-security-policy.			https://chromiumcodereview.appspot.com/9289024	svn://svn.chromium.org/chrome/trunk/src@119124 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 01963e8..159d0a9 100755 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -276,7 +276,9 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     """Test special tabs created by URLs like chrome://downloads, <newline>        chrome://settings/extensionSettings, chrome://history etc. <newline>        Also ensures they specify content-security-policy and not inline <newline>-       scripts for those pages that are expected to do so.""" <newline>+       scripts for those pages that are expected to do so.  Patches which <newline>+       break this test by including new inline javascript are security <newline>+       vulnerabilities and should be reverted.""" <newline>     tabs = self._GetPlatformSpecialURLTabs() <newline>     for url, properties in tabs.iteritems(): <newline>       logging.debug('Testing URL %s.' % url)
b85aa666c46e6e60493fc906161d966752fd0db	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jan 25 21:41:41 2012 +0000	Add comments about not skirting content-security-policy.			https://chromiumcodereview.appspot.com/9289024	svn://svn.chromium.org/chrome/trunk/src@119124 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 01963e8..159d0a9 100755 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -276,7 +276,9 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     """Test special tabs created by URLs like chrome://downloads, <newline>        chrome://settings/extensionSettings, chrome://history etc. <newline>        Also ensures they specify content-security-policy and not inline <newline>-       scripts for those pages that are expected to do so.""" <newline>+       scripts for those pages that are expected to do so.  Patches which <newline>+       break this test by including new inline javascript are security <newline>+       vulnerabilities and should be reverted.""" <newline>     tabs = self._GetPlatformSpecialURLTabs() <newline>     for url, properties in tabs.iteritems(): <newline>       logging.debug('Testing URL %s.' % url)
a1c3252cbca1864f4453efdb292496e2628b821	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jan 23 18:15:57 2012 +0000	Pass Content-security-policy and header type from WebSharedWorkerProxy to WebSharedWorkerStub now that webkit is updated. Step #2 of https://bugs.webkit.org/show_bug.cgi?id=75660#c15	105482		https://chromiumcodereview.appspot.com/9154003	svn://svn.chromium.org/chrome/trunk/src@118703 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/worker/websharedworker_stub.h b/content/worker/websharedworker_stub.h <newline>index 4ffe2a0..7caf545 100644 <newline>--- a/content/worker/websharedworker_stub.h <newline>+++ b/content/worker/websharedworker_stub.h <newline>@@ -11,6 +11,7 @@ <newline> #include "content/worker/worker_webapplicationcachehost_impl.h" <newline> #include "googleurl/src/gurl.h" <newline> #include "ipc/ipc_channel.h" <newline>+#include "third_party/WebKit/Source/WebKit/chromium/public/WebSharedWorker.h" <newline> namespace WebKit { <newline> class WebSharedWorker; <newline>@@ -51,7 +52,10 @@ class WebSharedWorkerStub : public IPC::Channel::Listener { <newline>   void OnConnect(int sent_message_port_id, int routing_id); <newline>   void OnStartWorkerContext( <newline>-      const GURL& url, const string16& user_agent, const string16& source_code); <newline>+      const GURL& url, const string16& user_agent, const string16& source_code, <newline>+      const string16& content_security_policy, <newline>+      WebKit::WebContentSecurityPolicyType policy_type); <newline>+ <newline>   void OnTerminateWorkerContext(); <newline>   int route_id_;
d7e332037313bc5a1088a355c4a321a415de305	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jan 23 18:15:57 2012 +0000	Pass Content-security-policy and header type from WebSharedWorkerProxy to WebSharedWorkerStub now that webkit is updated. Step #2 of https://bugs.webkit.org/show_bug.cgi?id=75660#c15	105482		https://chromiumcodereview.appspot.com/9154003	svn://svn.chromium.org/chrome/trunk/src@118703 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/worker/websharedworker_stub.h b/content/worker/websharedworker_stub.h <newline>index 4ffe2a0..7caf545 100644 <newline>--- a/content/worker/websharedworker_stub.h <newline>+++ b/content/worker/websharedworker_stub.h <newline>@@ -11,6 +11,7 @@ <newline> #include "content/worker/worker_webapplicationcachehost_impl.h" <newline> #include "googleurl/src/gurl.h" <newline> #include "ipc/ipc_channel.h" <newline>+#include "third_party/WebKit/Source/WebKit/chromium/public/WebSharedWorker.h" <newline> namespace WebKit { <newline> class WebSharedWorker; <newline>@@ -51,7 +52,10 @@ class WebSharedWorkerStub : public IPC::Channel::Listener { <newline>   void OnConnect(int sent_message_port_id, int routing_id); <newline>   void OnStartWorkerContext( <newline>-      const GURL& url, const string16& user_agent, const string16& source_code); <newline>+      const GURL& url, const string16& user_agent, const string16& source_code, <newline>+      const string16& content_security_policy, <newline>+      WebKit::WebContentSecurityPolicyType policy_type); <newline>+ <newline>   void OnTerminateWorkerContext(); <newline>   int route_id_;
2257266be8d03e57a2fa7ffd2f1cd24ada21e04	Guanqun.Lu@gmail.com <Guanqun.Lu@gmail.com@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jan 14 07:40:44 2012 +0000	Fix compile error for net/third_party/mozilla_security_manager/nsNSSCertTrust.cpp Because in the new nss3 package, CERTDB_VALID_PEER is deprecated and in the chromium build, deprecated is marked as errors. TEST= compiled under nss-devel-3.12.10-6.fc15 and nss-devel-3.13.1-9.fc16	108656		http://codereview.chromium.org/9041002	svn://svn.chromium.org/chrome/trunk/src@117791 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/third_party/mozilla_security_manager/nsNSSCertTrust.cpp b/net/third_party/mozilla_security_manager/nsNSSCertTrust.cpp <newline>index 75fa04f..408e55d 100644 <newline>--- a/net/third_party/mozilla_security_manager/nsNSSCertTrust.cpp <newline>+++ b/net/third_party/mozilla_security_manager/nsNSSCertTrust.cpp <newline>@@ -38,6 +38,14 @@ <newline> #include "net/third_party/mozilla_security_manager/nsNSSCertTrust.h" <newline>+#if !defined(CERTDB_TERMINAL_RECORD) <newline>+/* NSS 3.13 renames CERTDB_VALID_PEER to CERTDB_TERMINAL_RECORD <newline>+ * and marks CERTDB_VALID_PEER as deprecated. <newline>+ * If we're using an older version, rename it ourselves. <newline>+ */ <newline>+#define CERTDB_TERMINAL_RECORD CERTDB_VALID_PEER <newline>+#endif <newline>+ <newline> namespace mozilla_security_manager { <newline> void <newline>@@ -102,7 +110,7 @@ nsNSSCertTrust::SetSSLTrust(PRBool peer, PRBool tPeer, <newline> { <newline>   mTrust.sslFlags = 0; <newline>   if (peer || tPeer) <newline>-    addTrust(&mTrust.sslFlags, CERTDB_VALID_PEER); <newline>+    addTrust(&mTrust.sslFlags, CERTDB_TERMINAL_RECORD); <newline>   if (tPeer) <newline>     addTrust(&mTrust.sslFlags, CERTDB_TRUSTED); <newline>   if (ca || tCA) <newline>@@ -124,7 +132,7 @@ nsNSSCertTrust::SetEmailTrust(PRBool peer, PRBool tPeer, <newline> { <newline>   mTrust.emailFlags = 0; <newline>   if (peer || tPeer) <newline>-    addTrust(&mTrust.emailFlags, CERTDB_VALID_PEER); <newline>+    addTrust(&mTrust.emailFlags, CERTDB_TERMINAL_RECORD); <newline>   if (tPeer) <newline>     addTrust(&mTrust.emailFlags, CERTDB_TRUSTED); <newline>   if (ca || tCA) <newline>@@ -146,7 +154,7 @@ nsNSSCertTrust::SetObjSignTrust(PRBool peer, PRBool tPeer, <newline> { <newline>   mTrust.objectSigningFlags = 0; <newline>   if (peer || tPeer) <newline>-    addTrust(&mTrust.objectSigningFlags, CERTDB_VALID_PEER); <newline>+    addTrust(&mTrust.objectSigningFlags, CERTDB_TERMINAL_RECORD); <newline>   if (tPeer) <newline>     addTrust(&mTrust.objectSigningFlags, CERTDB_TRUSTED); <newline>   if (ca || tCA) <newline>@@ -288,11 +296,12 @@ nsNSSCertTrust::HasPeer(PRBool checkSSL, <newline>                         PRBool checkEmail, <newline>                         PRBool checkObjSign) <newline> { <newline>-  if (checkSSL && !hasTrust(mTrust.sslFlags, CERTDB_VALID_PEER)) <newline>+  if (checkSSL && !hasTrust(mTrust.sslFlags, CERTDB_TERMINAL_RECORD)) <newline>     return PR_FALSE; <newline>-  if (checkEmail && !hasTrust(mTrust.emailFlags, CERTDB_VALID_PEER)) <newline>+  if (checkEmail && !hasTrust(mTrust.emailFlags, CERTDB_TERMINAL_RECORD)) <newline>     return PR_FALSE; <newline>-  if (checkObjSign && !hasTrust(mTrust.objectSigningFlags, CERTDB_VALID_PEER)) <newline>+  if (checkObjSign && <newline>+       !hasTrust(mTrust.objectSigningFlags, CERTDB_TERMINAL_RECORD)) <newline>     return PR_FALSE; <newline>   return PR_TRUE; <newline> }
89dbcd50e560026e5d88973419f4dab0646124b	Guanqun.Lu@gmail.com <Guanqun.Lu@gmail.com@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jan 14 07:40:44 2012 +0000	Fix compile error for net/third_party/mozilla_security_manager/nsNSSCertTrust.cpp Because in the new nss3 package, CERTDB_VALID_PEER is deprecated and in the chromium build, deprecated is marked as errors. TEST= compiled under nss-devel-3.12.10-6.fc15 and nss-devel-3.13.1-9.fc16	108656		http://codereview.chromium.org/9041002	svn://svn.chromium.org/chrome/trunk/src@117791 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/third_party/mozilla_security_manager/nsNSSCertTrust.cpp b/net/third_party/mozilla_security_manager/nsNSSCertTrust.cpp <newline>index 75fa04f..408e55d 100644 <newline>--- a/net/third_party/mozilla_security_manager/nsNSSCertTrust.cpp <newline>+++ b/net/third_party/mozilla_security_manager/nsNSSCertTrust.cpp <newline>@@ -38,6 +38,14 @@ <newline> #include "net/third_party/mozilla_security_manager/nsNSSCertTrust.h" <newline>+#if !defined(CERTDB_TERMINAL_RECORD) <newline>+/* NSS 3.13 renames CERTDB_VALID_PEER to CERTDB_TERMINAL_RECORD <newline>+ * and marks CERTDB_VALID_PEER as deprecated. <newline>+ * If we're using an older version, rename it ourselves. <newline>+ */ <newline>+#define CERTDB_TERMINAL_RECORD CERTDB_VALID_PEER <newline>+#endif <newline>+ <newline> namespace mozilla_security_manager { <newline> void <newline>@@ -102,7 +110,7 @@ nsNSSCertTrust::SetSSLTrust(PRBool peer, PRBool tPeer, <newline> { <newline>   mTrust.sslFlags = 0; <newline>   if (peer || tPeer) <newline>-    addTrust(&mTrust.sslFlags, CERTDB_VALID_PEER); <newline>+    addTrust(&mTrust.sslFlags, CERTDB_TERMINAL_RECORD); <newline>   if (tPeer) <newline>     addTrust(&mTrust.sslFlags, CERTDB_TRUSTED); <newline>   if (ca || tCA) <newline>@@ -124,7 +132,7 @@ nsNSSCertTrust::SetEmailTrust(PRBool peer, PRBool tPeer, <newline> { <newline>   mTrust.emailFlags = 0; <newline>   if (peer || tPeer) <newline>-    addTrust(&mTrust.emailFlags, CERTDB_VALID_PEER); <newline>+    addTrust(&mTrust.emailFlags, CERTDB_TERMINAL_RECORD); <newline>   if (tPeer) <newline>     addTrust(&mTrust.emailFlags, CERTDB_TRUSTED); <newline>   if (ca || tCA) <newline>@@ -146,7 +154,7 @@ nsNSSCertTrust::SetObjSignTrust(PRBool peer, PRBool tPeer, <newline> { <newline>   mTrust.objectSigningFlags = 0; <newline>   if (peer || tPeer) <newline>-    addTrust(&mTrust.objectSigningFlags, CERTDB_VALID_PEER); <newline>+    addTrust(&mTrust.objectSigningFlags, CERTDB_TERMINAL_RECORD); <newline>   if (tPeer) <newline>     addTrust(&mTrust.objectSigningFlags, CERTDB_TRUSTED); <newline>   if (ca || tCA) <newline>@@ -288,11 +296,12 @@ nsNSSCertTrust::HasPeer(PRBool checkSSL, <newline>                         PRBool checkEmail, <newline>                         PRBool checkObjSign) <newline> { <newline>-  if (checkSSL && !hasTrust(mTrust.sslFlags, CERTDB_VALID_PEER)) <newline>+  if (checkSSL && !hasTrust(mTrust.sslFlags, CERTDB_TERMINAL_RECORD)) <newline>     return PR_FALSE; <newline>-  if (checkEmail && !hasTrust(mTrust.emailFlags, CERTDB_VALID_PEER)) <newline>+  if (checkEmail && !hasTrust(mTrust.emailFlags, CERTDB_TERMINAL_RECORD)) <newline>     return PR_FALSE; <newline>-  if (checkObjSign && !hasTrust(mTrust.objectSigningFlags, CERTDB_VALID_PEER)) <newline>+  if (checkObjSign && <newline>+       !hasTrust(mTrust.objectSigningFlags, CERTDB_TERMINAL_RECORD)) <newline>     return PR_FALSE; <newline>   return PR_TRUE; <newline> }
b88d805d4acd285f9ab8c9dd00f673a079476db	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jan 12 20:55:38 2012 +0000	Revert 116954 - Pass Content-security-policy and header type from WebSharedWorkerProxy to WebSharedWorkerStub. WebKit side has changed, and need to start from scratch to avoid conflicts on rolls. TBR=jam@chromium.org	105482		http://codereview.chromium.org/9188046	svn://svn.chromium.org/chrome/trunk/src@117496 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/worker/websharedworker_stub.h b/content/worker/websharedworker_stub.h <newline>index b2e8344..4ffe2a0 100644 <newline>--- a/content/worker/websharedworker_stub.h <newline>+++ b/content/worker/websharedworker_stub.h <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -51,9 +51,7 @@ class WebSharedWorkerStub : public IPC::Channel::Listener { <newline>   void OnConnect(int sent_message_port_id, int routing_id); <newline>   void OnStartWorkerContext( <newline>-      const GURL& url, const string16& user_agent, const string16& source_code, <newline>-      const string16& content_security_policy, bool report_only); <newline>- <newline>+      const GURL& url, const string16& user_agent, const string16& source_code); <newline>   void OnTerminateWorkerContext(); <newline>   int route_id_;
c0fdb30ccff125add97db11b0d83f07713d5e0b	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jan 12 20:55:38 2012 +0000	Revert 116954 - Pass Content-security-policy and header type from WebSharedWorkerProxy to WebSharedWorkerStub. WebKit side has changed, and need to start from scratch to avoid conflicts on rolls. TBR=jam@chromium.org	105482		http://codereview.chromium.org/9188046	svn://svn.chromium.org/chrome/trunk/src@117496 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/worker/websharedworker_stub.h b/content/worker/websharedworker_stub.h <newline>index b2e8344..4ffe2a0 100644 <newline>--- a/content/worker/websharedworker_stub.h <newline>+++ b/content/worker/websharedworker_stub.h <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -51,9 +51,7 @@ class WebSharedWorkerStub : public IPC::Channel::Listener { <newline>   void OnConnect(int sent_message_port_id, int routing_id); <newline>   void OnStartWorkerContext( <newline>-      const GURL& url, const string16& user_agent, const string16& source_code, <newline>-      const string16& content_security_policy, bool report_only); <newline>- <newline>+      const GURL& url, const string16& user_agent, const string16& source_code); <newline>   void OnTerminateWorkerContext(); <newline>   int route_id_;
bc9a8b2d51f5c84d8621354b1b5063fdf4f6a26	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jan 9 23:47:56 2012 +0000	Pass Content-security-policy and header type from WebSharedWorkerProxy to WebSharedWorkerStub.	105482		http://codereview.chromium.org/9154003	svn://svn.chromium.org/chrome/trunk/src@116954 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/worker/websharedworker_stub.h b/content/worker/websharedworker_stub.h <newline>index 4ffe2a0..b2e8344 100644 <newline>--- a/content/worker/websharedworker_stub.h <newline>+++ b/content/worker/websharedworker_stub.h <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -51,7 +51,9 @@ class WebSharedWorkerStub : public IPC::Channel::Listener { <newline>   void OnConnect(int sent_message_port_id, int routing_id); <newline>   void OnStartWorkerContext( <newline>-      const GURL& url, const string16& user_agent, const string16& source_code); <newline>+      const GURL& url, const string16& user_agent, const string16& source_code, <newline>+      const string16& content_security_policy, bool report_only); <newline>+ <newline>   void OnTerminateWorkerContext(); <newline>   int route_id_;
bead4818d6bf5bfb9d75f943f2312ea20d7d944	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jan 9 23:47:56 2012 +0000	Pass Content-security-policy and header type from WebSharedWorkerProxy to WebSharedWorkerStub.	105482		http://codereview.chromium.org/9154003	svn://svn.chromium.org/chrome/trunk/src@116954 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/worker/websharedworker_stub.h b/content/worker/websharedworker_stub.h <newline>index 4ffe2a0..b2e8344 100644 <newline>--- a/content/worker/websharedworker_stub.h <newline>+++ b/content/worker/websharedworker_stub.h <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -51,7 +51,9 @@ class WebSharedWorkerStub : public IPC::Channel::Listener { <newline>   void OnConnect(int sent_message_port_id, int routing_id); <newline>   void OnStartWorkerContext( <newline>-      const GURL& url, const string16& user_agent, const string16& source_code); <newline>+      const GURL& url, const string16& user_agent, const string16& source_code, <newline>+      const string16& content_security_policy, bool report_only); <newline>+ <newline>   void OnTerminateWorkerContext(); <newline>   int route_id_;
fba662ab4048b26a3fd12c587a9e16854e20cf5	dalecurtis@chromium.org <dalecurtis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jan 5 23:43:12 2012 +0000	Fix abspath/normpath mixup in security check. Standarizes the security check and the input sanitizer to use abspath. Currently causing tests to fail on the bots. TEST=Ran server with relative path.	109320		http://codereview.chromium.org/9113027	svn://svn.chromium.org/chrome/trunk/src@116584 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/tools/constrained_network_server/cns.py b/media/tools/constrained_network_server/cns.py <newline>index 835ecdb..4f0198d 100755 <newline>--- a/media/tools/constrained_network_server/cns.py <newline>+++ b/media/tools/constrained_network_server/cns.py <newline>@@ -297,8 +297,8 @@ def ParseArgs(): <newline>   except ValueError: <newline>     parser.error('Invalid port range specified.') <newline>-  # Normalize the path to remove any . or .. <newline>-  options.www_root = os.path.normpath(options.www_root) <newline>+  # Convert the path to an absolute to remove any . or .. <newline>+  options.www_root = os.path.abspath(options.www_root) <newline>   return options
fb8a20a11c9adccc5d77b0bed61c8b883b60b13	dalecurtis@chromium.org <dalecurtis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jan 5 23:43:12 2012 +0000	Fix abspath/normpath mixup in security check. Standarizes the security check and the input sanitizer to use abspath. Currently causing tests to fail on the bots. TEST=Ran server with relative path.	109320		http://codereview.chromium.org/9113027	svn://svn.chromium.org/chrome/trunk/src@116584 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/media/tools/constrained_network_server/cns.py b/media/tools/constrained_network_server/cns.py <newline>index 835ecdb..4f0198d 100755 <newline>--- a/media/tools/constrained_network_server/cns.py <newline>+++ b/media/tools/constrained_network_server/cns.py <newline>@@ -297,8 +297,8 @@ def ParseArgs(): <newline>   except ValueError: <newline>     parser.error('Invalid port range specified.') <newline>-  # Normalize the path to remove any . or .. <newline>-  options.www_root = os.path.normpath(options.www_root) <newline>+  # Convert the path to an absolute to remove any . or .. <newline>+  options.www_root = os.path.abspath(options.www_root) <newline>   return options
ba3ff644ff135fc95bf61685a83eb57b8093f34	dennisjeffrey@chromium.org <dennisjeffrey@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jan 4 21:43:45 2012 +0000	Exclude the Bookmark Manager extension from the pyauto ChromeOS extension security test. TEST=None	chromium-os:24637		http://codereview.chromium.org/9008072	svn://svn.chromium.org/chrome/trunk/src@116390 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/chromeos_security.py b/chrome/test/functional/chromeos_security.py <newline>index b3e1a50..77c2527 100755 <newline>--- a/chrome/test/functional/chromeos_security.py <newline>+++ b/chrome/test/functional/chromeos_security.py <newline>@@ -1,5 +1,5 @@ <newline> #!/usr/bin/env python <newline>-# Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+# Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline> # Use of this source code is governed by a BSD-style license that can be <newline> # found in the LICENSE file. <newline>@@ -98,10 +98,11 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>       full_actual_info: A list of dictionaries describing the actual information <newline>                         for all extensions. <newline>     """ <newline>-    # Skip the Web Store; it's integral to Chrome and is redundant to check on <newline>-    # ChromeOS.  This can reduce the number of times we have to update the <newline>-    # baseline for this test. <newline>-    actual_set.discard('Chrome Web Store') <newline>+    # Skip the Web Store and Bookmark Manager; they are integral to Chrome and <newline>+    # are redundant to check on ChromeOS.  This can reduce the number of times <newline>+    # we have to update the baseline for this test. <newline>+    for extension_name in ['Chrome Web Store', 'Bookmark Manager']: <newline>+      actual_set.discard(extension_name) <newline>     def _GetSetDifferenceMessage(expected_set, actual_set): <newline>       strings = []
158ee76f6ec8a8223de6ea62850d83a2ee98003	dennisjeffrey@chromium.org <dennisjeffrey@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jan 4 21:43:45 2012 +0000	Exclude the Bookmark Manager extension from the pyauto ChromeOS extension security test. TEST=None	chromium-os:24637		http://codereview.chromium.org/9008072	svn://svn.chromium.org/chrome/trunk/src@116390 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/chromeos_security.py b/chrome/test/functional/chromeos_security.py <newline>index b3e1a50..77c2527 100755 <newline>--- a/chrome/test/functional/chromeos_security.py <newline>+++ b/chrome/test/functional/chromeos_security.py <newline>@@ -1,5 +1,5 @@ <newline> #!/usr/bin/env python <newline>-# Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+# Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline> # Use of this source code is governed by a BSD-style license that can be <newline> # found in the LICENSE file. <newline>@@ -98,10 +98,11 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>       full_actual_info: A list of dictionaries describing the actual information <newline>                         for all extensions. <newline>     """ <newline>-    # Skip the Web Store; it's integral to Chrome and is redundant to check on <newline>-    # ChromeOS.  This can reduce the number of times we have to update the <newline>-    # baseline for this test. <newline>-    actual_set.discard('Chrome Web Store') <newline>+    # Skip the Web Store and Bookmark Manager; they are integral to Chrome and <newline>+    # are redundant to check on ChromeOS.  This can reduce the number of times <newline>+    # we have to update the baseline for this test. <newline>+    for extension_name in ['Chrome Web Store', 'Bookmark Manager']: <newline>+      actual_set.discard(extension_name) <newline>     def _GetSetDifferenceMessage(expected_set, actual_set): <newline>       strings = []
7f3805644d0324133f508a010dc81012ea827cd	thakis@chromium.org <thakis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 3 23:35:06 2012 +0000	Revert 116138 (this regressed morejs perf on mac and win for some reason. My attempted fix in r116219 didn't work; I'm afraid you'll have to look into this) - Update required Flash version to 10.3.183.10. See http://www.adobe.com/support/security/bulletins/apsb11-26.html. TEST=Flash Player 10.3.183.7 is considered out of date. TBR=bauerb@chromium.org	81293		http://codereview.chromium.org/9008051	svn://svn.chromium.org/chrome/trunk/src@116231 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index 5a0479c..f12ce5c 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -59,16 +59,9 @@ FilePath::CharType kDefaultPluginLibraryName[] = <newline> // Some version ranges can be shared across operating systems. This should be <newline> // done where possible to avoid duplication. <newline> // This is up to date with <newline>-// http://www.adobe.com/support/security/bulletins/apsb11-28.html <newline>+// http://www.adobe.com/support/security/bulletins/apsb11-26.html <newline> static const VersionRangeDefinition kFlashVersionRange[] = { <newline>-// Flash on Linux doesn't show the fourth version component, so we leave it <newline>-// out here in order to avoid blocking an up-to-date Flash. <newline>-#if defined(OS_LINUX) <newline>-#define FLASH_SUBVERSION "" <newline>-#else <newline>-#define FLASH_SUBVERSION ".55" <newline>-#endif <newline>-    { "", "", "11.1.102" FLASH_SUBVERSION, false } <newline>+    { "", "", "10.3.183", false } <newline> }; <newline> // This is up to date with <newline> // http://www.adobe.com/support/security/bulletins/apsb11-19.html <newline>@@ -139,10 +132,10 @@ static const VersionRangeDefinition kJavaVersionRange[] = { <newline>     { "7", "", "10.1", true }  // JDK7u1 identifies itself as 10.1 <newline> }; <newline> // This is up to date with <newline>-// http://www.adobe.com/support/security/bulletins/apsb11-30.html <newline>+// http://www.adobe.com/support/security/bulletins/apsb11-24.html <newline> static const VersionRangeDefinition kAdobeReaderVersionRange[] = { <newline>     { "10", "11", "10.1.1", false }, <newline>-    { "9", "10", "9.4.7", false }, <newline>+    { "9", "10", "9.4.6", false }, <newline>     { "0", "9", "8.3.1", false } <newline> }; <newline> static const VersionRangeDefinition kDivXVersionRange[] = {
4c235d361c3b319f976aeb4e2256f29f3868d34	thakis@chromium.org <thakis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 3 23:35:06 2012 +0000	Revert 116138 (this regressed morejs perf on mac and win for some reason. My attempted fix in r116219 didn't work; I'm afraid you'll have to look into this) - Update required Flash version to 10.3.183.10. See http://www.adobe.com/support/security/bulletins/apsb11-26.html. TEST=Flash Player 10.3.183.7 is considered out of date. TBR=bauerb@chromium.org	81293		http://codereview.chromium.org/9008051	svn://svn.chromium.org/chrome/trunk/src@116231 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index 5a0479c..f12ce5c 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -59,16 +59,9 @@ FilePath::CharType kDefaultPluginLibraryName[] = <newline> // Some version ranges can be shared across operating systems. This should be <newline> // done where possible to avoid duplication. <newline> // This is up to date with <newline>-// http://www.adobe.com/support/security/bulletins/apsb11-28.html <newline>+// http://www.adobe.com/support/security/bulletins/apsb11-26.html <newline> static const VersionRangeDefinition kFlashVersionRange[] = { <newline>-// Flash on Linux doesn't show the fourth version component, so we leave it <newline>-// out here in order to avoid blocking an up-to-date Flash. <newline>-#if defined(OS_LINUX) <newline>-#define FLASH_SUBVERSION "" <newline>-#else <newline>-#define FLASH_SUBVERSION ".55" <newline>-#endif <newline>-    { "", "", "11.1.102" FLASH_SUBVERSION, false } <newline>+    { "", "", "10.3.183", false } <newline> }; <newline> // This is up to date with <newline> // http://www.adobe.com/support/security/bulletins/apsb11-19.html <newline>@@ -139,10 +132,10 @@ static const VersionRangeDefinition kJavaVersionRange[] = { <newline>     { "7", "", "10.1", true }  // JDK7u1 identifies itself as 10.1 <newline> }; <newline> // This is up to date with <newline>-// http://www.adobe.com/support/security/bulletins/apsb11-30.html <newline>+// http://www.adobe.com/support/security/bulletins/apsb11-24.html <newline> static const VersionRangeDefinition kAdobeReaderVersionRange[] = { <newline>     { "10", "11", "10.1.1", false }, <newline>-    { "9", "10", "9.4.7", false }, <newline>+    { "9", "10", "9.4.6", false }, <newline>     { "0", "9", "8.3.1", false } <newline> }; <newline> static const VersionRangeDefinition kDivXVersionRange[] = {
517e4f160b696bb6c4bdb3d0d695ce2cd7739b3	bauerb@chromium.org <bauerb@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 3 15:54:47 2012 +0000	Update required Flash version to 10.3.183.10. See http://www.adobe.com/support/security/bulletins/apsb11-26.html. TEST=Flash Player 10.3.183.7 is considered out of date.	81293		http://codereview.chromium.org/9071005	svn://svn.chromium.org/chrome/trunk/src@116138 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index f12ce5c..5a0479c 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -59,9 +59,16 @@ FilePath::CharType kDefaultPluginLibraryName[] = <newline> // Some version ranges can be shared across operating systems. This should be <newline> // done where possible to avoid duplication. <newline> // This is up to date with <newline>-// http://www.adobe.com/support/security/bulletins/apsb11-26.html <newline>+// http://www.adobe.com/support/security/bulletins/apsb11-28.html <newline> static const VersionRangeDefinition kFlashVersionRange[] = { <newline>-    { "", "", "10.3.183", false } <newline>+// Flash on Linux doesn't show the fourth version component, so we leave it <newline>+// out here in order to avoid blocking an up-to-date Flash. <newline>+#if defined(OS_LINUX) <newline>+#define FLASH_SUBVERSION "" <newline>+#else <newline>+#define FLASH_SUBVERSION ".55" <newline>+#endif <newline>+    { "", "", "11.1.102" FLASH_SUBVERSION, false } <newline> }; <newline> // This is up to date with <newline> // http://www.adobe.com/support/security/bulletins/apsb11-19.html <newline>@@ -132,10 +139,10 @@ static const VersionRangeDefinition kJavaVersionRange[] = { <newline>     { "7", "", "10.1", true }  // JDK7u1 identifies itself as 10.1 <newline> }; <newline> // This is up to date with <newline>-// http://www.adobe.com/support/security/bulletins/apsb11-24.html <newline>+// http://www.adobe.com/support/security/bulletins/apsb11-30.html <newline> static const VersionRangeDefinition kAdobeReaderVersionRange[] = { <newline>     { "10", "11", "10.1.1", false }, <newline>-    { "9", "10", "9.4.6", false }, <newline>+    { "9", "10", "9.4.7", false }, <newline>     { "0", "9", "8.3.1", false } <newline> }; <newline> static const VersionRangeDefinition kDivXVersionRange[] = {
513c973cc0dec3012d5b7efa9817bf85fdcc7e6	bauerb@chromium.org <bauerb@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 3 15:54:47 2012 +0000	Update required Flash version to 10.3.183.10. See http://www.adobe.com/support/security/bulletins/apsb11-26.html. TEST=Flash Player 10.3.183.7 is considered out of date.	81293		http://codereview.chromium.org/9071005	svn://svn.chromium.org/chrome/trunk/src@116138 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index f12ce5c..5a0479c 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2012 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -59,9 +59,16 @@ FilePath::CharType kDefaultPluginLibraryName[] = <newline> // Some version ranges can be shared across operating systems. This should be <newline> // done where possible to avoid duplication. <newline> // This is up to date with <newline>-// http://www.adobe.com/support/security/bulletins/apsb11-26.html <newline>+// http://www.adobe.com/support/security/bulletins/apsb11-28.html <newline> static const VersionRangeDefinition kFlashVersionRange[] = { <newline>-    { "", "", "10.3.183", false } <newline>+// Flash on Linux doesn't show the fourth version component, so we leave it <newline>+// out here in order to avoid blocking an up-to-date Flash. <newline>+#if defined(OS_LINUX) <newline>+#define FLASH_SUBVERSION "" <newline>+#else <newline>+#define FLASH_SUBVERSION ".55" <newline>+#endif <newline>+    { "", "", "11.1.102" FLASH_SUBVERSION, false } <newline> }; <newline> // This is up to date with <newline> // http://www.adobe.com/support/security/bulletins/apsb11-19.html <newline>@@ -132,10 +139,10 @@ static const VersionRangeDefinition kJavaVersionRange[] = { <newline>     { "7", "", "10.1", true }  // JDK7u1 identifies itself as 10.1 <newline> }; <newline> // This is up to date with <newline>-// http://www.adobe.com/support/security/bulletins/apsb11-24.html <newline>+// http://www.adobe.com/support/security/bulletins/apsb11-30.html <newline> static const VersionRangeDefinition kAdobeReaderVersionRange[] = { <newline>     { "10", "11", "10.1.1", false }, <newline>-    { "9", "10", "9.4.6", false }, <newline>+    { "9", "10", "9.4.7", false }, <newline>     { "0", "9", "8.3.1", false } <newline> }; <newline> static const VersionRangeDefinition kDivXVersionRange[] = {
ae24217607b5fa58ffadcdadc61856e0055906d	dennisjeffrey@chromium.org <dennisjeffrey@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 15 21:36:38 2011 +0000	Modify the pyauto-based CrOS extension persmission security test to ignore Web Store. TEST=None	chromium-os:24254		http://codereview.chromium.org/8952008	svn://svn.chromium.org/chrome/trunk/src@114702 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/chromeos_security.py b/chrome/test/functional/chromeos_security.py <newline>index 47a4509..b3e1a50 100755 <newline>--- a/chrome/test/functional/chromeos_security.py <newline>+++ b/chrome/test/functional/chromeos_security.py <newline>@@ -98,6 +98,11 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>       full_actual_info: A list of dictionaries describing the actual information <newline>                         for all extensions. <newline>     """ <newline>+    # Skip the Web Store; it's integral to Chrome and is redundant to check on <newline>+    # ChromeOS.  This can reduce the number of times we have to update the <newline>+    # baseline for this test. <newline>+    actual_set.discard('Chrome Web Store') <newline>+ <newline>     def _GetSetDifferenceMessage(expected_set, actual_set): <newline>       strings = [] <newline>       for missing_item in expected_set.difference(actual_set):
dfe3531ea5881381c7810aabcdbb52e1fa7bb8a	dennisjeffrey@chromium.org <dennisjeffrey@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 15 21:36:38 2011 +0000	Modify the pyauto-based CrOS extension persmission security test to ignore Web Store. TEST=None	chromium-os:24254		http://codereview.chromium.org/8952008	svn://svn.chromium.org/chrome/trunk/src@114702 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/chromeos_security.py b/chrome/test/functional/chromeos_security.py <newline>index 47a4509..b3e1a50 100755 <newline>--- a/chrome/test/functional/chromeos_security.py <newline>+++ b/chrome/test/functional/chromeos_security.py <newline>@@ -98,6 +98,11 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>       full_actual_info: A list of dictionaries describing the actual information <newline>                         for all extensions. <newline>     """ <newline>+    # Skip the Web Store; it's integral to Chrome and is redundant to check on <newline>+    # ChromeOS.  This can reduce the number of times we have to update the <newline>+    # baseline for this test. <newline>+    actual_set.discard('Chrome Web Store') <newline>+ <newline>     def _GetSetDifferenceMessage(expected_set, actual_set): <newline>       strings = [] <newline>       for missing_item in expected_set.difference(actual_set):
0e3acfed6d61df073e611d371461635e65bd76c	rsleevi@chromium.org <rsleevi@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Dec 14 16:08:19 2011 +0000	When encountering certificates signed with md2/md4, make it a fatal error. When encountering certificates signed with md5, interstitial the page with an error about md5 being a weak signing algorithm. This excludes checking the signatures of root certificates (trust anchors), as their self-signed signatures are not relevant to the security of the chain. R=wtc@chromium.org	101123		http://codereview.chromium.org/8374020	svn://svn.chromium.org/chrome/trunk/src@114432 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/x509_certificate_win.cc b/net/base/x509_certificate_win.cc <newline>index c04ff4d..c672dfc 100644 <newline>--- a/net/base/x509_certificate_win.cc <newline>+++ b/net/base/x509_certificate_win.cc <newline>@@ -866,6 +866,7 @@ int X509Certificate::VerifyInternal(const std::string& hostname, <newline>            chain_flags, <newline>            NULL,  // reserved <newline>            &chain_context)) { <newline>+    verify_result->cert_status |= CERT_STATUS_INVALID; <newline>     return MapSecurityError(GetLastError()); <newline>   } <newline>@@ -884,6 +885,7 @@ int X509Certificate::VerifyInternal(const std::string& hostname, <newline>              chain_flags, <newline>              NULL,  // reserved <newline>              &chain_context)) { <newline>+      verify_result->cert_status |= CERT_STATUS_INVALID; <newline>       return MapSecurityError(GetLastError()); <newline>     } <newline>   } <newline>@@ -894,14 +896,6 @@ int X509Certificate::VerifyInternal(const std::string& hostname, <newline>   verify_result->cert_status |= MapCertChainErrorStatusToCertStatus( <newline>       chain_context->TrustStatus.dwErrorStatus); <newline>-  // Treat certificates signed using broken signature algorithms as invalid. <newline>-  if (verify_result->has_md4) <newline>-    verify_result->cert_status |= CERT_STATUS_INVALID; <newline>- <newline>-  // Flag certificates signed using weak signature algorithms. <newline>-  if (verify_result->has_md2) <newline>-    verify_result->cert_status |= CERT_STATUS_WEAK_SIGNATURE_ALGORITHM; <newline>- <newline>   // Flag certificates that have a Subject common name with a NULL character. <newline>   if (CertSubjectCommonNameHasNull(cert_handle_)) <newline>     verify_result->cert_status |= CERT_STATUS_INVALID;
9684c749a9b96c701ec7c8f7ec17915d9d411e3	rsleevi@chromium.org <rsleevi@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Dec 14 16:08:19 2011 +0000	When encountering certificates signed with md2/md4, make it a fatal error. When encountering certificates signed with md5, interstitial the page with an error about md5 being a weak signing algorithm. This excludes checking the signatures of root certificates (trust anchors), as their self-signed signatures are not relevant to the security of the chain. R=wtc@chromium.org	101123		http://codereview.chromium.org/8374020	svn://svn.chromium.org/chrome/trunk/src@114432 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/x509_certificate_win.cc b/net/base/x509_certificate_win.cc <newline>index c04ff4d..c672dfc 100644 <newline>--- a/net/base/x509_certificate_win.cc <newline>+++ b/net/base/x509_certificate_win.cc <newline>@@ -866,6 +866,7 @@ int X509Certificate::VerifyInternal(const std::string& hostname, <newline>            chain_flags, <newline>            NULL,  // reserved <newline>            &chain_context)) { <newline>+    verify_result->cert_status |= CERT_STATUS_INVALID; <newline>     return MapSecurityError(GetLastError()); <newline>   } <newline>@@ -884,6 +885,7 @@ int X509Certificate::VerifyInternal(const std::string& hostname, <newline>              chain_flags, <newline>              NULL,  // reserved <newline>              &chain_context)) { <newline>+      verify_result->cert_status |= CERT_STATUS_INVALID; <newline>       return MapSecurityError(GetLastError()); <newline>     } <newline>   } <newline>@@ -894,14 +896,6 @@ int X509Certificate::VerifyInternal(const std::string& hostname, <newline>   verify_result->cert_status |= MapCertChainErrorStatusToCertStatus( <newline>       chain_context->TrustStatus.dwErrorStatus); <newline>-  // Treat certificates signed using broken signature algorithms as invalid. <newline>-  if (verify_result->has_md4) <newline>-    verify_result->cert_status |= CERT_STATUS_INVALID; <newline>- <newline>-  // Flag certificates signed using weak signature algorithms. <newline>-  if (verify_result->has_md2) <newline>-    verify_result->cert_status |= CERT_STATUS_WEAK_SIGNATURE_ALGORITHM; <newline>- <newline>   // Flag certificates that have a Subject common name with a NULL character. <newline>   if (CertSubjectCommonNameHasNull(cert_handle_)) <newline>     verify_result->cert_status |= CERT_STATUS_INVALID;
5d18e0f3b35728b33c3efdb2f87156da5a251a5	mmenke@chromium.org <mmenke@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 13 20:34:21 2011 +0000	No longer preconnect to unsafe ports.  As UrlRequests were never allowed to use these ports anyways, this wasn't a security issue, but just doesn't seem like a good idea.	93326		http://codereview.chromium.org/8898008	svn://svn.chromium.org/chrome/trunk/src@114261 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_http_job.cc b/net/url_request/url_request_http_job.cc <newline>index 73cf26d..bf3df81 100644 <newline>--- a/net/url_request/url_request_http_job.cc <newline>+++ b/net/url_request/url_request_http_job.cc <newline>@@ -165,10 +165,6 @@ URLRequestJob* URLRequestHttpJob::Factory(URLRequest* request, <newline>                                           const std::string& scheme) { <newline>   DCHECK(scheme == "http" || scheme == "https"); <newline>-  int port = request->url().IntPort(); <newline>-  if (!IsPortAllowedByDefault(port) && !IsPortAllowedByOverride(port)) <newline>-    return new URLRequestErrorJob(request, ERR_UNSAFE_PORT); <newline>- <newline>   if (!request->context() || <newline>       !request->context()->http_transaction_factory()) { <newline>     NOTREACHED() << "requires a valid context";
967b09ecf28b09636f85a657b4752098467d2b7	mmenke@chromium.org <mmenke@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 13 20:34:21 2011 +0000	No longer preconnect to unsafe ports.  As UrlRequests were never allowed to use these ports anyways, this wasn't a security issue, but just doesn't seem like a good idea.	93326		http://codereview.chromium.org/8898008	svn://svn.chromium.org/chrome/trunk/src@114261 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_http_job.cc b/net/url_request/url_request_http_job.cc <newline>index 73cf26d..bf3df81 100644 <newline>--- a/net/url_request/url_request_http_job.cc <newline>+++ b/net/url_request/url_request_http_job.cc <newline>@@ -165,10 +165,6 @@ URLRequestJob* URLRequestHttpJob::Factory(URLRequest* request, <newline>                                           const std::string& scheme) { <newline>   DCHECK(scheme == "http" || scheme == "https"); <newline>-  int port = request->url().IntPort(); <newline>-  if (!IsPortAllowedByDefault(port) && !IsPortAllowedByOverride(port)) <newline>-    return new URLRequestErrorJob(request, ERR_UNSAFE_PORT); <newline>- <newline>   if (!request->context() || <newline>       !request->context()->http_transaction_factory()) { <newline>     NOTREACHED() << "requires a valid context";
eb519502c4972237cfc28c53879034b5767867a	zelidrag@chromium.org <zelidrag@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 6 23:47:14 2011 +0000	Landing http://codereview.chromium.org/8759014/ on behalf of kmixter: Add ONC VPN support for OpenVPN and L2TP/IPsec VPNs Also simplifies some of the parsing code, adds type validation, brings the WiFi security parsing up to spec, and improves the unit tests for wifi so that they all verify the property_map_ fields (the only ones actually used to configure the network). Also fixed a general parser problem where certificates wouldn't be parsed if network configs were. chromium-os:23477 TEST=manual import of ONC file with openvpn network, unit_tests	chromium-os:23476				diff --git a/net/url_request/url_request_http_job.cc b/net/url_request/url_request_http_job.cc <newline>index 73cf26d..bf3df81 100644 <newline>--- a/net/url_request/url_request_http_job.cc <newline>+++ b/net/url_request/url_request_http_job.cc <newline>@@ -165,10 +165,6 @@ URLRequestJob* URLRequestHttpJob::Factory(URLRequest* request, <newline>                                           const std::string& scheme) { <newline>   DCHECK(scheme == "http" || scheme == "https"); <newline>-  int port = request->url().IntPort(); <newline>-  if (!IsPortAllowedByDefault(port) && !IsPortAllowedByOverride(port)) <newline>-    return new URLRequestErrorJob(request, ERR_UNSAFE_PORT); <newline>- <newline>   if (!request->context() || <newline>       !request->context()->http_transaction_factory()) { <newline>     NOTREACHED() << "requires a valid context";
d: http://src.chromium.org/viewvc/chrome?view=rev&revision=113120						http://codereview.chromium.org/8821023	svn://svn.chromium.org/chrome/trunk/src@113296 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>index 24e656b..b2a2486 100644 <newline>--- a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>+++ b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>@@ -16,9 +16,93 @@ <newline> #include "net/base/crypto_module.h" <newline> #include "net/base/x509_certificate.h" <newline> #include "testing/gtest/include/gtest/gtest.h" <newline>+#include "third_party/cros_system_api/dbus/service_constants.h" <newline> namespace chromeos { <newline>+const char kNetworkConfigurationOpenVPN[] = <newline>+      "    {" <newline>+      "      \"GUID\": \"{408290ea-9299-4757-ab04-8957d55f0f13}\"," <newline>+      "      \"Type\": \"VPN\"," <newline>+      "      \"Name\": \"MyVPN\"," <newline>+      "      \"VPN\": {" <newline>+      "        \"Host\": \"vpn.acme.org\"," <newline>+      "        \"Type\": \"OpenVPN\"," <newline>+      "        \"OpenVPN\": {" <newline>+      "          \"AuthRetry\": \"interact\"," <newline>+      "          \"CompLZO\": \"true\"," <newline>+      "          \"KeyDirection\": \"1\"," <newline>+      "          \"Port\": 443," <newline>+      "          \"Proto\": \"udp\"," <newline>+      "          \"PushPeerInfo\": true," <newline>+      "          \"RemoteCertEKU\": \"TLS Web Server Authentication\"," <newline>+      "          \"RemoteCertKU\": [" <newline>+      "            \"eo\"" <newline>+      "          ]," <newline>+      "          \"RemoteCertTLS\": \"server\"," <newline>+      "          \"RenegSec\": 0," <newline>+      "          \"ServerPollTimeout\": 10," <newline>+      "          \"StaticChallenge\": \"My static challenge\"," <newline>+      "          \"TLSAuthContents\": \"" <newline>+      "-----BEGIN OpenVPN Static key V1-----\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "END OpenVPN Static key V1-----\n\"," <newline>+      "          \"TLSRemote\": \"MyOpenVPNServer\"," <newline>+      "          \"SaveCredentials\": false," <newline>+      "          \"ServerCARef\": \"{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}\"," <newline>+      "          \"ClientCertType\": \"Pattern\"," <newline>+      "          \"ClientCertPattern\": {" <newline>+      "            \"IssuerRef\": \"{68a2ed90-13a1-4120-a1fe-282508320e18}\"," <newline>+      "            \"EnrollmentURI\": [" <newline>+      "              \"chrome-extension://abc/keygen-cert.html\"" <newline>+      "            ]" <newline>+      "          }," <newline>+      "        }" <newline>+      "      }" <newline>+      "    }"; <newline>+ <newline>+const char kCertificateWebAuthority[] = <newline>+      "        {" <newline>+      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>+      "            \"Type\": \"Authority\"," <newline>+      "            \"Trust\": [\"Web\"]," <newline>+      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>+      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>+      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>+      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>+      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>+      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>+      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>+      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>+      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>+      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>+      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>+      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>+      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>+      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>+      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>+      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>+      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>+      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>+      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>+      "        }"; <newline>+ <newline>+ <newline> class OncNetworkParserTest : public testing::Test { <newline>  public: <newline>   static void SetUpTestCase() { <newline>@@ -52,6 +136,16 @@ class OncNetworkParserTest : public testing::Test { <newline>     EXPECT_EQ(0U, ListCertsInSlot(slot_->os_module_handle()).size()); <newline>   } <newline>+  const base::Value* GetExpectedProperty(const Network* network, <newline>+                                         PropertyIndex index, <newline>+                                         base::Value::Type expected_type); <newline>+  void CheckStringProperty(const Network* network, <newline>+                           PropertyIndex index, <newline>+                           const char* expected); <newline>+  void CheckBooleanProperty(const Network* network, <newline>+                            PropertyIndex index, <newline>+                            bool expected); <newline>+ <newline>  protected: <newline>   scoped_refptr<net::CryptoModule> slot_; <newline>   net::CertDatabase cert_db_; <newline>@@ -86,6 +180,48 @@ class OncNetworkParserTest : public testing::Test { <newline>   static base::LazyInstance<ScopedTempDir> temp_db_dir_; <newline> }; <newline>+const base::Value* OncNetworkParserTest::GetExpectedProperty( <newline>+    const Network* network, <newline>+    PropertyIndex index, <newline>+    base::Value::Type expected_type) { <newline>+  const base::Value* value; <newline>+  if (!network->GetProperty(index, &value)) { <newline>+    ADD_FAILURE() << "Property " << index << " does not exist"; <newline>+    return NULL; <newline>+  } <newline>+  if (!value->IsType(expected_type)) { <newline>+    ADD_FAILURE() << "Property " << index << " expected type " <newline>+                  << expected_type << " actual type " <newline>+                  << value->GetType(); <newline>+    return NULL; <newline>+  } <newline>+  return value; <newline>+} <newline>+ <newline>+void OncNetworkParserTest::CheckStringProperty(const Network* network, <newline>+                                               PropertyIndex index, <newline>+                                               const char* expected) { <newline>+  const base::Value* value = <newline>+    GetExpectedProperty(network, index, base::Value::TYPE_STRING); <newline>+  if (!value) <newline>+    return; <newline>+  std::string string_value; <newline>+  value->GetAsString(&string_value); <newline>+  EXPECT_EQ(expected, string_value); <newline>+} <newline>+ <newline>+void OncNetworkParserTest::CheckBooleanProperty(const Network* network, <newline>+                                                PropertyIndex index, <newline>+                                                bool expected) { <newline>+  const base::Value* value = <newline>+    GetExpectedProperty(network, index, base::Value::TYPE_BOOLEAN); <newline>+  if (!value) <newline>+    return; <newline>+  bool bool_value = false; <newline>+  value->GetAsBoolean(&bool_value); <newline>+  EXPECT_EQ(expected, bool_value); <newline>+} <newline>+ <newline> // static <newline> base::LazyInstance<ScopedTempDir> OncNetworkParserTest::temp_db_dir_ = <newline>     LAZY_INSTANCE_INITIALIZER; <newline>@@ -97,7 +233,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WEP\"," <newline>+      "      \"Security\": \"WEP-PSK\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"Passphrase\": \"pass\"," <newline>       "    }" <newline>@@ -108,15 +244,18 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_WEP); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurityWep); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SSID, "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->passphrase(), "pass"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_PASSPHRASE, "pass"); <newline> } <newline> TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>@@ -126,7 +265,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA2\"," <newline>+      "      \"Security\": \"WPA-EAP\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": true," <newline>       "      \"EAP\": {" <newline>@@ -141,15 +280,19 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurity8021x); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), true); <newline>+  CheckBooleanProperty(wifi, PROPERTY_INDEX_AUTO_CONNECT, true); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_PEAP); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_METHOD, <newline>+                      flimflam::kEapMethodPEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), false); <newline> } <newline>@@ -160,7 +303,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA2\"," <newline>+      "      \"Security\": \"WPA-EAP\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": false," <newline>       "      \"EAP\": {" <newline>@@ -177,19 +320,130 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_LEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), true); <newline>   EXPECT_EQ(wifi->eap_identity(), "user"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_IDENTITY, "user"); <newline>   EXPECT_EQ(wifi->eap_passphrase(), "pass"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_PASSWORD, "pass"); <newline>   EXPECT_EQ(wifi->eap_anonymous_identity(), "anon"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_ANONYMOUS_IDENTITY, "anon"); <newline>+} <newline>+ <newline>+TEST_F(OncNetworkParserTest, TestCreateNetworkOpenVPN) { <newline>+  std::string test_blob(std::string( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [") + <newline>+      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>+      "  ]}")); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get() != NULL); <newline>+ <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ("MyVPN", vpn->name()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>+                      flimflam::kProviderOpenVpn); <newline>+  EXPECT_EQ("vpn.acme.org", vpn->server_hostname()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "vpn.acme.org"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHRETRY, "interact"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_CACERT, <newline>+                      "{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_COMPLZO, "true"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_KEYDIRECTION, "1"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PORT, "443"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PROTO, "udp"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PUSHPEERINFO, "true"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTEKU, <newline>+                      "TLS Web Server Authentication"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTKU, "eo"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTTLS, "server"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_RENEGSEC, "0"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_SERVERPOLLTIMEOUT, "10"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_STATICCHALLENGE, <newline>+                      "My static challenge"); <newline>+  // Check the default properties are set. <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHUSERPASS, ""); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_MGMT_ENABLE, ""); <newline>+ <newline>+  std::string tls_auth_contents; <newline>+  const Value* tls_auth_value = <newline>+    GetExpectedProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSAUTHCONTENTS, <newline>+                        base::Value::TYPE_STRING); <newline>+  if (tls_auth_value != NULL) { <newline>+    tls_auth_value->GetAsString(&tls_auth_contents); <newline>+    EXPECT_NE(std::string::npos, <newline>+              tls_auth_contents.find("END OpenVPN Static key V1-----\n")); <newline>+    EXPECT_NE(std::string::npos, <newline>+              tls_auth_contents.find( <newline>+                  "-----BEGIN OpenVPN Static key V1-----\n")); <newline>+  } <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSREMOTE, <newline>+                      "MyOpenVPNServer"); <newline>+  EXPECT_FALSE(vpn->save_credentials()); <newline>+  EXPECT_EQ("{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}", vpn->ca_cert_nss()); <newline>+} <newline>+ <newline>+TEST_F(OncNetworkParserTest, TestCreateNetworkL2TPIPsec) { <newline>+  std::string test_blob( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [" <newline>+      "    {" <newline>+      "      \"GUID\": \"{926b84e4-f2c5-0972-b9bbb8f44c4316f5}\"," <newline>+      "      \"Name\": \"MyL2TPVPN\"," <newline>+      "      \"Type\": \"VPN\"," <newline>+      "      \"VPN\": {" <newline>+      "        \"Host\": \"l2tp.acme.org\"," <newline>+      "        \"Type\": \"L2TP-IPsec\"," <newline>+      "        \"IPsec\": {" <newline>+      "          \"IKEVersion\": 1," <newline>+      "          \"AuthenticationType\": \"PSK\"," <newline>+      "          \"PSK\": \"passphrase\"" <newline>+      "        }," <newline>+      "        \"L2TP\": {" <newline>+      "          \"SaveCredentials\": false" <newline>+      "        }" <newline>+      "      }" <newline>+      "    }" <newline>+      "  ]," <newline>+      "  \"Certificates\": []" <newline>+      "}"); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network != NULL); <newline>+ <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ("MyL2TPVPN", vpn->name()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_L2TP_IPSEC_PSK, vpn->provider_type()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>+                      flimflam::kProviderL2tpIpsec); <newline>+  EXPECT_EQ("l2tp.acme.org", vpn->server_hostname()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "l2tp.acme.org"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>+  EXPECT_EQ("passphrase", vpn->psk_passphrase()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_L2TPIPSEC_PSK, "passphrase"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_IPSEC_IKEVERSION, "1"); <newline>+  EXPECT_FALSE(vpn->save_credentials()); <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline>@@ -222,34 +476,11 @@ TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddAuthorityCertificate) { <newline>-  const std::string test_blob("{" <newline>-      "    \"Certificates\": [" <newline>-      "        {" <newline>-      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>-      "            \"Type\": \"Authority\"," <newline>-      "            \"Trust\": [\"Web\"]," <newline>-      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>-      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>-      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>-      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>-      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>-      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>-      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>-      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>-      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>-      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>-      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>-      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>-      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>-      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>-      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>-      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>-      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>-      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>-      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>-      "        }" <newline>+  const std::string test_blob(std::string("{" <newline>+      "    \"Certificates\": [") + <newline>+      std::string(kCertificateWebAuthority) + std::string( <newline>       "    ]," <newline>-      "}"); <newline>+      "}")); <newline>   OncNetworkParser parser(test_blob); <newline>   EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>@@ -304,4 +535,27 @@ TEST_F(OncNetworkParserTest, TestAddClientCertificate) { <newline>   EXPECT_TRUE(parser.ParseCertificate(0)); <newline> } <newline>+TEST_F(OncNetworkParserTest, TestNetworkAndCertificate) { <newline>+  std::string test_blob(std::string( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [") + <newline>+      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>+      "  ]," <newline>+      "  \"Certificates\": [") + <newline>+      std::string(kCertificateWebAuthority) + std::string( <newline>+      "  ]," <newline>+      "}")); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>+  EXPECT_TRUE(parser.ParseCertificate(0)); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get() != NULL); <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>+} <newline>+ <newline> }  // namespace chromeos
82c572e0f7f8f87f924b208ff6c4a204757d052	zelidrag@chromium.org <zelidrag@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 6 23:47:14 2011 +0000	Landing http://codereview.chromium.org/8759014/ on behalf of kmixter: Add ONC VPN support for OpenVPN and L2TP/IPsec VPNs Also simplifies some of the parsing code, adds type validation, brings the WiFi security parsing up to spec, and improves the unit tests for wifi so that they all verify the property_map_ fields (the only ones actually used to configure the network). Also fixed a general parser problem where certificates wouldn't be parsed if network configs were. chromium-os:23477 TEST=manual import of ONC file with openvpn network, unit_tests	chromium-os:23476				diff --git a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>index 24e656b..b2a2486 100644 <newline>--- a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>+++ b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>@@ -16,9 +16,93 @@ <newline> #include "net/base/crypto_module.h" <newline> #include "net/base/x509_certificate.h" <newline> #include "testing/gtest/include/gtest/gtest.h" <newline>+#include "third_party/cros_system_api/dbus/service_constants.h" <newline> namespace chromeos { <newline>+const char kNetworkConfigurationOpenVPN[] = <newline>+      "    {" <newline>+      "      \"GUID\": \"{408290ea-9299-4757-ab04-8957d55f0f13}\"," <newline>+      "      \"Type\": \"VPN\"," <newline>+      "      \"Name\": \"MyVPN\"," <newline>+      "      \"VPN\": {" <newline>+      "        \"Host\": \"vpn.acme.org\"," <newline>+      "        \"Type\": \"OpenVPN\"," <newline>+      "        \"OpenVPN\": {" <newline>+      "          \"AuthRetry\": \"interact\"," <newline>+      "          \"CompLZO\": \"true\"," <newline>+      "          \"KeyDirection\": \"1\"," <newline>+      "          \"Port\": 443," <newline>+      "          \"Proto\": \"udp\"," <newline>+      "          \"PushPeerInfo\": true," <newline>+      "          \"RemoteCertEKU\": \"TLS Web Server Authentication\"," <newline>+      "          \"RemoteCertKU\": [" <newline>+      "            \"eo\"" <newline>+      "          ]," <newline>+      "          \"RemoteCertTLS\": \"server\"," <newline>+      "          \"RenegSec\": 0," <newline>+      "          \"ServerPollTimeout\": 10," <newline>+      "          \"StaticChallenge\": \"My static challenge\"," <newline>+      "          \"TLSAuthContents\": \"" <newline>+      "-----BEGIN OpenVPN Static key V1-----\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "END OpenVPN Static key V1-----\n\"," <newline>+      "          \"TLSRemote\": \"MyOpenVPNServer\"," <newline>+      "          \"SaveCredentials\": false," <newline>+      "          \"ServerCARef\": \"{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}\"," <newline>+      "          \"ClientCertType\": \"Pattern\"," <newline>+      "          \"ClientCertPattern\": {" <newline>+      "            \"IssuerRef\": \"{68a2ed90-13a1-4120-a1fe-282508320e18}\"," <newline>+      "            \"EnrollmentURI\": [" <newline>+      "              \"chrome-extension://abc/keygen-cert.html\"" <newline>+      "            ]" <newline>+      "          }," <newline>+      "        }" <newline>+      "      }" <newline>+      "    }"; <newline>+ <newline>+const char kCertificateWebAuthority[] = <newline>+      "        {" <newline>+      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>+      "            \"Type\": \"Authority\"," <newline>+      "            \"Trust\": [\"Web\"]," <newline>+      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>+      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>+      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>+      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>+      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>+      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>+      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>+      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>+      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>+      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>+      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>+      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>+      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>+      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>+      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>+      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>+      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>+      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>+      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>+      "        }"; <newline>+ <newline>+ <newline> class OncNetworkParserTest : public testing::Test { <newline>  public: <newline>   static void SetUpTestCase() { <newline>@@ -52,6 +136,16 @@ class OncNetworkParserTest : public testing::Test { <newline>     EXPECT_EQ(0U, ListCertsInSlot(slot_->os_module_handle()).size()); <newline>   } <newline>+  const base::Value* GetExpectedProperty(const Network* network, <newline>+                                         PropertyIndex index, <newline>+                                         base::Value::Type expected_type); <newline>+  void CheckStringProperty(const Network* network, <newline>+                           PropertyIndex index, <newline>+                           const char* expected); <newline>+  void CheckBooleanProperty(const Network* network, <newline>+                            PropertyIndex index, <newline>+                            bool expected); <newline>+ <newline>  protected: <newline>   scoped_refptr<net::CryptoModule> slot_; <newline>   net::CertDatabase cert_db_; <newline>@@ -86,6 +180,48 @@ class OncNetworkParserTest : public testing::Test { <newline>   static base::LazyInstance<ScopedTempDir> temp_db_dir_; <newline> }; <newline>+const base::Value* OncNetworkParserTest::GetExpectedProperty( <newline>+    const Network* network, <newline>+    PropertyIndex index, <newline>+    base::Value::Type expected_type) { <newline>+  const base::Value* value; <newline>+  if (!network->GetProperty(index, &value)) { <newline>+    ADD_FAILURE() << "Property " << index << " does not exist"; <newline>+    return NULL; <newline>+  } <newline>+  if (!value->IsType(expected_type)) { <newline>+    ADD_FAILURE() << "Property " << index << " expected type " <newline>+                  << expected_type << " actual type " <newline>+                  << value->GetType(); <newline>+    return NULL; <newline>+  } <newline>+  return value; <newline>+} <newline>+ <newline>+void OncNetworkParserTest::CheckStringProperty(const Network* network, <newline>+                                               PropertyIndex index, <newline>+                                               const char* expected) { <newline>+  const base::Value* value = <newline>+    GetExpectedProperty(network, index, base::Value::TYPE_STRING); <newline>+  if (!value) <newline>+    return; <newline>+  std::string string_value; <newline>+  value->GetAsString(&string_value); <newline>+  EXPECT_EQ(expected, string_value); <newline>+} <newline>+ <newline>+void OncNetworkParserTest::CheckBooleanProperty(const Network* network, <newline>+                                                PropertyIndex index, <newline>+                                                bool expected) { <newline>+  const base::Value* value = <newline>+    GetExpectedProperty(network, index, base::Value::TYPE_BOOLEAN); <newline>+  if (!value) <newline>+    return; <newline>+  bool bool_value = false; <newline>+  value->GetAsBoolean(&bool_value); <newline>+  EXPECT_EQ(expected, bool_value); <newline>+} <newline>+ <newline> // static <newline> base::LazyInstance<ScopedTempDir> OncNetworkParserTest::temp_db_dir_ = <newline>     LAZY_INSTANCE_INITIALIZER; <newline>@@ -97,7 +233,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WEP\"," <newline>+      "      \"Security\": \"WEP-PSK\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"Passphrase\": \"pass\"," <newline>       "    }" <newline>@@ -108,15 +244,18 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_WEP); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurityWep); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SSID, "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->passphrase(), "pass"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_PASSPHRASE, "pass"); <newline> } <newline> TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>@@ -126,7 +265,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA2\"," <newline>+      "      \"Security\": \"WPA-EAP\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": true," <newline>       "      \"EAP\": {" <newline>@@ -141,15 +280,19 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurity8021x); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), true); <newline>+  CheckBooleanProperty(wifi, PROPERTY_INDEX_AUTO_CONNECT, true); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_PEAP); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_METHOD, <newline>+                      flimflam::kEapMethodPEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), false); <newline> } <newline>@@ -160,7 +303,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA2\"," <newline>+      "      \"Security\": \"WPA-EAP\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": false," <newline>       "      \"EAP\": {" <newline>@@ -177,19 +320,130 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_LEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), true); <newline>   EXPECT_EQ(wifi->eap_identity(), "user"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_IDENTITY, "user"); <newline>   EXPECT_EQ(wifi->eap_passphrase(), "pass"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_PASSWORD, "pass"); <newline>   EXPECT_EQ(wifi->eap_anonymous_identity(), "anon"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_ANONYMOUS_IDENTITY, "anon"); <newline>+} <newline>+ <newline>+TEST_F(OncNetworkParserTest, TestCreateNetworkOpenVPN) { <newline>+  std::string test_blob(std::string( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [") + <newline>+      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>+      "  ]}")); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get() != NULL); <newline>+ <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ("MyVPN", vpn->name()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>+                      flimflam::kProviderOpenVpn); <newline>+  EXPECT_EQ("vpn.acme.org", vpn->server_hostname()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "vpn.acme.org"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHRETRY, "interact"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_CACERT, <newline>+                      "{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_COMPLZO, "true"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_KEYDIRECTION, "1"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PORT, "443"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PROTO, "udp"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PUSHPEERINFO, "true"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTEKU, <newline>+                      "TLS Web Server Authentication"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTKU, "eo"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTTLS, "server"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_RENEGSEC, "0"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_SERVERPOLLTIMEOUT, "10"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_STATICCHALLENGE, <newline>+                      "My static challenge"); <newline>+  // Check the default properties are set. <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHUSERPASS, ""); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_MGMT_ENABLE, ""); <newline>+ <newline>+  std::string tls_auth_contents; <newline>+  const Value* tls_auth_value = <newline>+    GetExpectedProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSAUTHCONTENTS, <newline>+                        base::Value::TYPE_STRING); <newline>+  if (tls_auth_value != NULL) { <newline>+    tls_auth_value->GetAsString(&tls_auth_contents); <newline>+    EXPECT_NE(std::string::npos, <newline>+              tls_auth_contents.find("END OpenVPN Static key V1-----\n")); <newline>+    EXPECT_NE(std::string::npos, <newline>+              tls_auth_contents.find( <newline>+                  "-----BEGIN OpenVPN Static key V1-----\n")); <newline>+  } <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSREMOTE, <newline>+                      "MyOpenVPNServer"); <newline>+  EXPECT_FALSE(vpn->save_credentials()); <newline>+  EXPECT_EQ("{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}", vpn->ca_cert_nss()); <newline>+} <newline>+ <newline>+TEST_F(OncNetworkParserTest, TestCreateNetworkL2TPIPsec) { <newline>+  std::string test_blob( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [" <newline>+      "    {" <newline>+      "      \"GUID\": \"{926b84e4-f2c5-0972-b9bbb8f44c4316f5}\"," <newline>+      "      \"Name\": \"MyL2TPVPN\"," <newline>+      "      \"Type\": \"VPN\"," <newline>+      "      \"VPN\": {" <newline>+      "        \"Host\": \"l2tp.acme.org\"," <newline>+      "        \"Type\": \"L2TP-IPsec\"," <newline>+      "        \"IPsec\": {" <newline>+      "          \"IKEVersion\": 1," <newline>+      "          \"AuthenticationType\": \"PSK\"," <newline>+      "          \"PSK\": \"passphrase\"" <newline>+      "        }," <newline>+      "        \"L2TP\": {" <newline>+      "          \"SaveCredentials\": false" <newline>+      "        }" <newline>+      "      }" <newline>+      "    }" <newline>+      "  ]," <newline>+      "  \"Certificates\": []" <newline>+      "}"); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network != NULL); <newline>+ <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ("MyL2TPVPN", vpn->name()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_L2TP_IPSEC_PSK, vpn->provider_type()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>+                      flimflam::kProviderL2tpIpsec); <newline>+  EXPECT_EQ("l2tp.acme.org", vpn->server_hostname()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "l2tp.acme.org"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>+  EXPECT_EQ("passphrase", vpn->psk_passphrase()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_L2TPIPSEC_PSK, "passphrase"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_IPSEC_IKEVERSION, "1"); <newline>+  EXPECT_FALSE(vpn->save_credentials()); <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline>@@ -222,34 +476,11 @@ TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddAuthorityCertificate) { <newline>-  const std::string test_blob("{" <newline>-      "    \"Certificates\": [" <newline>-      "        {" <newline>-      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>-      "            \"Type\": \"Authority\"," <newline>-      "            \"Trust\": [\"Web\"]," <newline>-      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>-      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>-      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>-      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>-      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>-      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>-      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>-      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>-      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>-      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>-      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>-      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>-      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>-      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>-      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>-      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>-      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>-      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>-      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>-      "        }" <newline>+  const std::string test_blob(std::string("{" <newline>+      "    \"Certificates\": [") + <newline>+      std::string(kCertificateWebAuthority) + std::string( <newline>       "    ]," <newline>-      "}"); <newline>+      "}")); <newline>   OncNetworkParser parser(test_blob); <newline>   EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>@@ -304,4 +535,27 @@ TEST_F(OncNetworkParserTest, TestAddClientCertificate) { <newline>   EXPECT_TRUE(parser.ParseCertificate(0)); <newline> } <newline>+TEST_F(OncNetworkParserTest, TestNetworkAndCertificate) { <newline>+  std::string test_blob(std::string( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [") + <newline>+      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>+      "  ]," <newline>+      "  \"Certificates\": [") + <newline>+      std::string(kCertificateWebAuthority) + std::string( <newline>+      "  ]," <newline>+      "}")); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>+  EXPECT_TRUE(parser.ParseCertificate(0)); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get() != NULL); <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>+} <newline>+ <newline> }  // namespace chromeos
d: http://src.chromium.org/viewvc/chrome?view=rev&revision=113120						http://codereview.chromium.org/8821023	svn://svn.chromium.org/chrome/trunk/src@113296 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>index 24e656b..b2a2486 100644 <newline>--- a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>+++ b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>@@ -16,9 +16,93 @@ <newline> #include "net/base/crypto_module.h" <newline> #include "net/base/x509_certificate.h" <newline> #include "testing/gtest/include/gtest/gtest.h" <newline>+#include "third_party/cros_system_api/dbus/service_constants.h" <newline> namespace chromeos { <newline>+const char kNetworkConfigurationOpenVPN[] = <newline>+      "    {" <newline>+      "      \"GUID\": \"{408290ea-9299-4757-ab04-8957d55f0f13}\"," <newline>+      "      \"Type\": \"VPN\"," <newline>+      "      \"Name\": \"MyVPN\"," <newline>+      "      \"VPN\": {" <newline>+      "        \"Host\": \"vpn.acme.org\"," <newline>+      "        \"Type\": \"OpenVPN\"," <newline>+      "        \"OpenVPN\": {" <newline>+      "          \"AuthRetry\": \"interact\"," <newline>+      "          \"CompLZO\": \"true\"," <newline>+      "          \"KeyDirection\": \"1\"," <newline>+      "          \"Port\": 443," <newline>+      "          \"Proto\": \"udp\"," <newline>+      "          \"PushPeerInfo\": true," <newline>+      "          \"RemoteCertEKU\": \"TLS Web Server Authentication\"," <newline>+      "          \"RemoteCertKU\": [" <newline>+      "            \"eo\"" <newline>+      "          ]," <newline>+      "          \"RemoteCertTLS\": \"server\"," <newline>+      "          \"RenegSec\": 0," <newline>+      "          \"ServerPollTimeout\": 10," <newline>+      "          \"StaticChallenge\": \"My static challenge\"," <newline>+      "          \"TLSAuthContents\": \"" <newline>+      "-----BEGIN OpenVPN Static key V1-----\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "END OpenVPN Static key V1-----\n\"," <newline>+      "          \"TLSRemote\": \"MyOpenVPNServer\"," <newline>+      "          \"SaveCredentials\": false," <newline>+      "          \"ServerCARef\": \"{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}\"," <newline>+      "          \"ClientCertType\": \"Pattern\"," <newline>+      "          \"ClientCertPattern\": {" <newline>+      "            \"IssuerRef\": \"{68a2ed90-13a1-4120-a1fe-282508320e18}\"," <newline>+      "            \"EnrollmentURI\": [" <newline>+      "              \"chrome-extension://abc/keygen-cert.html\"" <newline>+      "            ]" <newline>+      "          }," <newline>+      "        }" <newline>+      "      }" <newline>+      "    }"; <newline>+ <newline>+const char kCertificateWebAuthority[] = <newline>+      "        {" <newline>+      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>+      "            \"Type\": \"Authority\"," <newline>+      "            \"Trust\": [\"Web\"]," <newline>+      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>+      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>+      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>+      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>+      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>+      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>+      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>+      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>+      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>+      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>+      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>+      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>+      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>+      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>+      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>+      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>+      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>+      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>+      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>+      "        }"; <newline>+ <newline>+ <newline> class OncNetworkParserTest : public testing::Test { <newline>  public: <newline>   static void SetUpTestCase() { <newline>@@ -52,6 +136,16 @@ class OncNetworkParserTest : public testing::Test { <newline>     EXPECT_EQ(0U, ListCertsInSlot(slot_->os_module_handle()).size()); <newline>   } <newline>+  const base::Value* GetExpectedProperty(const Network* network, <newline>+                                         PropertyIndex index, <newline>+                                         base::Value::Type expected_type); <newline>+  void CheckStringProperty(const Network* network, <newline>+                           PropertyIndex index, <newline>+                           const char* expected); <newline>+  void CheckBooleanProperty(const Network* network, <newline>+                            PropertyIndex index, <newline>+                            bool expected); <newline>+ <newline>  protected: <newline>   scoped_refptr<net::CryptoModule> slot_; <newline>   net::CertDatabase cert_db_; <newline>@@ -86,6 +180,48 @@ class OncNetworkParserTest : public testing::Test { <newline>   static base::LazyInstance<ScopedTempDir> temp_db_dir_; <newline> }; <newline>+const base::Value* OncNetworkParserTest::GetExpectedProperty( <newline>+    const Network* network, <newline>+    PropertyIndex index, <newline>+    base::Value::Type expected_type) { <newline>+  const base::Value* value; <newline>+  if (!network->GetProperty(index, &value)) { <newline>+    ADD_FAILURE() << "Property " << index << " does not exist"; <newline>+    return NULL; <newline>+  } <newline>+  if (!value->IsType(expected_type)) { <newline>+    ADD_FAILURE() << "Property " << index << " expected type " <newline>+                  << expected_type << " actual type " <newline>+                  << value->GetType(); <newline>+    return NULL; <newline>+  } <newline>+  return value; <newline>+} <newline>+ <newline>+void OncNetworkParserTest::CheckStringProperty(const Network* network, <newline>+                                               PropertyIndex index, <newline>+                                               const char* expected) { <newline>+  const base::Value* value = <newline>+    GetExpectedProperty(network, index, base::Value::TYPE_STRING); <newline>+  if (!value) <newline>+    return; <newline>+  std::string string_value; <newline>+  value->GetAsString(&string_value); <newline>+  EXPECT_EQ(expected, string_value); <newline>+} <newline>+ <newline>+void OncNetworkParserTest::CheckBooleanProperty(const Network* network, <newline>+                                                PropertyIndex index, <newline>+                                                bool expected) { <newline>+  const base::Value* value = <newline>+    GetExpectedProperty(network, index, base::Value::TYPE_BOOLEAN); <newline>+  if (!value) <newline>+    return; <newline>+  bool bool_value = false; <newline>+  value->GetAsBoolean(&bool_value); <newline>+  EXPECT_EQ(expected, bool_value); <newline>+} <newline>+ <newline> // static <newline> base::LazyInstance<ScopedTempDir> OncNetworkParserTest::temp_db_dir_ = <newline>     LAZY_INSTANCE_INITIALIZER; <newline>@@ -97,7 +233,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WEP\"," <newline>+      "      \"Security\": \"WEP-PSK\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"Passphrase\": \"pass\"," <newline>       "    }" <newline>@@ -108,15 +244,18 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_WEP); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurityWep); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SSID, "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->passphrase(), "pass"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_PASSPHRASE, "pass"); <newline> } <newline> TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>@@ -126,7 +265,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA2\"," <newline>+      "      \"Security\": \"WPA-EAP\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": true," <newline>       "      \"EAP\": {" <newline>@@ -141,15 +280,19 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurity8021x); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), true); <newline>+  CheckBooleanProperty(wifi, PROPERTY_INDEX_AUTO_CONNECT, true); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_PEAP); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_METHOD, <newline>+                      flimflam::kEapMethodPEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), false); <newline> } <newline>@@ -160,7 +303,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA2\"," <newline>+      "      \"Security\": \"WPA-EAP\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": false," <newline>       "      \"EAP\": {" <newline>@@ -177,19 +320,130 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_LEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), true); <newline>   EXPECT_EQ(wifi->eap_identity(), "user"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_IDENTITY, "user"); <newline>   EXPECT_EQ(wifi->eap_passphrase(), "pass"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_PASSWORD, "pass"); <newline>   EXPECT_EQ(wifi->eap_anonymous_identity(), "anon"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_ANONYMOUS_IDENTITY, "anon"); <newline>+} <newline>+ <newline>+TEST_F(OncNetworkParserTest, TestCreateNetworkOpenVPN) { <newline>+  std::string test_blob(std::string( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [") + <newline>+      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>+      "  ]}")); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get() != NULL); <newline>+ <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ("MyVPN", vpn->name()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>+                      flimflam::kProviderOpenVpn); <newline>+  EXPECT_EQ("vpn.acme.org", vpn->server_hostname()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "vpn.acme.org"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHRETRY, "interact"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_CACERT, <newline>+                      "{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_COMPLZO, "true"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_KEYDIRECTION, "1"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PORT, "443"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PROTO, "udp"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PUSHPEERINFO, "true"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTEKU, <newline>+                      "TLS Web Server Authentication"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTKU, "eo"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTTLS, "server"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_RENEGSEC, "0"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_SERVERPOLLTIMEOUT, "10"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_STATICCHALLENGE, <newline>+                      "My static challenge"); <newline>+  // Check the default properties are set. <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHUSERPASS, ""); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_MGMT_ENABLE, ""); <newline>+ <newline>+  std::string tls_auth_contents; <newline>+  const Value* tls_auth_value = <newline>+    GetExpectedProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSAUTHCONTENTS, <newline>+                        base::Value::TYPE_STRING); <newline>+  if (tls_auth_value != NULL) { <newline>+    tls_auth_value->GetAsString(&tls_auth_contents); <newline>+    EXPECT_NE(std::string::npos, <newline>+              tls_auth_contents.find("END OpenVPN Static key V1-----\n")); <newline>+    EXPECT_NE(std::string::npos, <newline>+              tls_auth_contents.find( <newline>+                  "-----BEGIN OpenVPN Static key V1-----\n")); <newline>+  } <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSREMOTE, <newline>+                      "MyOpenVPNServer"); <newline>+  EXPECT_FALSE(vpn->save_credentials()); <newline>+  EXPECT_EQ("{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}", vpn->ca_cert_nss()); <newline>+} <newline>+ <newline>+TEST_F(OncNetworkParserTest, TestCreateNetworkL2TPIPsec) { <newline>+  std::string test_blob( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [" <newline>+      "    {" <newline>+      "      \"GUID\": \"{926b84e4-f2c5-0972-b9bbb8f44c4316f5}\"," <newline>+      "      \"Name\": \"MyL2TPVPN\"," <newline>+      "      \"Type\": \"VPN\"," <newline>+      "      \"VPN\": {" <newline>+      "        \"Host\": \"l2tp.acme.org\"," <newline>+      "        \"Type\": \"L2TP-IPsec\"," <newline>+      "        \"IPsec\": {" <newline>+      "          \"IKEVersion\": 1," <newline>+      "          \"AuthenticationType\": \"PSK\"," <newline>+      "          \"PSK\": \"passphrase\"" <newline>+      "        }," <newline>+      "        \"L2TP\": {" <newline>+      "          \"SaveCredentials\": false" <newline>+      "        }" <newline>+      "      }" <newline>+      "    }" <newline>+      "  ]," <newline>+      "  \"Certificates\": []" <newline>+      "}"); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network != NULL); <newline>+ <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ("MyL2TPVPN", vpn->name()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_L2TP_IPSEC_PSK, vpn->provider_type()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>+                      flimflam::kProviderL2tpIpsec); <newline>+  EXPECT_EQ("l2tp.acme.org", vpn->server_hostname()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "l2tp.acme.org"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>+  EXPECT_EQ("passphrase", vpn->psk_passphrase()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_L2TPIPSEC_PSK, "passphrase"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_IPSEC_IKEVERSION, "1"); <newline>+  EXPECT_FALSE(vpn->save_credentials()); <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline>@@ -222,34 +476,11 @@ TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddAuthorityCertificate) { <newline>-  const std::string test_blob("{" <newline>-      "    \"Certificates\": [" <newline>-      "        {" <newline>-      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>-      "            \"Type\": \"Authority\"," <newline>-      "            \"Trust\": [\"Web\"]," <newline>-      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>-      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>-      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>-      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>-      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>-      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>-      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>-      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>-      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>-      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>-      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>-      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>-      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>-      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>-      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>-      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>-      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>-      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>-      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>-      "        }" <newline>+  const std::string test_blob(std::string("{" <newline>+      "    \"Certificates\": [") + <newline>+      std::string(kCertificateWebAuthority) + std::string( <newline>       "    ]," <newline>-      "}"); <newline>+      "}")); <newline>   OncNetworkParser parser(test_blob); <newline>   EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>@@ -304,4 +535,27 @@ TEST_F(OncNetworkParserTest, TestAddClientCertificate) { <newline>   EXPECT_TRUE(parser.ParseCertificate(0)); <newline> } <newline>+TEST_F(OncNetworkParserTest, TestNetworkAndCertificate) { <newline>+  std::string test_blob(std::string( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [") + <newline>+      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>+      "  ]," <newline>+      "  \"Certificates\": [") + <newline>+      std::string(kCertificateWebAuthority) + std::string( <newline>+      "  ]," <newline>+      "}")); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>+  EXPECT_TRUE(parser.ParseCertificate(0)); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get() != NULL); <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>+} <newline>+ <newline> }  // namespace chromeos
d088e385cba2de1c8ff7b07aaf5b31ef0823da4	sail@chromium.org <sail@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 6 07:04:02 2011 +0000	Revert 113120 - this CL broke then chromeos clang bot: http://build.chromium.org/p/chromium.chromiumos/builders/Linux%20Clang%20%28ChromeOS%20dbg%29/builds/4017/steps/compile/logs/stdio Add ONC VPN support for OpenVPN and L2TP/IPsec VPNs Also simplifies some of the parsing code, adds type validation, brings the WiFi security parsing up to spec, and improves the unit tests for wifi so that they all verify the property_map_ fields (the only ones actually used to configure the network).  Also fixed a general parser problem where certificates wouldn't be parsed if network configs were. TEST=manual import of ONC file with openvpn network, unit_tests TBR=kmixter@chromium.org	chromium-os:23476 chromium-os:23477		http://codereview.chromium.org/8819011	svn://svn.chromium.org/chrome/trunk/src@113136 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>index b2a2486..24e656b 100644 <newline>--- a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>+++ b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>@@ -16,93 +16,9 @@ <newline> #include "net/base/crypto_module.h" <newline> #include "net/base/x509_certificate.h" <newline> #include "testing/gtest/include/gtest/gtest.h" <newline>-#include "third_party/cros_system_api/dbus/service_constants.h" <newline> namespace chromeos { <newline>-const char kNetworkConfigurationOpenVPN[] = <newline>-      "    {" <newline>-      "      \"GUID\": \"{408290ea-9299-4757-ab04-8957d55f0f13}\"," <newline>-      "      \"Type\": \"VPN\"," <newline>-      "      \"Name\": \"MyVPN\"," <newline>-      "      \"VPN\": {" <newline>-      "        \"Host\": \"vpn.acme.org\"," <newline>-      "        \"Type\": \"OpenVPN\"," <newline>-      "        \"OpenVPN\": {" <newline>-      "          \"AuthRetry\": \"interact\"," <newline>-      "          \"CompLZO\": \"true\"," <newline>-      "          \"KeyDirection\": \"1\"," <newline>-      "          \"Port\": 443," <newline>-      "          \"Proto\": \"udp\"," <newline>-      "          \"PushPeerInfo\": true," <newline>-      "          \"RemoteCertEKU\": \"TLS Web Server Authentication\"," <newline>-      "          \"RemoteCertKU\": [" <newline>-      "            \"eo\"" <newline>-      "          ]," <newline>-      "          \"RemoteCertTLS\": \"server\"," <newline>-      "          \"RenegSec\": 0," <newline>-      "          \"ServerPollTimeout\": 10," <newline>-      "          \"StaticChallenge\": \"My static challenge\"," <newline>-      "          \"TLSAuthContents\": \"" <newline>-      "-----BEGIN OpenVPN Static key V1-----\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "END OpenVPN Static key V1-----\n\"," <newline>-      "          \"TLSRemote\": \"MyOpenVPNServer\"," <newline>-      "          \"SaveCredentials\": false," <newline>-      "          \"ServerCARef\": \"{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}\"," <newline>-      "          \"ClientCertType\": \"Pattern\"," <newline>-      "          \"ClientCertPattern\": {" <newline>-      "            \"IssuerRef\": \"{68a2ed90-13a1-4120-a1fe-282508320e18}\"," <newline>-      "            \"EnrollmentURI\": [" <newline>-      "              \"chrome-extension://abc/keygen-cert.html\"" <newline>-      "            ]" <newline>-      "          }," <newline>-      "        }" <newline>-      "      }" <newline>-      "    }"; <newline>- <newline>-const char kCertificateWebAuthority[] = <newline>-      "        {" <newline>-      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>-      "            \"Type\": \"Authority\"," <newline>-      "            \"Trust\": [\"Web\"]," <newline>-      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>-      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>-      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>-      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>-      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>-      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>-      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>-      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>-      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>-      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>-      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>-      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>-      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>-      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>-      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>-      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>-      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>-      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>-      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>-      "        }"; <newline>- <newline>- <newline> class OncNetworkParserTest : public testing::Test { <newline>  public: <newline>   static void SetUpTestCase() { <newline>@@ -136,16 +52,6 @@ class OncNetworkParserTest : public testing::Test { <newline>     EXPECT_EQ(0U, ListCertsInSlot(slot_->os_module_handle()).size()); <newline>   } <newline>-  const base::Value* GetExpectedProperty(const Network* network, <newline>-                                         PropertyIndex index, <newline>-                                         base::Value::Type expected_type); <newline>-  void CheckStringProperty(const Network* network, <newline>-                           PropertyIndex index, <newline>-                           const char* expected); <newline>-  void CheckBooleanProperty(const Network* network, <newline>-                            PropertyIndex index, <newline>-                            bool expected); <newline>- <newline>  protected: <newline>   scoped_refptr<net::CryptoModule> slot_; <newline>   net::CertDatabase cert_db_; <newline>@@ -180,48 +86,6 @@ class OncNetworkParserTest : public testing::Test { <newline>   static base::LazyInstance<ScopedTempDir> temp_db_dir_; <newline> }; <newline>-const base::Value* OncNetworkParserTest::GetExpectedProperty( <newline>-    const Network* network, <newline>-    PropertyIndex index, <newline>-    base::Value::Type expected_type) { <newline>-  const base::Value* value; <newline>-  if (!network->GetProperty(index, &value)) { <newline>-    ADD_FAILURE() << "Property " << index << " does not exist"; <newline>-    return NULL; <newline>-  } <newline>-  if (!value->IsType(expected_type)) { <newline>-    ADD_FAILURE() << "Property " << index << " expected type " <newline>-                  << expected_type << " actual type " <newline>-                  << value->GetType(); <newline>-    return NULL; <newline>-  } <newline>-  return value; <newline>-} <newline>- <newline>-void OncNetworkParserTest::CheckStringProperty(const Network* network, <newline>-                                               PropertyIndex index, <newline>-                                               const char* expected) { <newline>-  const base::Value* value = <newline>-    GetExpectedProperty(network, index, base::Value::TYPE_STRING); <newline>-  if (!value) <newline>-    return; <newline>-  std::string string_value; <newline>-  value->GetAsString(&string_value); <newline>-  EXPECT_EQ(expected, string_value); <newline>-} <newline>- <newline>-void OncNetworkParserTest::CheckBooleanProperty(const Network* network, <newline>-                                                PropertyIndex index, <newline>-                                                bool expected) { <newline>-  const base::Value* value = <newline>-    GetExpectedProperty(network, index, base::Value::TYPE_BOOLEAN); <newline>-  if (!value) <newline>-    return; <newline>-  bool bool_value = false; <newline>-  value->GetAsBoolean(&bool_value); <newline>-  EXPECT_EQ(expected, bool_value); <newline>-} <newline>- <newline> // static <newline> base::LazyInstance<ScopedTempDir> OncNetworkParserTest::temp_db_dir_ = <newline>     LAZY_INSTANCE_INITIALIZER; <newline>@@ -233,7 +97,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WEP-PSK\"," <newline>+      "      \"Security\": \"WEP\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"Passphrase\": \"pass\"," <newline>       "    }" <newline>@@ -244,18 +108,15 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>-  ASSERT_TRUE(network.get()); <newline>+  Network* network = parser.ParseNetwork(0); <newline>+  ASSERT_TRUE(network); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_WEP); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurityWep); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_SSID, "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->passphrase(), "pass"); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_PASSPHRASE, "pass"); <newline> } <newline> TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>@@ -265,7 +126,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA-EAP\"," <newline>+      "      \"Security\": \"WPA2\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": true," <newline>       "      \"EAP\": {" <newline>@@ -280,19 +141,15 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>-  ASSERT_TRUE(network.get()); <newline>+  Network* network = parser.ParseNetwork(0); <newline>+  ASSERT_TRUE(network); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurity8021x); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), true); <newline>-  CheckBooleanProperty(wifi, PROPERTY_INDEX_AUTO_CONNECT, true); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_PEAP); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_METHOD, <newline>-                      flimflam::kEapMethodPEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), false); <newline> } <newline>@@ -303,7 +160,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA-EAP\"," <newline>+      "      \"Security\": \"WPA2\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": false," <newline>       "      \"EAP\": {" <newline>@@ -320,130 +177,19 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>-  ASSERT_TRUE(network.get()); <newline>+  Network* network = parser.ParseNetwork(0); <newline>+  ASSERT_TRUE(network); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_LEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), true); <newline>   EXPECT_EQ(wifi->eap_identity(), "user"); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_IDENTITY, "user"); <newline>   EXPECT_EQ(wifi->eap_passphrase(), "pass"); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_PASSWORD, "pass"); <newline>   EXPECT_EQ(wifi->eap_anonymous_identity(), "anon"); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_ANONYMOUS_IDENTITY, "anon"); <newline>-} <newline>- <newline>-TEST_F(OncNetworkParserTest, TestCreateNetworkOpenVPN) { <newline>-  std::string test_blob(std::string( <newline>-      "{" <newline>-      "  \"NetworkConfigurations\": [") + <newline>-      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>-      "  ]}")); <newline>-  OncNetworkParser parser(test_blob); <newline>- <newline>-  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>-  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>-  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>-  ASSERT_TRUE(network.get() != NULL); <newline>- <newline>-  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>-  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>-  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>-  EXPECT_EQ("MyVPN", vpn->name()); <newline>-  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>-                      flimflam::kProviderOpenVpn); <newline>-  EXPECT_EQ("vpn.acme.org", vpn->server_hostname()); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "vpn.acme.org"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHRETRY, "interact"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_CACERT, <newline>-                      "{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_COMPLZO, "true"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_KEYDIRECTION, "1"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PORT, "443"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PROTO, "udp"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PUSHPEERINFO, "true"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTEKU, <newline>-                      "TLS Web Server Authentication"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTKU, "eo"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTTLS, "server"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_RENEGSEC, "0"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_SERVERPOLLTIMEOUT, "10"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_STATICCHALLENGE, <newline>-                      "My static challenge"); <newline>-  // Check the default properties are set. <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHUSERPASS, ""); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_MGMT_ENABLE, ""); <newline>- <newline>-  std::string tls_auth_contents; <newline>-  const Value* tls_auth_value = <newline>-    GetExpectedProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSAUTHCONTENTS, <newline>-                        base::Value::TYPE_STRING); <newline>-  if (tls_auth_value != NULL) { <newline>-    tls_auth_value->GetAsString(&tls_auth_contents); <newline>-    EXPECT_NE(std::string::npos, <newline>-              tls_auth_contents.find("END OpenVPN Static key V1-----\n")); <newline>-    EXPECT_NE(std::string::npos, <newline>-              tls_auth_contents.find( <newline>-                  "-----BEGIN OpenVPN Static key V1-----\n")); <newline>-  } <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSREMOTE, <newline>-                      "MyOpenVPNServer"); <newline>-  EXPECT_FALSE(vpn->save_credentials()); <newline>-  EXPECT_EQ("{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}", vpn->ca_cert_nss()); <newline>-} <newline>- <newline>-TEST_F(OncNetworkParserTest, TestCreateNetworkL2TPIPsec) { <newline>-  std::string test_blob( <newline>-      "{" <newline>-      "  \"NetworkConfigurations\": [" <newline>-      "    {" <newline>-      "      \"GUID\": \"{926b84e4-f2c5-0972-b9bbb8f44c4316f5}\"," <newline>-      "      \"Name\": \"MyL2TPVPN\"," <newline>-      "      \"Type\": \"VPN\"," <newline>-      "      \"VPN\": {" <newline>-      "        \"Host\": \"l2tp.acme.org\"," <newline>-      "        \"Type\": \"L2TP-IPsec\"," <newline>-      "        \"IPsec\": {" <newline>-      "          \"IKEVersion\": 1," <newline>-      "          \"AuthenticationType\": \"PSK\"," <newline>-      "          \"PSK\": \"passphrase\"" <newline>-      "        }," <newline>-      "        \"L2TP\": {" <newline>-      "          \"SaveCredentials\": false" <newline>-      "        }" <newline>-      "      }" <newline>-      "    }" <newline>-      "  ]," <newline>-      "  \"Certificates\": []" <newline>-      "}"); <newline>-  OncNetworkParser parser(test_blob); <newline>- <newline>-  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>-  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>-  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>-  ASSERT_TRUE(network != NULL); <newline>- <newline>-  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>-  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>-  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>-  EXPECT_EQ("MyL2TPVPN", vpn->name()); <newline>-  EXPECT_EQ(PROVIDER_TYPE_L2TP_IPSEC_PSK, vpn->provider_type()); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>-                      flimflam::kProviderL2tpIpsec); <newline>-  EXPECT_EQ("l2tp.acme.org", vpn->server_hostname()); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "l2tp.acme.org"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>-  EXPECT_EQ("passphrase", vpn->psk_passphrase()); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_L2TPIPSEC_PSK, "passphrase"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_IPSEC_IKEVERSION, "1"); <newline>-  EXPECT_FALSE(vpn->save_credentials()); <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline>@@ -476,11 +222,34 @@ TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddAuthorityCertificate) { <newline>-  const std::string test_blob(std::string("{" <newline>-      "    \"Certificates\": [") + <newline>-      std::string(kCertificateWebAuthority) + std::string( <newline>+  const std::string test_blob("{" <newline>+      "    \"Certificates\": [" <newline>+      "        {" <newline>+      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>+      "            \"Type\": \"Authority\"," <newline>+      "            \"Trust\": [\"Web\"]," <newline>+      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>+      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>+      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>+      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>+      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>+      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>+      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>+      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>+      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>+      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>+      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>+      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>+      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>+      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>+      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>+      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>+      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>+      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>+      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>+      "        }" <newline>       "    ]," <newline>-      "}")); <newline>+      "}"); <newline>   OncNetworkParser parser(test_blob); <newline>   EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>@@ -535,27 +304,4 @@ TEST_F(OncNetworkParserTest, TestAddClientCertificate) { <newline>   EXPECT_TRUE(parser.ParseCertificate(0)); <newline> } <newline>-TEST_F(OncNetworkParserTest, TestNetworkAndCertificate) { <newline>-  std::string test_blob(std::string( <newline>-      "{" <newline>-      "  \"NetworkConfigurations\": [") + <newline>-      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>-      "  ]," <newline>-      "  \"Certificates\": [") + <newline>-      std::string(kCertificateWebAuthority) + std::string( <newline>-      "  ]," <newline>-      "}")); <newline>-  OncNetworkParser parser(test_blob); <newline>- <newline>-  EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>-  EXPECT_TRUE(parser.ParseCertificate(0)); <newline>- <newline>-  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>-  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>-  ASSERT_TRUE(network.get() != NULL); <newline>-  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>-  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>-  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>-} <newline>- <newline> }  // namespace chromeos
e8a77c2492aee5db0df376e1aef787fef3fc2a1	sail@chromium.org <sail@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 6 07:04:02 2011 +0000	Revert 113120 - this CL broke then chromeos clang bot: http://build.chromium.org/p/chromium.chromiumos/builders/Linux%20Clang%20%28ChromeOS%20dbg%29/builds/4017/steps/compile/logs/stdio Add ONC VPN support for OpenVPN and L2TP/IPsec VPNs Also simplifies some of the parsing code, adds type validation, brings the WiFi security parsing up to spec, and improves the unit tests for wifi so that they all verify the property_map_ fields (the only ones actually used to configure the network).  Also fixed a general parser problem where certificates wouldn't be parsed if network configs were. TEST=manual import of ONC file with openvpn network, unit_tests TBR=kmixter@chromium.org	chromium-os:23476 chromium-os:23477		http://codereview.chromium.org/8819011	svn://svn.chromium.org/chrome/trunk/src@113136 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>index b2a2486..24e656b 100644 <newline>--- a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>+++ b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>@@ -16,93 +16,9 @@ <newline> #include "net/base/crypto_module.h" <newline> #include "net/base/x509_certificate.h" <newline> #include "testing/gtest/include/gtest/gtest.h" <newline>-#include "third_party/cros_system_api/dbus/service_constants.h" <newline> namespace chromeos { <newline>-const char kNetworkConfigurationOpenVPN[] = <newline>-      "    {" <newline>-      "      \"GUID\": \"{408290ea-9299-4757-ab04-8957d55f0f13}\"," <newline>-      "      \"Type\": \"VPN\"," <newline>-      "      \"Name\": \"MyVPN\"," <newline>-      "      \"VPN\": {" <newline>-      "        \"Host\": \"vpn.acme.org\"," <newline>-      "        \"Type\": \"OpenVPN\"," <newline>-      "        \"OpenVPN\": {" <newline>-      "          \"AuthRetry\": \"interact\"," <newline>-      "          \"CompLZO\": \"true\"," <newline>-      "          \"KeyDirection\": \"1\"," <newline>-      "          \"Port\": 443," <newline>-      "          \"Proto\": \"udp\"," <newline>-      "          \"PushPeerInfo\": true," <newline>-      "          \"RemoteCertEKU\": \"TLS Web Server Authentication\"," <newline>-      "          \"RemoteCertKU\": [" <newline>-      "            \"eo\"" <newline>-      "          ]," <newline>-      "          \"RemoteCertTLS\": \"server\"," <newline>-      "          \"RenegSec\": 0," <newline>-      "          \"ServerPollTimeout\": 10," <newline>-      "          \"StaticChallenge\": \"My static challenge\"," <newline>-      "          \"TLSAuthContents\": \"" <newline>-      "-----BEGIN OpenVPN Static key V1-----\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>-      "END OpenVPN Static key V1-----\n\"," <newline>-      "          \"TLSRemote\": \"MyOpenVPNServer\"," <newline>-      "          \"SaveCredentials\": false," <newline>-      "          \"ServerCARef\": \"{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}\"," <newline>-      "          \"ClientCertType\": \"Pattern\"," <newline>-      "          \"ClientCertPattern\": {" <newline>-      "            \"IssuerRef\": \"{68a2ed90-13a1-4120-a1fe-282508320e18}\"," <newline>-      "            \"EnrollmentURI\": [" <newline>-      "              \"chrome-extension://abc/keygen-cert.html\"" <newline>-      "            ]" <newline>-      "          }," <newline>-      "        }" <newline>-      "      }" <newline>-      "    }"; <newline>- <newline>-const char kCertificateWebAuthority[] = <newline>-      "        {" <newline>-      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>-      "            \"Type\": \"Authority\"," <newline>-      "            \"Trust\": [\"Web\"]," <newline>-      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>-      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>-      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>-      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>-      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>-      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>-      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>-      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>-      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>-      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>-      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>-      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>-      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>-      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>-      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>-      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>-      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>-      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>-      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>-      "        }"; <newline>- <newline>- <newline> class OncNetworkParserTest : public testing::Test { <newline>  public: <newline>   static void SetUpTestCase() { <newline>@@ -136,16 +52,6 @@ class OncNetworkParserTest : public testing::Test { <newline>     EXPECT_EQ(0U, ListCertsInSlot(slot_->os_module_handle()).size()); <newline>   } <newline>-  const base::Value* GetExpectedProperty(const Network* network, <newline>-                                         PropertyIndex index, <newline>-                                         base::Value::Type expected_type); <newline>-  void CheckStringProperty(const Network* network, <newline>-                           PropertyIndex index, <newline>-                           const char* expected); <newline>-  void CheckBooleanProperty(const Network* network, <newline>-                            PropertyIndex index, <newline>-                            bool expected); <newline>- <newline>  protected: <newline>   scoped_refptr<net::CryptoModule> slot_; <newline>   net::CertDatabase cert_db_; <newline>@@ -180,48 +86,6 @@ class OncNetworkParserTest : public testing::Test { <newline>   static base::LazyInstance<ScopedTempDir> temp_db_dir_; <newline> }; <newline>-const base::Value* OncNetworkParserTest::GetExpectedProperty( <newline>-    const Network* network, <newline>-    PropertyIndex index, <newline>-    base::Value::Type expected_type) { <newline>-  const base::Value* value; <newline>-  if (!network->GetProperty(index, &value)) { <newline>-    ADD_FAILURE() << "Property " << index << " does not exist"; <newline>-    return NULL; <newline>-  } <newline>-  if (!value->IsType(expected_type)) { <newline>-    ADD_FAILURE() << "Property " << index << " expected type " <newline>-                  << expected_type << " actual type " <newline>-                  << value->GetType(); <newline>-    return NULL; <newline>-  } <newline>-  return value; <newline>-} <newline>- <newline>-void OncNetworkParserTest::CheckStringProperty(const Network* network, <newline>-                                               PropertyIndex index, <newline>-                                               const char* expected) { <newline>-  const base::Value* value = <newline>-    GetExpectedProperty(network, index, base::Value::TYPE_STRING); <newline>-  if (!value) <newline>-    return; <newline>-  std::string string_value; <newline>-  value->GetAsString(&string_value); <newline>-  EXPECT_EQ(expected, string_value); <newline>-} <newline>- <newline>-void OncNetworkParserTest::CheckBooleanProperty(const Network* network, <newline>-                                                PropertyIndex index, <newline>-                                                bool expected) { <newline>-  const base::Value* value = <newline>-    GetExpectedProperty(network, index, base::Value::TYPE_BOOLEAN); <newline>-  if (!value) <newline>-    return; <newline>-  bool bool_value = false; <newline>-  value->GetAsBoolean(&bool_value); <newline>-  EXPECT_EQ(expected, bool_value); <newline>-} <newline>- <newline> // static <newline> base::LazyInstance<ScopedTempDir> OncNetworkParserTest::temp_db_dir_ = <newline>     LAZY_INSTANCE_INITIALIZER; <newline>@@ -233,7 +97,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WEP-PSK\"," <newline>+      "      \"Security\": \"WEP\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"Passphrase\": \"pass\"," <newline>       "    }" <newline>@@ -244,18 +108,15 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>-  ASSERT_TRUE(network.get()); <newline>+  Network* network = parser.ParseNetwork(0); <newline>+  ASSERT_TRUE(network); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_WEP); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurityWep); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_SSID, "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->passphrase(), "pass"); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_PASSPHRASE, "pass"); <newline> } <newline> TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>@@ -265,7 +126,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA-EAP\"," <newline>+      "      \"Security\": \"WPA2\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": true," <newline>       "      \"EAP\": {" <newline>@@ -280,19 +141,15 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>-  ASSERT_TRUE(network.get()); <newline>+  Network* network = parser.ParseNetwork(0); <newline>+  ASSERT_TRUE(network); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurity8021x); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), true); <newline>-  CheckBooleanProperty(wifi, PROPERTY_INDEX_AUTO_CONNECT, true); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_PEAP); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_METHOD, <newline>-                      flimflam::kEapMethodPEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), false); <newline> } <newline>@@ -303,7 +160,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA-EAP\"," <newline>+      "      \"Security\": \"WPA2\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": false," <newline>       "      \"EAP\": {" <newline>@@ -320,130 +177,19 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>-  ASSERT_TRUE(network.get()); <newline>+  Network* network = parser.ParseNetwork(0); <newline>+  ASSERT_TRUE(network); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_LEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), true); <newline>   EXPECT_EQ(wifi->eap_identity(), "user"); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_IDENTITY, "user"); <newline>   EXPECT_EQ(wifi->eap_passphrase(), "pass"); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_PASSWORD, "pass"); <newline>   EXPECT_EQ(wifi->eap_anonymous_identity(), "anon"); <newline>-  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_ANONYMOUS_IDENTITY, "anon"); <newline>-} <newline>- <newline>-TEST_F(OncNetworkParserTest, TestCreateNetworkOpenVPN) { <newline>-  std::string test_blob(std::string( <newline>-      "{" <newline>-      "  \"NetworkConfigurations\": [") + <newline>-      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>-      "  ]}")); <newline>-  OncNetworkParser parser(test_blob); <newline>- <newline>-  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>-  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>-  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>-  ASSERT_TRUE(network.get() != NULL); <newline>- <newline>-  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>-  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>-  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>-  EXPECT_EQ("MyVPN", vpn->name()); <newline>-  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>-                      flimflam::kProviderOpenVpn); <newline>-  EXPECT_EQ("vpn.acme.org", vpn->server_hostname()); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "vpn.acme.org"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHRETRY, "interact"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_CACERT, <newline>-                      "{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_COMPLZO, "true"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_KEYDIRECTION, "1"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PORT, "443"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PROTO, "udp"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PUSHPEERINFO, "true"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTEKU, <newline>-                      "TLS Web Server Authentication"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTKU, "eo"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTTLS, "server"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_RENEGSEC, "0"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_SERVERPOLLTIMEOUT, "10"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_STATICCHALLENGE, <newline>-                      "My static challenge"); <newline>-  // Check the default properties are set. <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHUSERPASS, ""); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_MGMT_ENABLE, ""); <newline>- <newline>-  std::string tls_auth_contents; <newline>-  const Value* tls_auth_value = <newline>-    GetExpectedProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSAUTHCONTENTS, <newline>-                        base::Value::TYPE_STRING); <newline>-  if (tls_auth_value != NULL) { <newline>-    tls_auth_value->GetAsString(&tls_auth_contents); <newline>-    EXPECT_NE(std::string::npos, <newline>-              tls_auth_contents.find("END OpenVPN Static key V1-----\n")); <newline>-    EXPECT_NE(std::string::npos, <newline>-              tls_auth_contents.find( <newline>-                  "-----BEGIN OpenVPN Static key V1-----\n")); <newline>-  } <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSREMOTE, <newline>-                      "MyOpenVPNServer"); <newline>-  EXPECT_FALSE(vpn->save_credentials()); <newline>-  EXPECT_EQ("{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}", vpn->ca_cert_nss()); <newline>-} <newline>- <newline>-TEST_F(OncNetworkParserTest, TestCreateNetworkL2TPIPsec) { <newline>-  std::string test_blob( <newline>-      "{" <newline>-      "  \"NetworkConfigurations\": [" <newline>-      "    {" <newline>-      "      \"GUID\": \"{926b84e4-f2c5-0972-b9bbb8f44c4316f5}\"," <newline>-      "      \"Name\": \"MyL2TPVPN\"," <newline>-      "      \"Type\": \"VPN\"," <newline>-      "      \"VPN\": {" <newline>-      "        \"Host\": \"l2tp.acme.org\"," <newline>-      "        \"Type\": \"L2TP-IPsec\"," <newline>-      "        \"IPsec\": {" <newline>-      "          \"IKEVersion\": 1," <newline>-      "          \"AuthenticationType\": \"PSK\"," <newline>-      "          \"PSK\": \"passphrase\"" <newline>-      "        }," <newline>-      "        \"L2TP\": {" <newline>-      "          \"SaveCredentials\": false" <newline>-      "        }" <newline>-      "      }" <newline>-      "    }" <newline>-      "  ]," <newline>-      "  \"Certificates\": []" <newline>-      "}"); <newline>-  OncNetworkParser parser(test_blob); <newline>- <newline>-  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>-  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>-  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>-  ASSERT_TRUE(network != NULL); <newline>- <newline>-  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>-  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>-  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>-  EXPECT_EQ("MyL2TPVPN", vpn->name()); <newline>-  EXPECT_EQ(PROVIDER_TYPE_L2TP_IPSEC_PSK, vpn->provider_type()); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>-                      flimflam::kProviderL2tpIpsec); <newline>-  EXPECT_EQ("l2tp.acme.org", vpn->server_hostname()); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "l2tp.acme.org"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>-  EXPECT_EQ("passphrase", vpn->psk_passphrase()); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_L2TPIPSEC_PSK, "passphrase"); <newline>-  CheckStringProperty(vpn, PROPERTY_INDEX_IPSEC_IKEVERSION, "1"); <newline>-  EXPECT_FALSE(vpn->save_credentials()); <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline>@@ -476,11 +222,34 @@ TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddAuthorityCertificate) { <newline>-  const std::string test_blob(std::string("{" <newline>-      "    \"Certificates\": [") + <newline>-      std::string(kCertificateWebAuthority) + std::string( <newline>+  const std::string test_blob("{" <newline>+      "    \"Certificates\": [" <newline>+      "        {" <newline>+      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>+      "            \"Type\": \"Authority\"," <newline>+      "            \"Trust\": [\"Web\"]," <newline>+      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>+      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>+      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>+      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>+      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>+      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>+      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>+      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>+      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>+      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>+      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>+      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>+      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>+      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>+      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>+      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>+      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>+      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>+      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>+      "        }" <newline>       "    ]," <newline>-      "}")); <newline>+      "}"); <newline>   OncNetworkParser parser(test_blob); <newline>   EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>@@ -535,27 +304,4 @@ TEST_F(OncNetworkParserTest, TestAddClientCertificate) { <newline>   EXPECT_TRUE(parser.ParseCertificate(0)); <newline> } <newline>-TEST_F(OncNetworkParserTest, TestNetworkAndCertificate) { <newline>-  std::string test_blob(std::string( <newline>-      "{" <newline>-      "  \"NetworkConfigurations\": [") + <newline>-      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>-      "  ]," <newline>-      "  \"Certificates\": [") + <newline>-      std::string(kCertificateWebAuthority) + std::string( <newline>-      "  ]," <newline>-      "}")); <newline>-  OncNetworkParser parser(test_blob); <newline>- <newline>-  EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>-  EXPECT_TRUE(parser.ParseCertificate(0)); <newline>- <newline>-  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>-  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>-  ASSERT_TRUE(network.get() != NULL); <newline>-  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>-  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>-  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>-} <newline>- <newline> }  // namespace chromeos
b812e7f4921ec552f3469187a068419a7bbf569	kmixter@chromium.org <kmixter@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 6 06:14:18 2011 +0000	Add ONC VPN support for OpenVPN and L2TP/IPsec VPNs Also simplifies some of the parsing code, adds type validation, brings the WiFi security parsing up to spec, and improves the unit tests for wifi so that they all verify the property_map_ fields (the only ones actually used to configure the network).  Also fixed a general parser problem where certificates wouldn't be parsed if network configs were. TEST=manual import of ONC file with openvpn network, unit_tests	chromium-os:23476 chromium-os:23477		http://codereview.chromium.org/8759014	svn://svn.chromium.org/chrome/trunk/src@113120 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>index 24e656b..b2a2486 100644 <newline>--- a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>+++ b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>@@ -16,9 +16,93 @@ <newline> #include "net/base/crypto_module.h" <newline> #include "net/base/x509_certificate.h" <newline> #include "testing/gtest/include/gtest/gtest.h" <newline>+#include "third_party/cros_system_api/dbus/service_constants.h" <newline> namespace chromeos { <newline>+const char kNetworkConfigurationOpenVPN[] = <newline>+      "    {" <newline>+      "      \"GUID\": \"{408290ea-9299-4757-ab04-8957d55f0f13}\"," <newline>+      "      \"Type\": \"VPN\"," <newline>+      "      \"Name\": \"MyVPN\"," <newline>+      "      \"VPN\": {" <newline>+      "        \"Host\": \"vpn.acme.org\"," <newline>+      "        \"Type\": \"OpenVPN\"," <newline>+      "        \"OpenVPN\": {" <newline>+      "          \"AuthRetry\": \"interact\"," <newline>+      "          \"CompLZO\": \"true\"," <newline>+      "          \"KeyDirection\": \"1\"," <newline>+      "          \"Port\": 443," <newline>+      "          \"Proto\": \"udp\"," <newline>+      "          \"PushPeerInfo\": true," <newline>+      "          \"RemoteCertEKU\": \"TLS Web Server Authentication\"," <newline>+      "          \"RemoteCertKU\": [" <newline>+      "            \"eo\"" <newline>+      "          ]," <newline>+      "          \"RemoteCertTLS\": \"server\"," <newline>+      "          \"RenegSec\": 0," <newline>+      "          \"ServerPollTimeout\": 10," <newline>+      "          \"StaticChallenge\": \"My static challenge\"," <newline>+      "          \"TLSAuthContents\": \"" <newline>+      "-----BEGIN OpenVPN Static key V1-----\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "END OpenVPN Static key V1-----\n\"," <newline>+      "          \"TLSRemote\": \"MyOpenVPNServer\"," <newline>+      "          \"SaveCredentials\": false," <newline>+      "          \"ServerCARef\": \"{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}\"," <newline>+      "          \"ClientCertType\": \"Pattern\"," <newline>+      "          \"ClientCertPattern\": {" <newline>+      "            \"IssuerRef\": \"{68a2ed90-13a1-4120-a1fe-282508320e18}\"," <newline>+      "            \"EnrollmentURI\": [" <newline>+      "              \"chrome-extension://abc/keygen-cert.html\"" <newline>+      "            ]" <newline>+      "          }," <newline>+      "        }" <newline>+      "      }" <newline>+      "    }"; <newline>+ <newline>+const char kCertificateWebAuthority[] = <newline>+      "        {" <newline>+      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>+      "            \"Type\": \"Authority\"," <newline>+      "            \"Trust\": [\"Web\"]," <newline>+      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>+      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>+      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>+      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>+      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>+      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>+      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>+      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>+      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>+      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>+      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>+      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>+      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>+      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>+      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>+      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>+      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>+      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>+      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>+      "        }"; <newline>+ <newline>+ <newline> class OncNetworkParserTest : public testing::Test { <newline>  public: <newline>   static void SetUpTestCase() { <newline>@@ -52,6 +136,16 @@ class OncNetworkParserTest : public testing::Test { <newline>     EXPECT_EQ(0U, ListCertsInSlot(slot_->os_module_handle()).size()); <newline>   } <newline>+  const base::Value* GetExpectedProperty(const Network* network, <newline>+                                         PropertyIndex index, <newline>+                                         base::Value::Type expected_type); <newline>+  void CheckStringProperty(const Network* network, <newline>+                           PropertyIndex index, <newline>+                           const char* expected); <newline>+  void CheckBooleanProperty(const Network* network, <newline>+                            PropertyIndex index, <newline>+                            bool expected); <newline>+ <newline>  protected: <newline>   scoped_refptr<net::CryptoModule> slot_; <newline>   net::CertDatabase cert_db_; <newline>@@ -86,6 +180,48 @@ class OncNetworkParserTest : public testing::Test { <newline>   static base::LazyInstance<ScopedTempDir> temp_db_dir_; <newline> }; <newline>+const base::Value* OncNetworkParserTest::GetExpectedProperty( <newline>+    const Network* network, <newline>+    PropertyIndex index, <newline>+    base::Value::Type expected_type) { <newline>+  const base::Value* value; <newline>+  if (!network->GetProperty(index, &value)) { <newline>+    ADD_FAILURE() << "Property " << index << " does not exist"; <newline>+    return NULL; <newline>+  } <newline>+  if (!value->IsType(expected_type)) { <newline>+    ADD_FAILURE() << "Property " << index << " expected type " <newline>+                  << expected_type << " actual type " <newline>+                  << value->GetType(); <newline>+    return NULL; <newline>+  } <newline>+  return value; <newline>+} <newline>+ <newline>+void OncNetworkParserTest::CheckStringProperty(const Network* network, <newline>+                                               PropertyIndex index, <newline>+                                               const char* expected) { <newline>+  const base::Value* value = <newline>+    GetExpectedProperty(network, index, base::Value::TYPE_STRING); <newline>+  if (!value) <newline>+    return; <newline>+  std::string string_value; <newline>+  value->GetAsString(&string_value); <newline>+  EXPECT_EQ(expected, string_value); <newline>+} <newline>+ <newline>+void OncNetworkParserTest::CheckBooleanProperty(const Network* network, <newline>+                                                PropertyIndex index, <newline>+                                                bool expected) { <newline>+  const base::Value* value = <newline>+    GetExpectedProperty(network, index, base::Value::TYPE_BOOLEAN); <newline>+  if (!value) <newline>+    return; <newline>+  bool bool_value = false; <newline>+  value->GetAsBoolean(&bool_value); <newline>+  EXPECT_EQ(expected, bool_value); <newline>+} <newline>+ <newline> // static <newline> base::LazyInstance<ScopedTempDir> OncNetworkParserTest::temp_db_dir_ = <newline>     LAZY_INSTANCE_INITIALIZER; <newline>@@ -97,7 +233,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WEP\"," <newline>+      "      \"Security\": \"WEP-PSK\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"Passphrase\": \"pass\"," <newline>       "    }" <newline>@@ -108,15 +244,18 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_WEP); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurityWep); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SSID, "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->passphrase(), "pass"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_PASSPHRASE, "pass"); <newline> } <newline> TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>@@ -126,7 +265,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA2\"," <newline>+      "      \"Security\": \"WPA-EAP\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": true," <newline>       "      \"EAP\": {" <newline>@@ -141,15 +280,19 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurity8021x); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), true); <newline>+  CheckBooleanProperty(wifi, PROPERTY_INDEX_AUTO_CONNECT, true); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_PEAP); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_METHOD, <newline>+                      flimflam::kEapMethodPEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), false); <newline> } <newline>@@ -160,7 +303,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA2\"," <newline>+      "      \"Security\": \"WPA-EAP\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": false," <newline>       "      \"EAP\": {" <newline>@@ -177,19 +320,130 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_LEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), true); <newline>   EXPECT_EQ(wifi->eap_identity(), "user"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_IDENTITY, "user"); <newline>   EXPECT_EQ(wifi->eap_passphrase(), "pass"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_PASSWORD, "pass"); <newline>   EXPECT_EQ(wifi->eap_anonymous_identity(), "anon"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_ANONYMOUS_IDENTITY, "anon"); <newline>+} <newline>+ <newline>+TEST_F(OncNetworkParserTest, TestCreateNetworkOpenVPN) { <newline>+  std::string test_blob(std::string( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [") + <newline>+      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>+      "  ]}")); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get() != NULL); <newline>+ <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ("MyVPN", vpn->name()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>+                      flimflam::kProviderOpenVpn); <newline>+  EXPECT_EQ("vpn.acme.org", vpn->server_hostname()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "vpn.acme.org"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHRETRY, "interact"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_CACERT, <newline>+                      "{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_COMPLZO, "true"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_KEYDIRECTION, "1"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PORT, "443"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PROTO, "udp"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PUSHPEERINFO, "true"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTEKU, <newline>+                      "TLS Web Server Authentication"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTKU, "eo"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTTLS, "server"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_RENEGSEC, "0"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_SERVERPOLLTIMEOUT, "10"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_STATICCHALLENGE, <newline>+                      "My static challenge"); <newline>+  // Check the default properties are set. <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHUSERPASS, ""); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_MGMT_ENABLE, ""); <newline>+ <newline>+  std::string tls_auth_contents; <newline>+  const Value* tls_auth_value = <newline>+    GetExpectedProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSAUTHCONTENTS, <newline>+                        base::Value::TYPE_STRING); <newline>+  if (tls_auth_value != NULL) { <newline>+    tls_auth_value->GetAsString(&tls_auth_contents); <newline>+    EXPECT_NE(std::string::npos, <newline>+              tls_auth_contents.find("END OpenVPN Static key V1-----\n")); <newline>+    EXPECT_NE(std::string::npos, <newline>+              tls_auth_contents.find( <newline>+                  "-----BEGIN OpenVPN Static key V1-----\n")); <newline>+  } <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSREMOTE, <newline>+                      "MyOpenVPNServer"); <newline>+  EXPECT_FALSE(vpn->save_credentials()); <newline>+  EXPECT_EQ("{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}", vpn->ca_cert_nss()); <newline>+} <newline>+ <newline>+TEST_F(OncNetworkParserTest, TestCreateNetworkL2TPIPsec) { <newline>+  std::string test_blob( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [" <newline>+      "    {" <newline>+      "      \"GUID\": \"{926b84e4-f2c5-0972-b9bbb8f44c4316f5}\"," <newline>+      "      \"Name\": \"MyL2TPVPN\"," <newline>+      "      \"Type\": \"VPN\"," <newline>+      "      \"VPN\": {" <newline>+      "        \"Host\": \"l2tp.acme.org\"," <newline>+      "        \"Type\": \"L2TP-IPsec\"," <newline>+      "        \"IPsec\": {" <newline>+      "          \"IKEVersion\": 1," <newline>+      "          \"AuthenticationType\": \"PSK\"," <newline>+      "          \"PSK\": \"passphrase\"" <newline>+      "        }," <newline>+      "        \"L2TP\": {" <newline>+      "          \"SaveCredentials\": false" <newline>+      "        }" <newline>+      "      }" <newline>+      "    }" <newline>+      "  ]," <newline>+      "  \"Certificates\": []" <newline>+      "}"); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network != NULL); <newline>+ <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ("MyL2TPVPN", vpn->name()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_L2TP_IPSEC_PSK, vpn->provider_type()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>+                      flimflam::kProviderL2tpIpsec); <newline>+  EXPECT_EQ("l2tp.acme.org", vpn->server_hostname()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "l2tp.acme.org"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>+  EXPECT_EQ("passphrase", vpn->psk_passphrase()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_L2TPIPSEC_PSK, "passphrase"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_IPSEC_IKEVERSION, "1"); <newline>+  EXPECT_FALSE(vpn->save_credentials()); <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline>@@ -222,34 +476,11 @@ TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddAuthorityCertificate) { <newline>-  const std::string test_blob("{" <newline>-      "    \"Certificates\": [" <newline>-      "        {" <newline>-      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>-      "            \"Type\": \"Authority\"," <newline>-      "            \"Trust\": [\"Web\"]," <newline>-      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>-      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>-      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>-      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>-      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>-      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>-      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>-      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>-      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>-      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>-      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>-      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>-      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>-      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>-      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>-      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>-      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>-      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>-      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>-      "        }" <newline>+  const std::string test_blob(std::string("{" <newline>+      "    \"Certificates\": [") + <newline>+      std::string(kCertificateWebAuthority) + std::string( <newline>       "    ]," <newline>-      "}"); <newline>+      "}")); <newline>   OncNetworkParser parser(test_blob); <newline>   EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>@@ -304,4 +535,27 @@ TEST_F(OncNetworkParserTest, TestAddClientCertificate) { <newline>   EXPECT_TRUE(parser.ParseCertificate(0)); <newline> } <newline>+TEST_F(OncNetworkParserTest, TestNetworkAndCertificate) { <newline>+  std::string test_blob(std::string( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [") + <newline>+      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>+      "  ]," <newline>+      "  \"Certificates\": [") + <newline>+      std::string(kCertificateWebAuthority) + std::string( <newline>+      "  ]," <newline>+      "}")); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>+  EXPECT_TRUE(parser.ParseCertificate(0)); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get() != NULL); <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>+} <newline>+ <newline> }  // namespace chromeos
55c796ac0596c9083481075ba0c15b046fff65a	kmixter@chromium.org <kmixter@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 6 06:14:18 2011 +0000	Add ONC VPN support for OpenVPN and L2TP/IPsec VPNs Also simplifies some of the parsing code, adds type validation, brings the WiFi security parsing up to spec, and improves the unit tests for wifi so that they all verify the property_map_ fields (the only ones actually used to configure the network).  Also fixed a general parser problem where certificates wouldn't be parsed if network configs were. TEST=manual import of ONC file with openvpn network, unit_tests	chromium-os:23476 chromium-os:23477		http://codereview.chromium.org/8759014	svn://svn.chromium.org/chrome/trunk/src@113120 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>index 24e656b..b2a2486 100644 <newline>--- a/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>+++ b/chrome/browser/chromeos/cros/onc_network_parser_unittest.cc <newline>@@ -16,9 +16,93 @@ <newline> #include "net/base/crypto_module.h" <newline> #include "net/base/x509_certificate.h" <newline> #include "testing/gtest/include/gtest/gtest.h" <newline>+#include "third_party/cros_system_api/dbus/service_constants.h" <newline> namespace chromeos { <newline>+const char kNetworkConfigurationOpenVPN[] = <newline>+      "    {" <newline>+      "      \"GUID\": \"{408290ea-9299-4757-ab04-8957d55f0f13}\"," <newline>+      "      \"Type\": \"VPN\"," <newline>+      "      \"Name\": \"MyVPN\"," <newline>+      "      \"VPN\": {" <newline>+      "        \"Host\": \"vpn.acme.org\"," <newline>+      "        \"Type\": \"OpenVPN\"," <newline>+      "        \"OpenVPN\": {" <newline>+      "          \"AuthRetry\": \"interact\"," <newline>+      "          \"CompLZO\": \"true\"," <newline>+      "          \"KeyDirection\": \"1\"," <newline>+      "          \"Port\": 443," <newline>+      "          \"Proto\": \"udp\"," <newline>+      "          \"PushPeerInfo\": true," <newline>+      "          \"RemoteCertEKU\": \"TLS Web Server Authentication\"," <newline>+      "          \"RemoteCertKU\": [" <newline>+      "            \"eo\"" <newline>+      "          ]," <newline>+      "          \"RemoteCertTLS\": \"server\"," <newline>+      "          \"RenegSec\": 0," <newline>+      "          \"ServerPollTimeout\": 10," <newline>+      "          \"StaticChallenge\": \"My static challenge\"," <newline>+      "          \"TLSAuthContents\": \"" <newline>+      "-----BEGIN OpenVPN Static key V1-----\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" <newline>+      "END OpenVPN Static key V1-----\n\"," <newline>+      "          \"TLSRemote\": \"MyOpenVPNServer\"," <newline>+      "          \"SaveCredentials\": false," <newline>+      "          \"ServerCARef\": \"{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}\"," <newline>+      "          \"ClientCertType\": \"Pattern\"," <newline>+      "          \"ClientCertPattern\": {" <newline>+      "            \"IssuerRef\": \"{68a2ed90-13a1-4120-a1fe-282508320e18}\"," <newline>+      "            \"EnrollmentURI\": [" <newline>+      "              \"chrome-extension://abc/keygen-cert.html\"" <newline>+      "            ]" <newline>+      "          }," <newline>+      "        }" <newline>+      "      }" <newline>+      "    }"; <newline>+ <newline>+const char kCertificateWebAuthority[] = <newline>+      "        {" <newline>+      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>+      "            \"Type\": \"Authority\"," <newline>+      "            \"Trust\": [\"Web\"]," <newline>+      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>+      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>+      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>+      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>+      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>+      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>+      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>+      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>+      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>+      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>+      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>+      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>+      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>+      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>+      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>+      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>+      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>+      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>+      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>+      "        }"; <newline>+ <newline>+ <newline> class OncNetworkParserTest : public testing::Test { <newline>  public: <newline>   static void SetUpTestCase() { <newline>@@ -52,6 +136,16 @@ class OncNetworkParserTest : public testing::Test { <newline>     EXPECT_EQ(0U, ListCertsInSlot(slot_->os_module_handle()).size()); <newline>   } <newline>+  const base::Value* GetExpectedProperty(const Network* network, <newline>+                                         PropertyIndex index, <newline>+                                         base::Value::Type expected_type); <newline>+  void CheckStringProperty(const Network* network, <newline>+                           PropertyIndex index, <newline>+                           const char* expected); <newline>+  void CheckBooleanProperty(const Network* network, <newline>+                            PropertyIndex index, <newline>+                            bool expected); <newline>+ <newline>  protected: <newline>   scoped_refptr<net::CryptoModule> slot_; <newline>   net::CertDatabase cert_db_; <newline>@@ -86,6 +180,48 @@ class OncNetworkParserTest : public testing::Test { <newline>   static base::LazyInstance<ScopedTempDir> temp_db_dir_; <newline> }; <newline>+const base::Value* OncNetworkParserTest::GetExpectedProperty( <newline>+    const Network* network, <newline>+    PropertyIndex index, <newline>+    base::Value::Type expected_type) { <newline>+  const base::Value* value; <newline>+  if (!network->GetProperty(index, &value)) { <newline>+    ADD_FAILURE() << "Property " << index << " does not exist"; <newline>+    return NULL; <newline>+  } <newline>+  if (!value->IsType(expected_type)) { <newline>+    ADD_FAILURE() << "Property " << index << " expected type " <newline>+                  << expected_type << " actual type " <newline>+                  << value->GetType(); <newline>+    return NULL; <newline>+  } <newline>+  return value; <newline>+} <newline>+ <newline>+void OncNetworkParserTest::CheckStringProperty(const Network* network, <newline>+                                               PropertyIndex index, <newline>+                                               const char* expected) { <newline>+  const base::Value* value = <newline>+    GetExpectedProperty(network, index, base::Value::TYPE_STRING); <newline>+  if (!value) <newline>+    return; <newline>+  std::string string_value; <newline>+  value->GetAsString(&string_value); <newline>+  EXPECT_EQ(expected, string_value); <newline>+} <newline>+ <newline>+void OncNetworkParserTest::CheckBooleanProperty(const Network* network, <newline>+                                                PropertyIndex index, <newline>+                                                bool expected) { <newline>+  const base::Value* value = <newline>+    GetExpectedProperty(network, index, base::Value::TYPE_BOOLEAN); <newline>+  if (!value) <newline>+    return; <newline>+  bool bool_value = false; <newline>+  value->GetAsBoolean(&bool_value); <newline>+  EXPECT_EQ(expected, bool_value); <newline>+} <newline>+ <newline> // static <newline> base::LazyInstance<ScopedTempDir> OncNetworkParserTest::temp_db_dir_ = <newline>     LAZY_INSTANCE_INITIALIZER; <newline>@@ -97,7 +233,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WEP\"," <newline>+      "      \"Security\": \"WEP-PSK\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"Passphrase\": \"pass\"," <newline>       "    }" <newline>@@ -108,15 +244,18 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifi1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_WEP); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurityWep); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SSID, "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->passphrase(), "pass"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_PASSPHRASE, "pass"); <newline> } <newline> TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>@@ -126,7 +265,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA2\"," <newline>+      "      \"Security\": \"WPA-EAP\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": true," <newline>       "      \"EAP\": {" <newline>@@ -141,15 +280,19 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP1) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_SECURITY, flimflam::kSecurity8021x); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), true); <newline>+  CheckBooleanProperty(wifi, PROPERTY_INDEX_AUTO_CONNECT, true); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_PEAP); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_METHOD, <newline>+                      flimflam::kEapMethodPEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), false); <newline> } <newline>@@ -160,7 +303,7 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>       "    \"GUID\": \"{485d6076-dd44-6b6d-69787465725f5045}\"," <newline>       "    \"Type\": \"WiFi\"," <newline>       "    \"WiFi\": {" <newline>-      "      \"Security\": \"WPA2\"," <newline>+      "      \"Security\": \"WPA-EAP\"," <newline>       "      \"SSID\": \"ssid\"," <newline>       "      \"AutoConnect\": false," <newline>       "      \"EAP\": {" <newline>@@ -177,19 +320,130 @@ TEST_F(OncNetworkParserTest, TestCreateNetworkWifiEAP2) { <newline>   EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>   EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>   EXPECT_FALSE(parser.ParseNetwork(1)); <newline>-  Network* network = parser.ParseNetwork(0); <newline>-  ASSERT_TRUE(network); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get()); <newline>   EXPECT_EQ(network->type(), chromeos::TYPE_WIFI); <newline>-  WifiNetwork* wifi = static_cast<WifiNetwork*>(network); <newline>+  WifiNetwork* wifi = static_cast<WifiNetwork*>(network.get()); <newline>   EXPECT_EQ(wifi->encryption(), chromeos::SECURITY_8021X); <newline>   EXPECT_EQ(wifi->name(), "ssid"); <newline>   EXPECT_EQ(wifi->auto_connect(), false); <newline>   EXPECT_EQ(wifi->eap_method(), EAP_METHOD_LEAP); <newline>   EXPECT_EQ(wifi->eap_use_system_cas(), true); <newline>   EXPECT_EQ(wifi->eap_identity(), "user"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_IDENTITY, "user"); <newline>   EXPECT_EQ(wifi->eap_passphrase(), "pass"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_PASSWORD, "pass"); <newline>   EXPECT_EQ(wifi->eap_anonymous_identity(), "anon"); <newline>+  CheckStringProperty(wifi, PROPERTY_INDEX_EAP_ANONYMOUS_IDENTITY, "anon"); <newline>+} <newline>+ <newline>+TEST_F(OncNetworkParserTest, TestCreateNetworkOpenVPN) { <newline>+  std::string test_blob(std::string( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [") + <newline>+      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>+      "  ]}")); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get() != NULL); <newline>+ <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ("MyVPN", vpn->name()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>+                      flimflam::kProviderOpenVpn); <newline>+  EXPECT_EQ("vpn.acme.org", vpn->server_hostname()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "vpn.acme.org"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHRETRY, "interact"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_CACERT, <newline>+                      "{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_COMPLZO, "true"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_KEYDIRECTION, "1"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PORT, "443"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PROTO, "udp"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_PUSHPEERINFO, "true"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTEKU, <newline>+                      "TLS Web Server Authentication"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTKU, "eo"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_REMOTECERTTLS, "server"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_RENEGSEC, "0"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_SERVERPOLLTIMEOUT, "10"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_STATICCHALLENGE, <newline>+                      "My static challenge"); <newline>+  // Check the default properties are set. <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_AUTHUSERPASS, ""); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_MGMT_ENABLE, ""); <newline>+ <newline>+  std::string tls_auth_contents; <newline>+  const Value* tls_auth_value = <newline>+    GetExpectedProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSAUTHCONTENTS, <newline>+                        base::Value::TYPE_STRING); <newline>+  if (tls_auth_value != NULL) { <newline>+    tls_auth_value->GetAsString(&tls_auth_contents); <newline>+    EXPECT_NE(std::string::npos, <newline>+              tls_auth_contents.find("END OpenVPN Static key V1-----\n")); <newline>+    EXPECT_NE(std::string::npos, <newline>+              tls_auth_contents.find( <newline>+                  "-----BEGIN OpenVPN Static key V1-----\n")); <newline>+  } <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_OPEN_VPN_TLSREMOTE, <newline>+                      "MyOpenVPNServer"); <newline>+  EXPECT_FALSE(vpn->save_credentials()); <newline>+  EXPECT_EQ("{55ca78f6-0842-4e1b-96a3-09a9e1a26ef5}", vpn->ca_cert_nss()); <newline>+} <newline>+ <newline>+TEST_F(OncNetworkParserTest, TestCreateNetworkL2TPIPsec) { <newline>+  std::string test_blob( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [" <newline>+      "    {" <newline>+      "      \"GUID\": \"{926b84e4-f2c5-0972-b9bbb8f44c4316f5}\"," <newline>+      "      \"Name\": \"MyL2TPVPN\"," <newline>+      "      \"Type\": \"VPN\"," <newline>+      "      \"VPN\": {" <newline>+      "        \"Host\": \"l2tp.acme.org\"," <newline>+      "        \"Type\": \"L2TP-IPsec\"," <newline>+      "        \"IPsec\": {" <newline>+      "          \"IKEVersion\": 1," <newline>+      "          \"AuthenticationType\": \"PSK\"," <newline>+      "          \"PSK\": \"passphrase\"" <newline>+      "        }," <newline>+      "        \"L2TP\": {" <newline>+      "          \"SaveCredentials\": false" <newline>+      "        }" <newline>+      "      }" <newline>+      "    }" <newline>+      "  ]," <newline>+      "  \"Certificates\": []" <newline>+      "}"); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  EXPECT_EQ(0, parser.GetCertificatesSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network != NULL); <newline>+ <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  CheckStringProperty(network.get(), PROPERTY_INDEX_TYPE, flimflam::kTypeVPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ("MyL2TPVPN", vpn->name()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_L2TP_IPSEC_PSK, vpn->provider_type()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_TYPE, <newline>+                      flimflam::kProviderL2tpIpsec); <newline>+  EXPECT_EQ("l2tp.acme.org", vpn->server_hostname()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_PROVIDER_HOST, "l2tp.acme.org"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_VPN_DOMAIN, ""); <newline>+  EXPECT_EQ("passphrase", vpn->psk_passphrase()); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_L2TPIPSEC_PSK, "passphrase"); <newline>+  CheckStringProperty(vpn, PROPERTY_INDEX_IPSEC_IKEVERSION, "1"); <newline>+  EXPECT_FALSE(vpn->save_credentials()); <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline>@@ -222,34 +476,11 @@ TEST_F(OncNetworkParserTest, TestAddServerCertificate) { <newline> } <newline> TEST_F(OncNetworkParserTest, TestAddAuthorityCertificate) { <newline>-  const std::string test_blob("{" <newline>-      "    \"Certificates\": [" <newline>-      "        {" <newline>-      "            \"GUID\": \"{f998f760-272b-6939-4c2beffe428697ab}\"," <newline>-      "            \"Type\": \"Authority\"," <newline>-      "            \"Trust\": [\"Web\"]," <newline>-      "            \"X509\": \"MIIDojCCAwugAwIBAgIJAKGvi5ZgEWDVMA0GCSqGSIb3D" <newline>-      "QEBBAUAMIGTMRUwEwYDVQQKEwxHb29nbGUsIEluYy4xETAPBgNVBAsTCENocm9tZU9TMS" <newline>-      "IwIAYJKoZIhvcNAQkBFhNnc3BlbmNlckBnb29nbGUuY29tMRowGAYDVQQHExFNb3VudGF" <newline>-      "pbiBWaWV3LCBDQTELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMQ0wCwYDVQQDEwRsbWFv" <newline>-      "MB4XDTExMDMxNjIzNDcxMFoXDTEyMDMxNTIzNDcxMFowgZMxFTATBgNVBAoTDEdvb2dsZ" <newline>-      "SwgSW5jLjERMA8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQG" <newline>-      "dvb2dsZS5jb20xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTE" <newline>-      "LMAkGA1UEBhMCVVMxDTALBgNVBAMTBGxtYW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ" <newline>-      "AoGBAMDX6BQz2JUzIAVjetiXxDznd2wdqVqVHfNkbSRW+xBywgqUaIXmFEGUol7VzPfme" <newline>-      "FV8o8ok/eFlQB0h6ycqgwwMd0KjtJs2ys/k0F5GuN0G7fsgr+NRnhVgxj21yF6gYTN/8a" <newline>-      "9kscla/svdmp8ekexbALFnghbLBx3CgcqUxT+tAgMBAAGjgfswgfgwDAYDVR0TBAUwAwE" <newline>-      "B/zAdBgNVHQ4EFgQUbYygbSkl4kpjCNuxoezFGupA97UwgcgGA1UdIwSBwDCBvYAUbYyg" <newline>-      "bSkl4kpjCNuxoezFGupA97WhgZmkgZYwgZMxFTATBgNVBAoTDEdvb2dsZSwgSW5jLjERM" <newline>-      "A8GA1UECxMIQ2hyb21lT1MxIjAgBgkqhkiG9w0BCQEWE2dzcGVuY2VyQGdvb2dsZS5jb2" <newline>-      "0xGjAYBgNVBAcTEU1vdW50YWluIFZpZXcsIENBMQswCQYDVQQIEwJDQTELMAkGA1UEBhM" <newline>-      "CVVMxDTALBgNVBAMTBGxtYW+CCQChr4uWYBFg1TANBgkqhkiG9w0BAQQFAAOBgQCDq9wi" <newline>-      "Q4uVuf1CQU3sXfXCy1yqi5m8AsO9FxHvah5/SVFNwKllqTfedpCaWEswJ55YAojW9e+pY" <newline>-      "2Fh3Fo/Y9YkF88KCtLuBjjqDKCRLxF4LycjHODKyQQ7mN/t5AtP9yKOsNvWF+M4IfReg5" <newline>-      "1kohau6FauQx87by5NIRPdkNPvkQ==\"" <newline>-      "        }" <newline>+  const std::string test_blob(std::string("{" <newline>+      "    \"Certificates\": [") + <newline>+      std::string(kCertificateWebAuthority) + std::string( <newline>       "    ]," <newline>-      "}"); <newline>+      "}")); <newline>   OncNetworkParser parser(test_blob); <newline>   EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>@@ -304,4 +535,27 @@ TEST_F(OncNetworkParserTest, TestAddClientCertificate) { <newline>   EXPECT_TRUE(parser.ParseCertificate(0)); <newline> } <newline>+TEST_F(OncNetworkParserTest, TestNetworkAndCertificate) { <newline>+  std::string test_blob(std::string( <newline>+      "{" <newline>+      "  \"NetworkConfigurations\": [") + <newline>+      std::string(kNetworkConfigurationOpenVPN) + std::string( <newline>+      "  ]," <newline>+      "  \"Certificates\": [") + <newline>+      std::string(kCertificateWebAuthority) + std::string( <newline>+      "  ]," <newline>+      "}")); <newline>+  OncNetworkParser parser(test_blob); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetCertificatesSize()); <newline>+  EXPECT_TRUE(parser.ParseCertificate(0)); <newline>+ <newline>+  EXPECT_EQ(1, parser.GetNetworkConfigsSize()); <newline>+  scoped_ptr<Network> network(parser.ParseNetwork(0)); <newline>+  ASSERT_TRUE(network.get() != NULL); <newline>+  EXPECT_EQ(network->type(), chromeos::TYPE_VPN); <newline>+  VirtualNetwork* vpn = static_cast<VirtualNetwork*>(network.get()); <newline>+  EXPECT_EQ(PROVIDER_TYPE_OPEN_VPN, vpn->provider_type()); <newline>+} <newline>+ <newline> }  // namespace chromeos
8d92ceb494db603cc13fc47e788bea498a280b5	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Dec 2 08:02:10 2011 +0000	Allow extenions to override the default content_security_policy, but require the explicit policy to meet a minimum security threshold.			http://codereview.chromium.org/8773028	svn://svn.chromium.org/chrome/trunk/src@112656 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/api_test/content_security_policy/manifest.json b/chrome/test/data/extensions/api_test/content_security_policy/manifest.json <newline>index 8bafd41..2c35cd9 100644 <newline>--- a/chrome/test/data/extensions/api_test/content_security_policy/manifest.json <newline>+++ b/chrome/test/data/extensions/api_test/content_security_policy/manifest.json <newline>@@ -4,5 +4,5 @@ <newline>   "manifest_version": 2, <newline>   "description": "Sanity check that content_security_policy works for extensions. The majority of this is implemented (and tested) in WebKit, but we have a sanity test here just to make sure the integration with Chromium keeps working.", <newline>   "background_page": "test.html", <newline>-  "content_security_policy": "script-src 'self'" <newline>+  "content_security_policy": "script-src 'self'; object-src 'none'" <newline> }
e0be77ab281bdf7bf806a76ddf721abc8668864	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Dec 2 08:02:10 2011 +0000	Allow extenions to override the default content_security_policy, but require the explicit policy to meet a minimum security threshold.			http://codereview.chromium.org/8773028	svn://svn.chromium.org/chrome/trunk/src@112656 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/api_test/content_security_policy/manifest.json b/chrome/test/data/extensions/api_test/content_security_policy/manifest.json <newline>index 8bafd41..2c35cd9 100644 <newline>--- a/chrome/test/data/extensions/api_test/content_security_policy/manifest.json <newline>+++ b/chrome/test/data/extensions/api_test/content_security_policy/manifest.json <newline>@@ -4,5 +4,5 @@ <newline>   "manifest_version": 2, <newline>   "description": "Sanity check that content_security_policy works for extensions. The majority of this is implemented (and tested) in WebKit, but we have a sanity test here just to make sure the integration with Chromium keeps working.", <newline>   "background_page": "test.html", <newline>-  "content_security_policy": "script-src 'self'" <newline>+  "content_security_policy": "script-src 'self'; object-src 'none'" <newline> }
c0a61a76734259dfd166387684b81f0d8464ddb	thakis@chromium.org <thakis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 1 21:24:48 2011 +0000	Remove all 192 static initializers from transport_security_state.cc This is necessary for gcc 4.4.3, see the comments on http://codereview.chromium.org/8687014 TEST=none TBR=willchan	94925		http://codereview.chromium.org/8776012	svn://svn.chromium.org/chrome/trunk/src@112537 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state.cc b/net/base/transport_security_state.cc <newline>index 6cc2252..ce9cd43 100644 <newline>--- a/net/base/transport_security_state.cc <newline>+++ b/net/base/transport_security_state.cc <newline>@@ -923,10 +923,10 @@ static const char* const kGoogleRejectedCerts[] = { <newline>   kSPKIHash_Vodafone, <newline>   NULL, <newline> }; <newline>-static const PublicKeyPins kGooglePins = { <newline>-  kGoogleAcceptableCerts, <newline>-  kGoogleRejectedCerts, <newline>-}; <newline>+#define kGooglePins { \ <newline>+  kGoogleAcceptableCerts, \ <newline>+  kGoogleRejectedCerts, \ <newline>+} <newline> static const char* const kTorAcceptableCerts[] = { <newline>   kSPKIHash_RapidSSL, <newline>@@ -936,10 +936,10 @@ static const char* const kTorAcceptableCerts[] = { <newline>   kSPKIHash_Tor3, <newline>   NULL, <newline> }; <newline>-static const PublicKeyPins kTorPins = { <newline>-  kTorAcceptableCerts, <newline>-  kNoRejectedPublicKeys, <newline>-}; <newline>+#define kTorPins { \ <newline>+  kTorAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline> static const char* const kTwitterComAcceptableCerts[] = { <newline>   kSPKIHash_VeriSignClass1, <newline>@@ -963,10 +963,10 @@ static const char* const kTwitterComAcceptableCerts[] = { <newline>   kSPKIHash_Twitter1, <newline>   NULL, <newline> }; <newline>-static const PublicKeyPins kTwitterComPins = { <newline>-  kTwitterComAcceptableCerts, <newline>-  kNoRejectedPublicKeys, <newline>-}; <newline>+#define kTwitterComPins { \ <newline>+  kTwitterComAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline> // kTestAcceptableCerts doesn't actually match any public keys and is used <newline> // with "pinningtest.appspot.com", below, to test if pinning is active. <newline>@@ -974,14 +974,14 @@ static const char* const kTestAcceptableCerts[] = { <newline>   "sha1/AAAAAAAAAAAAAAAAAAAAAAAAAAA=", <newline>   NULL, <newline> }; <newline>-static const PublicKeyPins kTestPins = { <newline>-  kTestAcceptableCerts, <newline>-  kNoRejectedPublicKeys, <newline>-}; <newline>+#define kTestPins { \ <newline>+  kTestAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>-static const PublicKeyPins kNoPins = { <newline>-  NULL, NULL, <newline>-}; <newline>+#define kNoPins { \ <newline>+  NULL, NULL, \ <newline>+} <newline> #if defined(OS_CHROMEOS) <newline>   static const bool kTwitterHSTS = true;
98fd9a83e2d807b313680aead96edecf78616e5	thakis@chromium.org <thakis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 1 21:24:48 2011 +0000	Remove all 192 static initializers from transport_security_state.cc This is necessary for gcc 4.4.3, see the comments on http://codereview.chromium.org/8687014 TEST=none TBR=willchan	94925		http://codereview.chromium.org/8776012	svn://svn.chromium.org/chrome/trunk/src@112537 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state.cc b/net/base/transport_security_state.cc <newline>index 6cc2252..ce9cd43 100644 <newline>--- a/net/base/transport_security_state.cc <newline>+++ b/net/base/transport_security_state.cc <newline>@@ -923,10 +923,10 @@ static const char* const kGoogleRejectedCerts[] = { <newline>   kSPKIHash_Vodafone, <newline>   NULL, <newline> }; <newline>-static const PublicKeyPins kGooglePins = { <newline>-  kGoogleAcceptableCerts, <newline>-  kGoogleRejectedCerts, <newline>-}; <newline>+#define kGooglePins { \ <newline>+  kGoogleAcceptableCerts, \ <newline>+  kGoogleRejectedCerts, \ <newline>+} <newline> static const char* const kTorAcceptableCerts[] = { <newline>   kSPKIHash_RapidSSL, <newline>@@ -936,10 +936,10 @@ static const char* const kTorAcceptableCerts[] = { <newline>   kSPKIHash_Tor3, <newline>   NULL, <newline> }; <newline>-static const PublicKeyPins kTorPins = { <newline>-  kTorAcceptableCerts, <newline>-  kNoRejectedPublicKeys, <newline>-}; <newline>+#define kTorPins { \ <newline>+  kTorAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline> static const char* const kTwitterComAcceptableCerts[] = { <newline>   kSPKIHash_VeriSignClass1, <newline>@@ -963,10 +963,10 @@ static const char* const kTwitterComAcceptableCerts[] = { <newline>   kSPKIHash_Twitter1, <newline>   NULL, <newline> }; <newline>-static const PublicKeyPins kTwitterComPins = { <newline>-  kTwitterComAcceptableCerts, <newline>-  kNoRejectedPublicKeys, <newline>-}; <newline>+#define kTwitterComPins { \ <newline>+  kTwitterComAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline> // kTestAcceptableCerts doesn't actually match any public keys and is used <newline> // with "pinningtest.appspot.com", below, to test if pinning is active. <newline>@@ -974,14 +974,14 @@ static const char* const kTestAcceptableCerts[] = { <newline>   "sha1/AAAAAAAAAAAAAAAAAAAAAAAAAAA=", <newline>   NULL, <newline> }; <newline>-static const PublicKeyPins kTestPins = { <newline>-  kTestAcceptableCerts, <newline>-  kNoRejectedPublicKeys, <newline>-}; <newline>+#define kTestPins { \ <newline>+  kTestAcceptableCerts, \ <newline>+  kNoRejectedPublicKeys, \ <newline>+} <newline>-static const PublicKeyPins kNoPins = { <newline>-  NULL, NULL, <newline>-}; <newline>+#define kNoPins { \ <newline>+  NULL, NULL, \ <newline>+} <newline> #if defined(OS_CHROMEOS) <newline>   static const bool kTwitterHSTS = true;
f6a3cec1457eb953f4df20e3f327df5580fd02a	dpolukhin@chromium.org <dpolukhin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 1 11:46:04 2011 +0000	Update HelpApp manifest file with new content_security_policy TEST=none	chromium-os:16101		http://codereview.chromium.org/8746016	svn://svn.chromium.org/chrome/trunk/src@112451 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/help_app/manifest.json b/chrome/browser/resources/help_app/manifest.json <newline>index 11cd22a..e8cf1c9 100644 <newline>--- a/chrome/browser/resources/help_app/manifest.json <newline>+++ b/chrome/browser/resources/help_app/manifest.json <newline>@@ -1,7 +1,7 @@ <newline> { <newline>   "key": "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCqtHjbcvWT9Kbcapi0SaG28I66eRQHQvOqngCizm87qMb9RTgrftaUAGwPmxFLy4gBwO572N5ACpxsR6m2fRg9PSjeqaEojiFd28KY/b4VPoq/ukNOy97Ns7lPv4gmtNB8txuFIFuNw3s1k8nEJVAp659d7SnMsL4O1uXkW1huGQIDAQAB", <newline>   "name": "Help", <newline>-  "version": "2.4", <newline>+  "version": "2.5", <newline>   "icons": {"16": "images/Help_16.png", <newline>             "24": "images/Help_24.png", <newline>             "48": "images/Help_48.png", <newline>@@ -22,5 +22,5 @@ <newline>       "all_frames": true <newline>     } <newline>   ], <newline>-  "content_security_policy": "default-src 'self' https://ssl.google-analytics.com 'unsafe-inline'; frame-src https://www.google.com; connect-src https://www.google.com;" <newline>+  "content_security_policy": "default-src 'self' https://ssl.google-analytics.com http://www.google-analytics.com; frame-src https://www.google.com; connect-src https://www.google.com; style-src 'self' 'unsafe-inline'" <newline> }
ccebd09f6cb174d7a1e8090cad3f7e03b05f5e2	dpolukhin@chromium.org <dpolukhin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 1 11:46:04 2011 +0000	Update HelpApp manifest file with new content_security_policy TEST=none	chromium-os:16101		http://codereview.chromium.org/8746016	svn://svn.chromium.org/chrome/trunk/src@112451 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/help_app/manifest.json b/chrome/browser/resources/help_app/manifest.json <newline>index 11cd22a..e8cf1c9 100644 <newline>--- a/chrome/browser/resources/help_app/manifest.json <newline>+++ b/chrome/browser/resources/help_app/manifest.json <newline>@@ -1,7 +1,7 @@ <newline> { <newline>   "key": "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCqtHjbcvWT9Kbcapi0SaG28I66eRQHQvOqngCizm87qMb9RTgrftaUAGwPmxFLy4gBwO572N5ACpxsR6m2fRg9PSjeqaEojiFd28KY/b4VPoq/ukNOy97Ns7lPv4gmtNB8txuFIFuNw3s1k8nEJVAp659d7SnMsL4O1uXkW1huGQIDAQAB", <newline>   "name": "Help", <newline>-  "version": "2.4", <newline>+  "version": "2.5", <newline>   "icons": {"16": "images/Help_16.png", <newline>             "24": "images/Help_24.png", <newline>             "48": "images/Help_48.png", <newline>@@ -22,5 +22,5 @@ <newline>       "all_frames": true <newline>     } <newline>   ], <newline>-  "content_security_policy": "default-src 'self' https://ssl.google-analytics.com 'unsafe-inline'; frame-src https://www.google.com; connect-src https://www.google.com;" <newline>+  "content_security_policy": "default-src 'self' https://ssl.google-analytics.com http://www.google-analytics.com; frame-src https://www.google.com; connect-src https://www.google.com; style-src 'self' 'unsafe-inline'" <newline> }
7048a02857ceb7aed90856e71f0b3ddbd0d6b08	kaznacheev@chromium.org <kaznacheev@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 30 13:56:35 2011 +0000	Eliminate use of assignments to innerHTML in File Browser Also removed obsolete files to minimize security audit efforts. TEST=	chromium-os:23502		http://codereview.chromium.org/8727028	svn://svn.chromium.org/chrome/trunk/src@112215 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/file_manager/playlist.html b/chrome/browser/resources/file_manager/playlist.html <newline>index 5c7ff31..56a6ffa 100644 <newline>--- a/chrome/browser/resources/file_manager/playlist.html <newline>+++ b/chrome/browser/resources/file_manager/playlist.html <newline>@@ -105,7 +105,7 @@ function setPlaylistOffset(offset) { <newline> function updateUI() { <newline>   var main = $('main'); <newline>   if (currentPlaylist) { <newline>-    main.innerHTML = ''; <newline>+    main.textContent = ''; <newline>     var main = $('main'); <newline>     for (var x = 0; x < currentPlaylist.length; x++) { <newline>       var rowdiv = document.createElement('div');
f3c00aa1126fbc7c1e0c9cbc3c5a495b88451bc	kaznacheev@chromium.org <kaznacheev@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 30 13:56:35 2011 +0000	Eliminate use of assignments to innerHTML in File Browser Also removed obsolete files to minimize security audit efforts. TEST=	chromium-os:23502		http://codereview.chromium.org/8727028	svn://svn.chromium.org/chrome/trunk/src@112215 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/file_manager/playlist.html b/chrome/browser/resources/file_manager/playlist.html <newline>index 5c7ff31..56a6ffa 100644 <newline>--- a/chrome/browser/resources/file_manager/playlist.html <newline>+++ b/chrome/browser/resources/file_manager/playlist.html <newline>@@ -105,7 +105,7 @@ function setPlaylistOffset(offset) { <newline> function updateUI() { <newline>   var main = $('main'); <newline>   if (currentPlaylist) { <newline>-    main.innerHTML = ''; <newline>+    main.textContent = ''; <newline>     var main = $('main'); <newline>     for (var x = 0; x < currentPlaylist.length; x++) { <newline>       var rowdiv = document.createElement('div');
ea8e1086585bdc0f374c2de15bea534268b6e2d	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 25 11:19:28 2011 +0000	Adding `content_security_policy` to Speech Input API sample. As a drive-by, this CL also regenerates the `experimental.settings` docs, which someone apparently forgot to do after committing. :) TEST=	92644		http://codereview.chromium.org/8698003	svn://svn.chromium.org/chrome/trunk/src@111588 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index 649ba2e..de90eb7 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -2162,9 +2162,10 @@ <newline>       "search_string": "SPEECH RECOGNIZER RECOGNIZES YOUR SPEECH AND TELLS YOU THE MOST LIKELY RESULT. BACKGROUND_PAGE BROWSER_ACTION EXPERIMENTAL CHROME.BROWSERACTION.ONCLICKED CHROME.BROWSERACTION.SETICON CHROME.EXPERIMENTAL.SPEECHINPUT.ISRECORDING CHROME.EXPERIMENTAL.SPEECHINPUT.ONERROR CHROME.EXPERIMENTAL.SPEECHINPUT.ONRESULT CHROME.EXPERIMENTAL.SPEECHINPUT.START CHROME.EXPERIMENTAL.SPEECHINPUT.STOP", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "b092b58c922e769c003eb83e6ef4a63557ddc7f2", <newline>+      "source_hash": "a3e7e6d7c8fee17bd14a56b855d40bca0c10015d", <newline>       "zip_path": "examples\/api\/speechInput\/basic.zip" <newline>     }, <newline>     {
ba31633bccd99b21ede99797d77933c673fe136	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 25 11:19:28 2011 +0000	Adding `content_security_policy` to Speech Input API sample. As a drive-by, this CL also regenerates the `experimental.settings` docs, which someone apparently forgot to do after committing. :) TEST=	92644		http://codereview.chromium.org/8698003	svn://svn.chromium.org/chrome/trunk/src@111588 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index 649ba2e..de90eb7 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -2162,9 +2162,10 @@ <newline>       "search_string": "SPEECH RECOGNIZER RECOGNIZES YOUR SPEECH AND TELLS YOU THE MOST LIKELY RESULT. BACKGROUND_PAGE BROWSER_ACTION EXPERIMENTAL CHROME.BROWSERACTION.ONCLICKED CHROME.BROWSERACTION.SETICON CHROME.EXPERIMENTAL.SPEECHINPUT.ISRECORDING CHROME.EXPERIMENTAL.SPEECHINPUT.ONERROR CHROME.EXPERIMENTAL.SPEECHINPUT.ONRESULT CHROME.EXPERIMENTAL.SPEECHINPUT.START CHROME.EXPERIMENTAL.SPEECHINPUT.STOP", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "b092b58c922e769c003eb83e6ef4a63557ddc7f2", <newline>+      "source_hash": "a3e7e6d7c8fee17bd14a56b855d40bca0c10015d", <newline>       "zip_path": "examples\/api\/speechInput\/basic.zip" <newline>     }, <newline>     {
81223bd53a715c0cbce83352de2213d93933d31	jingzhao@chromium.org <jingzhao@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 23 10:12:02 2011 +0000	Allow POST method when converting file protocol to http protocol for layout tests. When running layout tests on Android, we host test files on a Linux/Mac machine, convert file requests to http requests, and forward http requests from Android to the same port on the host machine. The following tests use POST method and failed at  DCHECK(params->method == "GET" || params->method.empty()): fast/events/popup-allowed-from-gesture-initiated-form-submit.html fast/forms/document-write.html fast/forms/form-and-frame-interaction-retains-values.html fast/forms/form-data-encoding-normalization-overrun.html fast/forms/form-post-urlencoded.html fast/forms/formmethod-attribute-button-html.html fast/forms/formmethod-attribute-input-html.html fast/forms/submit-to-url-fragment.html fast/forms/xss-auditor-doesnt-crash-on-post-submit.html fast/history/form-submit-in-frame-via-onclick.html fast/history/form-submit-in-frame.html fast/loader/form-submission-after-beforeunload-cancel.html fast/loader/form-submit-aborts-parsing.html fast/loader/submit-form-while-parsing-1.xhtml The following test loads an image referred by the test page, and failed at DCHECK(params->referrer.is_empty()): http/tests/security/local-image-from-remote-whitelisted.html	http://b/5655809		http://codereview.chromium.org/8632006	svn://svn.chromium.org/chrome/trunk/src@111342 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index 4b15a5b..6ce3e9c 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -585,15 +585,13 @@ class RequestProxy : public net::URLRequest::Delegate, <newline>     if (!g_file_over_http_params || !params->url.SchemeIsFile()) <newline>       return; <newline>-    // For file protocol, method must be GET or NULL. <newline>-    DCHECK(params->method == "GET" || params->method.empty()); <newline>-    // File protocol doesn't support upload. <newline>-    DCHECK(!params->upload); <newline>-    DCHECK(params->referrer.is_empty()); <newline>+    // For file protocol, method must be GET, POST or NULL. <newline>+    DCHECK(params->method == "GET" || params->method == "POST" || <newline>+           params->method.empty()); <newline>     DCHECK(!params->download_to_file); <newline>-    // "GET" is the only method we allow. <newline>-    params->method = "GET"; <newline>+    if (params->method.empty()) <newline>+      params->method = "GET"; <newline>     std::string original_request = params->url.spec(); <newline>     std::string::size_type found = <newline>         original_request.find(g_file_over_http_params->file_path_template);
0a0171891a1528d6ae7f441affb8d04d3c93935	jingzhao@chromium.org <jingzhao@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 23 10:12:02 2011 +0000	Allow POST method when converting file protocol to http protocol for layout tests. When running layout tests on Android, we host test files on a Linux/Mac machine, convert file requests to http requests, and forward http requests from Android to the same port on the host machine. The following tests use POST method and failed at  DCHECK(params->method == "GET" || params->method.empty()): fast/events/popup-allowed-from-gesture-initiated-form-submit.html fast/forms/document-write.html fast/forms/form-and-frame-interaction-retains-values.html fast/forms/form-data-encoding-normalization-overrun.html fast/forms/form-post-urlencoded.html fast/forms/formmethod-attribute-button-html.html fast/forms/formmethod-attribute-input-html.html fast/forms/submit-to-url-fragment.html fast/forms/xss-auditor-doesnt-crash-on-post-submit.html fast/history/form-submit-in-frame-via-onclick.html fast/history/form-submit-in-frame.html fast/loader/form-submission-after-beforeunload-cancel.html fast/loader/form-submit-aborts-parsing.html fast/loader/submit-form-while-parsing-1.xhtml The following test loads an image referred by the test page, and failed at DCHECK(params->referrer.is_empty()): http/tests/security/local-image-from-remote-whitelisted.html	http://b/5655809		http://codereview.chromium.org/8632006	svn://svn.chromium.org/chrome/trunk/src@111342 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index 4b15a5b..6ce3e9c 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -585,15 +585,13 @@ class RequestProxy : public net::URLRequest::Delegate, <newline>     if (!g_file_over_http_params || !params->url.SchemeIsFile()) <newline>       return; <newline>-    // For file protocol, method must be GET or NULL. <newline>-    DCHECK(params->method == "GET" || params->method.empty()); <newline>-    // File protocol doesn't support upload. <newline>-    DCHECK(!params->upload); <newline>-    DCHECK(params->referrer.is_empty()); <newline>+    // For file protocol, method must be GET, POST or NULL. <newline>+    DCHECK(params->method == "GET" || params->method == "POST" || <newline>+           params->method.empty()); <newline>     DCHECK(!params->download_to_file); <newline>-    // "GET" is the only method we allow. <newline>-    params->method = "GET"; <newline>+    if (params->method.empty()) <newline>+      params->method = "GET"; <newline>     std::string original_request = params->url.spec(); <newline>     std::string::size_type found = <newline>         original_request.find(g_file_over_http_params->file_path_template);
b1ab8a3d950b86be8007dfbbf49c2d650933cd2	derat@chromium.org <derat@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Nov 17 16:37:18 2011 +0000	aura: Touch state file after first browser is ready. This creates a chromeos::InitialBrowserWindowObserver class for Aura that replicates some behavior for tests that's currently performed by the X window manager: when the first browser window is created, /var/run/state/windowmanager/initial-chrome-window-mapped is touched (the window manager actually writes the window's ID to the file, but that doesn't make sense under Aura and luckily doesn't appear to be depended on by any tests). This fixes Chrome OS's security_ProfilePermissions.BWSI and security_ProfilePermissions.login autotests, which otherwise time out when run against an Aura build. I'm also moving existing X-window-manager-related files that are currently in the chromeos/ directory to chromeos/legacy_window_manager/. TEST=manual: observed that tests no longer time out	chromium-os:22974,chromium-os:22896		http://codereview.chromium.org/8539051	svn://svn.chromium.org/chrome/trunk/src@110508 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_browser.gypi b/chrome/chrome_browser.gypi <newline>index 65423b5..2d2ec1d 100644 <newline>--- a/chrome/chrome_browser.gypi <newline>+++ b/chrome/chrome_browser.gypi <newline>@@ -510,6 +510,12 @@ <newline>         'browser/chromeos/input_method/xkeyboard.h', <newline>         'browser/chromeos/language_preferences.cc', <newline>         'browser/chromeos/language_preferences.h', <newline>+        'browser/chromeos/legacy_window_manager/initial_browser_window_observer.cc', <newline>+        'browser/chromeos/legacy_window_manager/initial_browser_window_observer.h', <newline>+        'browser/chromeos/legacy_window_manager/wm_ipc.cc', <newline>+        'browser/chromeos/legacy_window_manager/wm_ipc.h', <newline>+        'browser/chromeos/legacy_window_manager/wm_message_listener.cc', <newline>+        'browser/chromeos/legacy_window_manager/wm_message_listener.h', <newline>         'browser/chromeos/locale_change_guard.cc', <newline>         'browser/chromeos/locale_change_guard.h', <newline>         'browser/chromeos/login/auth_attempt_state.cc', <newline>@@ -797,10 +803,6 @@ <newline>         'browser/chromeos/web_socket_proxy.h', <newline>         'browser/chromeos/web_socket_proxy_controller.cc', <newline>         'browser/chromeos/web_socket_proxy_controller.h', <newline>-        'browser/chromeos/wm_ipc.cc', <newline>-        'browser/chromeos/wm_ipc.h', <newline>-        'browser/chromeos/wm_message_listener.cc', <newline>-        'browser/chromeos/wm_message_listener.h', <newline>         'browser/chromeos/xinput_hierarchy_changed_event_listener.cc', <newline>         'browser/chromeos/xinput_hierarchy_changed_event_listener.h', <newline>         'browser/command_updater.cc', <newline>@@ -5042,6 +5044,8 @@ <newline>                 ['exclude', '^browser/notifications/balloon_collection_impl.cc'], <newline>                 ['exclude', '^browser/notifications/balloon_collection_impl.h'], <newline>                 ['exclude', '^browser/notifications/balloon_collection_views.cc'], <newline>+                ['exclude', '^chromeos/legacy_window_manager/initial_browser_window_observer.cc'], <newline>+                ['exclude', '^chromeos/legacy_window_manager/initial_browser_window_observer.h'], <newline>               ], <newline>             }], <newline>             ['chromeos==1',{ <newline>@@ -5157,6 +5161,8 @@ <newline>           'sources/': [ <newline>             ['exclude', '^browser/chromeos/browser/chromeos/login/screen_locker.cc'], <newline>             ['exclude', '^browser/chromeos/frame/'], <newline>+            ['exclude', '^browser/chromeos/legacy_window_manager/wm_ipc.cc'], <newline>+            ['exclude', '^browser/chromeos/legacy_window_manager/wm_message_listener.cc'], <newline>             ['exclude', '^browser/chromeos/login/background_view.cc'], <newline>             ['exclude', '^browser/chromeos/login/screen_locker_browsertest.cc'], <newline>             ['exclude', '^browser/chromeos/login/screen_locker_views.cc'], <newline>@@ -5170,8 +5176,6 @@ <newline>             ['exclude', '^browser/chromeos/login/webui_screen_locker.cc'], <newline>             ['exclude', '^browser/chromeos/login/wizard_in_process_browser_test.cc'], <newline>             ['exclude', '^browser/chromeos/notifications/'], <newline>-            ['exclude', '^browser/chromeos/wm_ipc.cc'], <newline>-            ['exclude', '^browser/chromeos/wm_message_listener.cc'], <newline>             ['exclude', '^browser/chromeos/xinput_hierarchy_changed_event_listener.cc'], <newline>             ['include', '^browser/ui/views/handle_web_keyboard_event_aura.cc'], <newline>             ['include', '^browser/ui/views/handle_web_keyboard_event.h'],
9ad4bbdfc458e607e0cf068857d6fb4b44a8711	derat@chromium.org <derat@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Nov 17 16:37:18 2011 +0000	aura: Touch state file after first browser is ready. This creates a chromeos::InitialBrowserWindowObserver class for Aura that replicates some behavior for tests that's currently performed by the X window manager: when the first browser window is created, /var/run/state/windowmanager/initial-chrome-window-mapped is touched (the window manager actually writes the window's ID to the file, but that doesn't make sense under Aura and luckily doesn't appear to be depended on by any tests). This fixes Chrome OS's security_ProfilePermissions.BWSI and security_ProfilePermissions.login autotests, which otherwise time out when run against an Aura build. I'm also moving existing X-window-manager-related files that are currently in the chromeos/ directory to chromeos/legacy_window_manager/. TEST=manual: observed that tests no longer time out	chromium-os:22974,chromium-os:22896		http://codereview.chromium.org/8539051	svn://svn.chromium.org/chrome/trunk/src@110508 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_browser.gypi b/chrome/chrome_browser.gypi <newline>index 65423b5..2d2ec1d 100644 <newline>--- a/chrome/chrome_browser.gypi <newline>+++ b/chrome/chrome_browser.gypi <newline>@@ -510,6 +510,12 @@ <newline>         'browser/chromeos/input_method/xkeyboard.h', <newline>         'browser/chromeos/language_preferences.cc', <newline>         'browser/chromeos/language_preferences.h', <newline>+        'browser/chromeos/legacy_window_manager/initial_browser_window_observer.cc', <newline>+        'browser/chromeos/legacy_window_manager/initial_browser_window_observer.h', <newline>+        'browser/chromeos/legacy_window_manager/wm_ipc.cc', <newline>+        'browser/chromeos/legacy_window_manager/wm_ipc.h', <newline>+        'browser/chromeos/legacy_window_manager/wm_message_listener.cc', <newline>+        'browser/chromeos/legacy_window_manager/wm_message_listener.h', <newline>         'browser/chromeos/locale_change_guard.cc', <newline>         'browser/chromeos/locale_change_guard.h', <newline>         'browser/chromeos/login/auth_attempt_state.cc', <newline>@@ -797,10 +803,6 @@ <newline>         'browser/chromeos/web_socket_proxy.h', <newline>         'browser/chromeos/web_socket_proxy_controller.cc', <newline>         'browser/chromeos/web_socket_proxy_controller.h', <newline>-        'browser/chromeos/wm_ipc.cc', <newline>-        'browser/chromeos/wm_ipc.h', <newline>-        'browser/chromeos/wm_message_listener.cc', <newline>-        'browser/chromeos/wm_message_listener.h', <newline>         'browser/chromeos/xinput_hierarchy_changed_event_listener.cc', <newline>         'browser/chromeos/xinput_hierarchy_changed_event_listener.h', <newline>         'browser/command_updater.cc', <newline>@@ -5042,6 +5044,8 @@ <newline>                 ['exclude', '^browser/notifications/balloon_collection_impl.cc'], <newline>                 ['exclude', '^browser/notifications/balloon_collection_impl.h'], <newline>                 ['exclude', '^browser/notifications/balloon_collection_views.cc'], <newline>+                ['exclude', '^chromeos/legacy_window_manager/initial_browser_window_observer.cc'], <newline>+                ['exclude', '^chromeos/legacy_window_manager/initial_browser_window_observer.h'], <newline>               ], <newline>             }], <newline>             ['chromeos==1',{ <newline>@@ -5157,6 +5161,8 @@ <newline>           'sources/': [ <newline>             ['exclude', '^browser/chromeos/browser/chromeos/login/screen_locker.cc'], <newline>             ['exclude', '^browser/chromeos/frame/'], <newline>+            ['exclude', '^browser/chromeos/legacy_window_manager/wm_ipc.cc'], <newline>+            ['exclude', '^browser/chromeos/legacy_window_manager/wm_message_listener.cc'], <newline>             ['exclude', '^browser/chromeos/login/background_view.cc'], <newline>             ['exclude', '^browser/chromeos/login/screen_locker_browsertest.cc'], <newline>             ['exclude', '^browser/chromeos/login/screen_locker_views.cc'], <newline>@@ -5170,8 +5176,6 @@ <newline>             ['exclude', '^browser/chromeos/login/webui_screen_locker.cc'], <newline>             ['exclude', '^browser/chromeos/login/wizard_in_process_browser_test.cc'], <newline>             ['exclude', '^browser/chromeos/notifications/'], <newline>-            ['exclude', '^browser/chromeos/wm_ipc.cc'], <newline>-            ['exclude', '^browser/chromeos/wm_message_listener.cc'], <newline>             ['exclude', '^browser/chromeos/xinput_hierarchy_changed_event_listener.cc'], <newline>             ['include', '^browser/ui/views/handle_web_keyboard_event_aura.cc'], <newline>             ['include', '^browser/ui/views/handle_web_keyboard_event.h'],
9baad3695c1234dc8a88fb16404d8500ae96b9f	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Nov 7 23:52:20 2011 +0000	Turn on content-security-policy for chrome://syncpromo webui page. This recent page was nearly in the correct form as-is, but needed a small number of changes about how it includes script resources before it could be removed from the list of excluded entryponts.			http://codereview.chromium.org/8412009	svn://svn.chromium.org/chrome/trunk/src@108944 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc b/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>index 51ddb00..594c415 100644 <newline>--- a/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>+++ b/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>@@ -71,8 +71,6 @@ class ChromeURLContentSecurityPolicyExceptionSet <newline>     insert(chrome::kChromeUIRegisterPageHost); <newline>     insert(chrome::kChromeUISimUnlockHost); <newline>     insert(chrome::kChromeUISystemInfoHost); <newline>-#else <newline>-    insert(chrome::kChromeUISyncPromoHost); <newline> #endif <newline> #if defined(TOUCH_UI) <newline>     insert(chrome::kChromeUIKeyboardHost);
4c352a3896ac89c906a71d2a6fc6c0b08dd3eb8	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Nov 7 23:52:20 2011 +0000	Turn on content-security-policy for chrome://syncpromo webui page. This recent page was nearly in the correct form as-is, but needed a small number of changes about how it includes script resources before it could be removed from the list of excluded entryponts.			http://codereview.chromium.org/8412009	svn://svn.chromium.org/chrome/trunk/src@108944 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc b/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>index 51ddb00..594c415 100644 <newline>--- a/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>+++ b/chrome/browser/ui/webui/chrome_url_data_manager_backend.cc <newline>@@ -71,8 +71,6 @@ class ChromeURLContentSecurityPolicyExceptionSet <newline>     insert(chrome::kChromeUIRegisterPageHost); <newline>     insert(chrome::kChromeUISimUnlockHost); <newline>     insert(chrome::kChromeUISystemInfoHost); <newline>-#else <newline>-    insert(chrome::kChromeUISyncPromoHost); <newline> #endif <newline> #if defined(TOUCH_UI) <newline>     insert(chrome::kChromeUIKeyboardHost);
650ba8555971006172c2d350dbe3b2d15ae8bed	dcheng@chromium.org <dcheng@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 4 22:10:02 2011 +0000	Switch notifications to use the security origin. TEST=browser_tests --gtest_filter=ExtensionApiTest.Notification*	94399		http://codereview.chromium.org/8480009	svn://svn.chromium.org/chrome/trunk/src@108726 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/renderer/notification_provider.h b/content/renderer/notification_provider.h <newline>index 2d7188e..6664388 100644 <newline>--- a/content/renderer/notification_provider.h <newline>+++ b/content/renderer/notification_provider.h <newline>@@ -34,6 +34,9 @@ class NotificationProvider : public content::RenderViewObserver, <newline>   virtual void cancel(const WebKit::WebNotification& proxy); <newline>   virtual void objectDestroyed(const WebKit::WebNotification& proxy); <newline>   virtual WebKit::WebNotificationPresenter::Permission checkPermission( <newline>+      const WebKit::WebSecurityOrigin& origin); <newline>+  // Deprecated, and will be removed after the WebKit roll. <newline>+  virtual WebKit::WebNotificationPresenter::Permission checkPermission( <newline>       const WebKit::WebURL& origin); <newline>   virtual void requestPermission(const WebKit::WebSecurityOrigin& origin, <newline>       WebKit::WebNotificationPermissionCallback* callback);
c6095e0836185ca5fdb3ecf5686ac9b44bff190	dcheng@chromium.org <dcheng@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 4 22:10:02 2011 +0000	Switch notifications to use the security origin. TEST=browser_tests --gtest_filter=ExtensionApiTest.Notification*	94399		http://codereview.chromium.org/8480009	svn://svn.chromium.org/chrome/trunk/src@108726 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/renderer/notification_provider.h b/content/renderer/notification_provider.h <newline>index 2d7188e..6664388 100644 <newline>--- a/content/renderer/notification_provider.h <newline>+++ b/content/renderer/notification_provider.h <newline>@@ -34,6 +34,9 @@ class NotificationProvider : public content::RenderViewObserver, <newline>   virtual void cancel(const WebKit::WebNotification& proxy); <newline>   virtual void objectDestroyed(const WebKit::WebNotification& proxy); <newline>   virtual WebKit::WebNotificationPresenter::Permission checkPermission( <newline>+      const WebKit::WebSecurityOrigin& origin); <newline>+  // Deprecated, and will be removed after the WebKit roll. <newline>+  virtual WebKit::WebNotificationPresenter::Permission checkPermission( <newline>       const WebKit::WebURL& origin); <newline>   virtual void requestPermission(const WebKit::WebSecurityOrigin& origin, <newline>       WebKit::WebNotificationPermissionCallback* callback);
e3787e30e0e011c801a5bd307c895da96943522	jochen@chromium.org <jochen@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 4 13:28:02 2011 +0000	Apply exemptions to content settings based on the primary url the primary url is the cookie's security origin or, for all other content types, the main frame url TEST=HostContentSettingsMapTest.ShouldAllowAllContent	none		http://codereview.chromium.org/8457009	svn://svn.chromium.org/chrome/trunk/src@108644 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/content_settings/host_content_settings_map_unittest.cc b/chrome/browser/content_settings/host_content_settings_map_unittest.cc <newline>index aff5b58..0965bc3 100644 <newline>--- a/chrome/browser/content_settings/host_content_settings_map_unittest.cc <newline>+++ b/chrome/browser/content_settings/host_content_settings_map_unittest.cc <newline>@@ -1065,3 +1065,26 @@ TEST_F(HostContentSettingsMapTest, SettingDefaultContentSettingsWhenManaged) { <newline>             host_content_settings_map->GetDefaultContentSetting( <newline>                 CONTENT_SETTINGS_TYPE_PLUGINS, NULL)); <newline> } <newline>+ <newline>+TEST_F(HostContentSettingsMapTest, ShouldAllowAllContent) { <newline>+  TestingProfile profile; <newline>+  HostContentSettingsMap* host_content_settings_map = <newline>+      profile.GetHostContentSettingsMap(); <newline>+ <newline>+  GURL host("http://example.com/"); <newline>+  GURL embedder("chrome://foo"); <newline>+  ContentSettingsPattern pattern = <newline>+       ContentSettingsPattern::FromString("[*.]example.com"); <newline>+  host_content_settings_map->SetContentSetting( <newline>+      pattern, <newline>+      ContentSettingsPattern::Wildcard(), <newline>+      CONTENT_SETTINGS_TYPE_IMAGES, <newline>+      std::string(), <newline>+      CONTENT_SETTING_BLOCK); <newline>+  EXPECT_EQ(CONTENT_SETTING_BLOCK, <newline>+            host_content_settings_map->GetContentSetting( <newline>+                host, host, CONTENT_SETTINGS_TYPE_IMAGES, "")); <newline>+  EXPECT_EQ(CONTENT_SETTING_ALLOW, <newline>+            host_content_settings_map->GetContentSetting( <newline>+                embedder, host, CONTENT_SETTINGS_TYPE_IMAGES, "")); <newline>+}
a2d643cca5d23ea866042c3af04f55f44195d09	jochen@chromium.org <jochen@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 4 13:28:02 2011 +0000	Apply exemptions to content settings based on the primary url the primary url is the cookie's security origin or, for all other content types, the main frame url TEST=HostContentSettingsMapTest.ShouldAllowAllContent	none		http://codereview.chromium.org/8457009	svn://svn.chromium.org/chrome/trunk/src@108644 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/content_settings/host_content_settings_map_unittest.cc b/chrome/browser/content_settings/host_content_settings_map_unittest.cc <newline>index aff5b58..0965bc3 100644 <newline>--- a/chrome/browser/content_settings/host_content_settings_map_unittest.cc <newline>+++ b/chrome/browser/content_settings/host_content_settings_map_unittest.cc <newline>@@ -1065,3 +1065,26 @@ TEST_F(HostContentSettingsMapTest, SettingDefaultContentSettingsWhenManaged) { <newline>             host_content_settings_map->GetDefaultContentSetting( <newline>                 CONTENT_SETTINGS_TYPE_PLUGINS, NULL)); <newline> } <newline>+ <newline>+TEST_F(HostContentSettingsMapTest, ShouldAllowAllContent) { <newline>+  TestingProfile profile; <newline>+  HostContentSettingsMap* host_content_settings_map = <newline>+      profile.GetHostContentSettingsMap(); <newline>+ <newline>+  GURL host("http://example.com/"); <newline>+  GURL embedder("chrome://foo"); <newline>+  ContentSettingsPattern pattern = <newline>+       ContentSettingsPattern::FromString("[*.]example.com"); <newline>+  host_content_settings_map->SetContentSetting( <newline>+      pattern, <newline>+      ContentSettingsPattern::Wildcard(), <newline>+      CONTENT_SETTINGS_TYPE_IMAGES, <newline>+      std::string(), <newline>+      CONTENT_SETTING_BLOCK); <newline>+  EXPECT_EQ(CONTENT_SETTING_BLOCK, <newline>+            host_content_settings_map->GetContentSetting( <newline>+                host, host, CONTENT_SETTINGS_TYPE_IMAGES, "")); <newline>+  EXPECT_EQ(CONTENT_SETTING_ALLOW, <newline>+            host_content_settings_map->GetContentSetting( <newline>+                embedder, host, CONTENT_SETTINGS_TYPE_IMAGES, "")); <newline>+}
ed80207a4306a4ba17dcba7474b3103130bb0c2	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Nov 3 17:04:09 2011 +0000	net: expand upon the comment for IsChainOfPublicKeysPermitted This is a follow up to http://codereview.chromium.org/8372032/diff/6001/net/base/transport_security_state.cc#newcode1399 Comment only change. No code touched. TEST=none	none		http://codereview.chromium.org/8423054	svn://svn.chromium.org/chrome/trunk/src@108481 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state.h b/net/base/transport_security_state.h <newline>index 3791d7c..07e7aa0 100644 <newline>--- a/net/base/transport_security_state.h <newline>+++ b/net/base/transport_security_state.h <newline>@@ -61,11 +61,17 @@ class NET_EXPORT TransportSecurityState <newline>     //      OR <newline>     //   3) |hashes| and |public_key_hashes| are not disjoint. <newline>     // <newline>-    // |public_key_hashes| is intended to contain a number of trust roots for <newline>-    // the chain in question, any one of which is sufficient. <newline>+    // |public_key_hashes| is intended to contain a number of trusted public <newline>+    // keys for the chain in question, any one of which is sufficient. The <newline>+    // public keys could be of a root CA, intermediate CA or leaf certificate, <newline>+    // depending on the security vs disaster recovery tradeoff selected. <newline>+    // (Pinning only to leaf certifiates increases security because you no <newline>+    // longer trust any CAs, but it hampers disaster recovery because you can't <newline>+    // just get a new certificate signed by the CA.) <newline>+    // <newline>     // |bad_public_key_hashes| is intended to contain unwanted intermediate CA <newline>-    // certifciates that those trust roots may have issued but that we don't <newline>-    // want to trust. <newline>+    // certifciates that those trusted public keys may have issued but that we <newline>+    // don't want to trust. <newline>     bool IsChainOfPublicKeysPermitted( <newline>         const std::vector<SHA1Fingerprint>& hashes);
1461f6536ef0c1f959fab91810e3f5f338c0be7	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Nov 3 17:04:09 2011 +0000	net: expand upon the comment for IsChainOfPublicKeysPermitted This is a follow up to http://codereview.chromium.org/8372032/diff/6001/net/base/transport_security_state.cc#newcode1399 Comment only change. No code touched. TEST=none	none		http://codereview.chromium.org/8423054	svn://svn.chromium.org/chrome/trunk/src@108481 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state.h b/net/base/transport_security_state.h <newline>index 3791d7c..07e7aa0 100644 <newline>--- a/net/base/transport_security_state.h <newline>+++ b/net/base/transport_security_state.h <newline>@@ -61,11 +61,17 @@ class NET_EXPORT TransportSecurityState <newline>     //      OR <newline>     //   3) |hashes| and |public_key_hashes| are not disjoint. <newline>     // <newline>-    // |public_key_hashes| is intended to contain a number of trust roots for <newline>-    // the chain in question, any one of which is sufficient. <newline>+    // |public_key_hashes| is intended to contain a number of trusted public <newline>+    // keys for the chain in question, any one of which is sufficient. The <newline>+    // public keys could be of a root CA, intermediate CA or leaf certificate, <newline>+    // depending on the security vs disaster recovery tradeoff selected. <newline>+    // (Pinning only to leaf certifiates increases security because you no <newline>+    // longer trust any CAs, but it hampers disaster recovery because you can't <newline>+    // just get a new certificate signed by the CA.) <newline>+    // <newline>     // |bad_public_key_hashes| is intended to contain unwanted intermediate CA <newline>-    // certifciates that those trust roots may have issued but that we don't <newline>-    // want to trust. <newline>+    // certifciates that those trusted public keys may have issued but that we <newline>+    // don't want to trust. <newline>     bool IsChainOfPublicKeysPermitted( <newline>         const std::vector<SHA1Fingerprint>& hashes);
72d09f408bd0200c6f9972e8f8a558fae878e44	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 2 20:09:43 2011 +0000	Hosts opting in to strict-transport-security get mixed content blocking.	100136		http://codereview.chromium.org/8341031	svn://svn.chromium.org/chrome/trunk/src@108337 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/chrome_render_view_observer.h b/chrome/renderer/chrome_render_view_observer.h <newline>index a8d08f9..f0d8e82 100644 <newline>--- a/chrome/renderer/chrome_render_view_observer.h <newline>+++ b/chrome/renderer/chrome_render_view_observer.h <newline>@@ -6,6 +6,7 @@ <newline> #define CHROME_RENDERER_CHROME_RENDER_VIEW_OBSERVER_H_ <newline> #pragma once <newline>+#include <set> <newline> #include <string> <newline> #include <vector> <newline>@@ -127,6 +128,7 @@ class ChromeRenderViewObserver : public content::RenderViewObserver, <newline>   void OnSetClientSidePhishingDetection(bool enable_phishing_detection); <newline>   void OnStartFrameSniffer(const string16& frame_name); <newline>   void OnGetFPS(); <newline>+  void OnAddStrictSecurityHost(const std::string& host); <newline>   // Captures the thumbnail and text contents for indexing for the given load <newline>   // ID. If the view's load ID is different than the parameter, this call is <newline>@@ -174,6 +176,9 @@ class ChromeRenderViewObserver : public content::RenderViewObserver, <newline>   // Decodes a data: URL image or returns an empty image in case of failure. <newline>   SkBitmap ImageFromDataUrl(const GURL&) const; <newline>+  // Determines if a host is in the strict security host set. <newline>+  bool IsStrictSecurityHost(const std::string& host); <newline>+ <newline>   // Save the JavaScript to preload if a ViewMsg_WebUIJavaScript is received. <newline>   scoped_ptr<WebUIJavaScript> webui_javascript_; <newline>@@ -197,6 +202,7 @@ class ChromeRenderViewObserver : public content::RenderViewObserver, <newline>   // Insecure content may be permitted for the duration of this render view. <newline>   bool allow_displaying_insecure_content_; <newline>   bool allow_running_insecure_content_; <newline>+  std::set<std::string> strict_security_hosts_; <newline>   // Allows JS to access DOM automation. The JS object is only exposed when the <newline>   // DOM automation bindings are enabled.
2d213847a203e5135aa1d746e97ff11925f77cc	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 2 20:09:43 2011 +0000	Hosts opting in to strict-transport-security get mixed content blocking.	100136		http://codereview.chromium.org/8341031	svn://svn.chromium.org/chrome/trunk/src@108337 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/chrome_render_view_observer.h b/chrome/renderer/chrome_render_view_observer.h <newline>index a8d08f9..f0d8e82 100644 <newline>--- a/chrome/renderer/chrome_render_view_observer.h <newline>+++ b/chrome/renderer/chrome_render_view_observer.h <newline>@@ -6,6 +6,7 @@ <newline> #define CHROME_RENDERER_CHROME_RENDER_VIEW_OBSERVER_H_ <newline> #pragma once <newline>+#include <set> <newline> #include <string> <newline> #include <vector> <newline>@@ -127,6 +128,7 @@ class ChromeRenderViewObserver : public content::RenderViewObserver, <newline>   void OnSetClientSidePhishingDetection(bool enable_phishing_detection); <newline>   void OnStartFrameSniffer(const string16& frame_name); <newline>   void OnGetFPS(); <newline>+  void OnAddStrictSecurityHost(const std::string& host); <newline>   // Captures the thumbnail and text contents for indexing for the given load <newline>   // ID. If the view's load ID is different than the parameter, this call is <newline>@@ -174,6 +176,9 @@ class ChromeRenderViewObserver : public content::RenderViewObserver, <newline>   // Decodes a data: URL image or returns an empty image in case of failure. <newline>   SkBitmap ImageFromDataUrl(const GURL&) const; <newline>+  // Determines if a host is in the strict security host set. <newline>+  bool IsStrictSecurityHost(const std::string& host); <newline>+ <newline>   // Save the JavaScript to preload if a ViewMsg_WebUIJavaScript is received. <newline>   scoped_ptr<WebUIJavaScript> webui_javascript_; <newline>@@ -197,6 +202,7 @@ class ChromeRenderViewObserver : public content::RenderViewObserver, <newline>   // Insecure content may be permitted for the duration of this render view. <newline>   bool allow_displaying_insecure_content_; <newline>   bool allow_running_insecure_content_; <newline>+  std::set<std::string> strict_security_hosts_; <newline>   // Allows JS to access DOM automation. The JS object is only exposed when the <newline>   // DOM automation bindings are enabled.
c4a17c880f61b745c6697b899d0dcd8453ce0dd	brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 26 21:48:00 2011 +0000	Replace most LOG/CHECK statements with DLOG/DCHECK statements in base. [ Reland of 107042 http://codereview.chromium.org/8368009 ] I tried hard not to change CHECKs that had side effects. I kept fatal checks that seemed security or debugging-info (in crash reports) sensitive, and ones that seems particularly well-conceived.			http://codereview.chromium.org/8341026	svn://svn.chromium.org/chrome/trunk/src@107434 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/win/i18n.cc b/base/win/i18n.cc <newline>index 59480f2..9e523a1 100644 <newline>--- a/base/win/i18n.cc <newline>+++ b/base/win/i18n.cc <newline>@@ -75,7 +75,7 @@ bool GetMUIPreferredUILanguageList(LanguageFunction function, ULONG flags, <newline>             << "Failed getting size of preferred UI languages."; <newline>       } <newline>     } else { <newline>-      VLOG(2) << "MUI not available."; <newline>+      DVLOG(2) << "MUI not available."; <newline>     } <newline>   } else { <newline>     NOTREACHED() << "kernel32.dll not found.";
42d4638f0335dbfd14c1c9f6b05a7b09703a78e	brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 26 21:48:00 2011 +0000	Replace most LOG/CHECK statements with DLOG/DCHECK statements in base. [ Reland of 107042 http://codereview.chromium.org/8368009 ] I tried hard not to change CHECKs that had side effects. I kept fatal checks that seemed security or debugging-info (in crash reports) sensitive, and ones that seems particularly well-conceived.			http://codereview.chromium.org/8341026	svn://svn.chromium.org/chrome/trunk/src@107434 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/win/i18n.cc b/base/win/i18n.cc <newline>index 59480f2..9e523a1 100644 <newline>--- a/base/win/i18n.cc <newline>+++ b/base/win/i18n.cc <newline>@@ -75,7 +75,7 @@ bool GetMUIPreferredUILanguageList(LanguageFunction function, ULONG flags, <newline>             << "Failed getting size of preferred UI languages."; <newline>       } <newline>     } else { <newline>-      VLOG(2) << "MUI not available."; <newline>+      DVLOG(2) << "MUI not available."; <newline>     } <newline>   } else { <newline>     NOTREACHED() << "kernel32.dll not found.";
45aa397519926afdfc2ea19effb7c7cd396a3fa	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 25 10:32:32 2011 +0000	Adding `content_security_policy` to 5 sample extensions Touched: * tabs/screenshot * webNavigation/basic * windows/merge_windows * browserAction/make_page_red * extensions/ttsdebug TEST=	92644		http://codereview.chromium.org/8318001	svn://svn.chromium.org/chrome/trunk/src@107094 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index f77b23b..709bfeb 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -285,9 +285,10 @@ <newline>       "search_string": "A BROWSER ACTION WITH NO ICON THAT MAKES THE PAGE RED  BACKGROUND_PAGE BROWSER_ACTION TABS CHROME.BROWSERACTION.ONCLICKED CHROME.BROWSERACTION.SETBADGEBACKGROUNDCOLOR CHROME.BROWSERACTION.SETBADGETEXT CHROME.TABS.EXECUTESCRIPT", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "174cf55b15678010dff3a18983b940ef9091b115", <newline>+      "source_hash": "e01ddafb8290fe885fd5df25699909bcf0036c51", <newline>       "zip_path": "examples\/api\/browserAction\/make_page_red.zip" <newline>     }, <newline>     { <newline>@@ -377,7 +378,7 @@ <newline>         "popup.html", <newline>         "popup.js" <newline>       ], <newline>-      "source_hash": "62a69b77d59cda0b038c2e5acdbcae289b3f5176", <newline>+      "source_hash": "a557cefb7b3f3036cb65ff77b03538b6c6cdedf6", <newline>       "zip_path": "examples\/extensions\/app_launcher.zip" <newline>     }, <newline>     { <newline>@@ -891,7 +892,7 @@ <newline>         "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "4c779b160a04cb4264eee14d7969f665953699a7", <newline>+      "source_hash": "c294cbd813e4a59b3ee8270892f10c68aa3f53b3", <newline>       "zip_path": "examples\/api\/omnibox\/extension-docs.zip" <newline>     }, <newline>     { <newline>@@ -927,7 +928,7 @@ <newline>         "devtools.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "259e28743c1aa6d8778f92fa1af001299f7ad774", <newline>+      "source_hash": "b967625a22f6c961a8d3296824fc589ca1314d3a", <newline>       "zip_path": "examples\/api\/devtools\/network\/chrome-firephp.zip" <newline>     }, <newline>     { <newline>@@ -1477,9 +1478,10 @@ <newline>       "search_string": "MERGE WINDOWS MERGES ALL OF THE BROWSERS WINDOWS INTO THE CURRENT WINDOW BACKGROUND_PAGE BROWSER_ACTION TABS CHROME.BROWSERACTION.ONCLICKED CHROME.TABS.GET CHROME.TABS.GETALLINWINDOW CHROME.TABS.MOVE CHROME.WINDOWS.GET CHROME.WINDOWS.GETALL CHROME.WINDOWS.GETCURRENT", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "4b5fe52788e0bef2f3871b36105eb53cc760c454", <newline>+      "source_hash": "0dec37bcc5aa0af5c4e04c305ff90869a9502fa1", <newline>       "zip_path": "examples\/api\/windows\/merge_windows.zip" <newline>     }, <newline>     { <newline>@@ -2004,13 +2006,17 @@ <newline>       "name": "Show Tabs in Process", <newline>       "packaged_app": false, <newline>       "path": "examples\/api\/processes\/show_tabs\/", <newline>-      "protocols": [], <newline>+      "protocols": [ <newline>+        "chrome:\/\/" <newline>+      ], <newline>       "search_string": "SHOW TABS IN PROCESS ADDS A BROWSER ACTION SHOWING WHICH TABS SHARE THE CURRENT TABS PROCESS. BROWSER_ACTION EXPERIMENTAL POPUP TABS CHROME.TABS.GET CHROME.TABS.GETSELECTED CHROME.TABS.UPDATE CHROME.WINDOWS.GET CHROME.WINDOWS.GETALL CHROME.WINDOWS.GETCURRENT CHROME.WINDOWS.UPDATE", <newline>       "source_files": [ <newline>         "manifest.json", <newline>-        "popup.html" <newline>+        "popup.css", <newline>+        "popup.html", <newline>+        "popup.js" <newline>       ], <newline>-      "source_hash": "c9818c3c4c2e4fae0a7cc29588514e050356fd52", <newline>+      "source_hash": "c71a35cc8266d8cbe800e48cf3366c27dbffb3fa", <newline>       "zip_path": "examples\/api\/processes\/show_tabs.zip" <newline>     }, <newline>     { <newline>@@ -2174,11 +2180,12 @@ <newline>       "search_string": "TEST SCREENSHOT EXTENSION DEMONSTRATE SCREENSHOT FUNCTIONALITY IN THE CHROME.TABS API. NOTE: ONLY WORKS FOR CODE.GOOGLE.COM BACKGROUND_PAGE BROWSER_ACTION TABS CHROME.BROWSERACTION.ONCLICKED CHROME.EXTENSION.GETURL CHROME.EXTENSION.GETVIEWS CHROME.TABS.CAPTUREVISIBLETAB CHROME.TABS.CREATE CHROME.TABS.ONUPDATED", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json", <newline>         "screenshot.html", <newline>         "screenshot.js" <newline>       ], <newline>-      "source_hash": "559684528065aa7782e802bfba6ebf3ec238d7cc", <newline>+      "source_hash": "59a96f4201e09897b65f219cd664119f94f3fdb5", <newline>       "zip_path": "examples\/api\/tabs\/screenshot.zip" <newline>     }, <newline>     { <newline>@@ -2234,10 +2241,11 @@ <newline>       "search_string": "TTS DEBUG TOOL FOR DEVELOPERS OF CHROME TTS ENGINE EXTENSIONS TO HELP THEM TEST THEIR ENGINES ARE IMPLEMENTING THE API CORRECTLY. TTS CHROME.TTS.GETVOICES CHROME.TTS.SPEAK CHROME.TTS.STOP", <newline>       "source_files": [ <newline>         "manifest.json", <newline>+        "ttsdebug.css", <newline>         "ttsdebug.html", <newline>         "ttsdebug.js" <newline>       ], <newline>-      "source_hash": "e81705ac4dd9a820b403e2b77d07e72b5de0198e", <newline>+      "source_hash": "0806af7ee646f2bae8dacd4f9fae16336e3e6807", <newline>       "zip_path": "examples\/extensions\/ttsdebug.zip" <newline>     }, <newline>     { <newline>@@ -2326,11 +2334,14 @@ <newline>       "source_files": [ <newline>         "_locales\/en\/messages.json", <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json", <newline>         "navigation_collector.js", <newline>-        "popup.html" <newline>+        "popup.css", <newline>+        "popup.html", <newline>+        "popup.js" <newline>       ], <newline>-      "source_hash": "b6cda534937998343a093fdb74313a85edbc771e", <newline>+      "source_hash": "449424bf09813438d65a988ef3249d59c01462e2", <newline>       "zip_path": "examples\/api\/webNavigation\/basic.zip" <newline>     }, <newline>     {
09556162f48063210ec8d5525641ef6a4a8c6c2	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 25 10:32:32 2011 +0000	Adding `content_security_policy` to 5 sample extensions Touched: * tabs/screenshot * webNavigation/basic * windows/merge_windows * browserAction/make_page_red * extensions/ttsdebug TEST=	92644		http://codereview.chromium.org/8318001	svn://svn.chromium.org/chrome/trunk/src@107094 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index f77b23b..709bfeb 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -285,9 +285,10 @@ <newline>       "search_string": "A BROWSER ACTION WITH NO ICON THAT MAKES THE PAGE RED  BACKGROUND_PAGE BROWSER_ACTION TABS CHROME.BROWSERACTION.ONCLICKED CHROME.BROWSERACTION.SETBADGEBACKGROUNDCOLOR CHROME.BROWSERACTION.SETBADGETEXT CHROME.TABS.EXECUTESCRIPT", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "174cf55b15678010dff3a18983b940ef9091b115", <newline>+      "source_hash": "e01ddafb8290fe885fd5df25699909bcf0036c51", <newline>       "zip_path": "examples\/api\/browserAction\/make_page_red.zip" <newline>     }, <newline>     { <newline>@@ -377,7 +378,7 @@ <newline>         "popup.html", <newline>         "popup.js" <newline>       ], <newline>-      "source_hash": "62a69b77d59cda0b038c2e5acdbcae289b3f5176", <newline>+      "source_hash": "a557cefb7b3f3036cb65ff77b03538b6c6cdedf6", <newline>       "zip_path": "examples\/extensions\/app_launcher.zip" <newline>     }, <newline>     { <newline>@@ -891,7 +892,7 @@ <newline>         "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "4c779b160a04cb4264eee14d7969f665953699a7", <newline>+      "source_hash": "c294cbd813e4a59b3ee8270892f10c68aa3f53b3", <newline>       "zip_path": "examples\/api\/omnibox\/extension-docs.zip" <newline>     }, <newline>     { <newline>@@ -927,7 +928,7 @@ <newline>         "devtools.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "259e28743c1aa6d8778f92fa1af001299f7ad774", <newline>+      "source_hash": "b967625a22f6c961a8d3296824fc589ca1314d3a", <newline>       "zip_path": "examples\/api\/devtools\/network\/chrome-firephp.zip" <newline>     }, <newline>     { <newline>@@ -1477,9 +1478,10 @@ <newline>       "search_string": "MERGE WINDOWS MERGES ALL OF THE BROWSERS WINDOWS INTO THE CURRENT WINDOW BACKGROUND_PAGE BROWSER_ACTION TABS CHROME.BROWSERACTION.ONCLICKED CHROME.TABS.GET CHROME.TABS.GETALLINWINDOW CHROME.TABS.MOVE CHROME.WINDOWS.GET CHROME.WINDOWS.GETALL CHROME.WINDOWS.GETCURRENT", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "4b5fe52788e0bef2f3871b36105eb53cc760c454", <newline>+      "source_hash": "0dec37bcc5aa0af5c4e04c305ff90869a9502fa1", <newline>       "zip_path": "examples\/api\/windows\/merge_windows.zip" <newline>     }, <newline>     { <newline>@@ -2004,13 +2006,17 @@ <newline>       "name": "Show Tabs in Process", <newline>       "packaged_app": false, <newline>       "path": "examples\/api\/processes\/show_tabs\/", <newline>-      "protocols": [], <newline>+      "protocols": [ <newline>+        "chrome:\/\/" <newline>+      ], <newline>       "search_string": "SHOW TABS IN PROCESS ADDS A BROWSER ACTION SHOWING WHICH TABS SHARE THE CURRENT TABS PROCESS. BROWSER_ACTION EXPERIMENTAL POPUP TABS CHROME.TABS.GET CHROME.TABS.GETSELECTED CHROME.TABS.UPDATE CHROME.WINDOWS.GET CHROME.WINDOWS.GETALL CHROME.WINDOWS.GETCURRENT CHROME.WINDOWS.UPDATE", <newline>       "source_files": [ <newline>         "manifest.json", <newline>-        "popup.html" <newline>+        "popup.css", <newline>+        "popup.html", <newline>+        "popup.js" <newline>       ], <newline>-      "source_hash": "c9818c3c4c2e4fae0a7cc29588514e050356fd52", <newline>+      "source_hash": "c71a35cc8266d8cbe800e48cf3366c27dbffb3fa", <newline>       "zip_path": "examples\/api\/processes\/show_tabs.zip" <newline>     }, <newline>     { <newline>@@ -2174,11 +2180,12 @@ <newline>       "search_string": "TEST SCREENSHOT EXTENSION DEMONSTRATE SCREENSHOT FUNCTIONALITY IN THE CHROME.TABS API. NOTE: ONLY WORKS FOR CODE.GOOGLE.COM BACKGROUND_PAGE BROWSER_ACTION TABS CHROME.BROWSERACTION.ONCLICKED CHROME.EXTENSION.GETURL CHROME.EXTENSION.GETVIEWS CHROME.TABS.CAPTUREVISIBLETAB CHROME.TABS.CREATE CHROME.TABS.ONUPDATED", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json", <newline>         "screenshot.html", <newline>         "screenshot.js" <newline>       ], <newline>-      "source_hash": "559684528065aa7782e802bfba6ebf3ec238d7cc", <newline>+      "source_hash": "59a96f4201e09897b65f219cd664119f94f3fdb5", <newline>       "zip_path": "examples\/api\/tabs\/screenshot.zip" <newline>     }, <newline>     { <newline>@@ -2234,10 +2241,11 @@ <newline>       "search_string": "TTS DEBUG TOOL FOR DEVELOPERS OF CHROME TTS ENGINE EXTENSIONS TO HELP THEM TEST THEIR ENGINES ARE IMPLEMENTING THE API CORRECTLY. TTS CHROME.TTS.GETVOICES CHROME.TTS.SPEAK CHROME.TTS.STOP", <newline>       "source_files": [ <newline>         "manifest.json", <newline>+        "ttsdebug.css", <newline>         "ttsdebug.html", <newline>         "ttsdebug.js" <newline>       ], <newline>-      "source_hash": "e81705ac4dd9a820b403e2b77d07e72b5de0198e", <newline>+      "source_hash": "0806af7ee646f2bae8dacd4f9fae16336e3e6807", <newline>       "zip_path": "examples\/extensions\/ttsdebug.zip" <newline>     }, <newline>     { <newline>@@ -2326,11 +2334,14 @@ <newline>       "source_files": [ <newline>         "_locales\/en\/messages.json", <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json", <newline>         "navigation_collector.js", <newline>-        "popup.html" <newline>+        "popup.css", <newline>+        "popup.html", <newline>+        "popup.js" <newline>       ], <newline>-      "source_hash": "b6cda534937998343a093fdb74313a85edbc771e", <newline>+      "source_hash": "449424bf09813438d65a988ef3249d59c01462e2", <newline>       "zip_path": "examples\/api\/webNavigation\/basic.zip" <newline>     }, <newline>     {
5505650d60a86b3d564c2be14e15e0cc69efbe2	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 25 09:25:46 2011 +0000	Adding `content_security_policy` to 10 sample extensions. Touched: * contentSettings * contextMenus/basic * browserAction/set_icon_path * app_launcher * devtools/network/chrome-firephp * extension/isAllowedAccess * news_a11y * notifications * omnibox/extension-docs * pageAction/pageaction_by_url As a drive-by, fixed the broken `contentscript_xhr` by changing to Twitter's new API endpoint TEST=	92644		http://codereview.chromium.org/8309001	svn://svn.chromium.org/chrome/trunk/src@107084 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index 8920cd6..f77b23b 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -70,6 +70,7 @@ <newline>     "chrome.experimental.savePage.saveAsMHTML": "experimental.savePage.html#method-saveAsMHTML", <newline>     "chrome.experimental.settings.clear": "experimental.settings.html#method-clear", <newline>     "chrome.experimental.settings.get": "experimental.settings.html#method-get", <newline>+    "chrome.experimental.settings.onChanged": "experimental.settings.html#event-onChanged", <newline>     "chrome.experimental.settings.remove": "experimental.settings.html#method-remove", <newline>     "chrome.experimental.settings.set": "experimental.settings.html#method-set", <newline>     "chrome.experimental.speechInput.isRecording": "experimental.speechInput.html#method-isRecording", <newline>@@ -225,9 +226,10 @@ <newline>       "search_string": "A BROWSER ACTION WHICH CHANGES ITS ICON WHEN CLICKED.  BACKGROUND_PAGE BROWSER_ACTION TABS CHROME.BROWSERACTION.ONCLICKED CHROME.BROWSERACTION.SETICON", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "c5752555642e89340c57657b48440b0dcd74ee99", <newline>+      "source_hash": "ac932922a2fa7769791cf7fabefa95307d45153f", <newline>       "zip_path": "examples\/api\/browserAction\/set_icon_path.zip" <newline>     }, <newline>     { <newline>@@ -375,7 +377,7 @@ <newline>         "popup.html", <newline>         "popup.js" <newline>       ], <newline>-      "source_hash": "4cb1348cfca9c990117d52290f93eb5fc5081bc2", <newline>+      "source_hash": "62a69b77d59cda0b038c2e5acdbcae289b3f5176", <newline>       "zip_path": "examples\/extensions\/app_launcher.zip" <newline>     }, <newline>     { <newline>@@ -704,7 +706,7 @@ <newline>         "contentscript.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "749314ae399dfc5f6759358b384bc55997fed455", <newline>+      "source_hash": "419d1480250cc6fece78798fdfe99e4e1b4e28fd", <newline>       "zip_path": "examples\/howto\/contentscript_xhr.zip" <newline>     }, <newline>     { <newline>@@ -729,9 +731,10 @@ <newline>       "search_string": "CONTENT SETTINGS SHOWS THE CONTENT SETTINGS FOR THE CURRENT SITE. BROWSER_ACTION CONTENTSETTINGS POPUP TABS CHROME.TABS.GET CHROME.TABS.GETSELECTED", <newline>       "source_files": [ <newline>         "manifest.json", <newline>-        "popup.html" <newline>+        "popup.html", <newline>+        "popup.js" <newline>       ], <newline>-      "source_hash": "14d647a5ea1fa8551089fdb8810b6acaf16530cf", <newline>+      "source_hash": "95619d1c264bb65ac6f8ff105d34830ec87af284", <newline>       "zip_path": "examples\/api\/contentSettings.zip" <newline>     }, <newline>     { <newline>@@ -756,7 +759,7 @@ <newline>         "manifest.json", <newline>         "sample.js" <newline>       ], <newline>-      "source_hash": "0e35ce268b3b2cf3d9830e6411c85c5dfef2ffdf", <newline>+      "source_hash": "a42707be0ca36201f6e903858a8b3cd044c4eb25", <newline>       "zip_path": "examples\/api\/contextMenus\/basic.zip" <newline>     }, <newline>     { <newline>@@ -880,14 +883,15 @@ <newline>       "packaged_app": false, <newline>       "path": "examples\/api\/omnibox\/extension-docs\/", <newline>       "protocols": [ <newline>-        "http:\/\/" <newline>+        "https:\/\/" <newline>       ], <newline>       "search_string": "EXTENSION DOCS SEARCH SEARCH THE CHROME EXTENSIONS DOCUMENTATION.  TO USE, TYPE CRDOC PLUS A SEARCH TERM INTO THE OMNIBOX. BACKGROUND_PAGE TABS CHROME.OMNIBOX.ONINPUTCHANGED CHROME.OMNIBOX.ONINPUTENTERED CHROME.TABS.CREATE CHROME.TABS.GET CHROME.TABS.ONREMOVED CHROME.TABS.UPDATE", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "0aa8ec9a2c091e227661ca5010d08f6823e643a7", <newline>+      "source_hash": "4c779b160a04cb4264eee14d7969f665953699a7", <newline>       "zip_path": "examples\/api\/omnibox\/extension-docs.zip" <newline>     }, <newline>     { <newline>@@ -918,11 +922,12 @@ <newline>       "search_string": "FIREPHP FOR CHROME EXTENDS THE DEVELOPER TOOLS, ADDING SUPPORT FOR PARSING FIREPHP MESSAGES FROM SERVER BACKGROUND_PAGE DEVTOOLS_PAGE EXPERIMENTAL TABS CHROME.EXPERIMENTAL.DEVTOOLS.NETWORK.GETHAR CHROME.EXPERIMENTAL.DEVTOOLS.NETWORK.ONREQUESTFINISHED CHROME.EXTENSION.ONREQUEST CHROME.EXTENSION.SENDREQUEST CHROME.TABS.EXECUTESCRIPT", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "devtools.html", <newline>         "devtools.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "b607f6ca8f1ccf4343766b480ae21bb220dd949c", <newline>+      "source_hash": "259e28743c1aa6d8778f92fa1af001299f7ad774", <newline>       "zip_path": "examples\/api\/devtools\/network\/chrome-firephp.zip" <newline>     }, <newline>     { <newline>@@ -1560,10 +1565,14 @@ <newline>       ], <newline>       "search_string": "NEWS READER DISPLAYS THE FIRST 5 ITEMS FROM THE GOOGLE NEWS - TOP NEWS RSS FEED IN A POPUP. BROWSER_ACTION POPUP TABS CHROME.TABS.CREATE", <newline>       "source_files": [ <newline>+        "feed.css", <newline>         "feed.html", <newline>+        "feed.js", <newline>+        "feed_iframe.css", <newline>+        "feed_iframe.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "af7474bf0d3ef1a407f27ae0900167a1408ead35", <newline>+      "source_hash": "800a1cfe78a6ff8a82c85ef3bc52e71a42e9c664", <newline>       "zip_path": "examples\/extensions\/news_a11y.zip" <newline>     }, <newline>     { <newline>@@ -1638,9 +1647,7 @@ <newline>       "zip_path": "examples\/extensions\/news.zip" <newline>     }, <newline>     { <newline>-      "api_calls": [ <newline>-        "chrome.tabs.create" <newline>-      ], <newline>+      "api_calls": [], <newline>       "crx_path": null, <newline>       "description": "Shows off desktop notifications, which are \"toast\" windows that pop up on the desktop.", <newline>       "features": [ <newline>@@ -1655,14 +1662,16 @@ <newline>       "packaged_app": false, <newline>       "path": "examples\/api\/notifications\/", <newline>       "protocols": [], <newline>-      "search_string": "NOTIFICATION DEMO SHOWS OFF DESKTOP NOTIFICATIONS, WHICH ARE TOAST WINDOWS THAT POP UP ON THE DESKTOP. BACKGROUND_PAGE NOTIFICATIONS OPTIONS_PAGE TABS CHROME.TABS.CREATE", <newline>+      "search_string": "NOTIFICATION DEMO SHOWS OFF DESKTOP NOTIFICATIONS, WHICH ARE TOAST WINDOWS THAT POP UP ON THE DESKTOP. BACKGROUND_PAGE NOTIFICATIONS OPTIONS_PAGE TABS", <newline>       "source_files": [ <newline>         "background.html", <newline>-        "error.html", <newline>+        "background.js", <newline>         "manifest.json", <newline>-        "options.html" <newline>+        "options.html", <newline>+        "options.js", <newline>+        "style.css" <newline>       ], <newline>-      "source_hash": "bc2985ef75d717779cb6e1e523a3e063067c3494", <newline>+      "source_hash": "e816c895b8ee88a42187bf0734ef828d0d5f375f", <newline>       "zip_path": "examples\/api\/notifications.zip" <newline>     }, <newline>     { <newline>@@ -1737,9 +1746,10 @@ <newline>       "search_string": "PAGE ACTION BY URL SHOWS A PAGE ACTION FOR URLS WHICH HAVE THE LETTER G IN THEM. BACKGROUND_PAGE PAGE_ACTION TABS CHROME.PAGEACTION.SHOW CHROME.TABS.ONUPDATED", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "732ef0951e1d6ff4afedb884b0e63cb342bb1499", <newline>+      "source_hash": "e027d9a9748719a4c216fa258a1623910509ac41", <newline>       "zip_path": "examples\/api\/pageAction\/pageaction_by_url.zip" <newline>     }, <newline>     { <newline>@@ -2329,25 +2339,26 @@ <newline>         "chrome.extension.isAllowedIncognitoAccess" <newline>       ], <newline>       "crx_path": null, <newline>-      "description": "Demonstrates the `extension.isAllowed???Access` APIs", <newline>+      "description": "Demonstrates the `extension.isAllowedFileSchemeAccess` and `extesion.isAllowedIncognitoAccess` APIs", <newline>       "features": [ <newline>         "browser_action" <newline>       ], <newline>       "icon": "sample-128.png", <newline>       "id": "0fa4abe6545f0316fea7cfa07c53aa48c4f3d018", <newline>-      "name": "`extension.isAllowed???Access` Example", <newline>+      "name": "`extension.isAllowedFileSchemeAccess` and `extension.isAllowedIncognitoAccess` Example", <newline>       "packaged_app": false, <newline>       "path": "examples\/api\/extension\/isAllowedAccess\/", <newline>       "protocols": [ <newline>         "file:\/\/" <newline>       ], <newline>-      "search_string": "`EXTENSION.ISALLOWED???ACCESS` EXAMPLE DEMONSTRATES THE `EXTENSION.ISALLOWED???ACCESS` APIS BROWSER_ACTION CHROME.EXTENSION.ISALLOWEDFILESCHEMEACCESS CHROME.EXTENSION.ISALLOWEDINCOGNITOACCESS", <newline>+      "search_string": "`EXTENSION.ISALLOWEDFILESCHEMEACCESS` AND `EXTENSION.ISALLOWEDINCOGNITOACCESS` EXAMPLE DEMONSTRATES THE `EXTENSION.ISALLOWEDFILESCHEMEACCESS` AND `EXTESION.ISALLOWEDINCOGNITOACCESS` APIS BROWSER_ACTION CHROME.EXTENSION.ISALLOWEDFILESCHEMEACCESS CHROME.EXTENSION.ISALLOWEDINCOGNITOACCESS", <newline>       "source_files": [ <newline>         "manifest.json", <newline>         "popup.html", <newline>+        "popup.js", <newline>         "sample.css" <newline>       ], <newline>-      "source_hash": "c8bfc2b60f25c24dc3c5aaf75dd635c9419df66d", <newline>+      "source_hash": "62ca453d8d1551ff63dd7c78b49d546bc3af17c6", <newline>       "zip_path": "examples\/api\/extension\/isAllowedAccess.zip" <newline>     } <newline>   ]
6fed6f6a7c18e547ef547bdb7356c8a9988a81c	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 25 09:25:46 2011 +0000	Adding `content_security_policy` to 10 sample extensions. Touched: * contentSettings * contextMenus/basic * browserAction/set_icon_path * app_launcher * devtools/network/chrome-firephp * extension/isAllowedAccess * news_a11y * notifications * omnibox/extension-docs * pageAction/pageaction_by_url As a drive-by, fixed the broken `contentscript_xhr` by changing to Twitter's new API endpoint TEST=	92644		http://codereview.chromium.org/8309001	svn://svn.chromium.org/chrome/trunk/src@107084 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index 8920cd6..f77b23b 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -70,6 +70,7 @@ <newline>     "chrome.experimental.savePage.saveAsMHTML": "experimental.savePage.html#method-saveAsMHTML", <newline>     "chrome.experimental.settings.clear": "experimental.settings.html#method-clear", <newline>     "chrome.experimental.settings.get": "experimental.settings.html#method-get", <newline>+    "chrome.experimental.settings.onChanged": "experimental.settings.html#event-onChanged", <newline>     "chrome.experimental.settings.remove": "experimental.settings.html#method-remove", <newline>     "chrome.experimental.settings.set": "experimental.settings.html#method-set", <newline>     "chrome.experimental.speechInput.isRecording": "experimental.speechInput.html#method-isRecording", <newline>@@ -225,9 +226,10 @@ <newline>       "search_string": "A BROWSER ACTION WHICH CHANGES ITS ICON WHEN CLICKED.  BACKGROUND_PAGE BROWSER_ACTION TABS CHROME.BROWSERACTION.ONCLICKED CHROME.BROWSERACTION.SETICON", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "c5752555642e89340c57657b48440b0dcd74ee99", <newline>+      "source_hash": "ac932922a2fa7769791cf7fabefa95307d45153f", <newline>       "zip_path": "examples\/api\/browserAction\/set_icon_path.zip" <newline>     }, <newline>     { <newline>@@ -375,7 +377,7 @@ <newline>         "popup.html", <newline>         "popup.js" <newline>       ], <newline>-      "source_hash": "4cb1348cfca9c990117d52290f93eb5fc5081bc2", <newline>+      "source_hash": "62a69b77d59cda0b038c2e5acdbcae289b3f5176", <newline>       "zip_path": "examples\/extensions\/app_launcher.zip" <newline>     }, <newline>     { <newline>@@ -704,7 +706,7 @@ <newline>         "contentscript.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "749314ae399dfc5f6759358b384bc55997fed455", <newline>+      "source_hash": "419d1480250cc6fece78798fdfe99e4e1b4e28fd", <newline>       "zip_path": "examples\/howto\/contentscript_xhr.zip" <newline>     }, <newline>     { <newline>@@ -729,9 +731,10 @@ <newline>       "search_string": "CONTENT SETTINGS SHOWS THE CONTENT SETTINGS FOR THE CURRENT SITE. BROWSER_ACTION CONTENTSETTINGS POPUP TABS CHROME.TABS.GET CHROME.TABS.GETSELECTED", <newline>       "source_files": [ <newline>         "manifest.json", <newline>-        "popup.html" <newline>+        "popup.html", <newline>+        "popup.js" <newline>       ], <newline>-      "source_hash": "14d647a5ea1fa8551089fdb8810b6acaf16530cf", <newline>+      "source_hash": "95619d1c264bb65ac6f8ff105d34830ec87af284", <newline>       "zip_path": "examples\/api\/contentSettings.zip" <newline>     }, <newline>     { <newline>@@ -756,7 +759,7 @@ <newline>         "manifest.json", <newline>         "sample.js" <newline>       ], <newline>-      "source_hash": "0e35ce268b3b2cf3d9830e6411c85c5dfef2ffdf", <newline>+      "source_hash": "a42707be0ca36201f6e903858a8b3cd044c4eb25", <newline>       "zip_path": "examples\/api\/contextMenus\/basic.zip" <newline>     }, <newline>     { <newline>@@ -880,14 +883,15 @@ <newline>       "packaged_app": false, <newline>       "path": "examples\/api\/omnibox\/extension-docs\/", <newline>       "protocols": [ <newline>-        "http:\/\/" <newline>+        "https:\/\/" <newline>       ], <newline>       "search_string": "EXTENSION DOCS SEARCH SEARCH THE CHROME EXTENSIONS DOCUMENTATION.  TO USE, TYPE CRDOC PLUS A SEARCH TERM INTO THE OMNIBOX. BACKGROUND_PAGE TABS CHROME.OMNIBOX.ONINPUTCHANGED CHROME.OMNIBOX.ONINPUTENTERED CHROME.TABS.CREATE CHROME.TABS.GET CHROME.TABS.ONREMOVED CHROME.TABS.UPDATE", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "0aa8ec9a2c091e227661ca5010d08f6823e643a7", <newline>+      "source_hash": "4c779b160a04cb4264eee14d7969f665953699a7", <newline>       "zip_path": "examples\/api\/omnibox\/extension-docs.zip" <newline>     }, <newline>     { <newline>@@ -918,11 +922,12 @@ <newline>       "search_string": "FIREPHP FOR CHROME EXTENDS THE DEVELOPER TOOLS, ADDING SUPPORT FOR PARSING FIREPHP MESSAGES FROM SERVER BACKGROUND_PAGE DEVTOOLS_PAGE EXPERIMENTAL TABS CHROME.EXPERIMENTAL.DEVTOOLS.NETWORK.GETHAR CHROME.EXPERIMENTAL.DEVTOOLS.NETWORK.ONREQUESTFINISHED CHROME.EXTENSION.ONREQUEST CHROME.EXTENSION.SENDREQUEST CHROME.TABS.EXECUTESCRIPT", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "devtools.html", <newline>         "devtools.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "b607f6ca8f1ccf4343766b480ae21bb220dd949c", <newline>+      "source_hash": "259e28743c1aa6d8778f92fa1af001299f7ad774", <newline>       "zip_path": "examples\/api\/devtools\/network\/chrome-firephp.zip" <newline>     }, <newline>     { <newline>@@ -1560,10 +1565,14 @@ <newline>       ], <newline>       "search_string": "NEWS READER DISPLAYS THE FIRST 5 ITEMS FROM THE GOOGLE NEWS - TOP NEWS RSS FEED IN A POPUP. BROWSER_ACTION POPUP TABS CHROME.TABS.CREATE", <newline>       "source_files": [ <newline>+        "feed.css", <newline>         "feed.html", <newline>+        "feed.js", <newline>+        "feed_iframe.css", <newline>+        "feed_iframe.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "af7474bf0d3ef1a407f27ae0900167a1408ead35", <newline>+      "source_hash": "800a1cfe78a6ff8a82c85ef3bc52e71a42e9c664", <newline>       "zip_path": "examples\/extensions\/news_a11y.zip" <newline>     }, <newline>     { <newline>@@ -1638,9 +1647,7 @@ <newline>       "zip_path": "examples\/extensions\/news.zip" <newline>     }, <newline>     { <newline>-      "api_calls": [ <newline>-        "chrome.tabs.create" <newline>-      ], <newline>+      "api_calls": [], <newline>       "crx_path": null, <newline>       "description": "Shows off desktop notifications, which are \"toast\" windows that pop up on the desktop.", <newline>       "features": [ <newline>@@ -1655,14 +1662,16 @@ <newline>       "packaged_app": false, <newline>       "path": "examples\/api\/notifications\/", <newline>       "protocols": [], <newline>-      "search_string": "NOTIFICATION DEMO SHOWS OFF DESKTOP NOTIFICATIONS, WHICH ARE TOAST WINDOWS THAT POP UP ON THE DESKTOP. BACKGROUND_PAGE NOTIFICATIONS OPTIONS_PAGE TABS CHROME.TABS.CREATE", <newline>+      "search_string": "NOTIFICATION DEMO SHOWS OFF DESKTOP NOTIFICATIONS, WHICH ARE TOAST WINDOWS THAT POP UP ON THE DESKTOP. BACKGROUND_PAGE NOTIFICATIONS OPTIONS_PAGE TABS", <newline>       "source_files": [ <newline>         "background.html", <newline>-        "error.html", <newline>+        "background.js", <newline>         "manifest.json", <newline>-        "options.html" <newline>+        "options.html", <newline>+        "options.js", <newline>+        "style.css" <newline>       ], <newline>-      "source_hash": "bc2985ef75d717779cb6e1e523a3e063067c3494", <newline>+      "source_hash": "e816c895b8ee88a42187bf0734ef828d0d5f375f", <newline>       "zip_path": "examples\/api\/notifications.zip" <newline>     }, <newline>     { <newline>@@ -1737,9 +1746,10 @@ <newline>       "search_string": "PAGE ACTION BY URL SHOWS A PAGE ACTION FOR URLS WHICH HAVE THE LETTER G IN THEM. BACKGROUND_PAGE PAGE_ACTION TABS CHROME.PAGEACTION.SHOW CHROME.TABS.ONUPDATED", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "732ef0951e1d6ff4afedb884b0e63cb342bb1499", <newline>+      "source_hash": "e027d9a9748719a4c216fa258a1623910509ac41", <newline>       "zip_path": "examples\/api\/pageAction\/pageaction_by_url.zip" <newline>     }, <newline>     { <newline>@@ -2329,25 +2339,26 @@ <newline>         "chrome.extension.isAllowedIncognitoAccess" <newline>       ], <newline>       "crx_path": null, <newline>-      "description": "Demonstrates the `extension.isAllowed???Access` APIs", <newline>+      "description": "Demonstrates the `extension.isAllowedFileSchemeAccess` and `extesion.isAllowedIncognitoAccess` APIs", <newline>       "features": [ <newline>         "browser_action" <newline>       ], <newline>       "icon": "sample-128.png", <newline>       "id": "0fa4abe6545f0316fea7cfa07c53aa48c4f3d018", <newline>-      "name": "`extension.isAllowed???Access` Example", <newline>+      "name": "`extension.isAllowedFileSchemeAccess` and `extension.isAllowedIncognitoAccess` Example", <newline>       "packaged_app": false, <newline>       "path": "examples\/api\/extension\/isAllowedAccess\/", <newline>       "protocols": [ <newline>         "file:\/\/" <newline>       ], <newline>-      "search_string": "`EXTENSION.ISALLOWED???ACCESS` EXAMPLE DEMONSTRATES THE `EXTENSION.ISALLOWED???ACCESS` APIS BROWSER_ACTION CHROME.EXTENSION.ISALLOWEDFILESCHEMEACCESS CHROME.EXTENSION.ISALLOWEDINCOGNITOACCESS", <newline>+      "search_string": "`EXTENSION.ISALLOWEDFILESCHEMEACCESS` AND `EXTENSION.ISALLOWEDINCOGNITOACCESS` EXAMPLE DEMONSTRATES THE `EXTENSION.ISALLOWEDFILESCHEMEACCESS` AND `EXTESION.ISALLOWEDINCOGNITOACCESS` APIS BROWSER_ACTION CHROME.EXTENSION.ISALLOWEDFILESCHEMEACCESS CHROME.EXTENSION.ISALLOWEDINCOGNITOACCESS", <newline>       "source_files": [ <newline>         "manifest.json", <newline>         "popup.html", <newline>+        "popup.js", <newline>         "sample.css" <newline>       ], <newline>-      "source_hash": "c8bfc2b60f25c24dc3c5aaf75dd635c9419df66d", <newline>+      "source_hash": "62ca453d8d1551ff63dd7c78b49d546bc3af17c6", <newline>       "zip_path": "examples\/api\/extension\/isAllowedAccess.zip" <newline>     } <newline>   ]
daecceece28e5a67b47424276c94b3b87f3f5ff	brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 25 03:06:12 2011 +0000	Revert 107042 - Replace most LOG/CHECK statements with DLOG/DCHECK statements in base. I tried hard not to change CHECKs that had side effects. I kept fatal checks that seemed security or debugging-info (in crash reports) sensitive, and ones that seems particularly well-conceived. TBR=brettw@chromium.org			http://codereview.chromium.org/8351025	svn://svn.chromium.org/chrome/trunk/src@107051 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/win/i18n.cc b/base/win/i18n.cc <newline>index 9e523a1..59480f2 100644 <newline>--- a/base/win/i18n.cc <newline>+++ b/base/win/i18n.cc <newline>@@ -75,7 +75,7 @@ bool GetMUIPreferredUILanguageList(LanguageFunction function, ULONG flags, <newline>             << "Failed getting size of preferred UI languages."; <newline>       } <newline>     } else { <newline>-      DVLOG(2) << "MUI not available."; <newline>+      VLOG(2) << "MUI not available."; <newline>     } <newline>   } else { <newline>     NOTREACHED() << "kernel32.dll not found.";
f4a8e1220d91ba95c2c46ec232dd53d27807ecd	brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 25 03:06:12 2011 +0000	Revert 107042 - Replace most LOG/CHECK statements with DLOG/DCHECK statements in base. I tried hard not to change CHECKs that had side effects. I kept fatal checks that seemed security or debugging-info (in crash reports) sensitive, and ones that seems particularly well-conceived. TBR=brettw@chromium.org			http://codereview.chromium.org/8351025	svn://svn.chromium.org/chrome/trunk/src@107051 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/win/i18n.cc b/base/win/i18n.cc <newline>index 9e523a1..59480f2 100644 <newline>--- a/base/win/i18n.cc <newline>+++ b/base/win/i18n.cc <newline>@@ -75,7 +75,7 @@ bool GetMUIPreferredUILanguageList(LanguageFunction function, ULONG flags, <newline>             << "Failed getting size of preferred UI languages."; <newline>       } <newline>     } else { <newline>-      DVLOG(2) << "MUI not available."; <newline>+      VLOG(2) << "MUI not available."; <newline>     } <newline>   } else { <newline>     NOTREACHED() << "kernel32.dll not found.";
eda16399a9f5e1a7c1c3d52aae9d63c54f5e42b	brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 25 02:12:09 2011 +0000	Replace most LOG/CHECK statements with DLOG/DCHECK statements in base. I tried hard not to change CHECKs that had side effects. I kept fatal checks that seemed security or debugging-info (in crash reports) sensitive, and ones that seems particularly well-conceived.			http://codereview.chromium.org/8368009	svn://svn.chromium.org/chrome/trunk/src@107042 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/win/i18n.cc b/base/win/i18n.cc <newline>index 59480f2..9e523a1 100644 <newline>--- a/base/win/i18n.cc <newline>+++ b/base/win/i18n.cc <newline>@@ -75,7 +75,7 @@ bool GetMUIPreferredUILanguageList(LanguageFunction function, ULONG flags, <newline>             << "Failed getting size of preferred UI languages."; <newline>       } <newline>     } else { <newline>-      VLOG(2) << "MUI not available."; <newline>+      DVLOG(2) << "MUI not available."; <newline>     } <newline>   } else { <newline>     NOTREACHED() << "kernel32.dll not found.";
a7d86e75fe4a37ef12f3ae4bd28b043932d2aa0	brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 25 02:12:09 2011 +0000	Replace most LOG/CHECK statements with DLOG/DCHECK statements in base. I tried hard not to change CHECKs that had side effects. I kept fatal checks that seemed security or debugging-info (in crash reports) sensitive, and ones that seems particularly well-conceived.			http://codereview.chromium.org/8368009	svn://svn.chromium.org/chrome/trunk/src@107042 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/win/i18n.cc b/base/win/i18n.cc <newline>index 59480f2..9e523a1 100644 <newline>--- a/base/win/i18n.cc <newline>+++ b/base/win/i18n.cc <newline>@@ -75,7 +75,7 @@ bool GetMUIPreferredUILanguageList(LanguageFunction function, ULONG flags, <newline>             << "Failed getting size of preferred UI languages."; <newline>       } <newline>     } else { <newline>-      VLOG(2) << "MUI not available."; <newline>+      DVLOG(2) << "MUI not available."; <newline>     } <newline>   } else { <newline>     NOTREACHED() << "kernel32.dll not found.";
74636a8a7f39846afea7c8a6041990814510557	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 19 20:42:22 2011 +0000	options: fix up vertical spacing issues: 1. there is extraneous padding between sections in some cases (i.e. when the top or bottom element has top or bottom margin). Solution: don't apply top margin for top element or bottom margin for bottom element. 2. the top section h3 on each top level options page jiggles when you switch to that page (each has a different vertical alignment relative to the page title). Solution: set vertical alignment of sections on the section h3 rather than section content (content will in turn align to h3 baseline). 3. the security button on the advanced page is too close to the checkbox. Solution: add .section-group div. TEST=manual	none		http://codereview.chromium.org/8344027	svn://svn.chromium.org/chrome/trunk/src@106378 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/options/options_page.css b/chrome/browser/resources/options/options_page.css <newline>index fa009f6..d6dc054 100644 <newline>--- a/chrome/browser/resources/options/options_page.css <newline>+++ b/chrome/browser/resources/options/options_page.css <newline>@@ -268,6 +268,14 @@ section > div:only-of-type { <newline>   -webkit-box-flex: 1; <newline> } <newline>+/* Don't allow edge margin on the first/last child of a section. */ <newline>+section > h3 + * > *:last-child { <newline>+  margin-bottom: 0; <newline>+} <newline>+section > h3 + * > *:first-child { <newline>+  margin-top: 0; <newline>+} <newline>+ <newline> .option { <newline>   margin-top: 0; <newline> } <newline>@@ -580,10 +588,15 @@ html[flashPluginSupportsClearSiteData] .clear-plugin-lso-data-disabled { <newline> /* right table column containing settable options */ <newline> .displaytable > section > h3 + div, <newline> .displaytable > section > h3 + table { <newline>-  padding-top: 17px; <newline>   padding-bottom: 20px; <newline> } <newline>+/* Setting the padding on the header so the alignment doesn't depend on the <newline>+ * contents of the right table column.  */ <newline>+.displaytable > section > h3 { <newline>+  padding-top: 17px; <newline>+} <newline>+ <newline> .displaytable > section > * { <newline>   display: table-cell; <newline>   vertical-align: baseline;
6680f0a2f230d3897f34dd385ead90848bc1265	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 19 20:42:22 2011 +0000	options: fix up vertical spacing issues: 1. there is extraneous padding between sections in some cases (i.e. when the top or bottom element has top or bottom margin). Solution: don't apply top margin for top element or bottom margin for bottom element. 2. the top section h3 on each top level options page jiggles when you switch to that page (each has a different vertical alignment relative to the page title). Solution: set vertical alignment of sections on the section h3 rather than section content (content will in turn align to h3 baseline). 3. the security button on the advanced page is too close to the checkbox. Solution: add .section-group div. TEST=manual	none		http://codereview.chromium.org/8344027	svn://svn.chromium.org/chrome/trunk/src@106378 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/options/options_page.css b/chrome/browser/resources/options/options_page.css <newline>index fa009f6..d6dc054 100644 <newline>--- a/chrome/browser/resources/options/options_page.css <newline>+++ b/chrome/browser/resources/options/options_page.css <newline>@@ -268,6 +268,14 @@ section > div:only-of-type { <newline>   -webkit-box-flex: 1; <newline> } <newline>+/* Don't allow edge margin on the first/last child of a section. */ <newline>+section > h3 + * > *:last-child { <newline>+  margin-bottom: 0; <newline>+} <newline>+section > h3 + * > *:first-child { <newline>+  margin-top: 0; <newline>+} <newline>+ <newline> .option { <newline>   margin-top: 0; <newline> } <newline>@@ -580,10 +588,15 @@ html[flashPluginSupportsClearSiteData] .clear-plugin-lso-data-disabled { <newline> /* right table column containing settable options */ <newline> .displaytable > section > h3 + div, <newline> .displaytable > section > h3 + table { <newline>-  padding-top: 17px; <newline>   padding-bottom: 20px; <newline> } <newline>+/* Setting the padding on the header so the alignment doesn't depend on the <newline>+ * contents of the right table column.  */ <newline>+.displaytable > section > h3 { <newline>+  padding-top: 17px; <newline>+} <newline>+ <newline> .displaytable > section > * { <newline>   display: table-cell; <newline>   vertical-align: baseline;
843876488c43c6f3321014d6dbdbf23e93d42e0	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 18 13:47:31 2011 +0000	Samples for `enableReferrer` and `allowThirdPartyCookies` should use the `privacy` namespace. While fixing these samples, I've also added `content_security_policy` as a drive-by. TEST=	92644		http://codereview.chromium.org/8341010	svn://svn.chromium.org/chrome/trunk/src@106059 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index e6d1a9a..8920cd6 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -407,9 +407,37 @@ <newline>       "description": "Sample extension which demonstrates how to access a preference.", <newline>       "features": [ <newline>         "browser_action", <newline>-        "contentSettings", <newline>         "experimental", <newline>-        "popup" <newline>+        "popup", <newline>+        "privacy" <newline>+      ], <newline>+      "icon": null, <newline>+      "id": "0bf0930a32829dfb77170535ecb27adc2de3998a", <newline>+      "name": "Block\/allow referrer API example extension", <newline>+      "packaged_app": false, <newline>+      "path": "examples\/api\/preferences\/enableReferrer\/", <newline>+      "protocols": [], <newline>+      "search_string": "BLOCK\/ALLOW REFERRER API EXAMPLE EXTENSION SAMPLE EXTENSION WHICH DEMONSTRATES HOW TO ACCESS A PREFERENCE. BROWSER_ACTION EXPERIMENTAL POPUP PRIVACY CHROME.EXTENSION.ISALLOWEDINCOGNITOACCESS", <newline>+      "source_files": [ <newline>+        "manifest.json", <newline>+        "popup.css", <newline>+        "popup.html", <newline>+        "popup.js" <newline>+      ], <newline>+      "source_hash": "c2114f2faf51a5fdc08002cab3a5bdaefb2073cd", <newline>+      "zip_path": "examples\/api\/preferences\/enableReferrer.zip" <newline>+    }, <newline>+    { <newline>+      "api_calls": [ <newline>+        "chrome.extension.isAllowedIncognitoAccess" <newline>+      ], <newline>+      "crx_path": null, <newline>+      "description": "Sample extension which demonstrates how to access a preference.", <newline>+      "features": [ <newline>+        "browser_action", <newline>+        "experimental", <newline>+        "popup", <newline>+        "privacy" <newline>       ], <newline>       "icon": null, <newline>       "id": "7da105f28e200d42510aff3591dfa5aeb0b82605", <newline>@@ -417,12 +445,14 @@ <newline>       "packaged_app": false, <newline>       "path": "examples\/api\/preferences\/allowThirdPartyCookies\/", <newline>       "protocols": [], <newline>-      "search_string": "BLOCK\/ALLOW THIRD-PARTY COOKIES API EXAMPLE EXTENSION SAMPLE EXTENSION WHICH DEMONSTRATES HOW TO ACCESS A PREFERENCE. BROWSER_ACTION CONTENTSETTINGS EXPERIMENTAL POPUP CHROME.EXTENSION.ISALLOWEDINCOGNITOACCESS", <newline>+      "search_string": "BLOCK\/ALLOW THIRD-PARTY COOKIES API EXAMPLE EXTENSION SAMPLE EXTENSION WHICH DEMONSTRATES HOW TO ACCESS A PREFERENCE. BROWSER_ACTION EXPERIMENTAL POPUP PRIVACY CHROME.EXTENSION.ISALLOWEDINCOGNITOACCESS", <newline>       "source_files": [ <newline>         "manifest.json", <newline>-        "popup.html" <newline>+        "popup.css", <newline>+        "popup.html", <newline>+        "popup.js" <newline>       ], <newline>-      "source_hash": "67648790a6ee68e071627e870868d5582e1ef2b5", <newline>+      "source_hash": "7ccf3f2ab08bbde36f62df34e93fc57eaff2fa3a", <newline>       "zip_path": "examples\/api\/preferences\/allowThirdPartyCookies.zip" <newline>     }, <newline>     { <newline>@@ -805,32 +835,6 @@ <newline>       "zip_path": "examples\/extensions\/email_this_page.zip" <newline>     }, <newline>     { <newline>-      "api_calls": [ <newline>-        "chrome.extension.isAllowedIncognitoAccess" <newline>-      ], <newline>-      "crx_path": null, <newline>-      "description": "Sample extension which demonstrates how to access a preference.", <newline>-      "features": [ <newline>-        "browser_action", <newline>-        "contentSettings", <newline>-        "experimental", <newline>-        "popup" <newline>-      ], <newline>-      "icon": null, <newline>-      "id": "0bf0930a32829dfb77170535ecb27adc2de3998a", <newline>-      "name": "Enable\/disable referrers API example extension", <newline>-      "packaged_app": false, <newline>-      "path": "examples\/api\/preferences\/enableReferrer\/", <newline>-      "protocols": [], <newline>-      "search_string": "ENABLE\/DISABLE REFERRERS API EXAMPLE EXTENSION SAMPLE EXTENSION WHICH DEMONSTRATES HOW TO ACCESS A PREFERENCE. BROWSER_ACTION CONTENTSETTINGS EXPERIMENTAL POPUP CHROME.EXTENSION.ISALLOWEDINCOGNITOACCESS", <newline>-      "source_files": [ <newline>-        "manifest.json", <newline>-        "popup.html" <newline>-      ], <newline>-      "source_hash": "e3514a32b04876d79e64f31ffe7beb4bbae98d33", <newline>-      "zip_path": "examples\/api\/preferences\/enableReferrer.zip" <newline>-    }, <newline>-    { <newline>       "api_calls": [], <newline>       "crx_path": null, <newline>       "description": "A sample extension which uses Google Analytics to track usage.", <newline>@@ -1439,7 +1443,7 @@ <newline>         "popup.html", <newline>         "popup.js" <newline>       ], <newline>-      "source_hash": "175f010b7eacb72207b7018732d3e6dca4e8d164", <newline>+      "source_hash": "8446b89f4eb2d8cb6b49e306e87845b9dd385af5", <newline>       "zip_path": "examples\/extensions\/mappy.zip" <newline>     }, <newline>     {
8ae297434a9e33d1006c52b6d13d8a78e3b7e5e	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 18 13:47:31 2011 +0000	Samples for `enableReferrer` and `allowThirdPartyCookies` should use the `privacy` namespace. While fixing these samples, I've also added `content_security_policy` as a drive-by. TEST=	92644		http://codereview.chromium.org/8341010	svn://svn.chromium.org/chrome/trunk/src@106059 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index e6d1a9a..8920cd6 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -407,9 +407,37 @@ <newline>       "description": "Sample extension which demonstrates how to access a preference.", <newline>       "features": [ <newline>         "browser_action", <newline>-        "contentSettings", <newline>         "experimental", <newline>-        "popup" <newline>+        "popup", <newline>+        "privacy" <newline>+      ], <newline>+      "icon": null, <newline>+      "id": "0bf0930a32829dfb77170535ecb27adc2de3998a", <newline>+      "name": "Block\/allow referrer API example extension", <newline>+      "packaged_app": false, <newline>+      "path": "examples\/api\/preferences\/enableReferrer\/", <newline>+      "protocols": [], <newline>+      "search_string": "BLOCK\/ALLOW REFERRER API EXAMPLE EXTENSION SAMPLE EXTENSION WHICH DEMONSTRATES HOW TO ACCESS A PREFERENCE. BROWSER_ACTION EXPERIMENTAL POPUP PRIVACY CHROME.EXTENSION.ISALLOWEDINCOGNITOACCESS", <newline>+      "source_files": [ <newline>+        "manifest.json", <newline>+        "popup.css", <newline>+        "popup.html", <newline>+        "popup.js" <newline>+      ], <newline>+      "source_hash": "c2114f2faf51a5fdc08002cab3a5bdaefb2073cd", <newline>+      "zip_path": "examples\/api\/preferences\/enableReferrer.zip" <newline>+    }, <newline>+    { <newline>+      "api_calls": [ <newline>+        "chrome.extension.isAllowedIncognitoAccess" <newline>+      ], <newline>+      "crx_path": null, <newline>+      "description": "Sample extension which demonstrates how to access a preference.", <newline>+      "features": [ <newline>+        "browser_action", <newline>+        "experimental", <newline>+        "popup", <newline>+        "privacy" <newline>       ], <newline>       "icon": null, <newline>       "id": "7da105f28e200d42510aff3591dfa5aeb0b82605", <newline>@@ -417,12 +445,14 @@ <newline>       "packaged_app": false, <newline>       "path": "examples\/api\/preferences\/allowThirdPartyCookies\/", <newline>       "protocols": [], <newline>-      "search_string": "BLOCK\/ALLOW THIRD-PARTY COOKIES API EXAMPLE EXTENSION SAMPLE EXTENSION WHICH DEMONSTRATES HOW TO ACCESS A PREFERENCE. BROWSER_ACTION CONTENTSETTINGS EXPERIMENTAL POPUP CHROME.EXTENSION.ISALLOWEDINCOGNITOACCESS", <newline>+      "search_string": "BLOCK\/ALLOW THIRD-PARTY COOKIES API EXAMPLE EXTENSION SAMPLE EXTENSION WHICH DEMONSTRATES HOW TO ACCESS A PREFERENCE. BROWSER_ACTION EXPERIMENTAL POPUP PRIVACY CHROME.EXTENSION.ISALLOWEDINCOGNITOACCESS", <newline>       "source_files": [ <newline>         "manifest.json", <newline>-        "popup.html" <newline>+        "popup.css", <newline>+        "popup.html", <newline>+        "popup.js" <newline>       ], <newline>-      "source_hash": "67648790a6ee68e071627e870868d5582e1ef2b5", <newline>+      "source_hash": "7ccf3f2ab08bbde36f62df34e93fc57eaff2fa3a", <newline>       "zip_path": "examples\/api\/preferences\/allowThirdPartyCookies.zip" <newline>     }, <newline>     { <newline>@@ -805,32 +835,6 @@ <newline>       "zip_path": "examples\/extensions\/email_this_page.zip" <newline>     }, <newline>     { <newline>-      "api_calls": [ <newline>-        "chrome.extension.isAllowedIncognitoAccess" <newline>-      ], <newline>-      "crx_path": null, <newline>-      "description": "Sample extension which demonstrates how to access a preference.", <newline>-      "features": [ <newline>-        "browser_action", <newline>-        "contentSettings", <newline>-        "experimental", <newline>-        "popup" <newline>-      ], <newline>-      "icon": null, <newline>-      "id": "0bf0930a32829dfb77170535ecb27adc2de3998a", <newline>-      "name": "Enable\/disable referrers API example extension", <newline>-      "packaged_app": false, <newline>-      "path": "examples\/api\/preferences\/enableReferrer\/", <newline>-      "protocols": [], <newline>-      "search_string": "ENABLE\/DISABLE REFERRERS API EXAMPLE EXTENSION SAMPLE EXTENSION WHICH DEMONSTRATES HOW TO ACCESS A PREFERENCE. BROWSER_ACTION CONTENTSETTINGS EXPERIMENTAL POPUP CHROME.EXTENSION.ISALLOWEDINCOGNITOACCESS", <newline>-      "source_files": [ <newline>-        "manifest.json", <newline>-        "popup.html" <newline>-      ], <newline>-      "source_hash": "e3514a32b04876d79e64f31ffe7beb4bbae98d33", <newline>-      "zip_path": "examples\/api\/preferences\/enableReferrer.zip" <newline>-    }, <newline>-    { <newline>       "api_calls": [], <newline>       "crx_path": null, <newline>       "description": "A sample extension which uses Google Analytics to track usage.", <newline>@@ -1439,7 +1443,7 @@ <newline>         "popup.html", <newline>         "popup.js" <newline>       ], <newline>-      "source_hash": "175f010b7eacb72207b7018732d3e6dca4e8d164", <newline>+      "source_hash": "8446b89f4eb2d8cb6b49e306e87845b9dd385af5", <newline>       "zip_path": "examples\/extensions\/mappy.zip" <newline>     }, <newline>     {
f2269aa7e89b1ed27a964b5c212e4cb5fb9a96a	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 18 08:42:56 2011 +0000	Adding `content_security_policy` to the "Mappy" sample. This involved pretty much rewriting the popup code to avoid a script injected via `document.write` in the Maps API code. TEST=	92644		http://codereview.chromium.org/8311007	svn://svn.chromium.org/chrome/trunk/src@106043 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index dd2b4cb..e6d1a9a 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -1426,16 +1426,20 @@ <newline>       "packaged_app": false, <newline>       "path": "examples\/extensions\/mappy\/", <newline>       "protocols": [ <newline>-        "http:\/\/" <newline>+        "https:\/\/", <newline>+        "https:\/\/" <newline>       ], <newline>       "search_string": "MAPPY FINDS ADDRESSES IN THE WEB PAGE YOURE ON AND POPS UP A MAP WINDOW. BACKGROUND_PAGE PAGE_ACTION POPUP TABS CHROME.EXTENSION.GETBACKGROUNDPAGE CHROME.EXTENSION.ONREQUEST CHROME.PAGEACTION.HIDE CHROME.PAGEACTION.SETTITLE CHROME.PAGEACTION.SHOW CHROME.TABS.GET CHROME.TABS.GETSELECTED CHROME.TABS.ONSELECTIONCHANGED CHROME.TABS.ONUPDATED CHROME.TABS.SENDREQUEST", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json", <newline>         "mappy_content_script.js", <newline>-        "popup.html" <newline>+        "popup.css", <newline>+        "popup.html", <newline>+        "popup.js" <newline>       ], <newline>-      "source_hash": "81cf2d3975d7df8b58e5226c5b2b6df026446511", <newline>+      "source_hash": "175f010b7eacb72207b7018732d3e6dca4e8d164", <newline>       "zip_path": "examples\/extensions\/mappy.zip" <newline>     }, <newline>     {
c806dff522222f36dfc1345c7f1c20a2c54dfe1	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 18 08:42:56 2011 +0000	Adding `content_security_policy` to the "Mappy" sample. This involved pretty much rewriting the popup code to avoid a script injected via `document.write` in the Maps API code. TEST=	92644		http://codereview.chromium.org/8311007	svn://svn.chromium.org/chrome/trunk/src@106043 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index dd2b4cb..e6d1a9a 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -1426,16 +1426,20 @@ <newline>       "packaged_app": false, <newline>       "path": "examples\/extensions\/mappy\/", <newline>       "protocols": [ <newline>-        "http:\/\/" <newline>+        "https:\/\/", <newline>+        "https:\/\/" <newline>       ], <newline>       "search_string": "MAPPY FINDS ADDRESSES IN THE WEB PAGE YOURE ON AND POPS UP A MAP WINDOW. BACKGROUND_PAGE PAGE_ACTION POPUP TABS CHROME.EXTENSION.GETBACKGROUNDPAGE CHROME.EXTENSION.ONREQUEST CHROME.PAGEACTION.HIDE CHROME.PAGEACTION.SETTITLE CHROME.PAGEACTION.SHOW CHROME.TABS.GET CHROME.TABS.GETSELECTED CHROME.TABS.ONSELECTIONCHANGED CHROME.TABS.ONUPDATED CHROME.TABS.SENDREQUEST", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json", <newline>         "mappy_content_script.js", <newline>-        "popup.html" <newline>+        "popup.css", <newline>+        "popup.html", <newline>+        "popup.js" <newline>       ], <newline>-      "source_hash": "81cf2d3975d7df8b58e5226c5b2b6df026446511", <newline>+      "source_hash": "175f010b7eacb72207b7018732d3e6dca4e8d164", <newline>       "zip_path": "examples\/extensions\/mappy.zip" <newline>     }, <newline>     {
1b0dd2e7df7f23a0f58452a581ca7dcdc8a9556	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sun Oct 16 08:45:29 2011 +0000	Adding `content_security_policy` to imageinfo extension. TEST=	92644		http://codereview.chromium.org/8310002	svn://svn.chromium.org/chrome/trunk/src@105725 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index 82a1d31..d9eb155 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -1277,13 +1277,16 @@ <newline>       "search_string": "IMAGEINFO GET IMAGE INFO FOR IMAGES, INCLUDING EXIF DATA BACKGROUND_PAGE CONTEXTMENUS TABS CHROME.CONTEXTMENUS.CREATE CHROME.TABS.GET CHROME.TABS.GETCURRENT CHROME.WINDOWS.CREATE CHROME.WINDOWS.UPDATE", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "imageinfo\/binaryajax.js", <newline>         "imageinfo\/exif.js", <newline>         "imageinfo\/imageinfo.js", <newline>+        "info.css", <newline>         "info.html", <newline>+        "info.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "c746d9114348f4b414c1ec05e988e2807feb963a", <newline>+      "source_hash": "3a61d1ad772ef01e0d3cc01a8bedbe7da452dd0b", <newline>       "zip_path": "examples\/extensions\/imageinfo.zip" <newline>     }, <newline>     {
184b405ca9797c7e8d74f70c7c91f4e8c2d7313	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sun Oct 16 08:45:29 2011 +0000	Adding `content_security_policy` to imageinfo extension. TEST=	92644		http://codereview.chromium.org/8310002	svn://svn.chromium.org/chrome/trunk/src@105725 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index 82a1d31..d9eb155 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -1277,13 +1277,16 @@ <newline>       "search_string": "IMAGEINFO GET IMAGE INFO FOR IMAGES, INCLUDING EXIF DATA BACKGROUND_PAGE CONTEXTMENUS TABS CHROME.CONTEXTMENUS.CREATE CHROME.TABS.GET CHROME.TABS.GETCURRENT CHROME.WINDOWS.CREATE CHROME.WINDOWS.UPDATE", <newline>       "source_files": [ <newline>         "background.html", <newline>+        "background.js", <newline>         "imageinfo\/binaryajax.js", <newline>         "imageinfo\/exif.js", <newline>         "imageinfo\/imageinfo.js", <newline>+        "info.css", <newline>         "info.html", <newline>+        "info.js", <newline>         "manifest.json" <newline>       ], <newline>-      "source_hash": "c746d9114348f4b414c1ec05e988e2807feb963a", <newline>+      "source_hash": "3a61d1ad772ef01e0d3cc01a8bedbe7da452dd0b", <newline>       "zip_path": "examples\/extensions\/imageinfo.zip" <newline>     }, <newline>     {
d6ab1db36f1621952bf4ac1bbb9b6463bb8cc14	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 14 19:33:43 2011 +0000	Adding `content_security_policy` to proxy sample extension. TEST=	92644		http://codereview.chromium.org/8273036	svn://svn.chromium.org/chrome/trunk/src@105542 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index d5f6dea..82a1d31 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -1873,8 +1873,11 @@ <newline>       "source_files": [ <newline>         "_locales\/en\/messages.json", <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json", <newline>+        "popup.css", <newline>         "popup.html", <newline>+        "popup.js", <newline>         "proxy_error_handler.js", <newline>         "proxy_form_controller.js", <newline>         "test\/jsunittest.js", <newline>@@ -1882,7 +1885,7 @@ <newline>         "test\/proxy_form_controller_test.js", <newline>         "test\/unittest.css" <newline>       ], <newline>-      "source_hash": "9378cbaff5c4aa3def4a92824b88146335feac44", <newline>+      "source_hash": "10dfb898ef11aa9507bb07bcaa7cca5c51879f19", <newline>       "zip_path": "examples\/extensions\/proxy_configuration.zip" <newline>     }, <newline>     {
658a090424e4ac55e4ac3671ea1efb3c3de64d1	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 14 19:33:43 2011 +0000	Adding `content_security_policy` to proxy sample extension. TEST=	92644		http://codereview.chromium.org/8273036	svn://svn.chromium.org/chrome/trunk/src@105542 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/samples.json b/chrome/common/extensions/docs/samples.json <newline>index d5f6dea..82a1d31 100644 <newline>--- a/chrome/common/extensions/docs/samples.json <newline>+++ b/chrome/common/extensions/docs/samples.json <newline>@@ -1873,8 +1873,11 @@ <newline>       "source_files": [ <newline>         "_locales\/en\/messages.json", <newline>         "background.html", <newline>+        "background.js", <newline>         "manifest.json", <newline>+        "popup.css", <newline>         "popup.html", <newline>+        "popup.js", <newline>         "proxy_error_handler.js", <newline>         "proxy_form_controller.js", <newline>         "test\/jsunittest.js", <newline>@@ -1882,7 +1885,7 @@ <newline>         "test\/proxy_form_controller_test.js", <newline>         "test\/unittest.css" <newline>       ], <newline>-      "source_hash": "9378cbaff5c4aa3def4a92824b88146335feac44", <newline>+      "source_hash": "10dfb898ef11aa9507bb07bcaa7cca5c51879f19", <newline>       "zip_path": "examples\/extensions\/proxy_configuration.zip" <newline>     }, <newline>     {
1e12a3731d7d7907374432d3de56b3dc2f8864e	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Oct 13 17:43:02 2011 +0000	Add Content-security-policy to chrome://imageburner			http://codereview.chromium.org/8221023	svn://svn.chromium.org/chrome/trunk/src@105326 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/chromeos/imageburner/imageburner_ui.cc b/chrome/browser/ui/webui/chromeos/imageburner/imageburner_ui.cc <newline>index f038f55..4ff9ba9 100644 <newline>--- a/chrome/browser/ui/webui/chromeos/imageburner/imageburner_ui.cc <newline>+++ b/chrome/browser/ui/webui/chromeos/imageburner/imageburner_ui.cc <newline>@@ -14,6 +14,7 @@ <newline> #include "base/values.h" <newline> #include "chrome/browser/chromeos/system/statistics_provider.h" <newline> #include "chrome/browser/profiles/profile.h" <newline>+#include "chrome/browser/ui/webui/chrome_web_ui_data_source.h" <newline> #include "chrome/common/jstemplate_builder.h" <newline> #include "chrome/common/time_format.h" <newline> #include "chrome/common/url_constants.h" <newline>@@ -25,114 +26,75 @@ <newline> #include "ui/base/resource/resource_bundle.h" <newline> #include "ui/base/text/bytes_formatting.h" <newline>-namespace imageburner { <newline>+namespace { <newline>-static const char kPropertyDevicePath[] = "devicePath"; <newline>-static const char kPropertyFilePath[] = "filePath"; <newline>-static const char kPropertyLabel[] = "label"; <newline>-static const char kPropertyPath[] = "path"; <newline>+const char kPropertyDevicePath[] = "devicePath"; <newline>+const char kPropertyFilePath[] = "filePath"; <newline>+const char kPropertyLabel[] = "label"; <newline>+const char kPropertyPath[] = "path"; <newline> // Name for hwid in machine statistics. <newline> const std::string kHwidStatistic = "hardware_class"; <newline>- <newline>-static const char kImageZipFileName[] = "chromeos_image.bin.zip"; <newline>+const char kImageZipFileName[] = "chromeos_image.bin.zip"; <newline> // 3.9GB. It is less than 4GB because true device size ussually varies a little. <newline>-static const uint64 kMinDeviceSize = <newline>-    static_cast<uint64>(3.9) * 1000 * 1000 * 1000; <newline>+const uint64 kMinDeviceSize = static_cast<uint64>(3.9) * 1000 * 1000 * 1000; <newline> // Link displayed on imageburner ui. <newline>-static const std::string kMoreInfoLink = <newline>+const std::string kMoreInfoLink = <newline>     "http://www.chromium.org/chromium-os/chromiumos-design-docs/recovery-mode"; <newline>-//////////////////////////////////////////////////////////////////////////////// <newline>-// <newline>-// UIHTMLSource <newline>-// <newline>-//////////////////////////////////////////////////////////////////////////////// <newline>- <newline>-class UIHTMLSource : public ChromeURLDataManager::DataSource { <newline>- public: <newline>-  UIHTMLSource() <newline>-      : DataSource(chrome::kChromeUIImageBurnerHost, MessageLoop::current()) { <newline>-  } <newline>+ChromeWebUIDataSource *CreateImageburnerUIHTMLSource() { <newline>+  ChromeWebUIDataSource *source = <newline>+      new ChromeWebUIDataSource(chrome::kChromeUIImageBurnerHost); <newline>+ <newline>+    source->AddLocalizedString("headerTitle", IDS_IMAGEBURN_HEADER_TITLE); <newline>+    source->AddLocalizedString("headerDescription", <newline>+                               IDS_IMAGEBURN_HEADER_DESCRIPTION); <newline>+    source->AddLocalizedString("headerLink", IDS_IMAGEBURN_HEADER_LINK); <newline>+    source->AddLocalizedString("statusDevicesNone", <newline>+                               IDS_IMAGEBURN_NO_DEVICES_STATUS); <newline>+    source->AddLocalizedString("warningDevicesNone", <newline>+                               IDS_IMAGEBURN_NO_DEVICES_WARNING); <newline>+    source->AddLocalizedString("statusDevicesMultiple", <newline>+                               IDS_IMAGEBURN_MUL_DEVICES_STATUS); <newline>+    source->AddLocalizedString("statusDeviceUSB", <newline>+                               IDS_IMAGEBURN_USB_DEVICE_STATUS); <newline>+    source->AddLocalizedString("statusDeviceSD", <newline>+                               IDS_IMAGEBURN_SD_DEVICE_STATUS); <newline>+    source->AddLocalizedString("warningDevices", <newline>+                               IDS_IMAGEBURN_DEVICES_WARNING); <newline>+    source->AddLocalizedString("statusNoConnection", <newline>+                               IDS_IMAGEBURN_NO_CONNECTION_STATUS); <newline>+    source->AddLocalizedString("warningNoConnection", <newline>+                               IDS_IMAGEBURN_NO_CONNECTION_WARNING); <newline>+    source->AddLocalizedString("statusNoSpace", <newline>+                               IDS_IMAGEBURN_INSUFFICIENT_SPACE_STATUS); <newline>+    source->AddLocalizedString("warningNoSpace", <newline>+                               IDS_IMAGEBURN_INSUFFICIENT_SPACE_WARNING); <newline>+    source->AddLocalizedString("statusDownloading", <newline>+                               IDS_IMAGEBURN_DOWNLOADING_STATUS); <newline>+    source->AddLocalizedString("statusUnzip", IDS_IMAGEBURN_UNZIP_STATUS); <newline>+    source->AddLocalizedString("statusBurn", IDS_IMAGEBURN_BURN_STATUS); <newline>+    source->AddLocalizedString("statusError", IDS_IMAGEBURN_ERROR_STATUS); <newline>+    source->AddLocalizedString("statusSuccess", IDS_IMAGEBURN_SUCCESS_STATUS); <newline>+    source->AddLocalizedString("warningSuccess", IDS_IMAGEBURN_SUCCESS_DESC); <newline>+    source->AddLocalizedString("title", IDS_IMAGEBURN_PAGE_TITLE); <newline>+    source->AddLocalizedString("confirmButton", IDS_IMAGEBURN_CONFIRM_BUTTON); <newline>+    source->AddLocalizedString("cancelButton", IDS_IMAGEBURN_CANCEL_BUTTON); <newline>+    source->AddLocalizedString("retryButton", IDS_IMAGEBURN_RETRY_BUTTON); <newline>+    source->AddString("moreInfoLink", ASCIIToUTF16(kMoreInfoLink)); <newline>+ <newline>+    source->set_json_path("strings.js"); <newline>+    source->add_resource_path("image_burner.js", IDR_IMAGEBURNER_JS); <newline>+    source->set_default_resource(IDR_IMAGEBURNER_HTML); <newline>+    return source; <newline>+} <newline>+ <newline>+}  // namespace <newline>-  // Called when the network layer has requested a resource underneath <newline>-  // the path we registered. <newline>-  virtual void StartDataRequest(const std::string& path, <newline>-                                bool is_incognito, <newline>-                                int request_id) { <newline>-    DictionaryValue localized_strings; <newline>-    localized_strings.SetString("headerTitle", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_HEADER_TITLE)); <newline>-    localized_strings.SetString("headerDescription", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_HEADER_DESCRIPTION)); <newline>-    localized_strings.SetString("headerLink", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_HEADER_LINK)); <newline>-    localized_strings.SetString("statusDevicesNone", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_NO_DEVICES_STATUS)); <newline>-    localized_strings.SetString("warningDevicesNone", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_NO_DEVICES_WARNING)); <newline>-    localized_strings.SetString("statusDevicesMultiple", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_MUL_DEVICES_STATUS)); <newline>-    localized_strings.SetString("statusDeviceUSB", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_USB_DEVICE_STATUS)); <newline>-    localized_strings.SetString("statusDeviceSD", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_SD_DEVICE_STATUS)); <newline>-    localized_strings.SetString("warningDevices", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_DEVICES_WARNING)); <newline>-    localized_strings.SetString("statusNoConnection", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_NO_CONNECTION_STATUS)); <newline>-    localized_strings.SetString("warningNoConnection", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_NO_CONNECTION_WARNING)); <newline>-    localized_strings.SetString("statusNoSpace", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_INSUFFICIENT_SPACE_STATUS)); <newline>-    localized_strings.SetString("warningNoSpace", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_INSUFFICIENT_SPACE_WARNING)); <newline>-    localized_strings.SetString("statusDownloading", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_DOWNLOADING_STATUS)); <newline>-    localized_strings.SetString("statusUnzip", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_UNZIP_STATUS)); <newline>-    localized_strings.SetString("statusBurn", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_BURN_STATUS)); <newline>-    localized_strings.SetString("statusError", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_ERROR_STATUS)); <newline>-    localized_strings.SetString("statusSuccess", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_SUCCESS_STATUS)); <newline>-    localized_strings.SetString("warningSuccess", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_SUCCESS_DESC)); <newline>-    localized_strings.SetString("title", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_PAGE_TITLE)); <newline>-    localized_strings.SetString("confirmButton", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_CONFIRM_BUTTON)); <newline>-    localized_strings.SetString("cancelButton", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_CANCEL_BUTTON)); <newline>-    localized_strings.SetString("retryButton", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_RETRY_BUTTON)); <newline>- <newline>-    localized_strings.SetString("moreInfoLink", kMoreInfoLink); <newline>- <newline>-    SetFontAndTextDirection(&localized_strings); <newline>- <newline>-    static const base::StringPiece imageburn_html( <newline>-        ResourceBundle::GetSharedInstance().GetRawDataResource( <newline>-        IDR_IMAGEBURNER_HTML)); <newline>-    std::string full_html = jstemplate_builder::GetTemplatesHtml( <newline>-        imageburn_html, &localized_strings, "more-info-link"); <newline>- <newline>-    SendResponse(request_id, base::RefCountedString::TakeString(&full_html)); <newline>-  } <newline>- <newline>-  virtual std::string GetMimeType(const std::string&) const { <newline>-    return "text/html"; <newline>-  } <newline>- <newline>- private: <newline>-  virtual ~UIHTMLSource() {} <newline>- <newline>-  DISALLOW_COPY_AND_ASSIGN(UIHTMLSource); <newline>-}; <newline>+namespace imageburner { <newline> //////////////////////////////////////////////////////////////////////////////// <newline> // <newline>@@ -670,7 +632,8 @@ bool WebUIHandler::CheckNetwork() { <newline> ImageBurnUI::ImageBurnUI(TabContents* contents) : ChromeWebUI(contents) { <newline>   imageburner::WebUIHandler* handler = new imageburner::WebUIHandler(contents); <newline>   AddMessageHandler((handler)->Attach(this)); <newline>-  imageburner::UIHTMLSource* html_source = new imageburner::UIHTMLSource(); <newline>+ <newline>   Profile* profile = Profile::FromBrowserContext(contents->browser_context()); <newline>-  profile->GetChromeURLDataManager()->AddDataSource(html_source); <newline>+  profile->GetChromeURLDataManager()->AddDataSource( <newline>+      CreateImageburnerUIHTMLSource()); <newline> }
e2fc46f95aa8a2d22841baa76ad887cd4c020e2	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Oct 13 17:43:02 2011 +0000	Add Content-security-policy to chrome://imageburner			http://codereview.chromium.org/8221023	svn://svn.chromium.org/chrome/trunk/src@105326 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/chromeos/imageburner/imageburner_ui.cc b/chrome/browser/ui/webui/chromeos/imageburner/imageburner_ui.cc <newline>index f038f55..4ff9ba9 100644 <newline>--- a/chrome/browser/ui/webui/chromeos/imageburner/imageburner_ui.cc <newline>+++ b/chrome/browser/ui/webui/chromeos/imageburner/imageburner_ui.cc <newline>@@ -14,6 +14,7 @@ <newline> #include "base/values.h" <newline> #include "chrome/browser/chromeos/system/statistics_provider.h" <newline> #include "chrome/browser/profiles/profile.h" <newline>+#include "chrome/browser/ui/webui/chrome_web_ui_data_source.h" <newline> #include "chrome/common/jstemplate_builder.h" <newline> #include "chrome/common/time_format.h" <newline> #include "chrome/common/url_constants.h" <newline>@@ -25,114 +26,75 @@ <newline> #include "ui/base/resource/resource_bundle.h" <newline> #include "ui/base/text/bytes_formatting.h" <newline>-namespace imageburner { <newline>+namespace { <newline>-static const char kPropertyDevicePath[] = "devicePath"; <newline>-static const char kPropertyFilePath[] = "filePath"; <newline>-static const char kPropertyLabel[] = "label"; <newline>-static const char kPropertyPath[] = "path"; <newline>+const char kPropertyDevicePath[] = "devicePath"; <newline>+const char kPropertyFilePath[] = "filePath"; <newline>+const char kPropertyLabel[] = "label"; <newline>+const char kPropertyPath[] = "path"; <newline> // Name for hwid in machine statistics. <newline> const std::string kHwidStatistic = "hardware_class"; <newline>- <newline>-static const char kImageZipFileName[] = "chromeos_image.bin.zip"; <newline>+const char kImageZipFileName[] = "chromeos_image.bin.zip"; <newline> // 3.9GB. It is less than 4GB because true device size ussually varies a little. <newline>-static const uint64 kMinDeviceSize = <newline>-    static_cast<uint64>(3.9) * 1000 * 1000 * 1000; <newline>+const uint64 kMinDeviceSize = static_cast<uint64>(3.9) * 1000 * 1000 * 1000; <newline> // Link displayed on imageburner ui. <newline>-static const std::string kMoreInfoLink = <newline>+const std::string kMoreInfoLink = <newline>     "http://www.chromium.org/chromium-os/chromiumos-design-docs/recovery-mode"; <newline>-//////////////////////////////////////////////////////////////////////////////// <newline>-// <newline>-// UIHTMLSource <newline>-// <newline>-//////////////////////////////////////////////////////////////////////////////// <newline>- <newline>-class UIHTMLSource : public ChromeURLDataManager::DataSource { <newline>- public: <newline>-  UIHTMLSource() <newline>-      : DataSource(chrome::kChromeUIImageBurnerHost, MessageLoop::current()) { <newline>-  } <newline>+ChromeWebUIDataSource *CreateImageburnerUIHTMLSource() { <newline>+  ChromeWebUIDataSource *source = <newline>+      new ChromeWebUIDataSource(chrome::kChromeUIImageBurnerHost); <newline>+ <newline>+    source->AddLocalizedString("headerTitle", IDS_IMAGEBURN_HEADER_TITLE); <newline>+    source->AddLocalizedString("headerDescription", <newline>+                               IDS_IMAGEBURN_HEADER_DESCRIPTION); <newline>+    source->AddLocalizedString("headerLink", IDS_IMAGEBURN_HEADER_LINK); <newline>+    source->AddLocalizedString("statusDevicesNone", <newline>+                               IDS_IMAGEBURN_NO_DEVICES_STATUS); <newline>+    source->AddLocalizedString("warningDevicesNone", <newline>+                               IDS_IMAGEBURN_NO_DEVICES_WARNING); <newline>+    source->AddLocalizedString("statusDevicesMultiple", <newline>+                               IDS_IMAGEBURN_MUL_DEVICES_STATUS); <newline>+    source->AddLocalizedString("statusDeviceUSB", <newline>+                               IDS_IMAGEBURN_USB_DEVICE_STATUS); <newline>+    source->AddLocalizedString("statusDeviceSD", <newline>+                               IDS_IMAGEBURN_SD_DEVICE_STATUS); <newline>+    source->AddLocalizedString("warningDevices", <newline>+                               IDS_IMAGEBURN_DEVICES_WARNING); <newline>+    source->AddLocalizedString("statusNoConnection", <newline>+                               IDS_IMAGEBURN_NO_CONNECTION_STATUS); <newline>+    source->AddLocalizedString("warningNoConnection", <newline>+                               IDS_IMAGEBURN_NO_CONNECTION_WARNING); <newline>+    source->AddLocalizedString("statusNoSpace", <newline>+                               IDS_IMAGEBURN_INSUFFICIENT_SPACE_STATUS); <newline>+    source->AddLocalizedString("warningNoSpace", <newline>+                               IDS_IMAGEBURN_INSUFFICIENT_SPACE_WARNING); <newline>+    source->AddLocalizedString("statusDownloading", <newline>+                               IDS_IMAGEBURN_DOWNLOADING_STATUS); <newline>+    source->AddLocalizedString("statusUnzip", IDS_IMAGEBURN_UNZIP_STATUS); <newline>+    source->AddLocalizedString("statusBurn", IDS_IMAGEBURN_BURN_STATUS); <newline>+    source->AddLocalizedString("statusError", IDS_IMAGEBURN_ERROR_STATUS); <newline>+    source->AddLocalizedString("statusSuccess", IDS_IMAGEBURN_SUCCESS_STATUS); <newline>+    source->AddLocalizedString("warningSuccess", IDS_IMAGEBURN_SUCCESS_DESC); <newline>+    source->AddLocalizedString("title", IDS_IMAGEBURN_PAGE_TITLE); <newline>+    source->AddLocalizedString("confirmButton", IDS_IMAGEBURN_CONFIRM_BUTTON); <newline>+    source->AddLocalizedString("cancelButton", IDS_IMAGEBURN_CANCEL_BUTTON); <newline>+    source->AddLocalizedString("retryButton", IDS_IMAGEBURN_RETRY_BUTTON); <newline>+    source->AddString("moreInfoLink", ASCIIToUTF16(kMoreInfoLink)); <newline>+ <newline>+    source->set_json_path("strings.js"); <newline>+    source->add_resource_path("image_burner.js", IDR_IMAGEBURNER_JS); <newline>+    source->set_default_resource(IDR_IMAGEBURNER_HTML); <newline>+    return source; <newline>+} <newline>+ <newline>+}  // namespace <newline>-  // Called when the network layer has requested a resource underneath <newline>-  // the path we registered. <newline>-  virtual void StartDataRequest(const std::string& path, <newline>-                                bool is_incognito, <newline>-                                int request_id) { <newline>-    DictionaryValue localized_strings; <newline>-    localized_strings.SetString("headerTitle", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_HEADER_TITLE)); <newline>-    localized_strings.SetString("headerDescription", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_HEADER_DESCRIPTION)); <newline>-    localized_strings.SetString("headerLink", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_HEADER_LINK)); <newline>-    localized_strings.SetString("statusDevicesNone", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_NO_DEVICES_STATUS)); <newline>-    localized_strings.SetString("warningDevicesNone", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_NO_DEVICES_WARNING)); <newline>-    localized_strings.SetString("statusDevicesMultiple", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_MUL_DEVICES_STATUS)); <newline>-    localized_strings.SetString("statusDeviceUSB", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_USB_DEVICE_STATUS)); <newline>-    localized_strings.SetString("statusDeviceSD", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_SD_DEVICE_STATUS)); <newline>-    localized_strings.SetString("warningDevices", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_DEVICES_WARNING)); <newline>-    localized_strings.SetString("statusNoConnection", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_NO_CONNECTION_STATUS)); <newline>-    localized_strings.SetString("warningNoConnection", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_NO_CONNECTION_WARNING)); <newline>-    localized_strings.SetString("statusNoSpace", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_INSUFFICIENT_SPACE_STATUS)); <newline>-    localized_strings.SetString("warningNoSpace", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_INSUFFICIENT_SPACE_WARNING)); <newline>-    localized_strings.SetString("statusDownloading", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_DOWNLOADING_STATUS)); <newline>-    localized_strings.SetString("statusUnzip", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_UNZIP_STATUS)); <newline>-    localized_strings.SetString("statusBurn", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_BURN_STATUS)); <newline>-    localized_strings.SetString("statusError", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_ERROR_STATUS)); <newline>-    localized_strings.SetString("statusSuccess", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_SUCCESS_STATUS)); <newline>-    localized_strings.SetString("warningSuccess", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_SUCCESS_DESC)); <newline>-    localized_strings.SetString("title", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_PAGE_TITLE)); <newline>-    localized_strings.SetString("confirmButton", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_CONFIRM_BUTTON)); <newline>-    localized_strings.SetString("cancelButton", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_CANCEL_BUTTON)); <newline>-    localized_strings.SetString("retryButton", <newline>-        l10n_util::GetStringUTF16(IDS_IMAGEBURN_RETRY_BUTTON)); <newline>- <newline>-    localized_strings.SetString("moreInfoLink", kMoreInfoLink); <newline>- <newline>-    SetFontAndTextDirection(&localized_strings); <newline>- <newline>-    static const base::StringPiece imageburn_html( <newline>-        ResourceBundle::GetSharedInstance().GetRawDataResource( <newline>-        IDR_IMAGEBURNER_HTML)); <newline>-    std::string full_html = jstemplate_builder::GetTemplatesHtml( <newline>-        imageburn_html, &localized_strings, "more-info-link"); <newline>- <newline>-    SendResponse(request_id, base::RefCountedString::TakeString(&full_html)); <newline>-  } <newline>- <newline>-  virtual std::string GetMimeType(const std::string&) const { <newline>-    return "text/html"; <newline>-  } <newline>- <newline>- private: <newline>-  virtual ~UIHTMLSource() {} <newline>- <newline>-  DISALLOW_COPY_AND_ASSIGN(UIHTMLSource); <newline>-}; <newline>+namespace imageburner { <newline> //////////////////////////////////////////////////////////////////////////////// <newline> // <newline>@@ -670,7 +632,8 @@ bool WebUIHandler::CheckNetwork() { <newline> ImageBurnUI::ImageBurnUI(TabContents* contents) : ChromeWebUI(contents) { <newline>   imageburner::WebUIHandler* handler = new imageburner::WebUIHandler(contents); <newline>   AddMessageHandler((handler)->Attach(this)); <newline>-  imageburner::UIHTMLSource* html_source = new imageburner::UIHTMLSource(); <newline>+ <newline>   Profile* profile = Profile::FromBrowserContext(contents->browser_context()); <newline>-  profile->GetChromeURLDataManager()->AddDataSource(html_source); <newline>+  profile->GetChromeURLDataManager()->AddDataSource( <newline>+      CreateImageburnerUIHTMLSource()); <newline> }
b188bf662c20ffdb2ca0ab4a3d90441d1e53051	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 5 18:03:04 2011 +0000	Replace <meta> tag with header for content-security-policy on chrome:// pages. By default, all chrome:// pages will get CSP with a whitelist of the exceptions.	98877		http://codereview.chromium.org/8124010	svn://svn.chromium.org/chrome/trunk/src@104134 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index aa5dcee..a29df1e 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -43,7 +43,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://credits': { 'title': 'Credits', 'CSP': False }, <newline>     'chrome://downloads': { 'title': 'Downloads' }, <newline>     'chrome://dns': { 'title': 'About DNS' }, <newline>-    'chrome://settings/extensionSettings': { 'title': 'Extensions' }, <newline>+    'chrome://settings/extensions': { 'title': 'Extensions' }, <newline>     'chrome://flags': {}, <newline>     'chrome://flash': {}, <newline>     'chrome://gpu-internals': {}, <newline>@@ -58,11 +58,11 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://plugins': { 'title': 'Plug-ins' }, <newline>     'chrome://sessions': { 'title': 'Sessions' }, <newline>     'chrome://settings': { 'title': 'Preferences - Basics' }, <newline>-    'chrome://stats': { 'CSP': False }, <newline>+    'chrome://stats': {}, <newline>     'chrome://sync': { 'title': 'Sync Internals' }, <newline>     'chrome://sync-internals': { 'title': 'Sync Internals' }, <newline>     'chrome://tasks': { 'title': 'Task Manager - Chromium' }, <newline>-    'chrome://terms': { 'CSP': False }, <newline>+    'chrome://terms': {}, <newline>     'chrome://textfields': { 'title': 'chrome://textfields', 'CSP': False }, <newline>     'chrome://version': { 'title': 'About Version' }, <newline>     'chrome://view-http-cache': {}, <newline>@@ -281,10 +281,10 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>       self.assertEqual(expected_title, actual_title) <newline>       include_list = [] <newline>       exclude_list = [] <newline>-      if 'CSP' in properties and not properties['CSP']: <newline>+      no_csp = 'CSP' in properties and not properties['CSP'] <newline>+      if no_csp: <newline>         exclude_list.extend(['X-WebKit-CSP']) <newline>       else: <newline>-        include_list.extend(['X-WebKit-CSP']) <newline>         exclude_list.extend(['<script>', 'onclick=', 'onload=', <newline>                              'onchange=', 'onsubmit=', 'javascript:']) <newline>       if 'includes' in properties: <newline>@@ -293,6 +293,19 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>         exclude_list.extend(properties['exlcudes']) <newline>       test_utils.StringContentCheck(self, self.GetTabContents(), <newline>                                     include_list, exclude_list) <newline>+      result = self.ExecuteJavascript(""" <newline>+          var r = 'blocked'; <newline>+          var f = 'executed'; <newline>+          var s = document.createElement('script'); <newline>+          s.textContent = 'r = f'; <newline>+          document.body.appendChild(s); <newline>+          window.domAutomationController.send(r); <newline>+        """) <newline>+      logging.debug('has csp %s, result %s.' % (not no_csp, result)) <newline>+      if no_csp: <newline>+        self.assertEqual(result, 'executed'); <newline>+      else: <newline>+        self.assertEqual(result, 'blocked'); <newline>   def testAboutAppCacheTab(self): <newline>     """Test App Cache tab to confirm about page populates caches."""
9e6c4c68c1d6f8cf3ebb0851edf3a0e90109f7b	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 5 18:03:04 2011 +0000	Replace <meta> tag with header for content-security-policy on chrome:// pages. By default, all chrome:// pages will get CSP with a whitelist of the exceptions.	98877		http://codereview.chromium.org/8124010	svn://svn.chromium.org/chrome/trunk/src@104134 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index aa5dcee..a29df1e 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -43,7 +43,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://credits': { 'title': 'Credits', 'CSP': False }, <newline>     'chrome://downloads': { 'title': 'Downloads' }, <newline>     'chrome://dns': { 'title': 'About DNS' }, <newline>-    'chrome://settings/extensionSettings': { 'title': 'Extensions' }, <newline>+    'chrome://settings/extensions': { 'title': 'Extensions' }, <newline>     'chrome://flags': {}, <newline>     'chrome://flash': {}, <newline>     'chrome://gpu-internals': {}, <newline>@@ -58,11 +58,11 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://plugins': { 'title': 'Plug-ins' }, <newline>     'chrome://sessions': { 'title': 'Sessions' }, <newline>     'chrome://settings': { 'title': 'Preferences - Basics' }, <newline>-    'chrome://stats': { 'CSP': False }, <newline>+    'chrome://stats': {}, <newline>     'chrome://sync': { 'title': 'Sync Internals' }, <newline>     'chrome://sync-internals': { 'title': 'Sync Internals' }, <newline>     'chrome://tasks': { 'title': 'Task Manager - Chromium' }, <newline>-    'chrome://terms': { 'CSP': False }, <newline>+    'chrome://terms': {}, <newline>     'chrome://textfields': { 'title': 'chrome://textfields', 'CSP': False }, <newline>     'chrome://version': { 'title': 'About Version' }, <newline>     'chrome://view-http-cache': {}, <newline>@@ -281,10 +281,10 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>       self.assertEqual(expected_title, actual_title) <newline>       include_list = [] <newline>       exclude_list = [] <newline>-      if 'CSP' in properties and not properties['CSP']: <newline>+      no_csp = 'CSP' in properties and not properties['CSP'] <newline>+      if no_csp: <newline>         exclude_list.extend(['X-WebKit-CSP']) <newline>       else: <newline>-        include_list.extend(['X-WebKit-CSP']) <newline>         exclude_list.extend(['<script>', 'onclick=', 'onload=', <newline>                              'onchange=', 'onsubmit=', 'javascript:']) <newline>       if 'includes' in properties: <newline>@@ -293,6 +293,19 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>         exclude_list.extend(properties['exlcudes']) <newline>       test_utils.StringContentCheck(self, self.GetTabContents(), <newline>                                     include_list, exclude_list) <newline>+      result = self.ExecuteJavascript(""" <newline>+          var r = 'blocked'; <newline>+          var f = 'executed'; <newline>+          var s = document.createElement('script'); <newline>+          s.textContent = 'r = f'; <newline>+          document.body.appendChild(s); <newline>+          window.domAutomationController.send(r); <newline>+        """) <newline>+      logging.debug('has csp %s, result %s.' % (not no_csp, result)) <newline>+      if no_csp: <newline>+        self.assertEqual(result, 'executed'); <newline>+      else: <newline>+        self.assertEqual(result, 'blocked'); <newline>   def testAboutAppCacheTab(self): <newline>     """Test App Cache tab to confirm about page populates caches."""
bfc853e51f6d680431be418f2702a4dfe925418	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Oct 3 16:47:26 2011 +0000	Add content-security-policy directive to chrome://hung-renderer.  WebUI pages should specify CSP as a second line of defense against XSS vulnerabilities.			http://codereview.chromium.org/8103008	svn://svn.chromium.org/chrome/trunk/src@103727 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/hung_renderer_dialog.html b/chrome/browser/resources/hung_renderer_dialog.html <newline>index 4c29aa3..16e7558 100644 <newline>--- a/chrome/browser/resources/hung_renderer_dialog.html <newline>+++ b/chrome/browser/resources/hung_renderer_dialog.html <newline>@@ -3,15 +3,16 @@ <newline>   <head> <newline>     <meta charset="utf-8"> <newline>     <title i18n-content="title"></title> <newline>+    <include src="content_security_policy.html"/> <newline>     <link rel="stylesheet" href="hung_renderer_dialog.css"> <newline>     <link rel="stylesheet" href="chrome://resources/css/button.css"> <newline>     <link rel="stylesheet" href="chrome://resources/css/chrome_shared.css"> <newline>-    <script src="strings.js"></script> <newline>+    <script src="chrome://hung-renderer/strings.js"></script> <newline>     <script src="chrome://resources/js/cr.js"></script> <newline>     <script src="chrome://resources/js/cr/ui.js"></script> <newline>     <script src="chrome://resources/js/i18n_template.js"></script> <newline>     <script src="chrome://resources/js/util.js"></script> <newline>-    <script src="hung_renderer_dialog.js"></script> <newline>+    <script src="chrome://hung-renderer/hung_renderer_dialog.js"></script> <newline>   </head> <newline>   <body i18n-values=".style.fontFamily:fontfamily;.style.fontSize:fontsize">
cf25d9e567a65d65ce8253057cc51183c1fff62	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Oct 3 16:47:26 2011 +0000	Add content-security-policy directive to chrome://hung-renderer.  WebUI pages should specify CSP as a second line of defense against XSS vulnerabilities.			http://codereview.chromium.org/8103008	svn://svn.chromium.org/chrome/trunk/src@103727 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/hung_renderer_dialog.html b/chrome/browser/resources/hung_renderer_dialog.html <newline>index 4c29aa3..16e7558 100644 <newline>--- a/chrome/browser/resources/hung_renderer_dialog.html <newline>+++ b/chrome/browser/resources/hung_renderer_dialog.html <newline>@@ -3,15 +3,16 @@ <newline>   <head> <newline>     <meta charset="utf-8"> <newline>     <title i18n-content="title"></title> <newline>+    <include src="content_security_policy.html"/> <newline>     <link rel="stylesheet" href="hung_renderer_dialog.css"> <newline>     <link rel="stylesheet" href="chrome://resources/css/button.css"> <newline>     <link rel="stylesheet" href="chrome://resources/css/chrome_shared.css"> <newline>-    <script src="strings.js"></script> <newline>+    <script src="chrome://hung-renderer/strings.js"></script> <newline>     <script src="chrome://resources/js/cr.js"></script> <newline>     <script src="chrome://resources/js/cr/ui.js"></script> <newline>     <script src="chrome://resources/js/i18n_template.js"></script> <newline>     <script src="chrome://resources/js/util.js"></script> <newline>-    <script src="hung_renderer_dialog.js"></script> <newline>+    <script src="chrome://hung-renderer/hung_renderer_dialog.js"></script> <newline>   </head> <newline>   <body i18n-values=".style.fontFamily:fontfamily;.style.fontSize:fontsize">
0f09a5c2aeed57c8a7ed7951ce07e9552df098e	yzshen@chromium.org <yzshen@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Oct 1 01:09:08 2011 +0000	Check security origin before locking the mouse. Refuse to lock the mouse if the security origin of the document containing the requesting pepper plugin cannot access the security origin of the main frame document. TEST=None	41781		http://codereview.chromium.org/8070011	svn://svn.chromium.org/chrome/trunk/src@103607 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/ppapi/ppapi_plugin_instance.h b/webkit/plugins/ppapi/ppapi_plugin_instance.h <newline>index 6109278..a035b61 100644 <newline>--- a/webkit/plugins/ppapi/ppapi_plugin_instance.h <newline>+++ b/webkit/plugins/ppapi/ppapi_plugin_instance.h <newline>@@ -399,6 +399,10 @@ class PluginInstance : public base::RefCounted<PluginInstance>, <newline>   void DoSetCursor(WebKit::WebCursorInfo* cursor); <newline>+  // Checks if the security origin of the document containing this instance can <newline>+  // assess the security origin of the main frame document. <newline>+  bool CanAccessMainFrame() const; <newline>+ <newline>   PluginDelegate* delegate_; <newline>   scoped_refptr<PluginModule> module_; <newline>   scoped_ptr< ::ppapi::PPP_Instance_Combined> instance_interface_;
2f20eddc890f163148bd7dfcbcf93d78c469374	yzshen@chromium.org <yzshen@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Oct 1 01:09:08 2011 +0000	Check security origin before locking the mouse. Refuse to lock the mouse if the security origin of the document containing the requesting pepper plugin cannot access the security origin of the main frame document. TEST=None	41781		http://codereview.chromium.org/8070011	svn://svn.chromium.org/chrome/trunk/src@103607 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/ppapi/ppapi_plugin_instance.h b/webkit/plugins/ppapi/ppapi_plugin_instance.h <newline>index 6109278..a035b61 100644 <newline>--- a/webkit/plugins/ppapi/ppapi_plugin_instance.h <newline>+++ b/webkit/plugins/ppapi/ppapi_plugin_instance.h <newline>@@ -399,6 +399,10 @@ class PluginInstance : public base::RefCounted<PluginInstance>, <newline>   void DoSetCursor(WebKit::WebCursorInfo* cursor); <newline>+  // Checks if the security origin of the document containing this instance can <newline>+  // assess the security origin of the main frame document. <newline>+  bool CanAccessMainFrame() const; <newline>+ <newline>   PluginDelegate* delegate_; <newline>   scoped_refptr<PluginModule> module_; <newline>   scoped_ptr< ::ppapi::PPP_Instance_Combined> instance_interface_;
8325ea494334567f1bc90bf9ee09376ef02c619	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 30 20:55:31 2011 +0000	Apply content-security-policy directive to chrome://policy page.  WebUI pages should specify CSP as a second line of defense against XSS vulnerabilities.			http://codereview.chromium.org/8102003	svn://svn.chromium.org/chrome/trunk/src@103541 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/policy.html b/chrome/browser/resources/policy.html <newline>index f37f7f2..bb61d67 100644 <newline>--- a/chrome/browser/resources/policy.html <newline>+++ b/chrome/browser/resources/policy.html <newline>@@ -3,6 +3,7 @@ <newline> <head> <newline> <meta charset="utf-8"> <newline> <title i18n-content="policyTitle"></title> <newline>+<include src="content_security_policy.html"/> <newline> <link rel="stylesheet" href="chrome://resources/css/button.css"> <newline> <link rel="stylesheet" href="policy.css"> <newline> <link rel="stylesheet" href="webui.css">
f9efa9d71b19e41ac945cd194d37006e28a4591	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 30 20:55:31 2011 +0000	Apply content-security-policy directive to chrome://policy page.  WebUI pages should specify CSP as a second line of defense against XSS vulnerabilities.			http://codereview.chromium.org/8102003	svn://svn.chromium.org/chrome/trunk/src@103541 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/policy.html b/chrome/browser/resources/policy.html <newline>index f37f7f2..bb61d67 100644 <newline>--- a/chrome/browser/resources/policy.html <newline>+++ b/chrome/browser/resources/policy.html <newline>@@ -3,6 +3,7 @@ <newline> <head> <newline> <meta charset="utf-8"> <newline> <title i18n-content="policyTitle"></title> <newline>+<include src="content_security_policy.html"/> <newline> <link rel="stylesheet" href="chrome://resources/css/button.css"> <newline> <link rel="stylesheet" href="policy.css"> <newline> <link rel="stylesheet" href="webui.css">
2e0308b3407deb2b475b169432d644edaad6672	satorux@chromium.org <satorux@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 30 17:38:15 2011 +0000	Use stub CrosDBusService implementation on Linux desktop. This will silence spurious error messages like below. [4990:4995:4724647149:ERROR:bus.cc(340)] Failed to get the ownership of org.chromium.LibCrosService: Connection ":1.50" is not allowed to own the service "org.chromium.LibCrosService" due to security policies in the configuration file [4990:4990:4724693092:ERROR:proxy_resolution_service_provider.cc(222)] Failed to export org.chromium.LibCrosServiceInterface.ResolveNetworkProxy TEST=confirm that the errors are gone from Linux desktop, and the functionality works on chrome os.	chromium-os:20928		http://codereview.chromium.org/8073015	svn://svn.chromium.org/chrome/trunk/src@103487 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/dbus/cros_dbus_service.h b/chrome/browser/chromeos/dbus/cros_dbus_service.h <newline>index f60fc2b..2b6e0e4 100644 <newline>--- a/chrome/browser/chromeos/dbus/cros_dbus_service.h <newline>+++ b/chrome/browser/chromeos/dbus/cros_dbus_service.h <newline>@@ -61,35 +61,18 @@ class CrosDBusService { <newline>   virtual ~CrosDBusService(); <newline>   // Starts the D-Bus service. <newline>-  virtual void Start(); <newline>+  virtual void Start() = 0; <newline>   // Gets the instance. <newline>   static CrosDBusService* Get(dbus::Bus* bus); <newline>  private: <newline>-  explicit CrosDBusService(dbus::Bus* bus); <newline>- <newline>   // Gets the instance for testing. Takes the ownership of <newline>   // |proxy_resolution_service|. <newline>   friend class CrosDBusServiceTest; <newline>   static CrosDBusService* GetForTesting( <newline>       dbus::Bus* bus, <newline>       ServiceProviderInterface* proxy_resolution_service); <newline>- <newline>-  // Registers a service provider. This must be done before Start(). <newline>-  // |provider| will be owned by CrosDBusService. <newline>-  void RegisterServiceProvider(ServiceProviderInterface* provider); <newline>- <newline>-  // Returns true if the current thread is on the origin thread. <newline>-  bool OnOriginThread(); <newline>- <newline>-  bool service_started_; <newline>-  base::PlatformThreadId origin_thread_id_; <newline>-  dbus::Bus* bus_; <newline>-  scoped_refptr<dbus::ExportedObject> exported_object_; <newline>- <newline>-  // Service providers that form CrosDBusService. <newline>-  std::vector<scoped_refptr<ServiceProviderInterface> > service_providers_; <newline> }; <newline> }  // namespace
3ea7ae3af1be660a88bebc852e52ca416b27300	satorux@chromium.org <satorux@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 30 17:38:15 2011 +0000	Use stub CrosDBusService implementation on Linux desktop. This will silence spurious error messages like below. [4990:4995:4724647149:ERROR:bus.cc(340)] Failed to get the ownership of org.chromium.LibCrosService: Connection ":1.50" is not allowed to own the service "org.chromium.LibCrosService" due to security policies in the configuration file [4990:4990:4724693092:ERROR:proxy_resolution_service_provider.cc(222)] Failed to export org.chromium.LibCrosServiceInterface.ResolveNetworkProxy TEST=confirm that the errors are gone from Linux desktop, and the functionality works on chrome os.	chromium-os:20928		http://codereview.chromium.org/8073015	svn://svn.chromium.org/chrome/trunk/src@103487 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/dbus/cros_dbus_service.h b/chrome/browser/chromeos/dbus/cros_dbus_service.h <newline>index f60fc2b..2b6e0e4 100644 <newline>--- a/chrome/browser/chromeos/dbus/cros_dbus_service.h <newline>+++ b/chrome/browser/chromeos/dbus/cros_dbus_service.h <newline>@@ -61,35 +61,18 @@ class CrosDBusService { <newline>   virtual ~CrosDBusService(); <newline>   // Starts the D-Bus service. <newline>-  virtual void Start(); <newline>+  virtual void Start() = 0; <newline>   // Gets the instance. <newline>   static CrosDBusService* Get(dbus::Bus* bus); <newline>  private: <newline>-  explicit CrosDBusService(dbus::Bus* bus); <newline>- <newline>   // Gets the instance for testing. Takes the ownership of <newline>   // |proxy_resolution_service|. <newline>   friend class CrosDBusServiceTest; <newline>   static CrosDBusService* GetForTesting( <newline>       dbus::Bus* bus, <newline>       ServiceProviderInterface* proxy_resolution_service); <newline>- <newline>-  // Registers a service provider. This must be done before Start(). <newline>-  // |provider| will be owned by CrosDBusService. <newline>-  void RegisterServiceProvider(ServiceProviderInterface* provider); <newline>- <newline>-  // Returns true if the current thread is on the origin thread. <newline>-  bool OnOriginThread(); <newline>- <newline>-  bool service_started_; <newline>-  base::PlatformThreadId origin_thread_id_; <newline>-  dbus::Bus* bus_; <newline>-  scoped_refptr<dbus::ExportedObject> exported_object_; <newline>- <newline>-  // Service providers that form CrosDBusService. <newline>-  std::vector<scoped_refptr<ServiceProviderInterface> > service_providers_; <newline> }; <newline> }  // namespace
8fb69b8d864280ddc90d754ff5e77ab15a97aa9	grt@chromium.org <grt@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 23 20:48:58 2011 +0000	Fix in-use updates for Chrome Frame. On in-use updates, make a copy of the old chrome launcher's IE low rights elevation policy prior to registering the new npchrome_frame.dll so that running instances of IE can still launch Chrome. In so doing, I also removed elevation policy addition/removal code from the installer so that npchrome_frame.dll's {un,}registration code is the one and only place where this is done. TEST=Install a previous version of GCF, run IE and visit some page that activates GCF, update to a version of GCF containing this fix, then try to visit another page that will activate GCF.  If all goes well, you won't see an IE security prompt.	95810		http://codereview.chromium.org/7976045	svn://svn.chromium.org/chrome/trunk/src@102569 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/chrome_tab.cc b/chrome_frame/chrome_tab.cc <newline>index 7b80394..7cd7706 100644 <newline>--- a/chrome_frame/chrome_tab.cc <newline>+++ b/chrome_frame/chrome_tab.cc <newline>@@ -8,6 +8,7 @@ <newline> #include "chrome_tab.h"  // NOLINT <newline> #include <atlsecurity.h> <newline>+#include <objbase.h> <newline> #include "base/at_exit.h" <newline> #include "base/command_line.h" <newline>@@ -173,6 +174,13 @@ class ChromeTabModule : public CAtlDllModuleT<ChromeTabModule> { <newline>       DCHECK(SUCCEEDED(hr)); <newline>     } <newline>+    if (SUCCEEDED(hr)) { <newline>+      // Add the Chrome Frame CLSID. <newline>+      wchar_t cf_clsid[64]; <newline>+      StringFromGUID2(CLSID_ChromeFrame, &cf_clsid[0], arraysize(cf_clsid)); <newline>+      hr = registrar->AddReplacement(L"CHROME_FRAME_CLSID", &cf_clsid[0]); <newline>+    } <newline>+ <newline>     return hr; <newline>   } <newline>@@ -599,13 +607,10 @@ HRESULT RegisterActiveX(bool reg, bool is_system) { <newline> HRESULT RegisterElevationPolicy(bool reg, bool is_system) { <newline>   HRESULT hr = S_OK; <newline>-  if (reg && base::win::GetVersion() >= base::win::VERSION_VISTA) { <newline>+  if (base::win::GetVersion() >= base::win::VERSION_VISTA) { <newline>     // Register the elevation policy. This must succeed for Chrome Frame to <newline>     // be able launch Chrome when running in low-integrity IE. <newline>-    // Note that this is not done on unregistration, the installer will <newline>-    // explicitly remove the policy on uninstall. <newline>-    hr = _AtlModule.UpdateRegistryFromResourceS(IDR_CHROMEFRAME_ELEVATION, <newline>-                                                reg); <newline>+    hr = _AtlModule.UpdateRegistryFromResourceS(IDR_CHROMEFRAME_ELEVATION, reg); <newline>     if (SUCCEEDED(hr)) { <newline>       hr = RefreshElevationPolicy(); <newline>     }
48bdf233744cbac6de76f569c19614404443828	grt@chromium.org <grt@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 23 20:48:58 2011 +0000	Fix in-use updates for Chrome Frame. On in-use updates, make a copy of the old chrome launcher's IE low rights elevation policy prior to registering the new npchrome_frame.dll so that running instances of IE can still launch Chrome. In so doing, I also removed elevation policy addition/removal code from the installer so that npchrome_frame.dll's {un,}registration code is the one and only place where this is done. TEST=Install a previous version of GCF, run IE and visit some page that activates GCF, update to a version of GCF containing this fix, then try to visit another page that will activate GCF.  If all goes well, you won't see an IE security prompt.	95810		http://codereview.chromium.org/7976045	svn://svn.chromium.org/chrome/trunk/src@102569 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/chrome_tab.cc b/chrome_frame/chrome_tab.cc <newline>index 7b80394..7cd7706 100644 <newline>--- a/chrome_frame/chrome_tab.cc <newline>+++ b/chrome_frame/chrome_tab.cc <newline>@@ -8,6 +8,7 @@ <newline> #include "chrome_tab.h"  // NOLINT <newline> #include <atlsecurity.h> <newline>+#include <objbase.h> <newline> #include "base/at_exit.h" <newline> #include "base/command_line.h" <newline>@@ -173,6 +174,13 @@ class ChromeTabModule : public CAtlDllModuleT<ChromeTabModule> { <newline>       DCHECK(SUCCEEDED(hr)); <newline>     } <newline>+    if (SUCCEEDED(hr)) { <newline>+      // Add the Chrome Frame CLSID. <newline>+      wchar_t cf_clsid[64]; <newline>+      StringFromGUID2(CLSID_ChromeFrame, &cf_clsid[0], arraysize(cf_clsid)); <newline>+      hr = registrar->AddReplacement(L"CHROME_FRAME_CLSID", &cf_clsid[0]); <newline>+    } <newline>+ <newline>     return hr; <newline>   } <newline>@@ -599,13 +607,10 @@ HRESULT RegisterActiveX(bool reg, bool is_system) { <newline> HRESULT RegisterElevationPolicy(bool reg, bool is_system) { <newline>   HRESULT hr = S_OK; <newline>-  if (reg && base::win::GetVersion() >= base::win::VERSION_VISTA) { <newline>+  if (base::win::GetVersion() >= base::win::VERSION_VISTA) { <newline>     // Register the elevation policy. This must succeed for Chrome Frame to <newline>     // be able launch Chrome when running in low-integrity IE. <newline>-    // Note that this is not done on unregistration, the installer will <newline>-    // explicitly remove the policy on uninstall. <newline>-    hr = _AtlModule.UpdateRegistryFromResourceS(IDR_CHROMEFRAME_ELEVATION, <newline>-                                                reg); <newline>+    hr = _AtlModule.UpdateRegistryFromResourceS(IDR_CHROMEFRAME_ELEVATION, reg); <newline>     if (SUCCEEDED(hr)) { <newline>       hr = RefreshElevationPolicy(); <newline>     }
42243b157a638769700efde90f3f31b20bcd81d	ananta@chromium.org <ananta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Sep 17 00:02:27 2011 +0000	Fix a crash which would occur while dragging a URL to the bookmarks bar when a security interstitial was displayed. The crash occurred in DragLeave while dereferencing a NULL TabContentsWrapper. Fix is to initialize the wrapper member pointer very early in the DragEnter function. TEST=As described in the bug.	94799		http://codereview.chromium.org/7904030	svn://svn.chromium.org/chrome/trunk/src@101601 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/tab_contents/web_drop_target_win.cc b/chrome/browser/tab_contents/web_drop_target_win.cc <newline>index 98e60e4..d45902b 100644 <newline>--- a/chrome/browser/tab_contents/web_drop_target_win.cc <newline>+++ b/chrome/browser/tab_contents/web_drop_target_win.cc <newline>@@ -103,6 +103,10 @@ DWORD WebDropTarget::OnDragEnter(IDataObject* data_object, <newline>                                  DWORD effects) { <newline>   current_rvh_ = tab_contents_->render_view_host(); <newline>+  if (!tab_) { <newline>+    tab_ = TabContentsWrapper::GetCurrentWrapperForContents(tab_contents_); <newline>+    DCHECK(tab_); <newline>+  } <newline>   // Don't pass messages to the renderer if an interstitial page is showing <newline>   // because we don't want the interstitial page to navigate.  Instead, <newline>   // pass the messages on to a separate interstitial DropTarget handler. <newline>@@ -126,10 +130,6 @@ DWORD WebDropTarget::OnDragEnter(IDataObject* data_object, <newline>       gfx::Point(cursor_position.x, cursor_position.y), <newline>       web_drag_utils_win::WinDragOpMaskToWebDragOpMask(effects)); <newline>-  if (!tab_) { <newline>-    tab_ = TabContentsWrapper::GetCurrentWrapperForContents(tab_contents_); <newline>-    DCHECK(tab_); <newline>-  } <newline>   // This is non-null if tab_contents_ is showing an ExtensionWebUI with <newline>   // support for (at the moment experimental) drag and drop extensions. <newline>   if (tab_->bookmark_tab_helper()->GetBookmarkDragDelegate()) {
2b23338f5f774258e11dd1e7e86c6216ffbfb18	ananta@chromium.org <ananta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Sep 17 00:02:27 2011 +0000	Fix a crash which would occur while dragging a URL to the bookmarks bar when a security interstitial was displayed. The crash occurred in DragLeave while dereferencing a NULL TabContentsWrapper. Fix is to initialize the wrapper member pointer very early in the DragEnter function. TEST=As described in the bug.	94799		http://codereview.chromium.org/7904030	svn://svn.chromium.org/chrome/trunk/src@101601 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/tab_contents/web_drop_target_win.cc b/chrome/browser/tab_contents/web_drop_target_win.cc <newline>index 98e60e4..d45902b 100644 <newline>--- a/chrome/browser/tab_contents/web_drop_target_win.cc <newline>+++ b/chrome/browser/tab_contents/web_drop_target_win.cc <newline>@@ -103,6 +103,10 @@ DWORD WebDropTarget::OnDragEnter(IDataObject* data_object, <newline>                                  DWORD effects) { <newline>   current_rvh_ = tab_contents_->render_view_host(); <newline>+  if (!tab_) { <newline>+    tab_ = TabContentsWrapper::GetCurrentWrapperForContents(tab_contents_); <newline>+    DCHECK(tab_); <newline>+  } <newline>   // Don't pass messages to the renderer if an interstitial page is showing <newline>   // because we don't want the interstitial page to navigate.  Instead, <newline>   // pass the messages on to a separate interstitial DropTarget handler. <newline>@@ -126,10 +130,6 @@ DWORD WebDropTarget::OnDragEnter(IDataObject* data_object, <newline>       gfx::Point(cursor_position.x, cursor_position.y), <newline>       web_drag_utils_win::WinDragOpMaskToWebDragOpMask(effects)); <newline>-  if (!tab_) { <newline>-    tab_ = TabContentsWrapper::GetCurrentWrapperForContents(tab_contents_); <newline>-    DCHECK(tab_); <newline>-  } <newline>   // This is non-null if tab_contents_ is showing an ExtensionWebUI with <newline>   // support for (at the moment experimental) drag and drop extensions. <newline>   if (tab_->bookmark_tab_helper()->GetBookmarkDragDelegate()) {
60910079fc1e0b6932de721c5ea7828369c8998	nkostylev@chromium.org <nkostylev@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Sep 8 10:52:36 2011 +0000	[cros] Bring back security info link at EULA screen. TEST=Manual.	chromium-os:18773		http://codereview.chromium.org/7845016	svn://svn.chromium.org/chrome/trunk/src@100130 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/chromeos/login/oobe.html b/chrome/browser/resources/chromeos/login/oobe.html <newline>index a65a573..e827554 100644 <newline>--- a/chrome/browser/resources/chromeos/login/oobe.html <newline>+++ b/chrome/browser/resources/chromeos/login/oobe.html <newline>@@ -64,9 +64,10 @@ <newline>         <div id="button-strip" class="button-strip"></div> <newline>       </div> <newline>     </div> <newline>-  </div> <newline>-  <div id="security-info"> <newline>-    <a id="security-link" href="#" i18n-content="eulaSystemSecuritySetting"></a> <newline>+    <div id="security-info"> <newline>+      <a id="security-link" href="#" i18n-content="eulaSystemSecuritySetting"> <newline>+      </a> <newline>+    </div> <newline>   </div> <newline>   <div id="popup-overlay" hidden> <newline>     <div id="security-info-popup">
3d0768e00a91fb32b4de82f7961b92a4d119383	nkostylev@chromium.org <nkostylev@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Sep 8 10:52:36 2011 +0000	[cros] Bring back security info link at EULA screen. TEST=Manual.	chromium-os:18773		http://codereview.chromium.org/7845016	svn://svn.chromium.org/chrome/trunk/src@100130 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/chromeos/login/oobe.html b/chrome/browser/resources/chromeos/login/oobe.html <newline>index a65a573..e827554 100644 <newline>--- a/chrome/browser/resources/chromeos/login/oobe.html <newline>+++ b/chrome/browser/resources/chromeos/login/oobe.html <newline>@@ -64,9 +64,10 @@ <newline>         <div id="button-strip" class="button-strip"></div> <newline>       </div> <newline>     </div> <newline>-  </div> <newline>-  <div id="security-info"> <newline>-    <a id="security-link" href="#" i18n-content="eulaSystemSecuritySetting"></a> <newline>+    <div id="security-info"> <newline>+      <a id="security-link" href="#" i18n-content="eulaSystemSecuritySetting"> <newline>+      </a> <newline>+    </div> <newline>   </div> <newline>   <div id="popup-overlay" hidden> <newline>     <div id="security-info-popup">
6317efb71e4771bd8eaff90a4d33e63d98289a8	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Sep 6 17:17:23 2011 +0000	Rename REMOVE_COOKIES to REMOVE_SITE_DATA (which will explicitly include REMOVE_LSO_DATA). There's no case in the current codebase when we want to remove _only_ LSO data, and no case where we want to remove cookies, but _not_ LSO data. There are many instances of building removal masks that binary-OR REMOVE_LSO_DATA and REMOVE_COOKIES together; this CL formalizes that by dropping the extra enum value. Moreover, we talk about "cookies" differently when targeting users on the one hand, and developers on the other. REMOVE_COOKIES is a developer-facing name with a user-facing value, which is confusing. Renaming the current functionality to REMOVE_SITE_DATA is much more explicit, and will enable us to _just_ remove cookies at some point in the future via a REMOVE_COOKIES that actually means cookies. REMOVE_SITE_DATA has exactly the same semantics that REMOVE_COOKIES used to, with one exception: REMOVE_COOKIES included deleting cached strict transport security values. This functionality has been moved to REMOVE_CACHE. As a drive-by, this CL also moves a check against the kClearPluginLSODataEnabled pref out of webui (ClearBrowsingDataHandler) and into the BrowsingDataRemover itself, where it seems more likely to be effective. TEST=Nothing but removal cached transport-security values should change.	92628, 94334		http://codereview.chromium.org/7717023	svn://svn.chromium.org/chrome/trunk/src@99753 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/delete_chrome_history.cc b/chrome_frame/delete_chrome_history.cc <newline>index 419cfc9..e2476af 100644 <newline>--- a/chrome_frame/delete_chrome_history.cc <newline>+++ b/chrome_frame/delete_chrome_history.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -80,7 +80,7 @@ STDMETHODIMP DeleteChromeHistory::DeleteBrowsingHistory(DWORD flags) { <newline>   } <newline>   if (flags & DELETE_BROWSING_HISTORY_COOKIES) <newline>-    remove_mask_ |= BrowsingDataRemover::REMOVE_COOKIES; <newline>+    remove_mask_ |= BrowsingDataRemover::REMOVE_SITE_DATA; <newline>   if (flags & DELETE_BROWSING_HISTORY_TIF) <newline>     remove_mask_ |= BrowsingDataRemover::REMOVE_CACHE; <newline>   if (flags & DELETE_BROWSING_HISTORY_FORMDATA)
ceaa916f0c01a0d9f87ef77c91dc6bbce3b1979	mkwst@chromium.org <mkwst@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Sep 6 17:17:23 2011 +0000	Rename REMOVE_COOKIES to REMOVE_SITE_DATA (which will explicitly include REMOVE_LSO_DATA). There's no case in the current codebase when we want to remove _only_ LSO data, and no case where we want to remove cookies, but _not_ LSO data. There are many instances of building removal masks that binary-OR REMOVE_LSO_DATA and REMOVE_COOKIES together; this CL formalizes that by dropping the extra enum value. Moreover, we talk about "cookies" differently when targeting users on the one hand, and developers on the other. REMOVE_COOKIES is a developer-facing name with a user-facing value, which is confusing. Renaming the current functionality to REMOVE_SITE_DATA is much more explicit, and will enable us to _just_ remove cookies at some point in the future via a REMOVE_COOKIES that actually means cookies. REMOVE_SITE_DATA has exactly the same semantics that REMOVE_COOKIES used to, with one exception: REMOVE_COOKIES included deleting cached strict transport security values. This functionality has been moved to REMOVE_CACHE. As a drive-by, this CL also moves a check against the kClearPluginLSODataEnabled pref out of webui (ClearBrowsingDataHandler) and into the BrowsingDataRemover itself, where it seems more likely to be effective. TEST=Nothing but removal cached transport-security values should change.	92628, 94334		http://codereview.chromium.org/7717023	svn://svn.chromium.org/chrome/trunk/src@99753 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/delete_chrome_history.cc b/chrome_frame/delete_chrome_history.cc <newline>index 419cfc9..e2476af 100644 <newline>--- a/chrome_frame/delete_chrome_history.cc <newline>+++ b/chrome_frame/delete_chrome_history.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -80,7 +80,7 @@ STDMETHODIMP DeleteChromeHistory::DeleteBrowsingHistory(DWORD flags) { <newline>   } <newline>   if (flags & DELETE_BROWSING_HISTORY_COOKIES) <newline>-    remove_mask_ |= BrowsingDataRemover::REMOVE_COOKIES; <newline>+    remove_mask_ |= BrowsingDataRemover::REMOVE_SITE_DATA; <newline>   if (flags & DELETE_BROWSING_HISTORY_TIF) <newline>     remove_mask_ |= BrowsingDataRemover::REMOVE_CACHE; <newline>   if (flags & DELETE_BROWSING_HISTORY_FORMDATA)
1368ac85b4ab0ee294fa36ca95e90194e9d14ca	pastarmovj@chromium.org <pastarmovj@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 2 19:54:01 2011 +0000	Fix the problem with PYAuto creating the metrics consent file root owned. The file should be owned by chronos or else we fail the PlatformPermissions tests. TEST=security_ProfilePermissions	chromium-os:19942		http://codereview.chromium.org/7831038	svn://svn.chromium.org/chrome/trunk/src@99426 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/pyautolib/pyauto.py b/chrome/test/pyautolib/pyauto.py <newline>index 4113b3a..895985a 100644 <newline>--- a/chrome/test/pyautolib/pyauto.py <newline>+++ b/chrome/test/pyautolib/pyauto.py <newline>@@ -317,6 +317,8 @@ class PyUITest(pyautolib.PyUITestBase, unittest.TestCase): <newline>     if not _HasValidConsentFile(): <newline>       client_id = hashlib.md5('abcdefgh').hexdigest() <newline>       open(consent_file, 'w').write(client_id) <newline>+      # This file must be owned by cronos:cronos! <newline>+      os.chown(consent_file, 1000, 1000); <newline>     assert _HasValidConsentFile(), 'Could not create %s' % consent_file <newline>   @staticmethod
c080d3bd5064251d29341fa114568d9a2cb1190	pastarmovj@chromium.org <pastarmovj@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 2 19:54:01 2011 +0000	Fix the problem with PYAuto creating the metrics consent file root owned. The file should be owned by chronos or else we fail the PlatformPermissions tests. TEST=security_ProfilePermissions	chromium-os:19942		http://codereview.chromium.org/7831038	svn://svn.chromium.org/chrome/trunk/src@99426 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/pyautolib/pyauto.py b/chrome/test/pyautolib/pyauto.py <newline>index 4113b3a..895985a 100644 <newline>--- a/chrome/test/pyautolib/pyauto.py <newline>+++ b/chrome/test/pyautolib/pyauto.py <newline>@@ -317,6 +317,8 @@ class PyUITest(pyautolib.PyUITestBase, unittest.TestCase): <newline>     if not _HasValidConsentFile(): <newline>       client_id = hashlib.md5('abcdefgh').hexdigest() <newline>       open(consent_file, 'w').write(client_id) <newline>+      # This file must be owned by cronos:cronos! <newline>+      os.chown(consent_file, 1000, 1000); <newline>     assert _HasValidConsentFile(), 'Could not create %s' % consent_file <newline>   @staticmethod
1b2fba5e4f2621ce9bf4cadf99ece2299192c55	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 30 22:50:22 2011 +0000	Require Real Player 12.0.1.666 Corresponds to stability issues and also a security update: http://service.real.com/realplayer/security/08162011_player/en/			http://codereview.chromium.org/7776019	svn://svn.chromium.org/chrome/trunk/src@98873 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index 80d28b6..3f3e4e0 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -106,7 +106,7 @@ static const VersionRangeDefinition kDivXVersionRange[] = { <newline>     { "", "", "1.4.3.4", false } <newline> }; <newline> static const VersionRangeDefinition kRealPlayerVersionRange[] = { <newline>-    { "", "", "12.0.1.633", true } <newline>+    { "", "", "12.0.1.666", true } <newline> }; <newline> static const VersionRangeDefinition kWindowsMediaPlayerVersionRange[] = { <newline>     { "", "", "", true }
bd527afea1c20a014ee95a87ca466d7e7b8b4b3	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 30 22:50:22 2011 +0000	Require Real Player 12.0.1.666 Corresponds to stability issues and also a security update: http://service.real.com/realplayer/security/08162011_player/en/			http://codereview.chromium.org/7776019	svn://svn.chromium.org/chrome/trunk/src@98873 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index 80d28b6..3f3e4e0 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -106,7 +106,7 @@ static const VersionRangeDefinition kDivXVersionRange[] = { <newline>     { "", "", "1.4.3.4", false } <newline> }; <newline> static const VersionRangeDefinition kRealPlayerVersionRange[] = { <newline>-    { "", "", "12.0.1.633", true } <newline>+    { "", "", "12.0.1.666", true } <newline> }; <newline> static const VersionRangeDefinition kWindowsMediaPlayerVersionRange[] = { <newline>     { "", "", "", true }
6c0ea26ca23b0903b9250f0912a29fc4284dd7a	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 24 20:54:00 2011 +0000	Apply content-security-policy directive to chrome://workers page. The changes to chrome_web_ui_data_source allow for alternate message loops and the absence of translated strings, which are cases I didn't think we'd encounter.  But we did.			http://codereview.chromium.org/7714007	svn://svn.chromium.org/chrome/trunk/src@98110 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 532cca5..5b99024 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -66,7 +66,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://textfields': { 'title': 'chrome://textfields', 'CSP': False }, <newline>     'chrome://version': { 'title': 'About Version' }, <newline>     'chrome://view-http-cache': {}, <newline>-    'chrome://workers': { 'title': 'Workers', 'CSP': False }, <newline>+    'chrome://workers': { 'title': 'Workers' }, <newline>   } <newline>   broken_special_url_tabs = { <newline>     # crashed under debug when invoked from location bar (bug 88223).
945cf42552e24126cef127e5e2c8175ae8f2105	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 24 20:54:00 2011 +0000	Apply content-security-policy directive to chrome://workers page. The changes to chrome_web_ui_data_source allow for alternate message loops and the absence of translated strings, which are cases I didn't think we'd encounter.  But we did.			http://codereview.chromium.org/7714007	svn://svn.chromium.org/chrome/trunk/src@98110 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 532cca5..5b99024 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -66,7 +66,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://textfields': { 'title': 'chrome://textfields', 'CSP': False }, <newline>     'chrome://version': { 'title': 'About Version' }, <newline>     'chrome://view-http-cache': {}, <newline>-    'chrome://workers': { 'title': 'Workers', 'CSP': False }, <newline>+    'chrome://workers': { 'title': 'Workers' }, <newline>   } <newline>   broken_special_url_tabs = { <newline>     # crashed under debug when invoked from location bar (bug 88223).
d7493280fbac19804470766ddff00788c335847	mseaborn@chromium.org <mseaborn@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 16 15:11:03 2011 +0000	NaCl: Update revision in DEPS, r6416 -> r6424 This pulls in the following Native Client changes: r6417: (mcgrathr) Make 64-bit syscall trampoline code PIC-friendly r6418: (mseaborn) Crash dump test: Isolate the test from any global instance of crash_service.exe r6419: (mseaborn) x86-64 Mac: Fix assembly code to index through %rax rather than %eax r6420: (khim) Bump REVISION file for GLibC with changed names. r6421: (jvoung) Update perf expectations for 32-bit pnacl translator compile time. r6422: (sanga) Adding a check for the number of bytes to write against the buffer size for PPB_FileIO_Write. r6423: (mcgrathr) Clean up IRT thread creation and exit r6424: (sanga) Fixing security bug for PPB_FileIO::Read in NaCl proxy. TEST=trybots	none		http://codereview.chromium.org/7661001	svn://svn.chromium.org/chrome/trunk/src@96942 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 0e3f929..f3d842d 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -9,9 +9,9 @@ vars = { <newline>   "swig_revision": "69281", <newline>   # These hashes need to be updated when nacl_revision is changed. <newline>   # After changing nacl_revision, run 'gclient runhooks' to get the new values. <newline>-  "nacl_irt_hash_x86_32": "05b19a95dbaa460ca72969268332aa678823ed01", <newline>-  "nacl_irt_hash_x86_64": "7ec40d9483348dbecff8c32aa7176cc734f0708d", <newline>-  "nacl_revision": "6416", <newline>+  "nacl_irt_hash_x86_32": "bc3a3db0dbae9305ae78b726a6d683dda2a08bf8", <newline>+  "nacl_irt_hash_x86_64": "c76c4754e435dadd3c64c5600e3bf79119d211ca", <newline>+  "nacl_revision": "6424", <newline>   # After changing nacl_revision, run 'glient sync' and check native_client/DEPS <newline>   # to update other nacl_*_revision's. <newline>   # TODO(brettw) We should use the "From" syntax to avoid hardcoding the
24b3fcabc0928bb22f36d16124b5dbc22aef2c1	mseaborn@chromium.org <mseaborn@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 16 15:11:03 2011 +0000	NaCl: Update revision in DEPS, r6416 -> r6424 This pulls in the following Native Client changes: r6417: (mcgrathr) Make 64-bit syscall trampoline code PIC-friendly r6418: (mseaborn) Crash dump test: Isolate the test from any global instance of crash_service.exe r6419: (mseaborn) x86-64 Mac: Fix assembly code to index through %rax rather than %eax r6420: (khim) Bump REVISION file for GLibC with changed names. r6421: (jvoung) Update perf expectations for 32-bit pnacl translator compile time. r6422: (sanga) Adding a check for the number of bytes to write against the buffer size for PPB_FileIO_Write. r6423: (mcgrathr) Clean up IRT thread creation and exit r6424: (sanga) Fixing security bug for PPB_FileIO::Read in NaCl proxy. TEST=trybots	none		http://codereview.chromium.org/7661001	svn://svn.chromium.org/chrome/trunk/src@96942 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 0e3f929..f3d842d 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -9,9 +9,9 @@ vars = { <newline>   "swig_revision": "69281", <newline>   # These hashes need to be updated when nacl_revision is changed. <newline>   # After changing nacl_revision, run 'gclient runhooks' to get the new values. <newline>-  "nacl_irt_hash_x86_32": "05b19a95dbaa460ca72969268332aa678823ed01", <newline>-  "nacl_irt_hash_x86_64": "7ec40d9483348dbecff8c32aa7176cc734f0708d", <newline>-  "nacl_revision": "6416", <newline>+  "nacl_irt_hash_x86_32": "bc3a3db0dbae9305ae78b726a6d683dda2a08bf8", <newline>+  "nacl_irt_hash_x86_64": "c76c4754e435dadd3c64c5600e3bf79119d211ca", <newline>+  "nacl_revision": "6424", <newline>   # After changing nacl_revision, run 'glient sync' and check native_client/DEPS <newline>   # to update other nacl_*_revision's. <newline>   # TODO(brettw) We should use the "From" syntax to avoid hardcoding the
e09e4b85df11a0d037ec32f350616e7a24fe35a	bbudge@chromium.org <bbudge@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 16 02:49:27 2011 +0000	Fix security bug that allowed invalid header fields to be injected by setting the HTTP method to a multi-line string. TEST=TestShellTests, url_request_info_unittest.cc	http://code.google.com/p/nativeclient/issues/detail?id=2024		http://codereview.chromium.org/7645010	svn://svn.chromium.org/chrome/trunk/src@96888 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/ppapi/url_request_info_unittest.cc b/webkit/plugins/ppapi/url_request_info_unittest.cc <newline>index 3e1d84e..ef86615 100644 <newline>--- a/webkit/plugins/ppapi/url_request_info_unittest.cc <newline>+++ b/webkit/plugins/ppapi/url_request_info_unittest.cc <newline>@@ -215,6 +215,32 @@ TEST_F(URLRequestInfoTest, SetMethod) { <newline>   ASSERT_TRUE(info_->SetStringProperty( <newline>       PP_URLREQUESTPROPERTY_METHOD, "POST")); <newline>   ASSERT_TRUE(IsExpected(GetMethod(), "POST")); <newline>+ <newline>+  // Test that method names are converted to upper case. <newline>+  ASSERT_TRUE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "get")); <newline>+  ASSERT_TRUE(IsExpected(GetMethod(), "GET")); <newline>+  ASSERT_TRUE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "post")); <newline>+  ASSERT_TRUE(IsExpected(GetMethod(), "POST")); <newline>+} <newline>+ <newline>+TEST_F(URLRequestInfoTest, SetInvalidMethod) { <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "CONNECT")); <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "connect")); <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "TRACE")); <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "trace")); <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "TRACK")); <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "track")); <newline>+ <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "POST\x0d\x0ax-csrf-token:\x20test1234")); <newline> } <newline> TEST_F(URLRequestInfoTest, SetValidHeaders) {
1bc704081b6771e423e0ebb69553634c048c14e	bbudge@chromium.org <bbudge@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 16 02:49:27 2011 +0000	Fix security bug that allowed invalid header fields to be injected by setting the HTTP method to a multi-line string. TEST=TestShellTests, url_request_info_unittest.cc	http://code.google.com/p/nativeclient/issues/detail?id=2024		http://codereview.chromium.org/7645010	svn://svn.chromium.org/chrome/trunk/src@96888 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/ppapi/url_request_info_unittest.cc b/webkit/plugins/ppapi/url_request_info_unittest.cc <newline>index 3e1d84e..ef86615 100644 <newline>--- a/webkit/plugins/ppapi/url_request_info_unittest.cc <newline>+++ b/webkit/plugins/ppapi/url_request_info_unittest.cc <newline>@@ -215,6 +215,32 @@ TEST_F(URLRequestInfoTest, SetMethod) { <newline>   ASSERT_TRUE(info_->SetStringProperty( <newline>       PP_URLREQUESTPROPERTY_METHOD, "POST")); <newline>   ASSERT_TRUE(IsExpected(GetMethod(), "POST")); <newline>+ <newline>+  // Test that method names are converted to upper case. <newline>+  ASSERT_TRUE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "get")); <newline>+  ASSERT_TRUE(IsExpected(GetMethod(), "GET")); <newline>+  ASSERT_TRUE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "post")); <newline>+  ASSERT_TRUE(IsExpected(GetMethod(), "POST")); <newline>+} <newline>+ <newline>+TEST_F(URLRequestInfoTest, SetInvalidMethod) { <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "CONNECT")); <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "connect")); <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "TRACE")); <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "trace")); <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "TRACK")); <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "track")); <newline>+ <newline>+  ASSERT_FALSE(info_->SetStringProperty( <newline>+      PP_URLREQUESTPROPERTY_METHOD, "POST\x0d\x0ax-csrf-token:\x20test1234")); <newline> } <newline> TEST_F(URLRequestInfoTest, SetValidHeaders) {
12f91acaf34b9b97842374b8557a2502f16e151	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 12 21:47:50 2011 +0000	Apply content-security-policy directive to chrome://media-internals			http://codereview.chromium.org/7638002	svn://svn.chromium.org/chrome/trunk/src@96631 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 2056284..fcfc09c 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -50,7 +50,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://histograms': { 'title': 'About Histograms' }, <newline>     'chrome://history': { 'title': 'History' }, <newline>     'chrome://history2': { 'title': 'History' }, <newline>-    'chrome://media-internals': { 'title': 'Media Internals', 'CSP': False }, <newline>+    'chrome://media-internals': { 'title': 'Media Internals' }, <newline>     'chrome://memory-redirect': { 'title': 'About Memory' }, <newline>     'chrome://net-internals': {}, <newline>     'chrome://net-internals/help.html': {},
d5d33bf9871f9e89260002f3ec09678d45129fa	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 12 21:47:50 2011 +0000	Apply content-security-policy directive to chrome://media-internals			http://codereview.chromium.org/7638002	svn://svn.chromium.org/chrome/trunk/src@96631 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 2056284..fcfc09c 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -50,7 +50,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://histograms': { 'title': 'About Histograms' }, <newline>     'chrome://history': { 'title': 'History' }, <newline>     'chrome://history2': { 'title': 'History' }, <newline>-    'chrome://media-internals': { 'title': 'Media Internals', 'CSP': False }, <newline>+    'chrome://media-internals': { 'title': 'Media Internals' }, <newline>     'chrome://memory-redirect': { 'title': 'About Memory' }, <newline>     'chrome://net-internals': {}, <newline>     'chrome://net-internals/help.html': {},
d0529e507c7e978caed2e66b615baa0c679053f	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 12 21:45:14 2011 +0000	Add content-security-policy to chrome://quota-internals.			http://codereview.chromium.org/7637026	svn://svn.chromium.org/chrome/trunk/src@96630 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/quota_internals_ui.h b/chrome/browser/ui/webui/quota_internals_ui.h <newline>index d805b2b..29077d4 100644 <newline>--- a/chrome/browser/ui/webui/quota_internals_ui.h <newline>+++ b/chrome/browser/ui/webui/quota_internals_ui.h <newline>@@ -9,7 +9,6 @@ <newline> #include <string> <newline> #include "chrome/browser/ui/webui/chrome_web_ui.h" <newline>-#include "chrome/browser/ui/webui/chrome_web_ui_data_source.h" <newline> class QuotaInternalsUI : public ChromeWebUI { <newline>  public: <newline>@@ -19,24 +18,4 @@ class QuotaInternalsUI : public ChromeWebUI { <newline>   DISALLOW_COPY_AND_ASSIGN(QuotaInternalsUI); <newline> }; <newline>-namespace quota_internals { <newline>- <newline>-class QuotaInternalsHTMLSource : public ChromeWebUIDataSource { <newline>- public: <newline>-  static const char kStringsJSPath[]; <newline>- <newline>-  QuotaInternalsHTMLSource(); <newline>-  virtual void StartDataRequest(const std::string& path, <newline>-                                bool is_incognito, <newline>-                                int request_id) OVERRIDE; <newline>-  virtual std::string GetMimeType(const std::string& path) const OVERRIDE; <newline>- <newline>- private: <newline>-  virtual ~QuotaInternalsHTMLSource() {} <newline>- <newline>-  DISALLOW_COPY_AND_ASSIGN(QuotaInternalsHTMLSource); <newline>-}; <newline>- <newline>-}  // namespace quota_internals <newline>- <newline> #endif  // CHROME_BROWSER_UI_WEBUI_QUOTA_INTERNALS_UI_H_
6b63485da26e64a2ab7eefa639262ab0820bfb1	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 12 21:45:14 2011 +0000	Add content-security-policy to chrome://quota-internals.			http://codereview.chromium.org/7637026	svn://svn.chromium.org/chrome/trunk/src@96630 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/quota_internals_ui.h b/chrome/browser/ui/webui/quota_internals_ui.h <newline>index d805b2b..29077d4 100644 <newline>--- a/chrome/browser/ui/webui/quota_internals_ui.h <newline>+++ b/chrome/browser/ui/webui/quota_internals_ui.h <newline>@@ -9,7 +9,6 @@ <newline> #include <string> <newline> #include "chrome/browser/ui/webui/chrome_web_ui.h" <newline>-#include "chrome/browser/ui/webui/chrome_web_ui_data_source.h" <newline> class QuotaInternalsUI : public ChromeWebUI { <newline>  public: <newline>@@ -19,24 +18,4 @@ class QuotaInternalsUI : public ChromeWebUI { <newline>   DISALLOW_COPY_AND_ASSIGN(QuotaInternalsUI); <newline> }; <newline>-namespace quota_internals { <newline>- <newline>-class QuotaInternalsHTMLSource : public ChromeWebUIDataSource { <newline>- public: <newline>-  static const char kStringsJSPath[]; <newline>- <newline>-  QuotaInternalsHTMLSource(); <newline>-  virtual void StartDataRequest(const std::string& path, <newline>-                                bool is_incognito, <newline>-                                int request_id) OVERRIDE; <newline>-  virtual std::string GetMimeType(const std::string& path) const OVERRIDE; <newline>- <newline>- private: <newline>-  virtual ~QuotaInternalsHTMLSource() {} <newline>- <newline>-  DISALLOW_COPY_AND_ASSIGN(QuotaInternalsHTMLSource); <newline>-}; <newline>- <newline>-}  // namespace quota_internals <newline>- <newline> #endif  // CHROME_BROWSER_UI_WEBUI_QUOTA_INTERNALS_UI_H_
526b2f96027fbe8e7ccd689a28b30e6221e6ae4	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Aug 8 19:09:38 2011 +0000	Add content-security-policy directive to print-preview pages. Since print-preview uses an object tag, relax the object-src restriction in the content_security_policy.html file.  Also fix typo in print_preview.html where the object tag has a src="", not a data="" attribute.			http://codereview.chromium.org/7566049	svn://svn.chromium.org/chrome/trunk/src@95850 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/print_preview_data_source.h b/chrome/browser/ui/webui/print_preview_data_source.h <newline>index 7f82d00..9c9d66e 100644 <newline>--- a/chrome/browser/ui/webui/print_preview_data_source.h <newline>+++ b/chrome/browser/ui/webui/print_preview_data_source.h <newline>@@ -10,10 +10,11 @@ <newline> #include "base/compiler_specific.h" <newline> #include "chrome/browser/ui/webui/chrome_url_data_manager.h" <newline>+#include "chrome/browser/ui/webui/chrome_web_ui_data_source.h" <newline> // PrintPreviewDataSource serves data for chrome://print requests. <newline> // <newline>-// The format for requesting data is as follows: <newline>+// The format for requesting PDF data is as follows: <newline> // chrome://print/<PrintPreviewUIAddrStr>/<PageIndex>/print.pdf <newline> // <newline> // Parameters (< > required): <newline>@@ -24,8 +25,10 @@ <newline> // <newline> // Example: <newline> //    chrome://print/0xab0123ef/10/print.pdf <newline>- <newline>-class PrintPreviewDataSource : public ChromeURLDataManager::DataSource { <newline>+// <newline>+// Requests to chrome://print with paths not ending in /print.pdf are used <newline>+// to return the markup or other resources for the print preview page itself. <newline>+class PrintPreviewDataSource : public ChromeWebUIDataSource { <newline>  public: <newline>   PrintPreviewDataSource(); <newline>@@ -33,8 +36,6 @@ class PrintPreviewDataSource : public ChromeURLDataManager::DataSource { <newline>   virtual void StartDataRequest(const std::string& path, <newline>                                 bool is_incognito, <newline>                                 int request_id) OVERRIDE; <newline>-  virtual std::string GetMimeType(const std::string& path) const OVERRIDE; <newline>- <newline>  private: <newline>   virtual ~PrintPreviewDataSource();
20a12ce156b2dad37023b4d553b583938b923d1	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Aug 8 19:09:38 2011 +0000	Add content-security-policy directive to print-preview pages. Since print-preview uses an object tag, relax the object-src restriction in the content_security_policy.html file.  Also fix typo in print_preview.html where the object tag has a src="", not a data="" attribute.			http://codereview.chromium.org/7566049	svn://svn.chromium.org/chrome/trunk/src@95850 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/print_preview_data_source.h b/chrome/browser/ui/webui/print_preview_data_source.h <newline>index 7f82d00..9c9d66e 100644 <newline>--- a/chrome/browser/ui/webui/print_preview_data_source.h <newline>+++ b/chrome/browser/ui/webui/print_preview_data_source.h <newline>@@ -10,10 +10,11 @@ <newline> #include "base/compiler_specific.h" <newline> #include "chrome/browser/ui/webui/chrome_url_data_manager.h" <newline>+#include "chrome/browser/ui/webui/chrome_web_ui_data_source.h" <newline> // PrintPreviewDataSource serves data for chrome://print requests. <newline> // <newline>-// The format for requesting data is as follows: <newline>+// The format for requesting PDF data is as follows: <newline> // chrome://print/<PrintPreviewUIAddrStr>/<PageIndex>/print.pdf <newline> // <newline> // Parameters (< > required): <newline>@@ -24,8 +25,10 @@ <newline> // <newline> // Example: <newline> //    chrome://print/0xab0123ef/10/print.pdf <newline>- <newline>-class PrintPreviewDataSource : public ChromeURLDataManager::DataSource { <newline>+// <newline>+// Requests to chrome://print with paths not ending in /print.pdf are used <newline>+// to return the markup or other resources for the print preview page itself. <newline>+class PrintPreviewDataSource : public ChromeWebUIDataSource { <newline>  public: <newline>   PrintPreviewDataSource(); <newline>@@ -33,8 +36,6 @@ class PrintPreviewDataSource : public ChromeURLDataManager::DataSource { <newline>   virtual void StartDataRequest(const std::string& path, <newline>                                 bool is_incognito, <newline>                                 int request_id) OVERRIDE; <newline>-  virtual std::string GetMimeType(const std::string& path) const OVERRIDE; <newline>- <newline>  private: <newline>   virtual ~PrintPreviewDataSource();
3a6ec9bb993b0d6d35169c3843b41ab176ff692	binji@chromium.org <binji@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Aug 8 19:05:04 2011 +0000	In sync setup UI, move "For added security..." string up to the "Encrypted Data Types" section. TEST=manual	91658		http://codereview.chromium.org/7583023	svn://svn.chromium.org/chrome/trunk/src@95848 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/sync_setup_overlay.html b/chrome/browser/resources/sync_setup_overlay.html <newline>index 83b703c..7d4f28e 100644 <newline>--- a/chrome/browser/resources/sync_setup_overlay.html <newline>+++ b/chrome/browser/resources/sync_setup_overlay.html <newline>@@ -319,6 +319,8 @@ <newline>             <hr> <newline>             <h4 i18n-content="encryptedDataTypesTitle"></h4> <newline>             <div class="sync-customize-section-container"> <newline>+              <div id="passphrase-encryption-message" <newline>+                  i18n-content="passphraseEncryptionMessage"></div> <newline>               <div> <newline>                 <input id="encrypt-sensitive-option" name="encrypt" type="radio" <newline>                     value="sensitive"> <newline>@@ -337,8 +339,6 @@ <newline>           <h4 i18n-content="passphraseSectionTitle"></h4> <newline>           <div id="sync-custom-passphrase-container" <newline>               class="sync-customize-section-container"> <newline>-            <div id="passphrase-encryption-message" <newline>-                i18n-content="passphraseEncryptionMessage"></div> <newline>             <div> <newline>               <input id="google-option" name="option" type="radio" <newline>                   value="google">
5464a713c271bd0dca334632d3b5a093a05cc9b	binji@chromium.org <binji@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Aug 8 19:05:04 2011 +0000	In sync setup UI, move "For added security..." string up to the "Encrypted Data Types" section. TEST=manual	91658		http://codereview.chromium.org/7583023	svn://svn.chromium.org/chrome/trunk/src@95848 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/sync_setup_overlay.html b/chrome/browser/resources/sync_setup_overlay.html <newline>index 83b703c..7d4f28e 100644 <newline>--- a/chrome/browser/resources/sync_setup_overlay.html <newline>+++ b/chrome/browser/resources/sync_setup_overlay.html <newline>@@ -319,6 +319,8 @@ <newline>             <hr> <newline>             <h4 i18n-content="encryptedDataTypesTitle"></h4> <newline>             <div class="sync-customize-section-container"> <newline>+              <div id="passphrase-encryption-message" <newline>+                  i18n-content="passphraseEncryptionMessage"></div> <newline>               <div> <newline>                 <input id="encrypt-sensitive-option" name="encrypt" type="radio" <newline>                     value="sensitive"> <newline>@@ -337,8 +339,6 @@ <newline>           <h4 i18n-content="passphraseSectionTitle"></h4> <newline>           <div id="sync-custom-passphrase-container" <newline>               class="sync-customize-section-container"> <newline>-            <div id="passphrase-encryption-message" <newline>-                i18n-content="passphraseEncryptionMessage"></div> <newline>             <div> <newline>               <input id="google-option" name="option" type="radio" <newline>                   value="google">
9737041bc5da2841efcf1ba9e9f5936b9f46a87	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Aug 4 21:08:59 2011 +0000	Add content-security-policy directive to chrome://history2 pages.			http://codereview.chromium.org/7575015	svn://svn.chromium.org/chrome/trunk/src@95495 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 9565b88..2056284 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -49,7 +49,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://gpu-internals': {}, <newline>     'chrome://histograms': { 'title': 'About Histograms' }, <newline>     'chrome://history': { 'title': 'History' }, <newline>-    'chrome://history2': { 'title': 'History', 'CSP': False }, <newline>+    'chrome://history2': { 'title': 'History' }, <newline>     'chrome://media-internals': { 'title': 'Media Internals', 'CSP': False }, <newline>     'chrome://memory-redirect': { 'title': 'About Memory' }, <newline>     'chrome://net-internals': {}, <newline>@@ -59,8 +59,8 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://sessions': { 'title': 'Sessions' }, <newline>     'chrome://settings': { 'title': 'Preferences - Basics' }, <newline>     'chrome://stats': { 'CSP': False }, <newline>-    'chrome://sync': { 'title': 'Sync Internals', 'CSP': False }, <newline>-    'chrome://sync-internals': { 'title': 'Sync Internals', 'CSP': False }, <newline>+    'chrome://sync': { 'title': 'Sync Internals' }, <newline>+    'chrome://sync-internals': { 'title': 'Sync Internals' }, <newline>     'chrome://tasks': { 'title': 'Task Manager - Chromium' }, <newline>     'chrome://terms': { 'CSP': False }, <newline>     'chrome://textfields': { 'title': 'chrome://textfields', 'CSP': False },
bae02c23cc4881423e3a3d5f4f751e7a6262dca	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Aug 4 21:08:59 2011 +0000	Add content-security-policy directive to chrome://history2 pages.			http://codereview.chromium.org/7575015	svn://svn.chromium.org/chrome/trunk/src@95495 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 9565b88..2056284 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -49,7 +49,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://gpu-internals': {}, <newline>     'chrome://histograms': { 'title': 'About Histograms' }, <newline>     'chrome://history': { 'title': 'History' }, <newline>-    'chrome://history2': { 'title': 'History', 'CSP': False }, <newline>+    'chrome://history2': { 'title': 'History' }, <newline>     'chrome://media-internals': { 'title': 'Media Internals', 'CSP': False }, <newline>     'chrome://memory-redirect': { 'title': 'About Memory' }, <newline>     'chrome://net-internals': {}, <newline>@@ -59,8 +59,8 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://sessions': { 'title': 'Sessions' }, <newline>     'chrome://settings': { 'title': 'Preferences - Basics' }, <newline>     'chrome://stats': { 'CSP': False }, <newline>-    'chrome://sync': { 'title': 'Sync Internals', 'CSP': False }, <newline>-    'chrome://sync-internals': { 'title': 'Sync Internals', 'CSP': False }, <newline>+    'chrome://sync': { 'title': 'Sync Internals' }, <newline>+    'chrome://sync-internals': { 'title': 'Sync Internals' }, <newline>     'chrome://tasks': { 'title': 'Task Manager - Chromium' }, <newline>     'chrome://terms': { 'CSP': False }, <newline>     'chrome://textfields': { 'title': 'chrome://textfields', 'CSP': False },
8c535092cdd7256460da3f5611fd0e7d544d771	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 3 20:03:11 2011 +0000	Add content-security-policy directive to chrome://bugreport page.	eportHandler* handler = new BugReportHandler(tab);		http://codereview.chromium.org/7542022	svn://svn.chromium.org/chrome/trunk/src@95294 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 60cadc6..9565b88 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -34,18 +34,10 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>   special_url_tabs = { <newline>     'chrome://about': { 'title': 'Chrome URLs' }, <newline>-    'chrome://appcache-internals': { <newline>-      'title': 'AppCache Internals', <newline>-      'CSP': False <newline>-    }, <newline>-    'chrome://blob-internals': { <newline>-      'title': 'Blob Storage Internals', <newline>-      'CSP': False <newline>-    }, <newline>-    'chrome://bugreport': { <newline>-      'title': 'Whoops. Let\'s fix that.', <newline>-      'CSP': False <newline>-    }, <newline>+    'chrome://appcache-internals': { 'title': 'AppCache Internals' }, <newline>+    'chrome://blob-internals': { 'title': 'Blob Storage Internals' }, <newline>+    'chrome://bugreport': {}, <newline>+    'chrome://bugreport/#0': { 'title': 'Feedback' }, <newline>     'chrome://chrome-urls': { 'title': 'Chrome URLs' }, <newline>     'chrome://crashes': { 'title': 'Crashes' }, <newline>     'chrome://credits': { 'title': 'Credits', 'CSP': False },
33eab75d9c30dd9a62cecf091fcf1c0ccb6c475	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 3 20:03:11 2011 +0000	Add content-security-policy directive to chrome://bugreport page.	eportHandler* handler = new BugReportHandler(tab);		http://codereview.chromium.org/7542022	svn://svn.chromium.org/chrome/trunk/src@95294 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 60cadc6..9565b88 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -34,18 +34,10 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>   special_url_tabs = { <newline>     'chrome://about': { 'title': 'Chrome URLs' }, <newline>-    'chrome://appcache-internals': { <newline>-      'title': 'AppCache Internals', <newline>-      'CSP': False <newline>-    }, <newline>-    'chrome://blob-internals': { <newline>-      'title': 'Blob Storage Internals', <newline>-      'CSP': False <newline>-    }, <newline>-    'chrome://bugreport': { <newline>-      'title': 'Whoops. Let\'s fix that.', <newline>-      'CSP': False <newline>-    }, <newline>+    'chrome://appcache-internals': { 'title': 'AppCache Internals' }, <newline>+    'chrome://blob-internals': { 'title': 'Blob Storage Internals' }, <newline>+    'chrome://bugreport': {}, <newline>+    'chrome://bugreport/#0': { 'title': 'Feedback' }, <newline>     'chrome://chrome-urls': { 'title': 'Chrome URLs' }, <newline>     'chrome://crashes': { 'title': 'Crashes' }, <newline>     'chrome://credits': { 'title': 'Credits', 'CSP': False },
5519aa201fcf6c0edde2c6f96296db926de65b6	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 2 20:40:13 2011 +0000	Add content-security-policy directive to chrome://sync-internals			http://codereview.chromium.org/7529012	svn://svn.chromium.org/chrome/trunk/src@95149 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_browser.gypi b/chrome/chrome_browser.gypi <newline>index e711143..12c0ff9 100644 <newline>--- a/chrome/chrome_browser.gypi <newline>+++ b/chrome/chrome_browser.gypi <newline>@@ -3641,8 +3641,6 @@ <newline>         'browser/ui/webui/sessions_ui.h', <newline>         'browser/ui/webui/shared_resources_data_source.cc', <newline>         'browser/ui/webui/shared_resources_data_source.h', <newline>-        'browser/ui/webui/sync_internals_html_source.cc', <newline>-        'browser/ui/webui/sync_internals_html_source.h', <newline>         'browser/ui/webui/sync_internals_ui.cc', <newline>         'browser/ui/webui/sync_internals_ui.h', <newline>         'browser/ui/webui/sync_setup_handler.cc',
2bc912e8ead4576e8fff27d49da8d75fd6802eb	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 2 20:40:13 2011 +0000	Add content-security-policy directive to chrome://sync-internals			http://codereview.chromium.org/7529012	svn://svn.chromium.org/chrome/trunk/src@95149 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_browser.gypi b/chrome/chrome_browser.gypi <newline>index e711143..12c0ff9 100644 <newline>--- a/chrome/chrome_browser.gypi <newline>+++ b/chrome/chrome_browser.gypi <newline>@@ -3641,8 +3641,6 @@ <newline>         'browser/ui/webui/sessions_ui.h', <newline>         'browser/ui/webui/shared_resources_data_source.cc', <newline>         'browser/ui/webui/shared_resources_data_source.h', <newline>-        'browser/ui/webui/sync_internals_html_source.cc', <newline>-        'browser/ui/webui/sync_internals_html_source.h', <newline>         'browser/ui/webui/sync_internals_ui.cc', <newline>         'browser/ui/webui/sync_internals_ui.h', <newline>         'browser/ui/webui/sync_setup_handler.cc',
e01213102f2234e8fea657ab0ea4cc3fbaec8c6	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 2 16:44:56 2011 +0000	Apply content-security-policy to chrome://appcache-internals and chrome://blob-internals. Since these files live under /webkit, just hardcode the CSP directive rather than trying to read it from a resource bundle.  Re-write the page to be compleltely free of javascript, falling back to form-posts, to avoid having to pull in an external file.			http://codereview.chromium.org/7518011	svn://svn.chromium.org/chrome/trunk/src@95093 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/blob/view_blob_internals_job.cc b/webkit/blob/view_blob_internals_job.cc <newline>index 8e980ec..b105607 100644 <newline>--- a/webkit/blob/view_blob_internals_job.cc <newline>+++ b/webkit/blob/view_blob_internals_job.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -37,27 +37,16 @@ void StartHTML(std::string* out) { <newline>   out->append( <newline>       "<!DOCTYPE HTML>" <newline>       "<html><title>Blob Storage Internals</title>" <newline>-      "<style>" <newline>+      "<meta http-equiv=\"X-WebKit-CSP\"" <newline>+      "  content=\"obejct-src 'none'; script-src 'none'\">\n" <newline>+      "<style>\n" <newline>       "body { font-family: sans-serif; font-size: 0.8em; }\n" <newline>       "tt, code, pre { font-family: WebKitHack, monospace; }\n" <newline>+      "form { display: inline }\n" <newline>       ".subsection_body { margin: 10px 0 10px 2em; }\n" <newline>       ".subsection_title { font-weight: bold; }\n" <newline>-      "</style>" <newline>-      "<script>\n" <newline>-      // Unfortunately we can't do XHR from chrome://blob-internals <newline>-      // because the chrome:// protocol restricts access. <newline>-      // <newline>-      // So instead, we will send commands by doing a form <newline>-      // submission (which as a side effect will reload the page). <newline>-      "function SubmitCommand(command) {\n" <newline>-      "  document.getElementById('cmd').value = command;\n" <newline>-      "  document.getElementById('cmdsender').submit();\n" <newline>-      "}\n" <newline>-      "</script>\n" <newline>-      "</head><body>" <newline>-      "<form action='' method=GET id=cmdsender>" <newline>-      "<input type='hidden' id=cmd name='remove'>" <newline>-      "</form>"); <newline>+      "</style>\n" <newline>+      "</head><body>\n"); <newline> } <newline> void EndHTML(std::string* out) { <newline>@@ -94,10 +83,12 @@ void AddHTMLButton(const std::string& title, <newline>   // No need to escape title since constant string is passed. <newline>   std::string escaped_command = EscapeForHTML(command.c_str()); <newline>   base::StringAppendF(out, <newline>-                      "<input type=\"button\" value=\"%s\" " <newline>-                      "onclick=\"SubmitCommand('%s')\" />", <newline>-                      title.c_str(), <newline>-                      escaped_command.c_str()); <newline>+                      "<form action=\"\" method=\"GET\">\n" <newline>+                      "<input type=\"hidden\" name=\"remove\" value=\"%s\">\n" <newline>+                      "<input type=\"submit\" value=\"%s\">\n" <newline>+                      "</form><br/>\n", <newline>+                      escaped_command.c_str(), <newline>+                      title.c_str()); <newline> } <newline> }  // namespace <newline>@@ -173,7 +164,6 @@ void ViewBlobInternalsJob::GenerateHTML(std::string* out) const { <newline>        ++iter) { <newline>     AddHTMLBoldText(iter->first, out); <newline>     AddHTMLButton(kRemove, iter->first, out); <newline>-    out->append("<br/>"); <newline>     GenerateHTMLForBlobData(*iter->second, out); <newline>   } <newline> }
1eed66ff9bc1dd0c2c319c8ff42f8f0d1abc1b3	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 2 16:44:56 2011 +0000	Apply content-security-policy to chrome://appcache-internals and chrome://blob-internals. Since these files live under /webkit, just hardcode the CSP directive rather than trying to read it from a resource bundle.  Re-write the page to be compleltely free of javascript, falling back to form-posts, to avoid having to pull in an external file.			http://codereview.chromium.org/7518011	svn://svn.chromium.org/chrome/trunk/src@95093 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/blob/view_blob_internals_job.cc b/webkit/blob/view_blob_internals_job.cc <newline>index 8e980ec..b105607 100644 <newline>--- a/webkit/blob/view_blob_internals_job.cc <newline>+++ b/webkit/blob/view_blob_internals_job.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -37,27 +37,16 @@ void StartHTML(std::string* out) { <newline>   out->append( <newline>       "<!DOCTYPE HTML>" <newline>       "<html><title>Blob Storage Internals</title>" <newline>-      "<style>" <newline>+      "<meta http-equiv=\"X-WebKit-CSP\"" <newline>+      "  content=\"obejct-src 'none'; script-src 'none'\">\n" <newline>+      "<style>\n" <newline>       "body { font-family: sans-serif; font-size: 0.8em; }\n" <newline>       "tt, code, pre { font-family: WebKitHack, monospace; }\n" <newline>+      "form { display: inline }\n" <newline>       ".subsection_body { margin: 10px 0 10px 2em; }\n" <newline>       ".subsection_title { font-weight: bold; }\n" <newline>-      "</style>" <newline>-      "<script>\n" <newline>-      // Unfortunately we can't do XHR from chrome://blob-internals <newline>-      // because the chrome:// protocol restricts access. <newline>-      // <newline>-      // So instead, we will send commands by doing a form <newline>-      // submission (which as a side effect will reload the page). <newline>-      "function SubmitCommand(command) {\n" <newline>-      "  document.getElementById('cmd').value = command;\n" <newline>-      "  document.getElementById('cmdsender').submit();\n" <newline>-      "}\n" <newline>-      "</script>\n" <newline>-      "</head><body>" <newline>-      "<form action='' method=GET id=cmdsender>" <newline>-      "<input type='hidden' id=cmd name='remove'>" <newline>-      "</form>"); <newline>+      "</style>\n" <newline>+      "</head><body>\n"); <newline> } <newline> void EndHTML(std::string* out) { <newline>@@ -94,10 +83,12 @@ void AddHTMLButton(const std::string& title, <newline>   // No need to escape title since constant string is passed. <newline>   std::string escaped_command = EscapeForHTML(command.c_str()); <newline>   base::StringAppendF(out, <newline>-                      "<input type=\"button\" value=\"%s\" " <newline>-                      "onclick=\"SubmitCommand('%s')\" />", <newline>-                      title.c_str(), <newline>-                      escaped_command.c_str()); <newline>+                      "<form action=\"\" method=\"GET\">\n" <newline>+                      "<input type=\"hidden\" name=\"remove\" value=\"%s\">\n" <newline>+                      "<input type=\"submit\" value=\"%s\">\n" <newline>+                      "</form><br/>\n", <newline>+                      escaped_command.c_str(), <newline>+                      title.c_str()); <newline> } <newline> }  // namespace <newline>@@ -173,7 +164,6 @@ void ViewBlobInternalsJob::GenerateHTML(std::string* out) const { <newline>        ++iter) { <newline>     AddHTMLBoldText(iter->first, out); <newline>     AddHTMLButton(kRemove, iter->first, out); <newline>-    out->append("<br/>"); <newline>     GenerateHTMLForBlobData(*iter->second, out); <newline>   } <newline> }
55dec30eabef6975a54295a7143fc34ca2bca22	isherman@chromium.org <isherman@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 2 00:47:48 2011 +0000	Improve Autofill heuristics when detecting labels from previous elements. Support HTML like """Name <span class="required">*</span> <input type="text" name="name">""" Of course, pull at a thread and... Other changes also included to avoid regressions: * When parsing address fields for heuristics, we try to skip over unlabeled fields in the middle of an address.  Updated the code not to also skip over unlabeled fields at the *end* of an address, as these might be part of a different section entirely. * Tighten the credit card number regex to require the word "card". * Add "csc" to the credit card security code regex. * When inferring labels based on <div> structure, be willing to scan up the tree past the closest parent that is a <div>. * Also when inferring labels based on <div> structure, we previously would only stop early if we were about to escape from a <table> element.  Also stop early if we are about to escape from a <fieldset> element.  If we see either of these elements, we expect the field label to be contained with the element. * Allow <label> elements to misuse the 'for' attribute to specify the element's name rather than its id. TEST=browser_tests --gtest_filter=FormStructureBrowserTest.DataDrivenHeuristics*	87517		http://codereview.chromium.org/7531023	svn://svn.chromium.org/chrome/trunk/src@95019 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/autofill/heuristics/output/16_crbug_87517.out b/chrome/test/data/autofill/heuristics/output/16_crbug_87517.out <newline>new file mode 100644 <newline>index 0000000..290b080 <newline>--- /dev/null <newline>+++ b/chrome/test/data/autofill/heuristics/output/16_crbug_87517.out <newline>@@ -0,0 +1,32 @@ <newline>+NAME_FIRST | dnrfirst | Name * | <newline>+NAME_LAST | dnrlast | Name * | <newline>+COMPANY_NAME | company | Company | <newline>+ADDRESS_HOME_LINE1 | dadd1 | Address 1 * | <newline>+ADDRESS_HOME_LINE2 | dadd2 | Address 2 | <newline>+ADDRESS_HOME_CITY | dcity | City / State / Zip * | <newline>+ADDRESS_HOME_STATE | dstate | Name * | AL <newline>+ADDRESS_HOME_ZIP | dzip | Name * | <newline>+ADDRESS_HOME_COUNTRY | CC_COUNTRY | Country | United States <newline>+PHONE_HOME_WHOLE_NUMBER | dphone | Telephone | <newline>+EMAIL_ADDRESS | demail | Email * | <newline>+UNKNOWN_TYPE | amt | $ | <newline>+UNKNOWN_TYPE | ccrecurring | I would like to make this a recurring donation deducted | Monthly <newline>+UNKNOWN_TYPE | remLen | ( You may enter up to 500 characters. ) | 500 <newline>+NAME_FULL | Tribute_Name | Name: | <newline>+UNKNOWN_TYPE | Tribute_occasion | Occasion: | <newline>+NAME_FULL | Tribute_NotifyName | Name: | <newline>+EMAIL_ADDRESS | Tribute_Email | Email: | <newline>+ADDRESS_HOME_LINE1 | Tribute_NotifyAddr | Street: | <newline>+ADDRESS_HOME_CITY | Tribute_NotifyCity | City / St. / Zip: | <newline>+ADDRESS_HOME_STATE | Tribute_NotifyState | City / St. / Zip: | <newline>+ADDRESS_HOME_ZIP | Tribute_NotifyZip | City / St. / Zip: | <newline>+UNKNOWN_TYPE | cctype | Credit Card Type * | Visa <newline>+CREDIT_CARD_NUMBER | ccard | Credit Card Number * | <newline>+UNKNOWN_TYPE | csc | CSC Number * What Is This? | <newline>+CREDIT_CARD_EXP_MONTH | ExpMon | Month | 1 <newline>+CREDIT_CARD_EXP_4_DIGIT_YEAR | ExpYear | Year | 11 <newline>+ADDRESS_HOME_LINE1 | CC_Addr | Address 1 * | <newline>+ADDRESS_HOME_LINE2 | CC_Addr2 | Address 2 | <newline>+ADDRESS_HOME_CITY | CC_City | City / State / Zip * | <newline>+ADDRESS_HOME_STATE | CC_State | Credit Card Information | <newline>+ADDRESS_HOME_ZIP | CC_Zip | Credit Card Information |
638c3d4ff79bc94b4651e7791a362eb4ced2eeb	isherman@chromium.org <isherman@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 2 00:47:48 2011 +0000	Improve Autofill heuristics when detecting labels from previous elements. Support HTML like """Name <span class="required">*</span> <input type="text" name="name">""" Of course, pull at a thread and... Other changes also included to avoid regressions: * When parsing address fields for heuristics, we try to skip over unlabeled fields in the middle of an address.  Updated the code not to also skip over unlabeled fields at the *end* of an address, as these might be part of a different section entirely. * Tighten the credit card number regex to require the word "card". * Add "csc" to the credit card security code regex. * When inferring labels based on <div> structure, be willing to scan up the tree past the closest parent that is a <div>. * Also when inferring labels based on <div> structure, we previously would only stop early if we were about to escape from a <table> element.  Also stop early if we are about to escape from a <fieldset> element.  If we see either of these elements, we expect the field label to be contained with the element. * Allow <label> elements to misuse the 'for' attribute to specify the element's name rather than its id. TEST=browser_tests --gtest_filter=FormStructureBrowserTest.DataDrivenHeuristics*	87517		http://codereview.chromium.org/7531023	svn://svn.chromium.org/chrome/trunk/src@95019 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/autofill/heuristics/output/16_crbug_87517.out b/chrome/test/data/autofill/heuristics/output/16_crbug_87517.out <newline>new file mode 100644 <newline>index 0000000..290b080 <newline>--- /dev/null <newline>+++ b/chrome/test/data/autofill/heuristics/output/16_crbug_87517.out <newline>@@ -0,0 +1,32 @@ <newline>+NAME_FIRST | dnrfirst | Name * | <newline>+NAME_LAST | dnrlast | Name * | <newline>+COMPANY_NAME | company | Company | <newline>+ADDRESS_HOME_LINE1 | dadd1 | Address 1 * | <newline>+ADDRESS_HOME_LINE2 | dadd2 | Address 2 | <newline>+ADDRESS_HOME_CITY | dcity | City / State / Zip * | <newline>+ADDRESS_HOME_STATE | dstate | Name * | AL <newline>+ADDRESS_HOME_ZIP | dzip | Name * | <newline>+ADDRESS_HOME_COUNTRY | CC_COUNTRY | Country | United States <newline>+PHONE_HOME_WHOLE_NUMBER | dphone | Telephone | <newline>+EMAIL_ADDRESS | demail | Email * | <newline>+UNKNOWN_TYPE | amt | $ | <newline>+UNKNOWN_TYPE | ccrecurring | I would like to make this a recurring donation deducted | Monthly <newline>+UNKNOWN_TYPE | remLen | ( You may enter up to 500 characters. ) | 500 <newline>+NAME_FULL | Tribute_Name | Name: | <newline>+UNKNOWN_TYPE | Tribute_occasion | Occasion: | <newline>+NAME_FULL | Tribute_NotifyName | Name: | <newline>+EMAIL_ADDRESS | Tribute_Email | Email: | <newline>+ADDRESS_HOME_LINE1 | Tribute_NotifyAddr | Street: | <newline>+ADDRESS_HOME_CITY | Tribute_NotifyCity | City / St. / Zip: | <newline>+ADDRESS_HOME_STATE | Tribute_NotifyState | City / St. / Zip: | <newline>+ADDRESS_HOME_ZIP | Tribute_NotifyZip | City / St. / Zip: | <newline>+UNKNOWN_TYPE | cctype | Credit Card Type * | Visa <newline>+CREDIT_CARD_NUMBER | ccard | Credit Card Number * | <newline>+UNKNOWN_TYPE | csc | CSC Number * What Is This? | <newline>+CREDIT_CARD_EXP_MONTH | ExpMon | Month | 1 <newline>+CREDIT_CARD_EXP_4_DIGIT_YEAR | ExpYear | Year | 11 <newline>+ADDRESS_HOME_LINE1 | CC_Addr | Address 1 * | <newline>+ADDRESS_HOME_LINE2 | CC_Addr2 | Address 2 | <newline>+ADDRESS_HOME_CITY | CC_City | City / State / Zip * | <newline>+ADDRESS_HOME_STATE | CC_State | Credit Card Information | <newline>+ADDRESS_HOME_ZIP | CC_Zip | Credit Card Information |
65f67c2db4c801d60dc8e73a8636bdc381e6b6b	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 28 18:38:55 2011 +0000	Apply content-security-policy directive to chrome://tasks page.			http://codereview.chromium.org/7482035	svn://svn.chromium.org/chrome/trunk/src@94512 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index da92018..60cadc6 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -69,6 +69,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://stats': { 'CSP': False }, <newline>     'chrome://sync': { 'title': 'Sync Internals', 'CSP': False }, <newline>     'chrome://sync-internals': { 'title': 'Sync Internals', 'CSP': False }, <newline>+    'chrome://tasks': { 'title': 'Task Manager - Chromium' }, <newline>     'chrome://terms': { 'CSP': False }, <newline>     'chrome://textfields': { 'title': 'chrome://textfields', 'CSP': False }, <newline>     'chrome://version': { 'title': 'About Version' }, <newline>@@ -82,9 +83,6 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     # crashed under debug when invoked from location bar (bug 88223). <newline>     'chrome://devtools': { 'CSP': False }, <newline>-    # intermittent crash on cromeos=1 on linux <newline>-    'chrome://tasks': { 'title': 'About Histograms' }, <newline>- <newline>     # returns "not available" despite having an URL constant. <newline>     'chrome://dialog': { 'CSP': False }, <newline>@@ -150,6 +148,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://cryptohome': { 'CSP': False}, <newline>     'chrome://mobilesetup': { 'CSP': False }, <newline>     'chrome://print': { 'CSP': False }, <newline>+    'chrome://tasks': {}, <newline>   } <newline>   linux_special_url_tabs = {
ecbbdfcbe7dfcc2013c6cf431fc9d4f25e21315	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 28 18:38:55 2011 +0000	Apply content-security-policy directive to chrome://tasks page.			http://codereview.chromium.org/7482035	svn://svn.chromium.org/chrome/trunk/src@94512 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index da92018..60cadc6 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -69,6 +69,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://stats': { 'CSP': False }, <newline>     'chrome://sync': { 'title': 'Sync Internals', 'CSP': False }, <newline>     'chrome://sync-internals': { 'title': 'Sync Internals', 'CSP': False }, <newline>+    'chrome://tasks': { 'title': 'Task Manager - Chromium' }, <newline>     'chrome://terms': { 'CSP': False }, <newline>     'chrome://textfields': { 'title': 'chrome://textfields', 'CSP': False }, <newline>     'chrome://version': { 'title': 'About Version' }, <newline>@@ -82,9 +83,6 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     # crashed under debug when invoked from location bar (bug 88223). <newline>     'chrome://devtools': { 'CSP': False }, <newline>-    # intermittent crash on cromeos=1 on linux <newline>-    'chrome://tasks': { 'title': 'About Histograms' }, <newline>- <newline>     # returns "not available" despite having an URL constant. <newline>     'chrome://dialog': { 'CSP': False }, <newline>@@ -150,6 +148,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://cryptohome': { 'CSP': False}, <newline>     'chrome://mobilesetup': { 'CSP': False }, <newline>     'chrome://print': { 'CSP': False }, <newline>+    'chrome://tasks': {}, <newline>   } <newline>   linux_special_url_tabs = {
354394221587854c36d245ac4a9e4add8e453b1	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 27 17:47:39 2011 +0000	Add content-security-policy to chrome://sessions.			http://codereview.chromium.org/7452012	svn://svn.chromium.org/chrome/trunk/src@94318 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 8ca7c36..da92018 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -64,7 +64,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://net-internals/help.html': {}, <newline>     'chrome://newtab': { 'title': 'New Tab', 'CSP': False }, <newline>     'chrome://plugins': { 'title': 'Plug-ins' }, <newline>-    'chrome://sessions': { 'title': 'Sessions', 'CSP': False }, <newline>+    'chrome://sessions': { 'title': 'Sessions' }, <newline>     'chrome://settings': { 'title': 'Preferences - Basics' }, <newline>     'chrome://stats': { 'CSP': False }, <newline>     'chrome://sync': { 'title': 'Sync Internals', 'CSP': False },
0cc27ee84e7a6c482d4bb203f08f193911663b8	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 27 17:47:39 2011 +0000	Add content-security-policy to chrome://sessions.			http://codereview.chromium.org/7452012	svn://svn.chromium.org/chrome/trunk/src@94318 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 8ca7c36..da92018 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -64,7 +64,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://net-internals/help.html': {}, <newline>     'chrome://newtab': { 'title': 'New Tab', 'CSP': False }, <newline>     'chrome://plugins': { 'title': 'Plug-ins' }, <newline>-    'chrome://sessions': { 'title': 'Sessions', 'CSP': False }, <newline>+    'chrome://sessions': { 'title': 'Sessions' }, <newline>     'chrome://settings': { 'title': 'Preferences - Basics' }, <newline>     'chrome://stats': { 'CSP': False }, <newline>     'chrome://sync': { 'title': 'Sync Internals', 'CSP': False },
f3f0d1d7dc22d69f6103d3ddb905c241a9bb5ef	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 25 21:19:29 2011 +0000	Apply content-security-policy to chrome://net-internals. Also get rid of yucky data: urls and serve help page from this UI source as well.			http://codereview.chromium.org/7455005	svn://svn.chromium.org/chrome/trunk/src@93953 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 798beb8..8ca7c36 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -60,7 +60,8 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://history2': { 'title': 'History', 'CSP': False }, <newline>     'chrome://media-internals': { 'title': 'Media Internals', 'CSP': False }, <newline>     'chrome://memory-redirect': { 'title': 'About Memory' }, <newline>-    'chrome://net-internals': { 'CSP': False }, <newline>+    'chrome://net-internals': {}, <newline>+    'chrome://net-internals/help.html': {}, <newline>     'chrome://newtab': { 'title': 'New Tab', 'CSP': False }, <newline>     'chrome://plugins': { 'title': 'Plug-ins' }, <newline>     'chrome://sessions': { 'title': 'Sessions', 'CSP': False }, <newline>@@ -286,7 +287,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>       else: <newline>         include_list.extend(['X-WebKit-CSP']) <newline>         exclude_list.extend(['<script>', 'onclick=', 'onload=', <newline>-                             'onchange=', 'onsubmit=']) <newline>+                             'onchange=', 'onsubmit=', 'javascript:']) <newline>       if 'includes' in properties: <newline>         include_list.extend(properties['includes']) <newline>       if 'excludes' in properties:
3a2139b9c84f0d50022f1dd7a1c10c968f8fc8d	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 25 21:19:29 2011 +0000	Apply content-security-policy to chrome://net-internals. Also get rid of yucky data: urls and serve help page from this UI source as well.			http://codereview.chromium.org/7455005	svn://svn.chromium.org/chrome/trunk/src@93953 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 798beb8..8ca7c36 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -60,7 +60,8 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://history2': { 'title': 'History', 'CSP': False }, <newline>     'chrome://media-internals': { 'title': 'Media Internals', 'CSP': False }, <newline>     'chrome://memory-redirect': { 'title': 'About Memory' }, <newline>-    'chrome://net-internals': { 'CSP': False }, <newline>+    'chrome://net-internals': {}, <newline>+    'chrome://net-internals/help.html': {}, <newline>     'chrome://newtab': { 'title': 'New Tab', 'CSP': False }, <newline>     'chrome://plugins': { 'title': 'Plug-ins' }, <newline>     'chrome://sessions': { 'title': 'Sessions', 'CSP': False }, <newline>@@ -286,7 +287,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>       else: <newline>         include_list.extend(['X-WebKit-CSP']) <newline>         exclude_list.extend(['<script>', 'onclick=', 'onload=', <newline>-                             'onchange=', 'onsubmit=']) <newline>+                             'onchange=', 'onsubmit=', 'javascript:']) <newline>       if 'includes' in properties: <newline>         include_list.extend(properties['includes']) <newline>       if 'excludes' in properties:
1dd9717e087cde7d619e4505ede1529a3e4f4e4	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 25 16:52:49 2011 +0000	Apply content-security-policy to chrome://gpu-internals.			http://codereview.chromium.org/7411004	svn://svn.chromium.org/chrome/trunk/src@93896 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index d34d60b..798beb8 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -54,7 +54,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://extensions': { 'title': 'Extensions' }, <newline>     'chrome://flags': {}, <newline>     'chrome://flash': {}, <newline>-    'chrome://gpu-internals': { 'CSP': False }, <newline>+    'chrome://gpu-internals': {}, <newline>     'chrome://histograms': { 'title': 'About Histograms' }, <newline>     'chrome://history': { 'title': 'History' }, <newline>     'chrome://history2': { 'title': 'History', 'CSP': False },
f6a12802e8294c709ad2e45e7367b6f4036df6f	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 25 16:52:49 2011 +0000	Apply content-security-policy to chrome://gpu-internals.			http://codereview.chromium.org/7411004	svn://svn.chromium.org/chrome/trunk/src@93896 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index d34d60b..798beb8 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -54,7 +54,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://extensions': { 'title': 'Extensions' }, <newline>     'chrome://flags': {}, <newline>     'chrome://flash': {}, <newline>-    'chrome://gpu-internals': { 'CSP': False }, <newline>+    'chrome://gpu-internals': {}, <newline>     'chrome://histograms': { 'title': 'About Histograms' }, <newline>     'chrome://history': { 'title': 'History' }, <newline>     'chrome://history2': { 'title': 'History', 'CSP': False },
3676acd33dd32c25975133dde0c4a9a48f01789	frankf@chromium.org <frankf@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 20 22:28:05 2011 +0000	Excluded chromeos_security tests from CONTINUOUS_PUBLIC and excluded tests affected by 81271 from all platforms. TEST=None	None		http://codereview.chromium.org/7468011	svn://svn.chromium.org/chrome/trunk/src@93268 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/PYAUTO_TESTS b/chrome/test/functional/PYAUTO_TESTS <newline>index 4c89715..ba6161c 100644 <newline>--- a/chrome/test/functional/PYAUTO_TESTS <newline>+++ b/chrome/test/functional/PYAUTO_TESTS <newline>@@ -77,6 +77,9 @@ <newline>       # ================================================== <newline>       # crbug.com/83686 <newline>       '-autofill.AutofillTest.testFillProfileCrazyCharacters', <newline>+      # crbug.com/81271 <newline>+      '-autofill.AutofillTest.testMergeAggregatedProfilesWithSameAddress', <newline>+      '-autofill.AutofillTest.testProfilesNotMergedWhenNoMinAddressData', <newline>       # Browser crash when clearing browsing history and downloads together. <newline>       # crbug.com/88128 <newline>       '-browsing_data.BrowsingDataTest.testClearHistoryAndDownloads', <newline>@@ -128,9 +131,6 @@ <newline>       # ================================================== <newline>       # crbug.com/89081 <newline>       '-autofill.AutofillTest.testCharsStrippedForAggregatedPhoneNumbers', <newline>-      # crbug.com/81271 <newline>-      '-autofill.AutofillTest.testMergeAggregatedProfilesWithSameAddress', <newline>-      '-autofill.AutofillTest.testProfilesNotMergedWhenNoMinAddressData', <newline>       # crbug.com/85597 <newline>       '-cookies.CookiesTest.testCookiesFile', <newline>       # Some download test fails on win official builder, only thru buildbot <newline>@@ -315,7 +315,10 @@ <newline>       # Permanently-disabled tests. <newline>       # =========================== <newline>       '-infobars.InfobarTest.testPluginCrashForMultiTabs', <newline>+      '-chromeos_security.ChromeosSecurity.testBundledCrxPermissions', <newline>       '-chromeos_security.ChromeosSecurity.testCannotViewLocalFiles', <newline>+      '-chromeos_security.ChromeosSecurity.testComponentExtensionPermissions', <newline>+      '-chromeos_security.ChromeosSecurity.testNoUnexpectedExtensions', <newline>       '-flash.FlashTest.testCanLoadFlash', <newline>       '-flash.FlashTest.testFlashLoadsAfterKill', <newline>       '-flash.FlashTest.testFlashIncognitoMode',
67848a55cc0e862b936984af04b56cc5342e59b	frankf@chromium.org <frankf@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 20 22:28:05 2011 +0000	Excluded chromeos_security tests from CONTINUOUS_PUBLIC and excluded tests affected by 81271 from all platforms. TEST=None	None		http://codereview.chromium.org/7468011	svn://svn.chromium.org/chrome/trunk/src@93268 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/PYAUTO_TESTS b/chrome/test/functional/PYAUTO_TESTS <newline>index 4c89715..ba6161c 100644 <newline>--- a/chrome/test/functional/PYAUTO_TESTS <newline>+++ b/chrome/test/functional/PYAUTO_TESTS <newline>@@ -77,6 +77,9 @@ <newline>       # ================================================== <newline>       # crbug.com/83686 <newline>       '-autofill.AutofillTest.testFillProfileCrazyCharacters', <newline>+      # crbug.com/81271 <newline>+      '-autofill.AutofillTest.testMergeAggregatedProfilesWithSameAddress', <newline>+      '-autofill.AutofillTest.testProfilesNotMergedWhenNoMinAddressData', <newline>       # Browser crash when clearing browsing history and downloads together. <newline>       # crbug.com/88128 <newline>       '-browsing_data.BrowsingDataTest.testClearHistoryAndDownloads', <newline>@@ -128,9 +131,6 @@ <newline>       # ================================================== <newline>       # crbug.com/89081 <newline>       '-autofill.AutofillTest.testCharsStrippedForAggregatedPhoneNumbers', <newline>-      # crbug.com/81271 <newline>-      '-autofill.AutofillTest.testMergeAggregatedProfilesWithSameAddress', <newline>-      '-autofill.AutofillTest.testProfilesNotMergedWhenNoMinAddressData', <newline>       # crbug.com/85597 <newline>       '-cookies.CookiesTest.testCookiesFile', <newline>       # Some download test fails on win official builder, only thru buildbot <newline>@@ -315,7 +315,10 @@ <newline>       # Permanently-disabled tests. <newline>       # =========================== <newline>       '-infobars.InfobarTest.testPluginCrashForMultiTabs', <newline>+      '-chromeos_security.ChromeosSecurity.testBundledCrxPermissions', <newline>       '-chromeos_security.ChromeosSecurity.testCannotViewLocalFiles', <newline>+      '-chromeos_security.ChromeosSecurity.testComponentExtensionPermissions', <newline>+      '-chromeos_security.ChromeosSecurity.testNoUnexpectedExtensions', <newline>       '-flash.FlashTest.testCanLoadFlash', <newline>       '-flash.FlashTest.testFlashLoadsAfterKill', <newline>       '-flash.FlashTest.testFlashIncognitoMode',
0d336e37471a70ca822dfd65076958b63175269	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jul 19 17:41:11 2011 +0000	Consolidate content-security-policy markup for chrome:// pages into a single file, and have grit preprocess it into all the places it belongs.  Also add to resource bundle so that the about handler can return the same thing.			http://codereview.chromium.org/7396026	svn://svn.chromium.org/chrome/trunk/src@93052 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/plugins.html b/chrome/browser/resources/plugins.html <newline>index 170b2d8..01b5cd5 100644 <newline>--- a/chrome/browser/resources/plugins.html <newline>+++ b/chrome/browser/resources/plugins.html <newline>@@ -2,15 +2,7 @@ <newline> <html i18n-values="dir:textdirection;"> <newline> <head> <newline> <meta charset="utf-8"> <newline>-<!-- X-WebKit-CSP is our development name for Content-Security-Policy. <newline>-     The 'unsafe-eval' is required for jstemplate_compiled.js. <newline>-     TODO(tsepez) rename when Content-security-policy is done. <newline>---> <newline>-<meta http-equiv="X-WebKit-CSP" <newline>-      content="object-src 'none'; <newline>-               script-src chrome://resources <newline>-                          chrome-extension://mndnfokpggljbaajbnioimlmbfngpief <newline>-                          'self' 'unsafe-eval'"> <newline>+<include src="content_security_policy.html"/> <newline> <title i18n-content="pluginsTitle"></title> <newline> <style> <newline> body {
23088387fdb3d3debe60c0280b99cdc18803819	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jul 19 17:41:11 2011 +0000	Consolidate content-security-policy markup for chrome:// pages into a single file, and have grit preprocess it into all the places it belongs.  Also add to resource bundle so that the about handler can return the same thing.			http://codereview.chromium.org/7396026	svn://svn.chromium.org/chrome/trunk/src@93052 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/plugins.html b/chrome/browser/resources/plugins.html <newline>index 170b2d8..01b5cd5 100644 <newline>--- a/chrome/browser/resources/plugins.html <newline>+++ b/chrome/browser/resources/plugins.html <newline>@@ -2,15 +2,7 @@ <newline> <html i18n-values="dir:textdirection;"> <newline> <head> <newline> <meta charset="utf-8"> <newline>-<!-- X-WebKit-CSP is our development name for Content-Security-Policy. <newline>-     The 'unsafe-eval' is required for jstemplate_compiled.js. <newline>-     TODO(tsepez) rename when Content-security-policy is done. <newline>---> <newline>-<meta http-equiv="X-WebKit-CSP" <newline>-      content="object-src 'none'; <newline>-               script-src chrome://resources <newline>-                          chrome-extension://mndnfokpggljbaajbnioimlmbfngpief <newline>-                          'self' 'unsafe-eval'"> <newline>+<include src="content_security_policy.html"/> <newline> <title i18n-content="pluginsTitle"></title> <newline> <style> <newline> body {
1842041c636a1cb5d6abef05b9aee658eda28d4	dennisjeffrey@chromium.org <dennisjeffrey@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jul 19 00:00:50 2011 +0000	Enable pyauto tests related to ChromeOS security that should now pass. These tests had been failing because the extension permissions baseline for these tests needed to be updated.  The baseline has since been updated and these tests should now pass on ChromeOS. TEST=None	chromium-os:17714		http://codereview.chromium.org/7409001	svn://svn.chromium.org/chrome/trunk/src@92924 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/PYAUTO_TESTS b/chrome/test/functional/PYAUTO_TESTS <newline>index 32d1c62..abefab5 100644 <newline>--- a/chrome/test/functional/PYAUTO_TESTS <newline>+++ b/chrome/test/functional/PYAUTO_TESTS <newline>@@ -273,9 +273,6 @@ <newline>       # ================================================== <newline>       # Flaky: crosbug.com/14394 <newline>       '-browsing_data.BrowsingDataTest.testClearHistoryAndDownloads', <newline>-      # crosbug.com/17714 <newline>-      '-chromeos_security.ChromeosSecurity.testComponentExtensionPermissions', <newline>-      '-chromeos_security.ChromeosSecurity.testNoUnexpectedExtensions', <newline>       # Chrome freezes and then system reboots when downloading large files <newline>       # crosbug.com/17459 <newline>       '-downloads.DownloadsTest.testBigZip',
acb058b38acc26a132c07cfce2d1289adb88601	dennisjeffrey@chromium.org <dennisjeffrey@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jul 19 00:00:50 2011 +0000	Enable pyauto tests related to ChromeOS security that should now pass. These tests had been failing because the extension permissions baseline for these tests needed to be updated.  The baseline has since been updated and these tests should now pass on ChromeOS. TEST=None	chromium-os:17714		http://codereview.chromium.org/7409001	svn://svn.chromium.org/chrome/trunk/src@92924 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/PYAUTO_TESTS b/chrome/test/functional/PYAUTO_TESTS <newline>index 32d1c62..abefab5 100644 <newline>--- a/chrome/test/functional/PYAUTO_TESTS <newline>+++ b/chrome/test/functional/PYAUTO_TESTS <newline>@@ -273,9 +273,6 @@ <newline>       # ================================================== <newline>       # Flaky: crosbug.com/14394 <newline>       '-browsing_data.BrowsingDataTest.testClearHistoryAndDownloads', <newline>-      # crosbug.com/17714 <newline>-      '-chromeos_security.ChromeosSecurity.testComponentExtensionPermissions', <newline>-      '-chromeos_security.ChromeosSecurity.testNoUnexpectedExtensions', <newline>       # Chrome freezes and then system reboots when downloading large files <newline>       # crosbug.com/17459 <newline>       '-downloads.DownloadsTest.testBigZip',
7a9f6d9f9d5f0a0e591afbfccd193251fde15b4	nirnimesh@chromium.org <nirnimesh@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 18 21:37:33 2011 +0000	Disable failing pyauto extension security tests R=dennisjeffrey@chromium.org TEST=	17714		http://codereview.chromium.org/7390033	svn://svn.chromium.org/chrome/trunk/src@92894 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/PYAUTO_TESTS b/chrome/test/functional/PYAUTO_TESTS <newline>index abefab5..32d1c62 100644 <newline>--- a/chrome/test/functional/PYAUTO_TESTS <newline>+++ b/chrome/test/functional/PYAUTO_TESTS <newline>@@ -273,6 +273,9 @@ <newline>       # ================================================== <newline>       # Flaky: crosbug.com/14394 <newline>       '-browsing_data.BrowsingDataTest.testClearHistoryAndDownloads', <newline>+      # crosbug.com/17714 <newline>+      '-chromeos_security.ChromeosSecurity.testComponentExtensionPermissions', <newline>+      '-chromeos_security.ChromeosSecurity.testNoUnexpectedExtensions', <newline>       # Chrome freezes and then system reboots when downloading large files <newline>       # crosbug.com/17459 <newline>       '-downloads.DownloadsTest.testBigZip',
93c74cad11f97c8debfa11da976240bbcfb0fc0	nirnimesh@chromium.org <nirnimesh@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 18 21:37:33 2011 +0000	Disable failing pyauto extension security tests R=dennisjeffrey@chromium.org TEST=	17714		http://codereview.chromium.org/7390033	svn://svn.chromium.org/chrome/trunk/src@92894 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/PYAUTO_TESTS b/chrome/test/functional/PYAUTO_TESTS <newline>index abefab5..32d1c62 100644 <newline>--- a/chrome/test/functional/PYAUTO_TESTS <newline>+++ b/chrome/test/functional/PYAUTO_TESTS <newline>@@ -273,6 +273,9 @@ <newline>       # ================================================== <newline>       # Flaky: crosbug.com/14394 <newline>       '-browsing_data.BrowsingDataTest.testClearHistoryAndDownloads', <newline>+      # crosbug.com/17714 <newline>+      '-chromeos_security.ChromeosSecurity.testComponentExtensionPermissions', <newline>+      '-chromeos_security.ChromeosSecurity.testNoUnexpectedExtensions', <newline>       # Chrome freezes and then system reboots when downloading large files <newline>       # crosbug.com/17459 <newline>       '-downloads.DownloadsTest.testBigZip',
baf12d415215ef335d9b19358eb1f36daf42e8a	kathyw@chromium.org <kathyw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 18 00:07:26 2011 +0000	Add doc for the "content_security_policy" manifest field. TEST=code.google.com/chrome/extensions/dev/manifest.html#content_security_policy goes to a subsection about this policy	89471		http://codereview.chromium.org/7398010	svn://svn.chromium.org/chrome/trunk/src@92823 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/static/manifest.html b/chrome/common/extensions/docs/static/manifest.html <newline>index 002861a..816ac5c 100644 <newline>--- a/chrome/common/extensions/docs/static/manifest.html <newline>+++ b/chrome/common/extensions/docs/static/manifest.html <newline>@@ -38,12 +38,13 @@ are <b>name</b> and <b>version</b>. <newline>   "<a href="background_pages.html">background_page</a>": "<em>aFile</em>.html", <newline>   "<a href="override.html">chrome_url_overrides</a>": {...}, <newline>   "<a href="content_scripts.html">content_scripts</a>": [...], <newline>+  "<a href="#content_security_policy">content_security_policy</a>": "<em>policyString</em>", <newline>   "<a href="fileBrowserHandler.html">file_browser_handlers</a>": [...], <newline>   "<a href="#homepage_url">homepage_url</a>": "http://<em>path/to/homepage</em>", <newline>   "<a href="#incognito">incognito</a>": "spanning" <em>or</em> "split", <newline>   "<a href="#key">key</a>": "<em>publicKey</em>", <newline>   "<a href="#minimum_chrome_version">minimum_chrome_version</a>": "<em>versionString</em>", <newline>-  "<a href="omnibox.html">omnibox</a>": { "keyword" : "<em>aString</em>" }, <newline>+  "<a href="omnibox.html">omnibox</a>": { "keyword": "<em>aString</em>" }, <newline>   "<a href="options.html">options_page</a>": "<em>aFile</em>.html", <newline>   "<a href="#permissions">permissions</a>": [...], <newline>   "<a href="npapi.html">plugins</a>": [...], <newline>@@ -106,6 +107,33 @@ You can specify locale-specific strings for this field; <newline> see <a href="i18n.html">Internationalization</a> for details. <newline> </p> <newline>+<h3 id="content_security_policy">content_security_policy</h3> <newline>+ <newline>+<p> <newline>+A security policy to apply to resources in your extension. <newline>+You can use this policy to help prevent cross-site scripting <newline>+vulnerabilities in your extension. <newline>+To specify that your extension loads resources <newline>+only from its own package, use the following policy: <newline>+</p> <newline>+ <newline>+<pre>"content_security_policy": "default-src 'self' " </pre> <newline>+ <newline>+<p> <newline>+If you need to load resources from websites, <newline>+you can add them to the whitelist. <newline>+For example, if your extension uses Google Analytics, <newline>+you might use the following policy: <newline>+</p> <newline>+ <newline>+<pre>"content_security_policy": "default-src 'self' https://ssl.google-analytics.com"</pre> <newline>+ <newline>+<p> <newline>+For details, see the <newline>+<a href="http://dvcs.w3.org/hg/content-security-policy/raw-file/tip/csp-specification.dev.html">Content Security Policy specification</a>. <newline>+</p> <newline>+ <newline>+ <newline> <h3 id="homepage_url">homepage_url</h3> <newline> <p> <newline>@@ -382,6 +410,7 @@ table. <newline>        for hosted apps</b>; it's recommended for extensions and packaged apps. <newline>        </td> <newline> </tr> <newline>+ <newline> <tr> <newline>   <td> "contextMenus" </td> <newline>   <td> Required if the extension uses the
5795dc5488f0877560c0f5bd9748b19bb1af06c	kathyw@chromium.org <kathyw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 18 00:07:26 2011 +0000	Add doc for the "content_security_policy" manifest field. TEST=code.google.com/chrome/extensions/dev/manifest.html#content_security_policy goes to a subsection about this policy	89471		http://codereview.chromium.org/7398010	svn://svn.chromium.org/chrome/trunk/src@92823 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/static/manifest.html b/chrome/common/extensions/docs/static/manifest.html <newline>index 002861a..816ac5c 100644 <newline>--- a/chrome/common/extensions/docs/static/manifest.html <newline>+++ b/chrome/common/extensions/docs/static/manifest.html <newline>@@ -38,12 +38,13 @@ are <b>name</b> and <b>version</b>. <newline>   "<a href="background_pages.html">background_page</a>": "<em>aFile</em>.html", <newline>   "<a href="override.html">chrome_url_overrides</a>": {...}, <newline>   "<a href="content_scripts.html">content_scripts</a>": [...], <newline>+  "<a href="#content_security_policy">content_security_policy</a>": "<em>policyString</em>", <newline>   "<a href="fileBrowserHandler.html">file_browser_handlers</a>": [...], <newline>   "<a href="#homepage_url">homepage_url</a>": "http://<em>path/to/homepage</em>", <newline>   "<a href="#incognito">incognito</a>": "spanning" <em>or</em> "split", <newline>   "<a href="#key">key</a>": "<em>publicKey</em>", <newline>   "<a href="#minimum_chrome_version">minimum_chrome_version</a>": "<em>versionString</em>", <newline>-  "<a href="omnibox.html">omnibox</a>": { "keyword" : "<em>aString</em>" }, <newline>+  "<a href="omnibox.html">omnibox</a>": { "keyword": "<em>aString</em>" }, <newline>   "<a href="options.html">options_page</a>": "<em>aFile</em>.html", <newline>   "<a href="#permissions">permissions</a>": [...], <newline>   "<a href="npapi.html">plugins</a>": [...], <newline>@@ -106,6 +107,33 @@ You can specify locale-specific strings for this field; <newline> see <a href="i18n.html">Internationalization</a> for details. <newline> </p> <newline>+<h3 id="content_security_policy">content_security_policy</h3> <newline>+ <newline>+<p> <newline>+A security policy to apply to resources in your extension. <newline>+You can use this policy to help prevent cross-site scripting <newline>+vulnerabilities in your extension. <newline>+To specify that your extension loads resources <newline>+only from its own package, use the following policy: <newline>+</p> <newline>+ <newline>+<pre>"content_security_policy": "default-src 'self' " </pre> <newline>+ <newline>+<p> <newline>+If you need to load resources from websites, <newline>+you can add them to the whitelist. <newline>+For example, if your extension uses Google Analytics, <newline>+you might use the following policy: <newline>+</p> <newline>+ <newline>+<pre>"content_security_policy": "default-src 'self' https://ssl.google-analytics.com"</pre> <newline>+ <newline>+<p> <newline>+For details, see the <newline>+<a href="http://dvcs.w3.org/hg/content-security-policy/raw-file/tip/csp-specification.dev.html">Content Security Policy specification</a>. <newline>+</p> <newline>+ <newline>+ <newline> <h3 id="homepage_url">homepage_url</h3> <newline> <p> <newline>@@ -382,6 +410,7 @@ table. <newline>        for hosted apps</b>; it's recommended for extensions and packaged apps. <newline>        </td> <newline> </tr> <newline>+ <newline> <tr> <newline>   <td> "contextMenus" </td> <newline>   <td> Required if the extension uses the
5768f861ba75bb190073dfc9a4bf39fe78aadd0	dmazzoni@chromium.org <dmazzoni@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jul 16 01:36:45 2011 +0000	Add chrome-extension:// to the list of allowed urls for all internal/webui Content Security Policy rules. This is necessary to allow a trusted accessibility component extension (ChromeVox) to inject script tags into webui pages. This will not hurt security because user_script_slave.cc already has a check to prevent arbitrary extensions from loading on these pages. Only component extensions will be allowed. TEST=manual	89443		http://codereview.chromium.org/7399002	svn://svn.chromium.org/chrome/trunk/src@92776 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/plugins.html b/chrome/browser/resources/plugins.html <newline>index 6d4517a..170b2d8 100644 <newline>--- a/chrome/browser/resources/plugins.html <newline>+++ b/chrome/browser/resources/plugins.html <newline>@@ -6,7 +6,11 @@ <newline>      The 'unsafe-eval' is required for jstemplate_compiled.js. <newline>      TODO(tsepez) rename when Content-security-policy is done. <newline> --> <newline>-<meta http-equiv="X-WebKit-CSP" content="object-src 'none'; script-src chrome://resources 'self' 'unsafe-eval'"> <newline>+<meta http-equiv="X-WebKit-CSP" <newline>+      content="object-src 'none'; <newline>+               script-src chrome://resources <newline>+                          chrome-extension://mndnfokpggljbaajbnioimlmbfngpief <newline>+                          'self' 'unsafe-eval'"> <newline> <title i18n-content="pluginsTitle"></title> <newline> <style> <newline> body {
bc473d7dd6968d2ade37e3f918774ce03a5d5fa	dmazzoni@chromium.org <dmazzoni@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jul 16 01:36:45 2011 +0000	Add chrome-extension:// to the list of allowed urls for all internal/webui Content Security Policy rules. This is necessary to allow a trusted accessibility component extension (ChromeVox) to inject script tags into webui pages. This will not hurt security because user_script_slave.cc already has a check to prevent arbitrary extensions from loading on these pages. Only component extensions will be allowed. TEST=manual	89443		http://codereview.chromium.org/7399002	svn://svn.chromium.org/chrome/trunk/src@92776 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/plugins.html b/chrome/browser/resources/plugins.html <newline>index 6d4517a..170b2d8 100644 <newline>--- a/chrome/browser/resources/plugins.html <newline>+++ b/chrome/browser/resources/plugins.html <newline>@@ -6,7 +6,11 @@ <newline>      The 'unsafe-eval' is required for jstemplate_compiled.js. <newline>      TODO(tsepez) rename when Content-security-policy is done. <newline> --> <newline>-<meta http-equiv="X-WebKit-CSP" content="object-src 'none'; script-src chrome://resources 'self' 'unsafe-eval'"> <newline>+<meta http-equiv="X-WebKit-CSP" <newline>+      content="object-src 'none'; <newline>+               script-src chrome://resources <newline>+                          chrome-extension://mndnfokpggljbaajbnioimlmbfngpief <newline>+                          'self' 'unsafe-eval'"> <newline> <title i18n-content="pluginsTitle"></title> <newline> <style> <newline> body {
5d63d28ae1ce458ecf694ab7333a9b3ba4fa7dd	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jul 16 00:30:40 2011 +0000	Promote the content_security_policy manifest attribute out of experimental.			http://codereview.chromium.org/7398008	svn://svn.chromium.org/chrome/trunk/src@92773 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/extension.cc b/chrome/common/extensions/extension.cc <newline>index 767b1f2..ad676f1 100644 <newline>--- a/chrome/common/extensions/extension.cc <newline>+++ b/chrome/common/extensions/extension.cc <newline>@@ -2218,9 +2218,7 @@ bool Extension::InitFromValue(const DictionaryValue& source, int flags, <newline>     } <newline>   } <newline>-  if (CommandLine::ForCurrentProcess()->HasSwitch( <newline>-          switches::kEnableExperimentalExtensionApis) && <newline>-      source.HasKey(keys::kContentSecurityPolicy)) { <newline>+  if (source.HasKey(keys::kContentSecurityPolicy)) { <newline>     std::string content_security_policy; <newline>     if (!source.GetString(keys::kContentSecurityPolicy, <newline>                           &content_security_policy)) {
bbe89a2eab7e058e6436294f6cf36e18182961a	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jul 16 00:30:40 2011 +0000	Promote the content_security_policy manifest attribute out of experimental.			http://codereview.chromium.org/7398008	svn://svn.chromium.org/chrome/trunk/src@92773 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/extension.cc b/chrome/common/extensions/extension.cc <newline>index 767b1f2..ad676f1 100644 <newline>--- a/chrome/common/extensions/extension.cc <newline>+++ b/chrome/common/extensions/extension.cc <newline>@@ -2218,9 +2218,7 @@ bool Extension::InitFromValue(const DictionaryValue& source, int flags, <newline>     } <newline>   } <newline>-  if (CommandLine::ForCurrentProcess()->HasSwitch( <newline>-          switches::kEnableExperimentalExtensionApis) && <newline>-      source.HasKey(keys::kContentSecurityPolicy)) { <newline>+  if (source.HasKey(keys::kContentSecurityPolicy)) { <newline>     std::string content_security_policy; <newline>     if (!source.GetString(keys::kContentSecurityPolicy, <newline>                           &content_security_policy)) {
1df550e87818a0d332b2b099a350c8b3d78489e	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 13 23:51:20 2011 +0000	Apply content-security-policy to chrome://extensions page.			http://codereview.chromium.org/7331043	svn://svn.chromium.org/chrome/trunk/src@92449 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index dbfc545..ab2e94d 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -49,7 +49,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://crashes': { 'title': 'Crashes' }, <newline>     'chrome://credits': { 'title': 'Credits', 'CSP': False }, <newline>     'chrome://downloads': { 'title': 'Downloads' }, <newline>-    'chrome://extensions': { 'title': 'Extensions', 'CSP': False }, <newline>+    'chrome://extensions': { 'title': 'Extensions' }, <newline>     'chrome://flags': {}, <newline>     'chrome://flash': {}, <newline>     'chrome://gpu-internals': { 'CSP': False }, <newline>@@ -265,14 +265,15 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>       self.assertEqual(expected_title, actual_title) <newline>       include_list = [] <newline>       exclude_list = [] <newline>-      if ('CSP' in properties and not properties['CSP']): <newline>+      if 'CSP' in properties and not properties['CSP']: <newline>         exclude_list.extend(['X-WebKit-CSP']) <newline>       else: <newline>         include_list.extend(['X-WebKit-CSP']) <newline>-        exclude_list.extend(['<script>', 'onclick=', 'onload=']) <newline>-      if ('includes' in properties): <newline>+        exclude_list.extend(['<script>', 'onclick=', 'onload=', <newline>+                             'onchange=', 'onsubmit=']) <newline>+      if 'includes' in properties: <newline>         include_list.extend(properties['includes']) <newline>-      if ('excludes' in properties): <newline>+      if 'excludes' in properties: <newline>         exclude_list.extend(properties['exlcudes']) <newline>       test_utils.StringContentCheck(self, self.GetTabContents(), <newline>                                     include_list, exclude_list)
d9374e63a5a1ecf67ee0f4a490e81eb8404d4da	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 13 23:51:20 2011 +0000	Apply content-security-policy to chrome://extensions page.			http://codereview.chromium.org/7331043	svn://svn.chromium.org/chrome/trunk/src@92449 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index dbfc545..ab2e94d 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -49,7 +49,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>     'chrome://crashes': { 'title': 'Crashes' }, <newline>     'chrome://credits': { 'title': 'Credits', 'CSP': False }, <newline>     'chrome://downloads': { 'title': 'Downloads' }, <newline>-    'chrome://extensions': { 'title': 'Extensions', 'CSP': False }, <newline>+    'chrome://extensions': { 'title': 'Extensions' }, <newline>     'chrome://flags': {}, <newline>     'chrome://flash': {}, <newline>     'chrome://gpu-internals': { 'CSP': False }, <newline>@@ -265,14 +265,15 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>       self.assertEqual(expected_title, actual_title) <newline>       include_list = [] <newline>       exclude_list = [] <newline>-      if ('CSP' in properties and not properties['CSP']): <newline>+      if 'CSP' in properties and not properties['CSP']: <newline>         exclude_list.extend(['X-WebKit-CSP']) <newline>       else: <newline>         include_list.extend(['X-WebKit-CSP']) <newline>-        exclude_list.extend(['<script>', 'onclick=', 'onload=']) <newline>-      if ('includes' in properties): <newline>+        exclude_list.extend(['<script>', 'onclick=', 'onload=', <newline>+                             'onchange=', 'onsubmit=']) <newline>+      if 'includes' in properties: <newline>         include_list.extend(properties['includes']) <newline>-      if ('excludes' in properties): <newline>+      if 'excludes' in properties: <newline>         exclude_list.extend(properties['exlcudes']) <newline>       test_utils.StringContentCheck(self, self.GetTabContents(), <newline>                                     include_list, exclude_list)
377f8296fc4ca882e8e44336d36f84e3ee10678	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 13 21:17:27 2011 +0000	Add content-security-policy to chrome://view-http-cache, and move scripts to head in chrome://history.			http://codereview.chromium.org/7310009	svn://svn.chromium.org/chrome/trunk/src@92418 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/view_cache_helper.cc b/net/url_request/view_cache_helper.cc <newline>index c5fd1f6..d6761e1 100644 <newline>--- a/net/url_request/view_cache_helper.cc <newline>+++ b/net/url_request/view_cache_helper.cc <newline>@@ -15,7 +15,9 @@ <newline> #include "net/url_request/url_request_context.h" <newline> #define VIEW_CACHE_HEAD \ <newline>-  "<html><body><table>" <newline>+  "<html><meta charset=\"utf-8\"><meta http-equiv=\"X-WebKit-CSP\" " \ <newline>+  "content=\"object-src 'none'; script-src 'none' 'unsafe-eval'\">" \ <newline>+  "<body><table>" <newline> #define VIEW_CACHE_TAIL \ <newline>   "</table></body></html>"
ec743adff0d2f261d28d0bb45e4c351b7c9ad3f	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 13 21:17:27 2011 +0000	Add content-security-policy to chrome://view-http-cache, and move scripts to head in chrome://history.			http://codereview.chromium.org/7310009	svn://svn.chromium.org/chrome/trunk/src@92418 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/view_cache_helper.cc b/net/url_request/view_cache_helper.cc <newline>index c5fd1f6..d6761e1 100644 <newline>--- a/net/url_request/view_cache_helper.cc <newline>+++ b/net/url_request/view_cache_helper.cc <newline>@@ -15,7 +15,9 @@ <newline> #include "net/url_request/url_request_context.h" <newline> #define VIEW_CACHE_HEAD \ <newline>-  "<html><body><table>" <newline>+  "<html><meta charset=\"utf-8\"><meta http-equiv=\"X-WebKit-CSP\" " \ <newline>+  "content=\"object-src 'none'; script-src 'none' 'unsafe-eval'\">" \ <newline>+  "<body><table>" <newline> #define VIEW_CACHE_TAIL \ <newline>   "</table></body></html>"
55c37ada9b094e9b12b83706db5bb6807d599e0	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 6 18:37:56 2011 +0000	Add content-security-policy directive to chrome://crashes page. TEST=chrome://crashes renders, and special_tabs.py passes.			http://codereview.chromium.org/7276009	svn://svn.chromium.org/chrome/trunk/src@91583 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 6d22532..fbf7f85 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -46,7 +46,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>       'CSP': False <newline>     }, <newline>     'chrome://chrome-urls': { 'title': 'Chrome URLs' }, <newline>-    'chrome://crashes': { 'title': 'Crashes', 'CSP': False }, <newline>+    'chrome://crashes': { 'title': 'Crashes' }, <newline>     'chrome://credits': { 'title': 'Credits', 'CSP': False }, <newline>     'chrome://downloads': { 'title': 'Downloads' }, <newline>     'chrome://extensions': { 'title': 'Extensions', 'CSP': False },
781025262d8508edaf93c0556e4e591fa1489f2	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 6 18:37:56 2011 +0000	Add content-security-policy directive to chrome://crashes page. TEST=chrome://crashes renders, and special_tabs.py passes.			http://codereview.chromium.org/7276009	svn://svn.chromium.org/chrome/trunk/src@91583 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/special_tabs.py b/chrome/test/functional/special_tabs.py <newline>index 6d22532..fbf7f85 100644 <newline>--- a/chrome/test/functional/special_tabs.py <newline>+++ b/chrome/test/functional/special_tabs.py <newline>@@ -46,7 +46,7 @@ class SpecialTabsTest(pyauto.PyUITest): <newline>       'CSP': False <newline>     }, <newline>     'chrome://chrome-urls': { 'title': 'Chrome URLs' }, <newline>-    'chrome://crashes': { 'title': 'Crashes', 'CSP': False }, <newline>+    'chrome://crashes': { 'title': 'Crashes' }, <newline>     'chrome://credits': { 'title': 'Credits', 'CSP': False }, <newline>     'chrome://downloads': { 'title': 'Downloads' }, <newline>     'chrome://extensions': { 'title': 'Extensions', 'CSP': False },
d28b5a500cdb63737a0648de89316997b013868	stuartmorgan@chromium.org <stuartmorgan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jul 1 18:31:49 2011 +0000	Add Safari spoofing when visiting the Silverlight install/update page in Mac Chrome. The update flow for Silverlight on the Mac takes the user to a page that does UA detection, and provides Mac Chrome users a page that makes it much less clear that they should update (and how to) just because it's not one of the officially supported platforms. Spoof as a supported browser on that page to increase the chances that users will successfully complete the update, since not updating is a potential security issue. TEST=Visit the Silverlight update/install page in Mac Chrome; there should be a clear download link, and instructions for installing.	None		http://codereview.chromium.org/7210063	svn://svn.chromium.org/chrome/trunk/src@91329 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/webkit_glue.cc b/webkit/glue/webkit_glue.cc <newline>index 3c86c58..7d276f4 100644 <newline>--- a/webkit/glue/webkit_glue.cc <newline>+++ b/webkit/glue/webkit_glue.cc <newline>@@ -347,6 +347,8 @@ struct UserAgentState { <newline>   // The UA string when we're pretending to be Windows Chrome. <newline>   std::string mimic_windows_user_agent; <newline>+  // The UA string when we're pretending to be Mac Safari. <newline>+  std::string mimic_mac_safari_user_agent; <newline>   bool user_agent_requested; <newline>   bool user_agent_is_overridden; <newline>@@ -387,6 +389,20 @@ const std::string& GetUserAgent(const GURL& url) { <newline>       return g_user_agent.Get().mimic_windows_user_agent; <newline>     } <newline> #endif <newline>+#if defined(OS_MACOSX) <newline>+    if (url.host() == "www.microsoft.com" && <newline>+        StartsWithASCII(url.path(), "/getsilverlight", false)) { <newline>+      // The landing page for updating Silverlight gives a confusing experience <newline>+      // in browsers that Silverlight doesn't officially support; spoof as <newline>+      // Safari to reduce the chance that users won't complete updates. <newline>+      // Should be removed if the sniffing is removed: http://crbug.com/88211 <newline>+      if (g_user_agent.Get().mimic_mac_safari_user_agent.empty()) { <newline>+        g_user_agent.Get().mimic_mac_safari_user_agent = <newline>+            BuildUserAgentHelper(false, "Version/5.0.4 Safari/533.20.27"); <newline>+      } <newline>+      return g_user_agent.Get().mimic_mac_safari_user_agent; <newline>+    } <newline>+#endif <newline>   } <newline>   return g_user_agent.Get().user_agent; <newline> }
c8d197b2c62af81ab7bb67a09b5e1180cb845c5	stuartmorgan@chromium.org <stuartmorgan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jul 1 18:31:49 2011 +0000	Add Safari spoofing when visiting the Silverlight install/update page in Mac Chrome. The update flow for Silverlight on the Mac takes the user to a page that does UA detection, and provides Mac Chrome users a page that makes it much less clear that they should update (and how to) just because it's not one of the officially supported platforms. Spoof as a supported browser on that page to increase the chances that users will successfully complete the update, since not updating is a potential security issue. TEST=Visit the Silverlight update/install page in Mac Chrome; there should be a clear download link, and instructions for installing.	None		http://codereview.chromium.org/7210063	svn://svn.chromium.org/chrome/trunk/src@91329 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/webkit_glue.cc b/webkit/glue/webkit_glue.cc <newline>index 3c86c58..7d276f4 100644 <newline>--- a/webkit/glue/webkit_glue.cc <newline>+++ b/webkit/glue/webkit_glue.cc <newline>@@ -347,6 +347,8 @@ struct UserAgentState { <newline>   // The UA string when we're pretending to be Windows Chrome. <newline>   std::string mimic_windows_user_agent; <newline>+  // The UA string when we're pretending to be Mac Safari. <newline>+  std::string mimic_mac_safari_user_agent; <newline>   bool user_agent_requested; <newline>   bool user_agent_is_overridden; <newline>@@ -387,6 +389,20 @@ const std::string& GetUserAgent(const GURL& url) { <newline>       return g_user_agent.Get().mimic_windows_user_agent; <newline>     } <newline> #endif <newline>+#if defined(OS_MACOSX) <newline>+    if (url.host() == "www.microsoft.com" && <newline>+        StartsWithASCII(url.path(), "/getsilverlight", false)) { <newline>+      // The landing page for updating Silverlight gives a confusing experience <newline>+      // in browsers that Silverlight doesn't officially support; spoof as <newline>+      // Safari to reduce the chance that users won't complete updates. <newline>+      // Should be removed if the sniffing is removed: http://crbug.com/88211 <newline>+      if (g_user_agent.Get().mimic_mac_safari_user_agent.empty()) { <newline>+        g_user_agent.Get().mimic_mac_safari_user_agent = <newline>+            BuildUserAgentHelper(false, "Version/5.0.4 Safari/533.20.27"); <newline>+      } <newline>+      return g_user_agent.Get().mimic_mac_safari_user_agent; <newline>+    } <newline>+#endif <newline>   } <newline>   return g_user_agent.Get().user_agent; <newline> }
0bd4e355cc33a44a3f8a17a935807b062e57089	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jul 1 16:22:27 2011 +0000	Detect Kaspersky SSL MITM and give a helpful error message. TEST=Install Kaspersky Internet security and configure SSL MITM. Navigate to an HTTPS page. Check that the error message is helpful and not generic.	86208		http://codereview.chromium.org/7275027	svn://svn.chromium.org/chrome/trunk/src@91298 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/socket/ssl_client_socket_nss.h b/net/socket/ssl_client_socket_nss.h <newline>index 7d2f7cf..8573b48 100644 <newline>--- a/net/socket/ssl_client_socket_nss.h <newline>+++ b/net/socket/ssl_client_socket_nss.h <newline>@@ -223,6 +223,9 @@ class SSLClientSocketNSS : public SSLClientSocket { <newline>   // True iff we believe that the user has an ESET product intercepting our <newline>   // HTTPS connections. <newline>   bool eset_mitm_detected_; <newline>+  // True iff we believe that the user has a Kaspersky product intercepting our <newline>+  // HTTPS connections. <newline>+  bool kaspersky_mitm_detected_; <newline>   // True iff |ssl_host_info_| contained a predicted certificate chain and <newline>   // that we found the prediction to be correct.
a3dac0b5ba84f3e12fb239ed3f4bcd2ef1b9643	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jul 1 16:22:27 2011 +0000	Detect Kaspersky SSL MITM and give a helpful error message. TEST=Install Kaspersky Internet security and configure SSL MITM. Navigate to an HTTPS page. Check that the error message is helpful and not generic.	86208		http://codereview.chromium.org/7275027	svn://svn.chromium.org/chrome/trunk/src@91298 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/socket/ssl_client_socket_nss.h b/net/socket/ssl_client_socket_nss.h <newline>index 7d2f7cf..8573b48 100644 <newline>--- a/net/socket/ssl_client_socket_nss.h <newline>+++ b/net/socket/ssl_client_socket_nss.h <newline>@@ -223,6 +223,9 @@ class SSLClientSocketNSS : public SSLClientSocket { <newline>   // True iff we believe that the user has an ESET product intercepting our <newline>   // HTTPS connections. <newline>   bool eset_mitm_detected_; <newline>+  // True iff we believe that the user has a Kaspersky product intercepting our <newline>+  // HTTPS connections. <newline>+  bool kaspersky_mitm_detected_; <newline>   // True iff |ssl_host_info_| contained a predicted certificate chain and <newline>   // that we found the prediction to be correct.
a678b000451e01b4dec557132f34deaa15eac1f	dimich@chromium.org <dimich@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jun 24 18:21:37 2011 +0000	Revert 90373 - Warmth of a connection (cwnd) is estimated by the amount of data written to the socket. Choosing the warmest connection would mean faster resource load times. Caused layout tests http/tests/loading/redirect-methods.html and http/tests/security/xss-DENIED-iframe-src-alias.html fail on deps WebKit bots, and caused http://code.google.com/p/chromium/issues/detail?id=87423 Deps bots failures: http://test-results.appspot.com/dashboards/flakiness_dashboard.html#group=%40ToT%20-%20chromium.org&tests=http%2Ftests%2Floading%2Fredirect-methods.html%2Chttp%2Ftests%2Fsecurity%2Fxss-DENIED-iframe-src-alias.html idle time is the time a socket has remained idle (no http requests being served on it). Probability of server resetting a connection increases with idle time duration. Using a cost function that takes into account bytes transferred and idle time to pick best connection to schedule http requests on. CODEREVIEW done in http://codereview.chromium.org/6990036/ Contributed by gagansingh@google.com TBR=gagansingh@google.com			http://codereview.chromium.org/7255002	svn://svn.chromium.org/chrome/trunk/src@90389 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/remoting/jingle_glue/ssl_socket_adapter.h b/remoting/jingle_glue/ssl_socket_adapter.h <newline>index 388bd1c..9acd3f7 100644 <newline>--- a/remoting/jingle_glue/ssl_socket_adapter.h <newline>+++ b/remoting/jingle_glue/ssl_socket_adapter.h <newline>@@ -52,8 +52,6 @@ class TransportSocket : public net::StreamSocket, public sigslot::has_slots<> { <newline>   virtual void SetOmniboxSpeculation(); <newline>   virtual bool WasEverUsed() const; <newline>   virtual bool UsingTCPFastOpen() const; <newline>-  virtual int64 NumBytesRead() const; <newline>-  virtual base::TimeDelta GetConnectTimeMicros() const; <newline>   // net::Socket implementation
0f82830ef76958b5c602a399a5396a38fd6b09d	dimich@chromium.org <dimich@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jun 24 18:21:37 2011 +0000	Revert 90373 - Warmth of a connection (cwnd) is estimated by the amount of data written to the socket. Choosing the warmest connection would mean faster resource load times. Caused layout tests http/tests/loading/redirect-methods.html and http/tests/security/xss-DENIED-iframe-src-alias.html fail on deps WebKit bots, and caused http://code.google.com/p/chromium/issues/detail?id=87423 Deps bots failures: http://test-results.appspot.com/dashboards/flakiness_dashboard.html#group=%40ToT%20-%20chromium.org&tests=http%2Ftests%2Floading%2Fredirect-methods.html%2Chttp%2Ftests%2Fsecurity%2Fxss-DENIED-iframe-src-alias.html idle time is the time a socket has remained idle (no http requests being served on it). Probability of server resetting a connection increases with idle time duration. Using a cost function that takes into account bytes transferred and idle time to pick best connection to schedule http requests on. CODEREVIEW done in http://codereview.chromium.org/6990036/ Contributed by gagansingh@google.com TBR=gagansingh@google.com			http://codereview.chromium.org/7255002	svn://svn.chromium.org/chrome/trunk/src@90389 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/remoting/jingle_glue/ssl_socket_adapter.h b/remoting/jingle_glue/ssl_socket_adapter.h <newline>index 388bd1c..9acd3f7 100644 <newline>--- a/remoting/jingle_glue/ssl_socket_adapter.h <newline>+++ b/remoting/jingle_glue/ssl_socket_adapter.h <newline>@@ -52,8 +52,6 @@ class TransportSocket : public net::StreamSocket, public sigslot::has_slots<> { <newline>   virtual void SetOmniboxSpeculation(); <newline>   virtual bool WasEverUsed() const; <newline>   virtual bool UsingTCPFastOpen() const; <newline>-  virtual int64 NumBytesRead() const; <newline>-  virtual base::TimeDelta GetConnectTimeMicros() const; <newline>   // net::Socket implementation
23474eba2e68aa6c6d5a864ff1e6dcb9b014a77	dennisjeffrey@chromium.org <dennisjeffrey@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jun 22 17:29:24 2011 +0000	Improve error messages for pyauto tests in chromeos_security.py. TEST=None	None		http://codereview.chromium.org/7231001	svn://svn.chromium.org/chrome/trunk/src@90045 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/chromeos_security.py b/chrome/test/functional/chromeos_security.py <newline>index 073cb9c..9d6fd1d 100644 <newline>--- a/chrome/test/functional/chromeos_security.py <newline>+++ b/chrome/test/functional/chromeos_security.py <newline>@@ -4,6 +4,7 @@ <newline> # found in the LICENSE file. <newline> import os <newline>+import pprint <newline> import pyauto_functional <newline> import pyauto <newline>@@ -16,6 +17,7 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>   """ <newline>   def setUp(self): <newline>     pyauto.PyUITest.setUp(self) <newline>+    self.pp = pprint.PrettyPrinter(indent=2) <newline>     baseline_file = os.path.abspath(os.path.join( <newline>         pyauto.PyUITest.DataDir(), 'pyauto_private', 'chromeos', <newline>         'security', 'extension_permission_baseline.txt')) <newline>@@ -52,6 +54,72 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>       self.assertNotEqual(title, self.GetActiveTabTitle(), <newline>           msg='Could access local file %s.' % url) <newline>+  def _AssertPermissionSetIsExpected(self, expected_set, actual_set, perm_type, <newline>+                                     full_expected_info, full_actual_info): <newline>+    """Asserts that the set of permissions for an extension is expected. <newline>+ <newline>+    Args: <newline>+      expected_set: A set of permissions that are expected to be present. <newline>+      actual_set: A set of permissions that are actually present. <newline>+      perm_type: A string describing the type of permission involved. <newline>+      full_expected_info: A dictionary fully describing the expected information <newline>+                          associated with the given extension. <newline>+      full_actual_info: A dictionary fully describing the actual information <newline>+                        associated with the given extension. <newline>+    """ <newline>+    def _GetSetDifferenceMessage(expected_set, actual_set): <newline>+      strings = [] <newline>+      for missing_item in expected_set.difference(actual_set): <newline>+        strings.append('Missing item: "%s"' % missing_item) <newline>+      for extra_item in actual_set.difference(expected_set): <newline>+        strings.append('Unexpected (extra) item: "%s"' % extra_item) <newline>+      return '\n'.join(strings) <newline>+ <newline>+    self.assertEqual( <newline>+        expected_set, actual_set, <newline>+        msg=('%s do not match for "%s".\n' <newline>+             '%s\n' <newline>+             'Expected extension info:\n%s' <newline>+             '\nActual extension info:\n%s' % <newline>+             (perm_type, full_expected_info['name'], <newline>+              _GetSetDifferenceMessage(expected_set, actual_set), <newline>+              self.pp.pformat(full_expected_info), <newline>+              self.pp.pformat(full_actual_info)))) <newline>+ <newline>+  def _AssertExtensionNamesAreExpected(self, expected_set, actual_set, <newline>+                                       ext_type, full_expected_info, <newline>+                                       full_actual_info): <newline>+    """Asserts that a set of extensions is expected. <newline>+ <newline>+    Args: <newline>+      expected_set: A set of extension names that are expected to be present. <newline>+      actual_set: A set of extension names that are actually present. <newline>+      ext_type: A string describing the type of extensions involved. <newline>+      full_expected_info: A list of dictionaries describing the expected <newline>+                          information for all extensions. <newline>+      full_actual_info: A list of dictionaries describing the actual information <newline>+                        for all extensions. <newline>+    """ <newline>+    def _GetSetDifferenceMessage(expected_set, actual_set): <newline>+      strings = [] <newline>+      for missing_item in expected_set.difference(actual_set): <newline>+        strings.append('Missing item: "%s"' % missing_item) <newline>+        located_ext_info = [info for info in full_expected_info if <newline>+                            info['name'] == missing_item][0] <newline>+        strings.append(self.pp.pformat(located_ext_info)) <newline>+      for extra_item in actual_set.difference(expected_set): <newline>+        strings.append('Unexpected (extra) item: "%s"' % extra_item) <newline>+        located_ext_info = [info for info in full_actual_info if <newline>+                            info['name'] == extra_item][0] <newline>+        strings.append(self.pp.pformat(located_ext_info)) <newline>+      return '\n'.join(strings) <newline>+ <newline>+    self.assertEqual( <newline>+        expected_set, actual_set, <newline>+        msg='%s names do not match the baseline.\n' <newline>+            '%s\n' % <newline>+            (ext_type, _GetSetDifferenceMessage(expected_set, actual_set))) <newline>+ <newline>   def _VerifyExtensionPermissions(self, baseline): <newline>     """Ensures extension permissions in the baseline match actual info. <newline>@@ -70,27 +138,28 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>                           info['name'] == ext_expected_info['name']] <newline>       self.assertTrue( <newline>           located_ext_info, <newline>-          msg='Cannot locate extension info: ' + ext_expected_info['name']) <newline>+          msg=('Cannot locate extension info for "%s".\n' <newline>+               'Expected extension info:\n%s' % <newline>+               (ext_expected_info['name'], self.pp.pformat(ext_expected_info)))) <newline>       ext_actual_info = located_ext_info[0] <newline>-      self.assertEqual(set(ext_expected_info['effective_host_permissions']), <newline>-                       set(ext_actual_info['effective_host_permissions']), <newline>-                       msg='Effective host permission info does not match for ' <newline>-                           'extension: ' + ext_expected_info['name']) <newline>-      self.assertEqual(set(ext_expected_info['api_permissions']), <newline>-                       set(ext_actual_info['api_permissions']), <newline>-                       msg='API permission info does not match for ' <newline>-                           'extension: ' + ext_expected_info['name']) <newline>+      self._AssertPermissionSetIsExpected( <newline>+          set(ext_expected_info['effective_host_permissions']), <newline>+          set(ext_actual_info['effective_host_permissions']), <newline>+          'Effective host permissions', ext_expected_info, ext_actual_info) <newline>+      self._AssertPermissionSetIsExpected( <newline>+          set(ext_expected_info['api_permissions']), <newline>+          set(ext_actual_info['api_permissions']), <newline>+          'API permissions', ext_expected_info, ext_actual_info) <newline>   def testComponentExtensionPermissions(self): <newline>     """Ensures component extension permissions are as expected.""" <newline>     expected_names = [ext['name'] for ext in self._component_extension_baseline] <newline>-    actual_names = [ext['name'] for ext in self.GetExtensionsInfo() if <newline>+    ext_actual_info = self.GetExtensionsInfo() <newline>+    actual_names = [ext['name'] for ext in ext_actual_info if <newline>                     ext['is_component_extension']] <newline>-    self.assertEqual(set(expected_names), set(actual_names), <newline>-                     msg='Component extension names do not match baseline:\n' <newline>-                         'Installed extensions: %s\n' <newline>-                         'Expected extensions: %s' % (actual_names, <newline>-                                                      expected_names)) <newline>+    self._AssertExtensionNamesAreExpected( <newline>+        set(expected_names), set(actual_names), 'Component extension', <newline>+        self._component_extension_baseline, ext_actual_info) <newline>     self._VerifyExtensionPermissions(self._component_extension_baseline) <newline>   def testBundledCrxPermissions(self): <newline>@@ -126,11 +195,11 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>     expected_names.extend([ext['name'] for ext in self._bundled_crx_baseline]) <newline>     ext_actual_info = self.GetExtensionsInfo() <newline>     installed_names = [ext['name'] for ext in ext_actual_info] <newline>-    self.assertEqual(set(expected_names), set(installed_names), <newline>-                     msg='Installed extension names do not match baseline:\n' <newline>-                         'Installed extensions: %s\n' <newline>-                         'Expected extensions: %s' % (installed_names, <newline>-                                                      expected_names)) <newline>+    self._AssertExtensionNamesAreExpected( <newline>+        set(expected_names), set(installed_names), 'Installed extension', <newline>+        self._component_extension_baseline + self._bundled_crx_baseline, <newline>+        ext_actual_info) <newline>+ <newline> if __name__ == '__main__': <newline>   pyauto_functional.Main()
13ecafc9c5b8da3f5229f8dc1ff9a30d1826683	dennisjeffrey@chromium.org <dennisjeffrey@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jun 22 17:29:24 2011 +0000	Improve error messages for pyauto tests in chromeos_security.py. TEST=None	None		http://codereview.chromium.org/7231001	svn://svn.chromium.org/chrome/trunk/src@90045 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/chromeos_security.py b/chrome/test/functional/chromeos_security.py <newline>index 073cb9c..9d6fd1d 100644 <newline>--- a/chrome/test/functional/chromeos_security.py <newline>+++ b/chrome/test/functional/chromeos_security.py <newline>@@ -4,6 +4,7 @@ <newline> # found in the LICENSE file. <newline> import os <newline>+import pprint <newline> import pyauto_functional <newline> import pyauto <newline>@@ -16,6 +17,7 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>   """ <newline>   def setUp(self): <newline>     pyauto.PyUITest.setUp(self) <newline>+    self.pp = pprint.PrettyPrinter(indent=2) <newline>     baseline_file = os.path.abspath(os.path.join( <newline>         pyauto.PyUITest.DataDir(), 'pyauto_private', 'chromeos', <newline>         'security', 'extension_permission_baseline.txt')) <newline>@@ -52,6 +54,72 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>       self.assertNotEqual(title, self.GetActiveTabTitle(), <newline>           msg='Could access local file %s.' % url) <newline>+  def _AssertPermissionSetIsExpected(self, expected_set, actual_set, perm_type, <newline>+                                     full_expected_info, full_actual_info): <newline>+    """Asserts that the set of permissions for an extension is expected. <newline>+ <newline>+    Args: <newline>+      expected_set: A set of permissions that are expected to be present. <newline>+      actual_set: A set of permissions that are actually present. <newline>+      perm_type: A string describing the type of permission involved. <newline>+      full_expected_info: A dictionary fully describing the expected information <newline>+                          associated with the given extension. <newline>+      full_actual_info: A dictionary fully describing the actual information <newline>+                        associated with the given extension. <newline>+    """ <newline>+    def _GetSetDifferenceMessage(expected_set, actual_set): <newline>+      strings = [] <newline>+      for missing_item in expected_set.difference(actual_set): <newline>+        strings.append('Missing item: "%s"' % missing_item) <newline>+      for extra_item in actual_set.difference(expected_set): <newline>+        strings.append('Unexpected (extra) item: "%s"' % extra_item) <newline>+      return '\n'.join(strings) <newline>+ <newline>+    self.assertEqual( <newline>+        expected_set, actual_set, <newline>+        msg=('%s do not match for "%s".\n' <newline>+             '%s\n' <newline>+             'Expected extension info:\n%s' <newline>+             '\nActual extension info:\n%s' % <newline>+             (perm_type, full_expected_info['name'], <newline>+              _GetSetDifferenceMessage(expected_set, actual_set), <newline>+              self.pp.pformat(full_expected_info), <newline>+              self.pp.pformat(full_actual_info)))) <newline>+ <newline>+  def _AssertExtensionNamesAreExpected(self, expected_set, actual_set, <newline>+                                       ext_type, full_expected_info, <newline>+                                       full_actual_info): <newline>+    """Asserts that a set of extensions is expected. <newline>+ <newline>+    Args: <newline>+      expected_set: A set of extension names that are expected to be present. <newline>+      actual_set: A set of extension names that are actually present. <newline>+      ext_type: A string describing the type of extensions involved. <newline>+      full_expected_info: A list of dictionaries describing the expected <newline>+                          information for all extensions. <newline>+      full_actual_info: A list of dictionaries describing the actual information <newline>+                        for all extensions. <newline>+    """ <newline>+    def _GetSetDifferenceMessage(expected_set, actual_set): <newline>+      strings = [] <newline>+      for missing_item in expected_set.difference(actual_set): <newline>+        strings.append('Missing item: "%s"' % missing_item) <newline>+        located_ext_info = [info for info in full_expected_info if <newline>+                            info['name'] == missing_item][0] <newline>+        strings.append(self.pp.pformat(located_ext_info)) <newline>+      for extra_item in actual_set.difference(expected_set): <newline>+        strings.append('Unexpected (extra) item: "%s"' % extra_item) <newline>+        located_ext_info = [info for info in full_actual_info if <newline>+                            info['name'] == extra_item][0] <newline>+        strings.append(self.pp.pformat(located_ext_info)) <newline>+      return '\n'.join(strings) <newline>+ <newline>+    self.assertEqual( <newline>+        expected_set, actual_set, <newline>+        msg='%s names do not match the baseline.\n' <newline>+            '%s\n' % <newline>+            (ext_type, _GetSetDifferenceMessage(expected_set, actual_set))) <newline>+ <newline>   def _VerifyExtensionPermissions(self, baseline): <newline>     """Ensures extension permissions in the baseline match actual info. <newline>@@ -70,27 +138,28 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>                           info['name'] == ext_expected_info['name']] <newline>       self.assertTrue( <newline>           located_ext_info, <newline>-          msg='Cannot locate extension info: ' + ext_expected_info['name']) <newline>+          msg=('Cannot locate extension info for "%s".\n' <newline>+               'Expected extension info:\n%s' % <newline>+               (ext_expected_info['name'], self.pp.pformat(ext_expected_info)))) <newline>       ext_actual_info = located_ext_info[0] <newline>-      self.assertEqual(set(ext_expected_info['effective_host_permissions']), <newline>-                       set(ext_actual_info['effective_host_permissions']), <newline>-                       msg='Effective host permission info does not match for ' <newline>-                           'extension: ' + ext_expected_info['name']) <newline>-      self.assertEqual(set(ext_expected_info['api_permissions']), <newline>-                       set(ext_actual_info['api_permissions']), <newline>-                       msg='API permission info does not match for ' <newline>-                           'extension: ' + ext_expected_info['name']) <newline>+      self._AssertPermissionSetIsExpected( <newline>+          set(ext_expected_info['effective_host_permissions']), <newline>+          set(ext_actual_info['effective_host_permissions']), <newline>+          'Effective host permissions', ext_expected_info, ext_actual_info) <newline>+      self._AssertPermissionSetIsExpected( <newline>+          set(ext_expected_info['api_permissions']), <newline>+          set(ext_actual_info['api_permissions']), <newline>+          'API permissions', ext_expected_info, ext_actual_info) <newline>   def testComponentExtensionPermissions(self): <newline>     """Ensures component extension permissions are as expected.""" <newline>     expected_names = [ext['name'] for ext in self._component_extension_baseline] <newline>-    actual_names = [ext['name'] for ext in self.GetExtensionsInfo() if <newline>+    ext_actual_info = self.GetExtensionsInfo() <newline>+    actual_names = [ext['name'] for ext in ext_actual_info if <newline>                     ext['is_component_extension']] <newline>-    self.assertEqual(set(expected_names), set(actual_names), <newline>-                     msg='Component extension names do not match baseline:\n' <newline>-                         'Installed extensions: %s\n' <newline>-                         'Expected extensions: %s' % (actual_names, <newline>-                                                      expected_names)) <newline>+    self._AssertExtensionNamesAreExpected( <newline>+        set(expected_names), set(actual_names), 'Component extension', <newline>+        self._component_extension_baseline, ext_actual_info) <newline>     self._VerifyExtensionPermissions(self._component_extension_baseline) <newline>   def testBundledCrxPermissions(self): <newline>@@ -126,11 +195,11 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>     expected_names.extend([ext['name'] for ext in self._bundled_crx_baseline]) <newline>     ext_actual_info = self.GetExtensionsInfo() <newline>     installed_names = [ext['name'] for ext in ext_actual_info] <newline>-    self.assertEqual(set(expected_names), set(installed_names), <newline>-                     msg='Installed extension names do not match baseline:\n' <newline>-                         'Installed extensions: %s\n' <newline>-                         'Expected extensions: %s' % (installed_names, <newline>-                                                      expected_names)) <newline>+    self._AssertExtensionNamesAreExpected( <newline>+        set(expected_names), set(installed_names), 'Installed extension', <newline>+        self._component_extension_baseline + self._bundled_crx_baseline, <newline>+        ext_actual_info) <newline>+ <newline> if __name__ == '__main__': <newline>   pyauto_functional.Main()
c449b15c31ffb473ded7eb99e48a35b27fb9c1b	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jun 20 20:33:07 2011 +0000	Add content-security-policy (CSP) to chrome://flags. CSP provides a second line of defense against XSS flaws in the underlying page by requiring all scripts to come from well-known external sources.  This CL moves the JS formerly in flags.html into new file flags.js, and adds some JS to attach handlers formerly set by inline onclick="" attributes.			http://codereview.chromium.org/7148023	svn://svn.chromium.org/chrome/trunk/src@89723 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/flags_ui.cc b/chrome/browser/ui/webui/flags_ui.cc <newline>index 7fd8ed3..a6f8376 100644 <newline>--- a/chrome/browser/ui/webui/flags_ui.cc <newline>+++ b/chrome/browser/ui/webui/flags_ui.cc <newline>@@ -14,7 +14,7 @@ <newline> #include "chrome/browser/prefs/pref_service.h" <newline> #include "chrome/browser/profiles/profile.h" <newline> #include "chrome/browser/ui/browser_list.h" <newline>-#include "chrome/browser/ui/webui/chrome_url_data_manager.h" <newline>+#include "chrome/browser/ui/webui/chrome_web_ui_data_source.h" <newline> #include "chrome/common/jstemplate_builder.h" <newline> #include "chrome/common/pref_names.h" <newline> #include "chrome/common/url_constants.h" <newline>@@ -32,7 +32,8 @@ <newline> #include "chrome/browser/chromeos/login/user_manager.h" <newline> #endif <newline>-namespace { <newline>+static const char kFlagsJs[] = "flags.js"; <newline>+static const char kStringsJs[] = "strings.js"; <newline> /////////////////////////////////////////////////////////////////////////////// <newline> // <newline>@@ -40,87 +41,78 @@ namespace { <newline> // <newline> /////////////////////////////////////////////////////////////////////////////// <newline>-class FlagsUIHTMLSource : public ChromeURLDataManager::DataSource { <newline>+class FlagsUIHTMLSource : public ChromeWebUIDataSource { <newline>  public: <newline>-  FlagsUIHTMLSource() <newline>-      : DataSource(chrome::kChromeUIFlagsHost, MessageLoop::current()) {} <newline>+  FlagsUIHTMLSource(); <newline>   // Called when the network layer has requested a resource underneath <newline>   // the path we registered. <newline>   virtual void StartDataRequest(const std::string& path, <newline>                                 bool is_incognito, <newline>                                 int request_id); <newline>-  virtual std::string GetMimeType(const std::string&) const { <newline>-    return "text/html"; <newline>-  } <newline>+  virtual std::string GetMimeType(const std::string&) const; <newline>  private: <newline>   ~FlagsUIHTMLSource() {} <newline>- <newline>   DISALLOW_COPY_AND_ASSIGN(FlagsUIHTMLSource); <newline> }; <newline>-void FlagsUIHTMLSource::StartDataRequest(const std::string& path, <newline>-                                        bool is_incognito, <newline>-                                        int request_id) { <newline>-  // Strings used in the JsTemplate file. <newline>-  DictionaryValue localized_strings; <newline>-  localized_strings.SetString("flagsLongTitle", <newline>-      l10n_util::GetStringUTF16(IDS_FLAGS_LONG_TITLE)); <newline>-  localized_strings.SetString("flagsTableTitle", <newline>-      l10n_util::GetStringUTF16(IDS_FLAGS_TABLE_TITLE)); <newline>-  localized_strings.SetString("flagsNoExperimentsAvailable", <newline>-      l10n_util::GetStringUTF16(IDS_FLAGS_NO_EXPERIMENTS_AVAILABLE)); <newline>-  localized_strings.SetString("flagsWarningHeader", l10n_util::GetStringUTF16( <newline>-      IDS_FLAGS_WARNING_HEADER)); <newline>-  localized_strings.SetString("flagsBlurb", l10n_util::GetStringUTF16( <newline>-      IDS_FLAGS_WARNING_TEXT)); <newline>-  localized_strings.SetString("flagsRestartNotice", l10n_util::GetStringFUTF16( <newline>-      IDS_FLAGS_RELAUNCH_NOTICE, <newline>-      l10n_util::GetStringUTF16( <newline>+FlagsUIHTMLSource::FlagsUIHTMLSource() <newline>+    : ChromeWebUIDataSource(chrome::kChromeUIFlagsHost) { <newline>+  AddLocalizedString("flagsLongTitle", IDS_FLAGS_LONG_TITLE); <newline>+  AddLocalizedString("flagsTableTitle", IDS_FLAGS_TABLE_TITLE); <newline>+  AddLocalizedString("flagsNoExperimentsAvailable", <newline>+                     IDS_FLAGS_NO_EXPERIMENTS_AVAILABLE); <newline>+  AddLocalizedString("flagsWarningHeader", IDS_FLAGS_WARNING_HEADER); <newline>+  AddLocalizedString("flagsBlurb", IDS_FLAGS_WARNING_TEXT); <newline> #if defined(OS_CHROMEOS) <newline>-          IDS_PRODUCT_OS_NAME <newline>+  int ids = IDS_PRODUCT_OS_NAME; <newline> #else <newline>-          IDS_PRODUCT_NAME <newline>+  int ids = IDS_PRODUCT_NAME; <newline>+#endif <newline>+  AddString("flagsRestartNotice", <newline>+            l10n_util::GetStringFUTF16(IDS_FLAGS_RELAUNCH_NOTICE, <newline>+                                       l10n_util::GetStringUTF16(ids))); <newline>+  AddLocalizedString("flagsRestartButton", IDS_FLAGS_RELAUNCH_BUTTON); <newline>+  AddLocalizedString("disable", IDS_FLAGS_DISABLE); <newline>+  AddLocalizedString("enable", IDS_FLAGS_ENABLE); <newline>+#if defined(OS_CHROMEOS) <newline>+  // Set the strings to show which user can actually change the flags <newline>+  AddLocalizedString("ownerOnly", IDS_OPTIONS_ACCOUNTS_OWNER_ONLY); <newline>+  AddString("ownerUserId", <newline>+            UTF8ToUTF16(chromeos::UserCrosSettingsProvider::cached_owner())); <newline> #endif <newline>-          ))); <newline>-  localized_strings.SetString("flagsRestartButton", <newline>-      l10n_util::GetStringUTF16(IDS_FLAGS_RELAUNCH_BUTTON)); <newline>-  localized_strings.SetString("disable", <newline>-      l10n_util::GetStringUTF16(IDS_FLAGS_DISABLE)); <newline>-  localized_strings.SetString("enable", <newline>-      l10n_util::GetStringUTF16(IDS_FLAGS_ENABLE)); <newline>- <newline>-  base::StringPiece html = <newline>-      ResourceBundle::GetSharedInstance().GetRawDataResource(IDR_FLAGS_HTML); <newline>+} <newline>+ <newline>+void FlagsUIHTMLSource::StartDataRequest(const std::string& path, <newline>+                                        bool is_incognito, <newline>+                                        int request_id) { <newline>+  if (path == kStringsJs) { <newline>+    SendLocalizedStringsAsJSON(request_id); <newline>+  } else { <newline>+    int idr; <newline>+    if (path == kFlagsJs) <newline>+      idr = IDR_FLAGS_JS; <newline> #if defined (OS_CHROMEOS) <newline>-  if (!chromeos::UserManager::Get()->current_user_is_owner()) { <newline>-    html = ResourceBundle::GetSharedInstance().GetRawDataResource( <newline>-        IDR_FLAGS_HTML_WARNING); <newline>- <newline>-    // Set the strings to show which user can actually change the flags <newline>-    localized_strings.SetString("ownerOnly", l10n_util::GetStringUTF16( <newline>-        IDS_OPTIONS_ACCOUNTS_OWNER_ONLY)); <newline>-    localized_strings.SetString("ownerUserId", UTF8ToUTF16( <newline>-        chromeos::UserCrosSettingsProvider::cached_owner())); <newline>-  } <newline>+    else if (!chromeos::UserManager::Get()->current_user_is_owner()) <newline>+      idr = IDR_FLAGS_HTML_WARNING; <newline> #endif <newline>-  static const base::StringPiece flags_html(html); <newline>-  ChromeURLDataManager::DataSource::SetFontAndTextDirection(&localized_strings); <newline>+    else <newline>+      idr = IDR_FLAGS_HTML; <newline>-  std::string full_html(flags_html.data(), flags_html.size()); <newline>-  jstemplate_builder::AppendJsonHtml(&localized_strings, &full_html); <newline>-  jstemplate_builder::AppendI18nTemplateSourceHtml(&full_html); <newline>-  jstemplate_builder::AppendI18nTemplateProcessHtml(&full_html); <newline>-  jstemplate_builder::AppendJsTemplateSourceHtml(&full_html); <newline>+    SendFromResourceBundle(request_id, idr); <newline>+  } <newline>+} <newline>-  scoped_refptr<RefCountedBytes> html_bytes(new RefCountedBytes); <newline>-  html_bytes->data.resize(full_html.size()); <newline>-  std::copy(full_html.begin(), full_html.end(), html_bytes->data.begin()); <newline>+std::string FlagsUIHTMLSource::GetMimeType(const std::string& path) const { <newline>+  if (path == kStringsJs || path == kFlagsJs) <newline>+    return "application/javascript"; <newline>-  SendResponse(request_id, html_bytes); <newline>+  return "text/html"; <newline> } <newline>+namespace { <newline>+ <newline> //////////////////////////////////////////////////////////////////////////////// <newline> // <newline> // FlagsDOMHandler
ec46422eed4a56bb1c77acb1e17cad8cc7926ff	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jun 20 20:33:07 2011 +0000	Add content-security-policy (CSP) to chrome://flags. CSP provides a second line of defense against XSS flaws in the underlying page by requiring all scripts to come from well-known external sources.  This CL moves the JS formerly in flags.html into new file flags.js, and adds some JS to attach handlers formerly set by inline onclick="" attributes.			http://codereview.chromium.org/7148023	svn://svn.chromium.org/chrome/trunk/src@89723 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/flags_ui.cc b/chrome/browser/ui/webui/flags_ui.cc <newline>index 7fd8ed3..a6f8376 100644 <newline>--- a/chrome/browser/ui/webui/flags_ui.cc <newline>+++ b/chrome/browser/ui/webui/flags_ui.cc <newline>@@ -14,7 +14,7 @@ <newline> #include "chrome/browser/prefs/pref_service.h" <newline> #include "chrome/browser/profiles/profile.h" <newline> #include "chrome/browser/ui/browser_list.h" <newline>-#include "chrome/browser/ui/webui/chrome_url_data_manager.h" <newline>+#include "chrome/browser/ui/webui/chrome_web_ui_data_source.h" <newline> #include "chrome/common/jstemplate_builder.h" <newline> #include "chrome/common/pref_names.h" <newline> #include "chrome/common/url_constants.h" <newline>@@ -32,7 +32,8 @@ <newline> #include "chrome/browser/chromeos/login/user_manager.h" <newline> #endif <newline>-namespace { <newline>+static const char kFlagsJs[] = "flags.js"; <newline>+static const char kStringsJs[] = "strings.js"; <newline> /////////////////////////////////////////////////////////////////////////////// <newline> // <newline>@@ -40,87 +41,78 @@ namespace { <newline> // <newline> /////////////////////////////////////////////////////////////////////////////// <newline>-class FlagsUIHTMLSource : public ChromeURLDataManager::DataSource { <newline>+class FlagsUIHTMLSource : public ChromeWebUIDataSource { <newline>  public: <newline>-  FlagsUIHTMLSource() <newline>-      : DataSource(chrome::kChromeUIFlagsHost, MessageLoop::current()) {} <newline>+  FlagsUIHTMLSource(); <newline>   // Called when the network layer has requested a resource underneath <newline>   // the path we registered. <newline>   virtual void StartDataRequest(const std::string& path, <newline>                                 bool is_incognito, <newline>                                 int request_id); <newline>-  virtual std::string GetMimeType(const std::string&) const { <newline>-    return "text/html"; <newline>-  } <newline>+  virtual std::string GetMimeType(const std::string&) const; <newline>  private: <newline>   ~FlagsUIHTMLSource() {} <newline>- <newline>   DISALLOW_COPY_AND_ASSIGN(FlagsUIHTMLSource); <newline> }; <newline>-void FlagsUIHTMLSource::StartDataRequest(const std::string& path, <newline>-                                        bool is_incognito, <newline>-                                        int request_id) { <newline>-  // Strings used in the JsTemplate file. <newline>-  DictionaryValue localized_strings; <newline>-  localized_strings.SetString("flagsLongTitle", <newline>-      l10n_util::GetStringUTF16(IDS_FLAGS_LONG_TITLE)); <newline>-  localized_strings.SetString("flagsTableTitle", <newline>-      l10n_util::GetStringUTF16(IDS_FLAGS_TABLE_TITLE)); <newline>-  localized_strings.SetString("flagsNoExperimentsAvailable", <newline>-      l10n_util::GetStringUTF16(IDS_FLAGS_NO_EXPERIMENTS_AVAILABLE)); <newline>-  localized_strings.SetString("flagsWarningHeader", l10n_util::GetStringUTF16( <newline>-      IDS_FLAGS_WARNING_HEADER)); <newline>-  localized_strings.SetString("flagsBlurb", l10n_util::GetStringUTF16( <newline>-      IDS_FLAGS_WARNING_TEXT)); <newline>-  localized_strings.SetString("flagsRestartNotice", l10n_util::GetStringFUTF16( <newline>-      IDS_FLAGS_RELAUNCH_NOTICE, <newline>-      l10n_util::GetStringUTF16( <newline>+FlagsUIHTMLSource::FlagsUIHTMLSource() <newline>+    : ChromeWebUIDataSource(chrome::kChromeUIFlagsHost) { <newline>+  AddLocalizedString("flagsLongTitle", IDS_FLAGS_LONG_TITLE); <newline>+  AddLocalizedString("flagsTableTitle", IDS_FLAGS_TABLE_TITLE); <newline>+  AddLocalizedString("flagsNoExperimentsAvailable", <newline>+                     IDS_FLAGS_NO_EXPERIMENTS_AVAILABLE); <newline>+  AddLocalizedString("flagsWarningHeader", IDS_FLAGS_WARNING_HEADER); <newline>+  AddLocalizedString("flagsBlurb", IDS_FLAGS_WARNING_TEXT); <newline> #if defined(OS_CHROMEOS) <newline>-          IDS_PRODUCT_OS_NAME <newline>+  int ids = IDS_PRODUCT_OS_NAME; <newline> #else <newline>-          IDS_PRODUCT_NAME <newline>+  int ids = IDS_PRODUCT_NAME; <newline>+#endif <newline>+  AddString("flagsRestartNotice", <newline>+            l10n_util::GetStringFUTF16(IDS_FLAGS_RELAUNCH_NOTICE, <newline>+                                       l10n_util::GetStringUTF16(ids))); <newline>+  AddLocalizedString("flagsRestartButton", IDS_FLAGS_RELAUNCH_BUTTON); <newline>+  AddLocalizedString("disable", IDS_FLAGS_DISABLE); <newline>+  AddLocalizedString("enable", IDS_FLAGS_ENABLE); <newline>+#if defined(OS_CHROMEOS) <newline>+  // Set the strings to show which user can actually change the flags <newline>+  AddLocalizedString("ownerOnly", IDS_OPTIONS_ACCOUNTS_OWNER_ONLY); <newline>+  AddString("ownerUserId", <newline>+            UTF8ToUTF16(chromeos::UserCrosSettingsProvider::cached_owner())); <newline> #endif <newline>-          ))); <newline>-  localized_strings.SetString("flagsRestartButton", <newline>-      l10n_util::GetStringUTF16(IDS_FLAGS_RELAUNCH_BUTTON)); <newline>-  localized_strings.SetString("disable", <newline>-      l10n_util::GetStringUTF16(IDS_FLAGS_DISABLE)); <newline>-  localized_strings.SetString("enable", <newline>-      l10n_util::GetStringUTF16(IDS_FLAGS_ENABLE)); <newline>- <newline>-  base::StringPiece html = <newline>-      ResourceBundle::GetSharedInstance().GetRawDataResource(IDR_FLAGS_HTML); <newline>+} <newline>+ <newline>+void FlagsUIHTMLSource::StartDataRequest(const std::string& path, <newline>+                                        bool is_incognito, <newline>+                                        int request_id) { <newline>+  if (path == kStringsJs) { <newline>+    SendLocalizedStringsAsJSON(request_id); <newline>+  } else { <newline>+    int idr; <newline>+    if (path == kFlagsJs) <newline>+      idr = IDR_FLAGS_JS; <newline> #if defined (OS_CHROMEOS) <newline>-  if (!chromeos::UserManager::Get()->current_user_is_owner()) { <newline>-    html = ResourceBundle::GetSharedInstance().GetRawDataResource( <newline>-        IDR_FLAGS_HTML_WARNING); <newline>- <newline>-    // Set the strings to show which user can actually change the flags <newline>-    localized_strings.SetString("ownerOnly", l10n_util::GetStringUTF16( <newline>-        IDS_OPTIONS_ACCOUNTS_OWNER_ONLY)); <newline>-    localized_strings.SetString("ownerUserId", UTF8ToUTF16( <newline>-        chromeos::UserCrosSettingsProvider::cached_owner())); <newline>-  } <newline>+    else if (!chromeos::UserManager::Get()->current_user_is_owner()) <newline>+      idr = IDR_FLAGS_HTML_WARNING; <newline> #endif <newline>-  static const base::StringPiece flags_html(html); <newline>-  ChromeURLDataManager::DataSource::SetFontAndTextDirection(&localized_strings); <newline>+    else <newline>+      idr = IDR_FLAGS_HTML; <newline>-  std::string full_html(flags_html.data(), flags_html.size()); <newline>-  jstemplate_builder::AppendJsonHtml(&localized_strings, &full_html); <newline>-  jstemplate_builder::AppendI18nTemplateSourceHtml(&full_html); <newline>-  jstemplate_builder::AppendI18nTemplateProcessHtml(&full_html); <newline>-  jstemplate_builder::AppendJsTemplateSourceHtml(&full_html); <newline>+    SendFromResourceBundle(request_id, idr); <newline>+  } <newline>+} <newline>-  scoped_refptr<RefCountedBytes> html_bytes(new RefCountedBytes); <newline>-  html_bytes->data.resize(full_html.size()); <newline>-  std::copy(full_html.begin(), full_html.end(), html_bytes->data.begin()); <newline>+std::string FlagsUIHTMLSource::GetMimeType(const std::string& path) const { <newline>+  if (path == kStringsJs || path == kFlagsJs) <newline>+    return "application/javascript"; <newline>-  SendResponse(request_id, html_bytes); <newline>+  return "text/html"; <newline> } <newline>+namespace { <newline>+ <newline> //////////////////////////////////////////////////////////////////////////////// <newline> // <newline> // FlagsDOMHandler
5ba9a9d325192b74dd3957df992ae6043a2fb44	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sun Jun 19 23:36:54 2011 +0000	IcedTea caught up with the latest Java security update. http://blog.fuseyism.com/index.php/2011/06/08/icedtea6-188-198-and-1102-released/	85678		http://codereview.chromium.org/7134065	svn://svn.chromium.org/chrome/trunk/src@89631 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index 89089b4..c4dcfc4 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -150,8 +150,8 @@ static const VersionRangeDefinition kJavaVersionRange[] = { <newline> }; <newline> static const VersionRangeDefinition kRedhatIcedTeaVersionRange[] = { <newline>-    { "0", "1.9", "1.8.7", true }, <newline>-    { "1.9", "1.10", "1.9.7", true }, <newline>+    { "0", "1.9", "1.8.8", true }, <newline>+    { "1.9", "1.10", "1.9.8", true }, <newline> }; <newline> static const PluginGroupDefinition kGroupDefinitions[] = {
d2c79513719a5ef6172378962d19f6302054fbf	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sun Jun 19 23:36:54 2011 +0000	IcedTea caught up with the latest Java security update. http://blog.fuseyism.com/index.php/2011/06/08/icedtea6-188-198-and-1102-released/	85678		http://codereview.chromium.org/7134065	svn://svn.chromium.org/chrome/trunk/src@89631 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index 89089b4..c4dcfc4 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -150,8 +150,8 @@ static const VersionRangeDefinition kJavaVersionRange[] = { <newline> }; <newline> static const VersionRangeDefinition kRedhatIcedTeaVersionRange[] = { <newline>-    { "0", "1.9", "1.8.7", true }, <newline>-    { "1.9", "1.10", "1.9.7", true }, <newline>+    { "0", "1.9", "1.8.8", true }, <newline>+    { "1.9", "1.10", "1.9.8", true }, <newline> }; <newline> static const PluginGroupDefinition kGroupDefinitions[] = {
9ec0bc44ba3fec94e4c6d02366cfef72a5c8eb4	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jun 10 06:15:38 2011 +0000	JRE6u26 sounds like it fixes some pretty nasty bugs: http://www.oracle.com/technetwork/topics/security/javacpujune2011-313339.html	85678		http://codereview.chromium.org/7046039	svn://svn.chromium.org/chrome/trunk/src@88642 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index 24150c9..89089b4 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -93,7 +93,7 @@ static const VersionRangeDefinition kQuicktimeVersionRange[] = { <newline>     { "", "", "7.6.9", true } <newline> }; <newline> static const VersionRangeDefinition kJavaVersionRange[] = { <newline>-    { "0", "7", "6.0.240", true }  // "240" is not a typo. <newline>+    { "0", "7", "6.0.260", true }  // "260" is not a typo. <newline> }; <newline> // This is up to date with <newline> // http://www.adobe.com/support/security/bulletins/apsb11-08.html <newline>@@ -146,7 +146,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { }; <newline> #else  // Most importantly, covers desktop Linux. <newline> static const VersionRangeDefinition kJavaVersionRange[] = { <newline>-    { "0", "1.7", "1.6.0.24", true } <newline>+    { "0", "1.7", "1.6.0.26", true } <newline> }; <newline> static const VersionRangeDefinition kRedhatIcedTeaVersionRange[] = {
5ab10e2f6e88969a83bae54e145b0714a841490	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jun 10 06:15:38 2011 +0000	JRE6u26 sounds like it fixes some pretty nasty bugs: http://www.oracle.com/technetwork/topics/security/javacpujune2011-313339.html	85678		http://codereview.chromium.org/7046039	svn://svn.chromium.org/chrome/trunk/src@88642 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index 24150c9..89089b4 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -93,7 +93,7 @@ static const VersionRangeDefinition kQuicktimeVersionRange[] = { <newline>     { "", "", "7.6.9", true } <newline> }; <newline> static const VersionRangeDefinition kJavaVersionRange[] = { <newline>-    { "0", "7", "6.0.240", true }  // "240" is not a typo. <newline>+    { "0", "7", "6.0.260", true }  // "260" is not a typo. <newline> }; <newline> // This is up to date with <newline> // http://www.adobe.com/support/security/bulletins/apsb11-08.html <newline>@@ -146,7 +146,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { }; <newline> #else  // Most importantly, covers desktop Linux. <newline> static const VersionRangeDefinition kJavaVersionRange[] = { <newline>-    { "0", "1.7", "1.6.0.24", true } <newline>+    { "0", "1.7", "1.6.0.26", true } <newline> }; <newline> static const VersionRangeDefinition kRedhatIcedTeaVersionRange[] = {
e32ddf82b2d70c9f6902273df5d9a5fde59a2eb	dennisjeffrey@chromium.org <dennisjeffrey@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jun 8 16:52:38 2011 +0000	New security-related pyauto tests for Chrome on ChromeOS that verify extension permissions. TEST=None	chromium-os:15994		http://codereview.chromium.org/6969105	svn://svn.chromium.org/chrome/trunk/src@88351 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/chromeos_security.py b/chrome/test/functional/chromeos_security.py <newline>index d9cc372..073cb9c 100644 <newline>--- a/chrome/test/functional/chromeos_security.py <newline>+++ b/chrome/test/functional/chromeos_security.py <newline>@@ -14,9 +14,24 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>   Requires ChromeOS to be logged in. <newline>   """ <newline>+  def setUp(self): <newline>+    pyauto.PyUITest.setUp(self) <newline>+    baseline_file = os.path.abspath(os.path.join( <newline>+        pyauto.PyUITest.DataDir(), 'pyauto_private', 'chromeos', <newline>+        'security', 'extension_permission_baseline.txt')) <newline>+    self.assertTrue(os.path.exists(baseline_file), <newline>+                    msg='Baseline info file does not exist.') <newline>+    baseline_info = self.EvalDataFrom(baseline_file) <newline>+    self._bundled_crx_directory = baseline_info['BUNDLED_CRX_DIRECTORY'] <newline>+    self._bundled_crx_baseline = baseline_info['BUNDLED_CRX_BASELINE'] <newline>+    self._component_extension_baseline = ( <newline>+        baseline_info['COMPONENT_EXTENSION_BASELINE']) <newline>+    if self.GetBrowserInfo()['properties']['is_official']: <newline>+      self._component_extension_baseline.extend( <newline>+          baseline_info['OFFICIAL_COMPONENT_EXTENSIONS']) <newline>   def ExtraChromeFlagsOnChromeOS(self): <newline>-    """Override default list of extra flags typicall used with automation. <newline>+    """Override default list of extra flags typically used with automation. <newline>     See the default flags used with automation in pyauto.py. <newline>     Chrome flags for this test should be as close to reality as possible. <newline>@@ -37,6 +52,85 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>       self.assertNotEqual(title, self.GetActiveTabTitle(), <newline>           msg='Could access local file %s.' % url) <newline>+  def _VerifyExtensionPermissions(self, baseline): <newline>+    """Ensures extension permissions in the baseline match actual info. <newline>+ <newline>+    This function will fail the current test if either (1) an extension named <newline>+    in the baseline is not currently installed in Chrome; or (2) the api <newline>+    permissions or effective host permissions of an extension in the baseline <newline>+    do not match the actual permissions associated with the extension in Chrome. <newline>+ <newline>+    Args: <newline>+      baseline: A dictionary of expected extension information, containing <newline>+                extension names and api/effective host permission info. <newline>+    """ <newline>+    full_ext_actual_info = self.GetExtensionsInfo() <newline>+    for ext_expected_info in baseline: <newline>+      located_ext_info = [info for info in full_ext_actual_info if <newline>+                          info['name'] == ext_expected_info['name']] <newline>+      self.assertTrue( <newline>+          located_ext_info, <newline>+          msg='Cannot locate extension info: ' + ext_expected_info['name']) <newline>+      ext_actual_info = located_ext_info[0] <newline>+      self.assertEqual(set(ext_expected_info['effective_host_permissions']), <newline>+                       set(ext_actual_info['effective_host_permissions']), <newline>+                       msg='Effective host permission info does not match for ' <newline>+                           'extension: ' + ext_expected_info['name']) <newline>+      self.assertEqual(set(ext_expected_info['api_permissions']), <newline>+                       set(ext_actual_info['api_permissions']), <newline>+                       msg='API permission info does not match for ' <newline>+                           'extension: ' + ext_expected_info['name']) <newline>+ <newline>+  def testComponentExtensionPermissions(self): <newline>+    """Ensures component extension permissions are as expected.""" <newline>+    expected_names = [ext['name'] for ext in self._component_extension_baseline] <newline>+    actual_names = [ext['name'] for ext in self.GetExtensionsInfo() if <newline>+                    ext['is_component_extension']] <newline>+    self.assertEqual(set(expected_names), set(actual_names), <newline>+                     msg='Component extension names do not match baseline:\n' <newline>+                         'Installed extensions: %s\n' <newline>+                         'Expected extensions: %s' % (actual_names, <newline>+                                                      expected_names)) <newline>+    self._VerifyExtensionPermissions(self._component_extension_baseline) <newline>+ <newline>+  def testBundledCrxPermissions(self): <newline>+    """Ensures bundled CRX permissions are as expected.""" <newline>+    # Verify that each bundled CRX on the device is expected, then install it. <newline>+    for file_name in os.listdir(self._bundled_crx_directory): <newline>+      if file_name.endswith('.crx'): <newline>+        self.assertTrue( <newline>+            file_name in [x['crx_file'] for x in self._bundled_crx_baseline], <newline>+            msg='Unexpected CRX file: ' + file_name) <newline>+        crx_file = pyauto.FilePath( <newline>+            os.path.join(self._bundled_crx_directory, file_name)) <newline>+        self.assertTrue(self.InstallExtension(crx_file, False), <newline>+                        msg='Extension install failed: %s' % crx_file.value()) <newline>+ <newline>+    # Verify that the permissions information in the baseline matches the <newline>+    # permissions associated with the installed bundled CRX extensions. <newline>+    self._VerifyExtensionPermissions(self._bundled_crx_baseline) <newline>+ <newline>+  def testNoUnexpectedExtensions(self): <newline>+    """Ensures there are no unexpected bundled or component extensions.""" <newline>+    # Install all bundled extensions on the device. <newline>+    for file_name in os.listdir(self._bundled_crx_directory): <newline>+      if file_name.endswith('.crx'): <newline>+        crx_file = pyauto.FilePath( <newline>+            os.path.join(self._bundled_crx_directory, file_name)) <newline>+        self.assertTrue(self.InstallExtension(crx_file, False), <newline>+                        msg='Extension install failed: %s' % crx_file.value()) <newline>+ <newline>+    # Ensure that the set of installed extension names precisely matches the <newline>+    # baseline. <newline>+    expected_names = [ext['name'] for ext in self._component_extension_baseline] <newline>+    expected_names.extend([ext['name'] for ext in self._bundled_crx_baseline]) <newline>+    ext_actual_info = self.GetExtensionsInfo() <newline>+    installed_names = [ext['name'] for ext in ext_actual_info] <newline>+    self.assertEqual(set(expected_names), set(installed_names), <newline>+                     msg='Installed extension names do not match baseline:\n' <newline>+                         'Installed extensions: %s\n' <newline>+                         'Expected extensions: %s' % (installed_names, <newline>+                                                      expected_names)) <newline> if __name__ == '__main__': <newline>   pyauto_functional.Main()
b4d47515bb25f4f5ea51ee202ec2194db325606	dennisjeffrey@chromium.org <dennisjeffrey@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jun 8 16:52:38 2011 +0000	New security-related pyauto tests for Chrome on ChromeOS that verify extension permissions. TEST=None	chromium-os:15994		http://codereview.chromium.org/6969105	svn://svn.chromium.org/chrome/trunk/src@88351 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/chromeos_security.py b/chrome/test/functional/chromeos_security.py <newline>index d9cc372..073cb9c 100644 <newline>--- a/chrome/test/functional/chromeos_security.py <newline>+++ b/chrome/test/functional/chromeos_security.py <newline>@@ -14,9 +14,24 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>   Requires ChromeOS to be logged in. <newline>   """ <newline>+  def setUp(self): <newline>+    pyauto.PyUITest.setUp(self) <newline>+    baseline_file = os.path.abspath(os.path.join( <newline>+        pyauto.PyUITest.DataDir(), 'pyauto_private', 'chromeos', <newline>+        'security', 'extension_permission_baseline.txt')) <newline>+    self.assertTrue(os.path.exists(baseline_file), <newline>+                    msg='Baseline info file does not exist.') <newline>+    baseline_info = self.EvalDataFrom(baseline_file) <newline>+    self._bundled_crx_directory = baseline_info['BUNDLED_CRX_DIRECTORY'] <newline>+    self._bundled_crx_baseline = baseline_info['BUNDLED_CRX_BASELINE'] <newline>+    self._component_extension_baseline = ( <newline>+        baseline_info['COMPONENT_EXTENSION_BASELINE']) <newline>+    if self.GetBrowserInfo()['properties']['is_official']: <newline>+      self._component_extension_baseline.extend( <newline>+          baseline_info['OFFICIAL_COMPONENT_EXTENSIONS']) <newline>   def ExtraChromeFlagsOnChromeOS(self): <newline>-    """Override default list of extra flags typicall used with automation. <newline>+    """Override default list of extra flags typically used with automation. <newline>     See the default flags used with automation in pyauto.py. <newline>     Chrome flags for this test should be as close to reality as possible. <newline>@@ -37,6 +52,85 @@ class ChromeosSecurity(pyauto.PyUITest): <newline>       self.assertNotEqual(title, self.GetActiveTabTitle(), <newline>           msg='Could access local file %s.' % url) <newline>+  def _VerifyExtensionPermissions(self, baseline): <newline>+    """Ensures extension permissions in the baseline match actual info. <newline>+ <newline>+    This function will fail the current test if either (1) an extension named <newline>+    in the baseline is not currently installed in Chrome; or (2) the api <newline>+    permissions or effective host permissions of an extension in the baseline <newline>+    do not match the actual permissions associated with the extension in Chrome. <newline>+ <newline>+    Args: <newline>+      baseline: A dictionary of expected extension information, containing <newline>+                extension names and api/effective host permission info. <newline>+    """ <newline>+    full_ext_actual_info = self.GetExtensionsInfo() <newline>+    for ext_expected_info in baseline: <newline>+      located_ext_info = [info for info in full_ext_actual_info if <newline>+                          info['name'] == ext_expected_info['name']] <newline>+      self.assertTrue( <newline>+          located_ext_info, <newline>+          msg='Cannot locate extension info: ' + ext_expected_info['name']) <newline>+      ext_actual_info = located_ext_info[0] <newline>+      self.assertEqual(set(ext_expected_info['effective_host_permissions']), <newline>+                       set(ext_actual_info['effective_host_permissions']), <newline>+                       msg='Effective host permission info does not match for ' <newline>+                           'extension: ' + ext_expected_info['name']) <newline>+      self.assertEqual(set(ext_expected_info['api_permissions']), <newline>+                       set(ext_actual_info['api_permissions']), <newline>+                       msg='API permission info does not match for ' <newline>+                           'extension: ' + ext_expected_info['name']) <newline>+ <newline>+  def testComponentExtensionPermissions(self): <newline>+    """Ensures component extension permissions are as expected.""" <newline>+    expected_names = [ext['name'] for ext in self._component_extension_baseline] <newline>+    actual_names = [ext['name'] for ext in self.GetExtensionsInfo() if <newline>+                    ext['is_component_extension']] <newline>+    self.assertEqual(set(expected_names), set(actual_names), <newline>+                     msg='Component extension names do not match baseline:\n' <newline>+                         'Installed extensions: %s\n' <newline>+                         'Expected extensions: %s' % (actual_names, <newline>+                                                      expected_names)) <newline>+    self._VerifyExtensionPermissions(self._component_extension_baseline) <newline>+ <newline>+  def testBundledCrxPermissions(self): <newline>+    """Ensures bundled CRX permissions are as expected.""" <newline>+    # Verify that each bundled CRX on the device is expected, then install it. <newline>+    for file_name in os.listdir(self._bundled_crx_directory): <newline>+      if file_name.endswith('.crx'): <newline>+        self.assertTrue( <newline>+            file_name in [x['crx_file'] for x in self._bundled_crx_baseline], <newline>+            msg='Unexpected CRX file: ' + file_name) <newline>+        crx_file = pyauto.FilePath( <newline>+            os.path.join(self._bundled_crx_directory, file_name)) <newline>+        self.assertTrue(self.InstallExtension(crx_file, False), <newline>+                        msg='Extension install failed: %s' % crx_file.value()) <newline>+ <newline>+    # Verify that the permissions information in the baseline matches the <newline>+    # permissions associated with the installed bundled CRX extensions. <newline>+    self._VerifyExtensionPermissions(self._bundled_crx_baseline) <newline>+ <newline>+  def testNoUnexpectedExtensions(self): <newline>+    """Ensures there are no unexpected bundled or component extensions.""" <newline>+    # Install all bundled extensions on the device. <newline>+    for file_name in os.listdir(self._bundled_crx_directory): <newline>+      if file_name.endswith('.crx'): <newline>+        crx_file = pyauto.FilePath( <newline>+            os.path.join(self._bundled_crx_directory, file_name)) <newline>+        self.assertTrue(self.InstallExtension(crx_file, False), <newline>+                        msg='Extension install failed: %s' % crx_file.value()) <newline>+ <newline>+    # Ensure that the set of installed extension names precisely matches the <newline>+    # baseline. <newline>+    expected_names = [ext['name'] for ext in self._component_extension_baseline] <newline>+    expected_names.extend([ext['name'] for ext in self._bundled_crx_baseline]) <newline>+    ext_actual_info = self.GetExtensionsInfo() <newline>+    installed_names = [ext['name'] for ext in ext_actual_info] <newline>+    self.assertEqual(set(expected_names), set(installed_names), <newline>+                     msg='Installed extension names do not match baseline:\n' <newline>+                         'Installed extensions: %s\n' <newline>+                         'Expected extensions: %s' % (installed_names, <newline>+                                                      expected_names)) <newline> if __name__ == '__main__': <newline>   pyauto_functional.Main()
d9d12c06c3bcd820f08701bdb5996cb91d966fa	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue May 31 20:41:14 2011 +0000	Apply content-security-policy to chrome://plugins page.  This involves converting all inline javascript to external .js files, since CSP can't determine whether inline script is legitimate or an XSS. We move the jstemplate_compiled.js file to the share resources directory, since several WEBUI components will need this, and update the compile.py script that produces it to write to this new location. We move the javascript out of plugins.html to plugins.js; note that the sections at line 130 and line 251 are new.			http://codereview.chromium.org/7086003	svn://svn.chromium.org/chrome/trunk/src@87358 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/third_party/jstemplate/jstemplate_compiled.js b/chrome/third_party/jstemplate/jstemplate_compiled.js <newline>deleted file mode 100644 <newline>index afe2769..0000000 <newline>--- a/chrome/third_party/jstemplate/jstemplate_compiled.js <newline>+++ /dev/null <newline>@@ -1,13 +0,0 @@ <newline>-(function(){function j(a,b){for(var c in b)a[c]=b[c]}function l(){return Function.prototype.call.apply(Array.prototype.slice,arguments)}function m(a,b){var c=l(arguments,2);return function(){return b.apply(a,c)}}var n=9;function o(a,b){b=new p(b);for(b.f=[a];b.f.length;){a=b.f.shift();b.g(a);for(a=a.firstChild;a;a=a.nextSibling)a.nodeType==1&&b.f.push(a)}}function p(a){this.g=a}function q(a,b,c){a.setAttribute(b,c)}function r(a,b){a.removeAttribute(b)}function s(a){a.style.display=""} <newline>-function t(a){a.style.display="none"};var u=":",v=/\s*;\s*/;function w(){this.i.apply(this,arguments)}w.prototype.i=function(a,b){var c=this;if(!c.a)c.a={};b?j(c.a,b.a):j(c.a,x);c.a.$this=a;c.a.$context=c;c.d=typeof a!="undefined"&&a!=null?a:"";if(!b)c.a.$top=c.d};var x={};(function(a,b){x[a]=b})("$default",null);var y=[];function z(a){for(var b in a.a)delete a.a[b];a.d=null;y.push(a)}function A(a,b,c){try{return b.call(c,a.a,a.d)}catch(e){return x.$default}} <newline>-function B(a,b,c,e){if(y.length>0){var d=y.pop();w.call(d,b,a);a=d}else a=new w(b,a);a.a.$index=c;a.a.$count=e;return a}var C="a_",E="b_",F="with (a_) with (b_) return ",G={};function H(a){if(!G[a])try{G[a]=new Function(C,E,F+a)}catch(b){}return G[a]}function I(a){return a}function J(a){var b=[];a=a.split(v);for(var c=0,e=a.length;c<e;++c){var d=a[c].indexOf(u);if(!(d<0)){var f;f=a[c].substr(0,d).replace(/^\s+/,"").replace(/\s+$/,"");d=H(a[c].substr(d+1));b.push(f,d)}}return b} <newline>-function K(a){var b=[];a=a.split(v);for(var c=0,e=a.length;c<e;++c)if(a[c]){var d=H(a[c]);b.push(d)}return b};var L="jsinstance",aa="jsts",M="*",N="div",ba="id";function ca(a,b){var c=new O;P(b);c.j=b?b.nodeType==n?b:b.ownerDocument||document:document;var e=m(c,c.e,a,b);a=c.h=[];b=c.k=[];c.c=[];e();for(var d,f,g;a.length;){d=a[a.length-1];e=b[b.length-1];if(e>=d.length){e=a.pop();e.length=0;c.c.push(e);b.pop()}else{f=d[e++];g=d[e++];d=d[e++];b[b.length-1]=e;f.call(c,g,d)}}}function O(){}var da=0,Q={};Q[0]={};var R={},S={},T=[];function P(a){a.__jstcache||o(a,function(b){U(b)})} <newline>-var V=[["jsselect",H],["jsdisplay",H],["jsvalues",J],["jsvars",J],["jseval",K],["transclude",I],["jscontent",H],["jsskip",H]]; <newline>-function U(a){if(a.__jstcache)return a.__jstcache;var b=a.getAttribute("jstcache");if(b!=null)return a.__jstcache=Q[b];b=T.length=0;for(var c=V.length;b<c;++b){var e=V[b][0],d=a.getAttribute(e);S[e]=d;d!=null&&T.push(e+"="+d)}if(T.length==0){a.setAttribute("jstcache","0");return a.__jstcache=Q[0]}var f=T.join("&");if(b=R[f]){a.setAttribute("jstcache",b);return a.__jstcache=Q[b]}var g={};b=0;for(c=V.length;b<c;++b){d=V[b];e=d[0];var i=d[1];d=S[e];if(d!=null)g[e]=i(d)}b=""+ ++da;a.setAttribute("jstcache", <newline>-b);Q[b]=g;R[f]=b;return a.__jstcache=g}function W(a,b){a.h.push(b);a.k.push(0)}function X(a){return a.c.length?a.c.pop():[]}O.prototype.e=function(a,b){var c=this,e=Y(c,b),d=e.transclude;if(d)if(e=Z(d)){b.parentNode.replaceChild(e,b);b=X(c);b.push(c.e,a,e);W(c,b)}else b.parentNode.removeChild(b);else(e=e.jsselect)?ea(c,a,b,e):c.b(a,b)}; <newline>-O.prototype.b=function(a,b){var c=this,e=Y(c,b),d=e.jsdisplay;if(d){if(!A(a,d,b)){t(b);return}s(b)}(d=e.jsvars)&&fa(c,a,b,d);(d=e.jsvalues)&&ga(c,a,b,d);if(d=e.jseval)for(var f=0,g=d.length;f<g;++f)A(a,d[f],b);if(d=e.jsskip)if(A(a,d,b))return;if(e=e.jscontent){a=""+A(a,e,b);if(b.innerHTML!=a){for(;b.firstChild;)b.firstChild.parentNode.removeChild(b.firstChild);c=c.j.createTextNode(a);b.appendChild(c)}}else{e=X(c);for(b=b.firstChild;b;b=b.nextSibling)b.nodeType==1&&e.push(c.e,a,b);e.length&&W(c,e)}}; <newline>-function ea(a,b,c,e){e=A(b,e,c);var d=c.getAttribute(L),f=false;if(d)if(d.charAt(0)==M){var g=d.substr(1);d=parseInt(g,10);f=true}else d=parseInt(d,10);var i=e!=null&&typeof e=="object"&&typeof e.length=="number";g=i?e.length:1;var h=i&&g==0;if(i)if(h)if(d)c.parentNode.removeChild(c);else{c.setAttribute(L,"*0");t(c)}else{s(c);if(d===null||d===""||f&&d<g-1){f=X(a);d=d||0;for(i=g-1;d<i;++d){var k=c.cloneNode(true);c.parentNode.insertBefore(k,c);$(k,e,d);h=B(b,e[d],d,g);f.push(a.b,h,k,z,h,null)}$(c, <newline>-e,d);h=B(b,e[d],d,g);f.push(a.b,h,c,z,h,null);W(a,f)}else if(d<g){f=e[d];$(c,e,d);h=B(b,f,d,g);f=X(a);f.push(a.b,h,c,z,h,null);W(a,f)}else c.parentNode.removeChild(c)}else if(e==null)t(c);else{s(c);h=B(b,e,0,1);f=X(a);f.push(a.b,h,c,z,h,null);W(a,f)}}function fa(a,b,c,e){a=0;for(var d=e.length;a<d;a+=2){var f=e[a],g=A(b,e[a+1],c);b.a[f]=g}} <newline>-function ga(a,b,c,e){a=0;for(var d=e.length;a<d;a+=2){var f=e[a],g=A(b,e[a+1],c);if(f.charAt(0)=="$")b.a[f]=g;else if(f.charAt(0)=="."){f=f.substr(1).split(".");for(var i=c,h=f.length,k=0,ha=h-1;k<ha;++k){var D=f[k];i[D]||(i[D]={});i=i[D]}i[f[h-1]]=g}else if(f)if(typeof g=="boolean")g?q(c,f,f):r(c,f);else c.setAttribute(f,""+g)}}function Y(a,b){if(b.__jstcache)return b.__jstcache;if(a=b.getAttribute("jstcache"))return b.__jstcache=Q[a];return U(b)} <newline>-function Z(a,b){var c=document;if(a=b?ia(c,a,b):c.getElementById(a)){P(a);a=a.cloneNode(true);a.removeAttribute(ba);return a}else return null}function ia(a,b,c,e){var d=a.getElementById(b);if(d)return d;c=c();e=e||aa;if(d=a.getElementById(e))d=d;else{d=a.createElement(N);d.id=e;t(d);d.style.position="absolute";a.body.appendChild(d)}e=a.createElement(N);d.appendChild(e);e.innerHTML=c;return d=a.getElementById(b)}function $(a,b,c){c==b.length-1?q(a,L,M+c):q(a,L,""+c)};window.jstGetTemplate=Z;window.JsEvalContext=w;window.jstProcess=ca; <newline>-})() <newline>\ No newline at end of file
92516f331fc6711b7eb44fd638481429d8fcc2c	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue May 31 20:41:14 2011 +0000	Apply content-security-policy to chrome://plugins page.  This involves converting all inline javascript to external .js files, since CSP can't determine whether inline script is legitimate or an XSS. We move the jstemplate_compiled.js file to the share resources directory, since several WEBUI components will need this, and update the compile.py script that produces it to write to this new location. We move the javascript out of plugins.html to plugins.js; note that the sections at line 130 and line 251 are new.			http://codereview.chromium.org/7086003	svn://svn.chromium.org/chrome/trunk/src@87358 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/third_party/jstemplate/jstemplate_compiled.js b/chrome/third_party/jstemplate/jstemplate_compiled.js <newline>deleted file mode 100644 <newline>index afe2769..0000000 <newline>--- a/chrome/third_party/jstemplate/jstemplate_compiled.js <newline>+++ /dev/null <newline>@@ -1,13 +0,0 @@ <newline>-(function(){function j(a,b){for(var c in b)a[c]=b[c]}function l(){return Function.prototype.call.apply(Array.prototype.slice,arguments)}function m(a,b){var c=l(arguments,2);return function(){return b.apply(a,c)}}var n=9;function o(a,b){b=new p(b);for(b.f=[a];b.f.length;){a=b.f.shift();b.g(a);for(a=a.firstChild;a;a=a.nextSibling)a.nodeType==1&&b.f.push(a)}}function p(a){this.g=a}function q(a,b,c){a.setAttribute(b,c)}function r(a,b){a.removeAttribute(b)}function s(a){a.style.display=""} <newline>-function t(a){a.style.display="none"};var u=":",v=/\s*;\s*/;function w(){this.i.apply(this,arguments)}w.prototype.i=function(a,b){var c=this;if(!c.a)c.a={};b?j(c.a,b.a):j(c.a,x);c.a.$this=a;c.a.$context=c;c.d=typeof a!="undefined"&&a!=null?a:"";if(!b)c.a.$top=c.d};var x={};(function(a,b){x[a]=b})("$default",null);var y=[];function z(a){for(var b in a.a)delete a.a[b];a.d=null;y.push(a)}function A(a,b,c){try{return b.call(c,a.a,a.d)}catch(e){return x.$default}} <newline>-function B(a,b,c,e){if(y.length>0){var d=y.pop();w.call(d,b,a);a=d}else a=new w(b,a);a.a.$index=c;a.a.$count=e;return a}var C="a_",E="b_",F="with (a_) with (b_) return ",G={};function H(a){if(!G[a])try{G[a]=new Function(C,E,F+a)}catch(b){}return G[a]}function I(a){return a}function J(a){var b=[];a=a.split(v);for(var c=0,e=a.length;c<e;++c){var d=a[c].indexOf(u);if(!(d<0)){var f;f=a[c].substr(0,d).replace(/^\s+/,"").replace(/\s+$/,"");d=H(a[c].substr(d+1));b.push(f,d)}}return b} <newline>-function K(a){var b=[];a=a.split(v);for(var c=0,e=a.length;c<e;++c)if(a[c]){var d=H(a[c]);b.push(d)}return b};var L="jsinstance",aa="jsts",M="*",N="div",ba="id";function ca(a,b){var c=new O;P(b);c.j=b?b.nodeType==n?b:b.ownerDocument||document:document;var e=m(c,c.e,a,b);a=c.h=[];b=c.k=[];c.c=[];e();for(var d,f,g;a.length;){d=a[a.length-1];e=b[b.length-1];if(e>=d.length){e=a.pop();e.length=0;c.c.push(e);b.pop()}else{f=d[e++];g=d[e++];d=d[e++];b[b.length-1]=e;f.call(c,g,d)}}}function O(){}var da=0,Q={};Q[0]={};var R={},S={},T=[];function P(a){a.__jstcache||o(a,function(b){U(b)})} <newline>-var V=[["jsselect",H],["jsdisplay",H],["jsvalues",J],["jsvars",J],["jseval",K],["transclude",I],["jscontent",H],["jsskip",H]]; <newline>-function U(a){if(a.__jstcache)return a.__jstcache;var b=a.getAttribute("jstcache");if(b!=null)return a.__jstcache=Q[b];b=T.length=0;for(var c=V.length;b<c;++b){var e=V[b][0],d=a.getAttribute(e);S[e]=d;d!=null&&T.push(e+"="+d)}if(T.length==0){a.setAttribute("jstcache","0");return a.__jstcache=Q[0]}var f=T.join("&");if(b=R[f]){a.setAttribute("jstcache",b);return a.__jstcache=Q[b]}var g={};b=0;for(c=V.length;b<c;++b){d=V[b];e=d[0];var i=d[1];d=S[e];if(d!=null)g[e]=i(d)}b=""+ ++da;a.setAttribute("jstcache", <newline>-b);Q[b]=g;R[f]=b;return a.__jstcache=g}function W(a,b){a.h.push(b);a.k.push(0)}function X(a){return a.c.length?a.c.pop():[]}O.prototype.e=function(a,b){var c=this,e=Y(c,b),d=e.transclude;if(d)if(e=Z(d)){b.parentNode.replaceChild(e,b);b=X(c);b.push(c.e,a,e);W(c,b)}else b.parentNode.removeChild(b);else(e=e.jsselect)?ea(c,a,b,e):c.b(a,b)}; <newline>-O.prototype.b=function(a,b){var c=this,e=Y(c,b),d=e.jsdisplay;if(d){if(!A(a,d,b)){t(b);return}s(b)}(d=e.jsvars)&&fa(c,a,b,d);(d=e.jsvalues)&&ga(c,a,b,d);if(d=e.jseval)for(var f=0,g=d.length;f<g;++f)A(a,d[f],b);if(d=e.jsskip)if(A(a,d,b))return;if(e=e.jscontent){a=""+A(a,e,b);if(b.innerHTML!=a){for(;b.firstChild;)b.firstChild.parentNode.removeChild(b.firstChild);c=c.j.createTextNode(a);b.appendChild(c)}}else{e=X(c);for(b=b.firstChild;b;b=b.nextSibling)b.nodeType==1&&e.push(c.e,a,b);e.length&&W(c,e)}}; <newline>-function ea(a,b,c,e){e=A(b,e,c);var d=c.getAttribute(L),f=false;if(d)if(d.charAt(0)==M){var g=d.substr(1);d=parseInt(g,10);f=true}else d=parseInt(d,10);var i=e!=null&&typeof e=="object"&&typeof e.length=="number";g=i?e.length:1;var h=i&&g==0;if(i)if(h)if(d)c.parentNode.removeChild(c);else{c.setAttribute(L,"*0");t(c)}else{s(c);if(d===null||d===""||f&&d<g-1){f=X(a);d=d||0;for(i=g-1;d<i;++d){var k=c.cloneNode(true);c.parentNode.insertBefore(k,c);$(k,e,d);h=B(b,e[d],d,g);f.push(a.b,h,k,z,h,null)}$(c, <newline>-e,d);h=B(b,e[d],d,g);f.push(a.b,h,c,z,h,null);W(a,f)}else if(d<g){f=e[d];$(c,e,d);h=B(b,f,d,g);f=X(a);f.push(a.b,h,c,z,h,null);W(a,f)}else c.parentNode.removeChild(c)}else if(e==null)t(c);else{s(c);h=B(b,e,0,1);f=X(a);f.push(a.b,h,c,z,h,null);W(a,f)}}function fa(a,b,c,e){a=0;for(var d=e.length;a<d;a+=2){var f=e[a],g=A(b,e[a+1],c);b.a[f]=g}} <newline>-function ga(a,b,c,e){a=0;for(var d=e.length;a<d;a+=2){var f=e[a],g=A(b,e[a+1],c);if(f.charAt(0)=="$")b.a[f]=g;else if(f.charAt(0)=="."){f=f.substr(1).split(".");for(var i=c,h=f.length,k=0,ha=h-1;k<ha;++k){var D=f[k];i[D]||(i[D]={});i=i[D]}i[f[h-1]]=g}else if(f)if(typeof g=="boolean")g?q(c,f,f):r(c,f);else c.setAttribute(f,""+g)}}function Y(a,b){if(b.__jstcache)return b.__jstcache;if(a=b.getAttribute("jstcache"))return b.__jstcache=Q[a];return U(b)} <newline>-function Z(a,b){var c=document;if(a=b?ia(c,a,b):c.getElementById(a)){P(a);a=a.cloneNode(true);a.removeAttribute(ba);return a}else return null}function ia(a,b,c,e){var d=a.getElementById(b);if(d)return d;c=c();e=e||aa;if(d=a.getElementById(e))d=d;else{d=a.createElement(N);d.id=e;t(d);d.style.position="absolute";a.body.appendChild(d)}e=a.createElement(N);d.appendChild(e);e.innerHTML=c;return d=a.getElementById(b)}function $(a,b,c){c==b.length-1?q(a,L,M+c):q(a,L,""+c)};window.jstGetTemplate=Z;window.JsEvalContext=w;window.jstProcess=ca; <newline>-})() <newline>\ No newline at end of file
67d3f76868b793a3bb00d63d491fd008f4c0b15	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue May 31 19:13:37 2011 +0000	third_party/libevent: don't touch base unless needed. See referenced bug. I'm assuming that we don't actually have active events outliving the base, but just that the accesses of the base pointer outside of the conditional were premature. This change makes it so that we don't touch the base object unless the event really is active. This suggests that there's no security problem here and the crashes are those that are hitting pages that have been unmapped. TEST=Valgrind	44966		http://codereview.chromium.org/7096012	svn://svn.chromium.org/chrome/trunk/src@87338 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libevent/event.c b/third_party/libevent/event.c <newline>index d7ccd3f..1253352 100644 <newline>--- a/third_party/libevent/event.c <newline>+++ b/third_party/libevent/event.c <newline>@@ -778,8 +778,6 @@ int <newline> event_del(struct event *ev) <newline> { <newline> 	struct event_base *base; <newline>-	const struct eventop *evsel; <newline>-	void *evbase; <newline> 	event_debug(("event_del: %p, callback %p", <newline> 		 ev, ev->ev_callback)); <newline>@@ -789,8 +787,6 @@ event_del(struct event *ev) <newline> 		return (-1); <newline> 	base = ev->ev_base; <newline>-	evsel = base->evsel; <newline>-	evbase = base->evbase; <newline> 	assert(!(ev->ev_flags & ~EVLIST_ALL)); <newline>@@ -808,7 +804,7 @@ event_del(struct event *ev) <newline> 	if (ev->ev_flags & EVLIST_INSERTED) { <newline> 		event_queue_remove(base, ev, EVLIST_INSERTED); <newline>-		return (evsel->del(evbase, ev)); <newline>+		return (base->evsel->del(base->evbase, ev)); <newline> 	} <newline> 	return (0);
60d8301ce41acbd8eec8101cb80d8c1d2931129	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue May 31 19:13:37 2011 +0000	third_party/libevent: don't touch base unless needed. See referenced bug. I'm assuming that we don't actually have active events outliving the base, but just that the accesses of the base pointer outside of the conditional were premature. This change makes it so that we don't touch the base object unless the event really is active. This suggests that there's no security problem here and the crashes are those that are hitting pages that have been unmapped. TEST=Valgrind	44966		http://codereview.chromium.org/7096012	svn://svn.chromium.org/chrome/trunk/src@87338 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libevent/event.c b/third_party/libevent/event.c <newline>index d7ccd3f..1253352 100644 <newline>--- a/third_party/libevent/event.c <newline>+++ b/third_party/libevent/event.c <newline>@@ -778,8 +778,6 @@ int <newline> event_del(struct event *ev) <newline> { <newline> 	struct event_base *base; <newline>-	const struct eventop *evsel; <newline>-	void *evbase; <newline> 	event_debug(("event_del: %p, callback %p", <newline> 		 ev, ev->ev_callback)); <newline>@@ -789,8 +787,6 @@ event_del(struct event *ev) <newline> 		return (-1); <newline> 	base = ev->ev_base; <newline>-	evsel = base->evsel; <newline>-	evbase = base->evbase; <newline> 	assert(!(ev->ev_flags & ~EVLIST_ALL)); <newline>@@ -808,7 +804,7 @@ event_del(struct event *ev) <newline> 	if (ev->ev_flags & EVLIST_INSERTED) { <newline> 		event_queue_remove(base, ev, EVLIST_INSERTED); <newline>-		return (evsel->del(evbase, ev)); <newline>+		return (base->evsel->del(base->evbase, ev)); <newline> 	} <newline> 	return (0);
61598c08b5bd8468c6377a3dce6628cd5bc3d6b	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue May 31 19:11:14 2011 +0000	Apparently, ssl.gstatic.com is used to load a lot of content over http too. Therefore, don't force it. This domain is for subresource loads so there's no drop in security for not forcing it. TEST=TransportSecurityStateTest.*			http://codereview.chromium.org/7101003	svn://svn.chromium.org/chrome/trunk/src@87337 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state_unittest.cc b/net/base/transport_security_state_unittest.cc <newline>index 8c79fdd..8b9271a 100644 <newline>--- a/net/base/transport_security_state_unittest.cc <newline>+++ b/net/base/transport_security_state_unittest.cc <newline>@@ -502,8 +502,6 @@ TEST_F(TransportSecurityStateTest, Preloaded) { <newline>   EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "www.entropia.de", true)); <newline>   EXPECT_FALSE(state->IsEnabledForHost(&domain_state, "foo.entropia.de", true)); <newline>-  EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "ssl.gstatic.com", true)); <newline>-  EXPECT_FALSE(state->IsEnabledForHost(&domain_state, "www.gstatic.com", true)); <newline>   EXPECT_TRUE(state->IsEnabledForHost(&domain_state, <newline>                                       "ssl.google-analytics.com", <newline>                                       true)); <newline>@@ -709,6 +707,7 @@ TEST_F(TransportSecurityStateTest, BuiltinCertPins) { <newline>                                     "talkgadget.google.com", <newline>                                     true)); <newline>   EXPECT_TRUE(state->HasPinsForHost(&domain_state, "ssl.gstatic.com", true)); <newline>+  EXPECT_FALSE(state->HasPinsForHost(&domain_state, "www.gstatic.com", true)); <newline>   EXPECT_TRUE(state->HasPinsForHost(&domain_state, <newline>                                     "ssl.google-analytics.com", <newline>                                     true));
e9ce7007b0f684eea30fac33135f73b05bca48a	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue May 31 19:11:14 2011 +0000	Apparently, ssl.gstatic.com is used to load a lot of content over http too. Therefore, don't force it. This domain is for subresource loads so there's no drop in security for not forcing it. TEST=TransportSecurityStateTest.*			http://codereview.chromium.org/7101003	svn://svn.chromium.org/chrome/trunk/src@87337 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state_unittest.cc b/net/base/transport_security_state_unittest.cc <newline>index 8c79fdd..8b9271a 100644 <newline>--- a/net/base/transport_security_state_unittest.cc <newline>+++ b/net/base/transport_security_state_unittest.cc <newline>@@ -502,8 +502,6 @@ TEST_F(TransportSecurityStateTest, Preloaded) { <newline>   EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "www.entropia.de", true)); <newline>   EXPECT_FALSE(state->IsEnabledForHost(&domain_state, "foo.entropia.de", true)); <newline>-  EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "ssl.gstatic.com", true)); <newline>-  EXPECT_FALSE(state->IsEnabledForHost(&domain_state, "www.gstatic.com", true)); <newline>   EXPECT_TRUE(state->IsEnabledForHost(&domain_state, <newline>                                       "ssl.google-analytics.com", <newline>                                       true)); <newline>@@ -709,6 +707,7 @@ TEST_F(TransportSecurityStateTest, BuiltinCertPins) { <newline>                                     "talkgadget.google.com", <newline>                                     true)); <newline>   EXPECT_TRUE(state->HasPinsForHost(&domain_state, "ssl.gstatic.com", true)); <newline>+  EXPECT_FALSE(state->HasPinsForHost(&domain_state, "www.gstatic.com", true)); <newline>   EXPECT_TRUE(state->HasPinsForHost(&domain_state, <newline>                                     "ssl.google-analytics.com", <newline>                                     true));
41d9f92deb4d62a4e56fc8f5e28418682e6f475	mihaip@chromium.org <mihaip@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 27 23:45:31 2011 +0000	Use WebFrame::setIsolatedWorldSecurityOrigin to allow cross-origin XHRs in content scripts. http://trac.webkit.org/changeset/87423 adds the ability to associated a security origin with an isolated world. Use that to make content script isolated worlds use the extension's origin, and whitelist that origin in the page's renderer process for the host permissions in the manifest. TEST=no R=mpcomplete@chromium.org	18857		http://codereview.chromium.org/7071025	svn://svn.chromium.org/chrome/trunk/src@87114 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/api_test/cross_origin_xhr/test.html b/chrome/test/data/extensions/api_test/cross_origin_xhr/test.html <newline>deleted file mode 100644 <newline>index 9efd231..0000000 <newline>--- a/chrome/test/data/extensions/api_test/cross_origin_xhr/test.html <newline>+++ /dev/null <newline>@@ -1,59 +0,0 @@ <newline>-<script> <newline>-chrome.test.getConfig(function(config) { <newline>- <newline>-  function doReq(domain, expectSuccess) { <newline>-    var req = new XMLHttpRequest(); <newline>-    var url = domain + ":PORT/files/extensions/test_file.txt"; <newline>-    url = url.replace(/PORT/, config.testServer.port); <newline>- <newline>-    chrome.test.log("Requesting url: " + url); <newline>-    req.open("GET", url, true); <newline>- <newline>- <newline>-    if (expectSuccess) { <newline>-      req.onload = function() { <newline>-        chrome.test.assertEq(200, req.status); <newline>-        chrome.test.assertEq("Hello!", req.responseText); <newline>-        chrome.test.runNextTest(); <newline>-      } <newline>-      req.onerror = function() { <newline>-        chrome.test.log("status: " + req.status); <newline>-        chrome.test.log("text: " + req.responseText); <newline>-        chrome.test.fail("Unexpected error for domain: " + domain); <newline>-      } <newline>-    } else { <newline>-      req.onload = function() { <newline>-        chrome.test.fail("Unexpected success for domain: " + domain); <newline>-      } <newline>-      req.onerror = function() { <newline>-        chrome.test.assertEq(0, req.status); <newline>-        chrome.test.runNextTest(); <newline>-      } <newline>-    } <newline>- <newline>-    req.send(null); <newline>-  } <newline>- <newline>-  chrome.test.runTests([ <newline>-    function allowedOrigin() { <newline>-      doReq("http://a.com", true); <newline>-    }, <newline>-    function diallowedOrigin() { <newline>-      doReq("http://c.com", false); <newline>-    }, <newline>-    function allowedSubdomain() { <newline>-      doReq("http://foo.b.com", true); <newline>-    }, <newline>-    function noSubdomain() { <newline>-      doReq("http://b.com", true); <newline>-    }, <newline>-    function disallowedSubdomain() { <newline>-      doReq("http://foob.com", false); <newline>-    }, <newline>-    function disallowedSSL() { <newline>-      doReq("https://a.com", false); <newline>-    } <newline>-  ]); <newline>-}); <newline>- <newline>-</script>
1cf5b85048f6d396ab03d2c1ed383da74ac0b6f	mihaip@chromium.org <mihaip@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 27 23:45:31 2011 +0000	Use WebFrame::setIsolatedWorldSecurityOrigin to allow cross-origin XHRs in content scripts. http://trac.webkit.org/changeset/87423 adds the ability to associated a security origin with an isolated world. Use that to make content script isolated worlds use the extension's origin, and whitelist that origin in the page's renderer process for the host permissions in the manifest. TEST=no R=mpcomplete@chromium.org	18857		http://codereview.chromium.org/7071025	svn://svn.chromium.org/chrome/trunk/src@87114 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/api_test/cross_origin_xhr/test.html b/chrome/test/data/extensions/api_test/cross_origin_xhr/test.html <newline>deleted file mode 100644 <newline>index 9efd231..0000000 <newline>--- a/chrome/test/data/extensions/api_test/cross_origin_xhr/test.html <newline>+++ /dev/null <newline>@@ -1,59 +0,0 @@ <newline>-<script> <newline>-chrome.test.getConfig(function(config) { <newline>- <newline>-  function doReq(domain, expectSuccess) { <newline>-    var req = new XMLHttpRequest(); <newline>-    var url = domain + ":PORT/files/extensions/test_file.txt"; <newline>-    url = url.replace(/PORT/, config.testServer.port); <newline>- <newline>-    chrome.test.log("Requesting url: " + url); <newline>-    req.open("GET", url, true); <newline>- <newline>- <newline>-    if (expectSuccess) { <newline>-      req.onload = function() { <newline>-        chrome.test.assertEq(200, req.status); <newline>-        chrome.test.assertEq("Hello!", req.responseText); <newline>-        chrome.test.runNextTest(); <newline>-      } <newline>-      req.onerror = function() { <newline>-        chrome.test.log("status: " + req.status); <newline>-        chrome.test.log("text: " + req.responseText); <newline>-        chrome.test.fail("Unexpected error for domain: " + domain); <newline>-      } <newline>-    } else { <newline>-      req.onload = function() { <newline>-        chrome.test.fail("Unexpected success for domain: " + domain); <newline>-      } <newline>-      req.onerror = function() { <newline>-        chrome.test.assertEq(0, req.status); <newline>-        chrome.test.runNextTest(); <newline>-      } <newline>-    } <newline>- <newline>-    req.send(null); <newline>-  } <newline>- <newline>-  chrome.test.runTests([ <newline>-    function allowedOrigin() { <newline>-      doReq("http://a.com", true); <newline>-    }, <newline>-    function diallowedOrigin() { <newline>-      doReq("http://c.com", false); <newline>-    }, <newline>-    function allowedSubdomain() { <newline>-      doReq("http://foo.b.com", true); <newline>-    }, <newline>-    function noSubdomain() { <newline>-      doReq("http://b.com", true); <newline>-    }, <newline>-    function disallowedSubdomain() { <newline>-      doReq("http://foob.com", false); <newline>-    }, <newline>-    function disallowedSSL() { <newline>-      doReq("https://a.com", false); <newline>-    } <newline>-  ]); <newline>-}); <newline>- <newline>-</script>
90a0fb4d44ae9d3fca4adf05b76f187c09840f6	jam@chromium.org <jam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 26 23:37:58 2011 +0000	Move security_style.h to content.  It seems like useful information that an embedder would want.			http://codereview.chromium.org/7062036	svn://svn.chromium.org/chrome/trunk/src@86928 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/content_common.gypi b/content/content_common.gypi <newline>index 89d0b1d..ea57081 100644 <newline>--- a/content/content_common.gypi <newline>+++ b/content/content_common.gypi <newline>@@ -205,6 +205,7 @@ <newline>         'common/sandbox_methods_linux.h', <newline>         'common/section_util_win.cc', <newline>         'common/section_util_win.h', <newline>+        'common/security_style.h', <newline>         'common/serialized_script_value.cc', <newline>         'common/serialized_script_value.h', <newline>         'common/set_process_title.cc',
3aa446e9d64ded598e9a380337f3810c67b5b9f	jam@chromium.org <jam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 26 23:37:58 2011 +0000	Move security_style.h to content.  It seems like useful information that an embedder would want.			http://codereview.chromium.org/7062036	svn://svn.chromium.org/chrome/trunk/src@86928 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/content_common.gypi b/content/content_common.gypi <newline>index 89d0b1d..ea57081 100644 <newline>--- a/content/content_common.gypi <newline>+++ b/content/content_common.gypi <newline>@@ -205,6 +205,7 @@ <newline>         'common/sandbox_methods_linux.h', <newline>         'common/section_util_win.cc', <newline>         'common/section_util_win.h', <newline>+        'common/security_style.h', <newline>         'common/serialized_script_value.cc', <newline>         'common/serialized_script_value.h', <newline>         'common/set_process_title.cc',
530a664825ab90fc10028d2bf5f6a21b40cbbf9	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed May 25 21:29:48 2011 +0000	Insert meta tag turning on content-security-protection for chrome://settings, history, downloads pages now that the webkit inspector has been revised to stop calling JS eval().			http://codereview.chromium.org/7038046	svn://svn.chromium.org/chrome/trunk/src@86708 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/webui/test_api.js b/chrome/test/data/webui/test_api.js <newline>index fc472d2..27d94f8 100644 <newline>--- a/chrome/test/data/webui/test_api.js <newline>+++ b/chrome/test/data/webui/test_api.js <newline>@@ -53,9 +53,14 @@ <newline>     throw new Error(message); <newline>   } <newline>-  function runTest(currentTest, testArguments) { <newline>+  function runTest(testFunction, testArguments) { <newline>     try { <newline>-      currentTest = eval(currentTest); <newline>+      // Avoid eval() if at all possible, since it will not work on pages <newline>+      // that have enabled content-security-policy. <newline>+      currentTest = this[testFunction];    // global object -- not a method. <newline>+      if (typeof currentTest === "undefined") { <newline>+        currentTest = eval(testFunction); <newline>+      } <newline>       console.log('Running test ' + currentTest.name); <newline>       currentTest.apply(null, testArguments); <newline>     } catch (e) {
d96103aabbf8ab1f971cd301877253e95d119d5	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed May 25 21:29:48 2011 +0000	Insert meta tag turning on content-security-protection for chrome://settings, history, downloads pages now that the webkit inspector has been revised to stop calling JS eval().			http://codereview.chromium.org/7038046	svn://svn.chromium.org/chrome/trunk/src@86708 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/webui/test_api.js b/chrome/test/data/webui/test_api.js <newline>index fc472d2..27d94f8 100644 <newline>--- a/chrome/test/data/webui/test_api.js <newline>+++ b/chrome/test/data/webui/test_api.js <newline>@@ -53,9 +53,14 @@ <newline>     throw new Error(message); <newline>   } <newline>-  function runTest(currentTest, testArguments) { <newline>+  function runTest(testFunction, testArguments) { <newline>     try { <newline>-      currentTest = eval(currentTest); <newline>+      // Avoid eval() if at all possible, since it will not work on pages <newline>+      // that have enabled content-security-policy. <newline>+      currentTest = this[testFunction];    // global object -- not a method. <newline>+      if (typeof currentTest === "undefined") { <newline>+        currentTest = eval(testFunction); <newline>+      } <newline>       console.log('Running test ' + currentTest.name); <newline>       currentTest.apply(null, testArguments); <newline>     } catch (e) {
0a45a986a192fd4ba11196db2606e48e875c269	jochen@chromium.org <jochen@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed May 25 16:58:15 2011 +0000	Pass frame and toplevel frame security origin for all site data related content settings IPCs TEST=none	81179		http://codereview.chromium.org/7068013	svn://svn.chromium.org/chrome/trunk/src@86643 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/content_settings_observer.cc b/chrome/renderer/content_settings_observer.cc <newline>index 7ca1452..698a3c2 100644 <newline>--- a/chrome/renderer/content_settings_observer.cc <newline>+++ b/chrome/renderer/content_settings_observer.cc <newline>@@ -144,24 +144,27 @@ bool ContentSettingsObserver::AllowDatabase(WebFrame* frame, <newline>                                             const WebString& name, <newline>                                             const WebString& display_name, <newline>                                             unsigned long estimated_size) { <newline>-  WebSecurityOrigin origin = frame->securityOrigin(); <newline>-  if (origin.isEmpty()) <newline>-    return false;  // Uninitialized document? <newline>+  if (frame->securityOrigin().isEmpty() || <newline>+      frame->top()->securityOrigin().isEmpty()) <newline>+    return false; // Uninitialized document. <newline>   bool result = false; <newline>   Send(new ViewHostMsg_AllowDatabase( <newline>-      routing_id(), GURL(origin.toString()), name, display_name, &result)); <newline>+      routing_id(), GURL(frame->securityOrigin().toString()), <newline>+      GURL(frame->top()->securityOrigin().toString()), <newline>+      name, display_name, &result)); <newline>   return result; <newline> } <newline> bool ContentSettingsObserver::AllowFileSystem(WebFrame* frame) { <newline>-  WebSecurityOrigin origin = frame->securityOrigin(); <newline>-  if (origin.isEmpty()) <newline>-    return false;  // Uninitialized document? <newline>+  if (frame->securityOrigin().isEmpty() || <newline>+      frame->top()->securityOrigin().isEmpty()) <newline>+    return false; // Uninitialized document. <newline>   bool result = false; <newline>   Send(new ViewHostMsg_AllowFileSystem( <newline>-      routing_id(), GURL(origin.toString()), &result)); <newline>+      routing_id(), GURL(frame->securityOrigin().toString()), <newline>+      GURL(frame->top()->securityOrigin().toString()), &result)); <newline>   return result; <newline> } <newline>@@ -182,9 +185,15 @@ bool ContentSettingsObserver::AllowImages(WebFrame* frame, <newline> bool ContentSettingsObserver::AllowIndexedDB(WebFrame* frame, <newline>                                              const WebString& name, <newline>                                              const WebSecurityOrigin& origin) { <newline>+  if (frame->securityOrigin().isEmpty() || <newline>+      frame->top()->securityOrigin().isEmpty()) <newline>+    return false; // Uninitialized document. <newline>+ <newline>   bool result = false; <newline>   Send(new ViewHostMsg_AllowIndexedDB( <newline>-      routing_id(), origin.databaseIdentifier(), name, &result)); <newline>+      routing_id(), GURL(frame->securityOrigin().toString()), <newline>+      GURL(frame->top()->securityOrigin().toString()), <newline>+      name, &result)); <newline>   return result; <newline> } <newline>@@ -207,9 +216,14 @@ bool ContentSettingsObserver::AllowScript(WebFrame* frame, <newline> } <newline> bool ContentSettingsObserver::AllowStorage(WebFrame* frame, bool local) { <newline>+  if (frame->securityOrigin().isEmpty() || <newline>+      frame->top()->securityOrigin().isEmpty()) <newline>+    return false; // Uninitialized document. <newline>   bool result = false; <newline>+ <newline>   Send(new ViewHostMsg_AllowDOMStorage( <newline>-      routing_id(), frame->url(), <newline>+      routing_id(), GURL(frame->securityOrigin().toString()), <newline>+      GURL(frame->top()->securityOrigin().toString()), <newline>       local ? DOM_STORAGE_LOCAL : DOM_STORAGE_SESSION, <newline>       &result)); <newline>   return result;
74182c82c784f6a2ee320f69211e83dbf9e99b1	jochen@chromium.org <jochen@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed May 25 16:58:15 2011 +0000	Pass frame and toplevel frame security origin for all site data related content settings IPCs TEST=none	81179		http://codereview.chromium.org/7068013	svn://svn.chromium.org/chrome/trunk/src@86643 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/content_settings_observer.cc b/chrome/renderer/content_settings_observer.cc <newline>index 7ca1452..698a3c2 100644 <newline>--- a/chrome/renderer/content_settings_observer.cc <newline>+++ b/chrome/renderer/content_settings_observer.cc <newline>@@ -144,24 +144,27 @@ bool ContentSettingsObserver::AllowDatabase(WebFrame* frame, <newline>                                             const WebString& name, <newline>                                             const WebString& display_name, <newline>                                             unsigned long estimated_size) { <newline>-  WebSecurityOrigin origin = frame->securityOrigin(); <newline>-  if (origin.isEmpty()) <newline>-    return false;  // Uninitialized document? <newline>+  if (frame->securityOrigin().isEmpty() || <newline>+      frame->top()->securityOrigin().isEmpty()) <newline>+    return false; // Uninitialized document. <newline>   bool result = false; <newline>   Send(new ViewHostMsg_AllowDatabase( <newline>-      routing_id(), GURL(origin.toString()), name, display_name, &result)); <newline>+      routing_id(), GURL(frame->securityOrigin().toString()), <newline>+      GURL(frame->top()->securityOrigin().toString()), <newline>+      name, display_name, &result)); <newline>   return result; <newline> } <newline> bool ContentSettingsObserver::AllowFileSystem(WebFrame* frame) { <newline>-  WebSecurityOrigin origin = frame->securityOrigin(); <newline>-  if (origin.isEmpty()) <newline>-    return false;  // Uninitialized document? <newline>+  if (frame->securityOrigin().isEmpty() || <newline>+      frame->top()->securityOrigin().isEmpty()) <newline>+    return false; // Uninitialized document. <newline>   bool result = false; <newline>   Send(new ViewHostMsg_AllowFileSystem( <newline>-      routing_id(), GURL(origin.toString()), &result)); <newline>+      routing_id(), GURL(frame->securityOrigin().toString()), <newline>+      GURL(frame->top()->securityOrigin().toString()), &result)); <newline>   return result; <newline> } <newline>@@ -182,9 +185,15 @@ bool ContentSettingsObserver::AllowImages(WebFrame* frame, <newline> bool ContentSettingsObserver::AllowIndexedDB(WebFrame* frame, <newline>                                              const WebString& name, <newline>                                              const WebSecurityOrigin& origin) { <newline>+  if (frame->securityOrigin().isEmpty() || <newline>+      frame->top()->securityOrigin().isEmpty()) <newline>+    return false; // Uninitialized document. <newline>+ <newline>   bool result = false; <newline>   Send(new ViewHostMsg_AllowIndexedDB( <newline>-      routing_id(), origin.databaseIdentifier(), name, &result)); <newline>+      routing_id(), GURL(frame->securityOrigin().toString()), <newline>+      GURL(frame->top()->securityOrigin().toString()), <newline>+      name, &result)); <newline>   return result; <newline> } <newline>@@ -207,9 +216,14 @@ bool ContentSettingsObserver::AllowScript(WebFrame* frame, <newline> } <newline> bool ContentSettingsObserver::AllowStorage(WebFrame* frame, bool local) { <newline>+  if (frame->securityOrigin().isEmpty() || <newline>+      frame->top()->securityOrigin().isEmpty()) <newline>+    return false; // Uninitialized document. <newline>   bool result = false; <newline>+ <newline>   Send(new ViewHostMsg_AllowDOMStorage( <newline>-      routing_id(), frame->url(), <newline>+      routing_id(), GURL(frame->securityOrigin().toString()), <newline>+      GURL(frame->top()->securityOrigin().toString()), <newline>       local ? DOM_STORAGE_LOCAL : DOM_STORAGE_SESSION, <newline>       &result)); <newline>   return result;
0fd6ab9ba3443b8c746e852341c8b8ffbf33e52	wjmaclean@chromium.org <wjmaclean@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat May 21 00:41:54 2011 +0000	Remove override on thread IO restrictions. This is the removal of code to disable security restrictions on disk IO, originally needed so that the GL bindings could be initialized. The GL libraries now manage this in a separate thread with the necessary permissions. TEST=none	none		http://codereview.chromium.org/6990019	svn://svn.chromium.org/chrome/trunk/src@86186 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/ui/gfx/compositor/compositor_gl.cc b/ui/gfx/compositor/compositor_gl.cc <newline>index d952f9b..f8fc139 100644 <newline>--- a/ui/gfx/compositor/compositor_gl.cc <newline>+++ b/ui/gfx/compositor/compositor_gl.cc <newline>@@ -10,7 +10,6 @@ <newline> #include "base/compiler_specific.h" <newline> #include "base/logging.h" <newline> #include "base/memory/scoped_ptr.h" <newline>-#include "base/threading/thread_restrictions.h" <newline> #include "third_party/skia/include/core/SkBitmap.h" <newline> #include "third_party/skia/include/core/SkMatrix.h" <newline> #include "third_party/skia/include/core/SkScalar.h" <newline>@@ -243,10 +242,6 @@ void CompositorGL::NotifyEnd() { <newline> // static <newline> Compositor* Compositor::Create(gfx::AcceleratedWidget widget) { <newline>-  // The following line of code exists soley to disable IO restrictions <newline>-  // on this thread long enough to perform the GL bindings. <newline>-  // TODO(backer) Remove this when GL initialisation cleaned up. <newline>-  base::ThreadRestrictions::ScopedAllowIO allow_io; <newline>   // TODO(backer) Remove this when GL thread patch lands. Should be init'd <newline>   // by the new GPU thread. <newline>   // http://codereview.chromium.org/6677055/
da49d2f4ad29bada8d0cb47b299d5fc2aba51c8	wjmaclean@chromium.org <wjmaclean@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat May 21 00:41:54 2011 +0000	Remove override on thread IO restrictions. This is the removal of code to disable security restrictions on disk IO, originally needed so that the GL bindings could be initialized. The GL libraries now manage this in a separate thread with the necessary permissions. TEST=none	none		http://codereview.chromium.org/6990019	svn://svn.chromium.org/chrome/trunk/src@86186 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/ui/gfx/compositor/compositor_gl.cc b/ui/gfx/compositor/compositor_gl.cc <newline>index d952f9b..f8fc139 100644 <newline>--- a/ui/gfx/compositor/compositor_gl.cc <newline>+++ b/ui/gfx/compositor/compositor_gl.cc <newline>@@ -10,7 +10,6 @@ <newline> #include "base/compiler_specific.h" <newline> #include "base/logging.h" <newline> #include "base/memory/scoped_ptr.h" <newline>-#include "base/threading/thread_restrictions.h" <newline> #include "third_party/skia/include/core/SkBitmap.h" <newline> #include "third_party/skia/include/core/SkMatrix.h" <newline> #include "third_party/skia/include/core/SkScalar.h" <newline>@@ -243,10 +242,6 @@ void CompositorGL::NotifyEnd() { <newline> // static <newline> Compositor* Compositor::Create(gfx::AcceleratedWidget widget) { <newline>-  // The following line of code exists soley to disable IO restrictions <newline>-  // on this thread long enough to perform the GL bindings. <newline>-  // TODO(backer) Remove this when GL initialisation cleaned up. <newline>-  base::ThreadRestrictions::ScopedAllowIO allow_io; <newline>   // TODO(backer) Remove this when GL thread patch lands. Should be init'd <newline>   // by the new GPU thread. <newline>   // http://codereview.chromium.org/6677055/
3e6f83268772fd27144a82470d552967b1ca244	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 20 17:08:18 2011 +0000	Remove in-line javascript from downloads.html and history.html pages so that we may subsequently apply content-security-policy to these pages.  CSP acts as a second line of defense in case someone introduces an XSS on one of these page. TEST=chrome://downloads, chrome://history load properly.			http://codereview.chromium.org/6975025	svn://svn.chromium.org/chrome/trunk/src@86098 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_browser.gypi b/chrome/chrome_browser.gypi <newline>index d1c0605..487ff92 100644 <newline>--- a/chrome/chrome_browser.gypi <newline>+++ b/chrome/chrome_browser.gypi <newline>@@ -3240,6 +3240,8 @@ <newline>         'browser/ui/webui/chrome_url_data_manager_backend.h', <newline>         'browser/ui/webui/chrome_url_data_manager.cc', <newline>         'browser/ui/webui/chrome_url_data_manager.h', <newline>+        'browser/ui/webui/chrome_web_ui_data_source.cc', <newline>+        'browser/ui/webui/chrome_web_ui_data_source.h', <newline>         'browser/ui/webui/chrome_web_ui_factory.cc', <newline>         'browser/ui/webui/chrome_web_ui_factory.h', <newline>         'browser/ui/webui/chromeos/choose_mobile_network_ui.cc',
438cab716b7b05a1c045f53136589c459eea81e	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 20 17:08:18 2011 +0000	Remove in-line javascript from downloads.html and history.html pages so that we may subsequently apply content-security-policy to these pages.  CSP acts as a second line of defense in case someone introduces an XSS on one of these page. TEST=chrome://downloads, chrome://history load properly.			http://codereview.chromium.org/6975025	svn://svn.chromium.org/chrome/trunk/src@86098 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_browser.gypi b/chrome/chrome_browser.gypi <newline>index d1c0605..487ff92 100644 <newline>--- a/chrome/chrome_browser.gypi <newline>+++ b/chrome/chrome_browser.gypi <newline>@@ -3240,6 +3240,8 @@ <newline>         'browser/ui/webui/chrome_url_data_manager_backend.h', <newline>         'browser/ui/webui/chrome_url_data_manager.cc', <newline>         'browser/ui/webui/chrome_url_data_manager.h', <newline>+        'browser/ui/webui/chrome_web_ui_data_source.cc', <newline>+        'browser/ui/webui/chrome_web_ui_data_source.h', <newline>         'browser/ui/webui/chrome_web_ui_factory.cc', <newline>         'browser/ui/webui/chrome_web_ui_factory.h', <newline>         'browser/ui/webui/chromeos/choose_mobile_network_ui.cc',
55d8b28e5028b4bde948d2fbf506cb6e1ac4335	gman@chromium.org <gman@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 20 00:33:17 2011 +0000	Call makeContextCurrent in places that are missing it. This is NDuca's patch but security wants it NOW for M11 update. The original patch is here http://codereview.chromium.org/7050024 TEST=ran a long time in debugger with case that crashed before this patch TBR=nduca@chromium.org	82873			svn://svn.chromium.org/chrome/trunk/src@86019 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/renderer/webgraphicscontext3d_command_buffer_impl.cc b/content/renderer/webgraphicscontext3d_command_buffer_impl.cc <newline>index c2a7f6b..ff8d96f 100644 <newline>--- a/content/renderer/webgraphicscontext3d_command_buffer_impl.cc <newline>+++ b/content/renderer/webgraphicscontext3d_command_buffer_impl.cc <newline>@@ -314,11 +314,13 @@ void* WebGraphicsContext3DCommandBufferImpl::mapBufferSubDataCHROMIUM( <newline>     WGC3Dintptr offset, <newline>     WGC3Dsizeiptr size, <newline>     WGC3Denum access) { <newline>+  makeContextCurrent(); <newline>   return glMapBufferSubDataCHROMIUM(target, offset, size, access); <newline> } <newline> void WebGraphicsContext3DCommandBufferImpl::unmapBufferSubDataCHROMIUM( <newline>     const void* mem) { <newline>+  makeContextCurrent(); <newline>   return glUnmapBufferSubDataCHROMIUM(mem); <newline> } <newline>@@ -338,6 +340,7 @@ void* WebGraphicsContext3DCommandBufferImpl::mapTexSubImage2DCHROMIUM( <newline> void WebGraphicsContext3DCommandBufferImpl::unmapTexSubImage2DCHROMIUM( <newline>     const void* mem) { <newline>+  makeContextCurrent(); <newline>   glUnmapTexSubImage2DCHROMIUM(mem); <newline> } <newline>@@ -383,16 +386,19 @@ void WebGraphicsContext3DCommandBufferImpl::setLatchCHROMIUM( <newline> void WebGraphicsContext3DCommandBufferImpl:: <newline>     rateLimitOffscreenContextCHROMIUM() { <newline>+  makeContextCurrent(); <newline>   glRateLimitOffscreenContextCHROMIUM(); <newline> } <newline> WebKit::WebString WebGraphicsContext3DCommandBufferImpl:: <newline>     getRequestableExtensionsCHROMIUM() { <newline>+  makeContextCurrent(); <newline>   return WebKit::WebString::fromUTF8(glGetRequestableExtensionsCHROMIUM()); <newline> } <newline> void WebGraphicsContext3DCommandBufferImpl::requestExtensionCHROMIUM( <newline>     const char* extension) { <newline>+  makeContextCurrent(); <newline>   glRequestExtensionCHROMIUM(extension); <newline> } <newline>@@ -400,6 +406,7 @@ void WebGraphicsContext3DCommandBufferImpl::blitFramebufferCHROMIUM( <newline>     WGC3Dint srcX0, WGC3Dint srcY0, WGC3Dint srcX1, WGC3Dint srcY1, <newline>     WGC3Dint dstX0, WGC3Dint dstY0, WGC3Dint dstX1, WGC3Dint dstY1, <newline>     WGC3Dbitfield mask, WGC3Denum filter) { <newline>+  makeContextCurrent(); <newline>   glBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, <newline>                        dstX0, dstY0, dstX1, dstY1, <newline>                        mask, filter); <newline>@@ -409,6 +416,7 @@ void WebGraphicsContext3DCommandBufferImpl:: <newline>     renderbufferStorageMultisampleCHROMIUM( <newline>         WGC3Denum target, WGC3Dsizei samples, WGC3Denum internalformat, <newline>         WGC3Dsizei width, WGC3Dsizei height) { <newline>+  makeContextCurrent(); <newline>   glRenderbufferStorageMultisampleEXT(target, samples, internalformat, <newline>                                       width, height); <newline> }
56e92d24a192805df9c096f9f550344346e714b	gman@chromium.org <gman@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 20 00:33:17 2011 +0000	Call makeContextCurrent in places that are missing it. This is NDuca's patch but security wants it NOW for M11 update. The original patch is here http://codereview.chromium.org/7050024 TEST=ran a long time in debugger with case that crashed before this patch TBR=nduca@chromium.org	82873			svn://svn.chromium.org/chrome/trunk/src@86019 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/renderer/webgraphicscontext3d_command_buffer_impl.cc b/content/renderer/webgraphicscontext3d_command_buffer_impl.cc <newline>index c2a7f6b..ff8d96f 100644 <newline>--- a/content/renderer/webgraphicscontext3d_command_buffer_impl.cc <newline>+++ b/content/renderer/webgraphicscontext3d_command_buffer_impl.cc <newline>@@ -314,11 +314,13 @@ void* WebGraphicsContext3DCommandBufferImpl::mapBufferSubDataCHROMIUM( <newline>     WGC3Dintptr offset, <newline>     WGC3Dsizeiptr size, <newline>     WGC3Denum access) { <newline>+  makeContextCurrent(); <newline>   return glMapBufferSubDataCHROMIUM(target, offset, size, access); <newline> } <newline> void WebGraphicsContext3DCommandBufferImpl::unmapBufferSubDataCHROMIUM( <newline>     const void* mem) { <newline>+  makeContextCurrent(); <newline>   return glUnmapBufferSubDataCHROMIUM(mem); <newline> } <newline>@@ -338,6 +340,7 @@ void* WebGraphicsContext3DCommandBufferImpl::mapTexSubImage2DCHROMIUM( <newline> void WebGraphicsContext3DCommandBufferImpl::unmapTexSubImage2DCHROMIUM( <newline>     const void* mem) { <newline>+  makeContextCurrent(); <newline>   glUnmapTexSubImage2DCHROMIUM(mem); <newline> } <newline>@@ -383,16 +386,19 @@ void WebGraphicsContext3DCommandBufferImpl::setLatchCHROMIUM( <newline> void WebGraphicsContext3DCommandBufferImpl:: <newline>     rateLimitOffscreenContextCHROMIUM() { <newline>+  makeContextCurrent(); <newline>   glRateLimitOffscreenContextCHROMIUM(); <newline> } <newline> WebKit::WebString WebGraphicsContext3DCommandBufferImpl:: <newline>     getRequestableExtensionsCHROMIUM() { <newline>+  makeContextCurrent(); <newline>   return WebKit::WebString::fromUTF8(glGetRequestableExtensionsCHROMIUM()); <newline> } <newline> void WebGraphicsContext3DCommandBufferImpl::requestExtensionCHROMIUM( <newline>     const char* extension) { <newline>+  makeContextCurrent(); <newline>   glRequestExtensionCHROMIUM(extension); <newline> } <newline>@@ -400,6 +406,7 @@ void WebGraphicsContext3DCommandBufferImpl::blitFramebufferCHROMIUM( <newline>     WGC3Dint srcX0, WGC3Dint srcY0, WGC3Dint srcX1, WGC3Dint srcY1, <newline>     WGC3Dint dstX0, WGC3Dint dstY0, WGC3Dint dstX1, WGC3Dint dstY1, <newline>     WGC3Dbitfield mask, WGC3Denum filter) { <newline>+  makeContextCurrent(); <newline>   glBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, <newline>                        dstX0, dstY0, dstX1, dstY1, <newline>                        mask, filter); <newline>@@ -409,6 +416,7 @@ void WebGraphicsContext3DCommandBufferImpl:: <newline>     renderbufferStorageMultisampleCHROMIUM( <newline>         WGC3Denum target, WGC3Dsizei samples, WGC3Denum internalformat, <newline>         WGC3Dsizei width, WGC3Dsizei height) { <newline>+  makeContextCurrent(); <newline>   glRenderbufferStorageMultisampleEXT(target, samples, internalformat, <newline>                                       width, height); <newline> }
309a4f1f92ae65d2d01bbbd64d085c1816dd4a3	tfarina@chromium.org <tfarina@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat May 14 01:37:50 2011 +0000	security_tests: Get rid of "using namespace sandbox;" TEST=None	82078		http://codereview.chromium.org/7015062	svn://svn.chromium.org/chrome/trunk/src@85363 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/security_tests/security_tests.cc b/chrome/test/security_tests/security_tests.cc <newline>index b42cc73..550380f 100644 <newline>--- a/chrome/test/security_tests/security_tests.cc <newline>+++ b/chrome/test/security_tests/security_tests.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2006-2008 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -11,8 +11,12 @@ <newline> #include "sandbox/tests/common/controller.h" <newline> #include "sandbox/tests/validation_tests/commands.h" <newline>+using sandbox::TestOpenKey; <newline>+using sandbox::TestOpenReadFile; <newline>+using sandbox::TestOpenWriteFile; <newline>+ <newline> #define SECURITY_CHECK(x) (*test_count)++; \ <newline>-                          if (SBOX_TEST_DENIED != x) { \ <newline>+                          if (sandbox::SBOX_TEST_DENIED != x) { \ <newline>                             return FALSE; \ <newline>                           }; <newline>@@ -25,7 +29,6 @@ BOOL APIENTRY DllMain(HMODULE module, DWORD ul_reason_for_call, <newline> // If a test fails, the return value is FALSE and test_count contains the <newline> // number of tests executed, including the failing test. <newline> BOOL __declspec(dllexport) __cdecl RunRendererTests(int *test_count) { <newline>-  using namespace sandbox; <newline>   *test_count = 0; <newline>   SECURITY_CHECK(TestOpenReadFile(L"%SystemDrive%")); <newline>   SECURITY_CHECK(TestOpenReadFile(L"%SystemRoot%")); <newline>@@ -51,7 +54,6 @@ BOOL __declspec(dllexport) __cdecl RunRendererTests(int *test_count) { <newline> // If a test fails, the return value is FALSE and test_count contains the <newline> // number of tests executed, including the failing test. <newline> BOOL __declspec(dllexport) __cdecl RunPluginTests(int *test_count) { <newline>-  using namespace sandbox; <newline>   *test_count = 0; <newline>   SECURITY_CHECK(TestOpenWriteFile(L"%SystemRoot%")); <newline>   SECURITY_CHECK(TestOpenWriteFile(L"%ProgramFiles%"));
eba320e9c5d8028df467b696f0e7f5670effc07	tfarina@chromium.org <tfarina@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat May 14 01:37:50 2011 +0000	security_tests: Get rid of "using namespace sandbox;" TEST=None	82078		http://codereview.chromium.org/7015062	svn://svn.chromium.org/chrome/trunk/src@85363 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/security_tests/security_tests.cc b/chrome/test/security_tests/security_tests.cc <newline>index b42cc73..550380f 100644 <newline>--- a/chrome/test/security_tests/security_tests.cc <newline>+++ b/chrome/test/security_tests/security_tests.cc <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2006-2008 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -11,8 +11,12 @@ <newline> #include "sandbox/tests/common/controller.h" <newline> #include "sandbox/tests/validation_tests/commands.h" <newline>+using sandbox::TestOpenKey; <newline>+using sandbox::TestOpenReadFile; <newline>+using sandbox::TestOpenWriteFile; <newline>+ <newline> #define SECURITY_CHECK(x) (*test_count)++; \ <newline>-                          if (SBOX_TEST_DENIED != x) { \ <newline>+                          if (sandbox::SBOX_TEST_DENIED != x) { \ <newline>                             return FALSE; \ <newline>                           }; <newline>@@ -25,7 +29,6 @@ BOOL APIENTRY DllMain(HMODULE module, DWORD ul_reason_for_call, <newline> // If a test fails, the return value is FALSE and test_count contains the <newline> // number of tests executed, including the failing test. <newline> BOOL __declspec(dllexport) __cdecl RunRendererTests(int *test_count) { <newline>-  using namespace sandbox; <newline>   *test_count = 0; <newline>   SECURITY_CHECK(TestOpenReadFile(L"%SystemDrive%")); <newline>   SECURITY_CHECK(TestOpenReadFile(L"%SystemRoot%")); <newline>@@ -51,7 +54,6 @@ BOOL __declspec(dllexport) __cdecl RunRendererTests(int *test_count) { <newline> // If a test fails, the return value is FALSE and test_count contains the <newline> // number of tests executed, including the failing test. <newline> BOOL __declspec(dllexport) __cdecl RunPluginTests(int *test_count) { <newline>-  using namespace sandbox; <newline>   *test_count = 0; <newline>   SECURITY_CHECK(TestOpenWriteFile(L"%SystemRoot%")); <newline>   SECURITY_CHECK(TestOpenWriteFile(L"%ProgramFiles%"));
11abc7413621a16fb014c65ea67d27bd366921f	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 13 21:11:39 2011 +0000	Pre-requisites needed before applying content-security-policy to the HTML options page.  CSP is a second line of defense in case someone introduces an XSS in one of these pages. The changes to jstemplate_builder are to allow the template scripts to be served as resources where possible, and to return JS as well as HTML in the one case where the script is to be dynamically generated. The other changes are to combine the options javascript files into a single large file resource and to serve it from under chrome://settings. This satisfies the "no inline" rule and options.html can script src="" it. I did put one file into the /shared directory, since it is a companion to a piece of pre-existing template code alread in that directory. TEST=chrome://settings page loads properly.			http://codereview.chromium.org/7003007	svn://svn.chromium.org/chrome/trunk/src@85322 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/tools/grit/resource_ids b/tools/grit/resource_ids <newline>index 0b4c334..2ef240a 100644 <newline>--- a/tools/grit/resource_ids <newline>+++ b/tools/grit/resource_ids <newline>@@ -142,4 +142,7 @@ <newline>   "chrome/browser/debugger/frontend/devtools_frontend_resources.grd": { <newline>     "includes": [21500], <newline>   }, <newline>+  "chrome/browser/resources/options_resources.grd": { <newline>+    "includes": [22000], <newline>+  }, <newline> }
32b830757257a532e873f598c5ef0f692d8fa61	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 13 21:11:39 2011 +0000	Pre-requisites needed before applying content-security-policy to the HTML options page.  CSP is a second line of defense in case someone introduces an XSS in one of these pages. The changes to jstemplate_builder are to allow the template scripts to be served as resources where possible, and to return JS as well as HTML in the one case where the script is to be dynamically generated. The other changes are to combine the options javascript files into a single large file resource and to serve it from under chrome://settings. This satisfies the "no inline" rule and options.html can script src="" it. I did put one file into the /shared directory, since it is a companion to a piece of pre-existing template code alread in that directory. TEST=chrome://settings page loads properly.			http://codereview.chromium.org/7003007	svn://svn.chromium.org/chrome/trunk/src@85322 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/tools/grit/resource_ids b/tools/grit/resource_ids <newline>index 0b4c334..2ef240a 100644 <newline>--- a/tools/grit/resource_ids <newline>+++ b/tools/grit/resource_ids <newline>@@ -142,4 +142,7 @@ <newline>   "chrome/browser/debugger/frontend/devtools_frontend_resources.grd": { <newline>     "includes": [21500], <newline>   }, <newline>+  "chrome/browser/resources/options_resources.grd": { <newline>+    "includes": [22000], <newline>+  }, <newline> }
6bf65190096bf85d921b7073825967811a35447	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 5 15:00:13 2011 +0000	net: add cloudsecurityalliance.org to HSTS preloaded list. Requested by Kurt Seifried. TEST=none	none			svn://svn.chromium.org/chrome/trunk/src@84248 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state_unittest.cc b/net/base/transport_security_state_unittest.cc <newline>index e63f4a2..70d64bd 100644 <newline>--- a/net/base/transport_security_state_unittest.cc <newline>+++ b/net/base/transport_security_state_unittest.cc <newline>@@ -564,6 +564,13 @@ TEST_F(TransportSecurityStateTest, Preloaded) { <newline>   EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "stripe.com", false)); <newline>   EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "foo.stripe.com", false)); <newline>+ <newline>+  EXPECT_TRUE(state->IsEnabledForHost(&domain_state, <newline>+                                      "cloudsecurityalliance.org", <newline>+                                      false)); <newline>+  EXPECT_TRUE(state->IsEnabledForHost(&domain_state, <newline>+                                      "foo.cloudsecurityalliance.org", <newline>+                                      false)); <newline> } <newline> TEST_F(TransportSecurityStateTest, LongNames) {
6ad78043898b5b82054055e3ee016d7fba6b9ef	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 5 15:00:13 2011 +0000	net: add cloudsecurityalliance.org to HSTS preloaded list. Requested by Kurt Seifried. TEST=none	none			svn://svn.chromium.org/chrome/trunk/src@84248 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state_unittest.cc b/net/base/transport_security_state_unittest.cc <newline>index e63f4a2..70d64bd 100644 <newline>--- a/net/base/transport_security_state_unittest.cc <newline>+++ b/net/base/transport_security_state_unittest.cc <newline>@@ -564,6 +564,13 @@ TEST_F(TransportSecurityStateTest, Preloaded) { <newline>   EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "stripe.com", false)); <newline>   EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "foo.stripe.com", false)); <newline>+ <newline>+  EXPECT_TRUE(state->IsEnabledForHost(&domain_state, <newline>+                                      "cloudsecurityalliance.org", <newline>+                                      false)); <newline>+  EXPECT_TRUE(state->IsEnabledForHost(&domain_state, <newline>+                                      "foo.cloudsecurityalliance.org", <newline>+                                      false)); <newline> } <newline> TEST_F(TransportSecurityStateTest, LongNames) {
c871536aa02850b893017468db1e2ba29e8a36c	dmichael@chromium.org <dmichael@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue May 3 19:58:38 2011 +0000	Don't show the security infobar for --enable-nacl, which is in about:flags TEST=start chrome with '--enable-nacl', or turn it on in about:flags and restart.  Confirm that _no_ infobar appears saying 'You are using an unsupported command-line flag: --enable-nacl. Stability and security will suffer.'.	77590		http://codereview.chromium.org/6913029	svn://svn.chromium.org/chrome/trunk/src@83945 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/browser_init.cc b/chrome/browser/ui/browser_init.cc <newline>index 9334a59..86bb2ec 100644 <newline>--- a/chrome/browser/ui/browser_init.cc <newline>+++ b/chrome/browser/ui/browser_init.cc <newline>@@ -1060,9 +1060,6 @@ void BrowserInit::LaunchWithProfile::AddBadFlagsInfoBarIfNecessary( <newline>     switches::kSingleProcess, <newline>     switches::kNoSandbox, <newline>     switches::kInProcessWebGL, <newline>-    // These are scary features for developers that shouldn't be turned on <newline>-    // persistently. <newline>-    switches::kEnableNaCl, <newline>     NULL <newline>   };
6c2398182c6d702c5edbc993942ff294231ab15	dmichael@chromium.org <dmichael@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue May 3 19:58:38 2011 +0000	Don't show the security infobar for --enable-nacl, which is in about:flags TEST=start chrome with '--enable-nacl', or turn it on in about:flags and restart.  Confirm that _no_ infobar appears saying 'You are using an unsupported command-line flag: --enable-nacl. Stability and security will suffer.'.	77590		http://codereview.chromium.org/6913029	svn://svn.chromium.org/chrome/trunk/src@83945 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/browser_init.cc b/chrome/browser/ui/browser_init.cc <newline>index 9334a59..86bb2ec 100644 <newline>--- a/chrome/browser/ui/browser_init.cc <newline>+++ b/chrome/browser/ui/browser_init.cc <newline>@@ -1060,9 +1060,6 @@ void BrowserInit::LaunchWithProfile::AddBadFlagsInfoBarIfNecessary( <newline>     switches::kSingleProcess, <newline>     switches::kNoSandbox, <newline>     switches::kInProcessWebGL, <newline>-    // These are scary features for developers that shouldn't be turned on <newline>-    // persistently. <newline>-    switches::kEnableNaCl, <newline>     NULL <newline>   };
9fecd82d7887973f7b8ef32b3e0e8765cacc4a3	thakis@chromium.org <thakis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Apr 29 23:47:45 2011 +0000	Revert 83569 - Move chrome/third_party/mozilla_security_manager to third_party. All third_party libraries should be directly in third_party, not scattered throughout the tree. Note that net/third_party contains a folder of the same name, I will move files in there into third_party/mozilla_security_manager later. TEST=none TBR=thakis@chromium.org	80916		http://codereview.chromium.org/6901139	svn://svn.chromium.org/chrome/trunk/src@83627 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/mozilla_security_manager/nsUsageArrayHelper.h b/third_party/mozilla_security_manager/nsUsageArrayHelper.h <newline>deleted file mode 100644 <newline>index 31ba550..0000000 <newline>--- a/third_party/mozilla_security_manager/nsUsageArrayHelper.h <newline>+++ /dev/null <newline>@@ -1,53 +0,0 @@ <newline>-/* ***** BEGIN LICENSE BLOCK ***** <newline>- * Version: MPL 1.1/GPL 2.0/LGPL 2.1 <newline>- * <newline>- * The contents of this file are subject to the Mozilla Public License Version <newline>- * 1.1 (the "License"); you may not use this file except in compliance with <newline>- * the License. You may obtain a copy of the License at <newline>- * http://www.mozilla.org/MPL/ <newline>- * <newline>- * Software distributed under the License is distributed on an "AS IS" basis, <newline>- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License <newline>- * for the specific language governing rights and limitations under the <newline>- * License. <newline>- * <newline>- * The Original Code is the Netscape security libraries. <newline>- * <newline>- * The Initial Developer of the Original Code is <newline>- * Netscape Communications Corporation. <newline>- * Portions created by the Initial Developer are Copyright (C) 2000 <newline>- * the Initial Developer. All Rights Reserved. <newline>- * <newline>- * Contributor(s): <newline>- *  John Gardiner Myers <jgmyers@speakeasy.net> <newline>- * <newline>- * Alternatively, the contents of this file may be used under the terms of <newline>- * either the GNU General Public License Version 2 or later (the "GPL"), or <newline>- * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"), <newline>- * in which case the provisions of the GPL or the LGPL are applicable instead <newline>- * of those above. If you wish to allow use of your version of this file only <newline>- * under the terms of either the GPL or the LGPL, and not to allow others to <newline>- * use your version of this file under the terms of the MPL, indicate your <newline>- * decision by deleting the provisions above and replace them with the notice <newline>- * and other provisions required by the GPL or the LGPL. If you do not delete <newline>- * the provisions above, a recipient may use your version of this file under <newline>- * the terms of any one of the MPL, the GPL or the LGPL. <newline>- * <newline>- * ***** END LICENSE BLOCK ***** */ <newline>- <newline>-#ifndef CHROME_THIRD_PARTY_MOZILLA_SECURITY_MANAGER_NSUSAGEARRAYHELPER_H_ <newline>-#define CHROME_THIRD_PARTY_MOZILLA_SECURITY_MANAGER_NSUSAGEARRAYHELPER_H_ <newline>- <newline>-#include <cert.h> <newline>- <newline>-#include <string> <newline>-#include <vector> <newline>- <newline>-namespace mozilla_security_manager { <newline>- <newline>-// Based on nsUsageArrayHelper::GetUsagesArray. <newline>-void GetCertUsageStrings(CERTCertificate* cert, std::vector<std::string>* out); <newline>- <newline>-}  // namespace mozilla_security_manager <newline>- <newline>-#endif  // CHROME_THIRD_PARTY_MOZILLA_SECURITY_MANAGER_NSUSAGEARRAYHELPER_H_
00bb60280152445092e6c167a65d708f1cd40be	thakis@chromium.org <thakis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Apr 29 23:47:45 2011 +0000	Revert 83569 - Move chrome/third_party/mozilla_security_manager to third_party. All third_party libraries should be directly in third_party, not scattered throughout the tree. Note that net/third_party contains a folder of the same name, I will move files in there into third_party/mozilla_security_manager later. TEST=none TBR=thakis@chromium.org	80916		http://codereview.chromium.org/6901139	svn://svn.chromium.org/chrome/trunk/src@83627 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/mozilla_security_manager/nsUsageArrayHelper.h b/third_party/mozilla_security_manager/nsUsageArrayHelper.h <newline>deleted file mode 100644 <newline>index 31ba550..0000000 <newline>--- a/third_party/mozilla_security_manager/nsUsageArrayHelper.h <newline>+++ /dev/null <newline>@@ -1,53 +0,0 @@ <newline>-/* ***** BEGIN LICENSE BLOCK ***** <newline>- * Version: MPL 1.1/GPL 2.0/LGPL 2.1 <newline>- * <newline>- * The contents of this file are subject to the Mozilla Public License Version <newline>- * 1.1 (the "License"); you may not use this file except in compliance with <newline>- * the License. You may obtain a copy of the License at <newline>- * http://www.mozilla.org/MPL/ <newline>- * <newline>- * Software distributed under the License is distributed on an "AS IS" basis, <newline>- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License <newline>- * for the specific language governing rights and limitations under the <newline>- * License. <newline>- * <newline>- * The Original Code is the Netscape security libraries. <newline>- * <newline>- * The Initial Developer of the Original Code is <newline>- * Netscape Communications Corporation. <newline>- * Portions created by the Initial Developer are Copyright (C) 2000 <newline>- * the Initial Developer. All Rights Reserved. <newline>- * <newline>- * Contributor(s): <newline>- *  John Gardiner Myers <jgmyers@speakeasy.net> <newline>- * <newline>- * Alternatively, the contents of this file may be used under the terms of <newline>- * either the GNU General Public License Version 2 or later (the "GPL"), or <newline>- * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"), <newline>- * in which case the provisions of the GPL or the LGPL are applicable instead <newline>- * of those above. If you wish to allow use of your version of this file only <newline>- * under the terms of either the GPL or the LGPL, and not to allow others to <newline>- * use your version of this file under the terms of the MPL, indicate your <newline>- * decision by deleting the provisions above and replace them with the notice <newline>- * and other provisions required by the GPL or the LGPL. If you do not delete <newline>- * the provisions above, a recipient may use your version of this file under <newline>- * the terms of any one of the MPL, the GPL or the LGPL. <newline>- * <newline>- * ***** END LICENSE BLOCK ***** */ <newline>- <newline>-#ifndef CHROME_THIRD_PARTY_MOZILLA_SECURITY_MANAGER_NSUSAGEARRAYHELPER_H_ <newline>-#define CHROME_THIRD_PARTY_MOZILLA_SECURITY_MANAGER_NSUSAGEARRAYHELPER_H_ <newline>- <newline>-#include <cert.h> <newline>- <newline>-#include <string> <newline>-#include <vector> <newline>- <newline>-namespace mozilla_security_manager { <newline>- <newline>-// Based on nsUsageArrayHelper::GetUsagesArray. <newline>-void GetCertUsageStrings(CERTCertificate* cert, std::vector<std::string>* out); <newline>- <newline>-}  // namespace mozilla_security_manager <newline>- <newline>-#endif  // CHROME_THIRD_PARTY_MOZILLA_SECURITY_MANAGER_NSUSAGEARRAYHELPER_H_
d3aca22eb76fc646dbd673ad91b368612c46339	thakis@chromium.org <thakis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Apr 29 19:19:00 2011 +0000	Move chrome/third_party/mozilla_security_manager to third_party. All third_party libraries should be directly in third_party, not scattered throughout the tree. Note that net/third_party contains a folder of the same name, I will move files in there into third_party/mozilla_security_manager later. TEST=none	80916		http://codereview.chromium.org/6902141	svn://svn.chromium.org/chrome/trunk/src@83569 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/mozilla_security_manager/nsUsageArrayHelper.h b/third_party/mozilla_security_manager/nsUsageArrayHelper.h <newline>new file mode 100644 <newline>index 0000000..31ba550 <newline>--- /dev/null <newline>+++ b/third_party/mozilla_security_manager/nsUsageArrayHelper.h <newline>@@ -0,0 +1,53 @@ <newline>+/* ***** BEGIN LICENSE BLOCK ***** <newline>+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1 <newline>+ * <newline>+ * The contents of this file are subject to the Mozilla Public License Version <newline>+ * 1.1 (the "License"); you may not use this file except in compliance with <newline>+ * the License. You may obtain a copy of the License at <newline>+ * http://www.mozilla.org/MPL/ <newline>+ * <newline>+ * Software distributed under the License is distributed on an "AS IS" basis, <newline>+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License <newline>+ * for the specific language governing rights and limitations under the <newline>+ * License. <newline>+ * <newline>+ * The Original Code is the Netscape security libraries. <newline>+ * <newline>+ * The Initial Developer of the Original Code is <newline>+ * Netscape Communications Corporation. <newline>+ * Portions created by the Initial Developer are Copyright (C) 2000 <newline>+ * the Initial Developer. All Rights Reserved. <newline>+ * <newline>+ * Contributor(s): <newline>+ *  John Gardiner Myers <jgmyers@speakeasy.net> <newline>+ * <newline>+ * Alternatively, the contents of this file may be used under the terms of <newline>+ * either the GNU General Public License Version 2 or later (the "GPL"), or <newline>+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"), <newline>+ * in which case the provisions of the GPL or the LGPL are applicable instead <newline>+ * of those above. If you wish to allow use of your version of this file only <newline>+ * under the terms of either the GPL or the LGPL, and not to allow others to <newline>+ * use your version of this file under the terms of the MPL, indicate your <newline>+ * decision by deleting the provisions above and replace them with the notice <newline>+ * and other provisions required by the GPL or the LGPL. If you do not delete <newline>+ * the provisions above, a recipient may use your version of this file under <newline>+ * the terms of any one of the MPL, the GPL or the LGPL. <newline>+ * <newline>+ * ***** END LICENSE BLOCK ***** */ <newline>+ <newline>+#ifndef CHROME_THIRD_PARTY_MOZILLA_SECURITY_MANAGER_NSUSAGEARRAYHELPER_H_ <newline>+#define CHROME_THIRD_PARTY_MOZILLA_SECURITY_MANAGER_NSUSAGEARRAYHELPER_H_ <newline>+ <newline>+#include <cert.h> <newline>+ <newline>+#include <string> <newline>+#include <vector> <newline>+ <newline>+namespace mozilla_security_manager { <newline>+ <newline>+// Based on nsUsageArrayHelper::GetUsagesArray. <newline>+void GetCertUsageStrings(CERTCertificate* cert, std::vector<std::string>* out); <newline>+ <newline>+}  // namespace mozilla_security_manager <newline>+ <newline>+#endif  // CHROME_THIRD_PARTY_MOZILLA_SECURITY_MANAGER_NSUSAGEARRAYHELPER_H_
b5648911bcde7d6dddc0fbef236257ea14b58af	thakis@chromium.org <thakis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Apr 29 19:19:00 2011 +0000	Move chrome/third_party/mozilla_security_manager to third_party. All third_party libraries should be directly in third_party, not scattered throughout the tree. Note that net/third_party contains a folder of the same name, I will move files in there into third_party/mozilla_security_manager later. TEST=none	80916		http://codereview.chromium.org/6902141	svn://svn.chromium.org/chrome/trunk/src@83569 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/mozilla_security_manager/nsUsageArrayHelper.h b/third_party/mozilla_security_manager/nsUsageArrayHelper.h <newline>new file mode 100644 <newline>index 0000000..31ba550 <newline>--- /dev/null <newline>+++ b/third_party/mozilla_security_manager/nsUsageArrayHelper.h <newline>@@ -0,0 +1,53 @@ <newline>+/* ***** BEGIN LICENSE BLOCK ***** <newline>+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1 <newline>+ * <newline>+ * The contents of this file are subject to the Mozilla Public License Version <newline>+ * 1.1 (the "License"); you may not use this file except in compliance with <newline>+ * the License. You may obtain a copy of the License at <newline>+ * http://www.mozilla.org/MPL/ <newline>+ * <newline>+ * Software distributed under the License is distributed on an "AS IS" basis, <newline>+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License <newline>+ * for the specific language governing rights and limitations under the <newline>+ * License. <newline>+ * <newline>+ * The Original Code is the Netscape security libraries. <newline>+ * <newline>+ * The Initial Developer of the Original Code is <newline>+ * Netscape Communications Corporation. <newline>+ * Portions created by the Initial Developer are Copyright (C) 2000 <newline>+ * the Initial Developer. All Rights Reserved. <newline>+ * <newline>+ * Contributor(s): <newline>+ *  John Gardiner Myers <jgmyers@speakeasy.net> <newline>+ * <newline>+ * Alternatively, the contents of this file may be used under the terms of <newline>+ * either the GNU General Public License Version 2 or later (the "GPL"), or <newline>+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"), <newline>+ * in which case the provisions of the GPL or the LGPL are applicable instead <newline>+ * of those above. If you wish to allow use of your version of this file only <newline>+ * under the terms of either the GPL or the LGPL, and not to allow others to <newline>+ * use your version of this file under the terms of the MPL, indicate your <newline>+ * decision by deleting the provisions above and replace them with the notice <newline>+ * and other provisions required by the GPL or the LGPL. If you do not delete <newline>+ * the provisions above, a recipient may use your version of this file under <newline>+ * the terms of any one of the MPL, the GPL or the LGPL. <newline>+ * <newline>+ * ***** END LICENSE BLOCK ***** */ <newline>+ <newline>+#ifndef CHROME_THIRD_PARTY_MOZILLA_SECURITY_MANAGER_NSUSAGEARRAYHELPER_H_ <newline>+#define CHROME_THIRD_PARTY_MOZILLA_SECURITY_MANAGER_NSUSAGEARRAYHELPER_H_ <newline>+ <newline>+#include <cert.h> <newline>+ <newline>+#include <string> <newline>+#include <vector> <newline>+ <newline>+namespace mozilla_security_manager { <newline>+ <newline>+// Based on nsUsageArrayHelper::GetUsagesArray. <newline>+void GetCertUsageStrings(CERTCertificate* cert, std::vector<std::string>* out); <newline>+ <newline>+}  // namespace mozilla_security_manager <newline>+ <newline>+#endif  // CHROME_THIRD_PARTY_MOZILLA_SECURITY_MANAGER_NSUSAGEARRAYHELPER_H_
dd4435263bd2e9b185b1bb63c6729086d68a33a	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Apr 25 21:09:38 2011 +0000	Add support for built-in certificate pins, and add a pin list suitable for Google properties, in discussion with the central security team. Use said pin list for an initial sample domain. Also factor out a couple of functions to eliminate duplicated code. TEST=TransportSecurityStateTest.BuiltinCertPins			http://codereview.chromium.org/6894026	svn://svn.chromium.org/chrome/trunk/src@82923 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state_unittest.cc b/net/base/transport_security_state_unittest.cc <newline>index 30377a5..10b59fb 100644 <newline>--- a/net/base/transport_security_state_unittest.cc <newline>+++ b/net/base/transport_security_state_unittest.cc <newline>@@ -553,4 +553,17 @@ TEST_F(TransportSecurityStateTest, PublicKeyHashes) { <newline>                           sizeof(hash.data))); <newline> } <newline>+TEST_F(TransportSecurityStateTest, BuiltinCertPins) { <newline>+  scoped_refptr<TransportSecurityState> state( <newline>+      new TransportSecurityState); <newline>+ <newline>+  TransportSecurityState::DomainState domain_state; <newline>+  EXPECT_TRUE(state->IsEnabledForHost(&domain_state, <newline>+                                      "chrome.google.com", <newline>+                                      true)); <newline>+  std::vector<SHA1Fingerprint> hashes; <newline>+  // This essential checks that a built-in list does exist. <newline>+  EXPECT_FALSE(domain_state.IsChainOfPublicKeysPermitted(hashes)); <newline>+} <newline>+ <newline> }  // namespace net
38d6a34f7b50e7c9beb588a2a4b34adb03dcf15	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Apr 25 21:09:38 2011 +0000	Add support for built-in certificate pins, and add a pin list suitable for Google properties, in discussion with the central security team. Use said pin list for an initial sample domain. Also factor out a couple of functions to eliminate duplicated code. TEST=TransportSecurityStateTest.BuiltinCertPins			http://codereview.chromium.org/6894026	svn://svn.chromium.org/chrome/trunk/src@82923 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state_unittest.cc b/net/base/transport_security_state_unittest.cc <newline>index 30377a5..10b59fb 100644 <newline>--- a/net/base/transport_security_state_unittest.cc <newline>+++ b/net/base/transport_security_state_unittest.cc <newline>@@ -553,4 +553,17 @@ TEST_F(TransportSecurityStateTest, PublicKeyHashes) { <newline>                           sizeof(hash.data))); <newline> } <newline>+TEST_F(TransportSecurityStateTest, BuiltinCertPins) { <newline>+  scoped_refptr<TransportSecurityState> state( <newline>+      new TransportSecurityState); <newline>+ <newline>+  TransportSecurityState::DomainState domain_state; <newline>+  EXPECT_TRUE(state->IsEnabledForHost(&domain_state, <newline>+                                      "chrome.google.com", <newline>+                                      true)); <newline>+  std::vector<SHA1Fingerprint> hashes; <newline>+  // This essential checks that a built-in list does exist. <newline>+  EXPECT_FALSE(domain_state.IsChainOfPublicKeysPermitted(hashes)); <newline>+} <newline>+ <newline> }  // namespace net
2674e1f2c3c5b74d0d236cf8f98deaf5140e5e0	gene@chromium.org <gene@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Apr 15 22:50:06 2011 +0000	Added functionality to use "SaveAs..." from PDF plugin. It is exactly the same experience as user right-click and select "SaveAs..." from pop-up menu. No disk access allowed for plugin. DIscussed it with Chris Evans and he is ok with this solution from the security stand point. Also added PDF resources for new UI. TEST=none, will send PDF cl separately.	56072,75235		http://codereview.chromium.org/6871020	svn://svn.chromium.org/chrome/trunk/src@81822 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/ppapi/ppb_pdf_impl.cc b/webkit/plugins/ppapi/ppb_pdf_impl.cc <newline>index f26cc18..9316e3a 100644 <newline>--- a/webkit/plugins/ppapi/ppb_pdf_impl.cc <newline>+++ b/webkit/plugins/ppapi/ppb_pdf_impl.cc <newline>@@ -55,9 +55,9 @@ struct ResourceImageInfo { <newline> }; <newline> static const ResourceImageInfo kResourceImageMap[] = { <newline>-  { PP_RESOURCEIMAGE_PDF_BUTTON_FTH, IDR_PDF_BUTTON_FTH }, <newline>-  { PP_RESOURCEIMAGE_PDF_BUTTON_FTH_HOVER, IDR_PDF_BUTTON_FTH_HOVER }, <newline>-  { PP_RESOURCEIMAGE_PDF_BUTTON_FTH_PRESSED, IDR_PDF_BUTTON_FTH_PRESSED }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_FTP, IDR_PDF_BUTTON_FTP }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_FTP_HOVER, IDR_PDF_BUTTON_FTP_HOVER }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_FTP_PRESSED, IDR_PDF_BUTTON_FTP_PRESSED }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_FTW, IDR_PDF_BUTTON_FTW }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_FTW_HOVER, IDR_PDF_BUTTON_FTW_HOVER }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_FTW_PRESSED, IDR_PDF_BUTTON_FTW_PRESSED }, <newline>@@ -68,6 +68,12 @@ static const ResourceImageInfo kResourceImageMap[] = { <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMOUT_HOVER, IDR_PDF_BUTTON_ZOOMOUT_HOVER }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMOUT_PRESSED, <newline>       IDR_PDF_BUTTON_ZOOMOUT_PRESSED }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_SAVE, IDR_PDF_BUTTON_SAVE }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_SAVE_HOVER, IDR_PDF_BUTTON_SAVE_HOVER }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_SAVE_PRESSED, IDR_PDF_BUTTON_SAVE_PRESSED }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_PRINT, IDR_PDF_BUTTON_PRINT }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_PRINT_HOVER, IDR_PDF_BUTTON_PRINT_HOVER }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_PRINT_PRESSED, IDR_PDF_BUTTON_PRINT_PRESSED }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_0, IDR_PDF_THUMBNAIL_0 }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_1, IDR_PDF_THUMBNAIL_1 }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_2, IDR_PDF_THUMBNAIL_2 }, <newline>@@ -294,6 +300,13 @@ void HasUnsupportedFeature(PP_Instance instance_id) { <newline>   instance->delegate()->HasUnsupportedFeature(); <newline> } <newline>+void SaveAs(PP_Instance instance_id) { <newline>+  PluginInstance* instance = ResourceTracker::Get()->GetInstance(instance_id); <newline>+  if (!instance) <newline>+    return; <newline>+  instance->delegate()->SaveAs(); <newline>+} <newline>+ <newline> const PPB_PDF ppb_pdf = { <newline>   &GetLocalizedString, <newline>   &GetResourceImage, <newline>@@ -305,7 +318,8 @@ const PPB_PDF ppb_pdf = { <newline>   &SetContentRestriction, <newline>   &HistogramPDFPageCount, <newline>   &UserMetricsRecordAction, <newline>-  &HasUnsupportedFeature <newline>+  &HasUnsupportedFeature, <newline>+  &SaveAs <newline> }; <newline> }  // namespace
16c369184095d1d3b932b264a622c796b4ba241	gene@chromium.org <gene@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Apr 15 22:50:06 2011 +0000	Added functionality to use "SaveAs..." from PDF plugin. It is exactly the same experience as user right-click and select "SaveAs..." from pop-up menu. No disk access allowed for plugin. DIscussed it with Chris Evans and he is ok with this solution from the security stand point. Also added PDF resources for new UI. TEST=none, will send PDF cl separately.	56072,75235		http://codereview.chromium.org/6871020	svn://svn.chromium.org/chrome/trunk/src@81822 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/ppapi/ppb_pdf_impl.cc b/webkit/plugins/ppapi/ppb_pdf_impl.cc <newline>index f26cc18..9316e3a 100644 <newline>--- a/webkit/plugins/ppapi/ppb_pdf_impl.cc <newline>+++ b/webkit/plugins/ppapi/ppb_pdf_impl.cc <newline>@@ -55,9 +55,9 @@ struct ResourceImageInfo { <newline> }; <newline> static const ResourceImageInfo kResourceImageMap[] = { <newline>-  { PP_RESOURCEIMAGE_PDF_BUTTON_FTH, IDR_PDF_BUTTON_FTH }, <newline>-  { PP_RESOURCEIMAGE_PDF_BUTTON_FTH_HOVER, IDR_PDF_BUTTON_FTH_HOVER }, <newline>-  { PP_RESOURCEIMAGE_PDF_BUTTON_FTH_PRESSED, IDR_PDF_BUTTON_FTH_PRESSED }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_FTP, IDR_PDF_BUTTON_FTP }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_FTP_HOVER, IDR_PDF_BUTTON_FTP_HOVER }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_FTP_PRESSED, IDR_PDF_BUTTON_FTP_PRESSED }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_FTW, IDR_PDF_BUTTON_FTW }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_FTW_HOVER, IDR_PDF_BUTTON_FTW_HOVER }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_FTW_PRESSED, IDR_PDF_BUTTON_FTW_PRESSED }, <newline>@@ -68,6 +68,12 @@ static const ResourceImageInfo kResourceImageMap[] = { <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMOUT_HOVER, IDR_PDF_BUTTON_ZOOMOUT_HOVER }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMOUT_PRESSED, <newline>       IDR_PDF_BUTTON_ZOOMOUT_PRESSED }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_SAVE, IDR_PDF_BUTTON_SAVE }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_SAVE_HOVER, IDR_PDF_BUTTON_SAVE_HOVER }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_SAVE_PRESSED, IDR_PDF_BUTTON_SAVE_PRESSED }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_PRINT, IDR_PDF_BUTTON_PRINT }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_PRINT_HOVER, IDR_PDF_BUTTON_PRINT_HOVER }, <newline>+  { PP_RESOURCEIMAGE_PDF_BUTTON_PRINT_PRESSED, IDR_PDF_BUTTON_PRINT_PRESSED }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_0, IDR_PDF_THUMBNAIL_0 }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_1, IDR_PDF_THUMBNAIL_1 }, <newline>   { PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_2, IDR_PDF_THUMBNAIL_2 }, <newline>@@ -294,6 +300,13 @@ void HasUnsupportedFeature(PP_Instance instance_id) { <newline>   instance->delegate()->HasUnsupportedFeature(); <newline> } <newline>+void SaveAs(PP_Instance instance_id) { <newline>+  PluginInstance* instance = ResourceTracker::Get()->GetInstance(instance_id); <newline>+  if (!instance) <newline>+    return; <newline>+  instance->delegate()->SaveAs(); <newline>+} <newline>+ <newline> const PPB_PDF ppb_pdf = { <newline>   &GetLocalizedString, <newline>   &GetResourceImage, <newline>@@ -305,7 +318,8 @@ const PPB_PDF ppb_pdf = { <newline>   &SetContentRestriction, <newline>   &HistogramPDFPageCount, <newline>   &UserMetricsRecordAction, <newline>-  &HasUnsupportedFeature <newline>+  &HasUnsupportedFeature, <newline>+  &SaveAs <newline> }; <newline> }  // namespace
3fb4515f64f953447833abe7a05bae42d15eb9a	bbudge@chromium.org <bbudge@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 14 16:52:52 2011 +0000	Modify the webkit::ppapi::URLLoader to use the underlying AssociatedURLLoader for security checks, and convert URLRequest properties into the configuration for the AssociatedURLLoader. This Issue depends on http://codereview.chromium.org/6755015/ TEST=ppapi_tests	47354		http://codereview.chromium.org/6765040	svn://svn.chromium.org/chrome/trunk/src@81605 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/ppapi/ppb_url_loader_impl.h b/webkit/plugins/ppapi/ppb_url_loader_impl.h <newline>index 6456900..c46bbb6 100644 <newline>--- a/webkit/plugins/ppapi/ppb_url_loader_impl.h <newline>+++ b/webkit/plugins/ppapi/ppb_url_loader_impl.h <newline>@@ -105,8 +105,6 @@ class PPB_URLLoader_Impl : public Resource, public WebKit::WebURLLoaderClient { <newline>   // Converts a WebURLResponse to a URLResponseInfo and saves it. <newline>   void SaveResponse(const WebKit::WebURLResponse& response); <newline>-  int32_t CanRequest(const WebKit::WebFrame* frame, const WebKit::WebURL& url); <newline>- <newline>   // Calls the status_callback_ (if any) with the current upload and download <newline>   // progress. Call this function if you update any of these values to <newline>   // synchronize an out-of-process plugin's state.
b8890e9cee0c997257873e9c978eead7d028568	bbudge@chromium.org <bbudge@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 14 16:52:52 2011 +0000	Modify the webkit::ppapi::URLLoader to use the underlying AssociatedURLLoader for security checks, and convert URLRequest properties into the configuration for the AssociatedURLLoader. This Issue depends on http://codereview.chromium.org/6755015/ TEST=ppapi_tests	47354		http://codereview.chromium.org/6765040	svn://svn.chromium.org/chrome/trunk/src@81605 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/ppapi/ppb_url_loader_impl.h b/webkit/plugins/ppapi/ppb_url_loader_impl.h <newline>index 6456900..c46bbb6 100644 <newline>--- a/webkit/plugins/ppapi/ppb_url_loader_impl.h <newline>+++ b/webkit/plugins/ppapi/ppb_url_loader_impl.h <newline>@@ -105,8 +105,6 @@ class PPB_URLLoader_Impl : public Resource, public WebKit::WebURLLoaderClient { <newline>   // Converts a WebURLResponse to a URLResponseInfo and saves it. <newline>   void SaveResponse(const WebKit::WebURLResponse& response); <newline>-  int32_t CanRequest(const WebKit::WebFrame* frame, const WebKit::WebURL& url); <newline>- <newline>   // Calls the status_callback_ (if any) with the current upload and download <newline>   // progress. Call this function if you update any of these values to <newline>   // synchronize an out-of-process plugin's state.
45b359f2f09995881ab7eab52b5fe08bd1342d4	nkostylev@chromium.org <nkostylev@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Apr 12 06:29:37 2011 +0000	[cros] Adding mobile connection "security" tab (change RequirePin pref/change PIN, GSM only). Hide "Plan" tab for GSM networks. Ask user to Enter PIN when changing RequirePin pref (reusing SIM unlock dialog). Add strings for 3G data notification. TEST=manual	chromium-os:12007		http://codereview.chromium.org/6693065	svn://svn.chromium.org/chrome/trunk/src@81222 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/common/notification_type.h b/content/common/notification_type.h <newline>index c704567..6201e7d 100644 <newline>--- a/content/common/notification_type.h <newline>+++ b/content/common/notification_type.h <newline>@@ -1292,6 +1292,13 @@ class NotificationType { <newline>     // changed. The source is the CrosSettings and the details a std::string of <newline>     // the changed setting. <newline>     SYSTEM_SETTING_CHANGED, <newline>+ <newline>+    // Sent by SIM unlock dialog when it has finished with the process of <newline>+    // updating RequirePin setting. RequirePin setting might have been changed <newline>+    // to a new value or update might have been canceled. <newline>+    // In either case notification is sent and details contain a bool <newline>+    // that represents current value. <newline>+    REQUIRE_PIN_SETTING_CHANGE_ENDED, <newline> #endif <newline>     // Sent before the repost form warning is brought up.
ee9b1db807ffc75de7f6071ad6c622e843a54a9	nkostylev@chromium.org <nkostylev@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Apr 12 06:29:37 2011 +0000	[cros] Adding mobile connection "security" tab (change RequirePin pref/change PIN, GSM only). Hide "Plan" tab for GSM networks. Ask user to Enter PIN when changing RequirePin pref (reusing SIM unlock dialog). Add strings for 3G data notification. TEST=manual	chromium-os:12007		http://codereview.chromium.org/6693065	svn://svn.chromium.org/chrome/trunk/src@81222 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/common/notification_type.h b/content/common/notification_type.h <newline>index c704567..6201e7d 100644 <newline>--- a/content/common/notification_type.h <newline>+++ b/content/common/notification_type.h <newline>@@ -1292,6 +1292,13 @@ class NotificationType { <newline>     // changed. The source is the CrosSettings and the details a std::string of <newline>     // the changed setting. <newline>     SYSTEM_SETTING_CHANGED, <newline>+ <newline>+    // Sent by SIM unlock dialog when it has finished with the process of <newline>+    // updating RequirePin setting. RequirePin setting might have been changed <newline>+    // to a new value or update might have been canceled. <newline>+    // In either case notification is sent and details contain a bool <newline>+    // that represents current value. <newline>+    REQUIRE_PIN_SETTING_CHANGE_ENDED, <newline> #endif <newline>     // Sent before the repost form warning is brought up.
0a27e1dc138014bde4e01bf2d55d784a0180f9c	nirnimesh@chromium.org <nirnimesh@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Apr 11 22:47:12 2011 +0000	Add a pyauto test for chrome security on ChromeOS TEST=			http://codereview.chromium.org/6826042	svn://svn.chromium.org/chrome/trunk/src@81169 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/chromeos_security.py b/chrome/test/functional/chromeos_security.py <newline>new file mode 100644 <newline>index 0000000..179b68a <newline>--- /dev/null <newline>+++ b/chrome/test/functional/chromeos_security.py <newline>@@ -0,0 +1,43 @@ <newline>+#!/usr/bin/python <newline>+# Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+# Use of this source code is governed by a BSD-style license that can be <newline>+# found in the LICENSE file. <newline>+ <newline>+import os <newline>+ <newline>+import pyauto_functional <newline>+import pyauto <newline>+ <newline>+ <newline>+class ChromeosSecurity(pyauto.PyUITest): <newline>+  """Security tests for chrome on ChromeOS. <newline>+ <newline>+  Requires ChromeOS to be logged in. <newline>+  """ <newline>+ <newline>+  def ExtraChromeFlagsOnChromeOS(self): <newline>+    """Override default list of extra flags typicall used with automation. <newline>+ <newline>+    See the default flags used with automation in pyauto.py. <newline>+    Chrome flags for this test should be as close to reality as possible. <newline>+    """ <newline>+    return [ <newline>+       '--homepage=about:blank', <newline>+    ] <newline>+ <newline>+  def testCannotViewLocalFiles(self): <newline>+    """Verify that local files cannot be accessed from the browser.""" <newline>+    urls_and_titles = { <newline>+       'file:///': 'Index of /', <newline>+       'file:///etc/': 'Index of /etc/', <newline>+       self.GetFileURLForPath(os.path.join(self.DataDir(), 'title2.html')): <newline>+           'Title Of Awesomeness', <newline>+    } <newline>+    for url, title in urls_and_titles.iteritems(): <newline>+      self.NavigateToURL(url) <newline>+      self.assertNotEqual(title, self.GetActiveTabTitle(), <newline>+          msg='Could access local file %s.' % url) <newline>+ <newline>+ <newline>+if __name__ == '__main__': <newline>+  pyauto_functional.Main()
f89b6570b214565e89301b652b95175fdf5b1c2	nirnimesh@chromium.org <nirnimesh@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Apr 11 22:47:12 2011 +0000	Add a pyauto test for chrome security on ChromeOS TEST=			http://codereview.chromium.org/6826042	svn://svn.chromium.org/chrome/trunk/src@81169 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/functional/chromeos_security.py b/chrome/test/functional/chromeos_security.py <newline>new file mode 100644 <newline>index 0000000..179b68a <newline>--- /dev/null <newline>+++ b/chrome/test/functional/chromeos_security.py <newline>@@ -0,0 +1,43 @@ <newline>+#!/usr/bin/python <newline>+# Copyright (c) 2011 The Chromium Authors. All rights reserved. <newline>+# Use of this source code is governed by a BSD-style license that can be <newline>+# found in the LICENSE file. <newline>+ <newline>+import os <newline>+ <newline>+import pyauto_functional <newline>+import pyauto <newline>+ <newline>+ <newline>+class ChromeosSecurity(pyauto.PyUITest): <newline>+  """Security tests for chrome on ChromeOS. <newline>+ <newline>+  Requires ChromeOS to be logged in. <newline>+  """ <newline>+ <newline>+  def ExtraChromeFlagsOnChromeOS(self): <newline>+    """Override default list of extra flags typicall used with automation. <newline>+ <newline>+    See the default flags used with automation in pyauto.py. <newline>+    Chrome flags for this test should be as close to reality as possible. <newline>+    """ <newline>+    return [ <newline>+       '--homepage=about:blank', <newline>+    ] <newline>+ <newline>+  def testCannotViewLocalFiles(self): <newline>+    """Verify that local files cannot be accessed from the browser.""" <newline>+    urls_and_titles = { <newline>+       'file:///': 'Index of /', <newline>+       'file:///etc/': 'Index of /etc/', <newline>+       self.GetFileURLForPath(os.path.join(self.DataDir(), 'title2.html')): <newline>+           'Title Of Awesomeness', <newline>+    } <newline>+    for url, title in urls_and_titles.iteritems(): <newline>+      self.NavigateToURL(url) <newline>+      self.assertNotEqual(title, self.GetActiveTabTitle(), <newline>+          msg='Could access local file %s.' % url) <newline>+ <newline>+ <newline>+if __name__ == '__main__': <newline>+  pyauto_functional.Main()
95a2b51ffe1c32a5a631600d08044ac9940c25f	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 7 15:06:46 2011 +0000	net: add ability to distinguish user-added root CAs. We have several places where a need to distinguish `real' root CAs from user-added root CAs will be useful: 1) Monoscope wants to inspect correctly signed, but unknown certificates, but doesn't want to deal with proxy MITM certificates. 2) HSTS is likely to add a method for pinning to a certificate, but we don't want to break every proxy MITM with it. This change adds several lists of known, `real' roots. These lists present an ongoing maintainance issue. However, in the event that the lists are incomplete in the future, we fail open. This is because roots not in these lists are treated as user-added and user-added roots have more authority than `real' roots. In some sense, this is a problem because it might be a security issue that new roots are given too much authority. On the other hand, we're not breaking things when we're behind on updating the lists so the maintainance issue isn't too pressing. TEST=none	none		http://codereview.chromium.org/6793041	svn://svn.chromium.org/chrome/trunk/src@80778 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/data/ssl/certificates/nist_intermediate.der b/net/data/ssl/certificates/nist_intermediate.der <newline>new file mode 100644 <newline>index 0000000..55923a0 <newline>Binary files /dev/null and b/net/data/ssl/certificates/nist_intermediate.der differ
1502db60102ce82450113c755cba4987bd311ab	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 7 15:06:46 2011 +0000	net: add ability to distinguish user-added root CAs. We have several places where a need to distinguish `real' root CAs from user-added root CAs will be useful: 1) Monoscope wants to inspect correctly signed, but unknown certificates, but doesn't want to deal with proxy MITM certificates. 2) HSTS is likely to add a method for pinning to a certificate, but we don't want to break every proxy MITM with it. This change adds several lists of known, `real' roots. These lists present an ongoing maintainance issue. However, in the event that the lists are incomplete in the future, we fail open. This is because roots not in these lists are treated as user-added and user-added roots have more authority than `real' roots. In some sense, this is a problem because it might be a security issue that new roots are given too much authority. On the other hand, we're not breaking things when we're behind on updating the lists so the maintainance issue isn't too pressing. TEST=none	none		http://codereview.chromium.org/6793041	svn://svn.chromium.org/chrome/trunk/src@80778 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/data/ssl/certificates/nist_intermediate.der b/net/data/ssl/certificates/nist_intermediate.der <newline>new file mode 100644 <newline>index 0000000..55923a0 <newline>Binary files /dev/null and b/net/data/ssl/certificates/nist_intermediate.der differ
e044185044bbb85ff6e4f08911a0b546436fc50	mseaborn@chromium.org <mseaborn@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Apr 6 06:00:13 2011 +0000	Disable registration of Breakpad's signal handler for Native Client This partially undoes r71459. This fixes a security vulnerability that occurs when the NaCl revision is updated to r4598 or later.  That revision changes NaCl's sel_main_chrome.c so that it no longer registers a signal handler, but instead leaves Breakpad's signal handler (registered by Chrome) in place. The vulnerability would allow NaCl untrusted code to escape NaCl's inner sandbox on x86-32 Linux. This is because although NaCl's signal handler knows how to safely handle faults from NaCl x86-32 sandboxed code, Breakpad's signal handler does not.  Breakpad's signal handler does not restore %gs. TEST=assertion to be added on the NaCl side (http://codereview.chromium.org/6798008/)	http://code.google.com/p/nativeclient/issues/detail?id=1607		http://codereview.chromium.org/6677168	svn://svn.chromium.org/chrome/trunk/src@80581 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/breakpad_linux.cc b/chrome/app/breakpad_linux.cc <newline>index f51c137..7fd12bd 100644 <newline>--- a/chrome/app/breakpad_linux.cc <newline>+++ b/chrome/app/breakpad_linux.cc <newline>@@ -686,7 +686,7 @@ void EnableCrashDumping(const bool unattended) { <newline>   } <newline> } <newline>-// Currently Non-Browser = Renderer, Plugins, Native Client and Gpu <newline>+// Currently Non-Browser = Renderer, Plugins and Gpu <newline> static bool <newline> NonBrowserCrashHandler(const void* crash_context, size_t crash_context_size, <newline>                        void* context) { <newline>@@ -788,7 +788,6 @@ void InitCrashReporter() { <newline>   } else if (process_type == switches::kRendererProcess || <newline>              process_type == switches::kPluginProcess || <newline>              process_type == switches::kZygoteProcess || <newline>-             process_type == switches::kNaClLoaderProcess || <newline>              process_type == switches::kGpuProcess) { <newline>     // We might be chrooted in a zygote or renderer process so we cannot call <newline>     // GetCollectStatsConsent because that needs access the the user's home
56ff9d0d45e439bb6f641dce50ecf9936e83d89	mseaborn@chromium.org <mseaborn@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Apr 6 06:00:13 2011 +0000	Disable registration of Breakpad's signal handler for Native Client This partially undoes r71459. This fixes a security vulnerability that occurs when the NaCl revision is updated to r4598 or later.  That revision changes NaCl's sel_main_chrome.c so that it no longer registers a signal handler, but instead leaves Breakpad's signal handler (registered by Chrome) in place. The vulnerability would allow NaCl untrusted code to escape NaCl's inner sandbox on x86-32 Linux. This is because although NaCl's signal handler knows how to safely handle faults from NaCl x86-32 sandboxed code, Breakpad's signal handler does not.  Breakpad's signal handler does not restore %gs. TEST=assertion to be added on the NaCl side (http://codereview.chromium.org/6798008/)	http://code.google.com/p/nativeclient/issues/detail?id=1607		http://codereview.chromium.org/6677168	svn://svn.chromium.org/chrome/trunk/src@80581 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/breakpad_linux.cc b/chrome/app/breakpad_linux.cc <newline>index f51c137..7fd12bd 100644 <newline>--- a/chrome/app/breakpad_linux.cc <newline>+++ b/chrome/app/breakpad_linux.cc <newline>@@ -686,7 +686,7 @@ void EnableCrashDumping(const bool unattended) { <newline>   } <newline> } <newline>-// Currently Non-Browser = Renderer, Plugins, Native Client and Gpu <newline>+// Currently Non-Browser = Renderer, Plugins and Gpu <newline> static bool <newline> NonBrowserCrashHandler(const void* crash_context, size_t crash_context_size, <newline>                        void* context) { <newline>@@ -788,7 +788,6 @@ void InitCrashReporter() { <newline>   } else if (process_type == switches::kRendererProcess || <newline>              process_type == switches::kPluginProcess || <newline>              process_type == switches::kZygoteProcess || <newline>-             process_type == switches::kNaClLoaderProcess || <newline>              process_type == switches::kGpuProcess) { <newline>     // We might be chrooted in a zygote or renderer process so we cannot call <newline>     // GetCollectStatsConsent because that needs access the the user's home
d77b19af857979f059553c1aea6c3ad78521a2d	hclam@google.com <hclam@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 17 23:49:21 2011 +0000	Load additional NSS library files in zygote main if remoting is enabled Instead of initializing NSS before the sandbox is engaged this loads the necessary additional libraries for NSS to function properly. This allows initializing NSS after sandbox is closed and solve the security problem of loading NSS early. TEST=None	None		http://codereview.chromium.org/6672034	svn://svn.chromium.org/chrome/trunk/src@78633 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/browser/zygote_main_linux.cc b/content/browser/zygote_main_linux.cc <newline>index 8a563b3..0da3212 100644 <newline>--- a/content/browser/zygote_main_linux.cc <newline>+++ b/content/browser/zygote_main_linux.cc <newline>@@ -605,19 +605,12 @@ static void PreSandboxInit() { <newline>   if (PathService::Get(chrome::DIR_MEDIA_LIBS, &media_path)) <newline>     media::InitializeMediaLibrary(media_path); <newline>-  // Remoting requires NSS to function properly. It is not used for other <newline>-  // reasons so load NSS only if remoting is enabled. <newline>-  const CommandLine& command_line = *CommandLine::ForCurrentProcess(); <newline>-  if (command_line.HasSwitch(switches::kEnableRemoting)) { <newline>-    // We are going to fork to engage the sandbox and we have not loaded <newline>-    // any security modules so it is safe to disable the fork check in NSS. <newline>-    base::DisableNSSForkCheck(); <newline>- <newline>-    // Initialize NSS so that we load the necessary library files <newline>-    // before we enter the sandbox. <newline>-    base::ForceNSSNoDBInit(); <newline>-    base::EnsureNSSInit(); <newline>-  } <newline>+  // NSS libraries are loaded before sandbox is activated. This is to allow <newline>+  // successful initialization of NSS which tries to load extra library files. <newline>+  // Doing so will allow NSS to be used within sandbox for chromoting. <newline>+#if defined(USE_NSS) <newline>+  base::LoadNSSLibraries(); <newline>+#endif <newline>   // Ensure access to the Pepper plugins before the sandbox is turned on. <newline>   PepperPluginRegistry::PreloadModules();
6a67b42c830927c8d4b12a6f66e3ce9e53115b3	hclam@google.com <hclam@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 17 23:49:21 2011 +0000	Load additional NSS library files in zygote main if remoting is enabled Instead of initializing NSS before the sandbox is engaged this loads the necessary additional libraries for NSS to function properly. This allows initializing NSS after sandbox is closed and solve the security problem of loading NSS early. TEST=None	None		http://codereview.chromium.org/6672034	svn://svn.chromium.org/chrome/trunk/src@78633 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/content/browser/zygote_main_linux.cc b/content/browser/zygote_main_linux.cc <newline>index 8a563b3..0da3212 100644 <newline>--- a/content/browser/zygote_main_linux.cc <newline>+++ b/content/browser/zygote_main_linux.cc <newline>@@ -605,19 +605,12 @@ static void PreSandboxInit() { <newline>   if (PathService::Get(chrome::DIR_MEDIA_LIBS, &media_path)) <newline>     media::InitializeMediaLibrary(media_path); <newline>-  // Remoting requires NSS to function properly. It is not used for other <newline>-  // reasons so load NSS only if remoting is enabled. <newline>-  const CommandLine& command_line = *CommandLine::ForCurrentProcess(); <newline>-  if (command_line.HasSwitch(switches::kEnableRemoting)) { <newline>-    // We are going to fork to engage the sandbox and we have not loaded <newline>-    // any security modules so it is safe to disable the fork check in NSS. <newline>-    base::DisableNSSForkCheck(); <newline>- <newline>-    // Initialize NSS so that we load the necessary library files <newline>-    // before we enter the sandbox. <newline>-    base::ForceNSSNoDBInit(); <newline>-    base::EnsureNSSInit(); <newline>-  } <newline>+  // NSS libraries are loaded before sandbox is activated. This is to allow <newline>+  // successful initialization of NSS which tries to load extra library files. <newline>+  // Doing so will allow NSS to be used within sandbox for chromoting. <newline>+#if defined(USE_NSS) <newline>+  base::LoadNSSLibraries(); <newline>+#endif <newline>   // Ensure access to the Pepper plugins before the sandbox is turned on. <newline>   PepperPluginRegistry::PreloadModules();
6a08a024f6bf176aef65eccb157ab1ab544dfcc	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 17 18:20:52 2011 +0000	Creates the ipclist utility that chrome security team has wanted to dump the known IPC messages.  Going forward, this should help identify new messages between versions of chrome so that they may be given extra scrutiny for potential badness. under the common_message_generator.h umbrella.			http://codereview.chromium.org/6646005	svn://svn.chromium.org/chrome/trunk/src@78564 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/ppapi/proxy/ppapi_messages.h b/ppapi/proxy/ppapi_messages.h <newline>index c7f59f3..1c89ae2 100644 <newline>--- a/ppapi/proxy/ppapi_messages.h <newline>+++ b/ppapi/proxy/ppapi_messages.h <newline>@@ -38,7 +38,7 @@ IPC_MESSAGE_CONTROL1(PpapiMsg_LoadPlugin, FilePath /* path */) <newline> // PpapiHostMsg_ChannelCreated. <newline> IPC_MESSAGE_CONTROL2(PpapiMsg_CreateChannel, <newline>                      base::ProcessHandle /* host_process_handle */, <newline>-                     int /* renderer_id */); <newline>+                     int /* renderer_id */) <newline> // Each plugin may be referenced by multiple renderers. We need the instance <newline> // IDs to be unique within a plugin, despite coming from different renderers, <newline>@@ -345,19 +345,19 @@ IPC_SYNC_MESSAGE_ROUTED1_1(PpapiHostMsg_PPBFileRef_GetParent, <newline> IPC_MESSAGE_ROUTED3(PpapiHostMsg_PPBFileRef_MakeDirectory, <newline>                     pp::proxy::HostResource /* file_ref */, <newline>                     PP_Bool /* make_ancestors */, <newline>-                    uint32_t /* serialized_callback */); <newline>+                    uint32_t /* serialized_callback */) <newline> IPC_MESSAGE_ROUTED4(PpapiHostMsg_PPBFileRef_Touch, <newline>                     pp::proxy::HostResource /* file_ref */, <newline>                     PP_Time /* last_access */, <newline>                     PP_Time /* last_modified */, <newline>-                    uint32_t /* serialized_callback */); <newline>+                    uint32_t /* serialized_callback */) <newline> IPC_MESSAGE_ROUTED2(PpapiHostMsg_PPBFileRef_Delete, <newline>                     pp::proxy::HostResource /* file_ref */, <newline>-                    uint32_t /* serialized_callback */); <newline>+                    uint32_t /* serialized_callback */) <newline> IPC_MESSAGE_ROUTED3(PpapiHostMsg_PPBFileRef_Rename, <newline>                     pp::proxy::HostResource /* file_ref */, <newline>                     pp::proxy::HostResource /* new_file_ref */, <newline>-                    uint32_t /* serialized_callback */); <newline>+                    uint32_t /* serialized_callback */) <newline> // PPB_FileSystem. <newline> IPC_SYNC_MESSAGE_ROUTED2_1(PpapiHostMsg_PPBFileSystem_Create,
503a12601fee9e142e37a630f3db9b758499c82	tsepez@chromium.org <tsepez@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 17 18:20:52 2011 +0000	Creates the ipclist utility that chrome security team has wanted to dump the known IPC messages.  Going forward, this should help identify new messages between versions of chrome so that they may be given extra scrutiny for potential badness. under the common_message_generator.h umbrella.			http://codereview.chromium.org/6646005	svn://svn.chromium.org/chrome/trunk/src@78564 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/ppapi/proxy/ppapi_messages.h b/ppapi/proxy/ppapi_messages.h <newline>index c7f59f3..1c89ae2 100644 <newline>--- a/ppapi/proxy/ppapi_messages.h <newline>+++ b/ppapi/proxy/ppapi_messages.h <newline>@@ -38,7 +38,7 @@ IPC_MESSAGE_CONTROL1(PpapiMsg_LoadPlugin, FilePath /* path */) <newline> // PpapiHostMsg_ChannelCreated. <newline> IPC_MESSAGE_CONTROL2(PpapiMsg_CreateChannel, <newline>                      base::ProcessHandle /* host_process_handle */, <newline>-                     int /* renderer_id */); <newline>+                     int /* renderer_id */) <newline> // Each plugin may be referenced by multiple renderers. We need the instance <newline> // IDs to be unique within a plugin, despite coming from different renderers, <newline>@@ -345,19 +345,19 @@ IPC_SYNC_MESSAGE_ROUTED1_1(PpapiHostMsg_PPBFileRef_GetParent, <newline> IPC_MESSAGE_ROUTED3(PpapiHostMsg_PPBFileRef_MakeDirectory, <newline>                     pp::proxy::HostResource /* file_ref */, <newline>                     PP_Bool /* make_ancestors */, <newline>-                    uint32_t /* serialized_callback */); <newline>+                    uint32_t /* serialized_callback */) <newline> IPC_MESSAGE_ROUTED4(PpapiHostMsg_PPBFileRef_Touch, <newline>                     pp::proxy::HostResource /* file_ref */, <newline>                     PP_Time /* last_access */, <newline>                     PP_Time /* last_modified */, <newline>-                    uint32_t /* serialized_callback */); <newline>+                    uint32_t /* serialized_callback */) <newline> IPC_MESSAGE_ROUTED2(PpapiHostMsg_PPBFileRef_Delete, <newline>                     pp::proxy::HostResource /* file_ref */, <newline>-                    uint32_t /* serialized_callback */); <newline>+                    uint32_t /* serialized_callback */) <newline> IPC_MESSAGE_ROUTED3(PpapiHostMsg_PPBFileRef_Rename, <newline>                     pp::proxy::HostResource /* file_ref */, <newline>                     pp::proxy::HostResource /* new_file_ref */, <newline>-                    uint32_t /* serialized_callback */); <newline>+                    uint32_t /* serialized_callback */) <newline> // PPB_FileSystem. <newline> IPC_SYNC_MESSAGE_ROUTED2_1(PpapiHostMsg_PPBFileSystem_Create,
f996246d2ef79b21d99837263c001ece681816f	rtenneti@google.com <rtenneti@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 16 01:33:29 2011 +0000	Revert of Revert (78274, 78272) - relanding CL 6646023 with fix for ARM. Changes to SSLConfigServicePref to use preferences from Local State rather than user preferences on linux. SSL settings will apply to all profiles. This change impacts SSL3, TLS1 and Cert revocation enabled check boxes. TEST=Options UI for security settings on all platforms. R=wtc,mattm,jhawkins The following is the original review url.	67622		http://codereview.chromium.org/6696041	svn://svn.chromium.org/chrome/trunk/src@78318 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/options/advanced_options_handler.h b/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>index defd295..d635705 100644 <newline>--- a/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>+++ b/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>@@ -66,7 +66,8 @@ class AdvancedOptionsHandler <newline>   // one item, the font size as a numeric value. <newline>   void HandleDefaultFontSize(const ListValue* args); <newline>-#if defined(OS_WIN) <newline>+#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD) || \ <newline>+    defined(OS_OPENBSD) <newline>   // Callback for the "Check SSL Revocation" checkbox.  This is needed so we <newline>   // can support manual handling on Windows. <newline>   void HandleCheckRevocationCheckbox(const ListValue* args); <newline>@@ -149,7 +150,8 @@ class AdvancedOptionsHandler <newline>   // Setup the proxy settings section UI. <newline>   void SetupProxySettingsSection(); <newline>-#if defined(OS_WIN) <newline>+#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD) || \ <newline>+    defined(OS_OPENBSD) <newline>   // Setup the checked state for SSL related checkboxes. <newline>   void SetupSSLConfigSettings(); <newline> #endif <newline>@@ -164,6 +166,13 @@ class AdvancedOptionsHandler <newline>   scoped_ptr<CloudPrintSetupHandler> cloud_print_setup_handler_; <newline> #endif <newline>+#if defined(OS_LINUX) || defined(OS_FREEBSD) || defined(OS_OPENBSD) <newline>+  // SSLConfigService prefs. <newline>+  BooleanPrefMember rev_checking_enabled_; <newline>+  BooleanPrefMember ssl3_enabled_; <newline>+  BooleanPrefMember tls1_enabled_; <newline>+#endif <newline>+ <newline> #if defined(ENABLE_REMOTING) && !defined(OS_CHROMEOS) <newline>   remoting::RemotingOptionsHandler remoting_options_handler_; <newline> #endif
1ad7f4a9c5d78359e90ebfa0aa130791a010226	rtenneti@google.com <rtenneti@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 16 01:33:29 2011 +0000	Revert of Revert (78274, 78272) - relanding CL 6646023 with fix for ARM. Changes to SSLConfigServicePref to use preferences from Local State rather than user preferences on linux. SSL settings will apply to all profiles. This change impacts SSL3, TLS1 and Cert revocation enabled check boxes. TEST=Options UI for security settings on all platforms. R=wtc,mattm,jhawkins The following is the original review url.	67622		http://codereview.chromium.org/6696041	svn://svn.chromium.org/chrome/trunk/src@78318 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/options/advanced_options_handler.h b/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>index defd295..d635705 100644 <newline>--- a/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>+++ b/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>@@ -66,7 +66,8 @@ class AdvancedOptionsHandler <newline>   // one item, the font size as a numeric value. <newline>   void HandleDefaultFontSize(const ListValue* args); <newline>-#if defined(OS_WIN) <newline>+#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD) || \ <newline>+    defined(OS_OPENBSD) <newline>   // Callback for the "Check SSL Revocation" checkbox.  This is needed so we <newline>   // can support manual handling on Windows. <newline>   void HandleCheckRevocationCheckbox(const ListValue* args); <newline>@@ -149,7 +150,8 @@ class AdvancedOptionsHandler <newline>   // Setup the proxy settings section UI. <newline>   void SetupProxySettingsSection(); <newline>-#if defined(OS_WIN) <newline>+#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD) || \ <newline>+    defined(OS_OPENBSD) <newline>   // Setup the checked state for SSL related checkboxes. <newline>   void SetupSSLConfigSettings(); <newline> #endif <newline>@@ -164,6 +166,13 @@ class AdvancedOptionsHandler <newline>   scoped_ptr<CloudPrintSetupHandler> cloud_print_setup_handler_; <newline> #endif <newline>+#if defined(OS_LINUX) || defined(OS_FREEBSD) || defined(OS_OPENBSD) <newline>+  // SSLConfigService prefs. <newline>+  BooleanPrefMember rev_checking_enabled_; <newline>+  BooleanPrefMember ssl3_enabled_; <newline>+  BooleanPrefMember tls1_enabled_; <newline>+#endif <newline>+ <newline> #if defined(ENABLE_REMOTING) && !defined(OS_CHROMEOS) <newline>   remoting::RemotingOptionsHandler remoting_options_handler_; <newline> #endif
902bc90a9e1cf73e48da466c5222a2d55b15b5b	rtenneti@chromium.org <rtenneti@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 15 20:34:23 2011 +0000	Revert 78272 - Changes to SSLConfigServicePref to use preferences from Local State rather than user preferences on linux. SSL settings will apply to all profiles. This change impacts SSL3, TLS1 and Cert revocation enabled check boxes. TEST=Options UI for security settings on all platforms. R=wtc,mattm TBR=rtenneti@google.com	67622		http://codereview.chromium.org/6695033	svn://svn.chromium.org/chrome/trunk/src@78274 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/options/advanced_options_handler.h b/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>index d635705..defd295 100644 <newline>--- a/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>+++ b/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>@@ -66,8 +66,7 @@ class AdvancedOptionsHandler <newline>   // one item, the font size as a numeric value. <newline>   void HandleDefaultFontSize(const ListValue* args); <newline>-#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD) || \ <newline>-    defined(OS_OPENBSD) <newline>+#if defined(OS_WIN) <newline>   // Callback for the "Check SSL Revocation" checkbox.  This is needed so we <newline>   // can support manual handling on Windows. <newline>   void HandleCheckRevocationCheckbox(const ListValue* args); <newline>@@ -150,8 +149,7 @@ class AdvancedOptionsHandler <newline>   // Setup the proxy settings section UI. <newline>   void SetupProxySettingsSection(); <newline>-#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD) || \ <newline>-    defined(OS_OPENBSD) <newline>+#if defined(OS_WIN) <newline>   // Setup the checked state for SSL related checkboxes. <newline>   void SetupSSLConfigSettings(); <newline> #endif <newline>@@ -166,13 +164,6 @@ class AdvancedOptionsHandler <newline>   scoped_ptr<CloudPrintSetupHandler> cloud_print_setup_handler_; <newline> #endif <newline>-#if defined(OS_LINUX) || defined(OS_FREEBSD) || defined(OS_OPENBSD) <newline>-  // SSLConfigService prefs. <newline>-  BooleanPrefMember rev_checking_enabled_; <newline>-  BooleanPrefMember ssl3_enabled_; <newline>-  BooleanPrefMember tls1_enabled_; <newline>-#endif <newline>- <newline> #if defined(ENABLE_REMOTING) && !defined(OS_CHROMEOS) <newline>   remoting::RemotingOptionsHandler remoting_options_handler_; <newline> #endif
c7f649f4ff46a1764cbe82b850c69ce8af39c75	rtenneti@chromium.org <rtenneti@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 15 20:34:23 2011 +0000	Revert 78272 - Changes to SSLConfigServicePref to use preferences from Local State rather than user preferences on linux. SSL settings will apply to all profiles. This change impacts SSL3, TLS1 and Cert revocation enabled check boxes. TEST=Options UI for security settings on all platforms. R=wtc,mattm TBR=rtenneti@google.com	67622		http://codereview.chromium.org/6695033	svn://svn.chromium.org/chrome/trunk/src@78274 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/options/advanced_options_handler.h b/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>index d635705..defd295 100644 <newline>--- a/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>+++ b/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>@@ -66,8 +66,7 @@ class AdvancedOptionsHandler <newline>   // one item, the font size as a numeric value. <newline>   void HandleDefaultFontSize(const ListValue* args); <newline>-#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD) || \ <newline>-    defined(OS_OPENBSD) <newline>+#if defined(OS_WIN) <newline>   // Callback for the "Check SSL Revocation" checkbox.  This is needed so we <newline>   // can support manual handling on Windows. <newline>   void HandleCheckRevocationCheckbox(const ListValue* args); <newline>@@ -150,8 +149,7 @@ class AdvancedOptionsHandler <newline>   // Setup the proxy settings section UI. <newline>   void SetupProxySettingsSection(); <newline>-#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD) || \ <newline>-    defined(OS_OPENBSD) <newline>+#if defined(OS_WIN) <newline>   // Setup the checked state for SSL related checkboxes. <newline>   void SetupSSLConfigSettings(); <newline> #endif <newline>@@ -166,13 +164,6 @@ class AdvancedOptionsHandler <newline>   scoped_ptr<CloudPrintSetupHandler> cloud_print_setup_handler_; <newline> #endif <newline>-#if defined(OS_LINUX) || defined(OS_FREEBSD) || defined(OS_OPENBSD) <newline>-  // SSLConfigService prefs. <newline>-  BooleanPrefMember rev_checking_enabled_; <newline>-  BooleanPrefMember ssl3_enabled_; <newline>-  BooleanPrefMember tls1_enabled_; <newline>-#endif <newline>- <newline> #if defined(ENABLE_REMOTING) && !defined(OS_CHROMEOS) <newline>   remoting::RemotingOptionsHandler remoting_options_handler_; <newline> #endif
484a9677cd263328578cddc1cb5ded8a0aadf36	rtenneti@google.com <rtenneti@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 15 20:23:51 2011 +0000	Changes to SSLConfigServicePref to use preferences from Local State rather than user preferences on linux. SSL settings will apply to all profiles. This change impacts SSL3, TLS1 and Cert revocation enabled check boxes. TEST=Options UI for security settings on all platforms. R=wtc,mattm	67622		http://codereview.chromium.org/6646023	svn://svn.chromium.org/chrome/trunk/src@78272 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/options/advanced_options_handler.h b/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>index defd295..d635705 100644 <newline>--- a/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>+++ b/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>@@ -66,7 +66,8 @@ class AdvancedOptionsHandler <newline>   // one item, the font size as a numeric value. <newline>   void HandleDefaultFontSize(const ListValue* args); <newline>-#if defined(OS_WIN) <newline>+#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD) || \ <newline>+    defined(OS_OPENBSD) <newline>   // Callback for the "Check SSL Revocation" checkbox.  This is needed so we <newline>   // can support manual handling on Windows. <newline>   void HandleCheckRevocationCheckbox(const ListValue* args); <newline>@@ -149,7 +150,8 @@ class AdvancedOptionsHandler <newline>   // Setup the proxy settings section UI. <newline>   void SetupProxySettingsSection(); <newline>-#if defined(OS_WIN) <newline>+#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD) || \ <newline>+    defined(OS_OPENBSD) <newline>   // Setup the checked state for SSL related checkboxes. <newline>   void SetupSSLConfigSettings(); <newline> #endif <newline>@@ -164,6 +166,13 @@ class AdvancedOptionsHandler <newline>   scoped_ptr<CloudPrintSetupHandler> cloud_print_setup_handler_; <newline> #endif <newline>+#if defined(OS_LINUX) || defined(OS_FREEBSD) || defined(OS_OPENBSD) <newline>+  // SSLConfigService prefs. <newline>+  BooleanPrefMember rev_checking_enabled_; <newline>+  BooleanPrefMember ssl3_enabled_; <newline>+  BooleanPrefMember tls1_enabled_; <newline>+#endif <newline>+ <newline> #if defined(ENABLE_REMOTING) && !defined(OS_CHROMEOS) <newline>   remoting::RemotingOptionsHandler remoting_options_handler_; <newline> #endif
242f222bbba36f1df1392ddf0717c4a584c286f	rtenneti@google.com <rtenneti@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 15 20:23:51 2011 +0000	Changes to SSLConfigServicePref to use preferences from Local State rather than user preferences on linux. SSL settings will apply to all profiles. This change impacts SSL3, TLS1 and Cert revocation enabled check boxes. TEST=Options UI for security settings on all platforms. R=wtc,mattm	67622		http://codereview.chromium.org/6646023	svn://svn.chromium.org/chrome/trunk/src@78272 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ui/webui/options/advanced_options_handler.h b/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>index defd295..d635705 100644 <newline>--- a/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>+++ b/chrome/browser/ui/webui/options/advanced_options_handler.h <newline>@@ -66,7 +66,8 @@ class AdvancedOptionsHandler <newline>   // one item, the font size as a numeric value. <newline>   void HandleDefaultFontSize(const ListValue* args); <newline>-#if defined(OS_WIN) <newline>+#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD) || \ <newline>+    defined(OS_OPENBSD) <newline>   // Callback for the "Check SSL Revocation" checkbox.  This is needed so we <newline>   // can support manual handling on Windows. <newline>   void HandleCheckRevocationCheckbox(const ListValue* args); <newline>@@ -149,7 +150,8 @@ class AdvancedOptionsHandler <newline>   // Setup the proxy settings section UI. <newline>   void SetupProxySettingsSection(); <newline>-#if defined(OS_WIN) <newline>+#if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FREEBSD) || \ <newline>+    defined(OS_OPENBSD) <newline>   // Setup the checked state for SSL related checkboxes. <newline>   void SetupSSLConfigSettings(); <newline> #endif <newline>@@ -164,6 +166,13 @@ class AdvancedOptionsHandler <newline>   scoped_ptr<CloudPrintSetupHandler> cloud_print_setup_handler_; <newline> #endif <newline>+#if defined(OS_LINUX) || defined(OS_FREEBSD) || defined(OS_OPENBSD) <newline>+  // SSLConfigService prefs. <newline>+  BooleanPrefMember rev_checking_enabled_; <newline>+  BooleanPrefMember ssl3_enabled_; <newline>+  BooleanPrefMember tls1_enabled_; <newline>+#endif <newline>+ <newline> #if defined(ENABLE_REMOTING) && !defined(OS_CHROMEOS) <newline>   remoting::RemotingOptionsHandler remoting_options_handler_; <newline> #endif
35738718a7dd2b5cde501ee914c48fd82915bc7	tfarina@chromium.org <tfarina@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 9 02:20:11 2011 +0000	clang: Cleanup style/security issues in the test.sh script. - Function names: Lower-case, with underscores to separate words. Parentheses are required after the function name. The keyword function is disallowed. - Use "$(...)" for commands. - Test: [ ... ] is preferred over [[, test and /usr/bin/[. [[ ... ]] is not available in POSIX shell or dash. For testing string equality use =, as == is not in POSIX. TEST=./test.sh ../../../../third_party/llvm-build/Release+Asserts/	None		http://codereview.chromium.org/6628082	svn://svn.chromium.org/chrome/trunk/src@77409 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/tools/clang/plugins/tests/test.sh b/tools/clang/plugins/tests/test.sh <newline>index 03c583d..ef0070f 100755 <newline>--- a/tools/clang/plugins/tests/test.sh <newline>+++ b/tools/clang/plugins/tests/test.sh <newline>@@ -10,20 +10,21 @@ <newline> E_BADARGS=65 <newline> # Prints usage information. <newline>-function usage() { <newline>-  echo "Usage: `basename $0` <Path to the llvm build dir, usually Release+Asserts>" <newline>+usage() { <newline>+  echo "Usage: $(basename "${0}")" \ <newline>+    "<Path to the llvm build dir, usually Release+Asserts>" <newline>   echo "" <newline>   echo "  Runs all the libFindBadConstructs unit tests" <newline>   echo "" <newline> } <newline> # Runs a single test case. <newline>-function do_testcase { <newline>-  local output=`${CLANG_DIR}/bin/clang -cc1 \ <newline>-      -load ${CLANG_DIR}/lib/libFindBadConstructs.so \ <newline>-      -plugin find-bad-constructs ${1} 2>&1` <newline>-  local diffout=`echo "${output}" | diff - ${2}` <newline>-  if [[ ${diffout} == "" ]]; then <newline>+do_testcase() { <newline>+  local output="$("${CLANG_DIR}"/bin/clang -cc1 \ <newline>+      -load "${CLANG_DIR}"/lib/libFindBadConstructs.so \ <newline>+      -plugin find-bad-constructs ${1} 2>&1)" <newline>+  local diffout="$(echo "${output}" | diff - "${2}")" <newline>+  if [ "${diffout}" = "" ]; then <newline>     echo "PASS: ${1}" <newline>   else <newline>     echo "FAIL: ${1}" <newline>@@ -46,5 +47,5 @@ else <newline> fi <newline> for input in *.cpp; do <newline>-  do_testcase $input ${input%cpp}txt <newline>+  do_testcase "${input}" "${input%cpp}txt" <newline> done
9c89b763413e868fcd98e823c3df5d28bca87ac	tfarina@chromium.org <tfarina@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 9 02:20:11 2011 +0000	clang: Cleanup style/security issues in the test.sh script. - Function names: Lower-case, with underscores to separate words. Parentheses are required after the function name. The keyword function is disallowed. - Use "$(...)" for commands. - Test: [ ... ] is preferred over [[, test and /usr/bin/[. [[ ... ]] is not available in POSIX shell or dash. For testing string equality use =, as == is not in POSIX. TEST=./test.sh ../../../../third_party/llvm-build/Release+Asserts/	None		http://codereview.chromium.org/6628082	svn://svn.chromium.org/chrome/trunk/src@77409 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/tools/clang/plugins/tests/test.sh b/tools/clang/plugins/tests/test.sh <newline>index 03c583d..ef0070f 100755 <newline>--- a/tools/clang/plugins/tests/test.sh <newline>+++ b/tools/clang/plugins/tests/test.sh <newline>@@ -10,20 +10,21 @@ <newline> E_BADARGS=65 <newline> # Prints usage information. <newline>-function usage() { <newline>-  echo "Usage: `basename $0` <Path to the llvm build dir, usually Release+Asserts>" <newline>+usage() { <newline>+  echo "Usage: $(basename "${0}")" \ <newline>+    "<Path to the llvm build dir, usually Release+Asserts>" <newline>   echo "" <newline>   echo "  Runs all the libFindBadConstructs unit tests" <newline>   echo "" <newline> } <newline> # Runs a single test case. <newline>-function do_testcase { <newline>-  local output=`${CLANG_DIR}/bin/clang -cc1 \ <newline>-      -load ${CLANG_DIR}/lib/libFindBadConstructs.so \ <newline>-      -plugin find-bad-constructs ${1} 2>&1` <newline>-  local diffout=`echo "${output}" | diff - ${2}` <newline>-  if [[ ${diffout} == "" ]]; then <newline>+do_testcase() { <newline>+  local output="$("${CLANG_DIR}"/bin/clang -cc1 \ <newline>+      -load "${CLANG_DIR}"/lib/libFindBadConstructs.so \ <newline>+      -plugin find-bad-constructs ${1} 2>&1)" <newline>+  local diffout="$(echo "${output}" | diff - "${2}")" <newline>+  if [ "${diffout}" = "" ]; then <newline>     echo "PASS: ${1}" <newline>   else <newline>     echo "FAIL: ${1}" <newline>@@ -46,5 +47,5 @@ else <newline> fi <newline> for input in *.cpp; do <newline>-  do_testcase $input ${input%cpp}txt <newline>+  do_testcase "${input}" "${input%cpp}txt" <newline> done
9edf8b62c1c316cb5bd2f442a8dc3b48b0981da	tfarina@chromium.org <tfarina@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 3 03:11:14 2011 +0000	clang: Fix security issues in update.sh script. - Use "${FOO}" for variable expansion. - Use "$(CMD)" for command expansion. Issues originally pointed in http://codereview.chromium.org/6588125/ by Markus. TEST=run the script. It should works as before.	None		http://codereview.chromium.org/6603002	svn://svn.chromium.org/chrome/trunk/src@76699 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/tools/clang/scripts/update.sh b/tools/clang/scripts/update.sh <newline>index 97f391f..619454d 100755 <newline>--- a/tools/clang/scripts/update.sh <newline>+++ b/tools/clang/scripts/update.sh <newline>@@ -7,9 +7,9 @@ <newline> CLANG_REVISION=126303 <newline>-THIS_DIR=$(dirname $0) <newline>-LLVM_DIR=$THIS_DIR/../../../third_party/llvm <newline>-CLANG_DIR=$LLVM_DIR/tools/clang <newline>+THIS_DIR="$(dirname "${0}")" <newline>+LLVM_DIR="${THIS_DIR}"/../../../third_party/llvm <newline>+CLANG_DIR="${LLVM_DIR}"/tools/clang <newline> # Die if any command dies. <newline> set -e <newline>@@ -17,41 +17,39 @@ set -e <newline> # Echo all commands. <newline> set -x <newline>-# Build clang. <newline>- <newline> # Check out. <newline>-svn co --force http://llvm.org/svn/llvm-project/llvm/trunk@$CLANG_REVISION $LLVM_DIR <newline>-svn co --force http://llvm.org/svn/llvm-project/cfe/trunk@$CLANG_REVISION $CLANG_DIR <newline>+svn co --force http://llvm.org/svn/llvm-project/llvm/trunk@"${CLANG_REVISION}" \ <newline>+  "${LLVM_DIR}" <newline>+svn co --force http://llvm.org/svn/llvm-project/cfe/trunk@"${CLANG_REVISION}" \ <newline>+  "${CLANG_DIR}" <newline>-# Build (in a separate directory). <newline>+# Build clang (in a separate directory). <newline> # The clang bots have this path hardcoded in built/scripts/slave/compile.py, <newline> # so if you change it you also need to change these links. <newline>-mkdir -p $LLVM_DIR/../llvm-build <newline>-cd $LLVM_DIR/../llvm-build <newline>+mkdir -p "${LLVM_DIR}"/../llvm-build <newline>+cd "${LLVM_DIR}"/../llvm-build <newline> if [ ! -f ./config.status ]; then <newline>   ../llvm/configure --enable-optimized <newline> fi <newline> NUM_JOBS=3 <newline>-if [ $(uname -s) = "Linux" ]; then <newline>-  NUM_JOBS=$(grep -c "^processor" /proc/cpuinfo) <newline>-elif [ $(uname -s) = "Darwin" ]; then <newline>-  NUM_JOBS=$(sysctl -n hw.ncpu) <newline>+if [ "$(uname -s)" = "Linux" ]; then <newline>+  NUM_JOBS="$(grep -c "^processor" /proc/cpuinfo)" <newline>+elif [ "$(uname -s)" = "Darwin" ]; then <newline>+  NUM_JOBS="$(sysctl -n hw.ncpu)" <newline> fi <newline>-make -j$NUM_JOBS <newline>+make -j"${NUM_JOBS}" <newline> cd - <newline> # Build plugin. <newline> # Copy it into the clang tree and use clang's build system to compile the <newline> # plugin. <newline>-PLUGIN_SRC_DIR=$THIS_DIR/../plugins <newline>-PLUGIN_DST_DIR=$LLVM_DIR/../llvm/tools/clang/tools/chrome-plugin <newline>-PLUGIN_BUILD_DIR=$LLVM_DIR/../llvm-build/tools/clang/tools/chrome-plugin <newline>-rm -rf $PLUGIN_DST_DIR <newline>-cp -R $PLUGIN_SRC_DIR $PLUGIN_DST_DIR <newline>-rm -rf $PLUGIN_BUILD_DIR <newline>-mkdir -p $PLUGIN_BUILD_DIR <newline>-cp $PLUGIN_SRC_DIR/Makefile $PLUGIN_BUILD_DIR <newline>-cd $PLUGIN_BUILD_DIR <newline>-make -j$NUM_JOBS <newline>-cd - <newline>+PLUGIN_SRC_DIR="${THIS_DIR}"/../plugins <newline>+PLUGIN_DST_DIR="${LLVM_DIR}"/../llvm/tools/clang/tools/chrome-plugin <newline>+PLUGIN_BUILD_DIR="${LLVM_DIR}"/../llvm-build/tools/clang/tools/chrome-plugin <newline>+rm -rf "${PLUGIN_DST_DIR}" <newline>+cp -R "${PLUGIN_SRC_DIR}" "${PLUGIN_DST_DIR}" <newline>+rm -rf "${PLUGIN_BUILD_DIR}" <newline>+mkdir -p "${PLUGIN_BUILD_DIR}" <newline>+cp "${PLUGIN_SRC_DIR}"/Makefile "${PLUGIN_BUILD_DIR}" <newline>+make -j"${NUM_JOBS}" -C "${PLUGIN_BUILD_DIR}"
7db9e52e399dbc4a8b857fe42c3076d0ee09ce0	tfarina@chromium.org <tfarina@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 3 03:11:14 2011 +0000	clang: Fix security issues in update.sh script. - Use "${FOO}" for variable expansion. - Use "$(CMD)" for command expansion. Issues originally pointed in http://codereview.chromium.org/6588125/ by Markus. TEST=run the script. It should works as before.	None		http://codereview.chromium.org/6603002	svn://svn.chromium.org/chrome/trunk/src@76699 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/tools/clang/scripts/update.sh b/tools/clang/scripts/update.sh <newline>index 97f391f..619454d 100755 <newline>--- a/tools/clang/scripts/update.sh <newline>+++ b/tools/clang/scripts/update.sh <newline>@@ -7,9 +7,9 @@ <newline> CLANG_REVISION=126303 <newline>-THIS_DIR=$(dirname $0) <newline>-LLVM_DIR=$THIS_DIR/../../../third_party/llvm <newline>-CLANG_DIR=$LLVM_DIR/tools/clang <newline>+THIS_DIR="$(dirname "${0}")" <newline>+LLVM_DIR="${THIS_DIR}"/../../../third_party/llvm <newline>+CLANG_DIR="${LLVM_DIR}"/tools/clang <newline> # Die if any command dies. <newline> set -e <newline>@@ -17,41 +17,39 @@ set -e <newline> # Echo all commands. <newline> set -x <newline>-# Build clang. <newline>- <newline> # Check out. <newline>-svn co --force http://llvm.org/svn/llvm-project/llvm/trunk@$CLANG_REVISION $LLVM_DIR <newline>-svn co --force http://llvm.org/svn/llvm-project/cfe/trunk@$CLANG_REVISION $CLANG_DIR <newline>+svn co --force http://llvm.org/svn/llvm-project/llvm/trunk@"${CLANG_REVISION}" \ <newline>+  "${LLVM_DIR}" <newline>+svn co --force http://llvm.org/svn/llvm-project/cfe/trunk@"${CLANG_REVISION}" \ <newline>+  "${CLANG_DIR}" <newline>-# Build (in a separate directory). <newline>+# Build clang (in a separate directory). <newline> # The clang bots have this path hardcoded in built/scripts/slave/compile.py, <newline> # so if you change it you also need to change these links. <newline>-mkdir -p $LLVM_DIR/../llvm-build <newline>-cd $LLVM_DIR/../llvm-build <newline>+mkdir -p "${LLVM_DIR}"/../llvm-build <newline>+cd "${LLVM_DIR}"/../llvm-build <newline> if [ ! -f ./config.status ]; then <newline>   ../llvm/configure --enable-optimized <newline> fi <newline> NUM_JOBS=3 <newline>-if [ $(uname -s) = "Linux" ]; then <newline>-  NUM_JOBS=$(grep -c "^processor" /proc/cpuinfo) <newline>-elif [ $(uname -s) = "Darwin" ]; then <newline>-  NUM_JOBS=$(sysctl -n hw.ncpu) <newline>+if [ "$(uname -s)" = "Linux" ]; then <newline>+  NUM_JOBS="$(grep -c "^processor" /proc/cpuinfo)" <newline>+elif [ "$(uname -s)" = "Darwin" ]; then <newline>+  NUM_JOBS="$(sysctl -n hw.ncpu)" <newline> fi <newline>-make -j$NUM_JOBS <newline>+make -j"${NUM_JOBS}" <newline> cd - <newline> # Build plugin. <newline> # Copy it into the clang tree and use clang's build system to compile the <newline> # plugin. <newline>-PLUGIN_SRC_DIR=$THIS_DIR/../plugins <newline>-PLUGIN_DST_DIR=$LLVM_DIR/../llvm/tools/clang/tools/chrome-plugin <newline>-PLUGIN_BUILD_DIR=$LLVM_DIR/../llvm-build/tools/clang/tools/chrome-plugin <newline>-rm -rf $PLUGIN_DST_DIR <newline>-cp -R $PLUGIN_SRC_DIR $PLUGIN_DST_DIR <newline>-rm -rf $PLUGIN_BUILD_DIR <newline>-mkdir -p $PLUGIN_BUILD_DIR <newline>-cp $PLUGIN_SRC_DIR/Makefile $PLUGIN_BUILD_DIR <newline>-cd $PLUGIN_BUILD_DIR <newline>-make -j$NUM_JOBS <newline>-cd - <newline>+PLUGIN_SRC_DIR="${THIS_DIR}"/../plugins <newline>+PLUGIN_DST_DIR="${LLVM_DIR}"/../llvm/tools/clang/tools/chrome-plugin <newline>+PLUGIN_BUILD_DIR="${LLVM_DIR}"/../llvm-build/tools/clang/tools/chrome-plugin <newline>+rm -rf "${PLUGIN_DST_DIR}" <newline>+cp -R "${PLUGIN_SRC_DIR}" "${PLUGIN_DST_DIR}" <newline>+rm -rf "${PLUGIN_BUILD_DIR}" <newline>+mkdir -p "${PLUGIN_BUILD_DIR}" <newline>+cp "${PLUGIN_SRC_DIR}"/Makefile "${PLUGIN_BUILD_DIR}" <newline>+make -j"${NUM_JOBS}" -C "${PLUGIN_BUILD_DIR}"
513ac66d3485ca4550f364d400ef80a5be15ed0	dtu@chromium.org <dtu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 25 19:37:34 2011 +0000	Expand comment for named IPC chmod(). It was previously unclear that it is just a precaution and not intended to be a complete security policy for the named IPC channel. TEST=none	none		http://codereview.chromium.org/6585001	svn://svn.chromium.org/chrome/trunk/src@76083 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/ipc/ipc_channel_posix.cc b/ipc/ipc_channel_posix.cc <newline>index ab8a06c..7c753b6 100644 <newline>--- a/ipc/ipc_channel_posix.cc <newline>+++ b/ipc/ipc_channel_posix.cc <newline>@@ -193,9 +193,14 @@ bool CreateServerUnixDomainSocket(const std::string& pipe_name, <newline>     return false; <newline>   } <newline>-  // Adjust the socket permissions. <newline>+  // Explicitly set file system permissions on socket, mainly as a precaution <newline>+  // for Chrome OS. <newline>+  // Do not rely on these file permissions to provide security - the file is <newline>+  // created during the above bind() call so there is still a window for <newline>+  // malicious abuse because the file exists between bind() and chmod(). Also, <newline>+  // the file permissions may not be enforced for unix sockets on all platforms. <newline>   if (chmod(pipe_name.c_str(), 0600)) { <newline>-    PLOG(ERROR) << "fchmod " << pipe_name; <newline>+    PLOG(ERROR) << "chmod " << pipe_name; <newline>     if (HANDLE_EINTR(close(fd)) < 0) <newline>       PLOG(ERROR) << "close " << pipe_name; <newline>     return false;
572e51731cb71743cb0d9ad5138c0f7cd837e02	dtu@chromium.org <dtu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 25 19:37:34 2011 +0000	Expand comment for named IPC chmod(). It was previously unclear that it is just a precaution and not intended to be a complete security policy for the named IPC channel. TEST=none	none		http://codereview.chromium.org/6585001	svn://svn.chromium.org/chrome/trunk/src@76083 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/ipc/ipc_channel_posix.cc b/ipc/ipc_channel_posix.cc <newline>index ab8a06c..7c753b6 100644 <newline>--- a/ipc/ipc_channel_posix.cc <newline>+++ b/ipc/ipc_channel_posix.cc <newline>@@ -193,9 +193,14 @@ bool CreateServerUnixDomainSocket(const std::string& pipe_name, <newline>     return false; <newline>   } <newline>-  // Adjust the socket permissions. <newline>+  // Explicitly set file system permissions on socket, mainly as a precaution <newline>+  // for Chrome OS. <newline>+  // Do not rely on these file permissions to provide security - the file is <newline>+  // created during the above bind() call so there is still a window for <newline>+  // malicious abuse because the file exists between bind() and chmod(). Also, <newline>+  // the file permissions may not be enforced for unix sockets on all platforms. <newline>   if (chmod(pipe_name.c_str(), 0600)) { <newline>-    PLOG(ERROR) << "fchmod " << pipe_name; <newline>+    PLOG(ERROR) << "chmod " << pipe_name; <newline>     if (HANDLE_EINTR(close(fd)) < 0) <newline>       PLOG(ERROR) << "close " << pipe_name; <newline>     return false;
9e6e991fc0315520fc9c427168c2521abf690ba	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Feb 21 09:22:01 2011 +0000	Update the Windows minimum QuickTime version. Unfortunately, we can't do this for Mac yet as the QuickTime versioning is inconsistent in Mac OS X 10.5.x vs. 10.6.x. 10.6.x leaves the version as 7.6.6 even with the security updates applied?? TEST=none	none		http://codereview.chromium.org/6541049	svn://svn.chromium.org/chrome/trunk/src@75534 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index c72c934..5aa1a99 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -86,7 +86,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline> // TODO(panayiotis): We should group "RealJukebox NS Plugin" with the rest of <newline> // the RealPlayer files. <newline> static const VersionRangeDefinition kQuicktimeVersionRange[] = { <newline>-    { "", "", "7.6.8", true } <newline>+    { "", "", "7.6.9", true } <newline> }; <newline> static const VersionRangeDefinition kJavaVersionRange[] = { <newline>     { "0", "7", "6.0.240", true }  // "240" is not a typo.
77528fdc3d04c24cc7b06a8f4ebe7d13e7f6832	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Feb 21 09:22:01 2011 +0000	Update the Windows minimum QuickTime version. Unfortunately, we can't do this for Mac yet as the QuickTime versioning is inconsistent in Mac OS X 10.5.x vs. 10.6.x. 10.6.x leaves the version as 7.6.6 even with the security updates applied?? TEST=none	none		http://codereview.chromium.org/6541049	svn://svn.chromium.org/chrome/trunk/src@75534 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index c72c934..5aa1a99 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -86,7 +86,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline> // TODO(panayiotis): We should group "RealJukebox NS Plugin" with the rest of <newline> // the RealPlayer files. <newline> static const VersionRangeDefinition kQuicktimeVersionRange[] = { <newline>-    { "", "", "7.6.8", true } <newline>+    { "", "", "7.6.9", true } <newline> }; <newline> static const VersionRangeDefinition kJavaVersionRange[] = { <newline>     { "0", "7", "6.0.240", true }  // "240" is not a typo.
265882e5f4e50f1a513649cd1f5bcc1a8852946	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 17 03:56:56 2011 +0000	Include subdomains in the *.google.com HSTS entries. It is neccessary in order to fully protect against "Cookie Forcing": http://scarybeastsecurity.blogspot.com/2008/11/cookie-forcing.html (The attack would otherwise be: 302 the user to http://blah.checkout.google.com/ and then respond with a Set-Cookie for the .checkout.google.com domain, in order to mess with the integrity of that domain via cookie collisions). TEST=none	none		http://codereview.chromium.org/6529048	svn://svn.chromium.org/chrome/trunk/src@75231 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state.cc b/net/base/transport_security_state.cc <newline>index aed714c..d4cea15 100644 <newline>--- a/net/base/transport_security_state.cc <newline>+++ b/net/base/transport_security_state.cc <newline>@@ -436,9 +436,9 @@ bool TransportSecurityState::IsPreloadedSTS( <newline>     {17, false, "\002id\010mayfirst\003org"}, <newline>     {20, false, "\005lists\010mayfirst\003org"}, <newline>     {19, true, "\015splendidbacon\003com"}, <newline>-    {19, false, "\006health\006google\003com"}, <newline>-    {21, false, "\010checkout\006google\003com"}, <newline>-    {19, false, "\006chrome\006google\003com"}, <newline>+    {19, true, "\006health\006google\003com"}, <newline>+    {21, true, "\010checkout\006google\003com"}, <newline>+    {19, true, "\006chrome\006google\003com"}, <newline>   }; <newline>   static const size_t kNumPreloadedSTS = ARRAYSIZE_UNSAFE(kPreloadedSTS);
e307db7ca8178fb529b9b80e195ab9be5ef2bcc	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 17 03:56:56 2011 +0000	Include subdomains in the *.google.com HSTS entries. It is neccessary in order to fully protect against "Cookie Forcing": http://scarybeastsecurity.blogspot.com/2008/11/cookie-forcing.html (The attack would otherwise be: 302 the user to http://blah.checkout.google.com/ and then respond with a Set-Cookie for the .checkout.google.com domain, in order to mess with the integrity of that domain via cookie collisions). TEST=none	none		http://codereview.chromium.org/6529048	svn://svn.chromium.org/chrome/trunk/src@75231 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state.cc b/net/base/transport_security_state.cc <newline>index aed714c..d4cea15 100644 <newline>--- a/net/base/transport_security_state.cc <newline>+++ b/net/base/transport_security_state.cc <newline>@@ -436,9 +436,9 @@ bool TransportSecurityState::IsPreloadedSTS( <newline>     {17, false, "\002id\010mayfirst\003org"}, <newline>     {20, false, "\005lists\010mayfirst\003org"}, <newline>     {19, true, "\015splendidbacon\003com"}, <newline>-    {19, false, "\006health\006google\003com"}, <newline>-    {21, false, "\010checkout\006google\003com"}, <newline>-    {19, false, "\006chrome\006google\003com"}, <newline>+    {19, true, "\006health\006google\003com"}, <newline>+    {21, true, "\010checkout\006google\003com"}, <newline>+    {19, true, "\006chrome\006google\003com"}, <newline>   }; <newline>   static const size_t kNumPreloadedSTS = ARRAYSIZE_UNSAFE(kPreloadedSTS);
c8928eda7de694212d4ffff481ac78f399daf70	ricow@chromium.org <ricow@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 15 06:57:21 2011 +0000	Revert 74817 - Update V8 to version 3.1.4 We fail a webkit security tests, reverting to investigate.			http://codereview.chromium.org/6499011	svn://svn.chromium.org/chrome/trunk/src@74925 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 8ddd470..5665d44 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -12,7 +12,7 @@ vars = { <newline>   "libvpx_revision": "65287", <newline>   "ffmpeg_revision": "74188", <newline>   "skia_revision": "788", <newline>-  "v8_revision": "6768", <newline>+  "v8_revision": "6711", <newline> } <newline> deps = {
f980796c6c9df7bd06210397ffa5dad155ebf66	ricow@chromium.org <ricow@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 15 06:57:21 2011 +0000	Revert 74817 - Update V8 to version 3.1.4 We fail a webkit security tests, reverting to investigate.			http://codereview.chromium.org/6499011	svn://svn.chromium.org/chrome/trunk/src@74925 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 8ddd470..5665d44 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -12,7 +12,7 @@ vars = { <newline>   "libvpx_revision": "65287", <newline>   "ffmpeg_revision": "74188", <newline>   "skia_revision": "788", <newline>-  "v8_revision": "6768", <newline>+  "v8_revision": "6711", <newline> } <newline> deps = {
0bfb15d9f8d3842ba4aa3b6d6822318fb5f5b6e	panayiotis@google.com <panayiotis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Feb 14 23:04:04 2011 +0000	New versions for Adobe Reader, Flash, Shockwave and RealPlayer. http://www.adobe.com/support/security/bulletins/apsb11-03.html http://www.adobe.com/support/security/bulletins/apsb11-02.html http://www.adobe.com/support/security/bulletins/apsb11-01.html http://service.real.com/realplayer/security/01272011_player/en/ TEST=Install latest versions of Realplayer, Adobe Reader, Flash (disabling the bundled), Reader and go to about:plugins. No warnings should show up. If the versions are old, warnings should show up.	72480		http://codereview.chromium.org/6471004	svn://svn.chromium.org/chrome/trunk/src@74870 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index a92c145..5ca9273 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -29,7 +29,10 @@ FilePath::CharType kDefaultPluginLibraryName[] = <newline> // Some version ranges can be shared across operating systems. This should be <newline> // done where possible to avoid duplication. <newline> static const VersionRangeDefinition kFlashVersionRange[] = { <newline>-    { "", "", "10.1.102", false } <newline>+    { "", "", "10.2.152", false } <newline>+}; <newline>+static const VersionRangeDefinition kShockwaveVersionRange[] = { <newline>+    { "",  "", "11.5.9.620", true } <newline> }; <newline> // Similarly, try and share the group definition for plug-ins that are <newline>@@ -38,11 +41,15 @@ static const PluginGroupDefinition kFlashDefinition = { <newline>     "adobe-flash-player", "Flash", "Shockwave Flash", kFlashVersionRange, <newline>     arraysize(kFlashVersionRange), "http://get.adobe.com/flashplayer/" }; <newline>+static const PluginGroupDefinition kShockwaveDefinition = { <newline>+    "shockwave", PluginGroup::kShockwaveGroupName, "Shockwave for Director", <newline>+    kShockwaveVersionRange, arraysize(kShockwaveVersionRange), <newline>+    "http://www.adobe.com/shockwave/download/" }; <newline>+ <newline> #if defined(OS_MACOSX) <newline> // Plugin Groups for Mac. <newline> // Plugins are listed here as soon as vulnerabilities and solutions <newline> // (new versions) are published. <newline>-// TODO(panayiotis): Get the Real Player version on Mac, somehow. <newline> static const VersionRangeDefinition kQuicktimeVersionRange[] = { <newline>     { "", "", "7.6.6", true } <newline> }; <newline>@@ -56,10 +63,8 @@ static const VersionRangeDefinition kSilverlightVersionRange[] = { <newline> static const VersionRangeDefinition kFlip4MacVersionRange[] = { <newline>     { "", "", "2.2.1", false } <newline> }; <newline>-static const VersionRangeDefinition kShockwaveVersionRange[] = { <newline>-    { "",  "", "11.5.9.615", true } <newline>-}; <newline>-// TODO(cevans) - I don't see Adobe Reader in here for Mac. <newline>+// Note: The Adobe Reader browser plug-in is not supported in Chrome. <newline>+// Note: The Real Player plugin for mac doesn't expose a version at all. <newline> static const PluginGroupDefinition kGroupDefinitions[] = { <newline>   kFlashDefinition, <newline>   { "apple-quicktime", PluginGroup::kQuickTimeGroupName, "QuickTime Plug-in", <newline>@@ -74,9 +79,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline>   { "flip4mac", "Flip4Mac", "Flip4Mac", kFlip4MacVersionRange, <newline>     arraysize(kFlip4MacVersionRange), <newline>     "http://www.telestream.net/flip4mac-wmv/overview.htm" }, <newline>-  { "shockwave", PluginGroup::kShockwaveGroupName, "Shockwave for Director", <newline>-    kShockwaveVersionRange, arraysize(kShockwaveVersionRange), <newline>-    "http://www.adobe.com/shockwave/download/" } <newline>+  kShockwaveDefinition <newline> }; <newline> #elif defined(OS_WIN) <newline>@@ -89,20 +92,20 @@ static const VersionRangeDefinition kJavaVersionRange[] = { <newline>     { "0", "7", "6.0.220", true }  // "220" is not a typo. <newline> }; <newline> static const VersionRangeDefinition kAdobeReaderVersionRange[] = { <newline>-    { "10", "11", "", false }, <newline>-    { "9", "10", "9.4.1", false }, <newline>-    { "0", "9", "8.2.5", false } <newline>+    { "10", "11", "10.0.1", false }, <newline>+    { "9", "10", "9.4.2", false }, <newline>+    { "0", "9", "8.2.6", false } <newline> }; <newline> static const VersionRangeDefinition kSilverlightVersionRange[] = { <newline>     { "0", "4", "3.0.50106.0", false }, <newline>     { "4", "5", "", false } <newline> }; <newline>-static const VersionRangeDefinition kShockwaveVersionRange[] = { <newline>-    { "", "", "11.5.9.615", true } <newline>-}; <newline> static const VersionRangeDefinition kDivXVersionRange[] = { <newline>     { "", "", "1.4.3.4", false } <newline> }; <newline>+static const VersionRangeDefinition kRealPlayerVersionRange[] = { <newline>+    { "", "", "12.0.1.633", true } <newline>+}; <newline> static const PluginGroupDefinition kGroupDefinitions[] = { <newline>   kFlashDefinition, <newline>   { "apple-quicktime", PluginGroup::kQuickTimeGroupName, "QuickTime Plug-in", <newline>@@ -116,23 +119,19 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline>   { "silverlight", "Silverlight", "Silverlight", kSilverlightVersionRange, <newline>     arraysize(kSilverlightVersionRange), <newline>     "http://www.microsoft.com/getsilverlight/" }, <newline>-  { "shockwave", PluginGroup::kShockwaveGroupName, "Shockwave for Director", <newline>-    kShockwaveVersionRange, arraysize(kShockwaveVersionRange), <newline>-    "http://www.adobe.com/shockwave/download/" }, <newline>+  kShockwaveDefinition, <newline>   { "divx-player", "DivX Player", "DivX Web Player", kDivXVersionRange, <newline>     arraysize(kDivXVersionRange), <newline>     "http://download.divx.com/divx/autoupdate/player/" <newline>     "DivXWebPlayerInstaller.exe" }, <newline>+  { "realplayer", "RealPlayer", "RealPlayer", <newline>+    kRealPlayerVersionRange, arraysize(kRealPlayerVersionRange), <newline>+    "http://www.real.com/realplayer/downloads" }, <newline>   // These are here for grouping, no vulnerabilities known. <newline>   { "windows-media-player", "Windows Media Player", "Windows Media Player", <newline>     NULL, 0, "" }, <newline>   { "microsoft-office", "Microsoft Office", "Microsoft Office", <newline>     NULL, 0, "" }, <newline>-  // TODO(panayiotis): The vulnerable versions are <newline>-  //  (v >=  6.0.12.1040 && v <= 6.0.12.1663) <newline>-  //  || v == 6.0.12.1698  || v == 6.0.12.1741 <newline>-  { "realplayer", "RealPlayer", "RealPlayer", NULL, 0, <newline>-    "www.real.com/realplayer/downloads" }, <newline> }; <newline> #else
4d9ffe7d1a77ff253af77599a36fdc67c42456b	panayiotis@google.com <panayiotis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Feb 14 23:04:04 2011 +0000	New versions for Adobe Reader, Flash, Shockwave and RealPlayer. http://www.adobe.com/support/security/bulletins/apsb11-03.html http://www.adobe.com/support/security/bulletins/apsb11-02.html http://www.adobe.com/support/security/bulletins/apsb11-01.html http://service.real.com/realplayer/security/01272011_player/en/ TEST=Install latest versions of Realplayer, Adobe Reader, Flash (disabling the bundled), Reader and go to about:plugins. No warnings should show up. If the versions are old, warnings should show up.	72480		http://codereview.chromium.org/6471004	svn://svn.chromium.org/chrome/trunk/src@74870 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index a92c145..5ca9273 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -29,7 +29,10 @@ FilePath::CharType kDefaultPluginLibraryName[] = <newline> // Some version ranges can be shared across operating systems. This should be <newline> // done where possible to avoid duplication. <newline> static const VersionRangeDefinition kFlashVersionRange[] = { <newline>-    { "", "", "10.1.102", false } <newline>+    { "", "", "10.2.152", false } <newline>+}; <newline>+static const VersionRangeDefinition kShockwaveVersionRange[] = { <newline>+    { "",  "", "11.5.9.620", true } <newline> }; <newline> // Similarly, try and share the group definition for plug-ins that are <newline>@@ -38,11 +41,15 @@ static const PluginGroupDefinition kFlashDefinition = { <newline>     "adobe-flash-player", "Flash", "Shockwave Flash", kFlashVersionRange, <newline>     arraysize(kFlashVersionRange), "http://get.adobe.com/flashplayer/" }; <newline>+static const PluginGroupDefinition kShockwaveDefinition = { <newline>+    "shockwave", PluginGroup::kShockwaveGroupName, "Shockwave for Director", <newline>+    kShockwaveVersionRange, arraysize(kShockwaveVersionRange), <newline>+    "http://www.adobe.com/shockwave/download/" }; <newline>+ <newline> #if defined(OS_MACOSX) <newline> // Plugin Groups for Mac. <newline> // Plugins are listed here as soon as vulnerabilities and solutions <newline> // (new versions) are published. <newline>-// TODO(panayiotis): Get the Real Player version on Mac, somehow. <newline> static const VersionRangeDefinition kQuicktimeVersionRange[] = { <newline>     { "", "", "7.6.6", true } <newline> }; <newline>@@ -56,10 +63,8 @@ static const VersionRangeDefinition kSilverlightVersionRange[] = { <newline> static const VersionRangeDefinition kFlip4MacVersionRange[] = { <newline>     { "", "", "2.2.1", false } <newline> }; <newline>-static const VersionRangeDefinition kShockwaveVersionRange[] = { <newline>-    { "",  "", "11.5.9.615", true } <newline>-}; <newline>-// TODO(cevans) - I don't see Adobe Reader in here for Mac. <newline>+// Note: The Adobe Reader browser plug-in is not supported in Chrome. <newline>+// Note: The Real Player plugin for mac doesn't expose a version at all. <newline> static const PluginGroupDefinition kGroupDefinitions[] = { <newline>   kFlashDefinition, <newline>   { "apple-quicktime", PluginGroup::kQuickTimeGroupName, "QuickTime Plug-in", <newline>@@ -74,9 +79,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline>   { "flip4mac", "Flip4Mac", "Flip4Mac", kFlip4MacVersionRange, <newline>     arraysize(kFlip4MacVersionRange), <newline>     "http://www.telestream.net/flip4mac-wmv/overview.htm" }, <newline>-  { "shockwave", PluginGroup::kShockwaveGroupName, "Shockwave for Director", <newline>-    kShockwaveVersionRange, arraysize(kShockwaveVersionRange), <newline>-    "http://www.adobe.com/shockwave/download/" } <newline>+  kShockwaveDefinition <newline> }; <newline> #elif defined(OS_WIN) <newline>@@ -89,20 +92,20 @@ static const VersionRangeDefinition kJavaVersionRange[] = { <newline>     { "0", "7", "6.0.220", true }  // "220" is not a typo. <newline> }; <newline> static const VersionRangeDefinition kAdobeReaderVersionRange[] = { <newline>-    { "10", "11", "", false }, <newline>-    { "9", "10", "9.4.1", false }, <newline>-    { "0", "9", "8.2.5", false } <newline>+    { "10", "11", "10.0.1", false }, <newline>+    { "9", "10", "9.4.2", false }, <newline>+    { "0", "9", "8.2.6", false } <newline> }; <newline> static const VersionRangeDefinition kSilverlightVersionRange[] = { <newline>     { "0", "4", "3.0.50106.0", false }, <newline>     { "4", "5", "", false } <newline> }; <newline>-static const VersionRangeDefinition kShockwaveVersionRange[] = { <newline>-    { "", "", "11.5.9.615", true } <newline>-}; <newline> static const VersionRangeDefinition kDivXVersionRange[] = { <newline>     { "", "", "1.4.3.4", false } <newline> }; <newline>+static const VersionRangeDefinition kRealPlayerVersionRange[] = { <newline>+    { "", "", "12.0.1.633", true } <newline>+}; <newline> static const PluginGroupDefinition kGroupDefinitions[] = { <newline>   kFlashDefinition, <newline>   { "apple-quicktime", PluginGroup::kQuickTimeGroupName, "QuickTime Plug-in", <newline>@@ -116,23 +119,19 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline>   { "silverlight", "Silverlight", "Silverlight", kSilverlightVersionRange, <newline>     arraysize(kSilverlightVersionRange), <newline>     "http://www.microsoft.com/getsilverlight/" }, <newline>-  { "shockwave", PluginGroup::kShockwaveGroupName, "Shockwave for Director", <newline>-    kShockwaveVersionRange, arraysize(kShockwaveVersionRange), <newline>-    "http://www.adobe.com/shockwave/download/" }, <newline>+  kShockwaveDefinition, <newline>   { "divx-player", "DivX Player", "DivX Web Player", kDivXVersionRange, <newline>     arraysize(kDivXVersionRange), <newline>     "http://download.divx.com/divx/autoupdate/player/" <newline>     "DivXWebPlayerInstaller.exe" }, <newline>+  { "realplayer", "RealPlayer", "RealPlayer", <newline>+    kRealPlayerVersionRange, arraysize(kRealPlayerVersionRange), <newline>+    "http://www.real.com/realplayer/downloads" }, <newline>   // These are here for grouping, no vulnerabilities known. <newline>   { "windows-media-player", "Windows Media Player", "Windows Media Player", <newline>     NULL, 0, "" }, <newline>   { "microsoft-office", "Microsoft Office", "Microsoft Office", <newline>     NULL, 0, "" }, <newline>-  // TODO(panayiotis): The vulnerable versions are <newline>-  //  (v >=  6.0.12.1040 && v <= 6.0.12.1663) <newline>-  //  || v == 6.0.12.1698  || v == 6.0.12.1741 <newline>-  { "realplayer", "RealPlayer", "RealPlayer", NULL, 0, <newline>-    "www.real.com/realplayer/downloads" }, <newline> }; <newline> #else
4c82b1c106ea9168a3d3ad7367c1cc5ad76358d	achuith@chromium.org <achuith@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 10 23:47:10 2011 +0000	Cleanup in task management and threading in FilebrowseHandler. CreateNewFolder should be on file thread. Delete TaskProxy on ui thread where applicable. Use scoped_refptr for TaskProxy lifetime management. Deprecate use of current_task_ as much as possible by using function args instead. Fix a bug where certain actions cannot be performed running Cros chrome on linux due to over-zealous security. This includes downloads, deletes and copies. Filter out .crdownload files. Fix lint errors. TEST=Create a folder using advanced filesystem Save As dialog in debug mode, threading asserts should no longer fire. Download a large non-dangerous file, .crdownload file should no longer appear.	chromium-os:8130		http://codereview.chromium.org/6246118	svn://svn.chromium.org/chrome/trunk/src@74524 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/dom_ui/filebrowse_ui.cc b/chrome/browser/dom_ui/filebrowse_ui.cc <newline>index 81dddb2..a522ac9 100644 <newline>--- a/chrome/browser/dom_ui/filebrowse_ui.cc <newline>+++ b/chrome/browser/dom_ui/filebrowse_ui.cc <newline>@@ -4,6 +4,9 @@ <newline> #include "chrome/browser/dom_ui/filebrowse_ui.h" <newline>+#include <algorithm> <newline>+#include <vector> <newline>+ <newline> #include "base/callback.h" <newline> #include "base/command_line.h" <newline> #include "base/file_util.h" <newline>@@ -135,7 +138,7 @@ class FilebrowseHandler : public net::DirectoryLister::DirectoryListerDelegate, <newline>   // Callback for the "getRoots" message. <newline>   void HandleGetRoots(const ListValue* args); <newline>-  void GetChildrenForPath(FilePath& path, bool is_refresh); <newline>+  void GetChildrenForPath(const FilePath& path, bool is_refresh); <newline>   void OnURLFetchComplete(const URLFetcher* source, <newline>                           const GURL& url, <newline>@@ -146,14 +149,14 @@ class FilebrowseHandler : public net::DirectoryLister::DirectoryListerDelegate, <newline>   // Callback for the "getChildren" message. <newline>   void HandleGetChildren(const ListValue* args); <newline>- // Callback for the "refreshDirectory" message. <newline>+  // Callback for the "refreshDirectory" message. <newline>   void HandleRefreshDirectory(const ListValue* args); <newline>   void HandleIsAdvancedEnabled(const ListValue* args); <newline>   // Callback for the "getMetadata" message. <newline>   void HandleGetMetadata(const ListValue* args); <newline>- // Callback for the "openNewWindow" message. <newline>+  // Callback for the "openNewWindow" message. <newline>   void OpenNewFullWindow(const ListValue* args); <newline>   void OpenNewPopupWindow(const ListValue* args); <newline>@@ -170,8 +173,8 @@ class FilebrowseHandler : public net::DirectoryLister::DirectoryListerDelegate, <newline>   void HandleDeleteFile(const ListValue* args); <newline>   void HandleCopyFile(const ListValue* value); <newline>-  void CopyFile(const FilePath& src, const FilePath& dest); <newline>-  void DeleteFile(const FilePath& path); <newline>+  void CopyFile(const FilePath& src, const FilePath& dest, TaskProxy* task); <newline>+  void DeleteFile(const FilePath& path, TaskProxy* task); <newline>   void FireDeleteComplete(const FilePath& path); <newline>   void FireCopyComplete(const FilePath& src, const FilePath& dest); <newline>@@ -180,6 +183,8 @@ class FilebrowseHandler : public net::DirectoryLister::DirectoryListerDelegate, <newline>   void HandleCancelDownload(const ListValue* args); <newline>   void HandleAllowDownload(const ListValue* args); <newline>+  void CreateNewFolder(const FilePath& path) const; <newline>+ <newline>   void ReadInFile(); <newline>   void FireUploadComplete(); <newline>@@ -189,7 +194,7 @@ class FilebrowseHandler : public net::DirectoryLister::DirectoryListerDelegate, <newline>   void HandleValidateSavePath(const ListValue* args); <newline>   // Validate a save path on file thread. <newline>-  void ValidateSavePathOnFileThread(const FilePath& save_path); <newline>+  void ValidateSavePathOnFileThread(const FilePath& save_path, TaskProxy* task); <newline>   // Fire save path validation result to JS onValidatedSavePath. <newline>   void FireOnValidatedSavePathOnUIThread(bool valid, const FilePath& save_path); <newline>@@ -209,6 +214,9 @@ class FilebrowseHandler : public net::DirectoryLister::DirectoryListerDelegate, <newline>   void SendNewDownload(DownloadItem* download); <newline>+  bool ValidateSaveDir(const FilePath& save_dir, bool exists) const; <newline>+  bool AccessDisabled(const FilePath& path) const; <newline>+ <newline>   scoped_ptr<ListValue> filelist_value_; <newline>   FilePath currentpath_; <newline>   Profile* profile_; <newline>@@ -240,56 +248,71 @@ class TaskProxy : public base::RefCountedThreadSafe<TaskProxy> { <newline>             const FilePath& path) <newline>       : handler_(handler), <newline>         src_(path) {} <newline>+ <newline>+  // TaskProxy is created on the UI thread, so in some cases, <newline>+  // we need to post back to the UI thread for destruction. <newline>+  void DeleteOnUIThread() { <newline>+    BrowserThread::PostTask( <newline>+        BrowserThread::UI, FROM_HERE, <newline>+        NewRunnableMethod(this, &TaskProxy::DoNothing)); <newline>+  } <newline>+ <newline>+  void DoNothing() {} <newline>+ <newline>   void ReadInFileProxy() { <newline>-    if (handler_) { <newline>+    if (handler_) <newline>       handler_->ReadInFile(); <newline>-    } <newline>+    DeleteOnUIThread(); <newline>   } <newline>+ <newline>   void DeleteFetcher(URLFetcher* fetch) { <newline>     delete fetch; <newline>   } <newline>+ <newline>   void SendPicasawebRequestProxy() { <newline>-    if (handler_) { <newline>+    if (handler_) <newline>       handler_->SendPicasawebRequest(); <newline>-    } <newline>+    DeleteOnUIThread(); <newline>   } <newline>+ <newline>   void FireUploadCompleteProxy() { <newline>-    if (handler_) { <newline>+    if (handler_) <newline>       handler_->FireUploadComplete(); <newline>-    } <newline>   } <newline>   void DeleteFileProxy() { <newline>-    if (handler_) { <newline>-      handler_->DeleteFile(src_); <newline>-    } <newline>+    if (handler_) <newline>+      handler_->DeleteFile(src_, this); <newline>   } <newline>   void CopyFileProxy() { <newline>-    if (handler_) { <newline>-      handler_->CopyFile(src_, dest_); <newline>-    } <newline>+    if (handler_) <newline>+      handler_->CopyFile(src_, dest_, this); <newline>+  } <newline>+ <newline>+  void CreateNewFolderProxy() { <newline>+    if (handler_) <newline>+      handler_->CreateNewFolder(src_); <newline>+    DeleteOnUIThread(); <newline>   } <newline>   void FireDeleteCompleteProxy() { <newline>-    if (handler_) { <newline>+    if (handler_) <newline>       handler_->FireDeleteComplete(src_); <newline>-    } <newline>   } <newline>   void FireCopyCompleteProxy() { <newline>-    if (handler_) { <newline>+    if (handler_) <newline>       handler_->FireCopyComplete(src_, dest_); <newline>-    } <newline>   } <newline>   void ValidateSavePathOnFileThread() { <newline>     if (handler_) <newline>-      handler_->ValidateSavePathOnFileThread(src_); <newline>+      handler_->ValidateSavePathOnFileThread(src_, this); <newline>   } <newline>-  void FireOnValidatedSavePathOnUIThread(bool valid, <newline>-                                         const FilePath& save_path) { <newline>+ <newline>+  void FireOnValidatedSavePathOnUIThread(bool valid) { <newline>     if (handler_) <newline>-      handler_->FireOnValidatedSavePathOnUIThread(valid, save_path); <newline>+      handler_->FireOnValidatedSavePathOnUIThread(valid, src_); <newline>   } <newline>  private: <newline>@@ -411,12 +434,11 @@ FilebrowseHandler::~FilebrowseHandler() { <newline>   download_manager_->RemoveObserver(this); <newline>   URLFetcher* fetch = fetch_.release(); <newline>   if (fetch) { <newline>-    TaskProxy* task = new TaskProxy(AsWeakPtr(), currentpath_); <newline>-    task->AddRef(); <newline>+    scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), currentpath_); <newline>     BrowserThread::PostTask( <newline>         BrowserThread::FILE, FROM_HERE, <newline>         NewRunnableMethod( <newline>-            task, &TaskProxy::DeleteFetcher, fetch)); <newline>+            task.get(), &TaskProxy::DeleteFetcher, fetch)); <newline>   } <newline> } <newline>@@ -432,17 +454,16 @@ WebUIMessageHandler* FilebrowseHandler::Attach(DOMUI* dom_ui) { <newline> void FilebrowseHandler::Init() { <newline>   download_manager_ = profile_->GetDownloadManager(); <newline>   download_manager_->AddObserver(this); <newline>-  TaskProxy* task = new TaskProxy(AsWeakPtr(), currentpath_); <newline>-  task->AddRef(); <newline>-  current_task_ = task; <newline>   static bool sent_request = false; <newline>   if (!sent_request) { <newline>     // If we have not sent a request before, we should do one in order to <newline>     // ensure that we have the correct cookies. This is for uploads. <newline>+    scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), currentpath_); <newline>+    current_task_ = task; <newline>     BrowserThread::PostTask( <newline>         BrowserThread::FILE, FROM_HERE, <newline>         NewRunnableMethod( <newline>-            task, &TaskProxy::SendPicasawebRequestProxy)); <newline>+            task.get(), &TaskProxy::SendPicasawebRequestProxy)); <newline>     sent_request = true; <newline>   } <newline> } <newline>@@ -513,12 +534,12 @@ void FilebrowseHandler::FireUploadComplete() { <newline>     LOG(ERROR) << "Unable to get username"; <newline>     return; <newline>   } <newline>-  int location = username.find_first_of('@',0); <newline>+  int location = username.find_first_of('@', 0); <newline>   if (location <= 0) { <newline>     LOG(ERROR) << "Username not formatted correctly"; <newline>     return; <newline>   } <newline>-  username = username.erase(username.find_first_of('@',0)); <newline>+  username = username.erase(username.find_first_of('@', 0)); <newline>   std::string picture_url = kPicasawebBaseUrl; <newline>   picture_url += username; <newline>   picture_url += kPicasawebDropBox; <newline>@@ -582,7 +603,6 @@ void FilebrowseHandler::HandleGetRoots(const ListValue* args) { <newline>   page_value->SetString(kPropertyPath, "/media"); <newline>   page_value->SetString(kPropertyTitle, "Removeable"); <newline>   page_value->SetBoolean(kPropertyDirectory, true); <newline>- <newline>   results_value.Append(page_value); <newline> #endif <newline>   FilePath default_download_path; <newline>@@ -609,11 +629,20 @@ void FilebrowseHandler::HandleCreateNewFolder(const ListValue* args) { <newline>   std::string path = WideToUTF8(ExtractStringValue(args)); <newline>   FilePath currentpath(path); <newline>-  if (!file_util::CreateDirectory(currentpath)) <newline>-    LOG(ERROR) << "unable to create directory"; <newline>+  scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), currentpath); <newline>+  BrowserThread::PostTask( <newline>+      BrowserThread::FILE, FROM_HERE, <newline>+      NewRunnableMethod( <newline>+          task.get(), &TaskProxy::CreateNewFolderProxy)); <newline> #endif <newline> } <newline>+void FilebrowseHandler::CreateNewFolder(const FilePath& currentpath) const { <newline>+  if (!ValidateSaveDir(currentpath, false) || <newline>+      !file_util::CreateDirectory(currentpath)) <newline>+    LOG(ERROR) << "Unable to create directory " << currentpath.value(); <newline>+} <newline>+ <newline> void FilebrowseHandler::PlayMediaFile(const ListValue* args) { <newline> #if defined(OS_CHROMEOS) <newline>   std::string url = WideToUTF8(ExtractStringValue(args)); <newline>@@ -665,7 +694,7 @@ void FilebrowseHandler::HandlePauseToggleDownload(const ListValue* args) { <newline> #if defined(OS_CHROMEOS) <newline>   int id; <newline>   ExtractIntegerValue(args, &id); <newline>-  if ((id - 1) >= (int)active_download_items_.size()) { <newline>+  if ((id - 1) >= static_cast<int>(active_download_items_.size())) { <newline>     return; <newline>   } <newline>   DownloadItem* item = active_download_items_[id]; <newline>@@ -677,7 +706,7 @@ void FilebrowseHandler::HandleAllowDownload(const ListValue* args) { <newline> #if defined(OS_CHROMEOS) <newline>   int id; <newline>   ExtractIntegerValue(args, &id); <newline>-  if ((id - 1) >= (int)active_download_items_.size()) { <newline>+  if ((id - 1) >= static_cast<int>(active_download_items_.size())) { <newline>     return; <newline>   } <newline>@@ -690,7 +719,7 @@ void FilebrowseHandler::HandleCancelDownload(const ListValue* args) { <newline> #if defined(OS_CHROMEOS) <newline>   int id; <newline>   ExtractIntegerValue(args, &id); <newline>-  if ((id - 1) >= (int)active_download_items_.size()) { <newline>+  if ((id - 1) >= static_cast<int>(active_download_items_.size())) { <newline>     return; <newline>   } <newline>   DownloadItem* item = active_download_items_[id]; <newline>@@ -757,12 +786,12 @@ void FilebrowseHandler::ReadInFile() { <newline>     LOG(ERROR) << "Unable to get username"; <newline>     return; <newline>   } <newline>-  int location = username.find_first_of('@',0); <newline>+  int location = username.find_first_of('@', 0); <newline>   if (location <= 0) { <newline>     LOG(ERROR) << "Username not formatted correctly"; <newline>     return; <newline>   } <newline>-  username = username.erase(username.find_first_of('@',0)); <newline>+  username = username.erase(username.find_first_of('@', 0)); <newline>   std::string url = kPicasawebUserPrefix; <newline>   url += username; <newline>   url += kPicasawebDefault; <newline>@@ -798,17 +827,17 @@ void FilebrowseHandler::UploadToPicasaweb(const ListValue* args) { <newline>   current_file_uploaded_ = search_string; <newline>   //  ReadInFile(); <newline>   FilePath current_path(search_string); <newline>-  TaskProxy* task = new TaskProxy(AsWeakPtr(), current_path); <newline>-  task->AddRef(); <newline>+  scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), current_path); <newline>   current_task_ = task; <newline>   BrowserThread::PostTask( <newline>       BrowserThread::FILE, FROM_HERE, <newline>       NewRunnableMethod( <newline>-          task, &TaskProxy::ReadInFileProxy)); <newline>+          task.get(), &TaskProxy::ReadInFileProxy)); <newline> #endif <newline> } <newline>-void FilebrowseHandler::GetChildrenForPath(FilePath& path, bool is_refresh) { <newline>+void FilebrowseHandler::GetChildrenForPath(const FilePath& path, <newline>+                                           bool is_refresh) { <newline>   filelist_value_.reset(new ListValue()); <newline>   currentpath_ = path; <newline>@@ -822,15 +851,16 @@ void FilebrowseHandler::GetChildrenForPath(FilePath& path, bool is_refresh) { <newline> #if defined(OS_CHROMEOS) <newline>   // Don't allow listing files in inaccessible dirs. <newline>-  if (net::URLRequestFileJob::AccessDisabled(path)) <newline>+  if (AccessDisabled(path)) <newline>     return; <newline>-#endif  // OS_CHROMEOS <newline>+#endif <newline>   FilePath default_download_path; <newline>   if (!PathService::Get(chrome::DIR_DEFAULT_DOWNLOADS, <newline>                         &default_download_path)) { <newline>     NOTREACHED(); <newline>   } <newline>+ <newline>   if (currentpath_ == default_download_path) { <newline>     lister_ = new net::DirectoryLister(currentpath_, <newline>                                        false, <newline>@@ -862,6 +892,14 @@ void FilebrowseHandler::OnListFile( <newline>   if (data.info.filename[0] == '.') { <newline>     return; <newline>   } <newline>+ <newline>+  // Suppress .crdownload files. <newline>+  static const char crdownload[] = (".crdownload"); <newline>+  static const size_t crdownload_size = arraysize(crdownload); <newline>+  const std::string& filename = data.info.filename; <newline>+  if ((filename.size() > crdownload_size) && <newline>+      (filename.rfind(crdownload) == (filename.size() - crdownload_size))) <newline>+    return; <newline> #endif <newline>   DictionaryValue* file_value = new DictionaryValue(); <newline>@@ -946,16 +984,18 @@ void FilebrowseHandler::SendNewDownload(DownloadItem* download) { <newline>   dom_ui_->CallJavascriptFunction(L"newDownload", results_value); <newline> } <newline>-void FilebrowseHandler::DeleteFile(const FilePath& path) { <newline>+void FilebrowseHandler::DeleteFile(const FilePath& path, TaskProxy* task) { <newline>   if (!file_util::Delete(path, true)) { <newline>     LOG(ERROR) << "unable to delete directory"; <newline>   } <newline>   BrowserThread::PostTask( <newline>       BrowserThread::UI, FROM_HERE, <newline>-      NewRunnableMethod(current_task_, &TaskProxy::FireDeleteCompleteProxy)); <newline>+      NewRunnableMethod(task, &TaskProxy::FireDeleteCompleteProxy)); <newline> } <newline>-void FilebrowseHandler::CopyFile(const FilePath& src, const FilePath& dest) { <newline>+void FilebrowseHandler::CopyFile(const FilePath& src, <newline>+                                 const FilePath& dest, <newline>+                                 TaskProxy* task) { <newline>   if (file_util::DirectoryExists(src)) { <newline>     if (!file_util::CopyDirectory(src, dest, true)) { <newline>       LOG(ERROR) << "unable to copy directory:" << src.value(); <newline>@@ -967,7 +1007,7 @@ void FilebrowseHandler::CopyFile(const FilePath& src, const FilePath& dest) { <newline>   } <newline>   BrowserThread::PostTask( <newline>       BrowserThread::UI, FROM_HERE, <newline>-      NewRunnableMethod(current_task_, &TaskProxy::FireCopyCompleteProxy)); <newline>+      NewRunnableMethod(task, &TaskProxy::FireCopyCompleteProxy)); <newline> } <newline> void FilebrowseHandler::HandleDeleteFile(const ListValue* args) { <newline>@@ -976,7 +1016,7 @@ void FilebrowseHandler::HandleDeleteFile(const ListValue* args) { <newline>   FilePath currentpath(path); <newline>   // Don't allow file deletion in inaccessible dirs. <newline>-  if (net::URLRequestFileJob::AccessDisabled(currentpath)) <newline>+  if (AccessDisabled(currentpath)) <newline>     return; <newline>   for (unsigned int x = 0; x < active_download_items_.size(); x++) { <newline>@@ -989,13 +1029,11 @@ void FilebrowseHandler::HandleDeleteFile(const ListValue* args) { <newline>       return; <newline>     } <newline>   } <newline>-  TaskProxy* task = new TaskProxy(AsWeakPtr(), currentpath); <newline>-  task->AddRef(); <newline>-  current_task_ = task; <newline>+  scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), currentpath); <newline>   BrowserThread::PostTask( <newline>       BrowserThread::FILE, FROM_HERE, <newline>       NewRunnableMethod( <newline>-          task, &TaskProxy::DeleteFileProxy)); <newline>+          task.get(), &TaskProxy::DeleteFileProxy)); <newline> #endif <newline> } <newline>@@ -1013,16 +1051,15 @@ void FilebrowseHandler::HandleCopyFile(const ListValue* value) { <newline>       FilePath DestPath = FilePath(dest); <newline>       // Don't allow file copy to inaccessible dirs. <newline>-      if (net::URLRequestFileJob::AccessDisabled(DestPath)) <newline>+      if (AccessDisabled(DestPath)) <newline>         return; <newline>-      TaskProxy* task = new TaskProxy(AsWeakPtr(), SrcPath, DestPath); <newline>-      task->AddRef(); <newline>-      current_task_ = task; <newline>+      scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), <newline>+                                                    SrcPath, DestPath); <newline>       BrowserThread::PostTask( <newline>           BrowserThread::FILE, FROM_HERE, <newline>           NewRunnableMethod( <newline>-              task, &TaskProxy::CopyFileProxy)); <newline>+              task.get(), &TaskProxy::CopyFileProxy)); <newline>     } else { <newline>       LOG(ERROR) << "Unable to get string"; <newline>       return; <newline>@@ -1051,29 +1088,39 @@ void FilebrowseHandler::HandleValidateSavePath(const ListValue* args) { <newline> } <newline> void FilebrowseHandler::ValidateSavePathOnFileThread( <newline>-    const FilePath& save_path) { <newline>+    const FilePath& save_path, TaskProxy* task) { <newline> #if defined(OS_CHROMEOS) <newline>   DCHECK(BrowserThread::CurrentlyOn(BrowserThread::FILE)); <newline>+  const bool valid = ValidateSaveDir(save_path.DirName(), true); <newline>+ <newline>+  BrowserThread::PostTask(BrowserThread::UI, FROM_HERE, <newline>+      NewRunnableMethod(task, <newline>+                        &TaskProxy::FireOnValidatedSavePathOnUIThread, <newline>+                        valid)); <newline>+#endif <newline>+} <newline>+ <newline>+bool FilebrowseHandler::ValidateSaveDir(const FilePath& save_dir, <newline>+                                        bool exists) const { <newline>+#if defined(OS_CHROMEOS) <newline>   FilePath default_download_path; <newline>   if (!PathService::Get(chrome::DIR_DEFAULT_DOWNLOADS, <newline>                         &default_download_path)) { <newline>     NOTREACHED(); <newline>   } <newline>-  // Get containing folder of save_path. <newline>-  FilePath save_dir = save_path.DirName(); <newline>- <newline>-  // Valid save path must be inside default download dir. <newline>-  bool valid = default_download_path == save_dir || <newline>-               file_util::ContainsPath(default_download_path, save_dir); <newline>- <newline>-  scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), save_path); <newline>-  BrowserThread::PostTask(BrowserThread::FILE, FROM_HERE, <newline>-      NewRunnableMethod(task.get(), <newline>-                        &TaskProxy::FireOnValidatedSavePathOnUIThread, <newline>-                        valid, save_path)); <newline>+  // Valid save dir must be inside default download dir. <newline>+  if (default_download_path == save_dir) <newline>+    return true; <newline>+  if (exists) { <newline>+      DCHECK(BrowserThread::CurrentlyOn(BrowserThread::FILE)); <newline>+      return file_util::ContainsPath(default_download_path, save_dir); <newline>+  } else { <newline>+    return default_download_path.IsParent(save_dir); <newline>+  } <newline> #endif <newline>+  return false; <newline> } <newline> void FilebrowseHandler::FireOnValidatedSavePathOnUIThread(bool valid, <newline>@@ -1122,6 +1169,11 @@ void FilebrowseHandler::OnDownloadFileCompleted(DownloadItem* download) { <newline>   GetChildrenForPath(currentpath_, true); <newline> } <newline>+bool FilebrowseHandler::AccessDisabled(const FilePath& path) const { <newline>+  return !ValidateSaveDir(path, false) && <newline>+        net::URLRequestFileJob::AccessDisabled(path); <newline>+} <newline>+ <newline> //////////////////////////////////////////////////////////////////////////////// <newline> // <newline> // FileBrowseUI
fec6ffc5f63337ef8d89694a01ecf1d01a2350c	achuith@chromium.org <achuith@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 10 23:47:10 2011 +0000	Cleanup in task management and threading in FilebrowseHandler. CreateNewFolder should be on file thread. Delete TaskProxy on ui thread where applicable. Use scoped_refptr for TaskProxy lifetime management. Deprecate use of current_task_ as much as possible by using function args instead. Fix a bug where certain actions cannot be performed running Cros chrome on linux due to over-zealous security. This includes downloads, deletes and copies. Filter out .crdownload files. Fix lint errors. TEST=Create a folder using advanced filesystem Save As dialog in debug mode, threading asserts should no longer fire. Download a large non-dangerous file, .crdownload file should no longer appear.	chromium-os:8130		http://codereview.chromium.org/6246118	svn://svn.chromium.org/chrome/trunk/src@74524 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/dom_ui/filebrowse_ui.cc b/chrome/browser/dom_ui/filebrowse_ui.cc <newline>index 81dddb2..a522ac9 100644 <newline>--- a/chrome/browser/dom_ui/filebrowse_ui.cc <newline>+++ b/chrome/browser/dom_ui/filebrowse_ui.cc <newline>@@ -4,6 +4,9 @@ <newline> #include "chrome/browser/dom_ui/filebrowse_ui.h" <newline>+#include <algorithm> <newline>+#include <vector> <newline>+ <newline> #include "base/callback.h" <newline> #include "base/command_line.h" <newline> #include "base/file_util.h" <newline>@@ -135,7 +138,7 @@ class FilebrowseHandler : public net::DirectoryLister::DirectoryListerDelegate, <newline>   // Callback for the "getRoots" message. <newline>   void HandleGetRoots(const ListValue* args); <newline>-  void GetChildrenForPath(FilePath& path, bool is_refresh); <newline>+  void GetChildrenForPath(const FilePath& path, bool is_refresh); <newline>   void OnURLFetchComplete(const URLFetcher* source, <newline>                           const GURL& url, <newline>@@ -146,14 +149,14 @@ class FilebrowseHandler : public net::DirectoryLister::DirectoryListerDelegate, <newline>   // Callback for the "getChildren" message. <newline>   void HandleGetChildren(const ListValue* args); <newline>- // Callback for the "refreshDirectory" message. <newline>+  // Callback for the "refreshDirectory" message. <newline>   void HandleRefreshDirectory(const ListValue* args); <newline>   void HandleIsAdvancedEnabled(const ListValue* args); <newline>   // Callback for the "getMetadata" message. <newline>   void HandleGetMetadata(const ListValue* args); <newline>- // Callback for the "openNewWindow" message. <newline>+  // Callback for the "openNewWindow" message. <newline>   void OpenNewFullWindow(const ListValue* args); <newline>   void OpenNewPopupWindow(const ListValue* args); <newline>@@ -170,8 +173,8 @@ class FilebrowseHandler : public net::DirectoryLister::DirectoryListerDelegate, <newline>   void HandleDeleteFile(const ListValue* args); <newline>   void HandleCopyFile(const ListValue* value); <newline>-  void CopyFile(const FilePath& src, const FilePath& dest); <newline>-  void DeleteFile(const FilePath& path); <newline>+  void CopyFile(const FilePath& src, const FilePath& dest, TaskProxy* task); <newline>+  void DeleteFile(const FilePath& path, TaskProxy* task); <newline>   void FireDeleteComplete(const FilePath& path); <newline>   void FireCopyComplete(const FilePath& src, const FilePath& dest); <newline>@@ -180,6 +183,8 @@ class FilebrowseHandler : public net::DirectoryLister::DirectoryListerDelegate, <newline>   void HandleCancelDownload(const ListValue* args); <newline>   void HandleAllowDownload(const ListValue* args); <newline>+  void CreateNewFolder(const FilePath& path) const; <newline>+ <newline>   void ReadInFile(); <newline>   void FireUploadComplete(); <newline>@@ -189,7 +194,7 @@ class FilebrowseHandler : public net::DirectoryLister::DirectoryListerDelegate, <newline>   void HandleValidateSavePath(const ListValue* args); <newline>   // Validate a save path on file thread. <newline>-  void ValidateSavePathOnFileThread(const FilePath& save_path); <newline>+  void ValidateSavePathOnFileThread(const FilePath& save_path, TaskProxy* task); <newline>   // Fire save path validation result to JS onValidatedSavePath. <newline>   void FireOnValidatedSavePathOnUIThread(bool valid, const FilePath& save_path); <newline>@@ -209,6 +214,9 @@ class FilebrowseHandler : public net::DirectoryLister::DirectoryListerDelegate, <newline>   void SendNewDownload(DownloadItem* download); <newline>+  bool ValidateSaveDir(const FilePath& save_dir, bool exists) const; <newline>+  bool AccessDisabled(const FilePath& path) const; <newline>+ <newline>   scoped_ptr<ListValue> filelist_value_; <newline>   FilePath currentpath_; <newline>   Profile* profile_; <newline>@@ -240,56 +248,71 @@ class TaskProxy : public base::RefCountedThreadSafe<TaskProxy> { <newline>             const FilePath& path) <newline>       : handler_(handler), <newline>         src_(path) {} <newline>+ <newline>+  // TaskProxy is created on the UI thread, so in some cases, <newline>+  // we need to post back to the UI thread for destruction. <newline>+  void DeleteOnUIThread() { <newline>+    BrowserThread::PostTask( <newline>+        BrowserThread::UI, FROM_HERE, <newline>+        NewRunnableMethod(this, &TaskProxy::DoNothing)); <newline>+  } <newline>+ <newline>+  void DoNothing() {} <newline>+ <newline>   void ReadInFileProxy() { <newline>-    if (handler_) { <newline>+    if (handler_) <newline>       handler_->ReadInFile(); <newline>-    } <newline>+    DeleteOnUIThread(); <newline>   } <newline>+ <newline>   void DeleteFetcher(URLFetcher* fetch) { <newline>     delete fetch; <newline>   } <newline>+ <newline>   void SendPicasawebRequestProxy() { <newline>-    if (handler_) { <newline>+    if (handler_) <newline>       handler_->SendPicasawebRequest(); <newline>-    } <newline>+    DeleteOnUIThread(); <newline>   } <newline>+ <newline>   void FireUploadCompleteProxy() { <newline>-    if (handler_) { <newline>+    if (handler_) <newline>       handler_->FireUploadComplete(); <newline>-    } <newline>   } <newline>   void DeleteFileProxy() { <newline>-    if (handler_) { <newline>-      handler_->DeleteFile(src_); <newline>-    } <newline>+    if (handler_) <newline>+      handler_->DeleteFile(src_, this); <newline>   } <newline>   void CopyFileProxy() { <newline>-    if (handler_) { <newline>-      handler_->CopyFile(src_, dest_); <newline>-    } <newline>+    if (handler_) <newline>+      handler_->CopyFile(src_, dest_, this); <newline>+  } <newline>+ <newline>+  void CreateNewFolderProxy() { <newline>+    if (handler_) <newline>+      handler_->CreateNewFolder(src_); <newline>+    DeleteOnUIThread(); <newline>   } <newline>   void FireDeleteCompleteProxy() { <newline>-    if (handler_) { <newline>+    if (handler_) <newline>       handler_->FireDeleteComplete(src_); <newline>-    } <newline>   } <newline>   void FireCopyCompleteProxy() { <newline>-    if (handler_) { <newline>+    if (handler_) <newline>       handler_->FireCopyComplete(src_, dest_); <newline>-    } <newline>   } <newline>   void ValidateSavePathOnFileThread() { <newline>     if (handler_) <newline>-      handler_->ValidateSavePathOnFileThread(src_); <newline>+      handler_->ValidateSavePathOnFileThread(src_, this); <newline>   } <newline>-  void FireOnValidatedSavePathOnUIThread(bool valid, <newline>-                                         const FilePath& save_path) { <newline>+ <newline>+  void FireOnValidatedSavePathOnUIThread(bool valid) { <newline>     if (handler_) <newline>-      handler_->FireOnValidatedSavePathOnUIThread(valid, save_path); <newline>+      handler_->FireOnValidatedSavePathOnUIThread(valid, src_); <newline>   } <newline>  private: <newline>@@ -411,12 +434,11 @@ FilebrowseHandler::~FilebrowseHandler() { <newline>   download_manager_->RemoveObserver(this); <newline>   URLFetcher* fetch = fetch_.release(); <newline>   if (fetch) { <newline>-    TaskProxy* task = new TaskProxy(AsWeakPtr(), currentpath_); <newline>-    task->AddRef(); <newline>+    scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), currentpath_); <newline>     BrowserThread::PostTask( <newline>         BrowserThread::FILE, FROM_HERE, <newline>         NewRunnableMethod( <newline>-            task, &TaskProxy::DeleteFetcher, fetch)); <newline>+            task.get(), &TaskProxy::DeleteFetcher, fetch)); <newline>   } <newline> } <newline>@@ -432,17 +454,16 @@ WebUIMessageHandler* FilebrowseHandler::Attach(DOMUI* dom_ui) { <newline> void FilebrowseHandler::Init() { <newline>   download_manager_ = profile_->GetDownloadManager(); <newline>   download_manager_->AddObserver(this); <newline>-  TaskProxy* task = new TaskProxy(AsWeakPtr(), currentpath_); <newline>-  task->AddRef(); <newline>-  current_task_ = task; <newline>   static bool sent_request = false; <newline>   if (!sent_request) { <newline>     // If we have not sent a request before, we should do one in order to <newline>     // ensure that we have the correct cookies. This is for uploads. <newline>+    scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), currentpath_); <newline>+    current_task_ = task; <newline>     BrowserThread::PostTask( <newline>         BrowserThread::FILE, FROM_HERE, <newline>         NewRunnableMethod( <newline>-            task, &TaskProxy::SendPicasawebRequestProxy)); <newline>+            task.get(), &TaskProxy::SendPicasawebRequestProxy)); <newline>     sent_request = true; <newline>   } <newline> } <newline>@@ -513,12 +534,12 @@ void FilebrowseHandler::FireUploadComplete() { <newline>     LOG(ERROR) << "Unable to get username"; <newline>     return; <newline>   } <newline>-  int location = username.find_first_of('@',0); <newline>+  int location = username.find_first_of('@', 0); <newline>   if (location <= 0) { <newline>     LOG(ERROR) << "Username not formatted correctly"; <newline>     return; <newline>   } <newline>-  username = username.erase(username.find_first_of('@',0)); <newline>+  username = username.erase(username.find_first_of('@', 0)); <newline>   std::string picture_url = kPicasawebBaseUrl; <newline>   picture_url += username; <newline>   picture_url += kPicasawebDropBox; <newline>@@ -582,7 +603,6 @@ void FilebrowseHandler::HandleGetRoots(const ListValue* args) { <newline>   page_value->SetString(kPropertyPath, "/media"); <newline>   page_value->SetString(kPropertyTitle, "Removeable"); <newline>   page_value->SetBoolean(kPropertyDirectory, true); <newline>- <newline>   results_value.Append(page_value); <newline> #endif <newline>   FilePath default_download_path; <newline>@@ -609,11 +629,20 @@ void FilebrowseHandler::HandleCreateNewFolder(const ListValue* args) { <newline>   std::string path = WideToUTF8(ExtractStringValue(args)); <newline>   FilePath currentpath(path); <newline>-  if (!file_util::CreateDirectory(currentpath)) <newline>-    LOG(ERROR) << "unable to create directory"; <newline>+  scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), currentpath); <newline>+  BrowserThread::PostTask( <newline>+      BrowserThread::FILE, FROM_HERE, <newline>+      NewRunnableMethod( <newline>+          task.get(), &TaskProxy::CreateNewFolderProxy)); <newline> #endif <newline> } <newline>+void FilebrowseHandler::CreateNewFolder(const FilePath& currentpath) const { <newline>+  if (!ValidateSaveDir(currentpath, false) || <newline>+      !file_util::CreateDirectory(currentpath)) <newline>+    LOG(ERROR) << "Unable to create directory " << currentpath.value(); <newline>+} <newline>+ <newline> void FilebrowseHandler::PlayMediaFile(const ListValue* args) { <newline> #if defined(OS_CHROMEOS) <newline>   std::string url = WideToUTF8(ExtractStringValue(args)); <newline>@@ -665,7 +694,7 @@ void FilebrowseHandler::HandlePauseToggleDownload(const ListValue* args) { <newline> #if defined(OS_CHROMEOS) <newline>   int id; <newline>   ExtractIntegerValue(args, &id); <newline>-  if ((id - 1) >= (int)active_download_items_.size()) { <newline>+  if ((id - 1) >= static_cast<int>(active_download_items_.size())) { <newline>     return; <newline>   } <newline>   DownloadItem* item = active_download_items_[id]; <newline>@@ -677,7 +706,7 @@ void FilebrowseHandler::HandleAllowDownload(const ListValue* args) { <newline> #if defined(OS_CHROMEOS) <newline>   int id; <newline>   ExtractIntegerValue(args, &id); <newline>-  if ((id - 1) >= (int)active_download_items_.size()) { <newline>+  if ((id - 1) >= static_cast<int>(active_download_items_.size())) { <newline>     return; <newline>   } <newline>@@ -690,7 +719,7 @@ void FilebrowseHandler::HandleCancelDownload(const ListValue* args) { <newline> #if defined(OS_CHROMEOS) <newline>   int id; <newline>   ExtractIntegerValue(args, &id); <newline>-  if ((id - 1) >= (int)active_download_items_.size()) { <newline>+  if ((id - 1) >= static_cast<int>(active_download_items_.size())) { <newline>     return; <newline>   } <newline>   DownloadItem* item = active_download_items_[id]; <newline>@@ -757,12 +786,12 @@ void FilebrowseHandler::ReadInFile() { <newline>     LOG(ERROR) << "Unable to get username"; <newline>     return; <newline>   } <newline>-  int location = username.find_first_of('@',0); <newline>+  int location = username.find_first_of('@', 0); <newline>   if (location <= 0) { <newline>     LOG(ERROR) << "Username not formatted correctly"; <newline>     return; <newline>   } <newline>-  username = username.erase(username.find_first_of('@',0)); <newline>+  username = username.erase(username.find_first_of('@', 0)); <newline>   std::string url = kPicasawebUserPrefix; <newline>   url += username; <newline>   url += kPicasawebDefault; <newline>@@ -798,17 +827,17 @@ void FilebrowseHandler::UploadToPicasaweb(const ListValue* args) { <newline>   current_file_uploaded_ = search_string; <newline>   //  ReadInFile(); <newline>   FilePath current_path(search_string); <newline>-  TaskProxy* task = new TaskProxy(AsWeakPtr(), current_path); <newline>-  task->AddRef(); <newline>+  scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), current_path); <newline>   current_task_ = task; <newline>   BrowserThread::PostTask( <newline>       BrowserThread::FILE, FROM_HERE, <newline>       NewRunnableMethod( <newline>-          task, &TaskProxy::ReadInFileProxy)); <newline>+          task.get(), &TaskProxy::ReadInFileProxy)); <newline> #endif <newline> } <newline>-void FilebrowseHandler::GetChildrenForPath(FilePath& path, bool is_refresh) { <newline>+void FilebrowseHandler::GetChildrenForPath(const FilePath& path, <newline>+                                           bool is_refresh) { <newline>   filelist_value_.reset(new ListValue()); <newline>   currentpath_ = path; <newline>@@ -822,15 +851,16 @@ void FilebrowseHandler::GetChildrenForPath(FilePath& path, bool is_refresh) { <newline> #if defined(OS_CHROMEOS) <newline>   // Don't allow listing files in inaccessible dirs. <newline>-  if (net::URLRequestFileJob::AccessDisabled(path)) <newline>+  if (AccessDisabled(path)) <newline>     return; <newline>-#endif  // OS_CHROMEOS <newline>+#endif <newline>   FilePath default_download_path; <newline>   if (!PathService::Get(chrome::DIR_DEFAULT_DOWNLOADS, <newline>                         &default_download_path)) { <newline>     NOTREACHED(); <newline>   } <newline>+ <newline>   if (currentpath_ == default_download_path) { <newline>     lister_ = new net::DirectoryLister(currentpath_, <newline>                                        false, <newline>@@ -862,6 +892,14 @@ void FilebrowseHandler::OnListFile( <newline>   if (data.info.filename[0] == '.') { <newline>     return; <newline>   } <newline>+ <newline>+  // Suppress .crdownload files. <newline>+  static const char crdownload[] = (".crdownload"); <newline>+  static const size_t crdownload_size = arraysize(crdownload); <newline>+  const std::string& filename = data.info.filename; <newline>+  if ((filename.size() > crdownload_size) && <newline>+      (filename.rfind(crdownload) == (filename.size() - crdownload_size))) <newline>+    return; <newline> #endif <newline>   DictionaryValue* file_value = new DictionaryValue(); <newline>@@ -946,16 +984,18 @@ void FilebrowseHandler::SendNewDownload(DownloadItem* download) { <newline>   dom_ui_->CallJavascriptFunction(L"newDownload", results_value); <newline> } <newline>-void FilebrowseHandler::DeleteFile(const FilePath& path) { <newline>+void FilebrowseHandler::DeleteFile(const FilePath& path, TaskProxy* task) { <newline>   if (!file_util::Delete(path, true)) { <newline>     LOG(ERROR) << "unable to delete directory"; <newline>   } <newline>   BrowserThread::PostTask( <newline>       BrowserThread::UI, FROM_HERE, <newline>-      NewRunnableMethod(current_task_, &TaskProxy::FireDeleteCompleteProxy)); <newline>+      NewRunnableMethod(task, &TaskProxy::FireDeleteCompleteProxy)); <newline> } <newline>-void FilebrowseHandler::CopyFile(const FilePath& src, const FilePath& dest) { <newline>+void FilebrowseHandler::CopyFile(const FilePath& src, <newline>+                                 const FilePath& dest, <newline>+                                 TaskProxy* task) { <newline>   if (file_util::DirectoryExists(src)) { <newline>     if (!file_util::CopyDirectory(src, dest, true)) { <newline>       LOG(ERROR) << "unable to copy directory:" << src.value(); <newline>@@ -967,7 +1007,7 @@ void FilebrowseHandler::CopyFile(const FilePath& src, const FilePath& dest) { <newline>   } <newline>   BrowserThread::PostTask( <newline>       BrowserThread::UI, FROM_HERE, <newline>-      NewRunnableMethod(current_task_, &TaskProxy::FireCopyCompleteProxy)); <newline>+      NewRunnableMethod(task, &TaskProxy::FireCopyCompleteProxy)); <newline> } <newline> void FilebrowseHandler::HandleDeleteFile(const ListValue* args) { <newline>@@ -976,7 +1016,7 @@ void FilebrowseHandler::HandleDeleteFile(const ListValue* args) { <newline>   FilePath currentpath(path); <newline>   // Don't allow file deletion in inaccessible dirs. <newline>-  if (net::URLRequestFileJob::AccessDisabled(currentpath)) <newline>+  if (AccessDisabled(currentpath)) <newline>     return; <newline>   for (unsigned int x = 0; x < active_download_items_.size(); x++) { <newline>@@ -989,13 +1029,11 @@ void FilebrowseHandler::HandleDeleteFile(const ListValue* args) { <newline>       return; <newline>     } <newline>   } <newline>-  TaskProxy* task = new TaskProxy(AsWeakPtr(), currentpath); <newline>-  task->AddRef(); <newline>-  current_task_ = task; <newline>+  scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), currentpath); <newline>   BrowserThread::PostTask( <newline>       BrowserThread::FILE, FROM_HERE, <newline>       NewRunnableMethod( <newline>-          task, &TaskProxy::DeleteFileProxy)); <newline>+          task.get(), &TaskProxy::DeleteFileProxy)); <newline> #endif <newline> } <newline>@@ -1013,16 +1051,15 @@ void FilebrowseHandler::HandleCopyFile(const ListValue* value) { <newline>       FilePath DestPath = FilePath(dest); <newline>       // Don't allow file copy to inaccessible dirs. <newline>-      if (net::URLRequestFileJob::AccessDisabled(DestPath)) <newline>+      if (AccessDisabled(DestPath)) <newline>         return; <newline>-      TaskProxy* task = new TaskProxy(AsWeakPtr(), SrcPath, DestPath); <newline>-      task->AddRef(); <newline>-      current_task_ = task; <newline>+      scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), <newline>+                                                    SrcPath, DestPath); <newline>       BrowserThread::PostTask( <newline>           BrowserThread::FILE, FROM_HERE, <newline>           NewRunnableMethod( <newline>-              task, &TaskProxy::CopyFileProxy)); <newline>+              task.get(), &TaskProxy::CopyFileProxy)); <newline>     } else { <newline>       LOG(ERROR) << "Unable to get string"; <newline>       return; <newline>@@ -1051,29 +1088,39 @@ void FilebrowseHandler::HandleValidateSavePath(const ListValue* args) { <newline> } <newline> void FilebrowseHandler::ValidateSavePathOnFileThread( <newline>-    const FilePath& save_path) { <newline>+    const FilePath& save_path, TaskProxy* task) { <newline> #if defined(OS_CHROMEOS) <newline>   DCHECK(BrowserThread::CurrentlyOn(BrowserThread::FILE)); <newline>+  const bool valid = ValidateSaveDir(save_path.DirName(), true); <newline>+ <newline>+  BrowserThread::PostTask(BrowserThread::UI, FROM_HERE, <newline>+      NewRunnableMethod(task, <newline>+                        &TaskProxy::FireOnValidatedSavePathOnUIThread, <newline>+                        valid)); <newline>+#endif <newline>+} <newline>+ <newline>+bool FilebrowseHandler::ValidateSaveDir(const FilePath& save_dir, <newline>+                                        bool exists) const { <newline>+#if defined(OS_CHROMEOS) <newline>   FilePath default_download_path; <newline>   if (!PathService::Get(chrome::DIR_DEFAULT_DOWNLOADS, <newline>                         &default_download_path)) { <newline>     NOTREACHED(); <newline>   } <newline>-  // Get containing folder of save_path. <newline>-  FilePath save_dir = save_path.DirName(); <newline>- <newline>-  // Valid save path must be inside default download dir. <newline>-  bool valid = default_download_path == save_dir || <newline>-               file_util::ContainsPath(default_download_path, save_dir); <newline>- <newline>-  scoped_refptr<TaskProxy> task = new TaskProxy(AsWeakPtr(), save_path); <newline>-  BrowserThread::PostTask(BrowserThread::FILE, FROM_HERE, <newline>-      NewRunnableMethod(task.get(), <newline>-                        &TaskProxy::FireOnValidatedSavePathOnUIThread, <newline>-                        valid, save_path)); <newline>+  // Valid save dir must be inside default download dir. <newline>+  if (default_download_path == save_dir) <newline>+    return true; <newline>+  if (exists) { <newline>+      DCHECK(BrowserThread::CurrentlyOn(BrowserThread::FILE)); <newline>+      return file_util::ContainsPath(default_download_path, save_dir); <newline>+  } else { <newline>+    return default_download_path.IsParent(save_dir); <newline>+  } <newline> #endif <newline>+  return false; <newline> } <newline> void FilebrowseHandler::FireOnValidatedSavePathOnUIThread(bool valid, <newline>@@ -1122,6 +1169,11 @@ void FilebrowseHandler::OnDownloadFileCompleted(DownloadItem* download) { <newline>   GetChildrenForPath(currentpath_, true); <newline> } <newline>+bool FilebrowseHandler::AccessDisabled(const FilePath& path) const { <newline>+  return !ValidateSaveDir(path, false) && <newline>+        net::URLRequestFileJob::AccessDisabled(path); <newline>+} <newline>+ <newline> //////////////////////////////////////////////////////////////////////////////// <newline> // <newline> // FileBrowseUI
07a312eb7274beb72e04ce9ae764b9807c753e0	aa@chromium.org <aa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 10 22:33:06 2011 +0000	Temporarily disable restrictions on who can request chrome-extension://. These checks were causing lots of subtle bugs and fixing them will be difficult to get correct for the upcoming milestone. The checks were originally intended to be an 'extra line of defense' and are not critical for security. I will reintroduce them separately on trunk.	72455,72407		http://codereview.chromium.org/6478019	svn://svn.chromium.org/chrome/trunk/src@74511 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/api_test/extension_resource_request_policy/non_existent_extension.html b/chrome/test/data/extensions/api_test/extension_resource_request_policy/non_existent_extension.html <newline>new file mode 100644 <newline>index 0000000..eb2603e <newline>--- /dev/null <newline>+++ b/chrome/test/data/extensions/api_test/extension_resource_request_policy/non_existent_extension.html <newline>@@ -0,0 +1,3 @@ <newline>+<title>Unmodified</title> <newline>+ <newline>+<img onload="document.title='Loaded'" onerror="document.title='Image failed to load'" src="chrome-extension://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/test.png">
33bf5be612e082d10a96e995c61827613a0d3d3	aa@chromium.org <aa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 10 22:33:06 2011 +0000	Temporarily disable restrictions on who can request chrome-extension://. These checks were causing lots of subtle bugs and fixing them will be difficult to get correct for the upcoming milestone. The checks were originally intended to be an 'extra line of defense' and are not critical for security. I will reintroduce them separately on trunk.	72455,72407		http://codereview.chromium.org/6478019	svn://svn.chromium.org/chrome/trunk/src@74511 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/api_test/extension_resource_request_policy/non_existent_extension.html b/chrome/test/data/extensions/api_test/extension_resource_request_policy/non_existent_extension.html <newline>new file mode 100644 <newline>index 0000000..eb2603e <newline>--- /dev/null <newline>+++ b/chrome/test/data/extensions/api_test/extension_resource_request_policy/non_existent_extension.html <newline>@@ -0,0 +1,3 @@ <newline>+<title>Unmodified</title> <newline>+ <newline>+<img onload="document.title='Loaded'" onerror="document.title='Image failed to load'" src="chrome-extension://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/test.png">
f2bb1455073461bbd96f2aee5466f01cfab5571	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 1 22:52:29 2011 +0000	Fix a typo I introduced (IceTea should be IcedTea) in my last commit here. Also bump minimum version to 1.9.4; both Fedora and Ubuntu have released 1.9.4 as a security update. (Note -- there may be another one imminent, in which case I'll use 1.9.5 as appropriate). TEST=NONE	NONE		http://codereview.chromium.org/6386046	svn://svn.chromium.org/chrome/trunk/src@73367 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index 0d4519c..102289d 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -141,8 +141,8 @@ static const VersionRangeDefinition kJavaVersionRange[] = { <newline> }; <newline> static const VersionRangeDefinition kRedhatIcedTeaVersionRange[] = { <newline>-    { "0", "1.9", "1.8.3", true }, <newline>-    { "1.9", "1.10", "1.9.2", true }, <newline>+    { "0", "1.9", "1.8.5", true }, <newline>+    { "1.9", "1.10", "1.9.5", true }, <newline> }; <newline> static const PluginGroupDefinition kGroupDefinitions[] = { <newline>@@ -152,7 +152,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline>   { "java-runtime-environment", PluginGroup::kJavaGroupName, "Java", <newline>     kJavaVersionRange, arraysize(kJavaVersionRange), <newline>     "http://www.java.com/en/download/manual.jsp" }, <newline>-  { "redhat-icetea-java", "IceTea", "IcedTea", <newline>+  { "redhat-icetea-java", "IcedTea", "IcedTea", <newline>     kRedhatIcedTeaVersionRange, arraysize(kRedhatIcedTeaVersionRange), <newline>     "http://www.linuxsecurity.com/content/section/3/170/" }, <newline> };
1e07e946c9aeb2b527c20a1a7dfa542581aad15	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 1 22:52:29 2011 +0000	Fix a typo I introduced (IceTea should be IcedTea) in my last commit here. Also bump minimum version to 1.9.4; both Fedora and Ubuntu have released 1.9.4 as a security update. (Note -- there may be another one imminent, in which case I'll use 1.9.5 as appropriate). TEST=NONE	NONE		http://codereview.chromium.org/6386046	svn://svn.chromium.org/chrome/trunk/src@73367 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/plugins/npapi/plugin_list.cc b/webkit/plugins/npapi/plugin_list.cc <newline>index 0d4519c..102289d 100644 <newline>--- a/webkit/plugins/npapi/plugin_list.cc <newline>+++ b/webkit/plugins/npapi/plugin_list.cc <newline>@@ -141,8 +141,8 @@ static const VersionRangeDefinition kJavaVersionRange[] = { <newline> }; <newline> static const VersionRangeDefinition kRedhatIcedTeaVersionRange[] = { <newline>-    { "0", "1.9", "1.8.3", true }, <newline>-    { "1.9", "1.10", "1.9.2", true }, <newline>+    { "0", "1.9", "1.8.5", true }, <newline>+    { "1.9", "1.10", "1.9.5", true }, <newline> }; <newline> static const PluginGroupDefinition kGroupDefinitions[] = { <newline>@@ -152,7 +152,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline>   { "java-runtime-environment", PluginGroup::kJavaGroupName, "Java", <newline>     kJavaVersionRange, arraysize(kJavaVersionRange), <newline>     "http://www.java.com/en/download/manual.jsp" }, <newline>-  { "redhat-icetea-java", "IceTea", "IcedTea", <newline>+  { "redhat-icetea-java", "IcedTea", "IcedTea", <newline>     kRedhatIcedTeaVersionRange, arraysize(kRedhatIcedTeaVersionRange), <newline>     "http://www.linuxsecurity.com/content/section/3/170/" }, <newline> };
660d6611218db57923ea973f093bda0c5a41789	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jan 26 22:21:06 2011 +0000	retry r71405: Make new chrome UI security model the default. allows us to update URL in chrome://settings when the user navigates within it. TEST=manual	57485		http://codereview.chromium.org/6240010	svn://svn.chromium.org/chrome/trunk/src@72701 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/render_thread.cc b/chrome/renderer/render_thread.cc <newline>index bb2e240..fc9243f 100644 <newline>--- a/chrome/renderer/render_thread.cc <newline>+++ b/chrome/renderer/render_thread.cc <newline>@@ -890,12 +890,7 @@ void RenderThread::EnsureWebKitInitialized() { <newline>   // also be unable to script anything but themselves (to help limit the damage <newline>   // that a corrupt chrome: page could cause). <newline>   WebString chrome_ui_scheme(ASCIIToUTF16(chrome::kChromeUIScheme)); <newline>-  if (command_line.HasSwitch(switches::kNewChromeUISecurityModel)) { <newline>-    WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>-  } else { <newline>-    WebSecurityPolicy::registerURLSchemeAsLocal(chrome_ui_scheme); <newline>-    WebSecurityPolicy::registerURLSchemeAsNoAccess(chrome_ui_scheme); <newline>-  } <newline>+  WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>   // chrome-extension: resources shouldn't trigger insecure content warnings. <newline>   WebString extension_scheme(ASCIIToUTF16(chrome::kExtensionScheme));
931d526dc0b7c7c871e6fc408775feb63493fd1	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jan 26 22:21:06 2011 +0000	retry r71405: Make new chrome UI security model the default. allows us to update URL in chrome://settings when the user navigates within it. TEST=manual	57485		http://codereview.chromium.org/6240010	svn://svn.chromium.org/chrome/trunk/src@72701 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/render_thread.cc b/chrome/renderer/render_thread.cc <newline>index bb2e240..fc9243f 100644 <newline>--- a/chrome/renderer/render_thread.cc <newline>+++ b/chrome/renderer/render_thread.cc <newline>@@ -890,12 +890,7 @@ void RenderThread::EnsureWebKitInitialized() { <newline>   // also be unable to script anything but themselves (to help limit the damage <newline>   // that a corrupt chrome: page could cause). <newline>   WebString chrome_ui_scheme(ASCIIToUTF16(chrome::kChromeUIScheme)); <newline>-  if (command_line.HasSwitch(switches::kNewChromeUISecurityModel)) { <newline>-    WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>-  } else { <newline>-    WebSecurityPolicy::registerURLSchemeAsLocal(chrome_ui_scheme); <newline>-    WebSecurityPolicy::registerURLSchemeAsNoAccess(chrome_ui_scheme); <newline>-  } <newline>+  WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>   // chrome-extension: resources shouldn't trigger insecure content warnings. <newline>   WebString extension_scheme(ASCIIToUTF16(chrome::kExtensionScheme));
4e03c8261d51022f4aa698b3ab0fb38ddac4ea1	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jan 24 23:33:25 2011 +0000	revert r71405 as it is causing ui test failures: Make new chrome UI security model the default. allows us to update URL in chrome://settings when the user navigates within it. TEST=manual	57485		http://codereview.chromium.org/6277018	svn://svn.chromium.org/chrome/trunk/src@72420 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/render_thread.cc b/chrome/renderer/render_thread.cc <newline>index fd55fe8..a80fc7b 100644 <newline>--- a/chrome/renderer/render_thread.cc <newline>+++ b/chrome/renderer/render_thread.cc <newline>@@ -864,7 +864,12 @@ void RenderThread::EnsureWebKitInitialized() { <newline>   // also be unable to script anything but themselves (to help limit the damage <newline>   // that a corrupt chrome: page could cause). <newline>   WebString chrome_ui_scheme(ASCIIToUTF16(chrome::kChromeUIScheme)); <newline>-  WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>+  if (command_line.HasSwitch(switches::kNewChromeUISecurityModel)) { <newline>+    WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>+  } else { <newline>+    WebSecurityPolicy::registerURLSchemeAsLocal(chrome_ui_scheme); <newline>+    WebSecurityPolicy::registerURLSchemeAsNoAccess(chrome_ui_scheme); <newline>+  } <newline>   // chrome-extension: resources shouldn't trigger insecure content warnings. <newline>   WebString extension_scheme(ASCIIToUTF16(chrome::kExtensionScheme));
df334c1c572250320fdb994f7b7293131be9940	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jan 24 23:33:25 2011 +0000	revert r71405 as it is causing ui test failures: Make new chrome UI security model the default. allows us to update URL in chrome://settings when the user navigates within it. TEST=manual	57485		http://codereview.chromium.org/6277018	svn://svn.chromium.org/chrome/trunk/src@72420 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/render_thread.cc b/chrome/renderer/render_thread.cc <newline>index fd55fe8..a80fc7b 100644 <newline>--- a/chrome/renderer/render_thread.cc <newline>+++ b/chrome/renderer/render_thread.cc <newline>@@ -864,7 +864,12 @@ void RenderThread::EnsureWebKitInitialized() { <newline>   // also be unable to script anything but themselves (to help limit the damage <newline>   // that a corrupt chrome: page could cause). <newline>   WebString chrome_ui_scheme(ASCIIToUTF16(chrome::kChromeUIScheme)); <newline>-  WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>+  if (command_line.HasSwitch(switches::kNewChromeUISecurityModel)) { <newline>+    WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>+  } else { <newline>+    WebSecurityPolicy::registerURLSchemeAsLocal(chrome_ui_scheme); <newline>+    WebSecurityPolicy::registerURLSchemeAsNoAccess(chrome_ui_scheme); <newline>+  } <newline>   // chrome-extension: resources shouldn't trigger insecure content warnings. <newline>   WebString extension_scheme(ASCIIToUTF16(chrome::kExtensionScheme));
6d686eaa7ae7d182acb009f88b68cf6d3217115	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jan 24 22:31:08 2011 +0000	Make new chrome UI security model the default. allows us to update URL in chrome://settings when the user navigates within it. TEST=manual	57485		http://codereview.chromium.org/6266017	svn://svn.chromium.org/chrome/trunk/src@72405 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/render_thread.cc b/chrome/renderer/render_thread.cc <newline>index a80fc7b..fd55fe8 100644 <newline>--- a/chrome/renderer/render_thread.cc <newline>+++ b/chrome/renderer/render_thread.cc <newline>@@ -864,12 +864,7 @@ void RenderThread::EnsureWebKitInitialized() { <newline>   // also be unable to script anything but themselves (to help limit the damage <newline>   // that a corrupt chrome: page could cause). <newline>   WebString chrome_ui_scheme(ASCIIToUTF16(chrome::kChromeUIScheme)); <newline>-  if (command_line.HasSwitch(switches::kNewChromeUISecurityModel)) { <newline>-    WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>-  } else { <newline>-    WebSecurityPolicy::registerURLSchemeAsLocal(chrome_ui_scheme); <newline>-    WebSecurityPolicy::registerURLSchemeAsNoAccess(chrome_ui_scheme); <newline>-  } <newline>+  WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>   // chrome-extension: resources shouldn't trigger insecure content warnings. <newline>   WebString extension_scheme(ASCIIToUTF16(chrome::kExtensionScheme));
37db9e5e571c5820fddb7cd0f1f6f132ff62741	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jan 24 22:31:08 2011 +0000	Make new chrome UI security model the default. allows us to update URL in chrome://settings when the user navigates within it. TEST=manual	57485		http://codereview.chromium.org/6266017	svn://svn.chromium.org/chrome/trunk/src@72405 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/render_thread.cc b/chrome/renderer/render_thread.cc <newline>index a80fc7b..fd55fe8 100644 <newline>--- a/chrome/renderer/render_thread.cc <newline>+++ b/chrome/renderer/render_thread.cc <newline>@@ -864,12 +864,7 @@ void RenderThread::EnsureWebKitInitialized() { <newline>   // also be unable to script anything but themselves (to help limit the damage <newline>   // that a corrupt chrome: page could cause). <newline>   WebString chrome_ui_scheme(ASCIIToUTF16(chrome::kChromeUIScheme)); <newline>-  if (command_line.HasSwitch(switches::kNewChromeUISecurityModel)) { <newline>-    WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>-  } else { <newline>-    WebSecurityPolicy::registerURLSchemeAsLocal(chrome_ui_scheme); <newline>-    WebSecurityPolicy::registerURLSchemeAsNoAccess(chrome_ui_scheme); <newline>-  } <newline>+  WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>   // chrome-extension: resources shouldn't trigger insecure content warnings. <newline>   WebString extension_scheme(ASCIIToUTF16(chrome::kExtensionScheme));
f61067373c8c1f85c983efa35c85cfe9df42829	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jan 24 22:21:33 2011 +0000	Add facility to fix about: and file: links from chrome:// pages. Currently, about: links all go to about:blank. This fixes that for left clicks and middle clicks, although context menu navigations (e.g. open in new tab) still won't work. This also "fixes" file: links in the same way. Currently, file links already work as is, but after we make --new-chrome-ui-security-model the default, they will cease to work without this fix. Context menu navigations will, however, continue to work. The fix is currently applied to the history page and one link in settings. TEST=manual	69140		http://codereview.chromium.org/6269015	svn://svn.chromium.org/chrome/trunk/src@72401 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_browser.gypi b/chrome/chrome_browser.gypi <newline>index e0405df..c95bb45 100644 <newline>--- a/chrome/chrome_browser.gypi <newline>+++ b/chrome/chrome_browser.gypi <newline>@@ -888,6 +888,8 @@ <newline>         'browser/dom_ui/flags_ui.h', <newline>         'browser/dom_ui/foreign_session_handler.cc', <newline>         'browser/dom_ui/foreign_session_handler.h', <newline>+        'browser/dom_ui/generic_handler.cc', <newline>+        'browser/dom_ui/generic_handler.h', <newline>         'browser/dom_ui/gpu_internals_ui.cc', <newline>         'browser/dom_ui/gpu_internals_ui.h', <newline>         'browser/dom_ui/history_ui.cc',
eec8304da4387c1c1d2d6abc315433343b81eae	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jan 24 22:21:33 2011 +0000	Add facility to fix about: and file: links from chrome:// pages. Currently, about: links all go to about:blank. This fixes that for left clicks and middle clicks, although context menu navigations (e.g. open in new tab) still won't work. This also "fixes" file: links in the same way. Currently, file links already work as is, but after we make --new-chrome-ui-security-model the default, they will cease to work without this fix. Context menu navigations will, however, continue to work. The fix is currently applied to the history page and one link in settings. TEST=manual	69140		http://codereview.chromium.org/6269015	svn://svn.chromium.org/chrome/trunk/src@72401 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_browser.gypi b/chrome/chrome_browser.gypi <newline>index e0405df..c95bb45 100644 <newline>--- a/chrome/chrome_browser.gypi <newline>+++ b/chrome/chrome_browser.gypi <newline>@@ -888,6 +888,8 @@ <newline>         'browser/dom_ui/flags_ui.h', <newline>         'browser/dom_ui/foreign_session_handler.cc', <newline>         'browser/dom_ui/foreign_session_handler.h', <newline>+        'browser/dom_ui/generic_handler.cc', <newline>+        'browser/dom_ui/generic_handler.h', <newline>         'browser/dom_ui/gpu_internals_ui.cc', <newline>         'browser/dom_ui/gpu_internals_ui.h', <newline>         'browser/dom_ui/history_ui.cc',
0de6f64547b70e9d59b54efea618e4371566886	jam@chromium.org <jam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jan 19 23:47:07 2011 +0000	Move SSL resources out of browser\security\resources into browser\resources alongside the rest of the resources (and interstitials).			http://codereview.chromium.org/6326007	svn://svn.chromium.org/chrome/trunk/src@71872 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/security/resources/twisty_open.png b/chrome/browser/security/resources/twisty_open.png <newline>deleted file mode 100644 <newline>index 449bba7..0000000 <newline>Binary files a/chrome/browser/security/resources/twisty_open.png and /dev/null differ
e3f8b659b68083996cda16828816ec662a12176	jam@chromium.org <jam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jan 19 23:47:07 2011 +0000	Move SSL resources out of browser\security\resources into browser\resources alongside the rest of the resources (and interstitials).			http://codereview.chromium.org/6326007	svn://svn.chromium.org/chrome/trunk/src@71872 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/security/resources/twisty_open.png b/chrome/browser/security/resources/twisty_open.png <newline>deleted file mode 100644 <newline>index 449bba7..0000000 <newline>Binary files a/chrome/browser/security/resources/twisty_open.png and /dev/null differ
9d6dc844a57e5481cc558c3a136f062b0525321	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jan 13 23:42:28 2011 +0000	Changing the security model for "chrome" URLs This patch changes the security model for "chrome" URLs to make implementing some features in DOMUI easier. Instead of registering "chrome" as a NoAccess and a Local scheme, we register it as a DisplayIsolated scheme. That should have the effects outlined in this email: http://groups.google.com/a/chromium.org/group/chromium-dev/browse_thread/thread/863700bf99b3f3ed See also https://bugs.webkit.org/show_bug.cgi?id=50182 which introduces the necessary API into WebKit.	69140		http://codereview.chromium.org/5268006	svn://svn.chromium.org/chrome/trunk/src@71382 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/render_thread.cc b/chrome/renderer/render_thread.cc <newline>index 2935304..67c3f7d 100644 <newline>--- a/chrome/renderer/render_thread.cc <newline>+++ b/chrome/renderer/render_thread.cc <newline>@@ -870,12 +870,18 @@ void RenderThread::EnsureWebKitInitialized() { <newline>   WebScriptController::enableV8SingleThreadMode(); <newline>+  const CommandLine& command_line = *CommandLine::ForCurrentProcess(); <newline>+ <newline>   // chrome: pages should not be accessible by normal content, and should <newline>   // also be unable to script anything but themselves (to help limit the damage <newline>   // that a corrupt chrome: page could cause). <newline>   WebString chrome_ui_scheme(ASCIIToUTF16(chrome::kChromeUIScheme)); <newline>-  WebSecurityPolicy::registerURLSchemeAsLocal(chrome_ui_scheme); <newline>-  WebSecurityPolicy::registerURLSchemeAsNoAccess(chrome_ui_scheme); <newline>+  if (command_line.HasSwitch(switches::kNewChromeUISecurityModel)) { <newline>+    WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>+  } else { <newline>+    WebSecurityPolicy::registerURLSchemeAsLocal(chrome_ui_scheme); <newline>+    WebSecurityPolicy::registerURLSchemeAsNoAccess(chrome_ui_scheme); <newline>+  } <newline>   // chrome-extension: resources shouldn't trigger insecure content warnings. <newline>   WebString extension_scheme(ASCIIToUTF16(chrome::kExtensionScheme)); <newline>@@ -894,8 +900,6 @@ void RenderThread::EnsureWebKitInitialized() { <newline>   if (search_extension) <newline>     RegisterExtension(search_extension, false); <newline>-  const CommandLine& command_line = *CommandLine::ForCurrentProcess(); <newline>- <newline>   if (command_line.HasSwitch(switches::kEnableBenchmarking)) <newline>     RegisterExtension(extensions_v8::BenchmarkingExtension::Get(), false);
8310d8c58b1b51d6565abd3792622237283c564	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jan 13 23:42:28 2011 +0000	Changing the security model for "chrome" URLs This patch changes the security model for "chrome" URLs to make implementing some features in DOMUI easier. Instead of registering "chrome" as a NoAccess and a Local scheme, we register it as a DisplayIsolated scheme. That should have the effects outlined in this email: http://groups.google.com/a/chromium.org/group/chromium-dev/browse_thread/thread/863700bf99b3f3ed See also https://bugs.webkit.org/show_bug.cgi?id=50182 which introduces the necessary API into WebKit.	69140		http://codereview.chromium.org/5268006	svn://svn.chromium.org/chrome/trunk/src@71382 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/render_thread.cc b/chrome/renderer/render_thread.cc <newline>index 2935304..67c3f7d 100644 <newline>--- a/chrome/renderer/render_thread.cc <newline>+++ b/chrome/renderer/render_thread.cc <newline>@@ -870,12 +870,18 @@ void RenderThread::EnsureWebKitInitialized() { <newline>   WebScriptController::enableV8SingleThreadMode(); <newline>+  const CommandLine& command_line = *CommandLine::ForCurrentProcess(); <newline>+ <newline>   // chrome: pages should not be accessible by normal content, and should <newline>   // also be unable to script anything but themselves (to help limit the damage <newline>   // that a corrupt chrome: page could cause). <newline>   WebString chrome_ui_scheme(ASCIIToUTF16(chrome::kChromeUIScheme)); <newline>-  WebSecurityPolicy::registerURLSchemeAsLocal(chrome_ui_scheme); <newline>-  WebSecurityPolicy::registerURLSchemeAsNoAccess(chrome_ui_scheme); <newline>+  if (command_line.HasSwitch(switches::kNewChromeUISecurityModel)) { <newline>+    WebSecurityPolicy::registerURLSchemeAsDisplayIsolated(chrome_ui_scheme); <newline>+  } else { <newline>+    WebSecurityPolicy::registerURLSchemeAsLocal(chrome_ui_scheme); <newline>+    WebSecurityPolicy::registerURLSchemeAsNoAccess(chrome_ui_scheme); <newline>+  } <newline>   // chrome-extension: resources shouldn't trigger insecure content warnings. <newline>   WebString extension_scheme(ASCIIToUTF16(chrome::kExtensionScheme)); <newline>@@ -894,8 +900,6 @@ void RenderThread::EnsureWebKitInitialized() { <newline>   if (search_extension) <newline>     RegisterExtension(search_extension, false); <newline>-  const CommandLine& command_line = *CommandLine::ForCurrentProcess(); <newline>- <newline>   if (command_line.HasSwitch(switches::kEnableBenchmarking)) <newline>     RegisterExtension(extensions_v8::BenchmarkingExtension::Get(), false);
bafdbdcb60b046916f69e81e1f4c7b0a53a3b66	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jan 5 05:26:02 2011 +0000	[gtk] Fix padding in omnibox security label. Increase padding between right edge of security text (e.g. "PayPal, Inc. [US]") and right edge of green security box thing by one pixel. The total padding is now 2 pixels, which matches windows. TEST=manual	none		http://codereview.chromium.org/6072012	svn://svn.chromium.org/chrome/trunk/src@70487 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/gtk/location_bar_view_gtk.cc b/chrome/browser/gtk/location_bar_view_gtk.cc <newline>index b1b95eb..e9cc476 100644 <newline>--- a/chrome/browser/gtk/location_bar_view_gtk.cc <newline>+++ b/chrome/browser/gtk/location_bar_view_gtk.cc <newline>@@ -316,11 +316,11 @@ void LocationBarViewGtk::BuildSiteTypeArea() { <newline>   gtk_widget_set_name(security_info_label_, <newline>                       "chrome-location-bar-security-info-label"); <newline>-  GtkWidget* site_type_hbox = gtk_hbox_new(FALSE, 2); <newline>+  GtkWidget* site_type_hbox = gtk_hbox_new(FALSE, 1); <newline>   gtk_box_pack_start(GTK_BOX(site_type_hbox), icon_alignment, <newline>                      FALSE, FALSE, 0); <newline>   gtk_box_pack_start(GTK_BOX(site_type_hbox), security_info_label_, <newline>-                     FALSE, FALSE, 1); <newline>+                     FALSE, FALSE, 2); <newline>   site_type_event_box_ = gtk_event_box_new(); <newline>   gtk_widget_modify_bg(site_type_event_box_, GTK_STATE_NORMAL,
f810c567e77fa5a045fe2ab32b997dc9ceffe3e	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jan 5 05:26:02 2011 +0000	[gtk] Fix padding in omnibox security label. Increase padding between right edge of security text (e.g. "PayPal, Inc. [US]") and right edge of green security box thing by one pixel. The total padding is now 2 pixels, which matches windows. TEST=manual	none		http://codereview.chromium.org/6072012	svn://svn.chromium.org/chrome/trunk/src@70487 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/gtk/location_bar_view_gtk.cc b/chrome/browser/gtk/location_bar_view_gtk.cc <newline>index b1b95eb..e9cc476 100644 <newline>--- a/chrome/browser/gtk/location_bar_view_gtk.cc <newline>+++ b/chrome/browser/gtk/location_bar_view_gtk.cc <newline>@@ -316,11 +316,11 @@ void LocationBarViewGtk::BuildSiteTypeArea() { <newline>   gtk_widget_set_name(security_info_label_, <newline>                       "chrome-location-bar-security-info-label"); <newline>-  GtkWidget* site_type_hbox = gtk_hbox_new(FALSE, 2); <newline>+  GtkWidget* site_type_hbox = gtk_hbox_new(FALSE, 1); <newline>   gtk_box_pack_start(GTK_BOX(site_type_hbox), icon_alignment, <newline>                      FALSE, FALSE, 0); <newline>   gtk_box_pack_start(GTK_BOX(site_type_hbox), security_info_label_, <newline>-                     FALSE, FALSE, 1); <newline>+                     FALSE, FALSE, 2); <newline>   site_type_event_box_ = gtk_event_box_new(); <newline>   gtk_widget_modify_bg(site_type_event_box_, GTK_STATE_NORMAL,
d750f0b088a5777e0f03ed399d3bc028559defa	akalin@chromium.org <akalin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 21 19:40:08 2010 +0000	Coalesced various extension type enums into Extension::Type. Renamed Extension::HistogramType to Extension::Type and used it everywhere. Moved extension sync security checks into sync land and simplified them. TEST=Existing unit tests / sync integration tests	55823		http://codereview.chromium.org/5946001	svn://svn.chromium.org/chrome/trunk/src@69855 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/extension.h b/chrome/common/extensions/extension.h <newline>index 8fa35d5..4d680ef 100644 <newline>--- a/chrome/common/extensions/extension.h <newline>+++ b/chrome/common/extensions/extension.h <newline>@@ -83,9 +83,9 @@ class Extension : public base::RefCountedThreadSafe<Extension> { <newline>     EXTENSION_ICON_BITTY = 16, <newline>   }; <newline>-  // Type used for UMA_HISTOGRAM_ENUMERATION about extensions. <newline>-  // Do not change the order of entries or remove entries in this list. <newline>-  enum HistogramType { <newline>+  // Do not change the order of entries or remove entries in this list <newline>+  // as this is used in UMA_HISTOGRAM_ENUMERATIONs about extensions. <newline>+  enum Type { <newline>     TYPE_UNKNOWN = 0, <newline>     TYPE_EXTENSION, <newline>     TYPE_THEME, <newline>@@ -227,8 +227,8 @@ class Extension : public base::RefCountedThreadSafe<Extension> { <newline>            IsExternalLocation(location); <newline>   } <newline>-  // See HistogramType definition above. <newline>-  HistogramType GetHistogramType() const; <newline>+  // See Type definition above. <newline>+  Type GetType() const; <newline>   // Returns an absolute url to a resource inside of an extension. The <newline>   // |extension_url| argument should be the url() from an Extension object. The <newline>@@ -730,11 +730,7 @@ struct UninstalledExtensionInfo { <newline>   std::string extension_id; <newline>   std::set<std::string> extension_api_permissions; <newline>-  // TODO(akalin): Once we have a unified ExtensionType, replace the <newline>-  // below member variables with a member of that type. <newline>-  bool is_theme; <newline>-  bool is_app; <newline>-  bool converted_from_user_script; <newline>+  Extension::Type extension_type; <newline>   GURL update_url; <newline> };
fa19f8c525235f3318359b4e6f647e1dfd18f46	akalin@chromium.org <akalin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 21 19:40:08 2010 +0000	Coalesced various extension type enums into Extension::Type. Renamed Extension::HistogramType to Extension::Type and used it everywhere. Moved extension sync security checks into sync land and simplified them. TEST=Existing unit tests / sync integration tests	55823		http://codereview.chromium.org/5946001	svn://svn.chromium.org/chrome/trunk/src@69855 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/extension.h b/chrome/common/extensions/extension.h <newline>index 8fa35d5..4d680ef 100644 <newline>--- a/chrome/common/extensions/extension.h <newline>+++ b/chrome/common/extensions/extension.h <newline>@@ -83,9 +83,9 @@ class Extension : public base::RefCountedThreadSafe<Extension> { <newline>     EXTENSION_ICON_BITTY = 16, <newline>   }; <newline>-  // Type used for UMA_HISTOGRAM_ENUMERATION about extensions. <newline>-  // Do not change the order of entries or remove entries in this list. <newline>-  enum HistogramType { <newline>+  // Do not change the order of entries or remove entries in this list <newline>+  // as this is used in UMA_HISTOGRAM_ENUMERATIONs about extensions. <newline>+  enum Type { <newline>     TYPE_UNKNOWN = 0, <newline>     TYPE_EXTENSION, <newline>     TYPE_THEME, <newline>@@ -227,8 +227,8 @@ class Extension : public base::RefCountedThreadSafe<Extension> { <newline>            IsExternalLocation(location); <newline>   } <newline>-  // See HistogramType definition above. <newline>-  HistogramType GetHistogramType() const; <newline>+  // See Type definition above. <newline>+  Type GetType() const; <newline>   // Returns an absolute url to a resource inside of an extension. The <newline>   // |extension_url| argument should be the url() from an Extension object. The <newline>@@ -730,11 +730,7 @@ struct UninstalledExtensionInfo { <newline>   std::string extension_id; <newline>   std::set<std::string> extension_api_permissions; <newline>-  // TODO(akalin): Once we have a unified ExtensionType, replace the <newline>-  // below member variables with a member of that type. <newline>-  bool is_theme; <newline>-  bool is_app; <newline>-  bool converted_from_user_script; <newline>+  Extension::Type extension_type; <newline>   GURL update_url; <newline> };
2ee76cc4ed84ee60032faaad659369c8ff8013b	dilmah@chromium.org <dilmah@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Dec 13 15:53:24 2010 +0000	Make use of new functionality of SignedSettings to tell if a settings is missing. Removed previous stubs and enforce security. TEST=Manual	chromium-os:9818		http://codereview.chromium.org/5692007	svn://svn.chromium.org/chrome/trunk/src@69001 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/user_cros_settings_provider.cc b/chrome/browser/chromeos/user_cros_settings_provider.cc <newline>index 4c15e01..e469f7f 100644 <newline>--- a/chrome/browser/chromeos/user_cros_settings_provider.cc <newline>+++ b/chrome/browser/chromeos/user_cros_settings_provider.cc <newline>@@ -271,17 +271,6 @@ class UserCrosSettingsTrust : public SignedSettingsHelper::Callback, <newline>         StartFetchingSetting(kBooleanSettings[i]); <newline>       for (size_t i = 0; i < arraysize(kStringSettings); ++i) <newline>         StartFetchingSetting(kStringSettings[i]); <newline>-    } else if (source == SOURCE_OBSERVE) { <newline>-      DCHECK(new_status == OWNERSHIP_TAKEN); <newline>-      if (CrosLibrary::Get()->EnsureLoaded()) { <newline>-        // TODO(dilmah,cmasone): We would not need following piece of code as <newline>-        // long as failure callback from SignedSettings will allow us to <newline>-        // discriminate missing settings from failed signature verification. <newline>-        // Otherwise we must set default values for boolean settings. <newline>-        UserManager::Get()->set_current_user_is_owner(true); <newline>-        for (size_t i = 0; i < arraysize(kBooleanSettings); ++i) <newline>-          Set(kBooleanSettings[i], Value::CreateBooleanValue(true)); <newline>-      } <newline>     } <newline>   } <newline>@@ -314,44 +303,49 @@ class UserCrosSettingsTrust : public SignedSettingsHelper::Callback, <newline>     } <newline>     DCHECK(GetOwnershipStatus() != OWNERSHIP_UNKNOWN); <newline>-    bool success = code == SignedSettings::SUCCESS; <newline>     PrefService* prefs = g_browser_process->local_state(); <newline>-    if (!success && GetOwnershipStatus() == OWNERSHIP_TAKEN) { <newline>-      LOG(ERROR) << "On owned device: failed to retrieve cros " <newline>-                    "setting, name=" << name; <newline>-      if (retries_left_ > 0) { <newline>-        retries_left_ -= 1; <newline>-        StartFetchingSetting(name); <newline>-        return; <newline>+    switch (code) { <newline>+      case SignedSettings::SUCCESS: <newline>+      case SignedSettings::NOT_FOUND: <newline>+      case SignedSettings::KEY_UNAVAILABLE: { <newline>+        bool fallback_to_default = (code == SignedSettings::NOT_FOUND) || <newline>+            (GetOwnershipStatus() == OWNERSHIP_NONE); <newline>+        DCHECK(fallback_to_default || code == SignedSettings::SUCCESS); <newline>+        if (fallback_to_default) <newline>+          VLOG(1) << "Going default for cros setting " << name; <newline>+        else <newline>+          VLOG(1) << "Retrieved cros setting " << name << "=" << value; <newline>+        if (IsControlledBooleanSetting(name)) { <newline>+          // We assume our boolean settings are true before explicitly set. <newline>+          UpdateCacheBool(name, (value == kTrueIncantation), <newline>+              fallback_to_default ? USE_VALUE_DEFAULT : USE_VALUE_SUPPLIED); <newline>+        } else if (IsControlledStringSetting(name)) { <newline>+          UpdateCacheString(name, value, <newline>+              fallback_to_default ? USE_VALUE_DEFAULT : USE_VALUE_SUPPLIED); <newline>+        } <newline>+        break; <newline>       } <newline>-      LOG(ERROR) << "No retries left"; <newline>-      if (IsControlledBooleanSetting(name)) { <newline>-        // For boolean settings we can just set safe (false) values <newline>-        // and continue as trusted. <newline>-        // TODO(dilmah): after http://crosbug.com/9666 is fixed: <newline>-        // replace it to USE_VALUE_SUPPLIED. <newline>-        // Until that we use default value as a quick "fix" for: <newline>-        // http://crosbug.com/9876 and http://crosbug.com/9818 <newline>-        // Since we cannot discriminate missing and spoofed setting ATM: assume <newline>-        // that it is missing (common case for old images). <newline>-        UpdateCacheBool(name, false, USE_VALUE_DEFAULT); <newline>-      } else { <newline>-        prefs->ClearPref((name + kTrustedSuffix).c_str()); <newline>-        return; <newline>-      } <newline>-    } else { <newline>-      DCHECK(success || GetOwnershipStatus() == OWNERSHIP_NONE); <newline>-      if (success) <newline>-        VLOG(1) << "Retrieved cros setting " << name << "=" << value; <newline>-      else <newline>-        VLOG(1) << "We are disowned. Going default for cros setting " << name; <newline>-      if (IsControlledBooleanSetting(name)) { <newline>-        // Our boolean settings are true by default (if not explicitly present). <newline>-        UpdateCacheBool(name, (value == kTrueIncantation), <newline>-                        success ? USE_VALUE_SUPPLIED : USE_VALUE_DEFAULT); <newline>-      } else if (IsControlledStringSetting(name)) { <newline>-        UpdateCacheString(name, value, <newline>-                          success ? USE_VALUE_SUPPLIED : USE_VALUE_DEFAULT); <newline>+      case SignedSettings::OPERATION_FAILED: <newline>+      default: { <newline>+        DCHECK(code == SignedSettings::OPERATION_FAILED); <newline>+        DCHECK(GetOwnershipStatus() == OWNERSHIP_TAKEN); <newline>+        LOG(ERROR) << "On owned device: failed to retrieve cros " <newline>+                      "setting, name=" << name; <newline>+        if (retries_left_ > 0) { <newline>+          retries_left_ -= 1; <newline>+          StartFetchingSetting(name); <newline>+          return; <newline>+        } <newline>+        LOG(ERROR) << "No retries left"; <newline>+        if (IsControlledBooleanSetting(name)) { <newline>+          // For boolean settings we can just set safe (false) values <newline>+          // and continue as trusted. <newline>+          UpdateCacheBool(name, false, USE_VALUE_SUPPLIED); <newline>+        } else { <newline>+          prefs->ClearPref((name + kTrustedSuffix).c_str()); <newline>+          return; <newline>+        } <newline>+        break; <newline>       } <newline>     } <newline>     prefs->SetBoolean((name + kTrustedSuffix).c_str(), true); <newline>@@ -362,7 +356,7 @@ class UserCrosSettingsTrust : public SignedSettingsHelper::Callback, <newline>         MessageLoop::current()->PostTask(FROM_HERE, callbacks_vector[i]); <newline>       callbacks_vector.clear(); <newline>     } <newline>-    if (success) <newline>+    if (code == SignedSettings::SUCCESS) <newline>       CrosSettings::Get()->FireObservers(name.c_str()); <newline>   }
222e04b2fbb8ea8d995e94b232d27f7742456e4	dilmah@chromium.org <dilmah@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Dec 13 15:53:24 2010 +0000	Make use of new functionality of SignedSettings to tell if a settings is missing. Removed previous stubs and enforce security. TEST=Manual	chromium-os:9818		http://codereview.chromium.org/5692007	svn://svn.chromium.org/chrome/trunk/src@69001 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/user_cros_settings_provider.cc b/chrome/browser/chromeos/user_cros_settings_provider.cc <newline>index 4c15e01..e469f7f 100644 <newline>--- a/chrome/browser/chromeos/user_cros_settings_provider.cc <newline>+++ b/chrome/browser/chromeos/user_cros_settings_provider.cc <newline>@@ -271,17 +271,6 @@ class UserCrosSettingsTrust : public SignedSettingsHelper::Callback, <newline>         StartFetchingSetting(kBooleanSettings[i]); <newline>       for (size_t i = 0; i < arraysize(kStringSettings); ++i) <newline>         StartFetchingSetting(kStringSettings[i]); <newline>-    } else if (source == SOURCE_OBSERVE) { <newline>-      DCHECK(new_status == OWNERSHIP_TAKEN); <newline>-      if (CrosLibrary::Get()->EnsureLoaded()) { <newline>-        // TODO(dilmah,cmasone): We would not need following piece of code as <newline>-        // long as failure callback from SignedSettings will allow us to <newline>-        // discriminate missing settings from failed signature verification. <newline>-        // Otherwise we must set default values for boolean settings. <newline>-        UserManager::Get()->set_current_user_is_owner(true); <newline>-        for (size_t i = 0; i < arraysize(kBooleanSettings); ++i) <newline>-          Set(kBooleanSettings[i], Value::CreateBooleanValue(true)); <newline>-      } <newline>     } <newline>   } <newline>@@ -314,44 +303,49 @@ class UserCrosSettingsTrust : public SignedSettingsHelper::Callback, <newline>     } <newline>     DCHECK(GetOwnershipStatus() != OWNERSHIP_UNKNOWN); <newline>-    bool success = code == SignedSettings::SUCCESS; <newline>     PrefService* prefs = g_browser_process->local_state(); <newline>-    if (!success && GetOwnershipStatus() == OWNERSHIP_TAKEN) { <newline>-      LOG(ERROR) << "On owned device: failed to retrieve cros " <newline>-                    "setting, name=" << name; <newline>-      if (retries_left_ > 0) { <newline>-        retries_left_ -= 1; <newline>-        StartFetchingSetting(name); <newline>-        return; <newline>+    switch (code) { <newline>+      case SignedSettings::SUCCESS: <newline>+      case SignedSettings::NOT_FOUND: <newline>+      case SignedSettings::KEY_UNAVAILABLE: { <newline>+        bool fallback_to_default = (code == SignedSettings::NOT_FOUND) || <newline>+            (GetOwnershipStatus() == OWNERSHIP_NONE); <newline>+        DCHECK(fallback_to_default || code == SignedSettings::SUCCESS); <newline>+        if (fallback_to_default) <newline>+          VLOG(1) << "Going default for cros setting " << name; <newline>+        else <newline>+          VLOG(1) << "Retrieved cros setting " << name << "=" << value; <newline>+        if (IsControlledBooleanSetting(name)) { <newline>+          // We assume our boolean settings are true before explicitly set. <newline>+          UpdateCacheBool(name, (value == kTrueIncantation), <newline>+              fallback_to_default ? USE_VALUE_DEFAULT : USE_VALUE_SUPPLIED); <newline>+        } else if (IsControlledStringSetting(name)) { <newline>+          UpdateCacheString(name, value, <newline>+              fallback_to_default ? USE_VALUE_DEFAULT : USE_VALUE_SUPPLIED); <newline>+        } <newline>+        break; <newline>       } <newline>-      LOG(ERROR) << "No retries left"; <newline>-      if (IsControlledBooleanSetting(name)) { <newline>-        // For boolean settings we can just set safe (false) values <newline>-        // and continue as trusted. <newline>-        // TODO(dilmah): after http://crosbug.com/9666 is fixed: <newline>-        // replace it to USE_VALUE_SUPPLIED. <newline>-        // Until that we use default value as a quick "fix" for: <newline>-        // http://crosbug.com/9876 and http://crosbug.com/9818 <newline>-        // Since we cannot discriminate missing and spoofed setting ATM: assume <newline>-        // that it is missing (common case for old images). <newline>-        UpdateCacheBool(name, false, USE_VALUE_DEFAULT); <newline>-      } else { <newline>-        prefs->ClearPref((name + kTrustedSuffix).c_str()); <newline>-        return; <newline>-      } <newline>-    } else { <newline>-      DCHECK(success || GetOwnershipStatus() == OWNERSHIP_NONE); <newline>-      if (success) <newline>-        VLOG(1) << "Retrieved cros setting " << name << "=" << value; <newline>-      else <newline>-        VLOG(1) << "We are disowned. Going default for cros setting " << name; <newline>-      if (IsControlledBooleanSetting(name)) { <newline>-        // Our boolean settings are true by default (if not explicitly present). <newline>-        UpdateCacheBool(name, (value == kTrueIncantation), <newline>-                        success ? USE_VALUE_SUPPLIED : USE_VALUE_DEFAULT); <newline>-      } else if (IsControlledStringSetting(name)) { <newline>-        UpdateCacheString(name, value, <newline>-                          success ? USE_VALUE_SUPPLIED : USE_VALUE_DEFAULT); <newline>+      case SignedSettings::OPERATION_FAILED: <newline>+      default: { <newline>+        DCHECK(code == SignedSettings::OPERATION_FAILED); <newline>+        DCHECK(GetOwnershipStatus() == OWNERSHIP_TAKEN); <newline>+        LOG(ERROR) << "On owned device: failed to retrieve cros " <newline>+                      "setting, name=" << name; <newline>+        if (retries_left_ > 0) { <newline>+          retries_left_ -= 1; <newline>+          StartFetchingSetting(name); <newline>+          return; <newline>+        } <newline>+        LOG(ERROR) << "No retries left"; <newline>+        if (IsControlledBooleanSetting(name)) { <newline>+          // For boolean settings we can just set safe (false) values <newline>+          // and continue as trusted. <newline>+          UpdateCacheBool(name, false, USE_VALUE_SUPPLIED); <newline>+        } else { <newline>+          prefs->ClearPref((name + kTrustedSuffix).c_str()); <newline>+          return; <newline>+        } <newline>+        break; <newline>       } <newline>     } <newline>     prefs->SetBoolean((name + kTrustedSuffix).c_str(), true); <newline>@@ -362,7 +356,7 @@ class UserCrosSettingsTrust : public SignedSettingsHelper::Callback, <newline>         MessageLoop::current()->PostTask(FROM_HERE, callbacks_vector[i]); <newline>       callbacks_vector.clear(); <newline>     } <newline>-    if (success) <newline>+    if (code == SignedSettings::SUCCESS) <newline>       CrosSettings::Get()->FireObservers(name.c_str()); <newline>   }
1c68ff3553e0fc5682def30f8cf3030453a79e0	tschmelcher@chromium.org <tschmelcher@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 2 22:07:28 2010 +0000	Work around a Chrome bug in cross-origin security checks that sometimes prevents O3D from loading. TEST=loaded O3D several times in Chrome until the problem repro'ed and verified that O3D loaded and worked anyway	none		http://codereview.chromium.org/5615001	svn://svn.chromium.org/chrome/trunk/src@68078 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/o3d/plugin/cross/whitelist.cc b/o3d/plugin/cross/whitelist.cc <newline>index ebc4ff9..7ec78c3 100644 <newline>--- a/o3d/plugin/cross/whitelist.cc <newline>+++ b/o3d/plugin/cross/whitelist.cc <newline>@@ -57,6 +57,15 @@ static const char kHttpsProtocol[] = "https://"; <newline> // For testing purposes assume local files valid too. <newline> static const char kLocalFileUrlProtocol[] = "file://"; <newline>+static bool GetPropertyByNameString(NPP instance, <newline>+                                    NPObject *obj, <newline>+                                    const char *name_str, <newline>+                                    NPVariant *out) { <newline>+  // Create an identifier for the name. <newline>+  NPIdentifier identifier = NPN_GetStringIdentifier(name_str); <newline>+  return NPN_GetProperty(instance, obj, identifier, out); <newline>+} <newline>+ <newline> static std::string GetURL(NPP instance) { <newline>   std::string url; <newline>   // get URL for the loading page - first approach from <newline>@@ -74,14 +83,14 @@ static std::string GetURL(NPP instance) { <newline>     goto exit0; <newline>   } <newline>   { <newline>-    // Create a "location" identifier. <newline>-    NPIdentifier identifier = NPN_GetStringIdentifier("location"); <newline>     // Declare a local variant value for the location. <newline>     NPVariant location_variant_value; <newline>     // Get the location property from the window object <newline>     // (which is another object). <newline>-    bool success = NPN_GetProperty(instance, window_obj, identifier, <newline>-                                   &location_variant_value); <newline>+    bool success = GetPropertyByNameString(instance, <newline>+                                           window_obj, <newline>+                                           "location", <newline>+                                           &location_variant_value); <newline>     if (!success) { <newline>       LOG(ERROR) << "getproperty failed (location)"; <newline>       goto exit0; <newline>@@ -93,14 +102,14 @@ static std::string GetURL(NPP instance) { <newline>     } <newline>     { <newline>       // Get a pointer to the "location" object. <newline>-      NPObject *location_obj = location_variant_value.value.objectValue; <newline>-      // Create a "href" identifier. <newline>-      identifier = NPN_GetStringIdentifier("href"); <newline>+      NPObject *location_obj = NPVARIANT_TO_OBJECT(location_variant_value); <newline>       // Declare a local variant value for the href. <newline>       NPVariant href_variant_value; <newline>       // Get the location property from the location object. <newline>-      success = NPN_GetProperty(instance, location_obj, identifier, <newline>-                                &href_variant_value); <newline>+      success = GetPropertyByNameString(instance, <newline>+                                        location_obj, <newline>+                                        "href", <newline>+                                        &href_variant_value); <newline>       if (!success) { <newline>         LOG(ERROR) << "getproperty failed (href)"; <newline>         goto exit1; <newline>@@ -114,9 +123,9 @@ static std::string GetURL(NPP instance) { <newline>       // from it. <newline>       url = std::string( <newline>           static_cast<const char *>( <newline>-              href_variant_value.value.stringValue.UTF8Characters), <newline>+              NPVARIANT_TO_STRING(href_variant_value).UTF8Characters), <newline>           static_cast<size_t>( <newline>-              href_variant_value.value.stringValue.UTF8Length)); <newline>+              NPVARIANT_TO_STRING(href_variant_value).UTF8Length)); <newline>      exit2: <newline>       NPN_ReleaseVariantValue(&href_variant_value); <newline>@@ -180,7 +189,17 @@ static bool IsDomainWhitelisted(const std::string &in_url) { <newline> bool IsDomainAuthorized(NPP instance) { <newline> #ifdef O3D_PLUGIN_DOMAIN_WHITELIST <newline>-  bool authorized = IsDomainWhitelisted(GetURL(instance)); <newline>+  std::string url(GetURL(instance)); <newline>+  if (url.empty()) { <newline>+    // This can happen in Chrome due to a bug with cross-origin security checks, <newline>+    // including on legitimate pages. Until it's fixed we'll just allow any <newline>+    // domain when this happens. <newline>+    // http://code.google.com/p/chromium/issues/detail?id=64229 <newline>+    LOG(WARNING) << <newline>+        "Allowing use despite inability to determine the hosting page"; <newline>+    return true; <newline>+  } <newline>+  bool authorized = IsDomainWhitelisted(url); <newline>   if (!authorized) { <newline>     LOG(ERROR) << "Unauthorized domain"; <newline>   }
bf710e05d984d80d23507b7733f2e5fc4cd47f4	tschmelcher@chromium.org <tschmelcher@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 2 22:07:28 2010 +0000	Work around a Chrome bug in cross-origin security checks that sometimes prevents O3D from loading. TEST=loaded O3D several times in Chrome until the problem repro'ed and verified that O3D loaded and worked anyway	none		http://codereview.chromium.org/5615001	svn://svn.chromium.org/chrome/trunk/src@68078 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/o3d/plugin/cross/whitelist.cc b/o3d/plugin/cross/whitelist.cc <newline>index ebc4ff9..7ec78c3 100644 <newline>--- a/o3d/plugin/cross/whitelist.cc <newline>+++ b/o3d/plugin/cross/whitelist.cc <newline>@@ -57,6 +57,15 @@ static const char kHttpsProtocol[] = "https://"; <newline> // For testing purposes assume local files valid too. <newline> static const char kLocalFileUrlProtocol[] = "file://"; <newline>+static bool GetPropertyByNameString(NPP instance, <newline>+                                    NPObject *obj, <newline>+                                    const char *name_str, <newline>+                                    NPVariant *out) { <newline>+  // Create an identifier for the name. <newline>+  NPIdentifier identifier = NPN_GetStringIdentifier(name_str); <newline>+  return NPN_GetProperty(instance, obj, identifier, out); <newline>+} <newline>+ <newline> static std::string GetURL(NPP instance) { <newline>   std::string url; <newline>   // get URL for the loading page - first approach from <newline>@@ -74,14 +83,14 @@ static std::string GetURL(NPP instance) { <newline>     goto exit0; <newline>   } <newline>   { <newline>-    // Create a "location" identifier. <newline>-    NPIdentifier identifier = NPN_GetStringIdentifier("location"); <newline>     // Declare a local variant value for the location. <newline>     NPVariant location_variant_value; <newline>     // Get the location property from the window object <newline>     // (which is another object). <newline>-    bool success = NPN_GetProperty(instance, window_obj, identifier, <newline>-                                   &location_variant_value); <newline>+    bool success = GetPropertyByNameString(instance, <newline>+                                           window_obj, <newline>+                                           "location", <newline>+                                           &location_variant_value); <newline>     if (!success) { <newline>       LOG(ERROR) << "getproperty failed (location)"; <newline>       goto exit0; <newline>@@ -93,14 +102,14 @@ static std::string GetURL(NPP instance) { <newline>     } <newline>     { <newline>       // Get a pointer to the "location" object. <newline>-      NPObject *location_obj = location_variant_value.value.objectValue; <newline>-      // Create a "href" identifier. <newline>-      identifier = NPN_GetStringIdentifier("href"); <newline>+      NPObject *location_obj = NPVARIANT_TO_OBJECT(location_variant_value); <newline>       // Declare a local variant value for the href. <newline>       NPVariant href_variant_value; <newline>       // Get the location property from the location object. <newline>-      success = NPN_GetProperty(instance, location_obj, identifier, <newline>-                                &href_variant_value); <newline>+      success = GetPropertyByNameString(instance, <newline>+                                        location_obj, <newline>+                                        "href", <newline>+                                        &href_variant_value); <newline>       if (!success) { <newline>         LOG(ERROR) << "getproperty failed (href)"; <newline>         goto exit1; <newline>@@ -114,9 +123,9 @@ static std::string GetURL(NPP instance) { <newline>       // from it. <newline>       url = std::string( <newline>           static_cast<const char *>( <newline>-              href_variant_value.value.stringValue.UTF8Characters), <newline>+              NPVARIANT_TO_STRING(href_variant_value).UTF8Characters), <newline>           static_cast<size_t>( <newline>-              href_variant_value.value.stringValue.UTF8Length)); <newline>+              NPVARIANT_TO_STRING(href_variant_value).UTF8Length)); <newline>      exit2: <newline>       NPN_ReleaseVariantValue(&href_variant_value); <newline>@@ -180,7 +189,17 @@ static bool IsDomainWhitelisted(const std::string &in_url) { <newline> bool IsDomainAuthorized(NPP instance) { <newline> #ifdef O3D_PLUGIN_DOMAIN_WHITELIST <newline>-  bool authorized = IsDomainWhitelisted(GetURL(instance)); <newline>+  std::string url(GetURL(instance)); <newline>+  if (url.empty()) { <newline>+    // This can happen in Chrome due to a bug with cross-origin security checks, <newline>+    // including on legitimate pages. Until it's fixed we'll just allow any <newline>+    // domain when this happens. <newline>+    // http://code.google.com/p/chromium/issues/detail?id=64229 <newline>+    LOG(WARNING) << <newline>+        "Allowing use despite inability to determine the hosting page"; <newline>+    return true; <newline>+  } <newline>+  bool authorized = IsDomainWhitelisted(url); <newline>   if (!authorized) { <newline>     LOG(ERROR) << "Unauthorized domain"; <newline>   }
caab6ac4355f0fa30b6d3661c09bdc9a8a2b3de	dilmah@chromium.org <dilmah@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 2 13:49:16 2010 +0000	Quick dirty "fix" for problems with application of security restrictions. It is just temporary workaround till chromium-os:9666 is fixed. TEST=Manual	chromium-os:9876,chromium-os:9818		http://codereview.chromium.org/5520003	svn://svn.chromium.org/chrome/trunk/src@68002 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/user_cros_settings_provider.cc b/chrome/browser/chromeos/user_cros_settings_provider.cc <newline>index 4f90c20..9aee01b 100644 <newline>--- a/chrome/browser/chromeos/user_cros_settings_provider.cc <newline>+++ b/chrome/browser/chromeos/user_cros_settings_provider.cc <newline>@@ -327,7 +327,13 @@ class UserCrosSettingsTrust : public SignedSettingsHelper::Callback, <newline>       if (IsControlledBooleanSetting(name)) { <newline>         // For boolean settings we can just set safe (false) values <newline>         // and continue as trusted. <newline>-        UpdateCacheBool(name, false, USE_VALUE_SUPPLIED); <newline>+        // TODO(dilmah): after http://crosbug.com/9666 is fixed: <newline>+        // replace it to USE_VALUE_SUPPLIED. <newline>+        // Until that we use default value as a quick "fix" for: <newline>+        // http://crosbug.com/9876 and http://crosbug.com/9818 <newline>+        // Since we cannot discriminate missing and spoofed setting ATM: assume <newline>+        // that it is missing (common case for old images). <newline>+        UpdateCacheBool(name, false, USE_VALUE_DEFAULT); <newline>       } else { <newline>         prefs->ClearPref((name + kTrustedSuffix).c_str()); <newline>         return;
6415a8468cba00861e091f34427e7e080a0d4f5	dilmah@chromium.org <dilmah@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 2 13:49:16 2010 +0000	Quick dirty "fix" for problems with application of security restrictions. It is just temporary workaround till chromium-os:9666 is fixed. TEST=Manual	chromium-os:9876,chromium-os:9818		http://codereview.chromium.org/5520003	svn://svn.chromium.org/chrome/trunk/src@68002 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/user_cros_settings_provider.cc b/chrome/browser/chromeos/user_cros_settings_provider.cc <newline>index 4f90c20..9aee01b 100644 <newline>--- a/chrome/browser/chromeos/user_cros_settings_provider.cc <newline>+++ b/chrome/browser/chromeos/user_cros_settings_provider.cc <newline>@@ -327,7 +327,13 @@ class UserCrosSettingsTrust : public SignedSettingsHelper::Callback, <newline>       if (IsControlledBooleanSetting(name)) { <newline>         // For boolean settings we can just set safe (false) values <newline>         // and continue as trusted. <newline>-        UpdateCacheBool(name, false, USE_VALUE_SUPPLIED); <newline>+        // TODO(dilmah): after http://crosbug.com/9666 is fixed: <newline>+        // replace it to USE_VALUE_SUPPLIED. <newline>+        // Until that we use default value as a quick "fix" for: <newline>+        // http://crosbug.com/9876 and http://crosbug.com/9818 <newline>+        // Since we cannot discriminate missing and spoofed setting ATM: assume <newline>+        // that it is missing (common case for old images). <newline>+        UpdateCacheBool(name, false, USE_VALUE_DEFAULT); <newline>       } else { <newline>         prefs->ClearPref((name + kTrustedSuffix).c_str()); <newline>         return;
37c1e55f1aedc0ebf9ad7301471d2a28515aafd	dhollowa@chromium.org <dhollowa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 24 02:29:39 2010 +0000	Autofill infobar doesn't come up when security code is filled Adds back in the notion of credit card cvc for heuristics purposes.  The additional logic filters out cvc numbers from the forms.  They were getting interpreted, in some cases, as card numbers. TEST=FormStructureTest.CVCCodeClash	64131		http://codereview.chromium.org/5268004	svn://svn.chromium.org/chrome/trunk/src@67204 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/autofill/form_structure_unittest.cc b/chrome/browser/autofill/form_structure_unittest.cc <newline>index 8eb03fd..4097a69 100644 <newline>--- a/chrome/browser/autofill/form_structure_unittest.cc <newline>+++ b/chrome/browser/autofill/form_structure_unittest.cc <newline>@@ -1287,6 +1287,62 @@ TEST(FormStructureTest, HeuristicsInfernoCC) { <newline>             form_structure->field(4)->heuristic_type()); <newline> } <newline>+TEST(FormStructureTest, CVCCodeClash) { <newline>+  scoped_ptr<FormStructure> form_structure; <newline>+  FormData form; <newline>+  form.method = ASCIIToUTF16("post"); <newline>+  form.fields.push_back(webkit_glue::FormField(ASCIIToUTF16("Card number"), <newline>+                                               ASCIIToUTF16("ccnumber"), <newline>+                                               string16(), <newline>+                                               ASCIIToUTF16("text"), <newline>+                                               0)); <newline>+  form.fields.push_back(webkit_glue::FormField(ASCIIToUTF16("First name"), <newline>+                                               ASCIIToUTF16("first_name"), <newline>+                                               string16(), <newline>+                                               ASCIIToUTF16("text"), <newline>+                                               0)); <newline>+  form.fields.push_back(webkit_glue::FormField(ASCIIToUTF16("Last name"), <newline>+                                               ASCIIToUTF16("last_name"), <newline>+                                               string16(), <newline>+                                               ASCIIToUTF16("text"), <newline>+                                               0)); <newline>+  form.fields.push_back(webkit_glue::FormField(ASCIIToUTF16("Expiration date"), <newline>+                                               ASCIIToUTF16("ccexpiresmonth"), <newline>+                                               string16(), <newline>+                                               ASCIIToUTF16("text"), <newline>+                                               0)); <newline>+  form.fields.push_back(webkit_glue::FormField(ASCIIToUTF16(""), <newline>+                                               ASCIIToUTF16("ccexpiresyear"), <newline>+                                               string16(), <newline>+                                               ASCIIToUTF16("text"), <newline>+                                               0)); <newline>+  form.fields.push_back(webkit_glue::FormField(ASCIIToUTF16("cvc number"), <newline>+                                               ASCIIToUTF16("csc"), <newline>+                                               string16(), <newline>+                                               ASCIIToUTF16("text"), <newline>+                                               0)); <newline>+  form_structure.reset(new FormStructure(form)); <newline>+  EXPECT_TRUE(form_structure->IsAutoFillable(true)); <newline>+ <newline>+  // Expect the correct number of fields. <newline>+  ASSERT_EQ(6U, form_structure->field_count()); <newline>+  ASSERT_EQ(4U, form_structure->autofill_count()); <newline>+ <newline>+  // Card Number. <newline>+  EXPECT_EQ(CREDIT_CARD_NUMBER, form_structure->field(0)->heuristic_type()); <newline>+  // First name, taken as name on card. <newline>+  EXPECT_EQ(CREDIT_CARD_NAME, form_structure->field(1)->heuristic_type()); <newline>+  // Last name is not merged. <newline>+  EXPECT_EQ(UNKNOWN_TYPE, form_structure->field(2)->heuristic_type()); <newline>+  // Expiration Date. <newline>+  EXPECT_EQ(CREDIT_CARD_EXP_MONTH, form_structure->field(3)->heuristic_type()); <newline>+  // Expiration Year. <newline>+  EXPECT_EQ(CREDIT_CARD_EXP_4_DIGIT_YEAR, <newline>+            form_structure->field(4)->heuristic_type()); <newline>+  // CVC code should not match. <newline>+  EXPECT_EQ(UNKNOWN_TYPE, form_structure->field(5)->heuristic_type()); <newline>+} <newline>+ <newline> TEST(FormStructureTest, EncodeQueryRequest) { <newline>   FormData form; <newline>   form.method = ASCIIToUTF16("post");
731a7edd7a30d2934de85876604093d9a738e6e	dhollowa@chromium.org <dhollowa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 24 02:29:39 2010 +0000	Autofill infobar doesn't come up when security code is filled Adds back in the notion of credit card cvc for heuristics purposes.  The additional logic filters out cvc numbers from the forms.  They were getting interpreted, in some cases, as card numbers. TEST=FormStructureTest.CVCCodeClash	64131		http://codereview.chromium.org/5268004	svn://svn.chromium.org/chrome/trunk/src@67204 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/autofill/form_structure_unittest.cc b/chrome/browser/autofill/form_structure_unittest.cc <newline>index 8eb03fd..4097a69 100644 <newline>--- a/chrome/browser/autofill/form_structure_unittest.cc <newline>+++ b/chrome/browser/autofill/form_structure_unittest.cc <newline>@@ -1287,6 +1287,62 @@ TEST(FormStructureTest, HeuristicsInfernoCC) { <newline>             form_structure->field(4)->heuristic_type()); <newline> } <newline>+TEST(FormStructureTest, CVCCodeClash) { <newline>+  scoped_ptr<FormStructure> form_structure; <newline>+  FormData form; <newline>+  form.method = ASCIIToUTF16("post"); <newline>+  form.fields.push_back(webkit_glue::FormField(ASCIIToUTF16("Card number"), <newline>+                                               ASCIIToUTF16("ccnumber"), <newline>+                                               string16(), <newline>+                                               ASCIIToUTF16("text"), <newline>+                                               0)); <newline>+  form.fields.push_back(webkit_glue::FormField(ASCIIToUTF16("First name"), <newline>+                                               ASCIIToUTF16("first_name"), <newline>+                                               string16(), <newline>+                                               ASCIIToUTF16("text"), <newline>+                                               0)); <newline>+  form.fields.push_back(webkit_glue::FormField(ASCIIToUTF16("Last name"), <newline>+                                               ASCIIToUTF16("last_name"), <newline>+                                               string16(), <newline>+                                               ASCIIToUTF16("text"), <newline>+                                               0)); <newline>+  form.fields.push_back(webkit_glue::FormField(ASCIIToUTF16("Expiration date"), <newline>+                                               ASCIIToUTF16("ccexpiresmonth"), <newline>+                                               string16(), <newline>+                                               ASCIIToUTF16("text"), <newline>+                                               0)); <newline>+  form.fields.push_back(webkit_glue::FormField(ASCIIToUTF16(""), <newline>+                                               ASCIIToUTF16("ccexpiresyear"), <newline>+                                               string16(), <newline>+                                               ASCIIToUTF16("text"), <newline>+                                               0)); <newline>+  form.fields.push_back(webkit_glue::FormField(ASCIIToUTF16("cvc number"), <newline>+                                               ASCIIToUTF16("csc"), <newline>+                                               string16(), <newline>+                                               ASCIIToUTF16("text"), <newline>+                                               0)); <newline>+  form_structure.reset(new FormStructure(form)); <newline>+  EXPECT_TRUE(form_structure->IsAutoFillable(true)); <newline>+ <newline>+  // Expect the correct number of fields. <newline>+  ASSERT_EQ(6U, form_structure->field_count()); <newline>+  ASSERT_EQ(4U, form_structure->autofill_count()); <newline>+ <newline>+  // Card Number. <newline>+  EXPECT_EQ(CREDIT_CARD_NUMBER, form_structure->field(0)->heuristic_type()); <newline>+  // First name, taken as name on card. <newline>+  EXPECT_EQ(CREDIT_CARD_NAME, form_structure->field(1)->heuristic_type()); <newline>+  // Last name is not merged. <newline>+  EXPECT_EQ(UNKNOWN_TYPE, form_structure->field(2)->heuristic_type()); <newline>+  // Expiration Date. <newline>+  EXPECT_EQ(CREDIT_CARD_EXP_MONTH, form_structure->field(3)->heuristic_type()); <newline>+  // Expiration Year. <newline>+  EXPECT_EQ(CREDIT_CARD_EXP_4_DIGIT_YEAR, <newline>+            form_structure->field(4)->heuristic_type()); <newline>+  // CVC code should not match. <newline>+  EXPECT_EQ(UNKNOWN_TYPE, form_structure->field(5)->heuristic_type()); <newline>+} <newline>+ <newline> TEST(FormStructureTest, EncodeQueryRequest) { <newline>   FormData form; <newline>   form.method = ASCIIToUTF16("post");
34d386851210cb7daffb503dc8e59a891462253	rsleevi@chromium.org <rsleevi@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Nov 22 13:35:49 2010 +0000	Clean-up style issues in net:: related to X.509 data-types, eliminating unnecessary includes and marking platform-specific implementations as such. Also clearly document that CertPrincipal::Matches() is not suitable for security-relevant name checks. In addition, because x509_cert_types.h no longer includes base/singleton.h, fix all the classes that broke because they weren't including what they used. TEST=existing	none		http://codereview.chromium.org/5162001	svn://svn.chromium.org/chrome/trunk/src@66941 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/third_party/mozilla_security_manager/nsPKCS12Blob.cpp b/net/third_party/mozilla_security_manager/nsPKCS12Blob.cpp <newline>index 35170cc..aae8d90 100644 <newline>--- a/net/third_party/mozilla_security_manager/nsPKCS12Blob.cpp <newline>+++ b/net/third_party/mozilla_security_manager/nsPKCS12Blob.cpp <newline>@@ -45,6 +45,7 @@ <newline> #include "base/crypto/scoped_nss_types.h" <newline> #include "base/logging.h" <newline> #include "base/nss_util_internal.h" <newline>+#include "base/singleton.h" <newline> #include "base/string_util.h" <newline> #include "net/base/net_errors.h" <newline> #include "net/base/x509_certificate.h"
1f40349ae8b6a644399d7b609a3c702873ddc3b	rsleevi@chromium.org <rsleevi@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Nov 22 13:35:49 2010 +0000	Clean-up style issues in net:: related to X.509 data-types, eliminating unnecessary includes and marking platform-specific implementations as such. Also clearly document that CertPrincipal::Matches() is not suitable for security-relevant name checks. In addition, because x509_cert_types.h no longer includes base/singleton.h, fix all the classes that broke because they weren't including what they used. TEST=existing	none		http://codereview.chromium.org/5162001	svn://svn.chromium.org/chrome/trunk/src@66941 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/third_party/mozilla_security_manager/nsPKCS12Blob.cpp b/net/third_party/mozilla_security_manager/nsPKCS12Blob.cpp <newline>index 35170cc..aae8d90 100644 <newline>--- a/net/third_party/mozilla_security_manager/nsPKCS12Blob.cpp <newline>+++ b/net/third_party/mozilla_security_manager/nsPKCS12Blob.cpp <newline>@@ -45,6 +45,7 @@ <newline> #include "base/crypto/scoped_nss_types.h" <newline> #include "base/logging.h" <newline> #include "base/nss_util_internal.h" <newline>+#include "base/singleton.h" <newline> #include "base/string_util.h" <newline> #include "net/base/net_errors.h" <newline> #include "net/base/x509_certificate.h"
c8cb89c0b63fface5f90fa36a1fc21e8533c924	cbentzel@chromium.org <cbentzel@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 19 20:12:09 2010 +0000	Regression: Use Windows Security Zone to determine if default credentials are allowed for NTLM/Negotiate authentication. NTLM/Negotiate authentication recently added group policy support for configuring authentication parameters. This introduced an issue where non-specification of a server whitelist resulted in no servers being whitelisted, instead of using security zone mapping. TEST=Go to an NTLM or Negotiate authenticating server on a Windows version of Chromium, and validate that authentication happens without a password prompt.	19		http://codereview.chromium.org/5172006	svn://svn.chromium.org/chrome/trunk/src@66801 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/io_thread.cc b/chrome/browser/io_thread.cc <newline>index 788c339..1c90b0b 100644 <newline>--- a/chrome/browser/io_thread.cc <newline>+++ b/chrome/browser/io_thread.cc <newline>@@ -443,11 +443,16 @@ void IOThread::RegisterPrefs(PrefService* local_state) { <newline> net::HttpAuthHandlerFactory* IOThread::CreateDefaultAuthHandlerFactory( <newline>     net::HostResolver* resolver) { <newline>- <newline>-  net::HttpAuthFilterWhitelist* auth_filter_default_credentials = <newline>-      new net::HttpAuthFilterWhitelist(auth_server_whitelist_); <newline>-  net::HttpAuthFilterWhitelist* auth_filter_delegate = <newline>-      new net::HttpAuthFilterWhitelist(auth_delegate_whitelist_); <newline>+  net::HttpAuthFilterWhitelist* auth_filter_default_credentials = NULL; <newline>+  if (!auth_server_whitelist_.empty()) { <newline>+    auth_filter_default_credentials = <newline>+        new net::HttpAuthFilterWhitelist(auth_server_whitelist_); <newline>+  } <newline>+  net::HttpAuthFilterWhitelist* auth_filter_delegate = NULL; <newline>+  if (!auth_delegate_whitelist_.empty()) { <newline>+    auth_filter_delegate = <newline>+        new net::HttpAuthFilterWhitelist(auth_delegate_whitelist_); <newline>+  } <newline>   globals_->url_security_manager.reset( <newline>       net::URLSecurityManager::Create(auth_filter_default_credentials, <newline>                                       auth_filter_delegate));
030a63a7c39cc029123e0bcda098c5a9a24ba02	cbentzel@chromium.org <cbentzel@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 19 20:12:09 2010 +0000	Regression: Use Windows Security Zone to determine if default credentials are allowed for NTLM/Negotiate authentication. NTLM/Negotiate authentication recently added group policy support for configuring authentication parameters. This introduced an issue where non-specification of a server whitelist resulted in no servers being whitelisted, instead of using security zone mapping. TEST=Go to an NTLM or Negotiate authenticating server on a Windows version of Chromium, and validate that authentication happens without a password prompt.	19		http://codereview.chromium.org/5172006	svn://svn.chromium.org/chrome/trunk/src@66801 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/io_thread.cc b/chrome/browser/io_thread.cc <newline>index 788c339..1c90b0b 100644 <newline>--- a/chrome/browser/io_thread.cc <newline>+++ b/chrome/browser/io_thread.cc <newline>@@ -443,11 +443,16 @@ void IOThread::RegisterPrefs(PrefService* local_state) { <newline> net::HttpAuthHandlerFactory* IOThread::CreateDefaultAuthHandlerFactory( <newline>     net::HostResolver* resolver) { <newline>- <newline>-  net::HttpAuthFilterWhitelist* auth_filter_default_credentials = <newline>-      new net::HttpAuthFilterWhitelist(auth_server_whitelist_); <newline>-  net::HttpAuthFilterWhitelist* auth_filter_delegate = <newline>-      new net::HttpAuthFilterWhitelist(auth_delegate_whitelist_); <newline>+  net::HttpAuthFilterWhitelist* auth_filter_default_credentials = NULL; <newline>+  if (!auth_server_whitelist_.empty()) { <newline>+    auth_filter_default_credentials = <newline>+        new net::HttpAuthFilterWhitelist(auth_server_whitelist_); <newline>+  } <newline>+  net::HttpAuthFilterWhitelist* auth_filter_delegate = NULL; <newline>+  if (!auth_delegate_whitelist_.empty()) { <newline>+    auth_filter_delegate = <newline>+        new net::HttpAuthFilterWhitelist(auth_delegate_whitelist_); <newline>+  } <newline>   globals_->url_security_manager.reset( <newline>       net::URLSecurityManager::Create(auth_filter_default_credentials, <newline>                                       auth_filter_delegate));
3fa03f174b4d420fd5f40380e3d959b5640d2fd	mmenke@google.com <mmenke@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Nov 18 15:06:44 2010 +0000	Modify GetErrorDescription to give a -1004 (NSURLErrorCannotConnectToHost) when passed a net::ERR_NETWORK_ACCESS_DENIED error.  This results in a error code being output by the security/block-test-no-port.html layout test on OSX that is consistent with other platforms. The test is also temporarily disabled on OSX until the expected results are updated. TEST=security/block-test-no-port.html (Currently disabled)	61655		http://codereview.chromium.org/5012005	svn://svn.chromium.org/chrome/trunk/src@66619 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_webview_delegate.cc b/webkit/tools/test_shell/test_webview_delegate.cc <newline>index 985d5f5..525c501 100644 <newline>--- a/webkit/tools/test_shell/test_webview_delegate.cc <newline>+++ b/webkit/tools/test_shell/test_webview_delegate.cc <newline>@@ -224,7 +224,7 @@ std::string GetErrorDescription(const WebURLError& error) { <newline>     domain = "NSURLErrorDomain"; <newline>     switch (error.reason) { <newline>       case net::ERR_ABORTED: <newline>-        code = -999; <newline>+        code = -999;  // NSURLErrorCancelled <newline>         break; <newline>       case net::ERR_UNSAFE_PORT: <newline>         // Our unsafe port checking happens at the network stack level, but we <newline>@@ -234,7 +234,8 @@ std::string GetErrorDescription(const WebURLError& error) { <newline>         break; <newline>       case net::ERR_ADDRESS_INVALID: <newline>       case net::ERR_ADDRESS_UNREACHABLE: <newline>-        code = -1004; <newline>+      case net::ERR_NETWORK_ACCESS_DENIED: <newline>+        code = -1004;  // NSURLErrorCannotConnectToHost <newline>         break; <newline>     } <newline>   } else {
e2e2720df303d4c172c2dcf24bb0b1b3616bf90	mmenke@google.com <mmenke@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Nov 18 15:06:44 2010 +0000	Modify GetErrorDescription to give a -1004 (NSURLErrorCannotConnectToHost) when passed a net::ERR_NETWORK_ACCESS_DENIED error.  This results in a error code being output by the security/block-test-no-port.html layout test on OSX that is consistent with other platforms. The test is also temporarily disabled on OSX until the expected results are updated. TEST=security/block-test-no-port.html (Currently disabled)	61655		http://codereview.chromium.org/5012005	svn://svn.chromium.org/chrome/trunk/src@66619 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_webview_delegate.cc b/webkit/tools/test_shell/test_webview_delegate.cc <newline>index 985d5f5..525c501 100644 <newline>--- a/webkit/tools/test_shell/test_webview_delegate.cc <newline>+++ b/webkit/tools/test_shell/test_webview_delegate.cc <newline>@@ -224,7 +224,7 @@ std::string GetErrorDescription(const WebURLError& error) { <newline>     domain = "NSURLErrorDomain"; <newline>     switch (error.reason) { <newline>       case net::ERR_ABORTED: <newline>-        code = -999; <newline>+        code = -999;  // NSURLErrorCancelled <newline>         break; <newline>       case net::ERR_UNSAFE_PORT: <newline>         // Our unsafe port checking happens at the network stack level, but we <newline>@@ -234,7 +234,8 @@ std::string GetErrorDescription(const WebURLError& error) { <newline>         break; <newline>       case net::ERR_ADDRESS_INVALID: <newline>       case net::ERR_ADDRESS_UNREACHABLE: <newline>-        code = -1004; <newline>+      case net::ERR_NETWORK_ACCESS_DENIED: <newline>+        code = -1004;  // NSURLErrorCannotConnectToHost <newline>         break; <newline>     } <newline>   } else {
cb5dfd737b80f3ff76d06a098c505a7f5a4a85a	robertshield@chromium.org <robertshield@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 16 14:25:03 2010 +0000	Chrome Frame: Add explicit object security attributes to the Chrome Frame version beacon. This will allow low integrity processes to access shared memory segment and lock and make shared memory segment read only after creation. Also use lock names that include the hosting process. TEST=Start medium integrity Chrome Frame host running CF version X. Update CF to version Y > X. Start low integrity Chrome Frame host, observe that version X is loaded.	61609		http://codereview.chromium.org/5012001	svn://svn.chromium.org/chrome/trunk/src@66270 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/test/module_utils_test.cc b/chrome_frame/test/module_utils_test.cc <newline>index 4bb16ce..26a0ac7 100644 <newline>--- a/chrome_frame/test/module_utils_test.cc <newline>+++ b/chrome_frame/test/module_utils_test.cc <newline>@@ -6,8 +6,10 @@ <newline> #include "base/scoped_handle.h" <newline> #include "base/shared_memory.h" <newline>+#include "base/sys_info.h" <newline> #include "base/utf_string_conversions.h" <newline> #include "base/version.h" <newline>+#include "chrome_frame/test/chrome_frame_test_utils.h" <newline> #include "gtest/gtest.h" <newline> extern "C" IMAGE_DOS_HEADER __ImageBase; <newline>@@ -68,6 +70,21 @@ class MockDllRedirector2 : public MockDllRedirector { <newline>   } <newline> }; <newline>+class MockDllRedirectorNoPermissions : public MockDllRedirector { <newline>+ public: <newline>+  explicit MockDllRedirectorNoPermissions(const char* beacon_name) <newline>+    : MockDllRedirector(beacon_name) {} <newline>+ <newline>+  virtual bool BuildSecurityAttributesForLock( <newline>+      ATL::CSecurityAttributes* sec_attr) { <newline>+    return false; <newline>+  } <newline>+ <newline>+  virtual bool SetFileMappingToReadOnly(base::SharedMemoryHandle mapping) { <newline>+    return true; <newline>+  } <newline>+}; <newline>+ <newline> class DllRedirectorTest : public testing::Test { <newline>  public: <newline>   virtual void SetUp() { <newline>@@ -290,3 +307,97 @@ TEST_F(DllRedirectorTest, BadVersionNumber) { <newline>   EXPECT_EQ(reinterpret_cast<HMODULE>(&__ImageBase), first_module); <newline> } <newline>+// TODO(robertshield): These tests rely on simulating access checks from a low <newline>+// integrity process using impersonation. This may not be exactly identical to <newline>+// actually having a separate low integrity process. <newline>+TEST_F(DllRedirectorTest, LowIntegrityAccess) { <newline>+  scoped_ptr<MockDllRedirector> first_redirector( <newline>+      new MockDllRedirector(kTestVersionBeaconName)); <newline>+  EXPECT_TRUE(first_redirector->RegisterAsFirstCFModule()); <newline>+ <newline>+  // Ensure that we can acquire the mutex from medium integrity: <newline>+  { <newline>+    base::SharedMemory shared_memory(ASCIIToWide(kTestVersionBeaconName)); <newline>+    bool mutex_locked = shared_memory.Lock(kWaitTestTimeout, NULL); <newline>+    EXPECT_TRUE(mutex_locked); <newline>+ <newline>+    // Ensure that the shared memory is read-only: <newline>+    EXPECT_FALSE(shared_memory.Open(kTestVersionBeaconName, false)); <newline>+    shared_memory.Close(); <newline>+    EXPECT_TRUE(shared_memory.Open(kTestVersionBeaconName, true)); <newline>+    shared_memory.Close(); <newline>+ <newline>+    if (mutex_locked) <newline>+      shared_memory.Unlock(); <newline>+  } <newline>+ <newline>+  int32 major_version, minor_version, fix_version; <newline>+  base::SysInfo::OperatingSystemVersionNumbers(&major_version, <newline>+                                               &minor_version, <newline>+                                               &fix_version); <newline>+  if (major_version >= 6) { <newline>+    // Now move to low integrity <newline>+    chrome_frame_test::LowIntegrityToken low_integrity_token; <newline>+    ASSERT_TRUE(low_integrity_token.Impersonate()); <newline>+ <newline>+    // Ensure that we can also acquire the mutex from low integrity. <newline>+    base::SharedMemory shared_memory(ASCIIToWide(kTestVersionBeaconName)); <newline>+    bool mutex_locked = shared_memory.Lock(kWaitTestTimeout, NULL); <newline>+    EXPECT_TRUE(mutex_locked); <newline>+ <newline>+    // Ensure that the shared memory is read-only: <newline>+    EXPECT_FALSE(shared_memory.Open(kTestVersionBeaconName, false)); <newline>+    shared_memory.Close(); <newline>+    EXPECT_TRUE(shared_memory.Open(kTestVersionBeaconName, true)); <newline>+    shared_memory.Close(); <newline>+ <newline>+    if (mutex_locked) <newline>+      shared_memory.Unlock(); <newline>+  } <newline>+} <newline>+ <newline>+TEST_F(DllRedirectorTest, LowIntegrityAccessDenied) { <newline>+  // Run this test with a mock DllRedirector that doesn't set permissions <newline>+  // on the shared memory. <newline>+  scoped_ptr<MockDllRedirectorNoPermissions> first_redirector( <newline>+      new MockDllRedirectorNoPermissions(kTestVersionBeaconName)); <newline>+  EXPECT_TRUE(first_redirector->RegisterAsFirstCFModule()); <newline>+ <newline>+  // Ensure that we can acquire the mutex from medium integrity: <newline>+  { <newline>+    base::SharedMemory shared_memory(ASCIIToWide(kTestVersionBeaconName)); <newline>+    bool mutex_locked = shared_memory.Lock(kWaitTestTimeout, NULL); <newline>+    EXPECT_TRUE(mutex_locked); <newline>+ <newline>+    // We should be able to open the memory as read/write. <newline>+    EXPECT_TRUE(shared_memory.Open(kTestVersionBeaconName, false)); <newline>+    shared_memory.Close(); <newline>+ <newline>+    if (mutex_locked) <newline>+      shared_memory.Unlock(); <newline>+  } <newline>+ <newline>+  int32 major_version, minor_version, fix_version; <newline>+  base::SysInfo::OperatingSystemVersionNumbers(&major_version, <newline>+                                               &minor_version, <newline>+                                               &fix_version); <newline>+  if (major_version >= 6) { <newline>+    // Now move to low integrity <newline>+    chrome_frame_test::LowIntegrityToken low_integrity_token; <newline>+    low_integrity_token.Impersonate(); <newline>+ <newline>+    // Ensure that we can't acquire the mutex without having set the <newline>+    // Low Integrity ACE in the SACL. <newline>+    base::SharedMemory shared_memory(ASCIIToWide(kTestVersionBeaconName)); <newline>+    bool mutex_locked = shared_memory.Lock(kWaitTestTimeout, NULL); <newline>+    EXPECT_FALSE(mutex_locked); <newline>+ <newline>+    // We shouldn't be able to open the memory. <newline>+    EXPECT_FALSE(shared_memory.Open(kTestVersionBeaconName, false)); <newline>+    shared_memory.Close(); <newline>+ <newline>+    if (mutex_locked) <newline>+      shared_memory.Unlock(); <newline>+  } <newline>+} <newline>+
21551607bdee875b9502d8fd74bdcf69e009fe2	robertshield@chromium.org <robertshield@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 16 14:25:03 2010 +0000	Chrome Frame: Add explicit object security attributes to the Chrome Frame version beacon. This will allow low integrity processes to access shared memory segment and lock and make shared memory segment read only after creation. Also use lock names that include the hosting process. TEST=Start medium integrity Chrome Frame host running CF version X. Update CF to version Y > X. Start low integrity Chrome Frame host, observe that version X is loaded.	61609		http://codereview.chromium.org/5012001	svn://svn.chromium.org/chrome/trunk/src@66270 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/test/module_utils_test.cc b/chrome_frame/test/module_utils_test.cc <newline>index 4bb16ce..26a0ac7 100644 <newline>--- a/chrome_frame/test/module_utils_test.cc <newline>+++ b/chrome_frame/test/module_utils_test.cc <newline>@@ -6,8 +6,10 @@ <newline> #include "base/scoped_handle.h" <newline> #include "base/shared_memory.h" <newline>+#include "base/sys_info.h" <newline> #include "base/utf_string_conversions.h" <newline> #include "base/version.h" <newline>+#include "chrome_frame/test/chrome_frame_test_utils.h" <newline> #include "gtest/gtest.h" <newline> extern "C" IMAGE_DOS_HEADER __ImageBase; <newline>@@ -68,6 +70,21 @@ class MockDllRedirector2 : public MockDllRedirector { <newline>   } <newline> }; <newline>+class MockDllRedirectorNoPermissions : public MockDllRedirector { <newline>+ public: <newline>+  explicit MockDllRedirectorNoPermissions(const char* beacon_name) <newline>+    : MockDllRedirector(beacon_name) {} <newline>+ <newline>+  virtual bool BuildSecurityAttributesForLock( <newline>+      ATL::CSecurityAttributes* sec_attr) { <newline>+    return false; <newline>+  } <newline>+ <newline>+  virtual bool SetFileMappingToReadOnly(base::SharedMemoryHandle mapping) { <newline>+    return true; <newline>+  } <newline>+}; <newline>+ <newline> class DllRedirectorTest : public testing::Test { <newline>  public: <newline>   virtual void SetUp() { <newline>@@ -290,3 +307,97 @@ TEST_F(DllRedirectorTest, BadVersionNumber) { <newline>   EXPECT_EQ(reinterpret_cast<HMODULE>(&__ImageBase), first_module); <newline> } <newline>+// TODO(robertshield): These tests rely on simulating access checks from a low <newline>+// integrity process using impersonation. This may not be exactly identical to <newline>+// actually having a separate low integrity process. <newline>+TEST_F(DllRedirectorTest, LowIntegrityAccess) { <newline>+  scoped_ptr<MockDllRedirector> first_redirector( <newline>+      new MockDllRedirector(kTestVersionBeaconName)); <newline>+  EXPECT_TRUE(first_redirector->RegisterAsFirstCFModule()); <newline>+ <newline>+  // Ensure that we can acquire the mutex from medium integrity: <newline>+  { <newline>+    base::SharedMemory shared_memory(ASCIIToWide(kTestVersionBeaconName)); <newline>+    bool mutex_locked = shared_memory.Lock(kWaitTestTimeout, NULL); <newline>+    EXPECT_TRUE(mutex_locked); <newline>+ <newline>+    // Ensure that the shared memory is read-only: <newline>+    EXPECT_FALSE(shared_memory.Open(kTestVersionBeaconName, false)); <newline>+    shared_memory.Close(); <newline>+    EXPECT_TRUE(shared_memory.Open(kTestVersionBeaconName, true)); <newline>+    shared_memory.Close(); <newline>+ <newline>+    if (mutex_locked) <newline>+      shared_memory.Unlock(); <newline>+  } <newline>+ <newline>+  int32 major_version, minor_version, fix_version; <newline>+  base::SysInfo::OperatingSystemVersionNumbers(&major_version, <newline>+                                               &minor_version, <newline>+                                               &fix_version); <newline>+  if (major_version >= 6) { <newline>+    // Now move to low integrity <newline>+    chrome_frame_test::LowIntegrityToken low_integrity_token; <newline>+    ASSERT_TRUE(low_integrity_token.Impersonate()); <newline>+ <newline>+    // Ensure that we can also acquire the mutex from low integrity. <newline>+    base::SharedMemory shared_memory(ASCIIToWide(kTestVersionBeaconName)); <newline>+    bool mutex_locked = shared_memory.Lock(kWaitTestTimeout, NULL); <newline>+    EXPECT_TRUE(mutex_locked); <newline>+ <newline>+    // Ensure that the shared memory is read-only: <newline>+    EXPECT_FALSE(shared_memory.Open(kTestVersionBeaconName, false)); <newline>+    shared_memory.Close(); <newline>+    EXPECT_TRUE(shared_memory.Open(kTestVersionBeaconName, true)); <newline>+    shared_memory.Close(); <newline>+ <newline>+    if (mutex_locked) <newline>+      shared_memory.Unlock(); <newline>+  } <newline>+} <newline>+ <newline>+TEST_F(DllRedirectorTest, LowIntegrityAccessDenied) { <newline>+  // Run this test with a mock DllRedirector that doesn't set permissions <newline>+  // on the shared memory. <newline>+  scoped_ptr<MockDllRedirectorNoPermissions> first_redirector( <newline>+      new MockDllRedirectorNoPermissions(kTestVersionBeaconName)); <newline>+  EXPECT_TRUE(first_redirector->RegisterAsFirstCFModule()); <newline>+ <newline>+  // Ensure that we can acquire the mutex from medium integrity: <newline>+  { <newline>+    base::SharedMemory shared_memory(ASCIIToWide(kTestVersionBeaconName)); <newline>+    bool mutex_locked = shared_memory.Lock(kWaitTestTimeout, NULL); <newline>+    EXPECT_TRUE(mutex_locked); <newline>+ <newline>+    // We should be able to open the memory as read/write. <newline>+    EXPECT_TRUE(shared_memory.Open(kTestVersionBeaconName, false)); <newline>+    shared_memory.Close(); <newline>+ <newline>+    if (mutex_locked) <newline>+      shared_memory.Unlock(); <newline>+  } <newline>+ <newline>+  int32 major_version, minor_version, fix_version; <newline>+  base::SysInfo::OperatingSystemVersionNumbers(&major_version, <newline>+                                               &minor_version, <newline>+                                               &fix_version); <newline>+  if (major_version >= 6) { <newline>+    // Now move to low integrity <newline>+    chrome_frame_test::LowIntegrityToken low_integrity_token; <newline>+    low_integrity_token.Impersonate(); <newline>+ <newline>+    // Ensure that we can't acquire the mutex without having set the <newline>+    // Low Integrity ACE in the SACL. <newline>+    base::SharedMemory shared_memory(ASCIIToWide(kTestVersionBeaconName)); <newline>+    bool mutex_locked = shared_memory.Lock(kWaitTestTimeout, NULL); <newline>+    EXPECT_FALSE(mutex_locked); <newline>+ <newline>+    // We shouldn't be able to open the memory. <newline>+    EXPECT_FALSE(shared_memory.Open(kTestVersionBeaconName, false)); <newline>+    shared_memory.Close(); <newline>+ <newline>+    if (mutex_locked) <newline>+      shared_memory.Unlock(); <newline>+  } <newline>+} <newline>+
06103c70b29ef90d9115cf5aaf0f527051634ac	cpu@chromium.org <cpu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Nov 15 18:12:15 2010 +0000	Temporarily disable flash security test TEST=none TBR=jam@chromium.org	none	lugin("flash.html", action_max_timeout_ms(), false);	http://codereview.chromium.org/4974002	svn://svn.chromium.org/chrome/trunk/src@66133 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/plugin/plugin_test.cpp b/chrome/test/plugin/plugin_test.cpp <newline>index c2f1ad4..4fc85d1 100644 <newline>--- a/chrome/test/plugin/plugin_test.cpp <newline>+++ b/chrome/test/plugin/plugin_test.cpp <newline>@@ -185,7 +185,7 @@ TEST_F(ClickToPlayPluginTest, FlashDocument) { <newline> #if defined(OS_WIN) <newline> // Windows only test <newline>-TEST_F(PluginTest, FlashSecurity) { <newline>+TEST_F(PluginTest, DISABLED_FlashSecurity) { <newline> } <newline> #endif  // defined(OS_WIN)
b88dd381cd5f5366467bebdadd16d050674461f	cpu@chromium.org <cpu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Nov 15 18:12:15 2010 +0000	Temporarily disable flash security test TEST=none TBR=jam@chromium.org	none	lugin("flash.html", action_max_timeout_ms(), false);	http://codereview.chromium.org/4974002	svn://svn.chromium.org/chrome/trunk/src@66133 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/plugin/plugin_test.cpp b/chrome/test/plugin/plugin_test.cpp <newline>index c2f1ad4..4fc85d1 100644 <newline>--- a/chrome/test/plugin/plugin_test.cpp <newline>+++ b/chrome/test/plugin/plugin_test.cpp <newline>@@ -185,7 +185,7 @@ TEST_F(ClickToPlayPluginTest, FlashDocument) { <newline> #if defined(OS_WIN) <newline> // Windows only test <newline>-TEST_F(PluginTest, FlashSecurity) { <newline>+TEST_F(PluginTest, DISABLED_FlashSecurity) { <newline> } <newline> #endif  // defined(OS_WIN)
09ba926914f1d85bc6c7a231d2c7e96cd98aa73	asargent@chromium.org <asargent@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 12 04:21:43 2010 +0000	Remove the login token from webstorePrivate API function return values. This is to temporarily alleviate some UX and security concerns which we plan to address. We're leaving it in behind a flag so that the webstore engineers can continue to iterate on their end. TEST=Should be covered by existing tests.	62102		http://codereview.chromium.org/4834003	svn://svn.chromium.org/chrome/trunk/src@65905 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/webstore_private/browser_login/prompt_preferred.html b/chrome/test/data/extensions/webstore_private/browser_login/prompt_preferred.html <newline>index 7478926..16e5739 100644 <newline>--- a/chrome/test/data/extensions/webstore_private/browser_login/prompt_preferred.html <newline>+++ b/chrome/test/data/extensions/webstore_private/browser_login/prompt_preferred.html <newline>@@ -1,9 +1,8 @@ <newline> <script> <newline>-chrome.webstorePrivate.promptBrowserLogin("foo@bar.com", <newline>+chrome.webstorePrivate.promptBrowserLogin("foo@bar.com", <newline>                                           function(result) { <newline>-  if (result.login == "foo@bar.com" && result.token == "new_token") { <newline>+  if (result.login == "foo@bar.com" && typeof(result.token) == "undefined") { <newline>     chrome.test.sendMessage("success"); <newline>   } <newline> }); <newline> </script> <newline>-
81d298790029fdc74bc5db4b60c08c0d2f5d238	asargent@chromium.org <asargent@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 12 04:21:43 2010 +0000	Remove the login token from webstorePrivate API function return values. This is to temporarily alleviate some UX and security concerns which we plan to address. We're leaving it in behind a flag so that the webstore engineers can continue to iterate on their end. TEST=Should be covered by existing tests.	62102		http://codereview.chromium.org/4834003	svn://svn.chromium.org/chrome/trunk/src@65905 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/webstore_private/browser_login/prompt_preferred.html b/chrome/test/data/extensions/webstore_private/browser_login/prompt_preferred.html <newline>index 7478926..16e5739 100644 <newline>--- a/chrome/test/data/extensions/webstore_private/browser_login/prompt_preferred.html <newline>+++ b/chrome/test/data/extensions/webstore_private/browser_login/prompt_preferred.html <newline>@@ -1,9 +1,8 @@ <newline> <script> <newline>-chrome.webstorePrivate.promptBrowserLogin("foo@bar.com", <newline>+chrome.webstorePrivate.promptBrowserLogin("foo@bar.com", <newline>                                           function(result) { <newline>-  if (result.login == "foo@bar.com" && result.token == "new_token") { <newline>+  if (result.login == "foo@bar.com" && typeof(result.token) == "undefined") { <newline>     chrome.test.sendMessage("success"); <newline>   } <newline> }); <newline> </script> <newline>-
c52755a81c65c535483418f883f04040ef6e96b	asargent@chromium.org <asargent@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Nov 11 21:45:32 2010 +0000	Tighten access to webstore private APIs During the security review Erik and Cris noticed that if for some reason the web store app came back null, we could end up allowing access to the webstorePrivate APIs by returning a true comparison of null to null. TEST=Should be covered by existing tests.	61954		http://codereview.chromium.org/4665008	svn://svn.chromium.org/chrome/trunk/src@65858 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/extensions/extension_webstore_private_api.cc b/chrome/browser/extensions/extension_webstore_private_api.cc <newline>index 4614b59..5a33854 100644 <newline>--- a/chrome/browser/extensions/extension_webstore_private_api.cc <newline>+++ b/chrome/browser/extensions/extension_webstore_private_api.cc <newline>@@ -60,7 +60,10 @@ BrowserSignin* GetBrowserSignin(Profile* profile) { <newline> bool IsWebStoreURL(Profile* profile, const GURL& url) { <newline>   ExtensionsService* service = profile->GetExtensionsService(); <newline>   const Extension* store = service->GetWebStoreApp(); <newline>-  DCHECK(store); <newline>+  if (!store) { <newline>+    NOTREACHED(); <newline>+    return false; <newline>+  } <newline>   return (service->GetExtensionByWebExtent(url) == store); <newline> }
b7d1aab099945e69cd259c17fa75d926638ff33	asargent@chromium.org <asargent@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Nov 11 21:45:32 2010 +0000	Tighten access to webstore private APIs During the security review Erik and Cris noticed that if for some reason the web store app came back null, we could end up allowing access to the webstorePrivate APIs by returning a true comparison of null to null. TEST=Should be covered by existing tests.	61954		http://codereview.chromium.org/4665008	svn://svn.chromium.org/chrome/trunk/src@65858 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/extensions/extension_webstore_private_api.cc b/chrome/browser/extensions/extension_webstore_private_api.cc <newline>index 4614b59..5a33854 100644 <newline>--- a/chrome/browser/extensions/extension_webstore_private_api.cc <newline>+++ b/chrome/browser/extensions/extension_webstore_private_api.cc <newline>@@ -60,7 +60,10 @@ BrowserSignin* GetBrowserSignin(Profile* profile) { <newline> bool IsWebStoreURL(Profile* profile, const GURL& url) { <newline>   ExtensionsService* service = profile->GetExtensionsService(); <newline>   const Extension* store = service->GetWebStoreApp(); <newline>-  DCHECK(store); <newline>+  if (!store) { <newline>+    NOTREACHED(); <newline>+    return false; <newline>+  } <newline>   return (service->GetExtensionByWebExtent(url) == store); <newline> }
54ae72d7261ce74df262e695497354c5bec864d	robertshield@chromium.org <robertshield@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 2 20:30:13 2010 +0000	Updating test expectation for security/block-test-no-port.html since it seems to fail on the Mac too. TEST=NONE	1411 WIN : inspector/styles-source-lines-inline.html = TEXT		http://codereview.chromium.org/4262003	svn://svn.chromium.org/chrome/trunk/src@64802 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 0abe2ea..e48a291 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -23,3 +23,6 @@ BUGJEREMY MAC : fast/block/basic/truncation-rtl.html = IMAGE <newline>+ <newline>+// Was already marked as flaky on Win, seems to fail on Mac too. <newline>+BUG31342 MAC WIN RELEASE : security/block-test-no-port.html = TEXT PASS
e57c3136646285464f03895528680067b73ee90	robertshield@chromium.org <robertshield@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 2 20:30:13 2010 +0000	Updating test expectation for security/block-test-no-port.html since it seems to fail on the Mac too. TEST=NONE	1411 WIN : inspector/styles-source-lines-inline.html = TEXT		http://codereview.chromium.org/4262003	svn://svn.chromium.org/chrome/trunk/src@64802 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 0abe2ea..e48a291 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -23,3 +23,6 @@ BUGJEREMY MAC : fast/block/basic/truncation-rtl.html = IMAGE <newline>+ <newline>+// Was already marked as flaky on Win, seems to fail on Mac too. <newline>+BUG31342 MAC WIN RELEASE : security/block-test-no-port.html = TEXT PASS
19e8bc25fca551b5c233a5d35090e64d3addd6a	chocobo@chromium.org <chocobo@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 29 18:41:44 2010 +0000	For add network, if password is empty, we search for a hidden network with no security. TEST=manual	chromium-os:8193		http://codereview.chromium.org/4142012	svn://svn.chromium.org/chrome/trunk/src@64461 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/cros/network_library.cc b/chrome/browser/chromeos/cros/network_library.cc <newline>index 162d9d3..f1541e8 100644 <newline>--- a/chrome/browser/chromeos/cros/network_library.cc <newline>+++ b/chrome/browser/chromeos/cros/network_library.cc <newline>@@ -715,8 +715,9 @@ class NetworkLibraryImpl : public NetworkLibrary  { <newline>       return; <newline>     // First create a service from hidden network. <newline>-    ServiceInfo* service = GetWifiService(ssid.c_str(), <newline>-                                          SECURITY_UNKNOWN); <newline>+    ConnectionSecurity security = password.empty() ? <newline>+        SECURITY_NONE : SECURITY_UNKNOWN; <newline>+    ServiceInfo* service = GetWifiService(ssid.c_str(), security); <newline>     if (service) { <newline>       // Set auto-connect. <newline>       SetAutoConnect(service->service_path, auto_connect);
ec3fe19fd0896ffddee58e2466a6942e08f96ec	chocobo@chromium.org <chocobo@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 29 18:41:44 2010 +0000	For add network, if password is empty, we search for a hidden network with no security. TEST=manual	chromium-os:8193		http://codereview.chromium.org/4142012	svn://svn.chromium.org/chrome/trunk/src@64461 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/cros/network_library.cc b/chrome/browser/chromeos/cros/network_library.cc <newline>index 162d9d3..f1541e8 100644 <newline>--- a/chrome/browser/chromeos/cros/network_library.cc <newline>+++ b/chrome/browser/chromeos/cros/network_library.cc <newline>@@ -715,8 +715,9 @@ class NetworkLibraryImpl : public NetworkLibrary  { <newline>       return; <newline>     // First create a service from hidden network. <newline>-    ServiceInfo* service = GetWifiService(ssid.c_str(), <newline>-                                          SECURITY_UNKNOWN); <newline>+    ConnectionSecurity security = password.empty() ? <newline>+        SECURITY_NONE : SECURITY_UNKNOWN; <newline>+    ServiceInfo* service = GetWifiService(ssid.c_str(), security); <newline>     if (service) { <newline>       // Set auto-connect. <newline>       SetAutoConnect(service->service_path, auto_connect);
d0f328db9be2290ec5a405164a9f2c8e26a449d	panayiotis@google.com <panayiotis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 29 18:24:06 2010 +0000	New shockwave security update. http://www.adobe.com/support/security/bulletins/apsb10-25.html TEST=test_shell_tests	61152		http://codereview.chromium.org/4209004	svn://svn.chromium.org/chrome/trunk/src@64455 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/plugins/plugin_group.cc b/webkit/glue/plugins/plugin_group.cc <newline>index ee3155e..5dddbce 100644 <newline>--- a/webkit/glue/plugins/plugin_group.cc <newline>+++ b/webkit/glue/plugins/plugin_group.cc <newline>@@ -34,7 +34,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline>     "http://www.microsoft.com/getsilverlight/" }, <newline>   { "flip4mac", "Flip4Mac", "Flip4Mac", "", "", "2.2.1", <newline>     "http://www.telestream.net/flip4mac-wmv/overview.htm" }, <newline>-  { "shockwave", "Shockwave", "Shockwave for Director", "",  "", "11.5.8.612", <newline>+  { "shockwave", "Shockwave", "Shockwave for Director", "",  "", "11.5.9.615", <newline>     "http://www.adobe.com/shockwave/download/" } <newline> }; <newline>@@ -56,7 +56,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline>     "http://www.microsoft.com/getsilverlight/" }, <newline>   { "silverlight-4", "Silverlight 4", "Silverlight", "4", "5", "", <newline>     "http://www.microsoft.com/getsilverlight/" }, <newline>-  { "shockwave", "Shockwave", "Shockwave for Director", "", "", "11.5.8.612", <newline>+  { "shockwave", "Shockwave", "Shockwave for Director", "", "", "11.5.9.615", <newline>     "http://www.adobe.com/shockwave/download/" }, <newline>   { "divx-player", "DivX Player", "DivX Web Player", "", "", "1.4.3.4", <newline>     "http://download.divx.com/divx/autoupdate/player/"
755543e42636baa50ed746b35fd44aa5ff2006a	panayiotis@google.com <panayiotis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 29 18:24:06 2010 +0000	New shockwave security update. http://www.adobe.com/support/security/bulletins/apsb10-25.html TEST=test_shell_tests	61152		http://codereview.chromium.org/4209004	svn://svn.chromium.org/chrome/trunk/src@64455 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/plugins/plugin_group.cc b/webkit/glue/plugins/plugin_group.cc <newline>index ee3155e..5dddbce 100644 <newline>--- a/webkit/glue/plugins/plugin_group.cc <newline>+++ b/webkit/glue/plugins/plugin_group.cc <newline>@@ -34,7 +34,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline>     "http://www.microsoft.com/getsilverlight/" }, <newline>   { "flip4mac", "Flip4Mac", "Flip4Mac", "", "", "2.2.1", <newline>     "http://www.telestream.net/flip4mac-wmv/overview.htm" }, <newline>-  { "shockwave", "Shockwave", "Shockwave for Director", "",  "", "11.5.8.612", <newline>+  { "shockwave", "Shockwave", "Shockwave for Director", "",  "", "11.5.9.615", <newline>     "http://www.adobe.com/shockwave/download/" } <newline> }; <newline>@@ -56,7 +56,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline>     "http://www.microsoft.com/getsilverlight/" }, <newline>   { "silverlight-4", "Silverlight 4", "Silverlight", "4", "5", "", <newline>     "http://www.microsoft.com/getsilverlight/" }, <newline>-  { "shockwave", "Shockwave", "Shockwave for Director", "", "", "11.5.8.612", <newline>+  { "shockwave", "Shockwave", "Shockwave for Director", "", "", "11.5.9.615", <newline>     "http://www.adobe.com/shockwave/download/" }, <newline>   { "divx-player", "DivX Player", "DivX Web Player", "", "", "1.4.3.4", <newline>     "http://download.divx.com/divx/autoupdate/player/"
8108b9dc40dbaed2d2dd093699f84b2a86660c3	ananta@chromium.org <ananta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 27 23:21:44 2010 +0000	Disabling the FullTabModeIE_WindowClose ChromeFrame test as it causes IE7/IE8 to put a security warning infobar. TBR=amit	61011		http://codereview.chromium.org/4168005	svn://svn.chromium.org/chrome/trunk/src@64173 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/test/test_with_web_server.cc b/chrome_frame/test/test_with_web_server.cc <newline>index c3bce42..c3a0332 100644 <newline>--- a/chrome_frame/test/test_with_web_server.cc <newline>+++ b/chrome_frame/test/test_with_web_server.cc <newline>@@ -1021,15 +1021,11 @@ TEST_F(ChromeFrameTestWithWebServer, FullTabModeIE_XHRConditionalHeaderTest) { <newline> const wchar_t kWindowCloseTestUrl[] = <newline>     L"window_close.html"; <newline>-TEST_F(ChromeFrameTestWithWebServer, FullTabModeIE_WindowClose) { <newline>-  // Please see http://code.google.com/p/chromium/issues/detail?id=60987 <newline>-  // for more information on why this test is disabled for Vista with IE7. <newline>-  if (base::win::GetVersion() == base::win::VERSION_VISTA && <newline>-      chrome_frame_test::GetInstalledIEVersion() == IE_7) { <newline>-    LOG(INFO) << "Not running test on Vista with IE7"; <newline>-    return; <newline>-  } <newline>- <newline>+// This test causes IE to display an infobar on IE7 and IE8 on Vista and <newline>+// Windows 7 at least which causes this test to fail. Disabling it for <newline>+// now. <newline>+// http://code.google.com/p/chromium/issues/detail?id=61011 <newline>+TEST_F(ChromeFrameTestWithWebServer, DISABLED_FullTabModeIE_WindowClose) { <newline>   SimpleBrowserTest(IE, kWindowCloseTestUrl); <newline> }
06c75d600d3f564216de1d744c67a1ae1d6ce4a	ananta@chromium.org <ananta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 27 23:21:44 2010 +0000	Disabling the FullTabModeIE_WindowClose ChromeFrame test as it causes IE7/IE8 to put a security warning infobar. TBR=amit	61011		http://codereview.chromium.org/4168005	svn://svn.chromium.org/chrome/trunk/src@64173 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/test/test_with_web_server.cc b/chrome_frame/test/test_with_web_server.cc <newline>index c3bce42..c3a0332 100644 <newline>--- a/chrome_frame/test/test_with_web_server.cc <newline>+++ b/chrome_frame/test/test_with_web_server.cc <newline>@@ -1021,15 +1021,11 @@ TEST_F(ChromeFrameTestWithWebServer, FullTabModeIE_XHRConditionalHeaderTest) { <newline> const wchar_t kWindowCloseTestUrl[] = <newline>     L"window_close.html"; <newline>-TEST_F(ChromeFrameTestWithWebServer, FullTabModeIE_WindowClose) { <newline>-  // Please see http://code.google.com/p/chromium/issues/detail?id=60987 <newline>-  // for more information on why this test is disabled for Vista with IE7. <newline>-  if (base::win::GetVersion() == base::win::VERSION_VISTA && <newline>-      chrome_frame_test::GetInstalledIEVersion() == IE_7) { <newline>-    LOG(INFO) << "Not running test on Vista with IE7"; <newline>-    return; <newline>-  } <newline>- <newline>+// This test causes IE to display an infobar on IE7 and IE8 on Vista and <newline>+// Windows 7 at least which causes this test to fail. Disabling it for <newline>+// now. <newline>+// http://code.google.com/p/chromium/issues/detail?id=61011 <newline>+TEST_F(ChromeFrameTestWithWebServer, DISABLED_FullTabModeIE_WindowClose) { <newline>   SimpleBrowserTest(IE, kWindowCloseTestUrl); <newline> }
b8ca3895c0cfb6abeee252256cbd9673ebd521a	tomfinegan@google.com <tomfinegan@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Oct 25 16:00:27 2010 +0000	Roll libvpx revision from 60399 to 63575 to pick up a security fix. TEST=none	none		http://codereview.chromium.org/4080001	svn://svn.chromium.org/chrome/trunk/src@63737 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index f7925b5..3cd0dae 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -10,7 +10,7 @@ vars = { <newline>   "swig_revision": "40423", <newline>   "nacl_revision": "3365", <newline>   "libjingle_revision": "33", <newline>-  "libvpx_revision": "60399", <newline>+  "libvpx_revision": "63575", <newline>   "ffmpeg_revision": "63146", <newline> }
2b79aadb8e4944a9c5382243c3301fbd0184476	tomfinegan@google.com <tomfinegan@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Oct 25 16:00:27 2010 +0000	Roll libvpx revision from 60399 to 63575 to pick up a security fix. TEST=none	none		http://codereview.chromium.org/4080001	svn://svn.chromium.org/chrome/trunk/src@63737 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index f7925b5..3cd0dae 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -10,7 +10,7 @@ vars = { <newline>   "swig_revision": "40423", <newline>   "nacl_revision": "3365", <newline>   "libjingle_revision": "33", <newline>-  "libvpx_revision": "60399", <newline>+  "libvpx_revision": "63575", <newline>   "ffmpeg_revision": "63146", <newline> }
15bc4224c07c55a84f626183f3c3e083e49cae5	altimofeev@chromium.org <altimofeev@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 20 12:01:11 2010 +0000	Adds spinner to the Tpm-password screen password. Spinner is added to the Tpm-password screen. Also some stubs for working with Cryptohome was implemented. TEST=On EULA screen click on "System security settings", notice spinner is rotating until TPM password is ready.	chromium-os:7134		http://codereview.chromium.org/3832011	svn://svn.chromium.org/chrome/trunk/src@63203 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/login/login_utils.cc b/chrome/browser/chromeos/login/login_utils.cc <newline>index a818438..87ee171 100644 <newline>--- a/chrome/browser/chromeos/login/login_utils.cc <newline>+++ b/chrome/browser/chromeos/login/login_utils.cc <newline>@@ -170,12 +170,14 @@ void LoginUtilsImpl::CompleteLogin(const std::string& username, <newline>   // Own TPM device if, for any reason, it has not been done in EULA <newline>   // wizard screen. <newline>-  if (chromeos::CryptohomeTpmIsEnabled() && <newline>-      !chromeos::CryptohomeTpmIsBeingOwned()) { <newline>-    if (chromeos::CryptohomeTpmIsOwned()) { <newline>-      chromeos::CryptohomeTpmClearStoredPassword(); <newline>-    } else { <newline>-      chromeos::CryptohomeTpmCanAttemptOwnership(); <newline>+  if (CrosLibrary::Get()->EnsureLoaded()) { <newline>+    CryptohomeLibrary* cryptohome = CrosLibrary::Get()->GetCryptohomeLibrary(); <newline>+    if (cryptohome->TpmIsEnabled() && !cryptohome->TpmIsBeingOwned()) { <newline>+      if (cryptohome->TpmIsOwned()) { <newline>+        cryptohome->TpmClearStoredPassword(); <newline>+      } else { <newline>+        cryptohome->TpmCanAttemptOwnership(); <newline>+      } <newline>     } <newline>   }
55864e9e69f5fd4fd98b9482ed5fc461fbfb584	altimofeev@chromium.org <altimofeev@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 20 12:01:11 2010 +0000	Adds spinner to the Tpm-password screen password. Spinner is added to the Tpm-password screen. Also some stubs for working with Cryptohome was implemented. TEST=On EULA screen click on "System security settings", notice spinner is rotating until TPM password is ready.	chromium-os:7134		http://codereview.chromium.org/3832011	svn://svn.chromium.org/chrome/trunk/src@63203 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/login/login_utils.cc b/chrome/browser/chromeos/login/login_utils.cc <newline>index a818438..87ee171 100644 <newline>--- a/chrome/browser/chromeos/login/login_utils.cc <newline>+++ b/chrome/browser/chromeos/login/login_utils.cc <newline>@@ -170,12 +170,14 @@ void LoginUtilsImpl::CompleteLogin(const std::string& username, <newline>   // Own TPM device if, for any reason, it has not been done in EULA <newline>   // wizard screen. <newline>-  if (chromeos::CryptohomeTpmIsEnabled() && <newline>-      !chromeos::CryptohomeTpmIsBeingOwned()) { <newline>-    if (chromeos::CryptohomeTpmIsOwned()) { <newline>-      chromeos::CryptohomeTpmClearStoredPassword(); <newline>-    } else { <newline>-      chromeos::CryptohomeTpmCanAttemptOwnership(); <newline>+  if (CrosLibrary::Get()->EnsureLoaded()) { <newline>+    CryptohomeLibrary* cryptohome = CrosLibrary::Get()->GetCryptohomeLibrary(); <newline>+    if (cryptohome->TpmIsEnabled() && !cryptohome->TpmIsBeingOwned()) { <newline>+      if (cryptohome->TpmIsOwned()) { <newline>+        cryptohome->TpmClearStoredPassword(); <newline>+      } else { <newline>+        cryptohome->TpmCanAttemptOwnership(); <newline>+      } <newline>     } <newline>   }
fe53e63cd4191983107614f1639e882fba2e772	grt@chromium.org <grt@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 20 01:33:32 2010 +0000	Two minor changes to the use of FormatMessageA in Win32ErrorLogMessage: - Follow the MSDN advice and use FORMAT_MESSAGE_IGNORE_INSERTS to avoid security issues and to prevent getting back ERROR_INVALID_PARAMETER for any message that has inserts.  This is always the right thing since this function provides no arguments for inserts. - Don't specify a language identifier, thereby allowing FormatMessageA to make many sensible attempts to find a string in some suitable language. TEST=none	none		http://codereview.chromium.org/3888001	svn://svn.chromium.org/chrome/trunk/src@63166 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/logging.cc b/base/logging.cc <newline>index dfe9b0a..273162f 100644 <newline>--- a/base/logging.cc <newline>+++ b/base/logging.cc <newline>@@ -706,7 +706,7 @@ Win32ErrorLogMessage::Win32ErrorLogMessage(const char* file, <newline> Win32ErrorLogMessage::~Win32ErrorLogMessage() { <newline>   const int error_message_buffer_size = 256; <newline>   char msgbuf[error_message_buffer_size]; <newline>-  DWORD flags = FORMAT_MESSAGE_FROM_SYSTEM; <newline>+  DWORD flags = FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS; <newline>   HMODULE hmod; <newline>   if (module_) { <newline>     hmod = GetModuleHandleA(module_); <newline>@@ -725,7 +725,7 @@ Win32ErrorLogMessage::~Win32ErrorLogMessage() { <newline>   DWORD len = FormatMessageA(flags, <newline>                              hmod, <newline>                              err_, <newline>-                             MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), <newline>+                             0, <newline>                              msgbuf, <newline>                              sizeof(msgbuf) / sizeof(msgbuf[0]), <newline>                              NULL);
ac3df5ed73f0ba6762df74f7ccf270f6db2ef2c	grt@chromium.org <grt@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 20 01:33:32 2010 +0000	Two minor changes to the use of FormatMessageA in Win32ErrorLogMessage: - Follow the MSDN advice and use FORMAT_MESSAGE_IGNORE_INSERTS to avoid security issues and to prevent getting back ERROR_INVALID_PARAMETER for any message that has inserts.  This is always the right thing since this function provides no arguments for inserts. - Don't specify a language identifier, thereby allowing FormatMessageA to make many sensible attempts to find a string in some suitable language. TEST=none	none		http://codereview.chromium.org/3888001	svn://svn.chromium.org/chrome/trunk/src@63166 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/logging.cc b/base/logging.cc <newline>index dfe9b0a..273162f 100644 <newline>--- a/base/logging.cc <newline>+++ b/base/logging.cc <newline>@@ -706,7 +706,7 @@ Win32ErrorLogMessage::Win32ErrorLogMessage(const char* file, <newline> Win32ErrorLogMessage::~Win32ErrorLogMessage() { <newline>   const int error_message_buffer_size = 256; <newline>   char msgbuf[error_message_buffer_size]; <newline>-  DWORD flags = FORMAT_MESSAGE_FROM_SYSTEM; <newline>+  DWORD flags = FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS; <newline>   HMODULE hmod; <newline>   if (module_) { <newline>     hmod = GetModuleHandleA(module_); <newline>@@ -725,7 +725,7 @@ Win32ErrorLogMessage::~Win32ErrorLogMessage() { <newline>   DWORD len = FormatMessageA(flags, <newline>                              hmod, <newline>                              err_, <newline>-                             MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), <newline>+                             0, <newline>                              msgbuf, <newline>                              sizeof(msgbuf) / sizeof(msgbuf[0]), <newline>                              NULL);
2502747446d61052d0187bdf07ee541d5acc5c3	panayiotis@google.com <panayiotis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 19 20:24:21 2010 +0000	New Java version (6u22). Relevant advisory: http://www.oracle.com/technetwork/topics/security/javacpuoct2010-176258.html TEST=test_shell_tests	None		http://codereview.chromium.org/3856005	svn://svn.chromium.org/chrome/trunk/src@63089 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/plugins/plugin_group.cc b/webkit/glue/plugins/plugin_group.cc <newline>index 6e876ad..ee3155e 100644 <newline>--- a/webkit/glue/plugins/plugin_group.cc <newline>+++ b/webkit/glue/plugins/plugin_group.cc <newline>@@ -44,7 +44,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline> static const PluginGroupDefinition kGroupDefinitions[] = { <newline>   { "apple-quicktime", "Quicktime", "QuickTime Plug-in", "", "", "7.6.8", <newline>     "http://www.apple.com/quicktime/download/" }, <newline>-  { "java-runtime-environment", "Java 6", "Java", "", "6", "6.0.200", <newline>+  { "java-runtime-environment", "Java 6", "Java", "", "6", "6.0.220", <newline>     "http://www.java.com/" }, <newline>   { "adobe-reader", PluginGroup::kAdobeReader9GroupName, "Adobe Acrobat", "9", <newline>     "10", "9.4.0", "http://get.adobe.com/reader/" },
c3dafa1565bfe59197b5f5974727e52be1d472c	panayiotis@google.com <panayiotis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 19 20:24:21 2010 +0000	New Java version (6u22). Relevant advisory: http://www.oracle.com/technetwork/topics/security/javacpuoct2010-176258.html TEST=test_shell_tests	None		http://codereview.chromium.org/3856005	svn://svn.chromium.org/chrome/trunk/src@63089 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/plugins/plugin_group.cc b/webkit/glue/plugins/plugin_group.cc <newline>index 6e876ad..ee3155e 100644 <newline>--- a/webkit/glue/plugins/plugin_group.cc <newline>+++ b/webkit/glue/plugins/plugin_group.cc <newline>@@ -44,7 +44,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline> static const PluginGroupDefinition kGroupDefinitions[] = { <newline>   { "apple-quicktime", "Quicktime", "QuickTime Plug-in", "", "", "7.6.8", <newline>     "http://www.apple.com/quicktime/download/" }, <newline>-  { "java-runtime-environment", "Java 6", "Java", "", "6", "6.0.200", <newline>+  { "java-runtime-environment", "Java 6", "Java", "", "6", "6.0.220", <newline>     "http://www.java.com/" }, <newline>   { "adobe-reader", PluginGroup::kAdobeReader9GroupName, "Adobe Acrobat", "9", <newline>     "10", "9.4.0", "http://get.adobe.com/reader/" },
491b90368892c8d75d07659aa6dedf79ac95198	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 15 20:31:37 2010 +0000	In a fake SSLInfo, set security_bits to -1 instead of 0 because the encryption strength is unknown (0 means no encryption). R=finnur TEST=no unit test failures	53366,13049		http://codereview.chromium.org/3749003	svn://svn.chromium.org/chrome/trunk/src@62785 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_unittest.cc b/net/url_request/url_request_unittest.cc <newline>index 82d8288..3c5d05f 100644 <newline>--- a/net/url_request/url_request_unittest.cc <newline>+++ b/net/url_request/url_request_unittest.cc <newline>@@ -96,10 +96,14 @@ scoped_refptr<net::UploadData> CreateSimpleUploadData(const char* data) { <newline> // Verify that the SSLInfo of a successful SSL connection has valid values. <newline> void CheckSSLInfo(const net::SSLInfo& ssl_info) { <newline>-  // Allow ChromeFrame fake certificates to get through. <newline>+  // Allow ChromeFrame fake SSLInfo to get through. <newline>   if (ssl_info.cert.get() && <newline>-      ssl_info.cert.get()->issuer().GetDisplayName() == "Chrome Internal") <newline>+      ssl_info.cert.get()->issuer().GetDisplayName() == "Chrome Internal") { <newline>+    // -1 means unknown. <newline>+    EXPECT_EQ(ssl_info.security_bits, -1); <newline>     return; <newline>+  } <newline>+ <newline>   // -1 means unknown.  0 means no encryption. <newline>   EXPECT_GT(ssl_info.security_bits, 0);
9af3d922fca3d76c2bed4b178f9ccc0a4741392	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 15 20:31:37 2010 +0000	In a fake SSLInfo, set security_bits to -1 instead of 0 because the encryption strength is unknown (0 means no encryption). R=finnur TEST=no unit test failures	53366,13049		http://codereview.chromium.org/3749003	svn://svn.chromium.org/chrome/trunk/src@62785 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_unittest.cc b/net/url_request/url_request_unittest.cc <newline>index 82d8288..3c5d05f 100644 <newline>--- a/net/url_request/url_request_unittest.cc <newline>+++ b/net/url_request/url_request_unittest.cc <newline>@@ -96,10 +96,14 @@ scoped_refptr<net::UploadData> CreateSimpleUploadData(const char* data) { <newline> // Verify that the SSLInfo of a successful SSL connection has valid values. <newline> void CheckSSLInfo(const net::SSLInfo& ssl_info) { <newline>-  // Allow ChromeFrame fake certificates to get through. <newline>+  // Allow ChromeFrame fake SSLInfo to get through. <newline>   if (ssl_info.cert.get() && <newline>-      ssl_info.cert.get()->issuer().GetDisplayName() == "Chrome Internal") <newline>+      ssl_info.cert.get()->issuer().GetDisplayName() == "Chrome Internal") { <newline>+    // -1 means unknown. <newline>+    EXPECT_EQ(ssl_info.security_bits, -1); <newline>     return; <newline>+  } <newline>+ <newline>   // -1 means unknown.  0 means no encryption. <newline>   EXPECT_GT(ssl_info.security_bits, 0);
7da02cad14f901b83c57f2a68f1dd3d434f9981	glotov@chromium.org <glotov@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 15 09:52:12 2010 +0000	Tooltip for 'System security setting' added if TPM is disabled TEST=Disable TPM in BIOS and re-ren OOBE. EULA screen should have 'System security setting' greyed out with tooltip.	chromium-os:7256		http://codereview.chromium.org/3829001	svn://svn.chromium.org/chrome/trunk/src@62718 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/login/eula_view.cc b/chrome/browser/chromeos/login/eula_view.cc <newline>index b87bae9..c78d35d 100644 <newline>--- a/chrome/browser/chromeos/login/eula_view.cc <newline>+++ b/chrome/browser/chromeos/login/eula_view.cc <newline>@@ -305,7 +305,6 @@ void EulaView::Init() { <newline>   if (!chromeos::CrosLibrary::Get()->EnsureLoaded() || <newline>       !chromeos::CryptohomeTpmIsEnabled()) { <newline>     system_security_settings_link_->SetEnabled(false); <newline>-    // TODO(glotov): add tooltip with description. <newline>   } <newline>   layout->AddView(system_security_settings_link_); <newline>@@ -333,6 +332,12 @@ void EulaView::UpdateLocalizedStrings() { <newline>         l10n_util::GetString(IDS_OPTION_DISABLED_BY_POLICY)); <newline>   } <newline>+  // Set tooltip for system security settings link if TPM is disabled. <newline>+  if (!system_security_settings_link_->IsEnabled()) { <newline>+    system_security_settings_link_->SetTooltipText( <newline>+        l10n_util::GetString(IDS_EULA_TPM_DISABLED)); <newline>+  } <newline>+ <newline>   // Load other labels from resources. <newline>   usage_statistics_checkbox_->SetLabel( <newline>       l10n_util::GetString(IDS_EULA_CHECKBOX_ENABLE_LOGGING));
37fa5f14543b0e141c53c5fca82e2f0511a0904	glotov@chromium.org <glotov@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 15 09:52:12 2010 +0000	Tooltip for 'System security setting' added if TPM is disabled TEST=Disable TPM in BIOS and re-ren OOBE. EULA screen should have 'System security setting' greyed out with tooltip.	chromium-os:7256		http://codereview.chromium.org/3829001	svn://svn.chromium.org/chrome/trunk/src@62718 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/login/eula_view.cc b/chrome/browser/chromeos/login/eula_view.cc <newline>index b87bae9..c78d35d 100644 <newline>--- a/chrome/browser/chromeos/login/eula_view.cc <newline>+++ b/chrome/browser/chromeos/login/eula_view.cc <newline>@@ -305,7 +305,6 @@ void EulaView::Init() { <newline>   if (!chromeos::CrosLibrary::Get()->EnsureLoaded() || <newline>       !chromeos::CryptohomeTpmIsEnabled()) { <newline>     system_security_settings_link_->SetEnabled(false); <newline>-    // TODO(glotov): add tooltip with description. <newline>   } <newline>   layout->AddView(system_security_settings_link_); <newline>@@ -333,6 +332,12 @@ void EulaView::UpdateLocalizedStrings() { <newline>         l10n_util::GetString(IDS_OPTION_DISABLED_BY_POLICY)); <newline>   } <newline>+  // Set tooltip for system security settings link if TPM is disabled. <newline>+  if (!system_security_settings_link_->IsEnabled()) { <newline>+    system_security_settings_link_->SetTooltipText( <newline>+        l10n_util::GetString(IDS_EULA_TPM_DISABLED)); <newline>+  } <newline>+ <newline>   // Load other labels from resources. <newline>   usage_statistics_checkbox_->SetLabel( <newline>       l10n_util::GetString(IDS_EULA_CHECKBOX_ENABLE_LOGGING));
b0aadd54957efbef726d59974981330c21d87ea	glotov@chromium.org <glotov@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 8 18:18:03 2010 +0000	TPM ownership code added to OOBE TEST=TPM password should appear in the "System security setting" of the EULA screen after TPM has been cleared and rebooted.	chromium-os:3065		http://codereview.chromium.org/3516020	svn://svn.chromium.org/chrome/trunk/src@61985 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/login/eula_view.h b/chrome/browser/chromeos/login/eula_view.h <newline>index 6487873..e7fc027 100644 <newline>--- a/chrome/browser/chromeos/login/eula_view.h <newline>+++ b/chrome/browser/chromeos/login/eula_view.h <newline>@@ -149,6 +149,11 @@ class EulaView <newline>   // it will be deleted on bubble closing. <newline>   MessageBubble* bubble_; <newline>+  // TPM password local storage. By convention, we clear the password <newline>+  // from TPM as soon as we read it. We store it here locally until <newline>+  // EULA screen is closed. <newline>+  std::string tpm_password_; <newline>+ <newline>   DISALLOW_COPY_AND_ASSIGN(EulaView); <newline> };
69fedc23cc248a5987ff1cd7dfe03c7cf2af0f9	glotov@chromium.org <glotov@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 8 18:18:03 2010 +0000	TPM ownership code added to OOBE TEST=TPM password should appear in the "System security setting" of the EULA screen after TPM has been cleared and rebooted.	chromium-os:3065		http://codereview.chromium.org/3516020	svn://svn.chromium.org/chrome/trunk/src@61985 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/login/eula_view.h b/chrome/browser/chromeos/login/eula_view.h <newline>index 6487873..e7fc027 100644 <newline>--- a/chrome/browser/chromeos/login/eula_view.h <newline>+++ b/chrome/browser/chromeos/login/eula_view.h <newline>@@ -149,6 +149,11 @@ class EulaView <newline>   // it will be deleted on bubble closing. <newline>   MessageBubble* bubble_; <newline>+  // TPM password local storage. By convention, we clear the password <newline>+  // from TPM as soon as we read it. We store it here locally until <newline>+  // EULA screen is closed. <newline>+  std::string tpm_password_; <newline>+ <newline>   DISALLOW_COPY_AND_ASSIGN(EulaView); <newline> };
29a900ff122d4f973f94f877315b4a10449dc12	panayiotis@google.com <panayiotis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Oct 7 23:32:10 2010 +0000	Update most secure version for the following plugins: - Reader 9 to 9.4.0 - Reader 8 to 8.2.5 - Quicktime for Windows to 7.6.8 - Flash 10 to 10.1.85 Relevant advisories: - http://www.adobe.com/support/security/bulletins/apsb10-22.html - http://www.adobe.com/support/security/bulletins/apsb10-21.html - http://support.apple.com/kb/HT4339			http://codereview.chromium.org/3631002	svn://svn.chromium.org/chrome/trunk/src@61882 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/plugins/plugin_group.cc b/webkit/glue/plugins/plugin_group.cc <newline>index baa6b0c..7287c17 100644 <newline>--- a/webkit/glue/plugins/plugin_group.cc <newline>+++ b/webkit/glue/plugins/plugin_group.cc <newline>@@ -23,7 +23,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline>     "http://www.apple.com/quicktime/download/" }, <newline>   { "java-runtime-environment", "Java", "Java", "", "", "", <newline>     "http://support.apple.com/kb/HT1338" }, <newline>-  { "adobe-flash-player", "Flash", "Shockwave Flash", "", "", "10.1.82", <newline>+  { "adobe-flash-player", "Flash", "Shockwave Flash", "", "", "10.1.85", <newline>     "http://get.adobe.com/flashplayer/" }, <newline>   { "silverlight-3", "Silverlight 3", "Silverlight", "0", "4", "3.0.50106.0", <newline>     "http://www.microsoft.com/getsilverlight/" }, <newline>@@ -39,15 +39,15 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline> // TODO(panayiotis): We should group "RealJukebox NS Plugin" with the rest of <newline> // the RealPlayer files. <newline> static const PluginGroupDefinition kGroupDefinitions[] = { <newline>-  { "apple-quicktime", "Quicktime", "QuickTime Plug-in", "", "", "7.6.7", <newline>+  { "apple-quicktime", "Quicktime", "QuickTime Plug-in", "", "", "7.6.8", <newline>     "http://www.apple.com/quicktime/download/" }, <newline>   { "java-runtime-environment", "Java 6", "Java", "", "6", "6.0.200", <newline>     "http://www.java.com/" }, <newline>-  { "adobe-reader", "Adobe Reader 9", "Adobe Acrobat", "9", "10", "9.3.3", <newline>+  { "adobe-reader", "Adobe Reader 9", "Adobe Acrobat", "9", "10", "9.4.0", <newline>     "http://get.adobe.com/reader/" }, <newline>-  { "adobe-reader-8", "Adobe Reader 8", "Adobe Acrobat", "0", "9", "8.2.3", <newline>+  { "adobe-reader-8", "Adobe Reader 8", "Adobe Acrobat", "0", "9", "8.2.5", <newline>     "http://get.adobe.com/reader/" }, <newline>-  { "adobe-flash-player", "Flash", "Shockwave Flash", "", "", "10.1.82", <newline>+  { "adobe-flash-player", "Flash", "Shockwave Flash", "", "", "10.1.85", <newline>     "http://get.adobe.com/flashplayer/" }, <newline>   { "silverlight-3", "Silverlight 3", "Silverlight", "0", "4", "3.0.50106.0", <newline>     "http://www.microsoft.com/getsilverlight/" },
ef3e1b59b2ee7890c718faecc17507e0f12ac03	panayiotis@google.com <panayiotis@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Oct 7 23:32:10 2010 +0000	Update most secure version for the following plugins: - Reader 9 to 9.4.0 - Reader 8 to 8.2.5 - Quicktime for Windows to 7.6.8 - Flash 10 to 10.1.85 Relevant advisories: - http://www.adobe.com/support/security/bulletins/apsb10-22.html - http://www.adobe.com/support/security/bulletins/apsb10-21.html - http://support.apple.com/kb/HT4339			http://codereview.chromium.org/3631002	svn://svn.chromium.org/chrome/trunk/src@61882 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/plugins/plugin_group.cc b/webkit/glue/plugins/plugin_group.cc <newline>index baa6b0c..7287c17 100644 <newline>--- a/webkit/glue/plugins/plugin_group.cc <newline>+++ b/webkit/glue/plugins/plugin_group.cc <newline>@@ -23,7 +23,7 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline>     "http://www.apple.com/quicktime/download/" }, <newline>   { "java-runtime-environment", "Java", "Java", "", "", "", <newline>     "http://support.apple.com/kb/HT1338" }, <newline>-  { "adobe-flash-player", "Flash", "Shockwave Flash", "", "", "10.1.82", <newline>+  { "adobe-flash-player", "Flash", "Shockwave Flash", "", "", "10.1.85", <newline>     "http://get.adobe.com/flashplayer/" }, <newline>   { "silverlight-3", "Silverlight 3", "Silverlight", "0", "4", "3.0.50106.0", <newline>     "http://www.microsoft.com/getsilverlight/" }, <newline>@@ -39,15 +39,15 @@ static const PluginGroupDefinition kGroupDefinitions[] = { <newline> // TODO(panayiotis): We should group "RealJukebox NS Plugin" with the rest of <newline> // the RealPlayer files. <newline> static const PluginGroupDefinition kGroupDefinitions[] = { <newline>-  { "apple-quicktime", "Quicktime", "QuickTime Plug-in", "", "", "7.6.7", <newline>+  { "apple-quicktime", "Quicktime", "QuickTime Plug-in", "", "", "7.6.8", <newline>     "http://www.apple.com/quicktime/download/" }, <newline>   { "java-runtime-environment", "Java 6", "Java", "", "6", "6.0.200", <newline>     "http://www.java.com/" }, <newline>-  { "adobe-reader", "Adobe Reader 9", "Adobe Acrobat", "9", "10", "9.3.3", <newline>+  { "adobe-reader", "Adobe Reader 9", "Adobe Acrobat", "9", "10", "9.4.0", <newline>     "http://get.adobe.com/reader/" }, <newline>-  { "adobe-reader-8", "Adobe Reader 8", "Adobe Acrobat", "0", "9", "8.2.3", <newline>+  { "adobe-reader-8", "Adobe Reader 8", "Adobe Acrobat", "0", "9", "8.2.5", <newline>     "http://get.adobe.com/reader/" }, <newline>-  { "adobe-flash-player", "Flash", "Shockwave Flash", "", "", "10.1.82", <newline>+  { "adobe-flash-player", "Flash", "Shockwave Flash", "", "", "10.1.85", <newline>     "http://get.adobe.com/flashplayer/" }, <newline>   { "silverlight-3", "Silverlight 3", "Silverlight", "0", "4", "3.0.50106.0", <newline>     "http://www.microsoft.com/getsilverlight/" },
4da3ecc0e95b1da1847a11bfaf81e18a1044dbd	phajdan.jr@chromium.org <phajdan.jr@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Sep 28 08:54:46 2010 +0000	FTP: fix directory listing parser for ftp.symantec.com. Some servers do not send the symlink target that we were expecting, possibly for security reasons. TEST=net_unittests	56972		http://codereview.chromium.org/3416028	svn://svn.chromium.org/chrome/trunk/src@60763 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/ftp/ftp_directory_listing_parser_ls_unittest.cc b/net/ftp/ftp_directory_listing_parser_ls_unittest.cc <newline>index 44c3eb6..2b57b40 100644 <newline>--- a/net/ftp/ftp_directory_listing_parser_ls_unittest.cc <newline>+++ b/net/ftp/ftp_directory_listing_parser_ls_unittest.cc <newline>@@ -49,6 +49,9 @@ TEST_F(FtpDirectoryListingParserLsTest, Good) { <newline>     { "drwxrwxrwx   1 owner    group               0 Sep 13  0:30 audio", <newline>       net::FtpDirectoryListingEntry::DIRECTORY, "audio", -1, <newline>       1994, 9, 13, 0, 30 }, <newline>+    { "lrwxrwxrwx 1 0  0 26 Sep 18 2008 pub", <newline>+      net::FtpDirectoryListingEntry::SYMLINK, "pub", -1, <newline>+      2008, 9, 18, 0, 0 }, <newline>     // Tests for the wu-ftpd variant: <newline>     { "drwxr-xr-x   2 sys          512 Mar 27  2009 pub",
974d563c4ec7176465b6e4257b410e960df15f0	phajdan.jr@chromium.org <phajdan.jr@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Sep 28 08:54:46 2010 +0000	FTP: fix directory listing parser for ftp.symantec.com. Some servers do not send the symlink target that we were expecting, possibly for security reasons. TEST=net_unittests	56972		http://codereview.chromium.org/3416028	svn://svn.chromium.org/chrome/trunk/src@60763 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/ftp/ftp_directory_listing_parser_ls_unittest.cc b/net/ftp/ftp_directory_listing_parser_ls_unittest.cc <newline>index 44c3eb6..2b57b40 100644 <newline>--- a/net/ftp/ftp_directory_listing_parser_ls_unittest.cc <newline>+++ b/net/ftp/ftp_directory_listing_parser_ls_unittest.cc <newline>@@ -49,6 +49,9 @@ TEST_F(FtpDirectoryListingParserLsTest, Good) { <newline>     { "drwxrwxrwx   1 owner    group               0 Sep 13  0:30 audio", <newline>       net::FtpDirectoryListingEntry::DIRECTORY, "audio", -1, <newline>       1994, 9, 13, 0, 30 }, <newline>+    { "lrwxrwxrwx 1 0  0 26 Sep 18 2008 pub", <newline>+      net::FtpDirectoryListingEntry::SYMLINK, "pub", -1, <newline>+      2008, 9, 18, 0, 0 }, <newline>     // Tests for the wu-ftpd variant: <newline>     { "drwxr-xr-x   2 sys          512 Mar 27  2009 pub",
c25af46318c7f4a78b4e61d9f2ffdab04ba5036	glotov@chromium.org <glotov@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Sep 27 18:51:45 2010 +0000	TPM information dialog added to EULA screen TEST="System security setting" ling on EULA screen should show TPM dialog box OR appear disabled (grayed out) if TPM is disabled.	chromium-os:4945		http://codereview.chromium.org/3496008	svn://svn.chromium.org/chrome/trunk/src@60686 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/login/eula_view.h b/chrome/browser/chromeos/login/eula_view.h <newline>index 2d5683d..ca40400 100644 <newline>--- a/chrome/browser/chromeos/login/eula_view.h <newline>+++ b/chrome/browser/chromeos/login/eula_view.h <newline>@@ -7,6 +7,7 @@ <newline> #pragma once <newline> #include "base/scoped_ptr.h" <newline>+#include "chrome/browser/chromeos/login/message_bubble.h" <newline> #include "chrome/browser/chromeos/login/view_screen.h" <newline> #include "chrome/browser/tab_contents/tab_contents_delegate.h" <newline> #include "gfx/native_widget_types.h" <newline>@@ -75,6 +76,7 @@ class EulaView <newline>     : public views::View, <newline>       public views::ButtonListener, <newline>       public views::LinkController, <newline>+      public MessageBubbleDelegate, <newline>       public EULATabContentsDelegate { <newline>  public: <newline>   explicit EulaView(chromeos::ScreenObserver* observer); <newline>@@ -97,6 +99,11 @@ class EulaView <newline>   void LinkActivated(views::Link* source, int event_flags); <newline>  private: <newline>+  // views::View implementation. <newline>+  virtual bool SkipDefaultKeyEventProcessing(const views::KeyEvent& e) { <newline>+    return true; } <newline>+  virtual bool OnKeyPressed(const views::KeyEvent& e); <newline>+ <newline>   // TabContentsDelegate implementation. <newline>   virtual void NavigationStateChanged(const TabContents* contents, <newline>                                       unsigned changed_flags); <newline>@@ -111,6 +118,13 @@ class EulaView <newline>                     views::Label* eula_label, <newline>                     const GURL& eula_url); <newline>+  // Overridden from views::InfoBubbleDelegate. <newline>+  virtual void InfoBubbleClosing(InfoBubble* info_bubble, <newline>+                                 bool closed_by_escape) { bubble_ = NULL; } <newline>+  virtual bool CloseOnEscape() { return true; } <newline>+  virtual bool FadeInOnShow() { return false; } <newline>+  virtual void OnHelpLinkActivated() {} <newline>+ <newline>   // Dialog controls. <newline>   views::Label* google_eula_label_; <newline>   DOMView* google_eula_view_; <newline>@@ -130,6 +144,10 @@ class EulaView <newline>   // Help application used for help dialogs. <newline>   scoped_ptr<HelpAppLauncher> help_app_; <newline>+  // Pointer to shown message bubble. We don't need to delete it because <newline>+  // it will be deleted on bubble closing. <newline>+  MessageBubble* bubble_; <newline>+ <newline>   DISALLOW_COPY_AND_ASSIGN(EulaView); <newline> };
984f4cf936374b56520d1b625b06f36dc3283d5	glotov@chromium.org <glotov@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Sep 27 18:51:45 2010 +0000	TPM information dialog added to EULA screen TEST="System security setting" ling on EULA screen should show TPM dialog box OR appear disabled (grayed out) if TPM is disabled.	chromium-os:4945		http://codereview.chromium.org/3496008	svn://svn.chromium.org/chrome/trunk/src@60686 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/login/eula_view.h b/chrome/browser/chromeos/login/eula_view.h <newline>index 2d5683d..ca40400 100644 <newline>--- a/chrome/browser/chromeos/login/eula_view.h <newline>+++ b/chrome/browser/chromeos/login/eula_view.h <newline>@@ -7,6 +7,7 @@ <newline> #pragma once <newline> #include "base/scoped_ptr.h" <newline>+#include "chrome/browser/chromeos/login/message_bubble.h" <newline> #include "chrome/browser/chromeos/login/view_screen.h" <newline> #include "chrome/browser/tab_contents/tab_contents_delegate.h" <newline> #include "gfx/native_widget_types.h" <newline>@@ -75,6 +76,7 @@ class EulaView <newline>     : public views::View, <newline>       public views::ButtonListener, <newline>       public views::LinkController, <newline>+      public MessageBubbleDelegate, <newline>       public EULATabContentsDelegate { <newline>  public: <newline>   explicit EulaView(chromeos::ScreenObserver* observer); <newline>@@ -97,6 +99,11 @@ class EulaView <newline>   void LinkActivated(views::Link* source, int event_flags); <newline>  private: <newline>+  // views::View implementation. <newline>+  virtual bool SkipDefaultKeyEventProcessing(const views::KeyEvent& e) { <newline>+    return true; } <newline>+  virtual bool OnKeyPressed(const views::KeyEvent& e); <newline>+ <newline>   // TabContentsDelegate implementation. <newline>   virtual void NavigationStateChanged(const TabContents* contents, <newline>                                       unsigned changed_flags); <newline>@@ -111,6 +118,13 @@ class EulaView <newline>                     views::Label* eula_label, <newline>                     const GURL& eula_url); <newline>+  // Overridden from views::InfoBubbleDelegate. <newline>+  virtual void InfoBubbleClosing(InfoBubble* info_bubble, <newline>+                                 bool closed_by_escape) { bubble_ = NULL; } <newline>+  virtual bool CloseOnEscape() { return true; } <newline>+  virtual bool FadeInOnShow() { return false; } <newline>+  virtual void OnHelpLinkActivated() {} <newline>+ <newline>   // Dialog controls. <newline>   views::Label* google_eula_label_; <newline>   DOMView* google_eula_view_; <newline>@@ -130,6 +144,10 @@ class EulaView <newline>   // Help application used for help dialogs. <newline>   scoped_ptr<HelpAppLauncher> help_app_; <newline>+  // Pointer to shown message bubble. We don't need to delete it because <newline>+  // it will be deleted on bubble closing. <newline>+  MessageBubble* bubble_; <newline>+ <newline>   DISALLOW_COPY_AND_ASSIGN(EulaView); <newline> };
2f8ffb7d4bce0633d3496cec9963084daf1f062	glotov@chromium.org <glotov@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Sep 20 12:38:54 2010 +0000	Spelling fix. TEST="System security setting" link on EULA screen should be singular form.	chromium-os:6171		http://codereview.chromium.org/3454010	svn://svn.chromium.org/chrome/trunk/src@59927 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/generated_resources.grd b/chrome/app/generated_resources.grd <newline>index f1be5c0..3ec1a01 100644 <newline>--- a/chrome/app/generated_resources.grd <newline>+++ b/chrome/app/generated_resources.grd <newline>@@ -8524,7 +8524,7 @@ Keep your key file in a safe place. You will need it to create new versions of y <newline> 	Accept and continue » <newline>       </message> <newline>       <message name="IDS_EULA_SYSTEM_SECURITY_SETTINGS_LINK" desc="Link from the EULA wizard screen"> <newline>-	System security settings <newline>+        System security setting <newline>       </message> <newline>       <message name="IDS_OPTION_DISABLED_BY_POLICY" desc="Tooltip for options managed by centrally-administered policy"> <newline> 	This option is controlled by an enterprise policy. Please contact your administrator for more information.
b526030f9b1ea573078b593f159f333bcc1bd40	glotov@chromium.org <glotov@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Sep 20 12:38:54 2010 +0000	Spelling fix. TEST="System security setting" link on EULA screen should be singular form.	chromium-os:6171		http://codereview.chromium.org/3454010	svn://svn.chromium.org/chrome/trunk/src@59927 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/generated_resources.grd b/chrome/app/generated_resources.grd <newline>index f1be5c0..3ec1a01 100644 <newline>--- a/chrome/app/generated_resources.grd <newline>+++ b/chrome/app/generated_resources.grd <newline>@@ -8524,7 +8524,7 @@ Keep your key file in a safe place. You will need it to create new versions of y <newline> 	Accept and continue » <newline>       </message> <newline>       <message name="IDS_EULA_SYSTEM_SECURITY_SETTINGS_LINK" desc="Link from the EULA wizard screen"> <newline>-	System security settings <newline>+        System security setting <newline>       </message> <newline>       <message name="IDS_OPTION_DISABLED_BY_POLICY" desc="Tooltip for options managed by centrally-administered policy"> <newline> 	This option is controlled by an enterprise policy. Please contact your administrator for more information.
2c3bfe45f07232dae570a5361b64d107cc8ab30	tony@chromium.org <tony@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Sep 14 23:58:51 2010 +0000	Add LocalFileToDataURL to webkit_support. I'm going to use this to get http/tests/security/local-user-CSS-from-remote.html passing.  Instead of trying to load a file:/// URL for the user style sheet, use a data: URL.  This matches what happens in Chromium.			http://codereview.chromium.org/3425004	svn://svn.chromium.org/chrome/trunk/src@59459 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/layout_test_controller.cc b/webkit/tools/test_shell/layout_test_controller.cc <newline>index 79dbc04..8d7088f 100644 <newline>--- a/webkit/tools/test_shell/layout_test_controller.cc <newline>+++ b/webkit/tools/test_shell/layout_test_controller.cc <newline>@@ -8,13 +8,16 @@ <newline> #include "webkit/tools/test_shell/layout_test_controller.h" <newline>+#include "base/base64.h" <newline> #include "base/basictypes.h" <newline> #include "base/file_path.h" <newline>+#include "base/file_util.h" <newline> #include "base/logging.h" <newline> #include "base/message_loop.h" <newline> #include "base/path_service.h" <newline> #include "base/string_number_conversions.h" <newline> #include "base/utf_string_conversions.h" <newline>+#include "net/base/net_util.h" <newline> #include "third_party/WebKit/WebKit/chromium/public/WebAnimationController.h" <newline> #include "third_party/WebKit/WebKit/chromium/public/WebBindings.h" <newline> #include "third_party/WebKit/WebKit/chromium/public/WebConsoleMessage.h" <newline>@@ -664,12 +667,28 @@ void LayoutTestController::setUserStyleSheetEnabled( <newline> void LayoutTestController::setUserStyleSheetLocation( <newline>     const CppArgumentList& args, CppVariant* result) { <newline>+  result->SetNull(); <newline>+ <newline>   if (args.size() > 0 && args[0].isString()) { <newline>     GURL location(TestShell::RewriteLocalUrl(args[0].ToString())); <newline>+ <newline>+    FilePath local_path; <newline>+    if (!net::FileURLToFilePath(location, &local_path)) <newline>+      return; <newline>+ <newline>+    std::string contents; <newline>+    if (!file_util::ReadFileToString(local_path, &contents)) <newline>+      return; <newline>+ <newline>+    std::string contents_base64; <newline>+    if (!base::Base64Encode(contents, &contents_base64)) <newline>+      return; <newline>+ <newline>+    const char kDataUrlPrefix[] = "data:text/css;charset=utf-8;base64,"; <newline>+    location = GURL(kDataUrlPrefix + contents_base64); <newline>+ <newline>     shell_->delegate()->SetUserStyleSheetLocation(location); <newline>   } <newline>- <newline>-  result->SetNull(); <newline> } <newline> void LayoutTestController::setAuthorAndUserStylesEnabled(
1681f221ed06218232a4252721ffc9f5cc24fa0	tony@chromium.org <tony@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Sep 14 23:58:51 2010 +0000	Add LocalFileToDataURL to webkit_support. I'm going to use this to get http/tests/security/local-user-CSS-from-remote.html passing.  Instead of trying to load a file:/// URL for the user style sheet, use a data: URL.  This matches what happens in Chromium.			http://codereview.chromium.org/3425004	svn://svn.chromium.org/chrome/trunk/src@59459 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/layout_test_controller.cc b/webkit/tools/test_shell/layout_test_controller.cc <newline>index 79dbc04..8d7088f 100644 <newline>--- a/webkit/tools/test_shell/layout_test_controller.cc <newline>+++ b/webkit/tools/test_shell/layout_test_controller.cc <newline>@@ -8,13 +8,16 @@ <newline> #include "webkit/tools/test_shell/layout_test_controller.h" <newline>+#include "base/base64.h" <newline> #include "base/basictypes.h" <newline> #include "base/file_path.h" <newline>+#include "base/file_util.h" <newline> #include "base/logging.h" <newline> #include "base/message_loop.h" <newline> #include "base/path_service.h" <newline> #include "base/string_number_conversions.h" <newline> #include "base/utf_string_conversions.h" <newline>+#include "net/base/net_util.h" <newline> #include "third_party/WebKit/WebKit/chromium/public/WebAnimationController.h" <newline> #include "third_party/WebKit/WebKit/chromium/public/WebBindings.h" <newline> #include "third_party/WebKit/WebKit/chromium/public/WebConsoleMessage.h" <newline>@@ -664,12 +667,28 @@ void LayoutTestController::setUserStyleSheetEnabled( <newline> void LayoutTestController::setUserStyleSheetLocation( <newline>     const CppArgumentList& args, CppVariant* result) { <newline>+  result->SetNull(); <newline>+ <newline>   if (args.size() > 0 && args[0].isString()) { <newline>     GURL location(TestShell::RewriteLocalUrl(args[0].ToString())); <newline>+ <newline>+    FilePath local_path; <newline>+    if (!net::FileURLToFilePath(location, &local_path)) <newline>+      return; <newline>+ <newline>+    std::string contents; <newline>+    if (!file_util::ReadFileToString(local_path, &contents)) <newline>+      return; <newline>+ <newline>+    std::string contents_base64; <newline>+    if (!base::Base64Encode(contents, &contents_base64)) <newline>+      return; <newline>+ <newline>+    const char kDataUrlPrefix[] = "data:text/css;charset=utf-8;base64,"; <newline>+    location = GURL(kDataUrlPrefix + contents_base64); <newline>+ <newline>     shell_->delegate()->SetUserStyleSheetLocation(location); <newline>   } <newline>- <newline>-  result->SetNull(); <newline> } <newline> void LayoutTestController::setAuthorAndUserStylesEnabled(
af8297456fe53575345e0ae577486a9de93eea3	ation += ", uri=" + HttpUtil::Quote(path);	Sat Sep 11 14:03:30 2010 +0000	Fix multi-round authentication. In the case of Negotiate, authentication can look like C: GET S: 401, WWW-Authenticate: Negotiate C: GET, WWW-Authorization: Negotiate <client_token_1> S: 401, WWW-Authenticate: Negotiate <server_token_1> C: GET, WWW-Authorization: Negotiate <client_token_2> S: 401, WWW-Authenticate: Negotiate <server_token_2> on that third challenge, the handler was reported as being in "the final round" and this was treated as a rejection of the authentication attempt. After that, the new challenge token was used by a new auth handler that hadn't established a security context, and an ERR_INVALID_HANDLE would be returned. This CL also does some prep work to correctly handle the "stale=true" value for Digest authentication, but I decided to defer the HttpAuthCache changes needed for that to a separate CL since this was large enough. TEST=net_unittests. Unfortunately, I haven't been able to set up a proxy/server to do more than two auth challenges, but this does happen in the wild.	53282		http://codereview.chromium.org/3360017	svn://svn.chromium.org/chrome/trunk/src@59188 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/socket_stream/socket_stream.cc b/net/socket_stream/socket_stream.cc <newline>index ce82c9b..382571a 100644 <newline>--- a/net/socket_stream/socket_stream.cc <newline>+++ b/net/socket_stream/socket_stream.cc <newline>@@ -930,10 +930,11 @@ int SocketStream::HandleAuthChallenge(const HttpResponseHeaders* headers) { <newline>   LOG(INFO) << "The proxy " << auth_origin << " requested auth"; <newline>-  // The auth we tried just failed, hence it can't be valid. <newline>-  // Remove it from the cache so it won't be used again. <newline>-  if (auth_handler_.get() && !auth_identity_.invalid && <newline>-      auth_handler_->IsFinalRound()) { <newline>+  // TODO(cbentzel): Since SocketStream only suppports basic authentication <newline>+  // right now, another challenge is always treated as a rejection. <newline>+  // Ultimately this should be converted to use HttpAuthController like the <newline>+  // HttpNetworkTransaction has. <newline>+  if (auth_handler_.get() && !auth_identity_.invalid) { <newline>     if (auth_identity_.source != HttpAuth::IDENT_SRC_PATH_LOOKUP) <newline>       auth_cache_.Remove(auth_origin, <newline>                          auth_handler_->realm(),
ca50e128ff1bc41bc0cc1d3fdf2e015ba459d4c	ation += ", uri=" + HttpUtil::Quote(path);	Sat Sep 11 14:03:30 2010 +0000	Fix multi-round authentication. In the case of Negotiate, authentication can look like C: GET S: 401, WWW-Authenticate: Negotiate C: GET, WWW-Authorization: Negotiate <client_token_1> S: 401, WWW-Authenticate: Negotiate <server_token_1> C: GET, WWW-Authorization: Negotiate <client_token_2> S: 401, WWW-Authenticate: Negotiate <server_token_2> on that third challenge, the handler was reported as being in "the final round" and this was treated as a rejection of the authentication attempt. After that, the new challenge token was used by a new auth handler that hadn't established a security context, and an ERR_INVALID_HANDLE would be returned. This CL also does some prep work to correctly handle the "stale=true" value for Digest authentication, but I decided to defer the HttpAuthCache changes needed for that to a separate CL since this was large enough. TEST=net_unittests. Unfortunately, I haven't been able to set up a proxy/server to do more than two auth challenges, but this does happen in the wild.	53282		http://codereview.chromium.org/3360017	svn://svn.chromium.org/chrome/trunk/src@59188 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/socket_stream/socket_stream.cc b/net/socket_stream/socket_stream.cc <newline>index ce82c9b..382571a 100644 <newline>--- a/net/socket_stream/socket_stream.cc <newline>+++ b/net/socket_stream/socket_stream.cc <newline>@@ -930,10 +930,11 @@ int SocketStream::HandleAuthChallenge(const HttpResponseHeaders* headers) { <newline>   LOG(INFO) << "The proxy " << auth_origin << " requested auth"; <newline>-  // The auth we tried just failed, hence it can't be valid. <newline>-  // Remove it from the cache so it won't be used again. <newline>-  if (auth_handler_.get() && !auth_identity_.invalid && <newline>-      auth_handler_->IsFinalRound()) { <newline>+  // TODO(cbentzel): Since SocketStream only suppports basic authentication <newline>+  // right now, another challenge is always treated as a rejection. <newline>+  // Ultimately this should be converted to use HttpAuthController like the <newline>+  // HttpNetworkTransaction has. <newline>+  if (auth_handler_.get() && !auth_identity_.invalid) { <newline>     if (auth_identity_.source != HttpAuth::IDENT_SRC_PATH_LOOKUP) <newline>       auth_cache_.Remove(auth_origin, <newline>                          auth_handler_->realm(),
392c7fff5b53cbd8833cf4966c7ea346b497f3a	jianli@chromium.org <jianli@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 10 20:25:52 2010 +0000	Add the security check to ensure that the child process has the permission to read files when registering the blob data. TEST=none	none		http://codereview.chromium.org/3326017	svn://svn.chromium.org/chrome/trunk/src@59140 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/renderer_host/resource_message_filter.cc b/chrome/browser/renderer_host/resource_message_filter.cc <newline>index 2914388..2707b55 100644 <newline>--- a/chrome/browser/renderer_host/resource_message_filter.cc <newline>+++ b/chrome/browser/renderer_host/resource_message_filter.cc <newline>@@ -260,7 +260,8 @@ ResourceMessageFilter::ResourceMessageFilter( <newline>               profile->GetFileSystemHostContext(), <newline>               profile->GetHostContentSettingsMap()))), <newline>       ALLOW_THIS_IN_INITIALIZER_LIST(blob_dispatcher_host_( <newline>-          new BlobDispatcherHost(profile->GetBlobStorageContext()))) { <newline>+          new BlobDispatcherHost( <newline>+              this->id(), profile->GetBlobStorageContext()))) { <newline>   request_context_ = profile_->GetRequestContext(); <newline>   DCHECK(request_context_); <newline>   DCHECK(media_request_context_);
9a9f64a360ea100e2dbd08859e6242e54b98d49	jianli@chromium.org <jianli@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 10 20:25:52 2010 +0000	Add the security check to ensure that the child process has the permission to read files when registering the blob data. TEST=none	none		http://codereview.chromium.org/3326017	svn://svn.chromium.org/chrome/trunk/src@59140 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/renderer_host/resource_message_filter.cc b/chrome/browser/renderer_host/resource_message_filter.cc <newline>index 2914388..2707b55 100644 <newline>--- a/chrome/browser/renderer_host/resource_message_filter.cc <newline>+++ b/chrome/browser/renderer_host/resource_message_filter.cc <newline>@@ -260,7 +260,8 @@ ResourceMessageFilter::ResourceMessageFilter( <newline>               profile->GetFileSystemHostContext(), <newline>               profile->GetHostContentSettingsMap()))), <newline>       ALLOW_THIS_IN_INITIALIZER_LIST(blob_dispatcher_host_( <newline>-          new BlobDispatcherHost(profile->GetBlobStorageContext()))) { <newline>+          new BlobDispatcherHost( <newline>+              this->id(), profile->GetBlobStorageContext()))) { <newline>   request_context_ = profile_->GetRequestContext(); <newline>   DCHECK(request_context_); <newline>   DCHECK(media_request_context_);
f04bbc44f92231148d91b4a1c60804a766917cd	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Sep 2 02:07:44 2010 +0000	Do not say the connection is not encrypted if security_bits is -1 (unknown).  Say nothing in that case. If the description for the connection section is empty, omit the connection section in the dialog. R=finnur,jcivelli TEST=Visit https://alioth.debian.org/.  Bring up the Security info dialog while Chrome is displaying the SSL certificate error page.  The security info dialog should not say "Your connection to alioth.debian.org is not encrypted."	53366,13049		http://codereview.chromium.org/3243008	svn://svn.chromium.org/chrome/trunk/src@58302 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/tab_contents/tab_contents.cc b/chrome/browser/tab_contents/tab_contents.cc <newline>index 59e18ff..657c464 100644 <newline>--- a/chrome/browser/tab_contents/tab_contents.cc <newline>+++ b/chrome/browser/tab_contents/tab_contents.cc <newline>@@ -2130,7 +2130,7 @@ void TabContents::DidLoadResourceFromMemoryCache( <newline>     const std::string& main_frame_origin, <newline>     const std::string& security_info) { <newline>   // Send out a notification that we loaded a resource from our memory cache. <newline>-  int cert_id = 0, cert_status = 0, security_bits = 0, connection_status = 0; <newline>+  int cert_id = 0, cert_status = 0, security_bits = -1, connection_status = 0; <newline>   SSLManager::DeserializeSecurityInfo(security_info, <newline>                                       &cert_id, &cert_status, <newline>                                       &security_bits,
88d24f1f8aaf609db1fdcc06c3a4b5ca528c7ed	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Sep 2 02:07:44 2010 +0000	Do not say the connection is not encrypted if security_bits is -1 (unknown).  Say nothing in that case. If the description for the connection section is empty, omit the connection section in the dialog. R=finnur,jcivelli TEST=Visit https://alioth.debian.org/.  Bring up the Security info dialog while Chrome is displaying the SSL certificate error page.  The security info dialog should not say "Your connection to alioth.debian.org is not encrypted."	53366,13049		http://codereview.chromium.org/3243008	svn://svn.chromium.org/chrome/trunk/src@58302 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/tab_contents/tab_contents.cc b/chrome/browser/tab_contents/tab_contents.cc <newline>index 59e18ff..657c464 100644 <newline>--- a/chrome/browser/tab_contents/tab_contents.cc <newline>+++ b/chrome/browser/tab_contents/tab_contents.cc <newline>@@ -2130,7 +2130,7 @@ void TabContents::DidLoadResourceFromMemoryCache( <newline>     const std::string& main_frame_origin, <newline>     const std::string& security_info) { <newline>   // Send out a notification that we loaded a resource from our memory cache. <newline>-  int cert_id = 0, cert_status = 0, security_bits = 0, connection_status = 0; <newline>+  int cert_id = 0, cert_status = 0, security_bits = -1, connection_status = 0; <newline>   SSLManager::DeserializeSecurityInfo(security_info, <newline>                                       &cert_id, &cert_status, <newline>                                       &security_bits,
5a219b852f7cbf12b82bf6c6a639c2d3347fa8c	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Aug 28 01:16:17 2010 +0000	Add regression tests for issue 53366.  Check that the security_bits and connection_status members of a URLRequest's SSLInfo should have valid values when the SSL connection is set up successfully. R=agl TEST=net_unittests --gtest_filter=HTTPSRequestTest.HTTPS*Test	53366		http://codereview.chromium.org/3280002	svn://svn.chromium.org/chrome/trunk/src@57765 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_unittest.cc b/net/url_request/url_request_unittest.cc <newline>index 2ffb631..0de5929 100644 <newline>--- a/net/url_request/url_request_unittest.cc <newline>+++ b/net/url_request/url_request_unittest.cc <newline>@@ -32,6 +32,7 @@ <newline> #include "net/base/net_errors.h" <newline> #include "net/base/net_module.h" <newline> #include "net/base/net_util.h" <newline>+#include "net/base/ssl_connection_status_flags.h" <newline> #include "net/base/upload_data.h" <newline> #include "net/disk_cache/disk_cache.h" <newline> #include "net/ftp/ftp_network_layer.h" <newline>@@ -92,6 +93,17 @@ scoped_refptr<net::UploadData> CreateSimpleUploadData(const char* data) { <newline>   return upload; <newline> } <newline>+// Verify that the SSLInfo of a successful SSL connection has valid values. <newline>+void CheckSSLInfo(const net::SSLInfo& ssl_info) { <newline>+  // -1 means unknown.  0 means no encryption. <newline>+  EXPECT_GT(ssl_info.security_bits, 0); <newline>+ <newline>+  // The cipher suite TLS_NULL_WITH_NULL_NULL (0) must not be negotiated. <newline>+  int cipher_suite = net::SSLConnectionStatusToCipherSuite( <newline>+      ssl_info.connection_status); <newline>+  EXPECT_NE(0, cipher_suite); <newline>+} <newline>+ <newline> }  // namespace <newline> // Inherit PlatformTest since we require the autorelease pool on Mac OS X.f <newline>@@ -363,6 +375,7 @@ TEST_F(HTTPSRequestTest, HTTPSGetTest) { <newline>     EXPECT_EQ(1, d.response_started_count()); <newline>     EXPECT_FALSE(d.received_data_before_response()); <newline>     EXPECT_NE(0, d.bytes_received()); <newline>+    CheckSSLInfo(r.ssl_info()); <newline>   } <newline> } <newline>@@ -386,10 +399,12 @@ TEST_F(HTTPSRequestTest, HTTPSMismatchedTest) { <newline>       EXPECT_EQ(1, d.response_started_count()); <newline>       EXPECT_FALSE(d.received_data_before_response()); <newline>       EXPECT_TRUE(d.have_certificate_errors()); <newline>-      if (err_allowed) <newline>+      if (err_allowed) { <newline>         EXPECT_NE(0, d.bytes_received()); <newline>-      else <newline>+        CheckSSLInfo(r.ssl_info()); <newline>+      } else { <newline>         EXPECT_EQ(0, d.bytes_received()); <newline>+      } <newline>     } <newline>   } <newline> } <newline>@@ -416,10 +431,12 @@ TEST_F(HTTPSRequestTest, HTTPSExpiredTest) { <newline>       EXPECT_EQ(1, d.response_started_count()); <newline>       EXPECT_FALSE(d.received_data_before_response()); <newline>       EXPECT_TRUE(d.have_certificate_errors()); <newline>-      if (err_allowed) <newline>+      if (err_allowed) { <newline>         EXPECT_NE(0, d.bytes_received()); <newline>-      else <newline>+        CheckSSLInfo(r.ssl_info()); <newline>+      } else { <newline>         EXPECT_EQ(0, d.bytes_received()); <newline>+      } <newline>     } <newline>   } <newline> }
6adadb80bec17998246ab05b328a4b0a4f4ef96	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Aug 28 01:16:17 2010 +0000	Add regression tests for issue 53366.  Check that the security_bits and connection_status members of a URLRequest's SSLInfo should have valid values when the SSL connection is set up successfully. R=agl TEST=net_unittests --gtest_filter=HTTPSRequestTest.HTTPS*Test	53366		http://codereview.chromium.org/3280002	svn://svn.chromium.org/chrome/trunk/src@57765 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_unittest.cc b/net/url_request/url_request_unittest.cc <newline>index 2ffb631..0de5929 100644 <newline>--- a/net/url_request/url_request_unittest.cc <newline>+++ b/net/url_request/url_request_unittest.cc <newline>@@ -32,6 +32,7 @@ <newline> #include "net/base/net_errors.h" <newline> #include "net/base/net_module.h" <newline> #include "net/base/net_util.h" <newline>+#include "net/base/ssl_connection_status_flags.h" <newline> #include "net/base/upload_data.h" <newline> #include "net/disk_cache/disk_cache.h" <newline> #include "net/ftp/ftp_network_layer.h" <newline>@@ -92,6 +93,17 @@ scoped_refptr<net::UploadData> CreateSimpleUploadData(const char* data) { <newline>   return upload; <newline> } <newline>+// Verify that the SSLInfo of a successful SSL connection has valid values. <newline>+void CheckSSLInfo(const net::SSLInfo& ssl_info) { <newline>+  // -1 means unknown.  0 means no encryption. <newline>+  EXPECT_GT(ssl_info.security_bits, 0); <newline>+ <newline>+  // The cipher suite TLS_NULL_WITH_NULL_NULL (0) must not be negotiated. <newline>+  int cipher_suite = net::SSLConnectionStatusToCipherSuite( <newline>+      ssl_info.connection_status); <newline>+  EXPECT_NE(0, cipher_suite); <newline>+} <newline>+ <newline> }  // namespace <newline> // Inherit PlatformTest since we require the autorelease pool on Mac OS X.f <newline>@@ -363,6 +375,7 @@ TEST_F(HTTPSRequestTest, HTTPSGetTest) { <newline>     EXPECT_EQ(1, d.response_started_count()); <newline>     EXPECT_FALSE(d.received_data_before_response()); <newline>     EXPECT_NE(0, d.bytes_received()); <newline>+    CheckSSLInfo(r.ssl_info()); <newline>   } <newline> } <newline>@@ -386,10 +399,12 @@ TEST_F(HTTPSRequestTest, HTTPSMismatchedTest) { <newline>       EXPECT_EQ(1, d.response_started_count()); <newline>       EXPECT_FALSE(d.received_data_before_response()); <newline>       EXPECT_TRUE(d.have_certificate_errors()); <newline>-      if (err_allowed) <newline>+      if (err_allowed) { <newline>         EXPECT_NE(0, d.bytes_received()); <newline>-      else <newline>+        CheckSSLInfo(r.ssl_info()); <newline>+      } else { <newline>         EXPECT_EQ(0, d.bytes_received()); <newline>+      } <newline>     } <newline>   } <newline> } <newline>@@ -416,10 +431,12 @@ TEST_F(HTTPSRequestTest, HTTPSExpiredTest) { <newline>       EXPECT_EQ(1, d.response_started_count()); <newline>       EXPECT_FALSE(d.received_data_before_response()); <newline>       EXPECT_TRUE(d.have_certificate_errors()); <newline>-      if (err_allowed) <newline>+      if (err_allowed) { <newline>         EXPECT_NE(0, d.bytes_received()); <newline>-      else <newline>+        CheckSSLInfo(r.ssl_info()); <newline>+      } else { <newline>         EXPECT_EQ(0, d.bytes_received()); <newline>+      } <newline>     } <newline>   } <newline> }
80625d61ccf1e5afba2920bd7003f562ac73dda	rsimha@chromium.org <rsimha@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 18 00:45:26 2010 +0000	Fix failing sync integration tests. TwoClientLivePreferencesSyncTest.Security was failing due to a couple of EXPECT_NEs that ought to have been EXPECT_EQs. TwoClientLiveAutofillSyncTest.Client1HasData was failing due to a change in autofill behavior introduced in r55781 to fix security bug crbug.com/51727. This changelist also includes a clarification in the logic used by TwoClientLiveAutofillSyncTest.BothHaveData. TEST=sync_integration_tests	51727,51956		http://codereview.chromium.org/3169019	svn://svn.chromium.org/chrome/trunk/src@56469 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/live_sync/two_client_live_preferences_sync_test.cc b/chrome/test/live_sync/two_client_live_preferences_sync_test.cc <newline>index 4a9ee27..86500b5 100644 <newline>--- a/chrome/test/live_sync/two_client_live_preferences_sync_test.cc <newline>+++ b/chrome/test/live_sync/two_client_live_preferences_sync_test.cc <newline>@@ -332,21 +332,21 @@ IN_PROC_BROWSER_TEST_F(TwoClientLivePreferencesSyncTest, Security) { <newline>   GetPrefs(0)->SetBoolean(prefs::kTLS1Enabled, new_kTLS1Enabled); <newline>   EXPECT_TRUE(GetClient(0)->AwaitMutualSyncCycleCompletion(GetClient(1))); <newline>-  EXPECT_NE(GetVerifierPrefs()-> <newline>+  EXPECT_EQ(GetVerifierPrefs()-> <newline>       GetBoolean(prefs::kCertRevocationCheckingEnabled), <newline>-            GetPrefs(0)->GetBoolean(prefs::kCertRevocationCheckingEnabled)); <newline>+      GetPrefs(0)->GetBoolean(prefs::kCertRevocationCheckingEnabled)); <newline>   EXPECT_NE(GetVerifierPrefs()-> <newline>       GetBoolean(prefs::kCertRevocationCheckingEnabled), <newline>-            GetPrefs(1)->GetBoolean(prefs::kCertRevocationCheckingEnabled)); <newline>-  EXPECT_NE(GetVerifierPrefs()->GetBoolean(prefs::kSSL2Enabled), <newline>+      GetPrefs(1)->GetBoolean(prefs::kCertRevocationCheckingEnabled)); <newline>+  EXPECT_EQ(GetVerifierPrefs()->GetBoolean(prefs::kSSL2Enabled), <newline>             GetPrefs(0)->GetBoolean(prefs::kSSL2Enabled)); <newline>   EXPECT_NE(GetVerifierPrefs()->GetBoolean(prefs::kSSL2Enabled), <newline>             GetPrefs(1)->GetBoolean(prefs::kSSL2Enabled)); <newline>-  EXPECT_NE(GetVerifierPrefs()->GetBoolean(prefs::kSSL3Enabled), <newline>+  EXPECT_EQ(GetVerifierPrefs()->GetBoolean(prefs::kSSL3Enabled), <newline>             GetPrefs(0)->GetBoolean(prefs::kSSL3Enabled)); <newline>   EXPECT_NE(GetVerifierPrefs()->GetBoolean(prefs::kSSL3Enabled), <newline>             GetPrefs(1)->GetBoolean(prefs::kSSL3Enabled)); <newline>-  EXPECT_NE(GetVerifierPrefs()->GetBoolean(prefs::kTLS1Enabled), <newline>+  EXPECT_EQ(GetVerifierPrefs()->GetBoolean(prefs::kTLS1Enabled), <newline>             GetPrefs(0)->GetBoolean(prefs::kTLS1Enabled)); <newline>   EXPECT_NE(GetVerifierPrefs()->GetBoolean(prefs::kTLS1Enabled), <newline>             GetPrefs(1)->GetBoolean(prefs::kTLS1Enabled));
a103af9e1cced626a6b2b2e77c2e49da29ef619	rsimha@chromium.org <rsimha@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 18 00:45:26 2010 +0000	Fix failing sync integration tests. TwoClientLivePreferencesSyncTest.Security was failing due to a couple of EXPECT_NEs that ought to have been EXPECT_EQs. TwoClientLiveAutofillSyncTest.Client1HasData was failing due to a change in autofill behavior introduced in r55781 to fix security bug crbug.com/51727. This changelist also includes a clarification in the logic used by TwoClientLiveAutofillSyncTest.BothHaveData. TEST=sync_integration_tests	51727,51956		http://codereview.chromium.org/3169019	svn://svn.chromium.org/chrome/trunk/src@56469 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/live_sync/two_client_live_preferences_sync_test.cc b/chrome/test/live_sync/two_client_live_preferences_sync_test.cc <newline>index 4a9ee27..86500b5 100644 <newline>--- a/chrome/test/live_sync/two_client_live_preferences_sync_test.cc <newline>+++ b/chrome/test/live_sync/two_client_live_preferences_sync_test.cc <newline>@@ -332,21 +332,21 @@ IN_PROC_BROWSER_TEST_F(TwoClientLivePreferencesSyncTest, Security) { <newline>   GetPrefs(0)->SetBoolean(prefs::kTLS1Enabled, new_kTLS1Enabled); <newline>   EXPECT_TRUE(GetClient(0)->AwaitMutualSyncCycleCompletion(GetClient(1))); <newline>-  EXPECT_NE(GetVerifierPrefs()-> <newline>+  EXPECT_EQ(GetVerifierPrefs()-> <newline>       GetBoolean(prefs::kCertRevocationCheckingEnabled), <newline>-            GetPrefs(0)->GetBoolean(prefs::kCertRevocationCheckingEnabled)); <newline>+      GetPrefs(0)->GetBoolean(prefs::kCertRevocationCheckingEnabled)); <newline>   EXPECT_NE(GetVerifierPrefs()-> <newline>       GetBoolean(prefs::kCertRevocationCheckingEnabled), <newline>-            GetPrefs(1)->GetBoolean(prefs::kCertRevocationCheckingEnabled)); <newline>-  EXPECT_NE(GetVerifierPrefs()->GetBoolean(prefs::kSSL2Enabled), <newline>+      GetPrefs(1)->GetBoolean(prefs::kCertRevocationCheckingEnabled)); <newline>+  EXPECT_EQ(GetVerifierPrefs()->GetBoolean(prefs::kSSL2Enabled), <newline>             GetPrefs(0)->GetBoolean(prefs::kSSL2Enabled)); <newline>   EXPECT_NE(GetVerifierPrefs()->GetBoolean(prefs::kSSL2Enabled), <newline>             GetPrefs(1)->GetBoolean(prefs::kSSL2Enabled)); <newline>-  EXPECT_NE(GetVerifierPrefs()->GetBoolean(prefs::kSSL3Enabled), <newline>+  EXPECT_EQ(GetVerifierPrefs()->GetBoolean(prefs::kSSL3Enabled), <newline>             GetPrefs(0)->GetBoolean(prefs::kSSL3Enabled)); <newline>   EXPECT_NE(GetVerifierPrefs()->GetBoolean(prefs::kSSL3Enabled), <newline>             GetPrefs(1)->GetBoolean(prefs::kSSL3Enabled)); <newline>-  EXPECT_NE(GetVerifierPrefs()->GetBoolean(prefs::kTLS1Enabled), <newline>+  EXPECT_EQ(GetVerifierPrefs()->GetBoolean(prefs::kTLS1Enabled), <newline>             GetPrefs(0)->GetBoolean(prefs::kTLS1Enabled)); <newline>   EXPECT_NE(GetVerifierPrefs()->GetBoolean(prefs::kTLS1Enabled), <newline>             GetPrefs(1)->GetBoolean(prefs::kTLS1Enabled));
ba1094afa13f30e4abb6b469242a1ae9ac4785d	amit@chromium.org <amit@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 13 21:33:40 2010 +0000	Restrict unsafe URLs in Chrome Frame Further tighten down what URLs can be loaded in Chrome Frame. Based on the feedback from the security review and code inspection, restrict about: scheme only to about:blank and about:version by default. Factor out logic blocking logic including for URL zone checking so that all ActiveX, ActiveDoc and NPAPI will follow the same path. As a result we now block restricted URL zones in NPAPI instance as well. Another side effect of this refactoring is that the registry flag, EnableGcfProtocol, is replaced by AllowUnsafeURLs. If If this flag is set, then all the security related checking is turned off. TEST=By default gcf: works only for about:blank, about:version and view-source of http and https. Setting AllowUnsafeURLs to a non zero value should allow any URL be loaded via gcf:	50741		http://codereview.chromium.org/3159006	svn://svn.chromium.org/chrome/trunk/src@56096 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/utils.h b/chrome_frame/utils.h <newline>index beb7fa1..8640f11 100644 <newline>--- a/chrome_frame/utils.h <newline>+++ b/chrome_frame/utils.h <newline>@@ -24,10 +24,11 @@ <newline> // utils.h : Various utility functions and classes <newline> extern const wchar_t kChromeContentPrefix[]; <newline>+extern const char kGCFProtocol[]; <newline> extern const wchar_t kChromeProtocolPrefix[]; <newline> extern const wchar_t kChromeFrameHeadlessMode[]; <newline> extern const wchar_t kChromeFrameUnpinnedMode[]; <newline>-extern const wchar_t kEnableGCFProtocol[]; <newline>+extern const wchar_t kAllowUnsafeURLs[]; <newline> extern const wchar_t kEnableBuggyBhoIntercept[]; <newline> extern const wchar_t kChromeMimeType[]; <newline> extern const wchar_t kChromeFrameAttachTabPattern[]; <newline>@@ -276,7 +277,7 @@ bool CheckForCFNavigation(IBrowserService* browser, bool clear_flag); <newline> // Returns true if the URL passed in is something which can be handled by <newline> // Chrome. If this function returns false then we should fail the navigation. <newline> // When is_privileged is true, chrome extension URLs will be considered valid. <newline>-bool IsValidUrlScheme(const std::wstring& url, bool is_privileged); <newline>+bool IsValidUrlScheme(const GURL& url, bool is_privileged); <newline> // Returns the raw http headers for the current request given an <newline> // IWinInetHttpInfo pointer. <newline>@@ -503,8 +504,8 @@ class ChromeFrameUrl { <newline>     return dimensions_; <newline>   } <newline>-  const std::wstring& url() const { <newline>-    return url_; <newline>+  const GURL& gurl() const { <newline>+    return parsed_url_; <newline>   } <newline>  private: <newline>@@ -512,19 +513,23 @@ class ChromeFrameUrl { <newline>   // suffix portion of the URL which contains the attach_external_tab prefix. <newline>   bool ParseAttachExternalTabUrl(); <newline>+  // Clear state. <newline>+  void Reset(); <newline>+ <newline>   bool attach_to_external_tab_; <newline>   bool is_chrome_protocol_; <newline>-  std::wstring url_; <newline>   uint64 cookie_; <newline>   gfx::Rect dimensions_; <newline>   int disposition_; <newline>+ <newline>+  GURL parsed_url_; <newline> }; <newline> // Returns true if we can navigate to this URL. <newline> // This function checks if the url scheme is valid for navigation within <newline> // chrome and whether it is a restricted URL as per IE settings. In either of <newline> // these cases it returns false. <newline>-bool CanNavigateInFullTabMode(const ChromeFrameUrl& cf_url, <newline>-                              IInternetSecurityManager* security_manager); <newline>+bool CanNavigate(const GURL& url, IInternetSecurityManager* security_manager, <newline>+                 bool is_privileged); <newline> #endif  // CHROME_FRAME_UTILS_H_
266ce8f18632331944edf0042cb5a138bb19919	amit@chromium.org <amit@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 13 21:33:40 2010 +0000	Restrict unsafe URLs in Chrome Frame Further tighten down what URLs can be loaded in Chrome Frame. Based on the feedback from the security review and code inspection, restrict about: scheme only to about:blank and about:version by default. Factor out logic blocking logic including for URL zone checking so that all ActiveX, ActiveDoc and NPAPI will follow the same path. As a result we now block restricted URL zones in NPAPI instance as well. Another side effect of this refactoring is that the registry flag, EnableGcfProtocol, is replaced by AllowUnsafeURLs. If If this flag is set, then all the security related checking is turned off. TEST=By default gcf: works only for about:blank, about:version and view-source of http and https. Setting AllowUnsafeURLs to a non zero value should allow any URL be loaded via gcf:	50741		http://codereview.chromium.org/3159006	svn://svn.chromium.org/chrome/trunk/src@56096 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/utils.h b/chrome_frame/utils.h <newline>index beb7fa1..8640f11 100644 <newline>--- a/chrome_frame/utils.h <newline>+++ b/chrome_frame/utils.h <newline>@@ -24,10 +24,11 @@ <newline> // utils.h : Various utility functions and classes <newline> extern const wchar_t kChromeContentPrefix[]; <newline>+extern const char kGCFProtocol[]; <newline> extern const wchar_t kChromeProtocolPrefix[]; <newline> extern const wchar_t kChromeFrameHeadlessMode[]; <newline> extern const wchar_t kChromeFrameUnpinnedMode[]; <newline>-extern const wchar_t kEnableGCFProtocol[]; <newline>+extern const wchar_t kAllowUnsafeURLs[]; <newline> extern const wchar_t kEnableBuggyBhoIntercept[]; <newline> extern const wchar_t kChromeMimeType[]; <newline> extern const wchar_t kChromeFrameAttachTabPattern[]; <newline>@@ -276,7 +277,7 @@ bool CheckForCFNavigation(IBrowserService* browser, bool clear_flag); <newline> // Returns true if the URL passed in is something which can be handled by <newline> // Chrome. If this function returns false then we should fail the navigation. <newline> // When is_privileged is true, chrome extension URLs will be considered valid. <newline>-bool IsValidUrlScheme(const std::wstring& url, bool is_privileged); <newline>+bool IsValidUrlScheme(const GURL& url, bool is_privileged); <newline> // Returns the raw http headers for the current request given an <newline> // IWinInetHttpInfo pointer. <newline>@@ -503,8 +504,8 @@ class ChromeFrameUrl { <newline>     return dimensions_; <newline>   } <newline>-  const std::wstring& url() const { <newline>-    return url_; <newline>+  const GURL& gurl() const { <newline>+    return parsed_url_; <newline>   } <newline>  private: <newline>@@ -512,19 +513,23 @@ class ChromeFrameUrl { <newline>   // suffix portion of the URL which contains the attach_external_tab prefix. <newline>   bool ParseAttachExternalTabUrl(); <newline>+  // Clear state. <newline>+  void Reset(); <newline>+ <newline>   bool attach_to_external_tab_; <newline>   bool is_chrome_protocol_; <newline>-  std::wstring url_; <newline>   uint64 cookie_; <newline>   gfx::Rect dimensions_; <newline>   int disposition_; <newline>+ <newline>+  GURL parsed_url_; <newline> }; <newline> // Returns true if we can navigate to this URL. <newline> // This function checks if the url scheme is valid for navigation within <newline> // chrome and whether it is a restricted URL as per IE settings. In either of <newline> // these cases it returns false. <newline>-bool CanNavigateInFullTabMode(const ChromeFrameUrl& cf_url, <newline>-                              IInternetSecurityManager* security_manager); <newline>+bool CanNavigate(const GURL& url, IInternetSecurityManager* security_manager, <newline>+                 bool is_privileged); <newline> #endif  // CHROME_FRAME_UTILS_H_
e13eef2d46176ef9a60b7d1f1775d048fc2c887	tschmelcher@chromium.org <tschmelcher@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 3 00:41:31 2010 +0000	Gut the temp file flushing feature of RawData, because it is a security risk. The OS should automatically flush the pages from physical memory anyways. TEST=(Linux FF 3.0) ping pong, beach demo, prince IO, stenciled teapot, simple scene viewer, sobel edge detection shader	none		http://codereview.chromium.org/3064028	svn://svn.chromium.org/chrome/trunk/src@54640 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/o3d/import/cross/raw_data.h b/o3d/import/cross/raw_data.h <newline>index 96ea3f4..9f433cc 100644 <newline>--- a/o3d/import/cross/raw_data.h <newline>+++ b/o3d/import/cross/raw_data.h <newline>@@ -39,12 +39,8 @@ <newline> #ifndef O3D_IMPORT_CROSS_RAW_DATA_H_ <newline> #define O3D_IMPORT_CROSS_RAW_DATA_H_ <newline>-#include "base/file_path.h" <newline> #include "base/scoped_ptr.h" <newline>-#include "core/cross/error.h" <newline> #include "core/cross/param_object.h" <newline>-#include "core/cross/param.h" <newline>-#include "core/cross/types.h" <newline> namespace o3d { <newline>@@ -83,31 +79,25 @@ class RawData : public ParamObject { <newline>   const String& uri() const { return uri_; } <newline>   void set_uri(const String& uri) { uri_ = uri; } <newline>-  // If the data is still around <newline>-  // (ie, Discard has not been called), then, if it has not been written <newline>-  // to a temp file write it to a temp file <newline>-  void Flush(); <newline>+  // Historically this wrote the data out to a temp file and deleted it from <newline>+  // memory, but that functionality was removed due to security concerns. In any <newline>+  // event, a RawData object that is big enough to be worth removing from memory <newline>+  // will occupy multiple complete pages which won't be in the process's working <newline>+  // set, so the OS will eventually remove it from the physical memory anyway <newline>+  // and bring it back in when we next access it. <newline>+  void Flush() {} <newline>-  // calls Flush() if necessary and returns the path to the temp file <newline>-  // if Discard() has already been called then returns an "empty" FilePath <newline>-  const FilePath& GetTempFilePath(); <newline>- <newline>-  // deletes the data which means IF the data is in memory it is <newline>-  // freed. If there is a temp file it is deleted. <newline>+  // deletes the data <newline>   void Discard(); <newline>   bool IsOffsetLengthValid(size_t offset, size_t length) const; <newline>  private: <newline>   String uri_; <newline>-  mutable scoped_array<uint8> data_; <newline>+  scoped_array<uint8> data_; <newline>   size_t length_; <newline>-  FilePath temp_filepath_; <newline>   bool allow_string_value_; <newline>-  // Deletes temp file if it exists <newline>-  void DeleteTempFile(); <newline>- <newline>   RawData(ServiceLocator* service_locator, <newline>           const String &uri, <newline>           const void *data, <newline>@@ -122,10 +112,6 @@ class RawData : public ParamObject { <newline>   friend class IClassManager; <newline>   friend class Pack; <newline>-  // Returns |true| on success <newline>-  bool GetTempFilePathFromURI(const String &uri, <newline>-                              FilePath *temp_fullpath); <newline>- <newline>   O3D_DECL_CLASS(RawData, ParamObject) <newline>   DISALLOW_COPY_AND_ASSIGN(RawData); <newline> };
f4cdd77f20dc52f349b075d2390d3df33be6f9d	tschmelcher@chromium.org <tschmelcher@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Aug 3 00:41:31 2010 +0000	Gut the temp file flushing feature of RawData, because it is a security risk. The OS should automatically flush the pages from physical memory anyways. TEST=(Linux FF 3.0) ping pong, beach demo, prince IO, stenciled teapot, simple scene viewer, sobel edge detection shader	none		http://codereview.chromium.org/3064028	svn://svn.chromium.org/chrome/trunk/src@54640 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/o3d/import/cross/raw_data.h b/o3d/import/cross/raw_data.h <newline>index 96ea3f4..9f433cc 100644 <newline>--- a/o3d/import/cross/raw_data.h <newline>+++ b/o3d/import/cross/raw_data.h <newline>@@ -39,12 +39,8 @@ <newline> #ifndef O3D_IMPORT_CROSS_RAW_DATA_H_ <newline> #define O3D_IMPORT_CROSS_RAW_DATA_H_ <newline>-#include "base/file_path.h" <newline> #include "base/scoped_ptr.h" <newline>-#include "core/cross/error.h" <newline> #include "core/cross/param_object.h" <newline>-#include "core/cross/param.h" <newline>-#include "core/cross/types.h" <newline> namespace o3d { <newline>@@ -83,31 +79,25 @@ class RawData : public ParamObject { <newline>   const String& uri() const { return uri_; } <newline>   void set_uri(const String& uri) { uri_ = uri; } <newline>-  // If the data is still around <newline>-  // (ie, Discard has not been called), then, if it has not been written <newline>-  // to a temp file write it to a temp file <newline>-  void Flush(); <newline>+  // Historically this wrote the data out to a temp file and deleted it from <newline>+  // memory, but that functionality was removed due to security concerns. In any <newline>+  // event, a RawData object that is big enough to be worth removing from memory <newline>+  // will occupy multiple complete pages which won't be in the process's working <newline>+  // set, so the OS will eventually remove it from the physical memory anyway <newline>+  // and bring it back in when we next access it. <newline>+  void Flush() {} <newline>-  // calls Flush() if necessary and returns the path to the temp file <newline>-  // if Discard() has already been called then returns an "empty" FilePath <newline>-  const FilePath& GetTempFilePath(); <newline>- <newline>-  // deletes the data which means IF the data is in memory it is <newline>-  // freed. If there is a temp file it is deleted. <newline>+  // deletes the data <newline>   void Discard(); <newline>   bool IsOffsetLengthValid(size_t offset, size_t length) const; <newline>  private: <newline>   String uri_; <newline>-  mutable scoped_array<uint8> data_; <newline>+  scoped_array<uint8> data_; <newline>   size_t length_; <newline>-  FilePath temp_filepath_; <newline>   bool allow_string_value_; <newline>-  // Deletes temp file if it exists <newline>-  void DeleteTempFile(); <newline>- <newline>   RawData(ServiceLocator* service_locator, <newline>           const String &uri, <newline>           const void *data, <newline>@@ -122,10 +112,6 @@ class RawData : public ParamObject { <newline>   friend class IClassManager; <newline>   friend class Pack; <newline>-  // Returns |true| on success <newline>-  bool GetTempFilePathFromURI(const String &uri, <newline>-                              FilePath *temp_fullpath); <newline>- <newline>   O3D_DECL_CLASS(RawData, ParamObject) <newline>   DISALLOW_COPY_AND_ASSIGN(RawData); <newline> };
96e3f2e694ba7fadb296c75a6b9feba86c60a70	gregoryd@google.com <gregoryd@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 19 17:28:47 2010 +0000	Change the string that is shown for NaCl's broker process in Chrome's Task Manager The main reason for this change is that both "Native Client" and "sandbox" are difficult to translate, so we won't translate "Native Client" and will replace "sandbox" with "security".			http://codereview.chromium.org/3043005	svn://svn.chromium.org/chrome/trunk/src@52919 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/generated_resources.grd b/chrome/app/generated_resources.grd <newline>index e4bb86a..a439920 100644 <newline>--- a/chrome/app/generated_resources.grd <newline>+++ b/chrome/app/generated_resources.grd <newline>@@ -3282,7 +3282,7 @@ each locale. --> <newline>         Native Client module: <ph name="NEXE_NAME">$1<ex>Unknown Native Client module</ex></ph> <newline>       </message> <newline>       <message name="IDS_TASK_MANAGER_NACL_BROKER_PREFIX" desc="Task Manager row for Native Client broker, which acts as the sanbox manager for NaCl processes"> <newline>-        Native Client sandbox manager <newline>+        <ph name="Native_Client">Native Client</ph> security manager <newline>       </message> <newline>       <message name="IDS_TASK_MANAGER_NOTIFICATION_PREFIX" desc="The prefix for a Desktop Notification in the Task Manager"> <newline>         Notification: <ph name="NOTIFICATION_NAME">$1<ex>http://www.domain.com</ex></ph>
ce1e8ace592638faf50fe437f57a515b33473a3	gregoryd@google.com <gregoryd@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 19 17:28:47 2010 +0000	Change the string that is shown for NaCl's broker process in Chrome's Task Manager The main reason for this change is that both "Native Client" and "sandbox" are difficult to translate, so we won't translate "Native Client" and will replace "sandbox" with "security".			http://codereview.chromium.org/3043005	svn://svn.chromium.org/chrome/trunk/src@52919 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/generated_resources.grd b/chrome/app/generated_resources.grd <newline>index e4bb86a..a439920 100644 <newline>--- a/chrome/app/generated_resources.grd <newline>+++ b/chrome/app/generated_resources.grd <newline>@@ -3282,7 +3282,7 @@ each locale. --> <newline>         Native Client module: <ph name="NEXE_NAME">$1<ex>Unknown Native Client module</ex></ph> <newline>       </message> <newline>       <message name="IDS_TASK_MANAGER_NACL_BROKER_PREFIX" desc="Task Manager row for Native Client broker, which acts as the sanbox manager for NaCl processes"> <newline>-        Native Client sandbox manager <newline>+        <ph name="Native_Client">Native Client</ph> security manager <newline>       </message> <newline>       <message name="IDS_TASK_MANAGER_NOTIFICATION_PREFIX" desc="The prefix for a Desktop Notification in the Task Manager"> <newline>         Notification: <ph name="NOTIFICATION_NAME">$1<ex>http://www.domain.com</ex></ph>
a4dcde5dad0bb8fc781ad04ec1eef4687dc4008	tony@chromium.org <tony@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jul 16 22:32:38 2010 +0000	Fix a compile error in nacl_security_tests on some versions of gcc. Some versions of gcc give the following compilation error: /usr/include/bits/fcntl2.h:51: error: call to ‘__open_missing_mode’ declared with attribute error: open with O_CREAT in second argument needs 3 arguments make: *** [out/Release/obj.target/nacl_security_tests/chrome/test/nacl_security_tests/commands_posix.o] Error 1 So provide a third argument (the permissions of the file if created).			http://codereview.chromium.org/3046001	svn://svn.chromium.org/chrome/trunk/src@52765 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/nacl_security_tests/commands_posix.cc b/chrome/test/nacl_security_tests/commands_posix.cc <newline>index 013043e..79bcde7 100644 <newline>--- a/chrome/test/nacl_security_tests/commands_posix.cc <newline>+++ b/chrome/test/nacl_security_tests/commands_posix.cc <newline>@@ -19,8 +19,11 @@ <newline> namespace sandbox { <newline>+// Permissions for the user to read & write and others to read. <newline>+const mode_t kCreatePermissions = 0644; <newline>+ <newline> SboxTestResult TestOpenReadFile(const char *path) { <newline>-  int fd = open(path, O_RDONLY | O_CREAT); <newline>+  int fd = open(path, O_RDONLY | O_CREAT, kCreatePermissions); <newline>   if (-1 == fd) { <newline>     return SBOX_TEST_DENIED; <newline>   } else { <newline>@@ -30,7 +33,7 @@ SboxTestResult TestOpenReadFile(const char *path) { <newline> } <newline> SboxTestResult TestOpenWriteFile(const char *path) { <newline>-  int fd = open(path, O_WRONLY | O_CREAT); <newline>+  int fd = open(path, O_WRONLY | O_CREAT, kCreatePermissions); <newline>   if (-1 == fd) { <newline>     return SBOX_TEST_DENIED; <newline>   } else {
5121bcba8cf12f2e61b3f0385ccf0851b3efe99	tony@chromium.org <tony@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jul 16 22:32:38 2010 +0000	Fix a compile error in nacl_security_tests on some versions of gcc. Some versions of gcc give the following compilation error: /usr/include/bits/fcntl2.h:51: error: call to ‘__open_missing_mode’ declared with attribute error: open with O_CREAT in second argument needs 3 arguments make: *** [out/Release/obj.target/nacl_security_tests/chrome/test/nacl_security_tests/commands_posix.o] Error 1 So provide a third argument (the permissions of the file if created).			http://codereview.chromium.org/3046001	svn://svn.chromium.org/chrome/trunk/src@52765 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/nacl_security_tests/commands_posix.cc b/chrome/test/nacl_security_tests/commands_posix.cc <newline>index 013043e..79bcde7 100644 <newline>--- a/chrome/test/nacl_security_tests/commands_posix.cc <newline>+++ b/chrome/test/nacl_security_tests/commands_posix.cc <newline>@@ -19,8 +19,11 @@ <newline> namespace sandbox { <newline>+// Permissions for the user to read & write and others to read. <newline>+const mode_t kCreatePermissions = 0644; <newline>+ <newline> SboxTestResult TestOpenReadFile(const char *path) { <newline>-  int fd = open(path, O_RDONLY | O_CREAT); <newline>+  int fd = open(path, O_RDONLY | O_CREAT, kCreatePermissions); <newline>   if (-1 == fd) { <newline>     return SBOX_TEST_DENIED; <newline>   } else { <newline>@@ -30,7 +33,7 @@ SboxTestResult TestOpenReadFile(const char *path) { <newline> } <newline> SboxTestResult TestOpenWriteFile(const char *path) { <newline>-  int fd = open(path, O_WRONLY | O_CREAT); <newline>+  int fd = open(path, O_WRONLY | O_CREAT, kCreatePermissions); <newline>   if (-1 == fd) { <newline>     return SBOX_TEST_DENIED; <newline>   } else {
710c66e8390de225b873482d8f730809120d382	csilv@chromium.org <csilv@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 15 21:01:40 2010 +0000	Advanced (Under the Hood) dom-ui progress. - Complete implementation of SSL security options for all platforms. - Implemented the 'Clear auto-opening settings' button. - Correctly show logging checkbox for Chrome builds only. - Mostly-complete support for the download path section. TEST=Exercise advanced panel in options window using --enable-tabbed-options.	48482		http://codereview.chromium.org/2893012	svn://svn.chromium.org/chrome/trunk/src@52525 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/shared/js/cr.js b/chrome/browser/resources/shared/js/cr.js <newline>index 8558171..6920b19 100644 <newline>--- a/chrome/browser/resources/shared/js/cr.js <newline>+++ b/chrome/browser/resources/shared/js/cr.js <newline>@@ -11,6 +11,12 @@ const cr = (function() { <newline>   const isMac = /Mac/.test(navigator.platform); <newline>   /** <newline>+   * Whether this is on the Windows platform or not. <newline>+   * @type {boolean} <newline>+   */ <newline>+  const isWindows = /Win/.test(navigator.platform); <newline>+ <newline>+  /** <newline>    * Whether this is on chromeOS or not. <newline>    * @type {boolean} <newline>    */ <newline>@@ -323,6 +329,7 @@ const cr = (function() { <newline>   return { <newline>     isMac: isMac, <newline>+    isWindows: isWindows, <newline>     isChromeOS: isChromeOS, <newline>     define: define, <newline>     defineProperty: defineProperty,
d7b2980a035eea169e02ab4c7729b0c8056cf4a	csilv@chromium.org <csilv@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 15 21:01:40 2010 +0000	Advanced (Under the Hood) dom-ui progress. - Complete implementation of SSL security options for all platforms. - Implemented the 'Clear auto-opening settings' button. - Correctly show logging checkbox for Chrome builds only. - Mostly-complete support for the download path section. TEST=Exercise advanced panel in options window using --enable-tabbed-options.	48482		http://codereview.chromium.org/2893012	svn://svn.chromium.org/chrome/trunk/src@52525 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/resources/shared/js/cr.js b/chrome/browser/resources/shared/js/cr.js <newline>index 8558171..6920b19 100644 <newline>--- a/chrome/browser/resources/shared/js/cr.js <newline>+++ b/chrome/browser/resources/shared/js/cr.js <newline>@@ -11,6 +11,12 @@ const cr = (function() { <newline>   const isMac = /Mac/.test(navigator.platform); <newline>   /** <newline>+   * Whether this is on the Windows platform or not. <newline>+   * @type {boolean} <newline>+   */ <newline>+  const isWindows = /Win/.test(navigator.platform); <newline>+ <newline>+  /** <newline>    * Whether this is on chromeOS or not. <newline>    * @type {boolean} <newline>    */ <newline>@@ -323,6 +329,7 @@ const cr = (function() { <newline>   return { <newline>     isMac: isMac, <newline>+    isWindows: isWindows, <newline>     isChromeOS: isChromeOS, <newline>     define: define, <newline>     defineProperty: defineProperty,
c898976484246ddc5a7c1b46864ddcdd63b1487	shess@chromium.org <shess@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jul 13 21:42:42 2010 +0000	[Mac] First part of Omnibox decoration refactor.  Enable ev bubble. The views implementation of the little things floating around in the Omnibox uses nested views which are manually laid out by the location-bar code.  The Mac code has a variety of different implementations for these items, with the layout distributed across many files.  This change creates something called a "decoration" which is similar (different name because Mac has a strong sense of what a "view" is).  Decorations are kind of like a C++ NSCell, which the AutocompleteTextFieldCell handles generically and the LocationBarViewMac::Layout() code will lay out.  The overall goal is to loosely parallel the views code for decorations and Layout(), so that future coders can do the right thing more easily. This CL converts the left-hand items, namely: - the location icon - the search-keyword bubble - the ev security bubble (new) The Layout() function does not yet deal with trimming things to fit when space is tight. location_bar_view_mac_unittest.mm was always a sham, so I'm going to stop pretending. TEST=EV bubble for secure sites. TEST=location icon can be clicked (page info panel) and dragged. TEST=EV bubble can be clicked (page info panel) and dragged. TEST=keyword-search mode shows appropriately.	41998	ageActionViewList page_action_views_;	http://codereview.chromium.org/2805070	svn://svn.chromium.org/chrome/trunk/src@52223 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index e0faa4a..1897371 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -721,7 +721,7 @@ <newline>         'browser/cocoa/location_bar/autocomplete_text_field_editor_unittest.mm', <newline>         'browser/cocoa/location_bar/autocomplete_text_field_unittest.mm', <newline>         'browser/cocoa/location_bar/autocomplete_text_field_unittest_helper.mm', <newline>-        'browser/cocoa/location_bar/location_bar_view_mac_unittest.mm', <newline>+        'browser/cocoa/location_bar/selected_keyword_decoration_unittest.mm', <newline>         'browser/cocoa/menu_button_unittest.mm', <newline>         'browser/cocoa/menu_controller_unittest.mm', <newline>         'browser/cocoa/notifications/balloon_controller_unittest.mm',
b6d030da5368b3c1e9e20c82a25a2540cd335b4	shess@chromium.org <shess@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jul 13 21:42:42 2010 +0000	[Mac] First part of Omnibox decoration refactor.  Enable ev bubble. The views implementation of the little things floating around in the Omnibox uses nested views which are manually laid out by the location-bar code.  The Mac code has a variety of different implementations for these items, with the layout distributed across many files.  This change creates something called a "decoration" which is similar (different name because Mac has a strong sense of what a "view" is).  Decorations are kind of like a C++ NSCell, which the AutocompleteTextFieldCell handles generically and the LocationBarViewMac::Layout() code will lay out.  The overall goal is to loosely parallel the views code for decorations and Layout(), so that future coders can do the right thing more easily. This CL converts the left-hand items, namely: - the location icon - the search-keyword bubble - the ev security bubble (new) The Layout() function does not yet deal with trimming things to fit when space is tight. location_bar_view_mac_unittest.mm was always a sham, so I'm going to stop pretending. TEST=EV bubble for secure sites. TEST=location icon can be clicked (page info panel) and dragged. TEST=EV bubble can be clicked (page info panel) and dragged. TEST=keyword-search mode shows appropriately.	41998	ageActionViewList page_action_views_;	http://codereview.chromium.org/2805070	svn://svn.chromium.org/chrome/trunk/src@52223 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index e0faa4a..1897371 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -721,7 +721,7 @@ <newline>         'browser/cocoa/location_bar/autocomplete_text_field_editor_unittest.mm', <newline>         'browser/cocoa/location_bar/autocomplete_text_field_unittest.mm', <newline>         'browser/cocoa/location_bar/autocomplete_text_field_unittest_helper.mm', <newline>-        'browser/cocoa/location_bar/location_bar_view_mac_unittest.mm', <newline>+        'browser/cocoa/location_bar/selected_keyword_decoration_unittest.mm', <newline>         'browser/cocoa/menu_button_unittest.mm', <newline>         'browser/cocoa/menu_controller_unittest.mm', <newline>         'browser/cocoa/notifications/balloon_controller_unittest.mm',
5463e5f76bf24915e94ab4a9ade5a040b329584	sdoyon@chromium.org <sdoyon@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jul 9 17:35:08 2010 +0000	Add --allow-scripting-gallery command line switch to allow extensions and scripts to run on the Chrome Extensions Gallery site. There are security concerns in enabling this and so it remains off by default, but this is needed for automation testing of the gallery. Cleanup: Have UserScriptSlave::InjectScripts() return void instead of a bogus bool. TEST=Visit http://chrome.google.com/extensions, check that content scripts work when the command-line switch is given, and are not injected when the switch is not given.	none		http://codereview.chromium.org/2912002	svn://svn.chromium.org/chrome/trunk/src@51977 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/user_script_slave.h b/chrome/renderer/user_script_slave.h <newline>index cf8fb8d..a1b0a04 100644 <newline>--- a/chrome/renderer/user_script_slave.h <newline>+++ b/chrome/renderer/user_script_slave.h <newline>@@ -37,7 +37,7 @@ class UserScriptSlave { <newline>   // Inject the appropriate scripts into a frame based on its URL. <newline>   // TODO(aa): Extract a UserScriptFrame interface out of this to improve <newline>   // testability. <newline>-  bool InjectScripts(WebKit::WebFrame* frame, UserScript::RunLocation location); <newline>+  void InjectScripts(WebKit::WebFrame* frame, UserScript::RunLocation location); <newline>   static int GetIsolatedWorldId(const std::string& extension_id);
38d45d84246e0a0f301c1b7aaa618a45431c0d1	sdoyon@chromium.org <sdoyon@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jul 9 17:35:08 2010 +0000	Add --allow-scripting-gallery command line switch to allow extensions and scripts to run on the Chrome Extensions Gallery site. There are security concerns in enabling this and so it remains off by default, but this is needed for automation testing of the gallery. Cleanup: Have UserScriptSlave::InjectScripts() return void instead of a bogus bool. TEST=Visit http://chrome.google.com/extensions, check that content scripts work when the command-line switch is given, and are not injected when the switch is not given.	none		http://codereview.chromium.org/2912002	svn://svn.chromium.org/chrome/trunk/src@51977 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/user_script_slave.h b/chrome/renderer/user_script_slave.h <newline>index cf8fb8d..a1b0a04 100644 <newline>--- a/chrome/renderer/user_script_slave.h <newline>+++ b/chrome/renderer/user_script_slave.h <newline>@@ -37,7 +37,7 @@ class UserScriptSlave { <newline>   // Inject the appropriate scripts into a frame based on its URL. <newline>   // TODO(aa): Extract a UserScriptFrame interface out of this to improve <newline>   // testability. <newline>-  bool InjectScripts(WebKit::WebFrame* frame, UserScript::RunLocation location); <newline>+  void InjectScripts(WebKit::WebFrame* frame, UserScript::RunLocation location); <newline>   static int GetIsolatedWorldId(const std::string& extension_id);
68c231043903f64382034d548f9dec0b1feb9b5	inferno@chromium.org <inferno@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jul 9 17:02:09 2010 +0000	Fix eliding, truncation issues with hostnames in security information dialog for windows, linux platforms resp. TEST=None	48597		http://codereview.chromium.org/2958002	svn://svn.chromium.org/chrome/trunk/src@51972 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/views/page_info_window_view.cc b/chrome/browser/views/page_info_window_view.cc <newline>index dbc790c..ea573d8 100644 <newline>--- a/chrome/browser/views/page_info_window_view.cc <newline>+++ b/chrome/browser/views/page_info_window_view.cc <newline>@@ -369,6 +369,9 @@ Section::Section(const string16& title, <newline>   description_label_ = new views::Label(UTF16ToWideHack(description)); <newline>   description_label_->SetMultiLine(true); <newline>   description_label_->SetHorizontalAlignment(views::Label::ALIGN_LEFT); <newline>+  // Allow linebreaking in the middle of words if necessary, so that extremely <newline>+  // long hostnames (longer than one line) will still be completely shown. <newline>+  description_label_->SetAllowCharacterBreak(true); <newline>   AddChildView(description_label_); <newline> }
151a5ef5e357e7d7187fcc1aa8fbb6c31f223cb	inferno@chromium.org <inferno@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jul 9 17:02:09 2010 +0000	Fix eliding, truncation issues with hostnames in security information dialog for windows, linux platforms resp. TEST=None	48597		http://codereview.chromium.org/2958002	svn://svn.chromium.org/chrome/trunk/src@51972 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/views/page_info_window_view.cc b/chrome/browser/views/page_info_window_view.cc <newline>index dbc790c..ea573d8 100644 <newline>--- a/chrome/browser/views/page_info_window_view.cc <newline>+++ b/chrome/browser/views/page_info_window_view.cc <newline>@@ -369,6 +369,9 @@ Section::Section(const string16& title, <newline>   description_label_ = new views::Label(UTF16ToWideHack(description)); <newline>   description_label_->SetMultiLine(true); <newline>   description_label_->SetHorizontalAlignment(views::Label::ALIGN_LEFT); <newline>+  // Allow linebreaking in the middle of words if necessary, so that extremely <newline>+  // long hostnames (longer than one line) will still be completely shown. <newline>+  description_label_->SetAllowCharacterBreak(true); <newline>   AddChildView(description_label_); <newline> }
0188f263be1db07d9ccb3d4e1cec2e2daf9fb2f	bauerb@chromium.org <bauerb@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jul 2 09:31:11 2010 +0000	Group plugins in about:plugins and show update link for out-of-date ones. Re-landing patch by mavrommatis, original review here: <http://codereview.chromium.org/1991005> Original description follows: (1) Group plugins with the same name together. (2) Show a download link for plugin versions with known security problems in about:plugins. TEST=Open "chrome://plugins", see that plugins are grouped, and that any vulnerable plugins are marked red. Try enabling and disabling plugin groups. Also, if the internal PDF plugin is enabled, it should stay enabled after a restart.	3910,47858		http://codereview.chromium.org/2811037	svn://svn.chromium.org/chrome/trunk/src@51510 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index bfa6cec..b2174d3 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -898,7 +898,7 @@ <newline>         'browser/password_manager/password_store_default_unittest.cc', <newline>         'browser/password_manager/password_store_mac_unittest.cc', <newline>         'browser/password_manager/password_store_win_unittest.cc', <newline>-        'browser/password_manager/password_store_x_unittest.cc', <newline>+        'browser/plugin_updater_unittest.cc', <newline>         'browser/pref_member_unittest.cc', <newline>         'browser/pref_service_unittest.cc', <newline>         'browser/preferences_mock_mac.cc', <newline>@@ -1532,7 +1532,7 @@ <newline>             'browser/chromeos/options/wifi_config_view_browsertest.cc', <newline>             'browser/chromeos/panels/panel_browsertest.cc', <newline>             'browser/chromeos/status/clock_menu_button_browsertest.cc', <newline>-            'browser/chromeos/status/language_menu_button_browsertest.cc', <newline>+            'browser/chromeos/status/language_menu_button_browsertest.cc', <newline>             'browser/chromeos/status/power_menu_button_browsertest.cc', <newline>           ], <newline>         }], <newline>@@ -2465,7 +2465,7 @@ <newline>               # If a test bundle is added to this coverage_build target it <newline>               # necessarily means this file (chrome_tests.gypi) is changed, <newline>               # so the action is run (coverage_bundles.py is generated). <newline>-              # Exceptions to that rule are theoretically possible <newline>+              # Exceptions to that rule are theoretically possible <newline>               # (e.g. re-gyp with a GYP_DEFINES set). <newline>               # Else it's the same list of bundles as last time.  They are <newline>               # built (since on the deps list) but the action may not run.
a8b1e2c78db8b03065787c8b7b9d3fabb6729ee	bauerb@chromium.org <bauerb@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jul 2 09:31:11 2010 +0000	Group plugins in about:plugins and show update link for out-of-date ones. Re-landing patch by mavrommatis, original review here: <http://codereview.chromium.org/1991005> Original description follows: (1) Group plugins with the same name together. (2) Show a download link for plugin versions with known security problems in about:plugins. TEST=Open "chrome://plugins", see that plugins are grouped, and that any vulnerable plugins are marked red. Try enabling and disabling plugin groups. Also, if the internal PDF plugin is enabled, it should stay enabled after a restart.	3910,47858		http://codereview.chromium.org/2811037	svn://svn.chromium.org/chrome/trunk/src@51510 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index bfa6cec..b2174d3 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -898,7 +898,7 @@ <newline>         'browser/password_manager/password_store_default_unittest.cc', <newline>         'browser/password_manager/password_store_mac_unittest.cc', <newline>         'browser/password_manager/password_store_win_unittest.cc', <newline>-        'browser/password_manager/password_store_x_unittest.cc', <newline>+        'browser/plugin_updater_unittest.cc', <newline>         'browser/pref_member_unittest.cc', <newline>         'browser/pref_service_unittest.cc', <newline>         'browser/preferences_mock_mac.cc', <newline>@@ -1532,7 +1532,7 @@ <newline>             'browser/chromeos/options/wifi_config_view_browsertest.cc', <newline>             'browser/chromeos/panels/panel_browsertest.cc', <newline>             'browser/chromeos/status/clock_menu_button_browsertest.cc', <newline>-            'browser/chromeos/status/language_menu_button_browsertest.cc', <newline>+            'browser/chromeos/status/language_menu_button_browsertest.cc', <newline>             'browser/chromeos/status/power_menu_button_browsertest.cc', <newline>           ], <newline>         }], <newline>@@ -2465,7 +2465,7 @@ <newline>               # If a test bundle is added to this coverage_build target it <newline>               # necessarily means this file (chrome_tests.gypi) is changed, <newline>               # so the action is run (coverage_bundles.py is generated). <newline>-              # Exceptions to that rule are theoretically possible <newline>+              # Exceptions to that rule are theoretically possible <newline>               # (e.g. re-gyp with a GYP_DEFINES set). <newline>               # Else it's the same list of bundles as last time.  They are <newline>               # built (since on the deps list) but the action may not run.
bf0846f99c4e3bd3157358a570967ebcaba95d5	jam@chromium.org <jam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jun 29 23:14:46 2010 +0000	Revert 51110 because of regression 47858- Group plugins in about:plugins and show update link for out-of-date ones. Tracking patch by mavrommatis, original review here: <http://codereview.chromium.org/1991005> Original description follows: (1) Group plugins with the same name together. (2) Show a download link for plugin versions with known security problems in about:plugins. TEST=Open "chrome://plugins", see that plugins are grouped, and that any vulnerable plugins are marked red. Try enabling and disabling plugin groups. TBR=bauerb@chromium.org	3910		http://codereview.chromium.org/2805048	svn://svn.chromium.org/chrome/trunk/src@51191 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index d055b35..e956ce6 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -897,7 +897,7 @@ <newline>         'browser/password_manager/password_store_default_unittest.cc', <newline>         'browser/password_manager/password_store_mac_unittest.cc', <newline>         'browser/password_manager/password_store_win_unittest.cc', <newline>-        'browser/plugin_updater_unittest.cc', <newline>+        'browser/password_manager/password_store_x_unittest.cc', <newline>         'browser/pref_member_unittest.cc', <newline>         'browser/pref_service_unittest.cc', <newline>         'browser/preferences_mock_mac.cc', <newline>@@ -1522,7 +1522,7 @@ <newline>             'browser/chromeos/options/wifi_config_view_browsertest.cc', <newline>             'browser/chromeos/panels/panel_browsertest.cc', <newline>             'browser/chromeos/status/clock_menu_button_browsertest.cc', <newline>-            'browser/chromeos/status/language_menu_button_browsertest.cc', <newline>+            'browser/chromeos/status/language_menu_button_browsertest.cc', <newline>             'browser/chromeos/status/power_menu_button_browsertest.cc', <newline>           ], <newline>         }], <newline>@@ -2487,7 +2487,7 @@ <newline>               # If a test bundle is added to this coverage_build target it <newline>               # necessarily means this file (chrome_tests.gypi) is changed, <newline>               # so the action is run (coverage_bundles.py is generated). <newline>-              # Exceptions to that rule are theoretically possible <newline>+              # Exceptions to that rule are theoretically possible <newline>               # (e.g. re-gyp with a GYP_DEFINES set). <newline>               # Else it's the same list of bundles as last time.  They are <newline>               # built (since on the deps list) but the action may not run.
bf3714a8a46a52a95501aeaa73300b12bdfbae1	jam@chromium.org <jam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jun 29 23:14:46 2010 +0000	Revert 51110 because of regression 47858- Group plugins in about:plugins and show update link for out-of-date ones. Tracking patch by mavrommatis, original review here: <http://codereview.chromium.org/1991005> Original description follows: (1) Group plugins with the same name together. (2) Show a download link for plugin versions with known security problems in about:plugins. TEST=Open "chrome://plugins", see that plugins are grouped, and that any vulnerable plugins are marked red. Try enabling and disabling plugin groups. TBR=bauerb@chromium.org	3910		http://codereview.chromium.org/2805048	svn://svn.chromium.org/chrome/trunk/src@51191 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index d055b35..e956ce6 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -897,7 +897,7 @@ <newline>         'browser/password_manager/password_store_default_unittest.cc', <newline>         'browser/password_manager/password_store_mac_unittest.cc', <newline>         'browser/password_manager/password_store_win_unittest.cc', <newline>-        'browser/plugin_updater_unittest.cc', <newline>+        'browser/password_manager/password_store_x_unittest.cc', <newline>         'browser/pref_member_unittest.cc', <newline>         'browser/pref_service_unittest.cc', <newline>         'browser/preferences_mock_mac.cc', <newline>@@ -1522,7 +1522,7 @@ <newline>             'browser/chromeos/options/wifi_config_view_browsertest.cc', <newline>             'browser/chromeos/panels/panel_browsertest.cc', <newline>             'browser/chromeos/status/clock_menu_button_browsertest.cc', <newline>-            'browser/chromeos/status/language_menu_button_browsertest.cc', <newline>+            'browser/chromeos/status/language_menu_button_browsertest.cc', <newline>             'browser/chromeos/status/power_menu_button_browsertest.cc', <newline>           ], <newline>         }], <newline>@@ -2487,7 +2487,7 @@ <newline>               # If a test bundle is added to this coverage_build target it <newline>               # necessarily means this file (chrome_tests.gypi) is changed, <newline>               # so the action is run (coverage_bundles.py is generated). <newline>-              # Exceptions to that rule are theoretically possible <newline>+              # Exceptions to that rule are theoretically possible <newline>               # (e.g. re-gyp with a GYP_DEFINES set). <newline>               # Else it's the same list of bundles as last time.  They are <newline>               # built (since on the deps list) but the action may not run.
c2eb61a31f010099710ed0bd3ca453ce07706ca	jam@chromium.org <jam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jun 29 20:38:38 2010 +0000	Allow quering Pepper plugin for selected text for the context menu.  Also take out the ability to access the clipboard since it's not exposed to HTML for security reasons.			http://codereview.chromium.org/2841028	svn://svn.chromium.org/chrome/trunk/src@51159 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/plugins/webplugin_impl.h b/webkit/glue/plugins/webplugin_impl.h <newline>index 9c2fa33..8436ae7 100644 <newline>--- a/webkit/glue/plugins/webplugin_impl.h <newline>+++ b/webkit/glue/plugins/webplugin_impl.h <newline>@@ -93,6 +93,7 @@ class WebPluginImpl : public WebPlugin, <newline>                          int printer_dpi); <newline>   virtual bool printPage(int page_number, WebKit::WebCanvas* canvas); <newline>   virtual void printEnd(); <newline>+  virtual WebKit::WebString selectedText(); <newline>   // WebPlugin implementation: <newline>   void SetWindow(gfx::PluginWindowHandle window);
a6b5cfec256bf3e2050a128289c062effede0d2	jam@chromium.org <jam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jun 29 20:38:38 2010 +0000	Allow quering Pepper plugin for selected text for the context menu.  Also take out the ability to access the clipboard since it's not exposed to HTML for security reasons.			http://codereview.chromium.org/2841028	svn://svn.chromium.org/chrome/trunk/src@51159 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/plugins/webplugin_impl.h b/webkit/glue/plugins/webplugin_impl.h <newline>index 9c2fa33..8436ae7 100644 <newline>--- a/webkit/glue/plugins/webplugin_impl.h <newline>+++ b/webkit/glue/plugins/webplugin_impl.h <newline>@@ -93,6 +93,7 @@ class WebPluginImpl : public WebPlugin, <newline>                          int printer_dpi); <newline>   virtual bool printPage(int page_number, WebKit::WebCanvas* canvas); <newline>   virtual void printEnd(); <newline>+  virtual WebKit::WebString selectedText(); <newline>   // WebPlugin implementation: <newline>   void SetWindow(gfx::PluginWindowHandle window);
b50209a11061a8ff7eebba6341c1eefa35e845d	bauerb@chromium.org <bauerb@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jun 29 09:38:44 2010 +0000	Group plugins in about:plugins and show update link for out-of-date ones. Tracking patch by mavrommatis, original review here: <http://codereview.chromium.org/1991005> Original description follows: (1) Group plugins with the same name together. (2) Show a download link for plugin versions with known security problems in about:plugins. TEST=Open "chrome://plugins", see that plugins are grouped, and that any vulnerable plugins are marked red. Try enabling and disabling plugin groups.	3910		http://codereview.chromium.org/2835018	svn://svn.chromium.org/chrome/trunk/src@51110 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index e956ce6..d055b35 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -897,7 +897,7 @@ <newline>         'browser/password_manager/password_store_default_unittest.cc', <newline>         'browser/password_manager/password_store_mac_unittest.cc', <newline>         'browser/password_manager/password_store_win_unittest.cc', <newline>-        'browser/password_manager/password_store_x_unittest.cc', <newline>+        'browser/plugin_updater_unittest.cc', <newline>         'browser/pref_member_unittest.cc', <newline>         'browser/pref_service_unittest.cc', <newline>         'browser/preferences_mock_mac.cc', <newline>@@ -1522,7 +1522,7 @@ <newline>             'browser/chromeos/options/wifi_config_view_browsertest.cc', <newline>             'browser/chromeos/panels/panel_browsertest.cc', <newline>             'browser/chromeos/status/clock_menu_button_browsertest.cc', <newline>-            'browser/chromeos/status/language_menu_button_browsertest.cc', <newline>+            'browser/chromeos/status/language_menu_button_browsertest.cc', <newline>             'browser/chromeos/status/power_menu_button_browsertest.cc', <newline>           ], <newline>         }], <newline>@@ -2487,7 +2487,7 @@ <newline>               # If a test bundle is added to this coverage_build target it <newline>               # necessarily means this file (chrome_tests.gypi) is changed, <newline>               # so the action is run (coverage_bundles.py is generated). <newline>-              # Exceptions to that rule are theoretically possible <newline>+              # Exceptions to that rule are theoretically possible <newline>               # (e.g. re-gyp with a GYP_DEFINES set). <newline>               # Else it's the same list of bundles as last time.  They are <newline>               # built (since on the deps list) but the action may not run.
2a88cf8ff20c90748eb650766cf214832d13549	bauerb@chromium.org <bauerb@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jun 29 09:38:44 2010 +0000	Group plugins in about:plugins and show update link for out-of-date ones. Tracking patch by mavrommatis, original review here: <http://codereview.chromium.org/1991005> Original description follows: (1) Group plugins with the same name together. (2) Show a download link for plugin versions with known security problems in about:plugins. TEST=Open "chrome://plugins", see that plugins are grouped, and that any vulnerable plugins are marked red. Try enabling and disabling plugin groups.	3910		http://codereview.chromium.org/2835018	svn://svn.chromium.org/chrome/trunk/src@51110 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index e956ce6..d055b35 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -897,7 +897,7 @@ <newline>         'browser/password_manager/password_store_default_unittest.cc', <newline>         'browser/password_manager/password_store_mac_unittest.cc', <newline>         'browser/password_manager/password_store_win_unittest.cc', <newline>-        'browser/password_manager/password_store_x_unittest.cc', <newline>+        'browser/plugin_updater_unittest.cc', <newline>         'browser/pref_member_unittest.cc', <newline>         'browser/pref_service_unittest.cc', <newline>         'browser/preferences_mock_mac.cc', <newline>@@ -1522,7 +1522,7 @@ <newline>             'browser/chromeos/options/wifi_config_view_browsertest.cc', <newline>             'browser/chromeos/panels/panel_browsertest.cc', <newline>             'browser/chromeos/status/clock_menu_button_browsertest.cc', <newline>-            'browser/chromeos/status/language_menu_button_browsertest.cc', <newline>+            'browser/chromeos/status/language_menu_button_browsertest.cc', <newline>             'browser/chromeos/status/power_menu_button_browsertest.cc', <newline>           ], <newline>         }], <newline>@@ -2487,7 +2487,7 @@ <newline>               # If a test bundle is added to this coverage_build target it <newline>               # necessarily means this file (chrome_tests.gypi) is changed, <newline>               # so the action is run (coverage_bundles.py is generated). <newline>-              # Exceptions to that rule are theoretically possible <newline>+              # Exceptions to that rule are theoretically possible <newline>               # (e.g. re-gyp with a GYP_DEFINES set). <newline>               # Else it's the same list of bundles as last time.  They are <newline>               # built (since on the deps list) but the action may not run.
52ee2d06d3d5ae74f57bcbd80241762f8a69520	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jun 18 17:45:35 2010 +0000	Move the Mozilla-derived code in net/base/keygen_handler_nss.cc to the new net/third_party/mozilla_security_manager directory. Fix nits. R=mattm,davidben TEST=none	148		http://codereview.chromium.org/2824014	svn://svn.chromium.org/chrome/trunk/src@50259 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/third_party/mozilla_security_manager/nsKeygenHandler.h b/net/third_party/mozilla_security_manager/nsKeygenHandler.h <newline>new file mode 100644 <newline>index 0000000..1a0d44c <newline>--- /dev/null <newline>+++ b/net/third_party/mozilla_security_manager/nsKeygenHandler.h <newline>@@ -0,0 +1,56 @@ <newline>+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- <newline>+ * <newline>+ * ***** BEGIN LICENSE BLOCK ***** <newline>+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1 <newline>+ * <newline>+ * The contents of this file are subject to the Mozilla Public License Version <newline>+ * 1.1 (the "License"); you may not use this file except in compliance with <newline>+ * the License. You may obtain a copy of the License at <newline>+ * http://www.mozilla.org/MPL/ <newline>+ * <newline>+ * Software distributed under the License is distributed on an "AS IS" basis, <newline>+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License <newline>+ * for the specific language governing rights and limitations under the <newline>+ * License. <newline>+ * <newline>+ * The Original Code is mozilla.org code. <newline>+ * <newline>+ * The Initial Developer of the Original Code is <newline>+ * Netscape Communications Corporation. <newline>+ * Portions created by the Initial Developer are Copyright (C) 2001 <newline>+ * the Initial Developer. All Rights Reserved. <newline>+ * <newline>+ * Contributor(s): <newline>+ *   David Drinan. (ddrinan@netscape.com) <newline>+ * <newline>+ * Alternatively, the contents of this file may be used under the terms of <newline>+ * either the GNU General Public License Version 2 or later (the "GPL"), or <newline>+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"), <newline>+ * in which case the provisions of the GPL or the LGPL are applicable instead <newline>+ * of those above. If you wish to allow use of your version of this file only <newline>+ * under the terms of either the GPL or the LGPL, and not to allow others to <newline>+ * use your version of this file under the terms of the MPL, indicate your <newline>+ * decision by deleting the provisions above and replace them with the notice <newline>+ * and other provisions required by the GPL or the LGPL. If you do not delete <newline>+ * the provisions above, a recipient may use your version of this file under <newline>+ * the terms of any one of the MPL, the GPL or the LGPL. <newline>+ * <newline>+ * ***** END LICENSE BLOCK ***** */ <newline>+ <newline>+#ifndef _NSKEYGENHANDLER_H_ <newline>+#define _NSKEYGENHANDLER_H_ <newline>+ <newline>+#include <string> <newline>+ <newline>+namespace mozilla_security_manager { <newline>+ <newline>+#define DEFAULT_RSA_KEYGEN_PE 65537L <newline>+#define DEFAULT_RSA_KEYGEN_ALG SEC_OID_PKCS1_MD5_WITH_RSA_ENCRYPTION <newline>+ <newline>+std::string GenKeyAndSignChallenge(int key_size_in_bits, <newline>+                                   const std::string& challenge, <newline>+                                   bool stores_key); <newline>+ <newline>+}  // namespace mozilla_security_manager <newline>+ <newline>+#endif //_NSKEYGENHANDLER_H_
3ae7c4c5f08e73d66ef8b2303691d893f5d9e47	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jun 18 17:45:35 2010 +0000	Move the Mozilla-derived code in net/base/keygen_handler_nss.cc to the new net/third_party/mozilla_security_manager directory. Fix nits. R=mattm,davidben TEST=none	148		http://codereview.chromium.org/2824014	svn://svn.chromium.org/chrome/trunk/src@50259 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/third_party/mozilla_security_manager/nsKeygenHandler.h b/net/third_party/mozilla_security_manager/nsKeygenHandler.h <newline>new file mode 100644 <newline>index 0000000..1a0d44c <newline>--- /dev/null <newline>+++ b/net/third_party/mozilla_security_manager/nsKeygenHandler.h <newline>@@ -0,0 +1,56 @@ <newline>+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- <newline>+ * <newline>+ * ***** BEGIN LICENSE BLOCK ***** <newline>+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1 <newline>+ * <newline>+ * The contents of this file are subject to the Mozilla Public License Version <newline>+ * 1.1 (the "License"); you may not use this file except in compliance with <newline>+ * the License. You may obtain a copy of the License at <newline>+ * http://www.mozilla.org/MPL/ <newline>+ * <newline>+ * Software distributed under the License is distributed on an "AS IS" basis, <newline>+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License <newline>+ * for the specific language governing rights and limitations under the <newline>+ * License. <newline>+ * <newline>+ * The Original Code is mozilla.org code. <newline>+ * <newline>+ * The Initial Developer of the Original Code is <newline>+ * Netscape Communications Corporation. <newline>+ * Portions created by the Initial Developer are Copyright (C) 2001 <newline>+ * the Initial Developer. All Rights Reserved. <newline>+ * <newline>+ * Contributor(s): <newline>+ *   David Drinan. (ddrinan@netscape.com) <newline>+ * <newline>+ * Alternatively, the contents of this file may be used under the terms of <newline>+ * either the GNU General Public License Version 2 or later (the "GPL"), or <newline>+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"), <newline>+ * in which case the provisions of the GPL or the LGPL are applicable instead <newline>+ * of those above. If you wish to allow use of your version of this file only <newline>+ * under the terms of either the GPL or the LGPL, and not to allow others to <newline>+ * use your version of this file under the terms of the MPL, indicate your <newline>+ * decision by deleting the provisions above and replace them with the notice <newline>+ * and other provisions required by the GPL or the LGPL. If you do not delete <newline>+ * the provisions above, a recipient may use your version of this file under <newline>+ * the terms of any one of the MPL, the GPL or the LGPL. <newline>+ * <newline>+ * ***** END LICENSE BLOCK ***** */ <newline>+ <newline>+#ifndef _NSKEYGENHANDLER_H_ <newline>+#define _NSKEYGENHANDLER_H_ <newline>+ <newline>+#include <string> <newline>+ <newline>+namespace mozilla_security_manager { <newline>+ <newline>+#define DEFAULT_RSA_KEYGEN_PE 65537L <newline>+#define DEFAULT_RSA_KEYGEN_ALG SEC_OID_PKCS1_MD5_WITH_RSA_ENCRYPTION <newline>+ <newline>+std::string GenKeyAndSignChallenge(int key_size_in_bits, <newline>+                                   const std::string& challenge, <newline>+                                   bool stores_key); <newline>+ <newline>+}  // namespace mozilla_security_manager <newline>+ <newline>+#endif //_NSKEYGENHANDLER_H_
79ca30de59ae86fcfda1eb182255a74310e753a	scherkus@chromium.org <scherkus@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jun 8 00:56:37 2010 +0000	Add rgb_frame size tracking and resizing to fix security issue with changing sizes. Added negative checks on signed heights and widths, added negative check for signed heights and widths in backing store for video layering. Patch by cdn@chromium.org: http://codereview.chromium.org/2449006/show TEST=Run on linux with --enable-video-layering and use <video> tag	45267			svn://svn.chromium.org/chrome/trunk/src@49131 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/renderer_host/video_layer_x.h b/chrome/browser/renderer_host/video_layer_x.h <newline>index a3c51b3..24bf316 100644 <newline>--- a/chrome/browser/renderer_host/video_layer_x.h <newline>+++ b/chrome/browser/renderer_host/video_layer_x.h <newline>@@ -42,6 +42,8 @@ class VideoLayerX : public VideoLayer { <newline>   // Most recently converted frame stored as 32-bit ARGB. <newline>   scoped_array<uint8> rgb_frame_; <newline>+  size_t rgb_frame_size_; <newline>+ <newline>   // Destination size and absolution position of the converted frame. <newline>   gfx::Rect rgb_rect_;
d60fb28dd7f2b2f46b2f5cd55f721245965faf1	scherkus@chromium.org <scherkus@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jun 8 00:56:37 2010 +0000	Add rgb_frame size tracking and resizing to fix security issue with changing sizes. Added negative checks on signed heights and widths, added negative check for signed heights and widths in backing store for video layering. Patch by cdn@chromium.org: http://codereview.chromium.org/2449006/show TEST=Run on linux with --enable-video-layering and use <video> tag	45267			svn://svn.chromium.org/chrome/trunk/src@49131 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/renderer_host/video_layer_x.h b/chrome/browser/renderer_host/video_layer_x.h <newline>index a3c51b3..24bf316 100644 <newline>--- a/chrome/browser/renderer_host/video_layer_x.h <newline>+++ b/chrome/browser/renderer_host/video_layer_x.h <newline>@@ -42,6 +42,8 @@ class VideoLayerX : public VideoLayer { <newline>   // Most recently converted frame stored as 32-bit ARGB. <newline>   scoped_array<uint8> rgb_frame_; <newline>+  size_t rgb_frame_size_; <newline>+ <newline>   // Destination size and absolution position of the converted frame. <newline>   gfx::Rect rgb_rect_;
2b31085c006e99ca3014bacb6fb260aafe1ccfd	viettrungluu@chromium.org <viettrungluu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jun 5 05:56:21 2010 +0000	Revert 48997 [causes Windows unit_tests to hang] - Group plugins in about:plugins and show update link for out-of-date ones. Patch by mavrommatis, original review here: <http://codereview.chromium.org/1991005>. Original description follows: (1) Group plugins with the same name together. (2) Show a download link for plugin versions with known security problems in about:plugins. TEST=Open "chrome://plugins", see that plugins are grouped, and that any vulnerable plugins are marked red. Try enabling and disabling plugin groups. TBR=viettrungluu@chromium.org	3910		http://codereview.chromium.org/2652002	svn://svn.chromium.org/chrome/trunk/src@49003 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index 02c7a4a..09a0f18 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -858,7 +858,6 @@ <newline>         'browser/password_manager/password_store_default_unittest.cc', <newline>         'browser/password_manager/password_store_mac_unittest.cc', <newline>         'browser/password_manager/password_store_win_unittest.cc', <newline>-        'browser/plugin_updater_unittest.cc', <newline>         'browser/pref_member_unittest.cc', <newline>         'browser/pref_service_unittest.cc', <newline>         'browser/printing/print_dialog_cloud_unittest.cc',
ff14f6e66a778ee2dc02be1621195355f50333b	viettrungluu@chromium.org <viettrungluu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jun 5 05:56:21 2010 +0000	Revert 48997 [causes Windows unit_tests to hang] - Group plugins in about:plugins and show update link for out-of-date ones. Patch by mavrommatis, original review here: <http://codereview.chromium.org/1991005>. Original description follows: (1) Group plugins with the same name together. (2) Show a download link for plugin versions with known security problems in about:plugins. TEST=Open "chrome://plugins", see that plugins are grouped, and that any vulnerable plugins are marked red. Try enabling and disabling plugin groups. TBR=viettrungluu@chromium.org	3910		http://codereview.chromium.org/2652002	svn://svn.chromium.org/chrome/trunk/src@49003 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index 02c7a4a..09a0f18 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -858,7 +858,6 @@ <newline>         'browser/password_manager/password_store_default_unittest.cc', <newline>         'browser/password_manager/password_store_mac_unittest.cc', <newline>         'browser/password_manager/password_store_win_unittest.cc', <newline>-        'browser/plugin_updater_unittest.cc', <newline>         'browser/pref_member_unittest.cc', <newline>         'browser/pref_service_unittest.cc', <newline>         'browser/printing/print_dialog_cloud_unittest.cc',
46cbd190222db76c65654d98f5a2c1473b24f01	viettrungluu@chromium.org <viettrungluu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jun 5 02:55:45 2010 +0000	Group plugins in about:plugins and show update link for out-of-date ones. Patch by mavrommatis, original review here: <http://codereview.chromium.org/1991005>. Original description follows: (1) Group plugins with the same name together. (2) Show a download link for plugin versions with known security problems in about:plugins. TEST=Open "chrome://plugins", see that plugins are grouped, and that any vulnerable plugins are marked red. Try enabling and disabling plugin groups.	3910		http://codereview.chromium.org/2686001	svn://svn.chromium.org/chrome/trunk/src@48997 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index 09a0f18..02c7a4a 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -858,6 +858,7 @@ <newline>         'browser/password_manager/password_store_default_unittest.cc', <newline>         'browser/password_manager/password_store_mac_unittest.cc', <newline>         'browser/password_manager/password_store_win_unittest.cc', <newline>+        'browser/plugin_updater_unittest.cc', <newline>         'browser/pref_member_unittest.cc', <newline>         'browser/pref_service_unittest.cc', <newline>         'browser/printing/print_dialog_cloud_unittest.cc',
5702bfb138d5da9c2fae8e120b03b1aa756c269	viettrungluu@chromium.org <viettrungluu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jun 5 02:55:45 2010 +0000	Group plugins in about:plugins and show update link for out-of-date ones. Patch by mavrommatis, original review here: <http://codereview.chromium.org/1991005>. Original description follows: (1) Group plugins with the same name together. (2) Show a download link for plugin versions with known security problems in about:plugins. TEST=Open "chrome://plugins", see that plugins are grouped, and that any vulnerable plugins are marked red. Try enabling and disabling plugin groups.	3910		http://codereview.chromium.org/2686001	svn://svn.chromium.org/chrome/trunk/src@48997 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome_tests.gypi b/chrome/chrome_tests.gypi <newline>index 09a0f18..02c7a4a 100644 <newline>--- a/chrome/chrome_tests.gypi <newline>+++ b/chrome/chrome_tests.gypi <newline>@@ -858,6 +858,7 @@ <newline>         'browser/password_manager/password_store_default_unittest.cc', <newline>         'browser/password_manager/password_store_mac_unittest.cc', <newline>         'browser/password_manager/password_store_win_unittest.cc', <newline>+        'browser/plugin_updater_unittest.cc', <newline>         'browser/pref_member_unittest.cc', <newline>         'browser/pref_service_unittest.cc', <newline>         'browser/printing/print_dialog_cloud_unittest.cc',
e6c4e6902a524274c4611973ebc6f0286ce814a	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 20 15:41:11 2010 +0000	Remove a possible race in the SUID sandbox (minor) The SUID sandbox can be used to set the oom_adj value for non-dumpable processes owned by the same user. When doing so, we previously first checked the directory owner and then opened the oom_adj file. In between the check and the open, the process could have died and another process could have taken that PID value. We would then adjust the OOM value of the wrong process. Given how PIDs are allocated, this is very hard to exploit and, even then, a minor security issue at best, but we can avoid the issue entirely with openat. http://codereview.chromium.org/2118007				svn://svn.chromium.org/chrome/trunk/src@47801 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/sandbox/linux/suid/process_util_linux.c b/sandbox/linux/suid/process_util_linux.c <newline>index 7b31274..17453de 100644 <newline>--- a/sandbox/linux/suid/process_util_linux.c <newline>+++ b/sandbox/linux/suid/process_util_linux.c <newline>@@ -5,6 +5,8 @@ <newline> // The following is the C version of code from base/process_utils_linux.cc. <newline> // We shouldn't link against C++ code in a setuid binary. <newline>+#define _GNU_SOURCE  // needed for O_DIRECTORY <newline>+ <newline> #include "process_util.h" <newline> #include <fcntl.h> <newline>@@ -21,24 +23,33 @@ bool AdjustOOMScore(pid_t process, int score) { <newline>   if (score < 0 || score > 15) <newline>     return false; <newline>-  char oom_adj[35];  // "/proc/" + log_10(2**64) + "/oom_adj\0" <newline>-                     //    6     +       20     +     9         = 35 <newline>+  char oom_adj[27];  // "/proc/" + log_10(2**64) + "\0" <newline>+                     //    6     +       20     +     1         = 27 <newline>   snprintf(oom_adj, sizeof(oom_adj), "/proc/%" PRIdMAX, (intmax_t)process); <newline>+  const int dirfd = open(oom_adj, O_RDONLY | O_DIRECTORY); <newline>+  if (dirfd < 0) <newline>+    return false; <newline>+ <newline>   struct stat statbuf; <newline>-  if (stat(oom_adj, &statbuf) < 0) <newline>+  if (fstat(dirfd, &statbuf) < 0) { <newline>+    close(dirfd); <newline>     return false; <newline>-  if (getuid() != statbuf.st_uid) <newline>+  } <newline>+  if (getuid() != statbuf.st_uid) { <newline>+    close(dirfd); <newline>     return false; <newline>+  } <newline>+ <newline>+  const int fd = openat(dirfd, "oom_adj", O_WRONLY); <newline>+  close(dirfd); <newline>-  strcat(oom_adj, "/oom_adj"); <newline>-  int fd = open(oom_adj, O_WRONLY); <newline>   if (fd < 0) <newline>     return false; <newline>   char buf[3];  // 0 <= |score| <= 15; <newline>   snprintf(buf, sizeof(buf), "%d", score); <newline>-  ssize_t len = strlen(buf); <newline>+  size_t len = strlen(buf); <newline>   ssize_t bytes_written = write(fd, buf, len); <newline>   close(fd);
3d67c409398db702f60bb5c972cddb564432d27	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 20 15:41:11 2010 +0000	Remove a possible race in the SUID sandbox (minor) The SUID sandbox can be used to set the oom_adj value for non-dumpable processes owned by the same user. When doing so, we previously first checked the directory owner and then opened the oom_adj file. In between the check and the open, the process could have died and another process could have taken that PID value. We would then adjust the OOM value of the wrong process. Given how PIDs are allocated, this is very hard to exploit and, even then, a minor security issue at best, but we can avoid the issue entirely with openat. http://codereview.chromium.org/2118007				svn://svn.chromium.org/chrome/trunk/src@47801 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/sandbox/linux/suid/process_util_linux.c b/sandbox/linux/suid/process_util_linux.c <newline>index 7b31274..17453de 100644 <newline>--- a/sandbox/linux/suid/process_util_linux.c <newline>+++ b/sandbox/linux/suid/process_util_linux.c <newline>@@ -5,6 +5,8 @@ <newline> // The following is the C version of code from base/process_utils_linux.cc. <newline> // We shouldn't link against C++ code in a setuid binary. <newline>+#define _GNU_SOURCE  // needed for O_DIRECTORY <newline>+ <newline> #include "process_util.h" <newline> #include <fcntl.h> <newline>@@ -21,24 +23,33 @@ bool AdjustOOMScore(pid_t process, int score) { <newline>   if (score < 0 || score > 15) <newline>     return false; <newline>-  char oom_adj[35];  // "/proc/" + log_10(2**64) + "/oom_adj\0" <newline>-                     //    6     +       20     +     9         = 35 <newline>+  char oom_adj[27];  // "/proc/" + log_10(2**64) + "\0" <newline>+                     //    6     +       20     +     1         = 27 <newline>   snprintf(oom_adj, sizeof(oom_adj), "/proc/%" PRIdMAX, (intmax_t)process); <newline>+  const int dirfd = open(oom_adj, O_RDONLY | O_DIRECTORY); <newline>+  if (dirfd < 0) <newline>+    return false; <newline>+ <newline>   struct stat statbuf; <newline>-  if (stat(oom_adj, &statbuf) < 0) <newline>+  if (fstat(dirfd, &statbuf) < 0) { <newline>+    close(dirfd); <newline>     return false; <newline>-  if (getuid() != statbuf.st_uid) <newline>+  } <newline>+  if (getuid() != statbuf.st_uid) { <newline>+    close(dirfd); <newline>     return false; <newline>+  } <newline>+ <newline>+  const int fd = openat(dirfd, "oom_adj", O_WRONLY); <newline>+  close(dirfd); <newline>-  strcat(oom_adj, "/oom_adj"); <newline>-  int fd = open(oom_adj, O_WRONLY); <newline>   if (fd < 0) <newline>     return false; <newline>   char buf[3];  // 0 <= |score| <= 15; <newline>   snprintf(buf, sizeof(buf), "%d", score); <newline>-  ssize_t len = strlen(buf); <newline>+  size_t len = strlen(buf); <newline>   ssize_t bytes_written = write(fd, buf, len); <newline>   close(fd);
af4917de1793657e861d5a4ca6f2cec24be90f9	dhollowa@chromium.org <dhollowa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon May 17 17:17:41 2010 +0000	AutoFill Remove keyboard shortcut on Mac. AutoFill keyboard shortcut to "Edit -> AutoFill Form" removed for security reasons.  Nib changes: Removed menu separator and "AutoFill Form" menu item from MainMenu.xib. TEST=Manual test: Launch Chrome, look under Edit menu, expect no AutoFill Form item.	42264		http://codereview.chromium.org/2125006	svn://svn.chromium.org/chrome/trunk/src@47425 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/nibs/MainMenu.xib b/chrome/app/nibs/MainMenu.xib <newline>index eeb37ba..38a97ec 100644 <newline>--- a/chrome/app/nibs/MainMenu.xib <newline>+++ b/chrome/app/nibs/MainMenu.xib <newline>@@ -3,12 +3,12 @@ <newline> 	<data> <newline> 		<int key="IBDocument.SystemTarget">1050</int> <newline> 		<string key="IBDocument.SystemVersion">9L31a</string> <newline>-		<string key="IBDocument.InterfaceBuilderVersion">677</string> <newline>+		<string key="IBDocument.InterfaceBuilderVersion">680</string> <newline> 		<string key="IBDocument.AppKitVersion">949.54</string> <newline> 		<string key="IBDocument.HIToolboxVersion">353.00</string> <newline> 		<object class="NSMutableArray" key="IBDocument.EditedObjectIDs"> <newline> 			<bool key="EncodedWithXMLCoder">YES</bool> <newline>-			<integer value="81"/> <newline>+			<integer value="205"/> <newline> 		</object> <newline> 		<object class="NSArray" key="IBDocument.PluginDependencies"> <newline> 			<bool key="EncodedWithXMLCoder">YES</bool> <newline>@@ -484,26 +484,6 @@ <newline> 									<reference key="NSOnImage" ref="353210768"/> <newline> 									<reference key="NSMixedImage" ref="549394948"/> <newline> 								</object> <newline>-								<object class="NSMenuItem" id="610384735"> <newline>-									<reference key="NSMenu" ref="789758025"/> <newline>-									<bool key="NSIsDisabled">YES</bool> <newline>-									<bool key="NSIsSeparator">YES</bool> <newline>-									<string key="NSTitle"/> <newline>-									<string key="NSKeyEquiv"/> <newline>-									<int key="NSMnemonicLoc">2147483647</int> <newline>-									<reference key="NSOnImage" ref="353210768"/> <newline>-									<reference key="NSMixedImage" ref="549394948"/> <newline>-								</object> <newline>-								<object class="NSMenuItem" id="872582728"> <newline>-									<reference key="NSMenu" ref="789758025"/> <newline>-									<string key="NSTitle">^IDS_AUTOFILL_FORM_MAC</string> <newline>-									<string key="NSKeyEquiv">A</string> <newline>-									<int key="NSKeyEquivModMask">1048576</int> <newline>-									<int key="NSMnemonicLoc">2147483647</int> <newline>-									<reference key="NSOnImage" ref="353210768"/> <newline>-									<reference key="NSMixedImage" ref="549394948"/> <newline>-									<int key="NSTag">40024</int> <newline>-								</object> <newline> 								<object class="NSMenuItem" id="212016141"> <newline> 									<reference key="NSMenu" ref="789758025"/> <newline> 									<bool key="NSIsDisabled">YES</bool> <newline>@@ -1759,14 +1739,6 @@ <newline> 					<object class="IBActionConnection" key="connection"> <newline> 						<string key="label">commandDispatch:</string> <newline> 						<reference key="source" ref="1014"/> <newline>-						<reference key="destination" ref="872582728"/> <newline>-					</object> <newline>-					<int key="connectionID">680</int> <newline>-				</object> <newline>-				<object class="IBConnectionRecord"> <newline>-					<object class="IBActionConnection" key="connection"> <newline>-						<string key="label">commandDispatch:</string> <newline>-						<reference key="source" ref="1014"/> <newline> 						<reference key="destination" ref="442256518"/> <newline> 					</object> <newline> 					<int key="connectionID">681</int> <newline>@@ -1940,8 +1912,6 @@ <newline> 							<reference ref="972420730"/> <newline> 							<reference ref="442256518"/> <newline> 							<reference ref="688066565"/> <newline>-							<reference ref="610384735"/> <newline>-							<reference ref="872582728"/> <newline> 						</object> <newline> 						<reference key="parent" ref="952259628"/> <newline> 					</object> <newline>@@ -2623,16 +2593,6 @@ <newline> 						<reference key="object" ref="902861825"/> <newline> 						<reference key="parent" ref="466310130"/> <newline> 					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">678</int> <newline>-						<reference key="object" ref="610384735"/> <newline>-						<reference key="parent" ref="789758025"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">679</int> <newline>-						<reference key="object" ref="872582728"/> <newline>-						<reference key="parent" ref="789758025"/> <newline>-					</object> <newline> 				</object> <newline> 			</object> <newline> 			<object class="NSMutableDictionary" key="flattenedProperties"> <newline>@@ -2829,10 +2789,6 @@ <newline> 					<string>672.IBPluginDependency</string> <newline> 					<string>674.IBPluginDependency</string> <newline> 					<string>676.IBPluginDependency</string> <newline>-					<string>678.IBPluginDependency</string> <newline>-					<string>678.ImportedFromIB2</string> <newline>-					<string>679.IBPluginDependency</string> <newline>-					<string>679.ImportedFromIB2</string> <newline> 					<string>72.IBPluginDependency</string> <newline> 					<string>72.ImportedFromIB2</string> <newline> 					<string>73.IBPluginDependency</string> <newline>@@ -2911,7 +2867,7 @@ <newline> 					<reference ref="9"/> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<reference ref="9"/> <newline>-					<string>{{478, 164}, {361, 273}}</string> <newline>+					<string>{{514, 368}, {361, 243}}</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<reference ref="9"/> <newline> 					<string>{{197, 734}, {243, 243}}</string> <newline>@@ -3060,10 +3016,6 @@ <newline> 					<reference ref="9"/> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<reference ref="9"/> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<reference ref="9"/> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<reference ref="9"/> <newline> 					<string>{{346, 328}, {353, 283}}</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<reference ref="9"/>
c379f9f737ec83bfa8f469e2980b571360b0fed	dhollowa@chromium.org <dhollowa@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon May 17 17:17:41 2010 +0000	AutoFill Remove keyboard shortcut on Mac. AutoFill keyboard shortcut to "Edit -> AutoFill Form" removed for security reasons.  Nib changes: Removed menu separator and "AutoFill Form" menu item from MainMenu.xib. TEST=Manual test: Launch Chrome, look under Edit menu, expect no AutoFill Form item.	42264		http://codereview.chromium.org/2125006	svn://svn.chromium.org/chrome/trunk/src@47425 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/nibs/MainMenu.xib b/chrome/app/nibs/MainMenu.xib <newline>index eeb37ba..38a97ec 100644 <newline>--- a/chrome/app/nibs/MainMenu.xib <newline>+++ b/chrome/app/nibs/MainMenu.xib <newline>@@ -3,12 +3,12 @@ <newline> 	<data> <newline> 		<int key="IBDocument.SystemTarget">1050</int> <newline> 		<string key="IBDocument.SystemVersion">9L31a</string> <newline>-		<string key="IBDocument.InterfaceBuilderVersion">677</string> <newline>+		<string key="IBDocument.InterfaceBuilderVersion">680</string> <newline> 		<string key="IBDocument.AppKitVersion">949.54</string> <newline> 		<string key="IBDocument.HIToolboxVersion">353.00</string> <newline> 		<object class="NSMutableArray" key="IBDocument.EditedObjectIDs"> <newline> 			<bool key="EncodedWithXMLCoder">YES</bool> <newline>-			<integer value="81"/> <newline>+			<integer value="205"/> <newline> 		</object> <newline> 		<object class="NSArray" key="IBDocument.PluginDependencies"> <newline> 			<bool key="EncodedWithXMLCoder">YES</bool> <newline>@@ -484,26 +484,6 @@ <newline> 									<reference key="NSOnImage" ref="353210768"/> <newline> 									<reference key="NSMixedImage" ref="549394948"/> <newline> 								</object> <newline>-								<object class="NSMenuItem" id="610384735"> <newline>-									<reference key="NSMenu" ref="789758025"/> <newline>-									<bool key="NSIsDisabled">YES</bool> <newline>-									<bool key="NSIsSeparator">YES</bool> <newline>-									<string key="NSTitle"/> <newline>-									<string key="NSKeyEquiv"/> <newline>-									<int key="NSMnemonicLoc">2147483647</int> <newline>-									<reference key="NSOnImage" ref="353210768"/> <newline>-									<reference key="NSMixedImage" ref="549394948"/> <newline>-								</object> <newline>-								<object class="NSMenuItem" id="872582728"> <newline>-									<reference key="NSMenu" ref="789758025"/> <newline>-									<string key="NSTitle">^IDS_AUTOFILL_FORM_MAC</string> <newline>-									<string key="NSKeyEquiv">A</string> <newline>-									<int key="NSKeyEquivModMask">1048576</int> <newline>-									<int key="NSMnemonicLoc">2147483647</int> <newline>-									<reference key="NSOnImage" ref="353210768"/> <newline>-									<reference key="NSMixedImage" ref="549394948"/> <newline>-									<int key="NSTag">40024</int> <newline>-								</object> <newline> 								<object class="NSMenuItem" id="212016141"> <newline> 									<reference key="NSMenu" ref="789758025"/> <newline> 									<bool key="NSIsDisabled">YES</bool> <newline>@@ -1759,14 +1739,6 @@ <newline> 					<object class="IBActionConnection" key="connection"> <newline> 						<string key="label">commandDispatch:</string> <newline> 						<reference key="source" ref="1014"/> <newline>-						<reference key="destination" ref="872582728"/> <newline>-					</object> <newline>-					<int key="connectionID">680</int> <newline>-				</object> <newline>-				<object class="IBConnectionRecord"> <newline>-					<object class="IBActionConnection" key="connection"> <newline>-						<string key="label">commandDispatch:</string> <newline>-						<reference key="source" ref="1014"/> <newline> 						<reference key="destination" ref="442256518"/> <newline> 					</object> <newline> 					<int key="connectionID">681</int> <newline>@@ -1940,8 +1912,6 @@ <newline> 							<reference ref="972420730"/> <newline> 							<reference ref="442256518"/> <newline> 							<reference ref="688066565"/> <newline>-							<reference ref="610384735"/> <newline>-							<reference ref="872582728"/> <newline> 						</object> <newline> 						<reference key="parent" ref="952259628"/> <newline> 					</object> <newline>@@ -2623,16 +2593,6 @@ <newline> 						<reference key="object" ref="902861825"/> <newline> 						<reference key="parent" ref="466310130"/> <newline> 					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">678</int> <newline>-						<reference key="object" ref="610384735"/> <newline>-						<reference key="parent" ref="789758025"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">679</int> <newline>-						<reference key="object" ref="872582728"/> <newline>-						<reference key="parent" ref="789758025"/> <newline>-					</object> <newline> 				</object> <newline> 			</object> <newline> 			<object class="NSMutableDictionary" key="flattenedProperties"> <newline>@@ -2829,10 +2789,6 @@ <newline> 					<string>672.IBPluginDependency</string> <newline> 					<string>674.IBPluginDependency</string> <newline> 					<string>676.IBPluginDependency</string> <newline>-					<string>678.IBPluginDependency</string> <newline>-					<string>678.ImportedFromIB2</string> <newline>-					<string>679.IBPluginDependency</string> <newline>-					<string>679.ImportedFromIB2</string> <newline> 					<string>72.IBPluginDependency</string> <newline> 					<string>72.ImportedFromIB2</string> <newline> 					<string>73.IBPluginDependency</string> <newline>@@ -2911,7 +2867,7 @@ <newline> 					<reference ref="9"/> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<reference ref="9"/> <newline>-					<string>{{478, 164}, {361, 273}}</string> <newline>+					<string>{{514, 368}, {361, 243}}</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<reference ref="9"/> <newline> 					<string>{{197, 734}, {243, 243}}</string> <newline>@@ -3060,10 +3016,6 @@ <newline> 					<reference ref="9"/> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<reference ref="9"/> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<reference ref="9"/> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<reference ref="9"/> <newline> 					<string>{{346, 328}, {353, 283}}</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<reference ref="9"/>
a7849d396988f8985db6b4c9a55d673c2505f00	ananta@chromium.org <ananta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 7 15:53:36 2010 +0000	The ChromeFrame builder at times hang if the security dialog brought up by the NavigateToRestrictedSite test is behind the console window. Fix is to not attempt to close the dialog by clicking on it. We now close the window by the DoClosewindow helper which posts the WM_CLOSE message to it. TBR=amit			http://codereview.chromium.org/2041003	svn://svn.chromium.org/chrome/trunk/src@46688 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/test/test_mock_with_web_server.cc b/chrome_frame/test/test_mock_with_web_server.cc <newline>index 5a5d0f8..0b7ce1e 100644 <newline>--- a/chrome_frame/test/test_mock_with_web_server.cc <newline>+++ b/chrome_frame/test/test_mock_with_web_server.cc <newline>@@ -1361,7 +1361,7 @@ TEST(IEPrivacy, NavigationToRestrictedSite) { <newline>   EXPECT_CALL(mock, OnWindowDetected(_, testing::StrEq(kAlertDlgCaption))) <newline>       .Times(1) <newline>       .WillOnce(testing::DoAll( <newline>-          DelaySendChar(&loop, 200, VK_RETURN, simulate_input::NONE), <newline>+          DoCloseWindow(), <newline>           QUIT_LOOP_SOON(loop, 1))); <newline>   EXPECT_CALL(mock, OnLoad(_)).Times(0);
ff2f63ad8bdebc94ea104cab2b4c394642037d9	ananta@chromium.org <ananta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 7 15:53:36 2010 +0000	The ChromeFrame builder at times hang if the security dialog brought up by the NavigateToRestrictedSite test is behind the console window. Fix is to not attempt to close the dialog by clicking on it. We now close the window by the DoClosewindow helper which posts the WM_CLOSE message to it. TBR=amit			http://codereview.chromium.org/2041003	svn://svn.chromium.org/chrome/trunk/src@46688 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/test/test_mock_with_web_server.cc b/chrome_frame/test/test_mock_with_web_server.cc <newline>index 5a5d0f8..0b7ce1e 100644 <newline>--- a/chrome_frame/test/test_mock_with_web_server.cc <newline>+++ b/chrome_frame/test/test_mock_with_web_server.cc <newline>@@ -1361,7 +1361,7 @@ TEST(IEPrivacy, NavigationToRestrictedSite) { <newline>   EXPECT_CALL(mock, OnWindowDetected(_, testing::StrEq(kAlertDlgCaption))) <newline>       .Times(1) <newline>       .WillOnce(testing::DoAll( <newline>-          DelaySendChar(&loop, 200, VK_RETURN, simulate_input::NONE), <newline>+          DoCloseWindow(), <newline>           QUIT_LOOP_SOON(loop, 1))); <newline>   EXPECT_CALL(mock, OnLoad(_)).Times(0);
dbec65e0a79b5e5a1c7825d7db55d45bad3b388	shess@chromium.org <shess@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Apr 23 20:01:00 2010 +0000	Re-instate the temporary revert from r45267.  That reverted certain Omnibox, toolbar, tab animations, and other UI changes for purposes of testing and merging into mstone-5. Additionally reverts these CLs to fix the earlier revert: r45271: [Mac] Image references missing from Omnibox revert. r45268: GTK fix merge failure in uber-revert. Additional revert which fixed a bug for the branch: r45381: [Mac] Omnibox popup icons and text lined up under toolbar. Slight merge conflict which should be good: r45322: GTK: Implement OnDragCanceled() for autocomplete... Also ++kThemePackVersion and regenerate the cached theme pak. Re-instated changes: r45213: GTK: Override cursor colors in chrome-theme mode. r45103: Support drawing nano tabs in the tabstrip. r45084: GTK: Position the EV certificate stuff inside a green bubble. r44979: Subclassing the InfoBubble to handle anchoring bubbles basedon... r44957: GTK: Tint the geolocation icons in gtk mode. r44943: Changes FormatURL to not strip http if the host starts with ft... r44930: Remove an icon that is no longer used. r44929: SSL UI changes, Windows, code side (images are separate). r44859: SSL UI changes (icons).  TBRed since trybots hate binary patches. r44822: GTK: Select better greens in the native omnibox popup. r44814: GTK: navigate to URL on PRIMARY when middle-clicking the locat... r44789: [Mac] Bookmark star missing on NTP and BMM. r44775: [Mac] Centralize hack to make tests work with AutocompleteClas... r44678: Display the SECURITY_WARNING status in the location bar for the r44648: [Mac] Add an arrow cursor rect for the location image. r44615: Revert r44611 because it may have broken "unit_tests" on "Vist... r44611: Display the SECURITY_WARNING status in the location bar for the r44577: Revert 44572 - [Mac] Update locationbar icon as user types. r44572: [Mac] Update location-bar icon as user types. r44555: GTK: Use correct button mask on reload button. r44545: [Mac] Omnibox text drag drag URL when select-all. r44523: GTK: Prevent inappropriate drag of location bar location icon. r44519: GTK: make the primary selection include the url's scheme when ... r44492: [Mac] Fix search icon in keyword search to be right-side-up. r44415: GTK: Update top padding on icons in the autocomplete popup. r44401: GTK: Tint omnibox icons in GTK mode differently. r44380: GTK: Move reload in gtk mode and fix omnibox popup location. r44282: Fixes crash in autocomplete when typing some URLs. The problem r44273: [Mac] PDF icons for omnibox nits. r44269: Fix build break due to bad merge resolve r44268: Shift omnibox dropdown in and up on Windows, and square off th... r44178: GTK: fix TTS padding. r44177: Round the top left and right edges of the toolbar. r44171: Images only checkin for try server goodness. r44163: GTK: fix padding of autocomplete popup. r44152: [Mac] PDF icons for omnibox. r44145: GTK: Theme the icons in the location bar and use GTK colors fo... r44140: Strips http from the omnibox r44131: Fixes bugs in new tab strip animations where they weren't doin... r44116: Change the default theme colors. r44117: Add newline to EOF to fix CrOS builder. r44115: Make the bottom edges of the opaque frame rounded. r44091: [Mac] No star icon or page actions in omnibox on popups. r44087: Don't allow drag or click on location icon when editing in omn... r44021: [GTK] Add TTS lens graphic to linux TTS box. r44008: [Mac] Tweak location icon spacing in omnibox. r43977: GTK: don't show the star or page actions in ShouldOnlyShowLoca... r43972: Make the firstrun bubble point at a better spot now that the l... r43971: [Mac] Location icon in omnibox as drag source. r43970: Make the star and page action icons not appear on popup windows. r43954: Fixes bug in TabStrip where dragging tab out then back in rapidly r43864: Tweaks to BoundsAnimator/SlideAnimation and TabStrip: r43787: Allow location icon to be dragged & dropped.  This also fixes ... r43759: Changes end cap of tab-to-search images. r43740: Change bookmark bar toggle to ctrl-shift-b. r43723: Show Page Info dialog on mouse up, not mouse down. r43677: Fix Mac build failure. r43676: Replace omnibox icons with new set that are all the same size ... r43596: Fix browser test TestStarButtonAccObj. r43593: Disables TestStarButtonAccObj. r43582: Changes tab strip to use BoundsAnimator for tab strip animatio... r43563: GTK: don't show reload button for popup/app windows. r43562: Star/reload shuffle, Windows version. r43540: [Mac] Magnifying glass in keyword-search bubble. r43482: Adds images needed for new tab animation. I'm separating this ... r43422: Add reload mask resource. r43392: GTK: make the location icon a drag source. r43376: [Mac] Move star button into page-actions area of omnibox. r43357: [Mac] Line up omnibox popup under field. r43290: gtk: fix display of icons in omnibox popup r43269: GTK: fix reload button. r43249: [Mac] Rearrange SSL status icon/label in omnibox. r43248: BrowserThemePack: Adds persistant ids for the reload endcaps. r43241: GTK: more location bar updates. r43191: Fix memory leak in BrowserThemePack. r43154: GTK: set the new star button's ID r43151: Fix bad conflict resolution for r43146. r43146: GTK: toolbar reload/star shuffle. r43025: Show the location bar icon (almost) all the time, and have its... r43023: Add new images for new reload button. No code change. r42782: Remove this icon, now that it's no longer used (due to my secu... r42502: Omnibox M5 work, part 1: Security changes r42245: Check in new icons for omnibox security changes alone, so that... TEST=People go back to complaining about missing http://. R=pkasting@chromium.org,beng@chromium.org	40499	iewAccessibilityObject(		svn://svn.chromium.org/chrome/trunk/src@45474 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/views/window/window_shape.h b/views/window/window_shape.h <newline>new file mode 100644 <newline>index 0000000..5b47415 <newline>--- /dev/null <newline>+++ b/views/window/window_shape.h <newline>@@ -0,0 +1,21 @@ <newline>+// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#ifndef VIEWS_WINDOW_WINDOW_SHAPE_H_ <newline>+#define VIEWS_WINDOW_WINDOW_SHAPE_H_ <newline>+ <newline>+namespace gfx { <newline>+class Size; <newline>+class Path; <newline>+} <newline>+ <newline>+namespace views { <newline>+ <newline>+// Sets the window mask to a style that most likely matches <newline>+// app/resources/window_* <newline>+void GetDefaultWindowMask(const gfx::Size& size, gfx::Path* window_mask); <newline>+ <newline>+} // namespace views <newline>+ <newline>+#endif  // #ifndef VIEWS_WINDOW_WINDOW_SHAPE_H_
9c579e522c4493c15c93ebf33b28a35b1e7213b	shess@chromium.org <shess@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Apr 23 20:01:00 2010 +0000	Re-instate the temporary revert from r45267.  That reverted certain Omnibox, toolbar, tab animations, and other UI changes for purposes of testing and merging into mstone-5. Additionally reverts these CLs to fix the earlier revert: r45271: [Mac] Image references missing from Omnibox revert. r45268: GTK fix merge failure in uber-revert. Additional revert which fixed a bug for the branch: r45381: [Mac] Omnibox popup icons and text lined up under toolbar. Slight merge conflict which should be good: r45322: GTK: Implement OnDragCanceled() for autocomplete... Also ++kThemePackVersion and regenerate the cached theme pak. Re-instated changes: r45213: GTK: Override cursor colors in chrome-theme mode. r45103: Support drawing nano tabs in the tabstrip. r45084: GTK: Position the EV certificate stuff inside a green bubble. r44979: Subclassing the InfoBubble to handle anchoring bubbles basedon... r44957: GTK: Tint the geolocation icons in gtk mode. r44943: Changes FormatURL to not strip http if the host starts with ft... r44930: Remove an icon that is no longer used. r44929: SSL UI changes, Windows, code side (images are separate). r44859: SSL UI changes (icons).  TBRed since trybots hate binary patches. r44822: GTK: Select better greens in the native omnibox popup. r44814: GTK: navigate to URL on PRIMARY when middle-clicking the locat... r44789: [Mac] Bookmark star missing on NTP and BMM. r44775: [Mac] Centralize hack to make tests work with AutocompleteClas... r44678: Display the SECURITY_WARNING status in the location bar for the r44648: [Mac] Add an arrow cursor rect for the location image. r44615: Revert r44611 because it may have broken "unit_tests" on "Vist... r44611: Display the SECURITY_WARNING status in the location bar for the r44577: Revert 44572 - [Mac] Update locationbar icon as user types. r44572: [Mac] Update location-bar icon as user types. r44555: GTK: Use correct button mask on reload button. r44545: [Mac] Omnibox text drag drag URL when select-all. r44523: GTK: Prevent inappropriate drag of location bar location icon. r44519: GTK: make the primary selection include the url's scheme when ... r44492: [Mac] Fix search icon in keyword search to be right-side-up. r44415: GTK: Update top padding on icons in the autocomplete popup. r44401: GTK: Tint omnibox icons in GTK mode differently. r44380: GTK: Move reload in gtk mode and fix omnibox popup location. r44282: Fixes crash in autocomplete when typing some URLs. The problem r44273: [Mac] PDF icons for omnibox nits. r44269: Fix build break due to bad merge resolve r44268: Shift omnibox dropdown in and up on Windows, and square off th... r44178: GTK: fix TTS padding. r44177: Round the top left and right edges of the toolbar. r44171: Images only checkin for try server goodness. r44163: GTK: fix padding of autocomplete popup. r44152: [Mac] PDF icons for omnibox. r44145: GTK: Theme the icons in the location bar and use GTK colors fo... r44140: Strips http from the omnibox r44131: Fixes bugs in new tab strip animations where they weren't doin... r44116: Change the default theme colors. r44117: Add newline to EOF to fix CrOS builder. r44115: Make the bottom edges of the opaque frame rounded. r44091: [Mac] No star icon or page actions in omnibox on popups. r44087: Don't allow drag or click on location icon when editing in omn... r44021: [GTK] Add TTS lens graphic to linux TTS box. r44008: [Mac] Tweak location icon spacing in omnibox. r43977: GTK: don't show the star or page actions in ShouldOnlyShowLoca... r43972: Make the firstrun bubble point at a better spot now that the l... r43971: [Mac] Location icon in omnibox as drag source. r43970: Make the star and page action icons not appear on popup windows. r43954: Fixes bug in TabStrip where dragging tab out then back in rapidly r43864: Tweaks to BoundsAnimator/SlideAnimation and TabStrip: r43787: Allow location icon to be dragged & dropped.  This also fixes ... r43759: Changes end cap of tab-to-search images. r43740: Change bookmark bar toggle to ctrl-shift-b. r43723: Show Page Info dialog on mouse up, not mouse down. r43677: Fix Mac build failure. r43676: Replace omnibox icons with new set that are all the same size ... r43596: Fix browser test TestStarButtonAccObj. r43593: Disables TestStarButtonAccObj. r43582: Changes tab strip to use BoundsAnimator for tab strip animatio... r43563: GTK: don't show reload button for popup/app windows. r43562: Star/reload shuffle, Windows version. r43540: [Mac] Magnifying glass in keyword-search bubble. r43482: Adds images needed for new tab animation. I'm separating this ... r43422: Add reload mask resource. r43392: GTK: make the location icon a drag source. r43376: [Mac] Move star button into page-actions area of omnibox. r43357: [Mac] Line up omnibox popup under field. r43290: gtk: fix display of icons in omnibox popup r43269: GTK: fix reload button. r43249: [Mac] Rearrange SSL status icon/label in omnibox. r43248: BrowserThemePack: Adds persistant ids for the reload endcaps. r43241: GTK: more location bar updates. r43191: Fix memory leak in BrowserThemePack. r43154: GTK: set the new star button's ID r43151: Fix bad conflict resolution for r43146. r43146: GTK: toolbar reload/star shuffle. r43025: Show the location bar icon (almost) all the time, and have its... r43023: Add new images for new reload button. No code change. r42782: Remove this icon, now that it's no longer used (due to my secu... r42502: Omnibox M5 work, part 1: Security changes r42245: Check in new icons for omnibox security changes alone, so that... TEST=People go back to complaining about missing http://. R=pkasting@chromium.org,beng@chromium.org	40499	iewAccessibilityObject(		svn://svn.chromium.org/chrome/trunk/src@45474 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/views/window/window_shape.h b/views/window/window_shape.h <newline>new file mode 100644 <newline>index 0000000..5b47415 <newline>--- /dev/null <newline>+++ b/views/window/window_shape.h <newline>@@ -0,0 +1,21 @@ <newline>+// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline>+// Use of this source code is governed by a BSD-style license that can be <newline>+// found in the LICENSE file. <newline>+ <newline>+#ifndef VIEWS_WINDOW_WINDOW_SHAPE_H_ <newline>+#define VIEWS_WINDOW_WINDOW_SHAPE_H_ <newline>+ <newline>+namespace gfx { <newline>+class Size; <newline>+class Path; <newline>+} <newline>+ <newline>+namespace views { <newline>+ <newline>+// Sets the window mask to a style that most likely matches <newline>+// app/resources/window_* <newline>+void GetDefaultWindowMask(const gfx::Size& size, gfx::Path* window_mask); <newline>+ <newline>+} // namespace views <newline>+ <newline>+#endif  // #ifndef VIEWS_WINDOW_WINDOW_SHAPE_H_
c7e68e02bb167f100a9b347d64765ff6b4dcfa7	shess@chromium.org <shess@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 22 00:03:07 2010 +0000	Temporarily revert certain Omnibox, toolbar, tab animations, and other UI changes for purposes of testing and merging into mstone-5. Also ++kThemePackVersion and regenerate the cached theme pak. Reverted changes: r45213: GTK: Override cursor colors in chrome-theme mode. r45103: Support drawing nano tabs in the tabstrip. r45084: GTK: Position the EV certificate stuff inside a green bubble. r44979: Subclassing the InfoBubble to handle anchoring bubbles basedon... r44957: GTK: Tint the geolocation icons in gtk mode. r44943: Changes FormatURL to not strip http if the host starts with ft... r44930: Remove an icon that is no longer used. r44929: SSL UI changes, Windows, code side (images are separate). r44859: SSL UI changes (icons).  TBRed since trybots hate binary patches. r44822: GTK: Select better greens in the native omnibox popup. r44814: GTK: navigate to URL on PRIMARY when middle-clicking the locat... r44789: [Mac] Bookmark star missing on NTP and BMM. r44775: [Mac] Centralize hack to make tests work with AutocompleteClas... r44678: Display the SECURITY_WARNING status in the location bar for the r44648: [Mac] Add an arrow cursor rect for the location image. r44615: Revert r44611 because it may have broken "unit_tests" on "Vist... r44611: Display the SECURITY_WARNING status in the location bar for the r44577: Revert 44572 - [Mac] Update locationbar icon as user types. r44572: [Mac] Update location-bar icon as user types. r44555: GTK: Use correct button mask on reload button. r44545: [Mac] Omnibox text drag drag URL when select-all. r44523: GTK: Prevent inappropriate drag of location bar location icon. r44519: GTK: make the primary selection include the url's scheme when ... r44492: [Mac] Fix search icon in keyword search to be right-side-up. r44415: GTK: Update top padding on icons in the autocomplete popup. r44401: GTK: Tint omnibox icons in GTK mode differently. r44380: GTK: Move reload in gtk mode and fix omnibox popup location. r44282: Fixes crash in autocomplete when typing some URLs. The problem r44273: [Mac] PDF icons for omnibox nits. r44269: Fix build break due to bad merge resolve r44268: Shift omnibox dropdown in and up on Windows, and square off th... r44178: GTK: fix TTS padding. r44177: Round the top left and right edges of the toolbar. r44171: Images only checkin for try server goodness. r44163: GTK: fix padding of autocomplete popup. r44152: [Mac] PDF icons for omnibox. r44145: GTK: Theme the icons in the location bar and use GTK colors fo... r44140: Strips http from the omnibox r44131: Fixes bugs in new tab strip animations where they weren't doin... r44116: Change the default theme colors. r44117: Add newline to EOF to fix CrOS builder. r44115: Make the bottom edges of the opaque frame rounded. r44091: [Mac] No star icon or page actions in omnibox on popups. r44087: Don't allow drag or click on location icon when editing in omn... r44021: [GTK] Add TTS lens graphic to linux TTS box. r44008: [Mac] Tweak location icon spacing in omnibox. r43977: GTK: don't show the star or page actions in ShouldOnlyShowLoca... r43972: Make the firstrun bubble point at a better spot now that the l... r43971: [Mac] Location icon in omnibox as drag source. r43970: Make the star and page action icons not appear on popup windows. r43954: Fixes bug in TabStrip where dragging tab out then back in rapidly r43864: Tweaks to BoundsAnimator/SlideAnimation and TabStrip: r43787: Allow location icon to be dragged & dropped.  This also fixes ... r43759: Changes end cap of tab-to-search images. r43740: Change bookmark bar toggle to ctrl-shift-b. r43723: Show Page Info dialog on mouse up, not mouse down. r43677: Fix Mac build failure. r43676: Replace omnibox icons with new set that are all the same size ... r43596: Fix browser test TestStarButtonAccObj. r43593: Disables TestStarButtonAccObj. r43582: Changes tab strip to use BoundsAnimator for tab strip animatio... r43563: GTK: don't show reload button for popup/app windows. r43562: Star/reload shuffle, Windows version. r43540: [Mac] Magnifying glass in keyword-search bubble. r43482: Adds images needed for new tab animation. I'm separating this ... r43422: Add reload mask resource. r43392: GTK: make the location icon a drag source. r43376: [Mac] Move star button into page-actions area of omnibox. r43357: [Mac] Line up omnibox popup under field. r43290: gtk: fix display of icons in omnibox popup r43269: GTK: fix reload button. r43249: [Mac] Rearrange SSL status icon/label in omnibox. r43248: BrowserThemePack: Adds persistant ids for the reload endcaps. r43241: GTK: more location bar updates. r43191: Fix memory leak in BrowserThemePack. r43154: GTK: set the new star button's ID r43151: Fix bad conflict resolution for r43146. r43146: GTK: toolbar reload/star shuffle. r43025: Show the location bar icon (almost) all the time, and have its... r43023: Add new images for new reload button. No code change. r42782: Remove this icon, now that it's no longer used (due to my secu... r42502: Omnibox M5 work, part 1: Security changes r42245: Check in new icons for omnibox security changes alone, so that... TEST=Eyjafjallajokull R=pkasting@chromium.org,beng@chromium.org	40499	iewAccessibilityObject(		svn://svn.chromium.org/chrome/trunk/src@45267 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/views/window/window_shape.h b/views/window/window_shape.h <newline>deleted file mode 100644 <newline>index 5b47415..0000000 <newline>--- a/views/window/window_shape.h <newline>+++ /dev/null <newline>@@ -1,21 +0,0 @@ <newline>-// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline>-// Use of this source code is governed by a BSD-style license that can be <newline>-// found in the LICENSE file. <newline>- <newline>-#ifndef VIEWS_WINDOW_WINDOW_SHAPE_H_ <newline>-#define VIEWS_WINDOW_WINDOW_SHAPE_H_ <newline>- <newline>-namespace gfx { <newline>-class Size; <newline>-class Path; <newline>-} <newline>- <newline>-namespace views { <newline>- <newline>-// Sets the window mask to a style that most likely matches <newline>-// app/resources/window_* <newline>-void GetDefaultWindowMask(const gfx::Size& size, gfx::Path* window_mask); <newline>- <newline>-} // namespace views <newline>- <newline>-#endif  // #ifndef VIEWS_WINDOW_WINDOW_SHAPE_H_
5b90374f3e454dbc5d5f2a4f23c49e7cba93147	shess@chromium.org <shess@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 22 00:03:07 2010 +0000	Temporarily revert certain Omnibox, toolbar, tab animations, and other UI changes for purposes of testing and merging into mstone-5. Also ++kThemePackVersion and regenerate the cached theme pak. Reverted changes: r45213: GTK: Override cursor colors in chrome-theme mode. r45103: Support drawing nano tabs in the tabstrip. r45084: GTK: Position the EV certificate stuff inside a green bubble. r44979: Subclassing the InfoBubble to handle anchoring bubbles basedon... r44957: GTK: Tint the geolocation icons in gtk mode. r44943: Changes FormatURL to not strip http if the host starts with ft... r44930: Remove an icon that is no longer used. r44929: SSL UI changes, Windows, code side (images are separate). r44859: SSL UI changes (icons).  TBRed since trybots hate binary patches. r44822: GTK: Select better greens in the native omnibox popup. r44814: GTK: navigate to URL on PRIMARY when middle-clicking the locat... r44789: [Mac] Bookmark star missing on NTP and BMM. r44775: [Mac] Centralize hack to make tests work with AutocompleteClas... r44678: Display the SECURITY_WARNING status in the location bar for the r44648: [Mac] Add an arrow cursor rect for the location image. r44615: Revert r44611 because it may have broken "unit_tests" on "Vist... r44611: Display the SECURITY_WARNING status in the location bar for the r44577: Revert 44572 - [Mac] Update locationbar icon as user types. r44572: [Mac] Update location-bar icon as user types. r44555: GTK: Use correct button mask on reload button. r44545: [Mac] Omnibox text drag drag URL when select-all. r44523: GTK: Prevent inappropriate drag of location bar location icon. r44519: GTK: make the primary selection include the url's scheme when ... r44492: [Mac] Fix search icon in keyword search to be right-side-up. r44415: GTK: Update top padding on icons in the autocomplete popup. r44401: GTK: Tint omnibox icons in GTK mode differently. r44380: GTK: Move reload in gtk mode and fix omnibox popup location. r44282: Fixes crash in autocomplete when typing some URLs. The problem r44273: [Mac] PDF icons for omnibox nits. r44269: Fix build break due to bad merge resolve r44268: Shift omnibox dropdown in and up on Windows, and square off th... r44178: GTK: fix TTS padding. r44177: Round the top left and right edges of the toolbar. r44171: Images only checkin for try server goodness. r44163: GTK: fix padding of autocomplete popup. r44152: [Mac] PDF icons for omnibox. r44145: GTK: Theme the icons in the location bar and use GTK colors fo... r44140: Strips http from the omnibox r44131: Fixes bugs in new tab strip animations where they weren't doin... r44116: Change the default theme colors. r44117: Add newline to EOF to fix CrOS builder. r44115: Make the bottom edges of the opaque frame rounded. r44091: [Mac] No star icon or page actions in omnibox on popups. r44087: Don't allow drag or click on location icon when editing in omn... r44021: [GTK] Add TTS lens graphic to linux TTS box. r44008: [Mac] Tweak location icon spacing in omnibox. r43977: GTK: don't show the star or page actions in ShouldOnlyShowLoca... r43972: Make the firstrun bubble point at a better spot now that the l... r43971: [Mac] Location icon in omnibox as drag source. r43970: Make the star and page action icons not appear on popup windows. r43954: Fixes bug in TabStrip where dragging tab out then back in rapidly r43864: Tweaks to BoundsAnimator/SlideAnimation and TabStrip: r43787: Allow location icon to be dragged & dropped.  This also fixes ... r43759: Changes end cap of tab-to-search images. r43740: Change bookmark bar toggle to ctrl-shift-b. r43723: Show Page Info dialog on mouse up, not mouse down. r43677: Fix Mac build failure. r43676: Replace omnibox icons with new set that are all the same size ... r43596: Fix browser test TestStarButtonAccObj. r43593: Disables TestStarButtonAccObj. r43582: Changes tab strip to use BoundsAnimator for tab strip animatio... r43563: GTK: don't show reload button for popup/app windows. r43562: Star/reload shuffle, Windows version. r43540: [Mac] Magnifying glass in keyword-search bubble. r43482: Adds images needed for new tab animation. I'm separating this ... r43422: Add reload mask resource. r43392: GTK: make the location icon a drag source. r43376: [Mac] Move star button into page-actions area of omnibox. r43357: [Mac] Line up omnibox popup under field. r43290: gtk: fix display of icons in omnibox popup r43269: GTK: fix reload button. r43249: [Mac] Rearrange SSL status icon/label in omnibox. r43248: BrowserThemePack: Adds persistant ids for the reload endcaps. r43241: GTK: more location bar updates. r43191: Fix memory leak in BrowserThemePack. r43154: GTK: set the new star button's ID r43151: Fix bad conflict resolution for r43146. r43146: GTK: toolbar reload/star shuffle. r43025: Show the location bar icon (almost) all the time, and have its... r43023: Add new images for new reload button. No code change. r42782: Remove this icon, now that it's no longer used (due to my secu... r42502: Omnibox M5 work, part 1: Security changes r42245: Check in new icons for omnibox security changes alone, so that... TEST=Eyjafjallajokull R=pkasting@chromium.org,beng@chromium.org	40499	iewAccessibilityObject(		svn://svn.chromium.org/chrome/trunk/src@45267 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/views/window/window_shape.h b/views/window/window_shape.h <newline>deleted file mode 100644 <newline>index 5b47415..0000000 <newline>--- a/views/window/window_shape.h <newline>+++ /dev/null <newline>@@ -1,21 +0,0 @@ <newline>-// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline>-// Use of this source code is governed by a BSD-style license that can be <newline>-// found in the LICENSE file. <newline>- <newline>-#ifndef VIEWS_WINDOW_WINDOW_SHAPE_H_ <newline>-#define VIEWS_WINDOW_WINDOW_SHAPE_H_ <newline>- <newline>-namespace gfx { <newline>-class Size; <newline>-class Path; <newline>-} <newline>- <newline>-namespace views { <newline>- <newline>-// Sets the window mask to a style that most likely matches <newline>-// app/resources/window_* <newline>-void GetDefaultWindowMask(const gfx::Size& size, gfx::Path* window_mask); <newline>- <newline>-} // namespace views <newline>- <newline>-#endif  // #ifndef VIEWS_WINDOW_WINDOW_SHAPE_H_
57e595596518e91ab0aa1bab2973a19e4922993	chocobo@chromium.org <chocobo@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Apr 21 20:19:04 2010 +0000	2nd attempt to land http://codereview.chromium.org/1676002 for njw WifiConfigView - support networks with 802.1x authentication by prompting the user to enter an ID, select a certificate/private key file, and enter a password for the key file, if any. Pass these values down the stack into ConnectToWifiNetwork(). TEST=Compiles and login dialog shows new fields when security is 802.1x. TBR=njw	none		http://codereview.chromium.org/1692005	svn://svn.chromium.org/chrome/trunk/src@45229 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/status/network_menu_button.cc b/chrome/browser/chromeos/status/network_menu_button.cc <newline>index 075ef69..8cb7eba 100644 <newline>--- a/chrome/browser/chromeos/status/network_menu_button.cc <newline>+++ b/chrome/browser/chromeos/status/network_menu_button.cc <newline>@@ -130,7 +130,7 @@ void NetworkMenuButton::ActivatedAt(int index) { <newline>       // If wifi network is not encrypted, then directly connect. <newline>       // Otherwise, we open password dialog window. <newline>       if (!wifi.encrypted) { <newline>-        cros->ConnectToWifiNetwork(wifi, string16()); <newline>+        cros->ConnectToWifiNetwork(wifi, string16(), string16(), string16()); <newline>       } else { <newline>         NetworkConfigView* view = new NetworkConfigView(wifi, true); <newline>         views::Window* window = views::Window::CreateChromeWindow(
f7b810640c6d818ab3d6eae52ed897dfc345c7e	chocobo@chromium.org <chocobo@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Apr 21 20:19:04 2010 +0000	2nd attempt to land http://codereview.chromium.org/1676002 for njw WifiConfigView - support networks with 802.1x authentication by prompting the user to enter an ID, select a certificate/private key file, and enter a password for the key file, if any. Pass these values down the stack into ConnectToWifiNetwork(). TEST=Compiles and login dialog shows new fields when security is 802.1x. TBR=njw	none		http://codereview.chromium.org/1692005	svn://svn.chromium.org/chrome/trunk/src@45229 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/status/network_menu_button.cc b/chrome/browser/chromeos/status/network_menu_button.cc <newline>index 075ef69..8cb7eba 100644 <newline>--- a/chrome/browser/chromeos/status/network_menu_button.cc <newline>+++ b/chrome/browser/chromeos/status/network_menu_button.cc <newline>@@ -130,7 +130,7 @@ void NetworkMenuButton::ActivatedAt(int index) { <newline>       // If wifi network is not encrypted, then directly connect. <newline>       // Otherwise, we open password dialog window. <newline>       if (!wifi.encrypted) { <newline>-        cros->ConnectToWifiNetwork(wifi, string16()); <newline>+        cros->ConnectToWifiNetwork(wifi, string16(), string16(), string16()); <newline>       } else { <newline>         NetworkConfigView* view = new NetworkConfigView(wifi, true); <newline>         views::Window* window = views::Window::CreateChromeWindow(
bebc6bafae6fab47d69430a38ffa56cd7ff4635	jhawkins@chromium.org <jhawkins@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Apr 21 18:24:29 2010 +0000	Revert 45203 - Land http://codereview.chromium.org/1676002 for njw tbr:njw TEST=Compiles and login dialog shows new fields when security is 802.1x TBR=chocobo@chromium.org	none		http://codereview.chromium.org/1743002	svn://svn.chromium.org/chrome/trunk/src@45209 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/status/network_menu_button.cc b/chrome/browser/chromeos/status/network_menu_button.cc <newline>index 8cb7eba..075ef69 100644 <newline>--- a/chrome/browser/chromeos/status/network_menu_button.cc <newline>+++ b/chrome/browser/chromeos/status/network_menu_button.cc <newline>@@ -130,7 +130,7 @@ void NetworkMenuButton::ActivatedAt(int index) { <newline>       // If wifi network is not encrypted, then directly connect. <newline>       // Otherwise, we open password dialog window. <newline>       if (!wifi.encrypted) { <newline>-        cros->ConnectToWifiNetwork(wifi, string16(), string16(), string16()); <newline>+        cros->ConnectToWifiNetwork(wifi, string16()); <newline>       } else { <newline>         NetworkConfigView* view = new NetworkConfigView(wifi, true); <newline>         views::Window* window = views::Window::CreateChromeWindow(
ade700106737e9218f5a97be11ac0eb6a90b1e1	jhawkins@chromium.org <jhawkins@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Apr 21 18:24:29 2010 +0000	Revert 45203 - Land http://codereview.chromium.org/1676002 for njw tbr:njw TEST=Compiles and login dialog shows new fields when security is 802.1x TBR=chocobo@chromium.org	none		http://codereview.chromium.org/1743002	svn://svn.chromium.org/chrome/trunk/src@45209 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/status/network_menu_button.cc b/chrome/browser/chromeos/status/network_menu_button.cc <newline>index 8cb7eba..075ef69 100644 <newline>--- a/chrome/browser/chromeos/status/network_menu_button.cc <newline>+++ b/chrome/browser/chromeos/status/network_menu_button.cc <newline>@@ -130,7 +130,7 @@ void NetworkMenuButton::ActivatedAt(int index) { <newline>       // If wifi network is not encrypted, then directly connect. <newline>       // Otherwise, we open password dialog window. <newline>       if (!wifi.encrypted) { <newline>-        cros->ConnectToWifiNetwork(wifi, string16(), string16(), string16()); <newline>+        cros->ConnectToWifiNetwork(wifi, string16()); <newline>       } else { <newline>         NetworkConfigView* view = new NetworkConfigView(wifi, true); <newline>         views::Window* window = views::Window::CreateChromeWindow(
5d64627730a164530c6be0fd3012a25afec4173	chocobo@chromium.org <chocobo@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Apr 21 17:45:51 2010 +0000	Land http://codereview.chromium.org/1676002 for njw tbr:njw TEST=Compiles and login dialog shows new fields when security is 802.1x	none		http://codereview.chromium.org/1712003	svn://svn.chromium.org/chrome/trunk/src@45203 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/status/network_menu_button.cc b/chrome/browser/chromeos/status/network_menu_button.cc <newline>index 075ef69..8cb7eba 100644 <newline>--- a/chrome/browser/chromeos/status/network_menu_button.cc <newline>+++ b/chrome/browser/chromeos/status/network_menu_button.cc <newline>@@ -130,7 +130,7 @@ void NetworkMenuButton::ActivatedAt(int index) { <newline>       // If wifi network is not encrypted, then directly connect. <newline>       // Otherwise, we open password dialog window. <newline>       if (!wifi.encrypted) { <newline>-        cros->ConnectToWifiNetwork(wifi, string16()); <newline>+        cros->ConnectToWifiNetwork(wifi, string16(), string16(), string16()); <newline>       } else { <newline>         NetworkConfigView* view = new NetworkConfigView(wifi, true); <newline>         views::Window* window = views::Window::CreateChromeWindow(
45c762733827644c5e871c4357f6760f9a1a21e	chocobo@chromium.org <chocobo@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Apr 21 17:45:51 2010 +0000	Land http://codereview.chromium.org/1676002 for njw tbr:njw TEST=Compiles and login dialog shows new fields when security is 802.1x	none		http://codereview.chromium.org/1712003	svn://svn.chromium.org/chrome/trunk/src@45203 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/chromeos/status/network_menu_button.cc b/chrome/browser/chromeos/status/network_menu_button.cc <newline>index 075ef69..8cb7eba 100644 <newline>--- a/chrome/browser/chromeos/status/network_menu_button.cc <newline>+++ b/chrome/browser/chromeos/status/network_menu_button.cc <newline>@@ -130,7 +130,7 @@ void NetworkMenuButton::ActivatedAt(int index) { <newline>       // If wifi network is not encrypted, then directly connect. <newline>       // Otherwise, we open password dialog window. <newline>       if (!wifi.encrypted) { <newline>-        cros->ConnectToWifiNetwork(wifi, string16()); <newline>+        cros->ConnectToWifiNetwork(wifi, string16(), string16(), string16()); <newline>       } else { <newline>         NetworkConfigView* view = new NetworkConfigView(wifi, true); <newline>         views::Window* window = views::Window::CreateChromeWindow(
6321f45d5c652ff549d6786005f134b4e92465d	sky@chromium.org <sky@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Apr 19 20:25:05 2010 +0000	Changes FormatURL to not strip http if the host starts with ftp or https[!a-z]. This is necessitated by the omnibox treating ftp.www.com as ftp://www.com as well as security problems. I also changed FormatURL to always reset the supplied url_parse::Parsed. I did this as in writing my test I uncovered a long standing bug where a component wasn't getting reset. It seems much safer to always reset than rely on all code paths setting every component. TEST=make sure the omnibox doesn't strip http off urls that start with ftp.	41585, 41652		http://codereview.chromium.org/1574034	svn://svn.chromium.org/chrome/trunk/src@44943 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/net_util_unittest.cc b/net/base/net_util_unittest.cc <newline>index 4c1ae52..30ab0b9 100644 <newline>--- a/net/base/net_util_unittest.cc <newline>+++ b/net/base/net_util_unittest.cc <newline>@@ -1389,6 +1389,11 @@ TEST(NetUtilTest, FormatUrl) { <newline>      "https://www.google.com/", L"en", net::kFormatUrlOmitHTTP, <newline>      UnescapeRule::NORMAL, L"https://www.google.com/", <newline>      8}, <newline>+ <newline>+    {"omit http starts with ftp.", <newline>+     "http://ftp.google.com/", L"en", net::kFormatUrlOmitHTTP, <newline>+     UnescapeRule::NORMAL, L"http://ftp.google.com/", <newline>+     7}, <newline>   }; <newline>   for (size_t i = 0; i < arraysize(tests); ++i) { <newline>@@ -1491,6 +1496,36 @@ TEST(NetUtilTest, FormatUrlParsed) { <newline>   EXPECT_EQ(L"/a", formatted.substr(parsed.path.begin, parsed.path.len)); <newline>   EXPECT_EQ(L"b=c", formatted.substr(parsed.query.begin, parsed.query.len)); <newline>   EXPECT_EQ(L"d", formatted.substr(parsed.ref.begin, parsed.ref.len)); <newline>+ <newline>+  // omit http starts with ftp case. <newline>+  formatted = net::FormatUrl( <newline>+      GURL("http://ftp.host:8000/a?b=c#d"), <newline>+      L"", net::kFormatUrlOmitHTTP, UnescapeRule::NORMAL, &parsed, NULL, NULL); <newline>+  EXPECT_EQ(L"http://ftp.host:8000/a?b=c#d", formatted); <newline>+  EXPECT_TRUE(parsed.scheme.is_valid()); <newline>+  EXPECT_FALSE(parsed.username.is_valid()); <newline>+  EXPECT_FALSE(parsed.password.is_valid()); <newline>+  EXPECT_EQ(L"http", formatted.substr(parsed.scheme.begin, parsed.scheme.len)); <newline>+  EXPECT_EQ(L"ftp.host", formatted.substr(parsed.host.begin, parsed.host.len)); <newline>+  EXPECT_EQ(L"8000", formatted.substr(parsed.port.begin, parsed.port.len)); <newline>+  EXPECT_EQ(L"/a", formatted.substr(parsed.path.begin, parsed.path.len)); <newline>+  EXPECT_EQ(L"b=c", formatted.substr(parsed.query.begin, parsed.query.len)); <newline>+  EXPECT_EQ(L"d", formatted.substr(parsed.ref.begin, parsed.ref.len)); <newline>+ <newline>+  // omit http starts with 'f' case. <newline>+  formatted = net::FormatUrl( <newline>+      GURL("http://f/"), <newline>+      L"", net::kFormatUrlOmitHTTP, UnescapeRule::NORMAL, &parsed, NULL, NULL); <newline>+  EXPECT_EQ(L"f/", formatted); <newline>+  EXPECT_FALSE(parsed.scheme.is_valid()); <newline>+  EXPECT_FALSE(parsed.username.is_valid()); <newline>+  EXPECT_FALSE(parsed.password.is_valid()); <newline>+  EXPECT_FALSE(parsed.port.is_valid()); <newline>+  EXPECT_TRUE(parsed.path.is_valid()); <newline>+  EXPECT_FALSE(parsed.query.is_valid()); <newline>+  EXPECT_FALSE(parsed.ref.is_valid()); <newline>+  EXPECT_EQ(L"f", formatted.substr(parsed.host.begin, parsed.host.len)); <newline>+  EXPECT_EQ(L"/", formatted.substr(parsed.path.begin, parsed.path.len)); <newline> } <newline> TEST(NetUtilTest, FormatUrlAdjustOffset) { <newline>@@ -1629,6 +1664,18 @@ TEST(NetUtilTest, FormatUrlAdjustOffset) { <newline>     EXPECT_EQ(omit_http_cases[i].output_offset, offset); <newline>   } <newline>+  const AdjustOffsetCase omit_http_start_with_ftp[] = { <newline>+    {0, 0}, <newline>+    {3, 3}, <newline>+    {8, 8}, <newline>+  }; <newline>+  for (size_t i = 0; i < ARRAYSIZE_UNSAFE(omit_http_start_with_ftp); ++i) { <newline>+    size_t offset = omit_http_start_with_ftp[i].input_offset; <newline>+    net::FormatUrl(GURL("http://ftp.google.com"), L"en", <newline>+        net::kFormatUrlOmitHTTP, UnescapeRule::NORMAL, NULL, NULL, &offset); <newline>+    EXPECT_EQ(omit_http_start_with_ftp[i].output_offset, offset); <newline>+  } <newline>+ <newline>   const AdjustOffsetCase omit_all_cases[] = { <newline>     {12, 0}, <newline>     {13, 1},
3a61e3d6731a54293958f2583d33d063e798af2	sky@chromium.org <sky@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Apr 19 20:25:05 2010 +0000	Changes FormatURL to not strip http if the host starts with ftp or https[!a-z]. This is necessitated by the omnibox treating ftp.www.com as ftp://www.com as well as security problems. I also changed FormatURL to always reset the supplied url_parse::Parsed. I did this as in writing my test I uncovered a long standing bug where a component wasn't getting reset. It seems much safer to always reset than rely on all code paths setting every component. TEST=make sure the omnibox doesn't strip http off urls that start with ftp.	41585, 41652		http://codereview.chromium.org/1574034	svn://svn.chromium.org/chrome/trunk/src@44943 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/net_util_unittest.cc b/net/base/net_util_unittest.cc <newline>index 4c1ae52..30ab0b9 100644 <newline>--- a/net/base/net_util_unittest.cc <newline>+++ b/net/base/net_util_unittest.cc <newline>@@ -1389,6 +1389,11 @@ TEST(NetUtilTest, FormatUrl) { <newline>      "https://www.google.com/", L"en", net::kFormatUrlOmitHTTP, <newline>      UnescapeRule::NORMAL, L"https://www.google.com/", <newline>      8}, <newline>+ <newline>+    {"omit http starts with ftp.", <newline>+     "http://ftp.google.com/", L"en", net::kFormatUrlOmitHTTP, <newline>+     UnescapeRule::NORMAL, L"http://ftp.google.com/", <newline>+     7}, <newline>   }; <newline>   for (size_t i = 0; i < arraysize(tests); ++i) { <newline>@@ -1491,6 +1496,36 @@ TEST(NetUtilTest, FormatUrlParsed) { <newline>   EXPECT_EQ(L"/a", formatted.substr(parsed.path.begin, parsed.path.len)); <newline>   EXPECT_EQ(L"b=c", formatted.substr(parsed.query.begin, parsed.query.len)); <newline>   EXPECT_EQ(L"d", formatted.substr(parsed.ref.begin, parsed.ref.len)); <newline>+ <newline>+  // omit http starts with ftp case. <newline>+  formatted = net::FormatUrl( <newline>+      GURL("http://ftp.host:8000/a?b=c#d"), <newline>+      L"", net::kFormatUrlOmitHTTP, UnescapeRule::NORMAL, &parsed, NULL, NULL); <newline>+  EXPECT_EQ(L"http://ftp.host:8000/a?b=c#d", formatted); <newline>+  EXPECT_TRUE(parsed.scheme.is_valid()); <newline>+  EXPECT_FALSE(parsed.username.is_valid()); <newline>+  EXPECT_FALSE(parsed.password.is_valid()); <newline>+  EXPECT_EQ(L"http", formatted.substr(parsed.scheme.begin, parsed.scheme.len)); <newline>+  EXPECT_EQ(L"ftp.host", formatted.substr(parsed.host.begin, parsed.host.len)); <newline>+  EXPECT_EQ(L"8000", formatted.substr(parsed.port.begin, parsed.port.len)); <newline>+  EXPECT_EQ(L"/a", formatted.substr(parsed.path.begin, parsed.path.len)); <newline>+  EXPECT_EQ(L"b=c", formatted.substr(parsed.query.begin, parsed.query.len)); <newline>+  EXPECT_EQ(L"d", formatted.substr(parsed.ref.begin, parsed.ref.len)); <newline>+ <newline>+  // omit http starts with 'f' case. <newline>+  formatted = net::FormatUrl( <newline>+      GURL("http://f/"), <newline>+      L"", net::kFormatUrlOmitHTTP, UnescapeRule::NORMAL, &parsed, NULL, NULL); <newline>+  EXPECT_EQ(L"f/", formatted); <newline>+  EXPECT_FALSE(parsed.scheme.is_valid()); <newline>+  EXPECT_FALSE(parsed.username.is_valid()); <newline>+  EXPECT_FALSE(parsed.password.is_valid()); <newline>+  EXPECT_FALSE(parsed.port.is_valid()); <newline>+  EXPECT_TRUE(parsed.path.is_valid()); <newline>+  EXPECT_FALSE(parsed.query.is_valid()); <newline>+  EXPECT_FALSE(parsed.ref.is_valid()); <newline>+  EXPECT_EQ(L"f", formatted.substr(parsed.host.begin, parsed.host.len)); <newline>+  EXPECT_EQ(L"/", formatted.substr(parsed.path.begin, parsed.path.len)); <newline> } <newline> TEST(NetUtilTest, FormatUrlAdjustOffset) { <newline>@@ -1629,6 +1664,18 @@ TEST(NetUtilTest, FormatUrlAdjustOffset) { <newline>     EXPECT_EQ(omit_http_cases[i].output_offset, offset); <newline>   } <newline>+  const AdjustOffsetCase omit_http_start_with_ftp[] = { <newline>+    {0, 0}, <newline>+    {3, 3}, <newline>+    {8, 8}, <newline>+  }; <newline>+  for (size_t i = 0; i < ARRAYSIZE_UNSAFE(omit_http_start_with_ftp); ++i) { <newline>+    size_t offset = omit_http_start_with_ftp[i].input_offset; <newline>+    net::FormatUrl(GURL("http://ftp.google.com"), L"en", <newline>+        net::kFormatUrlOmitHTTP, UnescapeRule::NORMAL, NULL, NULL, &offset); <newline>+    EXPECT_EQ(omit_http_start_with_ftp[i].output_offset, offset); <newline>+  } <newline>+ <newline>   const AdjustOffsetCase omit_all_cases[] = { <newline>     {12, 0}, <newline>     {13, 1},
b5ec390c52a58435a81fe979a0a455ac2d101eb	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 1 05:51:57 2010 +0000	Make the browser survive massive data: URIs, via various techniques: 1) Drop the URL limit from 10MB to 2MB. The browser survives without this, but that final tweaks makes the whole data: URI attack fairly smooth (on my admittedly powerful machine). 2) Elide the title string at kMaxTitleChars. We already have a hard title limit but there was a path whereby the title is implied by the URL (e.g. file: and data: etc). 3) For massive URLs, limit the length shown in URL bar. We need to support them, because someone might redirect to a data: URI with e.g. an image in it. However, attempting to show them would kill the browser. We can't elide them because eliding URLs is a security risk (and would lead to correctness issues with an edit/press enter cycle). So we show at least the origin (minus path) or just the scheme for data: URIs TEST=NONE	33952		http://codereview.chromium.org/1569011	svn://svn.chromium.org/chrome/trunk/src@43319 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/chrome_constants.h b/chrome/common/chrome_constants.h <newline>index 456cea0..604f351 100644 <newline>--- a/chrome/common/chrome_constants.h <newline>+++ b/chrome/common/chrome_constants.h <newline>@@ -74,7 +74,11 @@ extern const size_t kMaxTitleChars; <newline> // The maximum number of characters in the URL that we're willing to accept <newline> // in the browser process. It is set low enough to avoid damage to the browser <newline> // but high enough that a web site can abuse location.hash for a little storage. <newline>+// We have different values for "max accepted" and "max displayed" because <newline>+// a data: URI may be legitimately massive, but the full URI would kill all <newline>+// known operating systems if you dropped it into a UI control. <newline> extern const size_t kMaxURLChars; <newline>+extern const size_t kMaxURLDisplayChars; <newline> extern const bool kRecordModeEnabled;
694360972967479c10a345f16f716ac850f78b3	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Apr 1 05:51:57 2010 +0000	Make the browser survive massive data: URIs, via various techniques: 1) Drop the URL limit from 10MB to 2MB. The browser survives without this, but that final tweaks makes the whole data: URI attack fairly smooth (on my admittedly powerful machine). 2) Elide the title string at kMaxTitleChars. We already have a hard title limit but there was a path whereby the title is implied by the URL (e.g. file: and data: etc). 3) For massive URLs, limit the length shown in URL bar. We need to support them, because someone might redirect to a data: URI with e.g. an image in it. However, attempting to show them would kill the browser. We can't elide them because eliding URLs is a security risk (and would lead to correctness issues with an edit/press enter cycle). So we show at least the origin (minus path) or just the scheme for data: URIs TEST=NONE	33952		http://codereview.chromium.org/1569011	svn://svn.chromium.org/chrome/trunk/src@43319 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/chrome_constants.h b/chrome/common/chrome_constants.h <newline>index 456cea0..604f351 100644 <newline>--- a/chrome/common/chrome_constants.h <newline>+++ b/chrome/common/chrome_constants.h <newline>@@ -74,7 +74,11 @@ extern const size_t kMaxTitleChars; <newline> // The maximum number of characters in the URL that we're willing to accept <newline> // in the browser process. It is set low enough to avoid damage to the browser <newline> // but high enough that a web site can abuse location.hash for a little storage. <newline>+// We have different values for "max accepted" and "max displayed" because <newline>+// a data: URI may be legitimately massive, but the full URI would kill all <newline>+// known operating systems if you dropped it into a UI control. <newline> extern const size_t kMaxURLChars; <newline>+extern const size_t kMaxURLDisplayChars; <newline> extern const bool kRecordModeEnabled;
31f3050b7fb546a04fdbf1bd307f119cfa9d500	pkasting@chromium.org <pkasting@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Mar 26 18:25:47 2010 +0000	Remove this icon, now that it's no longer used (due to my security iconography change). TBR=sky TEST=none	27570		http://codereview.chromium.org/1429001	svn://svn.chromium.org/chrome/trunk/src@42782 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/theme/lock_small.png b/chrome/app/theme/lock_small.png <newline>deleted file mode 100644 <newline>index 02646d9..0000000 <newline>Binary files a/chrome/app/theme/lock_small.png and /dev/null differ
3f86475e3f324a0059d7914b123d0cc04b9c716	pkasting@chromium.org <pkasting@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Mar 26 18:25:47 2010 +0000	Remove this icon, now that it's no longer used (due to my security iconography change). TBR=sky TEST=none	27570		http://codereview.chromium.org/1429001	svn://svn.chromium.org/chrome/trunk/src@42782 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/theme/lock_small.png b/chrome/app/theme/lock_small.png <newline>deleted file mode 100644 <newline>index 02646d9..0000000 <newline>Binary files a/chrome/app/theme/lock_small.png and /dev/null differ
acd4f6060e92b8b3b9cd1670782cb9d95492ed8	pkasting@chromium.org <pkasting@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 24 19:00:55 2010 +0000	Omnibox M5 work, part 1: Security changes * Remove yellow background * Move lock icon from right side to left side (only on Win) * Change iconography * Change scheme colors * Add label for "Untrusted website" * Remove tooltip on label This also simplifies the LocationBarView code on Windows now that LocationBarImageView is unnecessary, and reorders a few things to try and be in more consistent/physical order. TEST=Visit various https sites and see that the security icon is on the left, the scheme is colored, and there is no yellow background.	27570	ageActionImageView page_action_view;	http://codereview.chromium.org/1056002	svn://svn.chromium.org/chrome/trunk/src@42502 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/views/location_bar_view.h b/chrome/browser/views/location_bar_view.h <newline>index 084006d..e2b5720 100644 <newline>--- a/chrome/browser/views/location_bar_view.h <newline>+++ b/chrome/browser/views/location_bar_view.h <newline>@@ -75,9 +75,6 @@ class LocationBarView : public LocationBar, <newline>     SELECTED_TEXT, <newline>     DEEMPHASIZED_TEXT, <newline>     SECURITY_TEXT, <newline>-    SECURITY_INFO_BUBBLE_TEXT, <newline>-    SCHEME_STRIKEOUT, <newline>-    NUM_KINDS <newline>   }; <newline>   LocationBarView(Profile* profile, <newline>@@ -96,7 +93,8 @@ class LocationBarView : public LocationBar, <newline>   // Returns the appropriate color for the desired kind, based on the user's <newline>   // system theme. <newline>-  static SkColor GetColor(bool is_secure, ColorKind kind); <newline>+  static SkColor GetColor(ToolbarModel::SecurityLevel security_level, <newline>+                          ColorKind kind); <newline>   // Updates the location bar.  We also reset the bar's permanent text and <newline>   // security style, and, if |tab_for_state_restoring| is non-NULL, also restore <newline>@@ -191,6 +189,26 @@ class LocationBarView : public LocationBar, <newline>   void Focus(); <newline>  private: <newline>+  // SecurityImageView is used to display the appropriate status icon when the <newline>+  // current URL's scheme is https. <newline>+  class SecurityImageView : public views::ImageView { <newline>+   public: <newline>+    explicit SecurityImageView(const LocationBarView* parent); <newline>+    virtual ~SecurityImageView(); <newline>+ <newline>+    // Sets the image that should be displayed. <newline>+    void SetSecurityIcon(int resource_id); <newline>+ <newline>+    // Overridden from view. <newline>+    virtual bool OnMousePressed(const views::MouseEvent& event); <newline>+ <newline>+   private: <newline>+    // The owning LocationBarView. <newline>+    const LocationBarView* parent_; <newline>+ <newline>+    DISALLOW_COPY_AND_ASSIGN(SecurityImageView); <newline>+  }; <newline>+ <newline>   // View used when the user has selected a keyword. <newline>   // <newline>   // SelectedKeywordView maintains two labels. One label contains the <newline>@@ -279,95 +297,6 @@ class LocationBarView : public LocationBar, <newline>     DISALLOW_COPY_AND_ASSIGN(KeywordHintView); <newline>   }; <newline>-  class ShowInfoBubbleTask; <newline>-  class ShowFirstRunBubbleTask; <newline>- <newline>-  class LocationBarImageView : public views::ImageView, <newline>-                               public InfoBubbleDelegate { <newline>-   public: <newline>-    explicit LocationBarImageView(const BubblePositioner* bubble_positioner); <newline>-    virtual ~LocationBarImageView(); <newline>- <newline>-    // Overridden from view for the mouse hovering. <newline>-    virtual void OnMouseMoved(const views::MouseEvent& event); <newline>-    virtual void OnMouseExited(const views::MouseEvent& event); <newline>-    virtual bool OnMousePressed(const views::MouseEvent& event) = 0; <newline>- <newline>-    // InfoBubbleDelegate <newline>-    void InfoBubbleClosing(InfoBubble* info_bubble, bool closed_by_escape); <newline>-    bool CloseOnEscape() { return true; } <newline>- <newline>-    virtual void ShowInfoBubble() = 0; <newline>- <newline>-   protected: <newline>-    void ShowInfoBubbleImpl(const std::wstring& text, SkColor text_color); <newline>- <newline>-   private: <newline>-    friend class ShowInfoBubbleTask; <newline>- <newline>-    // The currently shown info bubble if any. <newline>-    InfoBubble* info_bubble_; <newline>- <newline>-    // A task used to display the info bubble when the mouse hovers on the <newline>-    // image. <newline>-    ShowInfoBubbleTask* show_info_bubble_task_; <newline>- <newline>-    // A positioner used to give the info bubble the correct target bounds.  The <newline>-    // caller maintains ownership of this and must ensure it's kept alive. <newline>-    const BubblePositioner* bubble_positioner_; <newline>- <newline>-    DISALLOW_COPY_AND_ASSIGN(LocationBarImageView); <newline>-  }; <newline>- <newline>-  // SecurityImageView is used to display the lock or warning icon when the <newline>-  // current URL's scheme is https. <newline>-  // <newline>-  // If a message has been set with SetInfoBubbleText, it displays an info <newline>-  // bubble when the mouse hovers on the image. <newline>-  class SecurityImageView : public LocationBarImageView { <newline>-   public: <newline>-    enum Image { <newline>-      LOCK = 0, <newline>-      WARNING <newline>-    }; <newline>- <newline>-    SecurityImageView(const LocationBarView* parent, <newline>-                      Profile* profile, <newline>-                      ToolbarModel* model_, <newline>-                      const BubblePositioner* bubble_positioner); <newline>-    virtual ~SecurityImageView(); <newline>- <newline>-    // Sets the image that should be displayed. <newline>-    void SetImageShown(Image image); <newline>- <newline>-    // Overridden from view for the mouse hovering. <newline>-    virtual bool OnMousePressed(const views::MouseEvent& event); <newline>- <newline>-    void set_profile(Profile* profile) { profile_ = profile; } <newline>- <newline>-    virtual void ShowInfoBubble(); <newline>- <newline>-   private: <newline>-    // The lock icon shown when using HTTPS. <newline>-    static SkBitmap* lock_icon_; <newline>- <newline>-    // The warning icon shown when HTTPS is broken. <newline>-    static SkBitmap* warning_icon_; <newline>- <newline>-    // A task used to display the info bubble when the mouse hovers on the <newline>-    // image. <newline>-    ShowInfoBubbleTask* show_info_bubble_task_; <newline>- <newline>-    // The owning LocationBarView. <newline>-    const LocationBarView* parent_; <newline>- <newline>-    Profile* profile_; <newline>- <newline>-    ToolbarModel* model_; <newline>- <newline>-    DISALLOW_COPY_AND_ASSIGN(SecurityImageView); <newline>-  }; <newline>- <newline>   class ContentSettingImageView : public views::ImageView, <newline>                                   public InfoBubbleDelegate { <newline>    public: <newline>@@ -411,15 +340,14 @@ class LocationBarView : public LocationBar, <newline>   // PageActionImageView is used to display the icon for a given PageAction <newline>   // and notify the extension when the icon is clicked. <newline>-  class PageActionImageView : public LocationBarImageView, <newline>+  class PageActionImageView : public views::ImageView, <newline>       public ImageLoadingTracker::Observer, <newline>       public ExtensionContextMenuModel::PopupDelegate, <newline>       public ExtensionPopup::Observer { <newline>    public: <newline>     PageActionImageView(LocationBarView* owner, <newline>                         Profile* profile, <newline>-                        ExtensionAction* page_action, <newline>-                        const BubblePositioner* bubble_positioner); <newline>+                        ExtensionAction* page_action); <newline>     virtual ~PageActionImageView(); <newline>     ExtensionAction* page_action() { return page_action_; } <newline>@@ -431,13 +359,9 @@ class LocationBarView : public LocationBar, <newline>     } <newline>     // Overridden from view. <newline>-    virtual void OnMouseMoved(const views::MouseEvent& event); <newline>     virtual bool OnMousePressed(const views::MouseEvent& event); <newline>     virtual void OnMouseReleased(const views::MouseEvent& event, bool canceled); <newline>-    // Overridden from LocationBarImageView. <newline>-    virtual void ShowInfoBubble(); <newline>- <newline>     // Overridden from ImageLoadingTracker. <newline>     virtual void OnImageLoaded( <newline>         SkBitmap* image, ExtensionResource resource, int index); <newline>@@ -531,10 +455,10 @@ class LocationBarView : public LocationBar, <newline>   // size. <newline>   bool NeedsResize(View* view, int available_width); <newline>-  // Adjusts the keyword hint, selected keyword and type to search views <newline>-  // based on the contents of the edit. Returns true if something changed that <newline>-  // necessitates a layout. <newline>-  bool AdjustHints(int available_width); <newline>+  // Adjusts the keyword hint, selected keyword view, type to search label, and <newline>+  // security info label based on the contents of the edit. Returns true if <newline>+  // something changed that necessitates a layout. <newline>+  bool AdjustAutocollapseViews(int available_width); <newline>   // If View fits in the specified region, it is made visible and the <newline>   // bounds are adjusted appropriately. If the View does not fit, it is <newline>@@ -542,9 +466,6 @@ class LocationBarView : public LocationBar, <newline>   void LayoutView(bool leading, views::View* view, int available_width, <newline>                   gfx::Rect* bounds); <newline>-  // Sets the security icon to display.  Note that no repaint is done. <newline>-  void SetSecurityIcon(ToolbarModel::Icon icon); <newline>- <newline>   // Update the visibility state of the Content Blocked icons to reflect what is <newline>   // actually blocked on the current page. <newline>   void RefreshContentSettingViews(); <newline>@@ -556,13 +477,6 @@ class LocationBarView : public LocationBar, <newline>   // PageActions. <newline>   void RefreshPageActionViews(); <newline>-  // Sets the text that should be displayed in the info label and its associated <newline>-  // tooltip text.  Call with an empty string if the info label should be <newline>-  // hidden. <newline>-  void SetInfoText(const std::wstring& text, <newline>-                   ToolbarModel::InfoTextType text_type, <newline>-                   const std::wstring& tooltip_text); <newline>- <newline>   // Sets the visibility of view to new_vis. Returns whether the visibility <newline>   // changed. <newline>   bool ToggleVisibility(bool new_vis, views::View* view); <newline>@@ -610,6 +524,9 @@ class LocationBarView : public LocationBar, <newline>   // Font used by edit and some of the hints. <newline>   gfx::Font font_; <newline>+  // The view that shows the lock/warning when in HTTPS mode. <newline>+  SecurityImageView security_image_view_; <newline>+ <newline>   // Location_entry view wrapper <newline>   views::NativeViewHost* location_entry_view_; <newline>@@ -617,6 +534,8 @@ class LocationBarView : public LocationBar, <newline>   // what is going in the edit. They are all added a children of the <newline>   // LocationBarView. At most one is visible at a time. Preference is <newline>   // given to the keyword_view_, then hint_view_, then type_to_search_view_. <newline>+  // These, as well as |security_info_label_|, autocollapse when the edit needs <newline>+  // the room. <newline>   // Shown if the user has selected a keyword. <newline>   SelectedKeywordView selected_keyword_view_; <newline>@@ -627,8 +546,9 @@ class LocationBarView : public LocationBar, <newline>   // Shown if the text is not a keyword or url. <newline>   views::Label type_to_search_view_; <newline>-  // The view that shows the lock/warning when in HTTPS mode. <newline>-  SecurityImageView security_image_view_; <newline>+  // A label displayed on the right side of the box to show more information <newline>+  // about certain security states. <newline>+  views::Label security_info_label_; <newline>   // The content setting views. <newline>   ContentSettingViews content_setting_views_; <newline>@@ -636,9 +556,6 @@ class LocationBarView : public LocationBar, <newline>   // The page action icon views. <newline>   PageActionViews page_action_views_; <newline>-  // A label displayed after the lock icon to show some extra information. <newline>-  views::Label info_label_; <newline>- <newline>   // When true, the location bar view is read only and also is has a slightly <newline>   // different presentation (font size / color). This is used for popups. <newline>   bool popup_window_mode_;
45f8e4b5d9e1531e461cce3fd578372779c956a	pkasting@chromium.org <pkasting@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 24 19:00:55 2010 +0000	Omnibox M5 work, part 1: Security changes * Remove yellow background * Move lock icon from right side to left side (only on Win) * Change iconography * Change scheme colors * Add label for "Untrusted website" * Remove tooltip on label This also simplifies the LocationBarView code on Windows now that LocationBarImageView is unnecessary, and reorders a few things to try and be in more consistent/physical order. TEST=Visit various https sites and see that the security icon is on the left, the scheme is colored, and there is no yellow background.	27570	ageActionImageView page_action_view;	http://codereview.chromium.org/1056002	svn://svn.chromium.org/chrome/trunk/src@42502 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/views/location_bar_view.h b/chrome/browser/views/location_bar_view.h <newline>index 084006d..e2b5720 100644 <newline>--- a/chrome/browser/views/location_bar_view.h <newline>+++ b/chrome/browser/views/location_bar_view.h <newline>@@ -75,9 +75,6 @@ class LocationBarView : public LocationBar, <newline>     SELECTED_TEXT, <newline>     DEEMPHASIZED_TEXT, <newline>     SECURITY_TEXT, <newline>-    SECURITY_INFO_BUBBLE_TEXT, <newline>-    SCHEME_STRIKEOUT, <newline>-    NUM_KINDS <newline>   }; <newline>   LocationBarView(Profile* profile, <newline>@@ -96,7 +93,8 @@ class LocationBarView : public LocationBar, <newline>   // Returns the appropriate color for the desired kind, based on the user's <newline>   // system theme. <newline>-  static SkColor GetColor(bool is_secure, ColorKind kind); <newline>+  static SkColor GetColor(ToolbarModel::SecurityLevel security_level, <newline>+                          ColorKind kind); <newline>   // Updates the location bar.  We also reset the bar's permanent text and <newline>   // security style, and, if |tab_for_state_restoring| is non-NULL, also restore <newline>@@ -191,6 +189,26 @@ class LocationBarView : public LocationBar, <newline>   void Focus(); <newline>  private: <newline>+  // SecurityImageView is used to display the appropriate status icon when the <newline>+  // current URL's scheme is https. <newline>+  class SecurityImageView : public views::ImageView { <newline>+   public: <newline>+    explicit SecurityImageView(const LocationBarView* parent); <newline>+    virtual ~SecurityImageView(); <newline>+ <newline>+    // Sets the image that should be displayed. <newline>+    void SetSecurityIcon(int resource_id); <newline>+ <newline>+    // Overridden from view. <newline>+    virtual bool OnMousePressed(const views::MouseEvent& event); <newline>+ <newline>+   private: <newline>+    // The owning LocationBarView. <newline>+    const LocationBarView* parent_; <newline>+ <newline>+    DISALLOW_COPY_AND_ASSIGN(SecurityImageView); <newline>+  }; <newline>+ <newline>   // View used when the user has selected a keyword. <newline>   // <newline>   // SelectedKeywordView maintains two labels. One label contains the <newline>@@ -279,95 +297,6 @@ class LocationBarView : public LocationBar, <newline>     DISALLOW_COPY_AND_ASSIGN(KeywordHintView); <newline>   }; <newline>-  class ShowInfoBubbleTask; <newline>-  class ShowFirstRunBubbleTask; <newline>- <newline>-  class LocationBarImageView : public views::ImageView, <newline>-                               public InfoBubbleDelegate { <newline>-   public: <newline>-    explicit LocationBarImageView(const BubblePositioner* bubble_positioner); <newline>-    virtual ~LocationBarImageView(); <newline>- <newline>-    // Overridden from view for the mouse hovering. <newline>-    virtual void OnMouseMoved(const views::MouseEvent& event); <newline>-    virtual void OnMouseExited(const views::MouseEvent& event); <newline>-    virtual bool OnMousePressed(const views::MouseEvent& event) = 0; <newline>- <newline>-    // InfoBubbleDelegate <newline>-    void InfoBubbleClosing(InfoBubble* info_bubble, bool closed_by_escape); <newline>-    bool CloseOnEscape() { return true; } <newline>- <newline>-    virtual void ShowInfoBubble() = 0; <newline>- <newline>-   protected: <newline>-    void ShowInfoBubbleImpl(const std::wstring& text, SkColor text_color); <newline>- <newline>-   private: <newline>-    friend class ShowInfoBubbleTask; <newline>- <newline>-    // The currently shown info bubble if any. <newline>-    InfoBubble* info_bubble_; <newline>- <newline>-    // A task used to display the info bubble when the mouse hovers on the <newline>-    // image. <newline>-    ShowInfoBubbleTask* show_info_bubble_task_; <newline>- <newline>-    // A positioner used to give the info bubble the correct target bounds.  The <newline>-    // caller maintains ownership of this and must ensure it's kept alive. <newline>-    const BubblePositioner* bubble_positioner_; <newline>- <newline>-    DISALLOW_COPY_AND_ASSIGN(LocationBarImageView); <newline>-  }; <newline>- <newline>-  // SecurityImageView is used to display the lock or warning icon when the <newline>-  // current URL's scheme is https. <newline>-  // <newline>-  // If a message has been set with SetInfoBubbleText, it displays an info <newline>-  // bubble when the mouse hovers on the image. <newline>-  class SecurityImageView : public LocationBarImageView { <newline>-   public: <newline>-    enum Image { <newline>-      LOCK = 0, <newline>-      WARNING <newline>-    }; <newline>- <newline>-    SecurityImageView(const LocationBarView* parent, <newline>-                      Profile* profile, <newline>-                      ToolbarModel* model_, <newline>-                      const BubblePositioner* bubble_positioner); <newline>-    virtual ~SecurityImageView(); <newline>- <newline>-    // Sets the image that should be displayed. <newline>-    void SetImageShown(Image image); <newline>- <newline>-    // Overridden from view for the mouse hovering. <newline>-    virtual bool OnMousePressed(const views::MouseEvent& event); <newline>- <newline>-    void set_profile(Profile* profile) { profile_ = profile; } <newline>- <newline>-    virtual void ShowInfoBubble(); <newline>- <newline>-   private: <newline>-    // The lock icon shown when using HTTPS. <newline>-    static SkBitmap* lock_icon_; <newline>- <newline>-    // The warning icon shown when HTTPS is broken. <newline>-    static SkBitmap* warning_icon_; <newline>- <newline>-    // A task used to display the info bubble when the mouse hovers on the <newline>-    // image. <newline>-    ShowInfoBubbleTask* show_info_bubble_task_; <newline>- <newline>-    // The owning LocationBarView. <newline>-    const LocationBarView* parent_; <newline>- <newline>-    Profile* profile_; <newline>- <newline>-    ToolbarModel* model_; <newline>- <newline>-    DISALLOW_COPY_AND_ASSIGN(SecurityImageView); <newline>-  }; <newline>- <newline>   class ContentSettingImageView : public views::ImageView, <newline>                                   public InfoBubbleDelegate { <newline>    public: <newline>@@ -411,15 +340,14 @@ class LocationBarView : public LocationBar, <newline>   // PageActionImageView is used to display the icon for a given PageAction <newline>   // and notify the extension when the icon is clicked. <newline>-  class PageActionImageView : public LocationBarImageView, <newline>+  class PageActionImageView : public views::ImageView, <newline>       public ImageLoadingTracker::Observer, <newline>       public ExtensionContextMenuModel::PopupDelegate, <newline>       public ExtensionPopup::Observer { <newline>    public: <newline>     PageActionImageView(LocationBarView* owner, <newline>                         Profile* profile, <newline>-                        ExtensionAction* page_action, <newline>-                        const BubblePositioner* bubble_positioner); <newline>+                        ExtensionAction* page_action); <newline>     virtual ~PageActionImageView(); <newline>     ExtensionAction* page_action() { return page_action_; } <newline>@@ -431,13 +359,9 @@ class LocationBarView : public LocationBar, <newline>     } <newline>     // Overridden from view. <newline>-    virtual void OnMouseMoved(const views::MouseEvent& event); <newline>     virtual bool OnMousePressed(const views::MouseEvent& event); <newline>     virtual void OnMouseReleased(const views::MouseEvent& event, bool canceled); <newline>-    // Overridden from LocationBarImageView. <newline>-    virtual void ShowInfoBubble(); <newline>- <newline>     // Overridden from ImageLoadingTracker. <newline>     virtual void OnImageLoaded( <newline>         SkBitmap* image, ExtensionResource resource, int index); <newline>@@ -531,10 +455,10 @@ class LocationBarView : public LocationBar, <newline>   // size. <newline>   bool NeedsResize(View* view, int available_width); <newline>-  // Adjusts the keyword hint, selected keyword and type to search views <newline>-  // based on the contents of the edit. Returns true if something changed that <newline>-  // necessitates a layout. <newline>-  bool AdjustHints(int available_width); <newline>+  // Adjusts the keyword hint, selected keyword view, type to search label, and <newline>+  // security info label based on the contents of the edit. Returns true if <newline>+  // something changed that necessitates a layout. <newline>+  bool AdjustAutocollapseViews(int available_width); <newline>   // If View fits in the specified region, it is made visible and the <newline>   // bounds are adjusted appropriately. If the View does not fit, it is <newline>@@ -542,9 +466,6 @@ class LocationBarView : public LocationBar, <newline>   void LayoutView(bool leading, views::View* view, int available_width, <newline>                   gfx::Rect* bounds); <newline>-  // Sets the security icon to display.  Note that no repaint is done. <newline>-  void SetSecurityIcon(ToolbarModel::Icon icon); <newline>- <newline>   // Update the visibility state of the Content Blocked icons to reflect what is <newline>   // actually blocked on the current page. <newline>   void RefreshContentSettingViews(); <newline>@@ -556,13 +477,6 @@ class LocationBarView : public LocationBar, <newline>   // PageActions. <newline>   void RefreshPageActionViews(); <newline>-  // Sets the text that should be displayed in the info label and its associated <newline>-  // tooltip text.  Call with an empty string if the info label should be <newline>-  // hidden. <newline>-  void SetInfoText(const std::wstring& text, <newline>-                   ToolbarModel::InfoTextType text_type, <newline>-                   const std::wstring& tooltip_text); <newline>- <newline>   // Sets the visibility of view to new_vis. Returns whether the visibility <newline>   // changed. <newline>   bool ToggleVisibility(bool new_vis, views::View* view); <newline>@@ -610,6 +524,9 @@ class LocationBarView : public LocationBar, <newline>   // Font used by edit and some of the hints. <newline>   gfx::Font font_; <newline>+  // The view that shows the lock/warning when in HTTPS mode. <newline>+  SecurityImageView security_image_view_; <newline>+ <newline>   // Location_entry view wrapper <newline>   views::NativeViewHost* location_entry_view_; <newline>@@ -617,6 +534,8 @@ class LocationBarView : public LocationBar, <newline>   // what is going in the edit. They are all added a children of the <newline>   // LocationBarView. At most one is visible at a time. Preference is <newline>   // given to the keyword_view_, then hint_view_, then type_to_search_view_. <newline>+  // These, as well as |security_info_label_|, autocollapse when the edit needs <newline>+  // the room. <newline>   // Shown if the user has selected a keyword. <newline>   SelectedKeywordView selected_keyword_view_; <newline>@@ -627,8 +546,9 @@ class LocationBarView : public LocationBar, <newline>   // Shown if the text is not a keyword or url. <newline>   views::Label type_to_search_view_; <newline>-  // The view that shows the lock/warning when in HTTPS mode. <newline>-  SecurityImageView security_image_view_; <newline>+  // A label displayed on the right side of the box to show more information <newline>+  // about certain security states. <newline>+  views::Label security_info_label_; <newline>   // The content setting views. <newline>   ContentSettingViews content_setting_views_; <newline>@@ -636,9 +556,6 @@ class LocationBarView : public LocationBar, <newline>   // The page action icon views. <newline>   PageActionViews page_action_views_; <newline>-  // A label displayed after the lock icon to show some extra information. <newline>-  views::Label info_label_; <newline>- <newline>   // When true, the location bar view is read only and also is has a slightly <newline>   // different presentation (font size / color). This is used for popups. <newline>   bool popup_window_mode_;
02e238c50b4563f64a6118bbe365517aea1bf43	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 22 21:13:35 2010 +0000	Fix crash with "ATTACH 12345 as db". Believed to not have security impact. TEST="ATTACH 12345 as db"	38745		http://codereview.chromium.org/1108003	svn://svn.chromium.org/chrome/trunk/src@42255 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/sqlite/src/attach.c b/third_party/sqlite/src/attach.c <newline>index d79f6e6..48e0a28 100644 <newline>--- a/third_party/sqlite/src/attach.c <newline>+++ b/third_party/sqlite/src/attach.c <newline>@@ -313,6 +313,12 @@ static void codeAttach( <newline> #ifndef SQLITE_OMIT_AUTHORIZATION <newline>   if( pAuthArg ){ <newline>     char *zAuthArg = pAuthArg->u.zToken; <newline>+    int i; <newline>+    char iBuf[32]; <newline>+    if( sqlite3ExprIsInteger(pAuthArg, &i) ){ <newline>+      sqlite3_snprintf(sizeof(iBuf), iBuf, "%d", pAuthArg->u.iValue); <newline>+      zAuthArg = iBuf; <newline>+    } <newline>     if( NEVER(zAuthArg==0) ){ <newline>       goto attach_end; <newline>     }
0e1d9fa17f7f2fd64d29b7c797baab0000b9125	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 22 21:13:35 2010 +0000	Fix crash with "ATTACH 12345 as db". Believed to not have security impact. TEST="ATTACH 12345 as db"	38745		http://codereview.chromium.org/1108003	svn://svn.chromium.org/chrome/trunk/src@42255 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/sqlite/src/attach.c b/third_party/sqlite/src/attach.c <newline>index d79f6e6..48e0a28 100644 <newline>--- a/third_party/sqlite/src/attach.c <newline>+++ b/third_party/sqlite/src/attach.c <newline>@@ -313,6 +313,12 @@ static void codeAttach( <newline> #ifndef SQLITE_OMIT_AUTHORIZATION <newline>   if( pAuthArg ){ <newline>     char *zAuthArg = pAuthArg->u.zToken; <newline>+    int i; <newline>+    char iBuf[32]; <newline>+    if( sqlite3ExprIsInteger(pAuthArg, &i) ){ <newline>+      sqlite3_snprintf(sizeof(iBuf), iBuf, "%d", pAuthArg->u.iValue); <newline>+      zAuthArg = iBuf; <newline>+    } <newline>     if( NEVER(zAuthArg==0) ){ <newline>       goto attach_end; <newline>     }
da1493d41b0e97b383765bfb1b00eafc1e88e44	pkasting@chromium.org <pkasting@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 22 20:05:43 2010 +0000	Check in new icons for omnibox security changes alone, so that my patch to actually use them can be tested on the tryservers. TEST=none TBR=sky	27570		http://codereview.chromium.org/1167002	svn://svn.chromium.org/chrome/trunk/src@42245 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/theme/security_warning.png b/chrome/app/theme/security_warning.png <newline>new file mode 100644 <newline>index 0000000..09026ec <newline>Binary files /dev/null and b/chrome/app/theme/security_warning.png differ
679e8667e258a9903a18792894e13a17639e122	pkasting@chromium.org <pkasting@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 22 20:05:43 2010 +0000	Check in new icons for omnibox security changes alone, so that my patch to actually use them can be tested on the tryservers. TEST=none TBR=sky	27570		http://codereview.chromium.org/1167002	svn://svn.chromium.org/chrome/trunk/src@42245 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/theme/security_warning.png b/chrome/app/theme/security_warning.png <newline>new file mode 100644 <newline>index 0000000..09026ec <newline>Binary files /dev/null and b/chrome/app/theme/security_warning.png differ
101d148849f2786976e8b470a5276ba511947fd	jochen@chromium.org <jochen@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 11 17:47:10 2010 +0000	Add setWillSendRequestClearHeader to LayoutTestController. See https://bugs.webkit.org/show_bug.cgi?id=35920 for the webkit side. TEST=http/tests/security/no-referrer.html	none		http://codereview.chromium.org/884001	svn://svn.chromium.org/chrome/trunk/src@41286 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_webview_delegate.h b/webkit/tools/test_shell/test_webview_delegate.h <newline>index 4bd36f5..8b12590 100644 <newline>--- a/webkit/tools/test_shell/test_webview_delegate.h <newline>+++ b/webkit/tools/test_shell/test_webview_delegate.h <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2006-2008 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -16,6 +16,7 @@ <newline> #endif <newline> #include <map> <newline>+#include <set> <newline> #include <string> <newline> #if defined(TOOLKIT_USES_GTK) <newline>@@ -264,6 +265,13 @@ class TestWebViewDelegate : public WebKit::WebViewClient, <newline>   void SetCustomPolicyDelegate(bool is_custom, bool is_permissive); <newline>   void WaitForPolicyDelegate(); <newline>+  void set_clear_header(const std::string& header) { <newline>+    clear_headers_.insert(header); <newline>+  } <newline>+  const std::set<std::string>& clear_headers() { <newline>+    return clear_headers_; <newline>+  } <newline>+ <newline>   void set_block_redirects(bool block_redirects) { <newline>     block_redirects_ = block_redirects; <newline>   } <newline>@@ -392,6 +400,9 @@ class TestWebViewDelegate : public WebKit::WebViewClient, <newline>   // true if we want to enable selection of trailing whitespaces <newline>   bool select_trailing_whitespace_enabled_; <newline>+  // Set of headers to clear in willSendRequest. <newline>+  std::set<std::string> clear_headers_; <newline>+ <newline>   // true if we should block any redirects <newline>   bool block_redirects_;
9c773d9f8244e0d339bbc07accf2e866b5051cc	jochen@chromium.org <jochen@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 11 17:47:10 2010 +0000	Add setWillSendRequestClearHeader to LayoutTestController. See https://bugs.webkit.org/show_bug.cgi?id=35920 for the webkit side. TEST=http/tests/security/no-referrer.html	none		http://codereview.chromium.org/884001	svn://svn.chromium.org/chrome/trunk/src@41286 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_webview_delegate.h b/webkit/tools/test_shell/test_webview_delegate.h <newline>index 4bd36f5..8b12590 100644 <newline>--- a/webkit/tools/test_shell/test_webview_delegate.h <newline>+++ b/webkit/tools/test_shell/test_webview_delegate.h <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2006-2008 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -16,6 +16,7 @@ <newline> #endif <newline> #include <map> <newline>+#include <set> <newline> #include <string> <newline> #if defined(TOOLKIT_USES_GTK) <newline>@@ -264,6 +265,13 @@ class TestWebViewDelegate : public WebKit::WebViewClient, <newline>   void SetCustomPolicyDelegate(bool is_custom, bool is_permissive); <newline>   void WaitForPolicyDelegate(); <newline>+  void set_clear_header(const std::string& header) { <newline>+    clear_headers_.insert(header); <newline>+  } <newline>+  const std::set<std::string>& clear_headers() { <newline>+    return clear_headers_; <newline>+  } <newline>+ <newline>   void set_block_redirects(bool block_redirects) { <newline>     block_redirects_ = block_redirects; <newline>   } <newline>@@ -392,6 +400,9 @@ class TestWebViewDelegate : public WebKit::WebViewClient, <newline>   // true if we want to enable selection of trailing whitespaces <newline>   bool select_trailing_whitespace_enabled_; <newline>+  // Set of headers to clear in willSendRequest. <newline>+  std::set<std::string> clear_headers_; <newline>+ <newline>   // true if we should block any redirects <newline>   bool block_redirects_;
fa35c17b634d77a56a4645246a5e6003c5319bf	dpranke@chromium.org <dpranke@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 11 02:17:08 2010 +0000	Roll WebKit to 55822 to pick up a security fix. R=japhet@chromium.org TEST=none	55822		http://codereview.chromium.org/854001	svn://svn.chromium.org/chrome/trunk/src@41240 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 6e24fa9..80277c9 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -1,7 +1,7 @@ <newline> vars = { <newline>   "webkit_trunk": <newline>     "http://svn.webkit.org/repository/webkit/trunk", <newline>-  "webkit_revision": "55819", <newline>+  "webkit_revision": "55822", <newline>   "ffmpeg_revision": "40718", <newline>   "skia_revision": "504", <newline>   "chromium_git": "http://src.chromium.org/git",
e2bb154e9075b91d56c6f5cace2001f287f7502	dpranke@chromium.org <dpranke@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 11 02:17:08 2010 +0000	Roll WebKit to 55822 to pick up a security fix. R=japhet@chromium.org TEST=none	55822		http://codereview.chromium.org/854001	svn://svn.chromium.org/chrome/trunk/src@41240 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 6e24fa9..80277c9 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -1,7 +1,7 @@ <newline> vars = { <newline>   "webkit_trunk": <newline>     "http://svn.webkit.org/repository/webkit/trunk", <newline>-  "webkit_revision": "55819", <newline>+  "webkit_revision": "55822", <newline>   "ffmpeg_revision": "40718", <newline>   "skia_revision": "504", <newline>   "chromium_git": "http://src.chromium.org/git",
9433026e663541041cd8d14ec307de713da4e4a	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 4 03:30:34 2010 +0000	GTK/Mac: show security warning on correct part of url. Where "security warning" means "diagonal red line". This change just copies the relevant code from Windows; my suspicion is that when the windows code was updated, mac and linux had already copied the old, incorrect code, but the bug didn't become apparent until the security UI was implemented on those platforms. TEST=manual	26280		http://codereview.chromium.org/668016	svn://svn.chromium.org/chrome/trunk/src@40595 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/autocomplete/autocomplete_edit_view_mac.mm b/chrome/browser/autocomplete/autocomplete_edit_view_mac.mm <newline>index e3881e0..a78a6b7 100644 <newline>--- a/chrome/browser/autocomplete/autocomplete_edit_view_mac.mm <newline>+++ b/chrome/browser/autocomplete/autocomplete_edit_view_mac.mm <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2009 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -394,16 +394,16 @@ void AutocompleteEditViewMac::SetText(const std::wstring& display_text) { <newline>   [as addAttribute:NSParagraphStyleAttributeName value:paragraph_style <newline>              range:NSMakeRange(0, [as length])]; <newline>-  url_parse::Parsed parts; <newline>-  AutocompleteInput::Parse(display_text, model_->GetDesiredTLD(), <newline>-                           &parts, NULL); <newline>-  const bool emphasize = model_->CurrentTextIsURL() && (parts.host.len > 0); <newline>+  url_parse::Component scheme, host; <newline>+  AutocompleteInput::ParseForEmphasizeComponents( <newline>+      display_text, model_->GetDesiredTLD(), &scheme, &host); <newline>+  const bool emphasize = model_->CurrentTextIsURL() && (host.len > 0); <newline>   if (emphasize) { <newline>     [as addAttribute:NSForegroundColorAttributeName value:BaseTextColor() <newline>                range:NSMakeRange(0, [as length])]; <newline>     [as addAttribute:NSForegroundColorAttributeName value:HostTextColor() <newline>-               range:ComponentToNSRange(parts.host)]; <newline>+               range:ComponentToNSRange(host)]; <newline>   } <newline>   // TODO(shess): GTK has this as a member var, figure out why. <newline>@@ -424,7 +424,7 @@ void AutocompleteEditViewMac::SetText(const std::wstring& display_text) { <newline>   } <newline>   // Emphasize the scheme for security UI display purposes (if necessary). <newline>-  if (!model_->user_input_in_progress() && parts.scheme.is_nonempty() && <newline>+  if (!model_->user_input_in_progress() && scheme.is_nonempty() && <newline>       (scheme_security_level != ToolbarModel::NORMAL)) { <newline>     NSColor* color; <newline>     if (scheme_security_level == ToolbarModel::SECURE) { <newline>@@ -434,10 +434,10 @@ void AutocompleteEditViewMac::SetText(const std::wstring& display_text) { <newline>       // Add a strikethrough through the scheme. <newline>       [as addAttribute:NSStrikethroughStyleAttributeName <newline>                  value:[NSNumber numberWithInt:NSUnderlineStyleSingle] <newline>-                 range:ComponentToNSRange(parts.scheme)]; <newline>+                 range:ComponentToNSRange(scheme)]; <newline>     } <newline>     [as addAttribute:NSForegroundColorAttributeName value:color <newline>-               range:ComponentToNSRange(parts.scheme)]; <newline>+               range:ComponentToNSRange(scheme)]; <newline>   } <newline>   [field_ setAttributedStringValue:as];
9bcfd24022de81f8492f261cd6781803f902026	estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Mar 4 03:30:34 2010 +0000	GTK/Mac: show security warning on correct part of url. Where "security warning" means "diagonal red line". This change just copies the relevant code from Windows; my suspicion is that when the windows code was updated, mac and linux had already copied the old, incorrect code, but the bug didn't become apparent until the security UI was implemented on those platforms. TEST=manual	26280		http://codereview.chromium.org/668016	svn://svn.chromium.org/chrome/trunk/src@40595 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/autocomplete/autocomplete_edit_view_mac.mm b/chrome/browser/autocomplete/autocomplete_edit_view_mac.mm <newline>index e3881e0..a78a6b7 100644 <newline>--- a/chrome/browser/autocomplete/autocomplete_edit_view_mac.mm <newline>+++ b/chrome/browser/autocomplete/autocomplete_edit_view_mac.mm <newline>@@ -1,4 +1,4 @@ <newline>-// Copyright (c) 2009 The Chromium Authors. All rights reserved. <newline>+// Copyright (c) 2010 The Chromium Authors. All rights reserved. <newline> // Use of this source code is governed by a BSD-style license that can be <newline> // found in the LICENSE file. <newline>@@ -394,16 +394,16 @@ void AutocompleteEditViewMac::SetText(const std::wstring& display_text) { <newline>   [as addAttribute:NSParagraphStyleAttributeName value:paragraph_style <newline>              range:NSMakeRange(0, [as length])]; <newline>-  url_parse::Parsed parts; <newline>-  AutocompleteInput::Parse(display_text, model_->GetDesiredTLD(), <newline>-                           &parts, NULL); <newline>-  const bool emphasize = model_->CurrentTextIsURL() && (parts.host.len > 0); <newline>+  url_parse::Component scheme, host; <newline>+  AutocompleteInput::ParseForEmphasizeComponents( <newline>+      display_text, model_->GetDesiredTLD(), &scheme, &host); <newline>+  const bool emphasize = model_->CurrentTextIsURL() && (host.len > 0); <newline>   if (emphasize) { <newline>     [as addAttribute:NSForegroundColorAttributeName value:BaseTextColor() <newline>                range:NSMakeRange(0, [as length])]; <newline>     [as addAttribute:NSForegroundColorAttributeName value:HostTextColor() <newline>-               range:ComponentToNSRange(parts.host)]; <newline>+               range:ComponentToNSRange(host)]; <newline>   } <newline>   // TODO(shess): GTK has this as a member var, figure out why. <newline>@@ -424,7 +424,7 @@ void AutocompleteEditViewMac::SetText(const std::wstring& display_text) { <newline>   } <newline>   // Emphasize the scheme for security UI display purposes (if necessary). <newline>-  if (!model_->user_input_in_progress() && parts.scheme.is_nonempty() && <newline>+  if (!model_->user_input_in_progress() && scheme.is_nonempty() && <newline>       (scheme_security_level != ToolbarModel::NORMAL)) { <newline>     NSColor* color; <newline>     if (scheme_security_level == ToolbarModel::SECURE) { <newline>@@ -434,10 +434,10 @@ void AutocompleteEditViewMac::SetText(const std::wstring& display_text) { <newline>       // Add a strikethrough through the scheme. <newline>       [as addAttribute:NSStrikethroughStyleAttributeName <newline>                  value:[NSNumber numberWithInt:NSUnderlineStyleSingle] <newline>-                 range:ComponentToNSRange(parts.scheme)]; <newline>+                 range:ComponentToNSRange(scheme)]; <newline>     } <newline>     [as addAttribute:NSForegroundColorAttributeName value:color <newline>-               range:ComponentToNSRange(parts.scheme)]; <newline>+               range:ComponentToNSRange(scheme)]; <newline>   } <newline>   [field_ setAttributedStringValue:as];
9ae5b6b2f226ac5c435d30f5492864e3534df1f	fbarchard@chromium.org <fbarchard@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 2 05:30:51 2010 +0000	ffmpeg roll to patch 10 binaries for chromium TEST=none.  should behave same as before but with better security.	35850		http://codereview.chromium.org/660363	svn://svn.chromium.org/chrome/trunk/src@40363 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 2c1782c..5fdcd7a 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -2,7 +2,7 @@ vars = { <newline>   "webkit_trunk": <newline>     "http://svn.webkit.org/repository/webkit/trunk", <newline>   "webkit_revision": "55396", <newline>-  "ffmpeg_revision": "40324", <newline>+  "ffmpeg_revision": "40361", <newline>   "skia_revision": "504", <newline>   "chromium_git": "http://src.chromium.org/git", <newline>   "swig_revision": "37274",
494852e2c7da291fdd1a81922b3229790bff754	fbarchard@chromium.org <fbarchard@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 2 05:30:51 2010 +0000	ffmpeg roll to patch 10 binaries for chromium TEST=none.  should behave same as before but with better security.	35850		http://codereview.chromium.org/660363	svn://svn.chromium.org/chrome/trunk/src@40363 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 2c1782c..5fdcd7a 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -2,7 +2,7 @@ vars = { <newline>   "webkit_trunk": <newline>     "http://svn.webkit.org/repository/webkit/trunk", <newline>   "webkit_revision": "55396", <newline>-  "ffmpeg_revision": "40324", <newline>+  "ffmpeg_revision": "40361", <newline>   "skia_revision": "504", <newline>   "chromium_git": "http://src.chromium.org/git", <newline>   "swig_revision": "37274",
9a30c62001c44d311a9847405c6c06727c621a2	markus@chromium.org <markus@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 24 02:06:06 2010 +0000	Be more restrictive when finding file names for libraries that need patching. This avoids false positives if the directory name matches one of the well-known library names (e.g. ld). False positives not only result in a performance hit at startup, because we are now trying to instrument libraries that don't actually contain any system calls; but even worse than this, we could try to instrument system calls in the sandboxing code itself. And those system calls are deliberately coded so that they will not get rewritten. Fortunately, none of this is a security problem. If we accidentally rewrite system calls that weren't supposed to be rewritten, we will just crash on startup. TEST=the sandbox now works on the buildbots	36133		http://codereview.chromium.org/652188	svn://svn.chromium.org/chrome/trunk/src@39839 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/sandbox/linux/seccomp/sandbox.cc b/sandbox/linux/seccomp/sandbox.cc <newline>index 416502b..ff2b59e 100644 <newline>--- a/sandbox/linux/seccomp/sandbox.cc <newline>+++ b/sandbox/linux/seccomp/sandbox.cc <newline>@@ -474,9 +474,24 @@ void Sandbox::startSandbox() { <newline>     // Intercept system calls in libraries that are known to have them. <newline>     for (Maps::const_iterator iter = maps.begin(); iter != maps.end(); ++iter){ <newline>       Library* library = *iter; <newline>+      const char* mapping = iter.name().c_str(); <newline>+ <newline>+      // Find the actual base name of the mapped library by skipping past any <newline>+      // SPC and forward-slashes. We don't want to accidentally find matches, <newline>+      // because the directory name included part of our well-known lib names. <newline>+      // <newline>+      // Typically, prior to pruning, entries would look something like this: <newline>+      // 08:01 2289011 /lib/libc-2.7.so <newline>+      for (const char *delim = " /"; *delim; ++delim) { <newline>+        const char* skip = strrchr(mapping, *delim); <newline>+        if (skip) { <newline>+          mapping = skip + 1; <newline>+        } <newline>+      } <newline>+ <newline>       for (const char **ptr = libs; *ptr; ptr++) { <newline>-        const char *name = strstr(iter.name().c_str(), *ptr); <newline>-        if (name) { <newline>+        const char *name = strstr(mapping, *ptr); <newline>+        if (name == mapping) { <newline>           char ch = name[strlen(*ptr)]; <newline>           if (ch < 'A' || (ch > 'Z' && ch < 'a') || ch > 'z') { <newline>             if (library->parseElf()) {
0a568f4be1e151b4569b25df5c66f80100de98c	markus@chromium.org <markus@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 24 02:06:06 2010 +0000	Be more restrictive when finding file names for libraries that need patching. This avoids false positives if the directory name matches one of the well-known library names (e.g. ld). False positives not only result in a performance hit at startup, because we are now trying to instrument libraries that don't actually contain any system calls; but even worse than this, we could try to instrument system calls in the sandboxing code itself. And those system calls are deliberately coded so that they will not get rewritten. Fortunately, none of this is a security problem. If we accidentally rewrite system calls that weren't supposed to be rewritten, we will just crash on startup. TEST=the sandbox now works on the buildbots	36133		http://codereview.chromium.org/652188	svn://svn.chromium.org/chrome/trunk/src@39839 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/sandbox/linux/seccomp/sandbox.cc b/sandbox/linux/seccomp/sandbox.cc <newline>index 416502b..ff2b59e 100644 <newline>--- a/sandbox/linux/seccomp/sandbox.cc <newline>+++ b/sandbox/linux/seccomp/sandbox.cc <newline>@@ -474,9 +474,24 @@ void Sandbox::startSandbox() { <newline>     // Intercept system calls in libraries that are known to have them. <newline>     for (Maps::const_iterator iter = maps.begin(); iter != maps.end(); ++iter){ <newline>       Library* library = *iter; <newline>+      const char* mapping = iter.name().c_str(); <newline>+ <newline>+      // Find the actual base name of the mapped library by skipping past any <newline>+      // SPC and forward-slashes. We don't want to accidentally find matches, <newline>+      // because the directory name included part of our well-known lib names. <newline>+      // <newline>+      // Typically, prior to pruning, entries would look something like this: <newline>+      // 08:01 2289011 /lib/libc-2.7.so <newline>+      for (const char *delim = " /"; *delim; ++delim) { <newline>+        const char* skip = strrchr(mapping, *delim); <newline>+        if (skip) { <newline>+          mapping = skip + 1; <newline>+        } <newline>+      } <newline>+ <newline>       for (const char **ptr = libs; *ptr; ptr++) { <newline>-        const char *name = strstr(iter.name().c_str(), *ptr); <newline>-        if (name) { <newline>+        const char *name = strstr(mapping, *ptr); <newline>+        if (name == mapping) { <newline>           char ch = name[strlen(*ptr)]; <newline>           if (ch < 'A' || (ch > 'Z' && ch < 'a') || ch > 'z') { <newline>             if (library->parseElf()) {
96f934d2760c4a32d4500cb2636fee43e16580a	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 23 01:03:10 2010 +0000	Tie the lifetime of persisted transport-security metatdata to clearing cookies, thus giving the user control over it. This involved adding in a "creation" date to the metadata so we can respect the user's choice of how far back to go when deleting browsing data. Care is taken to handle older metadata without the creation date set. Also fix a bug whereby we weren't making sure to persist the removed metadata when it expires. TEST=TransportSecurityStateTest.DeleteSince, TransportSecurityStateTest.SerializeOld	33445		http://codereview.chromium.org/652035	svn://svn.chromium.org/chrome/trunk/src@39684 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state_unittest.cc b/net/base/transport_security_state_unittest.cc <newline>index f52912c..2561b0b 100644 <newline>--- a/net/base/transport_security_state_unittest.cc <newline>+++ b/net/base/transport_security_state_unittest.cc <newline>@@ -190,8 +190,10 @@ TEST_F(TransportSecurityStateTest, Serialise1) { <newline>   scoped_refptr<net::TransportSecurityState> state( <newline>       new net::TransportSecurityState); <newline>   std::string output; <newline>+  bool dirty; <newline>   state->Serialise(&output); <newline>-  EXPECT_TRUE(state->Deserialise(output)); <newline>+  EXPECT_TRUE(state->Deserialise(output, &dirty)); <newline>+  EXPECT_FALSE(dirty); <newline> } <newline> TEST_F(TransportSecurityStateTest, Serialise2) { <newline>@@ -209,8 +211,9 @@ TEST_F(TransportSecurityStateTest, Serialise2) { <newline>   state->EnableHost("google.com", domain_state); <newline>   std::string output; <newline>+  bool dirty; <newline>   state->Serialise(&output); <newline>-  EXPECT_TRUE(state->Deserialise(output)); <newline>+  EXPECT_TRUE(state->Deserialise(output, &dirty)); <newline>   EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "google.com")); <newline>   EXPECT_EQ(domain_state.mode, net::TransportSecurityState::DomainState::MODE_STRICT); <newline>@@ -238,10 +241,50 @@ TEST_F(TransportSecurityStateTest, Serialise3) { <newline>   state->EnableHost("google.com", domain_state); <newline>   std::string output; <newline>+  bool dirty; <newline>   state->Serialise(&output); <newline>-  EXPECT_TRUE(state->Deserialise(output)); <newline>+  EXPECT_TRUE(state->Deserialise(output, &dirty)); <newline>   EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "google.com")); <newline>   EXPECT_EQ(domain_state.mode, <newline>             net::TransportSecurityState::DomainState::MODE_OPPORTUNISTIC); <newline> } <newline>+ <newline>+TEST_F(TransportSecurityStateTest, DeleteSince) { <newline>+  scoped_refptr<net::TransportSecurityState> state( <newline>+      new net::TransportSecurityState); <newline>+ <newline>+  net::TransportSecurityState::DomainState domain_state; <newline>+  const base::Time current_time(base::Time::Now()); <newline>+  const base::Time expiry = current_time + base::TimeDelta::FromSeconds(1000); <newline>+  const base::Time older = current_time - base::TimeDelta::FromSeconds(1000); <newline>+ <newline>+  EXPECT_FALSE(state->IsEnabledForHost(&domain_state, "google.com")); <newline>+  domain_state.mode = net::TransportSecurityState::DomainState::MODE_STRICT; <newline>+  domain_state.expiry = expiry; <newline>+  state->EnableHost("google.com", domain_state); <newline>+ <newline>+  state->DeleteSince(expiry); <newline>+  EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "google.com")); <newline>+  state->DeleteSince(older); <newline>+  EXPECT_FALSE(state->IsEnabledForHost(&domain_state, "google.com")); <newline>+} <newline>+ <newline>+TEST_F(TransportSecurityStateTest, SerialiseOld) { <newline>+  scoped_refptr<net::TransportSecurityState> state( <newline>+      new net::TransportSecurityState); <newline>+  // This is an old-style piece of transport state JSON, which has no creation <newline>+  // date. <newline>+  std::string output = <newline>+      "{ " <newline>+        "\"NiyD+3J1r6z1wjl2n1ALBu94Zj9OsEAMo0kCN8js0Uk=\": {" <newline>+          "\"expiry\": 1266815027.983453, " <newline>+          "\"include_subdomains\": false, " <newline>+          "\"mode\": \"strict\" " <newline>+        "}" <newline>+      "}"; <newline>+  bool dirty; <newline>+  EXPECT_TRUE(state->Deserialise(output, &dirty)); <newline>+  EXPECT_TRUE(dirty); <newline>+} <newline>+
d0d808d8a3d9bc767d01aa1c04c739ea4e22ec8	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 23 01:03:10 2010 +0000	Tie the lifetime of persisted transport-security metatdata to clearing cookies, thus giving the user control over it. This involved adding in a "creation" date to the metadata so we can respect the user's choice of how far back to go when deleting browsing data. Care is taken to handle older metadata without the creation date set. Also fix a bug whereby we weren't making sure to persist the removed metadata when it expires. TEST=TransportSecurityStateTest.DeleteSince, TransportSecurityStateTest.SerializeOld	33445		http://codereview.chromium.org/652035	svn://svn.chromium.org/chrome/trunk/src@39684 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/transport_security_state_unittest.cc b/net/base/transport_security_state_unittest.cc <newline>index f52912c..2561b0b 100644 <newline>--- a/net/base/transport_security_state_unittest.cc <newline>+++ b/net/base/transport_security_state_unittest.cc <newline>@@ -190,8 +190,10 @@ TEST_F(TransportSecurityStateTest, Serialise1) { <newline>   scoped_refptr<net::TransportSecurityState> state( <newline>       new net::TransportSecurityState); <newline>   std::string output; <newline>+  bool dirty; <newline>   state->Serialise(&output); <newline>-  EXPECT_TRUE(state->Deserialise(output)); <newline>+  EXPECT_TRUE(state->Deserialise(output, &dirty)); <newline>+  EXPECT_FALSE(dirty); <newline> } <newline> TEST_F(TransportSecurityStateTest, Serialise2) { <newline>@@ -209,8 +211,9 @@ TEST_F(TransportSecurityStateTest, Serialise2) { <newline>   state->EnableHost("google.com", domain_state); <newline>   std::string output; <newline>+  bool dirty; <newline>   state->Serialise(&output); <newline>-  EXPECT_TRUE(state->Deserialise(output)); <newline>+  EXPECT_TRUE(state->Deserialise(output, &dirty)); <newline>   EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "google.com")); <newline>   EXPECT_EQ(domain_state.mode, net::TransportSecurityState::DomainState::MODE_STRICT); <newline>@@ -238,10 +241,50 @@ TEST_F(TransportSecurityStateTest, Serialise3) { <newline>   state->EnableHost("google.com", domain_state); <newline>   std::string output; <newline>+  bool dirty; <newline>   state->Serialise(&output); <newline>-  EXPECT_TRUE(state->Deserialise(output)); <newline>+  EXPECT_TRUE(state->Deserialise(output, &dirty)); <newline>   EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "google.com")); <newline>   EXPECT_EQ(domain_state.mode, <newline>             net::TransportSecurityState::DomainState::MODE_OPPORTUNISTIC); <newline> } <newline>+ <newline>+TEST_F(TransportSecurityStateTest, DeleteSince) { <newline>+  scoped_refptr<net::TransportSecurityState> state( <newline>+      new net::TransportSecurityState); <newline>+ <newline>+  net::TransportSecurityState::DomainState domain_state; <newline>+  const base::Time current_time(base::Time::Now()); <newline>+  const base::Time expiry = current_time + base::TimeDelta::FromSeconds(1000); <newline>+  const base::Time older = current_time - base::TimeDelta::FromSeconds(1000); <newline>+ <newline>+  EXPECT_FALSE(state->IsEnabledForHost(&domain_state, "google.com")); <newline>+  domain_state.mode = net::TransportSecurityState::DomainState::MODE_STRICT; <newline>+  domain_state.expiry = expiry; <newline>+  state->EnableHost("google.com", domain_state); <newline>+ <newline>+  state->DeleteSince(expiry); <newline>+  EXPECT_TRUE(state->IsEnabledForHost(&domain_state, "google.com")); <newline>+  state->DeleteSince(older); <newline>+  EXPECT_FALSE(state->IsEnabledForHost(&domain_state, "google.com")); <newline>+} <newline>+ <newline>+TEST_F(TransportSecurityStateTest, SerialiseOld) { <newline>+  scoped_refptr<net::TransportSecurityState> state( <newline>+      new net::TransportSecurityState); <newline>+  // This is an old-style piece of transport state JSON, which has no creation <newline>+  // date. <newline>+  std::string output = <newline>+      "{ " <newline>+        "\"NiyD+3J1r6z1wjl2n1ALBu94Zj9OsEAMo0kCN8js0Uk=\": {" <newline>+          "\"expiry\": 1266815027.983453, " <newline>+          "\"include_subdomains\": false, " <newline>+          "\"mode\": \"strict\" " <newline>+        "}" <newline>+      "}"; <newline>+  bool dirty; <newline>+  EXPECT_TRUE(state->Deserialise(output, &dirty)); <newline>+  EXPECT_TRUE(dirty); <newline>+} <newline>+
40277c85dc23f0f60104bdd25c19b7c51ae2b93	rolandsteiner@chromium.org <rolandsteiner@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 19 14:32:35 2010 +0000	Revert some additions to test_expectations.txt made in http://codereview.chromium.org/651017 Reason: the CL that caused those crashes was reverted, the affected layout tests no longer crash: http/tests/security/cross-frame-access-custom.html http/tests/security/cross-frame-access-get.html http/tests/security/cross-frame-access-name-getter.html http/tests/security/xss-DENIED-htmlelelment-with-iframe-proto.html fast/js/Object-defineProperty.html TEST=see above TBR=agl,jorlow	ROLANDSTEINER WIN LINUX RELEASE : editing/selection/extend-selection.html = TEXT		http://codereview.chromium.org/651032	svn://svn.chromium.org/chrome/trunk/src@39443 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 356fc0f..3d64c24 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2326,6 +2326,7 @@ BUG21958 MAC : svg/hixie/error/012.xml = FAIL <newline> // WebKit merge 48500:48585, newly implemented Object.defineProperty. <newline>+BUG22526 : fast/js/Object-defineProperty.html = FAIL <newline> // WebKit merge 48500:48585, due to newly added support for MathML. <newline>@@ -2757,13 +2758,16 @@ BUG30939 : svg/filters/filter-clip.svg = IMAGE+TEXT <newline> // Newly added test in r52202 <newline>- <newline> // WebKit roll 52468->52535 <newline>+// WebKit roll 52633 -> 52667 <newline>+// On Linux, sometimes the text dump matches. Not sure why. <newline>+BUG_DIMICH LINUX : svg/custom/resource-invalidate-on-target-update.svg = IMAGE+TEXT IMAGE <newline>+ <newline> // WebKit roll 52769 -> 52793 <newline>@@ -2988,16 +2992,3 @@ BUG_ROLANDSTEINER WIN LINUX : fast/repaint/selection-gap-overflow-scroll-2.html <newline> // BUG24182 SLOW DEBUG : editing/selection/extend-selection.html = PASS <newline>- <newline>-// Crashes after WebKit roll to 54996. Used to be: <newline>-//     WebKit roll 52633 -> 52667 <newline>-//     On Linux, sometimes the text dump matches. Not sure why. <newline>-//     BUG_DIMICH LINUX : svg/custom/resource-invalidate-on-target-update.svg = IMAGE+TEXT IMAGE <newline>-BUG36236 WIN LINUX : svg/custom/resource-invalidate-on-target-update.svg = CRASH <newline>-BUG36236 : http/tests/security/cross-frame-access-custom.html = CRASH <newline>-BUG36236 : http/tests/security/cross-frame-access-get.html = CRASH <newline>-BUG36236 : http/tests/security/cross-frame-access-name-getter.html = CRASH <newline>-BUG36236 : http/tests/security/xss-DENIED-htmlelelment-with-iframe-proto.html = CRASH <newline>-//     BUG22526 : fast/js/Object-defineProperty.html = FAIL <newline>-BUG36236 : fast/js/Object-defineProperty.html = CRASH <newline>-
b6369f6588d2498eb473299e21fd9f471904e9b	rolandsteiner@chromium.org <rolandsteiner@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 19 14:32:35 2010 +0000	Revert some additions to test_expectations.txt made in http://codereview.chromium.org/651017 Reason: the CL that caused those crashes was reverted, the affected layout tests no longer crash: http/tests/security/cross-frame-access-custom.html http/tests/security/cross-frame-access-get.html http/tests/security/cross-frame-access-name-getter.html http/tests/security/xss-DENIED-htmlelelment-with-iframe-proto.html fast/js/Object-defineProperty.html TEST=see above TBR=agl,jorlow	ROLANDSTEINER WIN LINUX RELEASE : editing/selection/extend-selection.html = TEXT		http://codereview.chromium.org/651032	svn://svn.chromium.org/chrome/trunk/src@39443 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 356fc0f..3d64c24 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2326,6 +2326,7 @@ BUG21958 MAC : svg/hixie/error/012.xml = FAIL <newline> // WebKit merge 48500:48585, newly implemented Object.defineProperty. <newline>+BUG22526 : fast/js/Object-defineProperty.html = FAIL <newline> // WebKit merge 48500:48585, due to newly added support for MathML. <newline>@@ -2757,13 +2758,16 @@ BUG30939 : svg/filters/filter-clip.svg = IMAGE+TEXT <newline> // Newly added test in r52202 <newline>- <newline> // WebKit roll 52468->52535 <newline>+// WebKit roll 52633 -> 52667 <newline>+// On Linux, sometimes the text dump matches. Not sure why. <newline>+BUG_DIMICH LINUX : svg/custom/resource-invalidate-on-target-update.svg = IMAGE+TEXT IMAGE <newline>+ <newline> // WebKit roll 52769 -> 52793 <newline>@@ -2988,16 +2992,3 @@ BUG_ROLANDSTEINER WIN LINUX : fast/repaint/selection-gap-overflow-scroll-2.html <newline> // BUG24182 SLOW DEBUG : editing/selection/extend-selection.html = PASS <newline>- <newline>-// Crashes after WebKit roll to 54996. Used to be: <newline>-//     WebKit roll 52633 -> 52667 <newline>-//     On Linux, sometimes the text dump matches. Not sure why. <newline>-//     BUG_DIMICH LINUX : svg/custom/resource-invalidate-on-target-update.svg = IMAGE+TEXT IMAGE <newline>-BUG36236 WIN LINUX : svg/custom/resource-invalidate-on-target-update.svg = CRASH <newline>-BUG36236 : http/tests/security/cross-frame-access-custom.html = CRASH <newline>-BUG36236 : http/tests/security/cross-frame-access-get.html = CRASH <newline>-BUG36236 : http/tests/security/cross-frame-access-name-getter.html = CRASH <newline>-BUG36236 : http/tests/security/xss-DENIED-htmlelelment-with-iframe-proto.html = CRASH <newline>-//     BUG22526 : fast/js/Object-defineProperty.html = FAIL <newline>-BUG36236 : fast/js/Object-defineProperty.html = CRASH <newline>-
4359f56529f1dd963457fad24431d6994ea4456	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 18 04:18:25 2010 +0000	Chromium plumbing for new file:// security flag, including test_shell support. This change does not alter behaviour but will enable a WebKit test to be written. TEST=WebKit test pending TBR=abarth	4197		http://codereview.chromium.org/625009	svn://svn.chromium.org/chrome/trunk/src@39334 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_shell.cc b/webkit/tools/test_shell/test_shell.cc <newline>index 8d37a81..f7449b5 100644 <newline>--- a/webkit/tools/test_shell/test_shell.cc <newline>+++ b/webkit/tools/test_shell/test_shell.cc <newline>@@ -464,6 +464,7 @@ void TestShell::ResetWebPreferences() { <newline>         web_prefs_->local_storage_enabled = true; <newline>         web_prefs_->application_cache_enabled = true; <newline>         web_prefs_->databases_enabled = true; <newline>+        web_prefs_->allow_file_access_from_file_urls = true; <newline>         // LayoutTests were written with Safari Mac in mind which does not allow <newline>         // tabbing to links by default. <newline>         web_prefs_->tabs_to_links = false;
ed2242142e1dda956947ce6bf2429fe44922c1c	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 18 04:18:25 2010 +0000	Chromium plumbing for new file:// security flag, including test_shell support. This change does not alter behaviour but will enable a WebKit test to be written. TEST=WebKit test pending TBR=abarth	4197		http://codereview.chromium.org/625009	svn://svn.chromium.org/chrome/trunk/src@39334 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_shell.cc b/webkit/tools/test_shell/test_shell.cc <newline>index 8d37a81..f7449b5 100644 <newline>--- a/webkit/tools/test_shell/test_shell.cc <newline>+++ b/webkit/tools/test_shell/test_shell.cc <newline>@@ -464,6 +464,7 @@ void TestShell::ResetWebPreferences() { <newline>         web_prefs_->local_storage_enabled = true; <newline>         web_prefs_->application_cache_enabled = true; <newline>         web_prefs_->databases_enabled = true; <newline>+        web_prefs_->allow_file_access_from_file_urls = true; <newline>         // LayoutTests were written with Safari Mac in mind which does not allow <newline>         // tabbing to links by default. <newline>         web_prefs_->tabs_to_links = false;
733799e3da08d3de5ac89855ec115dc01b40367	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 18 00:07:28 2010 +0000	Revert 39287 - Chromium pieces to use the WebKit support for isolation file:// documents in their own unique domains. By default, we use this isolation for security. We provide a command line switch override for developers: allowfileaccessfromfiles TEST=WebKit test pending TBR=abarth@chromium.org	4197		http://codereview.chromium.org/625007	svn://svn.chromium.org/chrome/trunk/src@39304 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_shell.cc b/webkit/tools/test_shell/test_shell.cc <newline>index f7449b5..8d37a81 100644 <newline>--- a/webkit/tools/test_shell/test_shell.cc <newline>+++ b/webkit/tools/test_shell/test_shell.cc <newline>@@ -464,7 +464,6 @@ void TestShell::ResetWebPreferences() { <newline>         web_prefs_->local_storage_enabled = true; <newline>         web_prefs_->application_cache_enabled = true; <newline>         web_prefs_->databases_enabled = true; <newline>-        web_prefs_->allow_file_access_from_file_urls = true; <newline>         // LayoutTests were written with Safari Mac in mind which does not allow <newline>         // tabbing to links by default. <newline>         web_prefs_->tabs_to_links = false;
4202fab4fd326f9e18d60b1a9e37159714688a3	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 18 00:07:28 2010 +0000	Revert 39287 - Chromium pieces to use the WebKit support for isolation file:// documents in their own unique domains. By default, we use this isolation for security. We provide a command line switch override for developers: allowfileaccessfromfiles TEST=WebKit test pending TBR=abarth@chromium.org	4197		http://codereview.chromium.org/625007	svn://svn.chromium.org/chrome/trunk/src@39304 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_shell.cc b/webkit/tools/test_shell/test_shell.cc <newline>index f7449b5..8d37a81 100644 <newline>--- a/webkit/tools/test_shell/test_shell.cc <newline>+++ b/webkit/tools/test_shell/test_shell.cc <newline>@@ -464,7 +464,6 @@ void TestShell::ResetWebPreferences() { <newline>         web_prefs_->local_storage_enabled = true; <newline>         web_prefs_->application_cache_enabled = true; <newline>         web_prefs_->databases_enabled = true; <newline>-        web_prefs_->allow_file_access_from_file_urls = true; <newline>         // LayoutTests were written with Safari Mac in mind which does not allow <newline>         // tabbing to links by default. <newline>         web_prefs_->tabs_to_links = false;
0875906db9b24450a22a992c4eac32529f19816	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 17 22:58:43 2010 +0000	Chromium pieces to use the WebKit support for isolation file:// documents in their own unique domains. By default, we use this isolation for security. We provide a command line switch override for developers: --allow-file-access-from-files TEST=WebKit test pending	4197		http://codereview.chromium.org/625001	svn://svn.chromium.org/chrome/trunk/src@39287 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_shell.cc b/webkit/tools/test_shell/test_shell.cc <newline>index 8d37a81..f7449b5 100644 <newline>--- a/webkit/tools/test_shell/test_shell.cc <newline>+++ b/webkit/tools/test_shell/test_shell.cc <newline>@@ -464,6 +464,7 @@ void TestShell::ResetWebPreferences() { <newline>         web_prefs_->local_storage_enabled = true; <newline>         web_prefs_->application_cache_enabled = true; <newline>         web_prefs_->databases_enabled = true; <newline>+        web_prefs_->allow_file_access_from_file_urls = true; <newline>         // LayoutTests were written with Safari Mac in mind which does not allow <newline>         // tabbing to links by default. <newline>         web_prefs_->tabs_to_links = false;
4c504386e206b172696538f02ae3df7217c6ee2	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 17 22:58:43 2010 +0000	Chromium pieces to use the WebKit support for isolation file:// documents in their own unique domains. By default, we use this isolation for security. We provide a command line switch override for developers: --allow-file-access-from-files TEST=WebKit test pending	4197		http://codereview.chromium.org/625001	svn://svn.chromium.org/chrome/trunk/src@39287 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_shell.cc b/webkit/tools/test_shell/test_shell.cc <newline>index 8d37a81..f7449b5 100644 <newline>--- a/webkit/tools/test_shell/test_shell.cc <newline>+++ b/webkit/tools/test_shell/test_shell.cc <newline>@@ -464,6 +464,7 @@ void TestShell::ResetWebPreferences() { <newline>         web_prefs_->local_storage_enabled = true; <newline>         web_prefs_->application_cache_enabled = true; <newline>         web_prefs_->databases_enabled = true; <newline>+        web_prefs_->allow_file_access_from_file_urls = true; <newline>         // LayoutTests were written with Safari Mac in mind which does not allow <newline>         // tabbing to links by default. <newline>         web_prefs_->tabs_to_links = false;
12e3c49d18da8e4dda435b0cc611c4e856d1c83	cira@chromium.org <cira@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 11 00:20:09 2010 +0000	Replace __MSG_some_name__ template within extension css files with localized messages. We avoid replacing messages within html and js extension files for security reasons. Also, developers can already localize messages in html/js using chrome.i18n.getMessage calls. TEST=Localize extension, try body{direction: __MSG_@@bidi_reversed_dir__;} in popup.css, while using non-rtl locale. Text should be alligned to the right (as if we were using rtl locale).	26144		http://codereview.chromium.org/570007	svn://svn.chromium.org/chrome/trunk/src@38717 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/extensions/renderer_extension_bindings.cc b/chrome/renderer/extensions/renderer_extension_bindings.cc <newline>index 54231b6..2f50143 100644 <newline>--- a/chrome/renderer/extensions/renderer_extension_bindings.cc <newline>+++ b/chrome/renderer/extensions/renderer_extension_bindings.cc <newline>@@ -35,12 +35,6 @@ using bindings_utils::ExtensionBase; <newline> namespace { <newline>-// A map of message name to message. <newline>-typedef std::map<std::string, std::string> L10nMessagesMap; <newline>- <newline>-// A map of extension ID to l10n message map. <newline>-typedef std::map<std::string, L10nMessagesMap > ExtensionToL10nMessagesMap; <newline>- <newline> struct ExtensionData { <newline>   struct PortData { <newline>     int ref_count;  // how many contexts have a handle to this port <newline>@@ -48,8 +42,6 @@ struct ExtensionData { <newline>     PortData() : ref_count(0), disconnected(false) {} <newline>   }; <newline>   std::map<int, PortData> ports;  // port ID -> data <newline>-  // Maps extension ID to message map. <newline>-  ExtensionToL10nMessagesMap extension_l10n_messages_map_; <newline> }; <newline> static bool HasPortData(int port_id) { <newline>@@ -65,21 +57,6 @@ static void ClearPortData(int port_id) { <newline>   Singleton<ExtensionData>::get()->ports.erase(port_id); <newline> } <newline>-static ExtensionToL10nMessagesMap* GetExtensionToL10nMessagesMap() { <newline>-  return &Singleton<ExtensionData>()->extension_l10n_messages_map_; <newline>-} <newline>- <newline>-static L10nMessagesMap* GetL10nMessagesMap(const std::string extension_id) { <newline>-  ExtensionToL10nMessagesMap::iterator it = <newline>-      Singleton<ExtensionData>()->extension_l10n_messages_map_.find( <newline>-          extension_id); <newline>-  if (it != Singleton<ExtensionData>()->extension_l10n_messages_map_.end()) { <newline>-    return &(it->second); <newline>-  } else { <newline>-    return NULL; <newline>-  } <newline>-} <newline>- <newline> const char kPortClosedError[] = "Attempting to use a disconnected port object"; <newline> const char* kExtensionDeps[] = { EventBindings::kName }; <newline>@@ -230,8 +207,6 @@ class ExtensionImpl : public ExtensionBase { <newline>       l10n_messages_map[extension_id] = messages; <newline>       l10n_messages = GetL10nMessagesMap(extension_id); <newline>-      if (!l10n_messages) <newline>-        return v8::Undefined(); <newline>     } <newline>     std::string message_name = *v8::String::AsciiValue(args[0]);
e07f78cf624f3ab8f14a21d80c8999595da21ea	cira@chromium.org <cira@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 11 00:20:09 2010 +0000	Replace __MSG_some_name__ template within extension css files with localized messages. We avoid replacing messages within html and js extension files for security reasons. Also, developers can already localize messages in html/js using chrome.i18n.getMessage calls. TEST=Localize extension, try body{direction: __MSG_@@bidi_reversed_dir__;} in popup.css, while using non-rtl locale. Text should be alligned to the right (as if we were using rtl locale).	26144		http://codereview.chromium.org/570007	svn://svn.chromium.org/chrome/trunk/src@38717 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/extensions/renderer_extension_bindings.cc b/chrome/renderer/extensions/renderer_extension_bindings.cc <newline>index 54231b6..2f50143 100644 <newline>--- a/chrome/renderer/extensions/renderer_extension_bindings.cc <newline>+++ b/chrome/renderer/extensions/renderer_extension_bindings.cc <newline>@@ -35,12 +35,6 @@ using bindings_utils::ExtensionBase; <newline> namespace { <newline>-// A map of message name to message. <newline>-typedef std::map<std::string, std::string> L10nMessagesMap; <newline>- <newline>-// A map of extension ID to l10n message map. <newline>-typedef std::map<std::string, L10nMessagesMap > ExtensionToL10nMessagesMap; <newline>- <newline> struct ExtensionData { <newline>   struct PortData { <newline>     int ref_count;  // how many contexts have a handle to this port <newline>@@ -48,8 +42,6 @@ struct ExtensionData { <newline>     PortData() : ref_count(0), disconnected(false) {} <newline>   }; <newline>   std::map<int, PortData> ports;  // port ID -> data <newline>-  // Maps extension ID to message map. <newline>-  ExtensionToL10nMessagesMap extension_l10n_messages_map_; <newline> }; <newline> static bool HasPortData(int port_id) { <newline>@@ -65,21 +57,6 @@ static void ClearPortData(int port_id) { <newline>   Singleton<ExtensionData>::get()->ports.erase(port_id); <newline> } <newline>-static ExtensionToL10nMessagesMap* GetExtensionToL10nMessagesMap() { <newline>-  return &Singleton<ExtensionData>()->extension_l10n_messages_map_; <newline>-} <newline>- <newline>-static L10nMessagesMap* GetL10nMessagesMap(const std::string extension_id) { <newline>-  ExtensionToL10nMessagesMap::iterator it = <newline>-      Singleton<ExtensionData>()->extension_l10n_messages_map_.find( <newline>-          extension_id); <newline>-  if (it != Singleton<ExtensionData>()->extension_l10n_messages_map_.end()) { <newline>-    return &(it->second); <newline>-  } else { <newline>-    return NULL; <newline>-  } <newline>-} <newline>- <newline> const char kPortClosedError[] = "Attempting to use a disconnected port object"; <newline> const char* kExtensionDeps[] = { EventBindings::kName }; <newline>@@ -230,8 +207,6 @@ class ExtensionImpl : public ExtensionBase { <newline>       l10n_messages_map[extension_id] = messages; <newline>       l10n_messages = GetL10nMessagesMap(extension_id); <newline>-      if (!l10n_messages) <newline>-        return v8::Undefined(); <newline>     } <newline>     std::string message_name = *v8::String::AsciiValue(args[0]);
2e6b1c2d7e83279533ff415e4c538b1c3a2102a	mattm@chromium.org <mattm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 10 23:47:58 2010 +0000	Linux: fix clicking on security or blocked contents of non-active window showing wrong data. Change the location bar code on all platforms to not use BrowserList::GetLastActive. Makes GetTabContents part of the LocationBar interface. TEST=open two windows that show security or blocked popups.  click the icon in the non-focused one.	none		http://codereview.chromium.org/573038	svn://svn.chromium.org/chrome/trunk/src@38705 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/views/location_bar_view.h b/chrome/browser/views/location_bar_view.h <newline>index 4554efb..d2fefaa 100644 <newline>--- a/chrome/browser/views/location_bar_view.h <newline>+++ b/chrome/browser/views/location_bar_view.h <newline>@@ -102,8 +102,7 @@ class LocationBarView : public LocationBar, <newline>   void SetProfile(Profile* profile); <newline>   Profile* profile() { return profile_; } <newline>-  // Returns the current TabContents.  This should only be used by the <newline>-  // ContentBlockedImageView. <newline>+  // Returns the current TabContents. <newline>   TabContents* GetTabContents() const; <newline>   // Sets |preview_enabled| for the PageAction View associated with this <newline>@@ -328,7 +327,8 @@ class LocationBarView : public LocationBar, <newline>       WARNING <newline>     }; <newline>-    SecurityImageView(Profile* profile, <newline>+    SecurityImageView(const LocationBarView* parent, <newline>+                      Profile* profile, <newline>                       ToolbarModel* model_, <newline>                       const BubblePositioner* bubble_positioner); <newline>     virtual ~SecurityImageView(); <newline>@@ -354,6 +354,9 @@ class LocationBarView : public LocationBar, <newline>     // image. <newline>     ShowInfoBubbleTask* show_info_bubble_task_; <newline>+    // The owning LocationBarView. <newline>+    const LocationBarView* parent_; <newline>+ <newline>     Profile* profile_; <newline>     ToolbarModel* model_;
37d302d78aa069b0349c7bb5973a928de7c17ea	mattm@chromium.org <mattm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 10 23:47:58 2010 +0000	Linux: fix clicking on security or blocked contents of non-active window showing wrong data. Change the location bar code on all platforms to not use BrowserList::GetLastActive. Makes GetTabContents part of the LocationBar interface. TEST=open two windows that show security or blocked popups.  click the icon in the non-focused one.	none		http://codereview.chromium.org/573038	svn://svn.chromium.org/chrome/trunk/src@38705 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/views/location_bar_view.h b/chrome/browser/views/location_bar_view.h <newline>index 4554efb..d2fefaa 100644 <newline>--- a/chrome/browser/views/location_bar_view.h <newline>+++ b/chrome/browser/views/location_bar_view.h <newline>@@ -102,8 +102,7 @@ class LocationBarView : public LocationBar, <newline>   void SetProfile(Profile* profile); <newline>   Profile* profile() { return profile_; } <newline>-  // Returns the current TabContents.  This should only be used by the <newline>-  // ContentBlockedImageView. <newline>+  // Returns the current TabContents. <newline>   TabContents* GetTabContents() const; <newline>   // Sets |preview_enabled| for the PageAction View associated with this <newline>@@ -328,7 +327,8 @@ class LocationBarView : public LocationBar, <newline>       WARNING <newline>     }; <newline>-    SecurityImageView(Profile* profile, <newline>+    SecurityImageView(const LocationBarView* parent, <newline>+                      Profile* profile, <newline>                       ToolbarModel* model_, <newline>                       const BubblePositioner* bubble_positioner); <newline>     virtual ~SecurityImageView(); <newline>@@ -354,6 +354,9 @@ class LocationBarView : public LocationBar, <newline>     // image. <newline>     ShowInfoBubbleTask* show_info_bubble_task_; <newline>+    // The owning LocationBarView. <newline>+    const LocationBarView* parent_; <newline>+ <newline>     Profile* profile_; <newline>     ToolbarModel* model_;
0cefc3a800beaf19dc9635668b116daaceb9e03	mbelshe@chromium.org <mbelshe@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 9 01:06:38 2010 +0000	Change the javascript context used by the loadtimes extension.  It should be using the CurrentContext, not the EnteredContext so that it grabs the right object based on the frame being called. The security of this object is not in question - access to the window itself is already protected from XSS access. TEST=none	none		http://codereview.chromium.org/593003	svn://svn.chromium.org/chrome/trunk/src@38426 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/loadtimes_extension_bindings.cc b/chrome/renderer/loadtimes_extension_bindings.cc <newline>index 33d46d7..c43cd95 100644 <newline>--- a/chrome/renderer/loadtimes_extension_bindings.cc <newline>+++ b/chrome/renderer/loadtimes_extension_bindings.cc <newline>@@ -95,7 +95,7 @@ class LoadTimesExtensionWrapper : public v8::Extension { <newline>   } <newline>   static v8::Handle<v8::Value> GetLoadTimes(const v8::Arguments& args) { <newline>-    WebFrame* frame = WebFrame::frameForEnteredContext(); <newline>+    WebFrame* frame = WebFrame::frameForCurrentContext(); <newline>     if (frame) { <newline>       WebDataSource* data_source = frame->dataSource(); <newline>       if (data_source) { <newline>@@ -138,7 +138,7 @@ class LoadTimesExtensionWrapper : public v8::Extension { <newline>   } <newline>   static v8::Handle<v8::Value> GetCSI(const v8::Arguments& args) { <newline>-    WebFrame* frame = WebFrame::frameForEnteredContext(); <newline>+    WebFrame* frame = WebFrame::frameForCurrentContext(); <newline>     if (frame) { <newline>       WebDataSource* data_source = frame->dataSource(); <newline>       if (data_source) {
9997c83d8091f77bb5f419e05cae0369e4ceb33	mbelshe@chromium.org <mbelshe@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 9 01:06:38 2010 +0000	Change the javascript context used by the loadtimes extension.  It should be using the CurrentContext, not the EnteredContext so that it grabs the right object based on the frame being called. The security of this object is not in question - access to the window itself is already protected from XSS access. TEST=none	none		http://codereview.chromium.org/593003	svn://svn.chromium.org/chrome/trunk/src@38426 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/loadtimes_extension_bindings.cc b/chrome/renderer/loadtimes_extension_bindings.cc <newline>index 33d46d7..c43cd95 100644 <newline>--- a/chrome/renderer/loadtimes_extension_bindings.cc <newline>+++ b/chrome/renderer/loadtimes_extension_bindings.cc <newline>@@ -95,7 +95,7 @@ class LoadTimesExtensionWrapper : public v8::Extension { <newline>   } <newline>   static v8::Handle<v8::Value> GetLoadTimes(const v8::Arguments& args) { <newline>-    WebFrame* frame = WebFrame::frameForEnteredContext(); <newline>+    WebFrame* frame = WebFrame::frameForCurrentContext(); <newline>     if (frame) { <newline>       WebDataSource* data_source = frame->dataSource(); <newline>       if (data_source) { <newline>@@ -138,7 +138,7 @@ class LoadTimesExtensionWrapper : public v8::Extension { <newline>   } <newline>   static v8::Handle<v8::Value> GetCSI(const v8::Arguments& args) { <newline>-    WebFrame* frame = WebFrame::frameForEnteredContext(); <newline>+    WebFrame* frame = WebFrame::frameForCurrentContext(); <newline>     if (frame) { <newline>       WebDataSource* data_source = frame->dataSource(); <newline>       if (data_source) {
8f135342cc6cc9dbd785766c07706e125c7eb42	erg@google.com <erg@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 26 20:19:29 2010 +0000	Associate popups with the top level frame instead of the security origin. No longer send the creator from the renderer to the browser since this was all it was used for. TEST=none	none		http://codereview.chromium.org/543199	svn://svn.chromium.org/chrome/trunk/src@37143 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/render_view.cc b/chrome/renderer/render_view.cc <newline>index e56673e..784849d 100644 <newline>--- a/chrome/renderer/render_view.cc <newline>+++ b/chrome/renderer/render_view.cc <newline>@@ -1883,7 +1883,7 @@ void RenderView::show(WebNavigationPolicy policy) { <newline>   // browser process will impose a default position otherwise. <newline>   Send(new ViewHostMsg_ShowView(opener_id_, routing_id_, <newline>       NavigationPolicyToDisposition(policy), initial_pos_, <newline>-      opened_by_user_gesture_, creator_url_)); <newline>+      opened_by_user_gesture_)); <newline>   SetPendingWindowRect(initial_pos_); <newline> }
e7414aeab90afaeeb7b29cfde1ce19d90529a37	erg@google.com <erg@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 26 20:19:29 2010 +0000	Associate popups with the top level frame instead of the security origin. No longer send the creator from the renderer to the browser since this was all it was used for. TEST=none	none		http://codereview.chromium.org/543199	svn://svn.chromium.org/chrome/trunk/src@37143 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/render_view.cc b/chrome/renderer/render_view.cc <newline>index e56673e..784849d 100644 <newline>--- a/chrome/renderer/render_view.cc <newline>+++ b/chrome/renderer/render_view.cc <newline>@@ -1883,7 +1883,7 @@ void RenderView::show(WebNavigationPolicy policy) { <newline>   // browser process will impose a default position otherwise. <newline>   Send(new ViewHostMsg_ShowView(opener_id_, routing_id_, <newline>       NavigationPolicyToDisposition(policy), initial_pos_, <newline>-      opened_by_user_gesture_, creator_url_)); <newline>+      opened_by_user_gesture_)); <newline>   SetPendingWindowRect(initial_pos_); <newline> }
7aeb636e8a770b5ad16d37f6caf05798086e613	jschuh@chromium.org <jschuh@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jan 15 20:03:29 2010 +0000	Make --app switch URL restrictions match normal command line restrictions. My change for issue 9862 made --app switch more restrictive than for normal command line URLs. This doesn't seem to have any additional security benefit and breaks stand-alone chrome extensions. So, I'm removing the additional restrictions on the --app URLs. TEST=None.	32377		http://codereview.chromium.org/545082	svn://svn.chromium.org/chrome/trunk/src@36395 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/browser_init.cc b/chrome/browser/browser_init.cc <newline>index e6739f9..9406d6d 100644 <newline>--- a/chrome/browser/browser_init.cc <newline>+++ b/chrome/browser/browser_init.cc <newline>@@ -506,9 +506,9 @@ bool BrowserInit::LaunchWithProfile::OpenApplicationURL(Profile* profile) { <newline>   // Restrict allowed URLs for --app switch. <newline>   if (!url.is_empty() && url.is_valid()) { <newline>-    if (url.SchemeIs(chrome::kHttpsScheme) || <newline>-        url.SchemeIs(chrome::kHttpScheme) || <newline>-        url.SchemeIs(chrome::kFtpScheme) || <newline>+    ChildProcessSecurityPolicy *policy = <newline>+        ChildProcessSecurityPolicy::GetInstance(); <newline>+    if (policy->IsWebSafeScheme(url.scheme()) || <newline>         url.SchemeIs(chrome::kFileScheme)) { <newline>       Browser::OpenApplicationWindow(profile, url); <newline>       return true;
c6df552dbac7a325777ba6f6ff1e739200177a6	jschuh@chromium.org <jschuh@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jan 15 20:03:29 2010 +0000	Make --app switch URL restrictions match normal command line restrictions. My change for issue 9862 made --app switch more restrictive than for normal command line URLs. This doesn't seem to have any additional security benefit and breaks stand-alone chrome extensions. So, I'm removing the additional restrictions on the --app URLs. TEST=None.	32377		http://codereview.chromium.org/545082	svn://svn.chromium.org/chrome/trunk/src@36395 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/browser_init.cc b/chrome/browser/browser_init.cc <newline>index e6739f9..9406d6d 100644 <newline>--- a/chrome/browser/browser_init.cc <newline>+++ b/chrome/browser/browser_init.cc <newline>@@ -506,9 +506,9 @@ bool BrowserInit::LaunchWithProfile::OpenApplicationURL(Profile* profile) { <newline>   // Restrict allowed URLs for --app switch. <newline>   if (!url.is_empty() && url.is_valid()) { <newline>-    if (url.SchemeIs(chrome::kHttpsScheme) || <newline>-        url.SchemeIs(chrome::kHttpScheme) || <newline>-        url.SchemeIs(chrome::kFtpScheme) || <newline>+    ChildProcessSecurityPolicy *policy = <newline>+        ChildProcessSecurityPolicy::GetInstance(); <newline>+    if (policy->IsWebSafeScheme(url.scheme()) || <newline>         url.SchemeIs(chrome::kFileScheme)) { <newline>       Browser::OpenApplicationWindow(profile, url); <newline>       return true;
09107195687915b1b7b3fce3b17e5c0a68a98bf	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jan 15 18:29:15 2010 +0000	Support the ECC cipher suites added in Mac OS X 10.6. Disable weak cipher suites (< 80 bits of security), anonymous cipher suites, and FORTEZZA and IDEA cipher suites. R=mark TEST=Visit https://sa.www4.irs.gov/modiein/individual/index.jsp.  We should be able to load the page rather than getting the ERR_UNEXPECTED error.	30682,30160,31995		http://codereview.chromium.org/545036	svn://svn.chromium.org/chrome/trunk/src@36373 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/socket/ssl_client_socket_mac.cc b/net/socket/ssl_client_socket_mac.cc <newline>index 4931742..feed3b5 100644 <newline>--- a/net/socket/ssl_client_socket_mac.cc <newline>+++ b/net/socket/ssl_client_socket_mac.cc <newline>@@ -103,6 +103,39 @@ enum { <newline>   errSSLServerAuthCompletedFlag = -9841 <newline> }; <newline>+// When compiled against the Mac OS X 10.5 SDK, define symbolic constants for <newline>+// cipher suites added in Mac OS X 10.6. <newline>+#if MAC_OS_X_VERSION_MAX_ALLOWED <= MAC_OS_X_VERSION_10_5 <newline>+enum { <newline>+  // ECC cipher suites from RFC 4492. <newline>+  TLS_ECDH_ECDSA_WITH_NULL_SHA           = 0xC001, <newline>+  TLS_ECDH_ECDSA_WITH_RC4_128_SHA        = 0xC002, <newline>+  TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA   = 0xC003, <newline>+  TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA    = 0xC004, <newline>+  TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA    = 0xC005, <newline>+  TLS_ECDHE_ECDSA_WITH_NULL_SHA          = 0xC006, <newline>+  TLS_ECDHE_ECDSA_WITH_RC4_128_SHA       = 0xC007, <newline>+  TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA  = 0xC008, <newline>+  TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA   = 0xC009, <newline>+  TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA   = 0xC00A, <newline>+  TLS_ECDH_RSA_WITH_NULL_SHA             = 0xC00B, <newline>+  TLS_ECDH_RSA_WITH_RC4_128_SHA          = 0xC00C, <newline>+  TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA     = 0xC00D, <newline>+  TLS_ECDH_RSA_WITH_AES_128_CBC_SHA      = 0xC00E, <newline>+  TLS_ECDH_RSA_WITH_AES_256_CBC_SHA      = 0xC00F, <newline>+  TLS_ECDHE_RSA_WITH_NULL_SHA            = 0xC010, <newline>+  TLS_ECDHE_RSA_WITH_RC4_128_SHA         = 0xC011, <newline>+  TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA    = 0xC012, <newline>+  TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA     = 0xC013, <newline>+  TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA     = 0xC014, <newline>+  TLS_ECDH_anon_WITH_NULL_SHA            = 0xC015, <newline>+  TLS_ECDH_anon_WITH_RC4_128_SHA         = 0xC016, <newline>+  TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA    = 0xC017, <newline>+  TLS_ECDH_anon_WITH_AES_128_CBC_SHA     = 0xC018, <newline>+  TLS_ECDH_anon_WITH_AES_256_CBC_SHA     = 0xC019, <newline>+}; <newline>+#endif <newline>+ <newline> typedef OSStatus (*SSLSetSessionOptionFuncPtr)(SSLContextRef, <newline>                                                SSLSetSessionOptionType, <newline>                                                Boolean); <newline>@@ -212,6 +245,11 @@ int KeySizeOfCipherSuite(SSLCipherSuite suite) { <newline>     case SSL_RSA_WITH_NULL_MD5: <newline>     case SSL_RSA_WITH_NULL_SHA:                  // ** <newline>     case SSL_FORTEZZA_DMS_WITH_NULL_SHA:         // ** <newline>+    case TLS_ECDH_ECDSA_WITH_NULL_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_NULL_SHA: <newline>+    case TLS_ECDH_RSA_WITH_NULL_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_NULL_SHA: <newline>+    case TLS_ECDH_anon_WITH_NULL_SHA: <newline>       return 0; <newline>     case SSL_RSA_EXPORT_WITH_RC4_40_MD5: <newline>     case SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5: <newline>@@ -238,14 +276,24 @@ int KeySizeOfCipherSuite(SSLCipherSuite suite) { <newline>     case SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA: <newline>     case SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA: <newline>     case SSL_DH_anon_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA: <newline>       return 112; <newline>     case SSL_RSA_WITH_RC4_128_MD5: <newline>     case SSL_RSA_WITH_RC4_128_SHA: <newline>     case SSL_RSA_WITH_IDEA_CBC_SHA:              // ** <newline>     case SSL_DH_anon_WITH_RC4_128_MD5: <newline>+    case TLS_ECDH_ECDSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDH_RSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDH_anon_WITH_RC4_128_SHA: <newline>       return 128; <newline>-    // TLS AES options (see RFC 3268) <newline>+    // TLS AES options (see RFC 3268 and RFC 4492) <newline>     case TLS_RSA_WITH_AES_128_CBC_SHA: <newline>     case TLS_DH_DSS_WITH_AES_128_CBC_SHA:        // ** <newline>@@ -253,6 +301,11 @@ int KeySizeOfCipherSuite(SSLCipherSuite suite) { <newline>     case TLS_DHE_DSS_WITH_AES_128_CBC_SHA: <newline>     case TLS_DHE_RSA_WITH_AES_128_CBC_SHA: <newline>     case TLS_DH_anon_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDH_RSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDH_anon_WITH_AES_128_CBC_SHA: <newline>       return 128; <newline>     case TLS_RSA_WITH_AES_256_CBC_SHA: <newline>     case TLS_DH_DSS_WITH_AES_256_CBC_SHA:        // ** <newline>@@ -260,6 +313,11 @@ int KeySizeOfCipherSuite(SSLCipherSuite suite) { <newline>     case TLS_DHE_DSS_WITH_AES_256_CBC_SHA: <newline>     case TLS_DHE_RSA_WITH_AES_256_CBC_SHA: <newline>     case TLS_DH_anon_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDH_RSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDH_anon_WITH_AES_256_CBC_SHA: <newline>       return 256; <newline>     default: <newline>@@ -267,6 +325,65 @@ int KeySizeOfCipherSuite(SSLCipherSuite suite) { <newline>   } <newline> } <newline>+// Whitelist the cipher suites we want to enable.  We disable the following <newline>+// cipher suites. <newline>+// - SSL 2.0 cipher suites. <newline>+// - Null encryption cipher suites. <newline>+// - Weak cipher suites: < 80 bits of security strength. <newline>+// - FORTEZZA cipher suites (obsolete). <newline>+// - IDEA cipher suites (RFC 5469 explains why). <newline>+// - Anonymous cipher suites. <newline>+// <newline>+// Why don't we use a blacklist?  A blacklist that isn't updated for a new <newline>+// Mac OS X release is a potential security issue because the new release <newline>+// may have new null encryption or anonymous cipher suites, whereas a <newline>+// whitelist that isn't updated for a new Mac OS X release just means we <newline>+// won't support any new cipher suites in that release. <newline>+bool ShouldEnableCipherSuite(SSLCipherSuite suite) { <newline>+  switch (suite) { <newline>+    case SSL_RSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA:       // ** <newline>+    case SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA:       // ** <newline>+    case SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA: <newline>+    case SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA: <newline>+ <newline>+    case SSL_RSA_WITH_RC4_128_MD5: <newline>+    case SSL_RSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDH_RSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_RC4_128_SHA: <newline>+ <newline>+    case TLS_RSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_DH_DSS_WITH_AES_128_CBC_SHA:        // ** <newline>+    case TLS_DH_RSA_WITH_AES_128_CBC_SHA:        // ** <newline>+    case TLS_DHE_DSS_WITH_AES_128_CBC_SHA: <newline>+    case TLS_DHE_RSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDH_RSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA: <newline>+ <newline>+    case TLS_RSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_DH_DSS_WITH_AES_256_CBC_SHA:        // ** <newline>+    case TLS_DH_RSA_WITH_AES_256_CBC_SHA:        // ** <newline>+    case TLS_DHE_DSS_WITH_AES_256_CBC_SHA: <newline>+    case TLS_DHE_RSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDH_RSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA: <newline>+      return true; <newline>+ <newline>+    default: <newline>+      return false; <newline>+  } <newline>+} <newline>+ <newline> // Returns the server's certificate.  The caller must release a reference <newline> // to the return value when done.  Returns NULL on failure. <newline> X509Certificate* GetServerCert(SSLContextRef ssl_context) { <newline>@@ -306,6 +423,52 @@ X509Certificate* GetServerCert(SSLContextRef ssl_context) { <newline>   return x509_cert; <newline> } <newline>+// A class that wraps an array of enabled cipher suites that can be passed to <newline>+// SSLSetEnabledCiphers. <newline>+// <newline>+// Used as a singleton. <newline>+class EnabledCipherSuites { <newline>+ public: <newline>+  EnabledCipherSuites(); <newline>+ <newline>+  const SSLCipherSuite* ciphers() const { <newline>+    return ciphers_.empty() ? NULL : &ciphers_[0]; <newline>+  } <newline>+  size_t num_ciphers() const { return ciphers_.size(); } <newline>+ <newline>+ private: <newline>+  std::vector<SSLCipherSuite> ciphers_; <newline>+ <newline>+  DISALLOW_COPY_AND_ASSIGN(EnabledCipherSuites); <newline>+}; <newline>+ <newline>+EnabledCipherSuites::EnabledCipherSuites() { <newline>+  SSLContextRef ssl_context; <newline>+  OSStatus status = SSLNewContext(false, &ssl_context); <newline>+  if (status != noErr) <newline>+    return; <newline>+ <newline>+  size_t num_supported_ciphers; <newline>+  status = SSLGetNumberSupportedCiphers(ssl_context, &num_supported_ciphers); <newline>+  if (status != noErr) { <newline>+    SSLDisposeContext(ssl_context); <newline>+    return; <newline>+  } <newline>+  DCHECK_NE(num_supported_ciphers, 0U); <newline>+ <newline>+  std::vector<SSLCipherSuite> supported_ciphers(num_supported_ciphers); <newline>+  status = SSLGetSupportedCiphers(ssl_context, &supported_ciphers[0], <newline>+                                  &num_supported_ciphers); <newline>+  SSLDisposeContext(ssl_context); <newline>+  if (status != noErr) <newline>+    return; <newline>+ <newline>+  for (size_t i = 0; i < num_supported_ciphers; ++i) { <newline>+    if (ShouldEnableCipherSuite(supported_ciphers[i])) <newline>+      ciphers_.push_back(supported_ciphers[i]); <newline>+  } <newline>+} <newline>+ <newline> }  // namespace <newline> //----------------------------------------------------------------------------- <newline>@@ -499,6 +662,13 @@ int SSLClientSocketMac::InitializeSSLContext() { <newline>   if (status) <newline>     return NetErrorFromOSStatus(status); <newline>+  const EnabledCipherSuites* enabled_ciphers = <newline>+      Singleton<EnabledCipherSuites>::get(); <newline>+  status = SSLSetEnabledCiphers(ssl_context_, enabled_ciphers->ciphers(), <newline>+                                enabled_ciphers->num_ciphers()); <newline>+  if (status) <newline>+    return NetErrorFromOSStatus(status); <newline>+ <newline>   status = SSLSetIOFuncs(ssl_context_, SSLReadCallback, SSLWriteCallback); <newline>   if (status) <newline>     return NetErrorFromOSStatus(status);
e539d810e647a871711aa1b2909a196d4b9bc10	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jan 15 18:29:15 2010 +0000	Support the ECC cipher suites added in Mac OS X 10.6. Disable weak cipher suites (< 80 bits of security), anonymous cipher suites, and FORTEZZA and IDEA cipher suites. R=mark TEST=Visit https://sa.www4.irs.gov/modiein/individual/index.jsp.  We should be able to load the page rather than getting the ERR_UNEXPECTED error.	30682,30160,31995		http://codereview.chromium.org/545036	svn://svn.chromium.org/chrome/trunk/src@36373 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/socket/ssl_client_socket_mac.cc b/net/socket/ssl_client_socket_mac.cc <newline>index 4931742..feed3b5 100644 <newline>--- a/net/socket/ssl_client_socket_mac.cc <newline>+++ b/net/socket/ssl_client_socket_mac.cc <newline>@@ -103,6 +103,39 @@ enum { <newline>   errSSLServerAuthCompletedFlag = -9841 <newline> }; <newline>+// When compiled against the Mac OS X 10.5 SDK, define symbolic constants for <newline>+// cipher suites added in Mac OS X 10.6. <newline>+#if MAC_OS_X_VERSION_MAX_ALLOWED <= MAC_OS_X_VERSION_10_5 <newline>+enum { <newline>+  // ECC cipher suites from RFC 4492. <newline>+  TLS_ECDH_ECDSA_WITH_NULL_SHA           = 0xC001, <newline>+  TLS_ECDH_ECDSA_WITH_RC4_128_SHA        = 0xC002, <newline>+  TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA   = 0xC003, <newline>+  TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA    = 0xC004, <newline>+  TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA    = 0xC005, <newline>+  TLS_ECDHE_ECDSA_WITH_NULL_SHA          = 0xC006, <newline>+  TLS_ECDHE_ECDSA_WITH_RC4_128_SHA       = 0xC007, <newline>+  TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA  = 0xC008, <newline>+  TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA   = 0xC009, <newline>+  TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA   = 0xC00A, <newline>+  TLS_ECDH_RSA_WITH_NULL_SHA             = 0xC00B, <newline>+  TLS_ECDH_RSA_WITH_RC4_128_SHA          = 0xC00C, <newline>+  TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA     = 0xC00D, <newline>+  TLS_ECDH_RSA_WITH_AES_128_CBC_SHA      = 0xC00E, <newline>+  TLS_ECDH_RSA_WITH_AES_256_CBC_SHA      = 0xC00F, <newline>+  TLS_ECDHE_RSA_WITH_NULL_SHA            = 0xC010, <newline>+  TLS_ECDHE_RSA_WITH_RC4_128_SHA         = 0xC011, <newline>+  TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA    = 0xC012, <newline>+  TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA     = 0xC013, <newline>+  TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA     = 0xC014, <newline>+  TLS_ECDH_anon_WITH_NULL_SHA            = 0xC015, <newline>+  TLS_ECDH_anon_WITH_RC4_128_SHA         = 0xC016, <newline>+  TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA    = 0xC017, <newline>+  TLS_ECDH_anon_WITH_AES_128_CBC_SHA     = 0xC018, <newline>+  TLS_ECDH_anon_WITH_AES_256_CBC_SHA     = 0xC019, <newline>+}; <newline>+#endif <newline>+ <newline> typedef OSStatus (*SSLSetSessionOptionFuncPtr)(SSLContextRef, <newline>                                                SSLSetSessionOptionType, <newline>                                                Boolean); <newline>@@ -212,6 +245,11 @@ int KeySizeOfCipherSuite(SSLCipherSuite suite) { <newline>     case SSL_RSA_WITH_NULL_MD5: <newline>     case SSL_RSA_WITH_NULL_SHA:                  // ** <newline>     case SSL_FORTEZZA_DMS_WITH_NULL_SHA:         // ** <newline>+    case TLS_ECDH_ECDSA_WITH_NULL_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_NULL_SHA: <newline>+    case TLS_ECDH_RSA_WITH_NULL_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_NULL_SHA: <newline>+    case TLS_ECDH_anon_WITH_NULL_SHA: <newline>       return 0; <newline>     case SSL_RSA_EXPORT_WITH_RC4_40_MD5: <newline>     case SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5: <newline>@@ -238,14 +276,24 @@ int KeySizeOfCipherSuite(SSLCipherSuite suite) { <newline>     case SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA: <newline>     case SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA: <newline>     case SSL_DH_anon_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA: <newline>       return 112; <newline>     case SSL_RSA_WITH_RC4_128_MD5: <newline>     case SSL_RSA_WITH_RC4_128_SHA: <newline>     case SSL_RSA_WITH_IDEA_CBC_SHA:              // ** <newline>     case SSL_DH_anon_WITH_RC4_128_MD5: <newline>+    case TLS_ECDH_ECDSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDH_RSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDH_anon_WITH_RC4_128_SHA: <newline>       return 128; <newline>-    // TLS AES options (see RFC 3268) <newline>+    // TLS AES options (see RFC 3268 and RFC 4492) <newline>     case TLS_RSA_WITH_AES_128_CBC_SHA: <newline>     case TLS_DH_DSS_WITH_AES_128_CBC_SHA:        // ** <newline>@@ -253,6 +301,11 @@ int KeySizeOfCipherSuite(SSLCipherSuite suite) { <newline>     case TLS_DHE_DSS_WITH_AES_128_CBC_SHA: <newline>     case TLS_DHE_RSA_WITH_AES_128_CBC_SHA: <newline>     case TLS_DH_anon_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDH_RSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDH_anon_WITH_AES_128_CBC_SHA: <newline>       return 128; <newline>     case TLS_RSA_WITH_AES_256_CBC_SHA: <newline>     case TLS_DH_DSS_WITH_AES_256_CBC_SHA:        // ** <newline>@@ -260,6 +313,11 @@ int KeySizeOfCipherSuite(SSLCipherSuite suite) { <newline>     case TLS_DHE_DSS_WITH_AES_256_CBC_SHA: <newline>     case TLS_DHE_RSA_WITH_AES_256_CBC_SHA: <newline>     case TLS_DH_anon_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDH_RSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDH_anon_WITH_AES_256_CBC_SHA: <newline>       return 256; <newline>     default: <newline>@@ -267,6 +325,65 @@ int KeySizeOfCipherSuite(SSLCipherSuite suite) { <newline>   } <newline> } <newline>+// Whitelist the cipher suites we want to enable.  We disable the following <newline>+// cipher suites. <newline>+// - SSL 2.0 cipher suites. <newline>+// - Null encryption cipher suites. <newline>+// - Weak cipher suites: < 80 bits of security strength. <newline>+// - FORTEZZA cipher suites (obsolete). <newline>+// - IDEA cipher suites (RFC 5469 explains why). <newline>+// - Anonymous cipher suites. <newline>+// <newline>+// Why don't we use a blacklist?  A blacklist that isn't updated for a new <newline>+// Mac OS X release is a potential security issue because the new release <newline>+// may have new null encryption or anonymous cipher suites, whereas a <newline>+// whitelist that isn't updated for a new Mac OS X release just means we <newline>+// won't support any new cipher suites in that release. <newline>+bool ShouldEnableCipherSuite(SSLCipherSuite suite) { <newline>+  switch (suite) { <newline>+    case SSL_RSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA:       // ** <newline>+    case SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA:       // ** <newline>+    case SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA: <newline>+    case SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA: <newline>+ <newline>+    case SSL_RSA_WITH_RC4_128_MD5: <newline>+    case SSL_RSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDH_RSA_WITH_RC4_128_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_RC4_128_SHA: <newline>+ <newline>+    case TLS_RSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_DH_DSS_WITH_AES_128_CBC_SHA:        // ** <newline>+    case TLS_DH_RSA_WITH_AES_128_CBC_SHA:        // ** <newline>+    case TLS_DHE_DSS_WITH_AES_128_CBC_SHA: <newline>+    case TLS_DHE_RSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDH_RSA_WITH_AES_128_CBC_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA: <newline>+ <newline>+    case TLS_RSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_DH_DSS_WITH_AES_256_CBC_SHA:        // ** <newline>+    case TLS_DH_RSA_WITH_AES_256_CBC_SHA:        // ** <newline>+    case TLS_DHE_DSS_WITH_AES_256_CBC_SHA: <newline>+    case TLS_DHE_RSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDH_RSA_WITH_AES_256_CBC_SHA: <newline>+    case TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA: <newline>+      return true; <newline>+ <newline>+    default: <newline>+      return false; <newline>+  } <newline>+} <newline>+ <newline> // Returns the server's certificate.  The caller must release a reference <newline> // to the return value when done.  Returns NULL on failure. <newline> X509Certificate* GetServerCert(SSLContextRef ssl_context) { <newline>@@ -306,6 +423,52 @@ X509Certificate* GetServerCert(SSLContextRef ssl_context) { <newline>   return x509_cert; <newline> } <newline>+// A class that wraps an array of enabled cipher suites that can be passed to <newline>+// SSLSetEnabledCiphers. <newline>+// <newline>+// Used as a singleton. <newline>+class EnabledCipherSuites { <newline>+ public: <newline>+  EnabledCipherSuites(); <newline>+ <newline>+  const SSLCipherSuite* ciphers() const { <newline>+    return ciphers_.empty() ? NULL : &ciphers_[0]; <newline>+  } <newline>+  size_t num_ciphers() const { return ciphers_.size(); } <newline>+ <newline>+ private: <newline>+  std::vector<SSLCipherSuite> ciphers_; <newline>+ <newline>+  DISALLOW_COPY_AND_ASSIGN(EnabledCipherSuites); <newline>+}; <newline>+ <newline>+EnabledCipherSuites::EnabledCipherSuites() { <newline>+  SSLContextRef ssl_context; <newline>+  OSStatus status = SSLNewContext(false, &ssl_context); <newline>+  if (status != noErr) <newline>+    return; <newline>+ <newline>+  size_t num_supported_ciphers; <newline>+  status = SSLGetNumberSupportedCiphers(ssl_context, &num_supported_ciphers); <newline>+  if (status != noErr) { <newline>+    SSLDisposeContext(ssl_context); <newline>+    return; <newline>+  } <newline>+  DCHECK_NE(num_supported_ciphers, 0U); <newline>+ <newline>+  std::vector<SSLCipherSuite> supported_ciphers(num_supported_ciphers); <newline>+  status = SSLGetSupportedCiphers(ssl_context, &supported_ciphers[0], <newline>+                                  &num_supported_ciphers); <newline>+  SSLDisposeContext(ssl_context); <newline>+  if (status != noErr) <newline>+    return; <newline>+ <newline>+  for (size_t i = 0; i < num_supported_ciphers; ++i) { <newline>+    if (ShouldEnableCipherSuite(supported_ciphers[i])) <newline>+      ciphers_.push_back(supported_ciphers[i]); <newline>+  } <newline>+} <newline>+ <newline> }  // namespace <newline> //----------------------------------------------------------------------------- <newline>@@ -499,6 +662,13 @@ int SSLClientSocketMac::InitializeSSLContext() { <newline>   if (status) <newline>     return NetErrorFromOSStatus(status); <newline>+  const EnabledCipherSuites* enabled_ciphers = <newline>+      Singleton<EnabledCipherSuites>::get(); <newline>+  status = SSLSetEnabledCiphers(ssl_context_, enabled_ciphers->ciphers(), <newline>+                                enabled_ciphers->num_ciphers()); <newline>+  if (status) <newline>+    return NetErrorFromOSStatus(status); <newline>+ <newline>   status = SSLSetIOFuncs(ssl_context_, SSLReadCallback, SSLWriteCallback); <newline>   if (status) <newline>     return NetErrorFromOSStatus(status);
e0d30ac6da9723c1b936e811452326f985b1f13	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jan 1 22:16:38 2010 +0000	If we can't read a unicode character, write the standard "unknown" (0xFFFD) character. This will prevent security issues where the current behaviour can be used to strip characters out of a string after it has passed some validation. TEST=utf_string_conversions_unittest.cc,utf_offset_string_conversions_unittest.cc,zip_unittest.cc	30798		http://codereview.chromium.org/522029	svn://svn.chromium.org/chrome/trunk/src@35430 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/file_stream_posix.cc b/net/base/file_stream_posix.cc <newline>index f039996..eda0927 100644 <newline>--- a/net/base/file_stream_posix.cc <newline>+++ b/net/base/file_stream_posix.cc <newline>@@ -329,7 +329,7 @@ int FileStream::Open(const FilePath& path, int open_flags) { <newline>   } <newline>   open_flags_ = open_flags; <newline>-  file_ = base::CreatePlatformFile(path.ToWStringHack(), open_flags_, NULL); <newline>+  file_ = base::CreatePlatformFile(path, open_flags_, NULL); <newline>   if (file_ == base::kInvalidPlatformFileValue) { <newline>     LOG(WARNING) << "Failed to open file: " << errno <newline>           << " (" << path.ToWStringHack() << ")";
7a3e8ec24958958db28dba44542a2c126d94e88	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jan 1 22:16:38 2010 +0000	If we can't read a unicode character, write the standard "unknown" (0xFFFD) character. This will prevent security issues where the current behaviour can be used to strip characters out of a string after it has passed some validation. TEST=utf_string_conversions_unittest.cc,utf_offset_string_conversions_unittest.cc,zip_unittest.cc	30798		http://codereview.chromium.org/522029	svn://svn.chromium.org/chrome/trunk/src@35430 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/file_stream_posix.cc b/net/base/file_stream_posix.cc <newline>index f039996..eda0927 100644 <newline>--- a/net/base/file_stream_posix.cc <newline>+++ b/net/base/file_stream_posix.cc <newline>@@ -329,7 +329,7 @@ int FileStream::Open(const FilePath& path, int open_flags) { <newline>   } <newline>   open_flags_ = open_flags; <newline>-  file_ = base::CreatePlatformFile(path.ToWStringHack(), open_flags_, NULL); <newline>+  file_ = base::CreatePlatformFile(path, open_flags_, NULL); <newline>   if (file_ == base::kInvalidPlatformFileValue) { <newline>     LOG(WARNING) << "Failed to open file: " << errno <newline>           << " (" << path.ToWStringHack() << ")";
ea65bfd5225ce639b5cd45323faef2bcfb12fe8	dpranke@google.com <dpranke@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 29 19:40:36 2009 +0000	Fix bug 30503 - rebaseline three sets of tests, split two others into separate bugs. R=dglazkov@chromium.org TEST=LayoutTests/http/tests/security/xss-DENIED-assign-location-href-javascruipt.html TEST=LayoutTests/http/tests/security/listener/xss-inactive-closure.html TEST=LayoutTests/fast/text/fake-italic.html TEST=LayoutTests/fast/forms/basic-selects.html TEST=LayoutTests/fast/forms/basic-textareas-quirks.html	1146 WIN LINUX : LayoutTests/editing/selection/select-text-overflow-ellipsis.html = IMAGE+TEXT		http://codereview.chromium.org/524005	svn://svn.chromium.org/chrome/trunk/src@35340 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 5421dc7..b3e2b15 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -3107,7 +3107,7 @@ BUG29737 LINUX : LayoutTests/svg/filters/feDisplacementMap.svg = TEXT PASS <newline> // WebKit update 52293->52323 <newline>-BUG30503 : LayoutTests/http/tests/security/xss-DENIED-assign-location-href-javascript.html = TEXT <newline>+BUG31253 : LayoutTests/http/tests/security/xss-DENIED-assign-location-href-javascript.html = TEXT <newline> // WebKit update 52323->52366 <newline>@@ -3128,17 +3128,13 @@ BUG30938 WIN LINUX : LayoutTests/svg/custom/visibility-override-mask.svg = IMAGE <newline>-BUG30503 WIN LINUX : LayoutTests/fast/text/fake-italic.html = IMAGE+TEXT <newline> // WebKit roll 52468->52535 <newline>-BUG30503 : LayoutTests/http/tests/security/listener/xss-inactive-closure.html = TEXT <newline>+BUG31252 : LayoutTests/http/tests/security/listener/xss-inactive-closure.html = TEXT <newline>-BUG30503 WIN LINUX : LayoutTests/fast/forms/basic-selects.html = IMAGE+TEXT <newline>-BUG30503 WIN LINUX : LayoutTests/fast/forms/basic-textareas-quirks.html = IMAGE+TEXT <newline>-BUG30503 MAC : LayoutTests/fast/forms/basic-textareas-quirks.html = IMAGE <newline> // WebKit roll 52535->52554
f0daecbb05a8dbd7ff373c6a010f9172d0ba303	dpranke@google.com <dpranke@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 29 19:40:36 2009 +0000	Fix bug 30503 - rebaseline three sets of tests, split two others into separate bugs. R=dglazkov@chromium.org TEST=LayoutTests/http/tests/security/xss-DENIED-assign-location-href-javascruipt.html TEST=LayoutTests/http/tests/security/listener/xss-inactive-closure.html TEST=LayoutTests/fast/text/fake-italic.html TEST=LayoutTests/fast/forms/basic-selects.html TEST=LayoutTests/fast/forms/basic-textareas-quirks.html	1146 WIN LINUX : LayoutTests/editing/selection/select-text-overflow-ellipsis.html = IMAGE+TEXT		http://codereview.chromium.org/524005	svn://svn.chromium.org/chrome/trunk/src@35340 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 5421dc7..b3e2b15 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -3107,7 +3107,7 @@ BUG29737 LINUX : LayoutTests/svg/filters/feDisplacementMap.svg = TEXT PASS <newline> // WebKit update 52293->52323 <newline>-BUG30503 : LayoutTests/http/tests/security/xss-DENIED-assign-location-href-javascript.html = TEXT <newline>+BUG31253 : LayoutTests/http/tests/security/xss-DENIED-assign-location-href-javascript.html = TEXT <newline> // WebKit update 52323->52366 <newline>@@ -3128,17 +3128,13 @@ BUG30938 WIN LINUX : LayoutTests/svg/custom/visibility-override-mask.svg = IMAGE <newline>-BUG30503 WIN LINUX : LayoutTests/fast/text/fake-italic.html = IMAGE+TEXT <newline> // WebKit roll 52468->52535 <newline>-BUG30503 : LayoutTests/http/tests/security/listener/xss-inactive-closure.html = TEXT <newline>+BUG31252 : LayoutTests/http/tests/security/listener/xss-inactive-closure.html = TEXT <newline>-BUG30503 WIN LINUX : LayoutTests/fast/forms/basic-selects.html = IMAGE+TEXT <newline>-BUG30503 WIN LINUX : LayoutTests/fast/forms/basic-textareas-quirks.html = IMAGE+TEXT <newline>-BUG30503 MAC : LayoutTests/fast/forms/basic-textareas-quirks.html = IMAGE <newline> // WebKit roll 52535->52554
8506db921b60c5a246f518d4a9822125cc7be9b	dpranke@google.com <dpranke@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Dec 28 22:06:52 2009 +0000	Fix a few test expectations to point to the correct bug resulting from me upstreaming chromium tests to webkit. Also delete reference to LayoutTests/inspector/settings-set-get - that test doesn't exist. R=dglazkov@chromium.org TEST=LayoutTests/http/tests/security/xss-DENIED-assign-location-href-javascript.html TEST=LayoutTests/fast/text/fake-italic.html TEST=LayoutTests/http/tests/security/listener/xss-inactive-closure.html TEST=LayoutTests/fast/forms/basic-selects.html TEST=LayoutTests/fast/forms/basic-textareas-quirks.html	1146 WIN LINUX : LayoutTests/editing/selection/select-text-overflow-ellipsis.html = IMAGE+TEXT		http://codereview.chromium.org/517016	svn://svn.chromium.org/chrome/trunk/src@35314 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 29a3f88..5421dc7 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -703,7 +703,6 @@ BUG20292 : LayoutTests/fast/forms/input-selectedoption.html = FAIL <newline>-BUG26734 SKIP : LayoutTests/inspector/settings-set-get.html = TEXT <newline> // Fails due to storage APIs not implemented.  Might be worth re-baselining <newline> // temporarily so the rest of the conditions are still tested. <newline>@@ -3108,7 +3107,7 @@ BUG29737 LINUX : LayoutTests/svg/filters/feDisplacementMap.svg = TEXT PASS <newline> // WebKit update 52293->52323 <newline>-BUG30792 : LayoutTests/http/tests/security/xss-DENIED-assign-location-href-javascript.html = TEXT <newline>+BUG30503 : LayoutTests/http/tests/security/xss-DENIED-assign-location-href-javascript.html = TEXT <newline> // WebKit update 52323->52366 <newline>@@ -3129,17 +3128,17 @@ BUG30938 WIN LINUX : LayoutTests/svg/custom/visibility-override-mask.svg = IMAGE <newline>-BUG30792 WIN LINUX : LayoutTests/fast/text/fake-italic.html = IMAGE+TEXT <newline>+BUG30503 WIN LINUX : LayoutTests/fast/text/fake-italic.html = IMAGE+TEXT <newline> // WebKit roll 52468->52535 <newline>-BUG31108 : LayoutTests/http/tests/security/listener/xss-inactive-closure.html = TEXT <newline>+BUG30503 : LayoutTests/http/tests/security/listener/xss-inactive-closure.html = TEXT <newline>-BUG31108 WIN LINUX : LayoutTests/fast/forms/basic-selects.html = IMAGE+TEXT <newline>-BUG31108 WIN LINUX : LayoutTests/fast/forms/basic-textareas-quirks.html = IMAGE+TEXT <newline>-BUG31108 MAC : LayoutTests/fast/forms/basic-textareas-quirks.html = IMAGE <newline>+BUG30503 WIN LINUX : LayoutTests/fast/forms/basic-selects.html = IMAGE+TEXT <newline>+BUG30503 WIN LINUX : LayoutTests/fast/forms/basic-textareas-quirks.html = IMAGE+TEXT <newline>+BUG30503 MAC : LayoutTests/fast/forms/basic-textareas-quirks.html = IMAGE <newline> // WebKit roll 52535->52554
f8e5fabdb957cd2875d4bccd95f39f6bb793354	dpranke@google.com <dpranke@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Dec 28 22:06:52 2009 +0000	Fix a few test expectations to point to the correct bug resulting from me upstreaming chromium tests to webkit. Also delete reference to LayoutTests/inspector/settings-set-get - that test doesn't exist. R=dglazkov@chromium.org TEST=LayoutTests/http/tests/security/xss-DENIED-assign-location-href-javascript.html TEST=LayoutTests/fast/text/fake-italic.html TEST=LayoutTests/http/tests/security/listener/xss-inactive-closure.html TEST=LayoutTests/fast/forms/basic-selects.html TEST=LayoutTests/fast/forms/basic-textareas-quirks.html	1146 WIN LINUX : LayoutTests/editing/selection/select-text-overflow-ellipsis.html = IMAGE+TEXT		http://codereview.chromium.org/517016	svn://svn.chromium.org/chrome/trunk/src@35314 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 29a3f88..5421dc7 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -703,7 +703,6 @@ BUG20292 : LayoutTests/fast/forms/input-selectedoption.html = FAIL <newline>-BUG26734 SKIP : LayoutTests/inspector/settings-set-get.html = TEXT <newline> // Fails due to storage APIs not implemented.  Might be worth re-baselining <newline> // temporarily so the rest of the conditions are still tested. <newline>@@ -3108,7 +3107,7 @@ BUG29737 LINUX : LayoutTests/svg/filters/feDisplacementMap.svg = TEXT PASS <newline> // WebKit update 52293->52323 <newline>-BUG30792 : LayoutTests/http/tests/security/xss-DENIED-assign-location-href-javascript.html = TEXT <newline>+BUG30503 : LayoutTests/http/tests/security/xss-DENIED-assign-location-href-javascript.html = TEXT <newline> // WebKit update 52323->52366 <newline>@@ -3129,17 +3128,17 @@ BUG30938 WIN LINUX : LayoutTests/svg/custom/visibility-override-mask.svg = IMAGE <newline>-BUG30792 WIN LINUX : LayoutTests/fast/text/fake-italic.html = IMAGE+TEXT <newline>+BUG30503 WIN LINUX : LayoutTests/fast/text/fake-italic.html = IMAGE+TEXT <newline> // WebKit roll 52468->52535 <newline>-BUG31108 : LayoutTests/http/tests/security/listener/xss-inactive-closure.html = TEXT <newline>+BUG30503 : LayoutTests/http/tests/security/listener/xss-inactive-closure.html = TEXT <newline>-BUG31108 WIN LINUX : LayoutTests/fast/forms/basic-selects.html = IMAGE+TEXT <newline>-BUG31108 WIN LINUX : LayoutTests/fast/forms/basic-textareas-quirks.html = IMAGE+TEXT <newline>-BUG31108 MAC : LayoutTests/fast/forms/basic-textareas-quirks.html = IMAGE <newline>+BUG30503 WIN LINUX : LayoutTests/fast/forms/basic-selects.html = IMAGE+TEXT <newline>+BUG30503 WIN LINUX : LayoutTests/fast/forms/basic-textareas-quirks.html = IMAGE+TEXT <newline>+BUG30503 MAC : LayoutTests/fast/forms/basic-textareas-quirks.html = IMAGE <newline> // WebKit roll 52535->52554
1e3c190ff5fc891f3675c071eb72138edb52d75	dpranke@google.com <dpranke@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 22 02:59:21 2009 +0000	Remove tests that have been upstreamed: - chrome/fast/dom/xss-DENIED-javascript-variations , r52461 - chrome/fast/js/document-clear upstreamed as fast/dom/document-clear.html, r52408 - chrome/fast/text/fake-italic as fast/text/fake-italic, r52407 - chrome/http/tests/security/xss-DENIED-assign-location-href-javascript as http/tests/..., r52301 - chrome/plugins/get-file-url, r52410 - chrome/plugins/get-url-with-iframe-target.html, r52410 - chrome/plugins/call-as-function.html - under platforms/chromium/plugins, r52472 - chrome/plugins/get-url-with-iframe-target-no-crash.html - under platforms/chromium/plugins, r52472 - chrome/plugins/multiple-plugins.html - under platforms/chromium/plugins, r52472 - chrome/plugins/nested-plugin-objects.html - under platforms/chromium/plugins, r52472 - chrome/plugins/refcount-leaks.html - under platforms/chromium/plugins, r52472 - chrome/plugins/return-npobject.html - under platforms/chromium/plugins, r52472 - chrome/plugins/script-object-invoke.html - under platforms/chromium/plugins, r52472 - chrome/svg/custom/new-image-is-html-element, r52408 R=pkasting@chromium.org TEST=chrome/fast/dom/xss-DENIED-javascript-variations.html TEST=chrome/fast/js/document-clear.html TEST=chrome/fast/text/fake-italic.html TEST=chrome/http/tests/security/xss-DENIED-assign-location-href-javascript.html TEST=chrome/plugins/call-as-function.html TEST=chrome/plugins/get-file-url.html TEST=chrome/plugins/get-url-with-iframe-target-no-crash.html TEST=chrome/plugins/get-url-with-iframe-target.html TEST=chrome/plugins/multiple-plugins.html TEST=chrome/plugins/nested-plugin-objects.html TEST=chrome/plugins/refcount-leaks.html TEST=chrome/plugins/return-npobject.html TEST=chrome/plugins/script-object-invoke.html TEST=chrome/svg/custom/new-image-is-html-element.html	0939 : LayoutTests/svg/filters/filter-clip.svg = IMAGE+TEXT		http://codereview.chromium.org/504079	svn://svn.chromium.org/chrome/trunk/src@35136 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 0b1c6f3..bcbbc33 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -1306,8 +1306,6 @@ BUG10351 MAC : LayoutTests/plugins/mouse-events.html = FAIL <newline> // Skip because we throw an exception before we get to dumpAsText. <newline>-BUG10667 SLOW MAC DEBUG : chrome/plugins/multiple-plugins.html = FAIL PASS <newline>-BUG10667 MAC : chrome/plugins/return-npobject.html = FAIL <newline> // BUG10667 SLOW MAC RELEASE : LayoutTests/plugins/iframe-shims.html = FAIL <newline>@@ -1333,7 +1331,6 @@ BUG10353 WIN LINUX : LayoutTests/fast/forms/textarea-rows-cols.html = FAIL <newline> // Form control scrollbars seem to be drawn incorrectly. <newline>-BUG10668 : chrome/fast/dom/xss-DENIED-javascript-variations.html = FAIL <newline> // This test sometimes fails indefinitely, other times it takes 1-2 seconds. <newline>@@ -3142,4 +3139,4 @@ BUG30938 WIN LINUX : LayoutTests/svg/custom/visibility-override-mask.svg = IMAGE <newline>-BUG30792 WIN LINUX : LayoutTests/fast/text/fake-italic.html = IMAGE+TEXT <newline>\ No newline at end of file <newline>+BUG30792 WIN LINUX : LayoutTests/fast/text/fake-italic.html = IMAGE+TEXT
f7a0191f603800bbf7e387277ed29a6209063bc	dpranke@google.com <dpranke@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 22 02:59:21 2009 +0000	Remove tests that have been upstreamed: - chrome/fast/dom/xss-DENIED-javascript-variations , r52461 - chrome/fast/js/document-clear upstreamed as fast/dom/document-clear.html, r52408 - chrome/fast/text/fake-italic as fast/text/fake-italic, r52407 - chrome/http/tests/security/xss-DENIED-assign-location-href-javascript as http/tests/..., r52301 - chrome/plugins/get-file-url, r52410 - chrome/plugins/get-url-with-iframe-target.html, r52410 - chrome/plugins/call-as-function.html - under platforms/chromium/plugins, r52472 - chrome/plugins/get-url-with-iframe-target-no-crash.html - under platforms/chromium/plugins, r52472 - chrome/plugins/multiple-plugins.html - under platforms/chromium/plugins, r52472 - chrome/plugins/nested-plugin-objects.html - under platforms/chromium/plugins, r52472 - chrome/plugins/refcount-leaks.html - under platforms/chromium/plugins, r52472 - chrome/plugins/return-npobject.html - under platforms/chromium/plugins, r52472 - chrome/plugins/script-object-invoke.html - under platforms/chromium/plugins, r52472 - chrome/svg/custom/new-image-is-html-element, r52408 R=pkasting@chromium.org TEST=chrome/fast/dom/xss-DENIED-javascript-variations.html TEST=chrome/fast/js/document-clear.html TEST=chrome/fast/text/fake-italic.html TEST=chrome/http/tests/security/xss-DENIED-assign-location-href-javascript.html TEST=chrome/plugins/call-as-function.html TEST=chrome/plugins/get-file-url.html TEST=chrome/plugins/get-url-with-iframe-target-no-crash.html TEST=chrome/plugins/get-url-with-iframe-target.html TEST=chrome/plugins/multiple-plugins.html TEST=chrome/plugins/nested-plugin-objects.html TEST=chrome/plugins/refcount-leaks.html TEST=chrome/plugins/return-npobject.html TEST=chrome/plugins/script-object-invoke.html TEST=chrome/svg/custom/new-image-is-html-element.html	0939 : LayoutTests/svg/filters/filter-clip.svg = IMAGE+TEXT		http://codereview.chromium.org/504079	svn://svn.chromium.org/chrome/trunk/src@35136 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 0b1c6f3..bcbbc33 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -1306,8 +1306,6 @@ BUG10351 MAC : LayoutTests/plugins/mouse-events.html = FAIL <newline> // Skip because we throw an exception before we get to dumpAsText. <newline>-BUG10667 SLOW MAC DEBUG : chrome/plugins/multiple-plugins.html = FAIL PASS <newline>-BUG10667 MAC : chrome/plugins/return-npobject.html = FAIL <newline> // BUG10667 SLOW MAC RELEASE : LayoutTests/plugins/iframe-shims.html = FAIL <newline>@@ -1333,7 +1331,6 @@ BUG10353 WIN LINUX : LayoutTests/fast/forms/textarea-rows-cols.html = FAIL <newline> // Form control scrollbars seem to be drawn incorrectly. <newline>-BUG10668 : chrome/fast/dom/xss-DENIED-javascript-variations.html = FAIL <newline> // This test sometimes fails indefinitely, other times it takes 1-2 seconds. <newline>@@ -3142,4 +3139,4 @@ BUG30938 WIN LINUX : LayoutTests/svg/custom/visibility-override-mask.svg = IMAGE <newline>-BUG30792 WIN LINUX : LayoutTests/fast/text/fake-italic.html = IMAGE+TEXT <newline>\ No newline at end of file <newline>+BUG30792 WIN LINUX : LayoutTests/fast/text/fake-italic.html = IMAGE+TEXT
6c5a769d018916c10dffd3fbaa0dd93fc31ce84	hamaji@chromium.org <hamaji@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 17 11:33:25 2009 +0000	Add a failing test: http/tests/security/mixedContent/insecure-script-in-iframe TEST=trybots TBR=jparent	9737 LINUX : LayoutTests/svg/filters/feDisplacementMap.svg = TEXT PASS		http://codereview.chromium.org/504040	svn://svn.chromium.org/chrome/trunk/src@34824 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index b1887dc..74ebfe2 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -3129,3 +3129,6 @@ BUG_JPARENT WIN LINUX : LayoutTests/svg/custom/empty-merge.svg = IMAGE+TEXT <newline> // Flaky since SVG filters turned on <newline>+ <newline>+// Failing after chromium r34544. <newline>+BUG30653 WIN DEBUG : LayoutTests/http/tests/security/mixedContent/insecure-script-in-iframe.html = TEXT
93cde564fd78aafac9a6b0ca5b91b33d95d99a6	hamaji@chromium.org <hamaji@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 17 11:33:25 2009 +0000	Add a failing test: http/tests/security/mixedContent/insecure-script-in-iframe TEST=trybots TBR=jparent	9737 LINUX : LayoutTests/svg/filters/feDisplacementMap.svg = TEXT PASS		http://codereview.chromium.org/504040	svn://svn.chromium.org/chrome/trunk/src@34824 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index b1887dc..74ebfe2 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -3129,3 +3129,6 @@ BUG_JPARENT WIN LINUX : LayoutTests/svg/custom/empty-merge.svg = IMAGE+TEXT <newline> // Flaky since SVG filters turned on <newline>+ <newline>+// Failing after chromium r34544. <newline>+BUG30653 WIN DEBUG : LayoutTests/http/tests/security/mixedContent/insecure-script-in-iframe.html = TEXT
506308ee61d220b08a555bc32904545ee48d177	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Dec 9 19:35:54 2009 +0000	Define X509Certificate::intermediate_ca_certs_ as a std::vector of OSCertHandle so that we can also use it on Windows. Remove the unused SSLClientSocketMac::intermediate_certs_ member. R=hawk TEST=Can visit good HTTPS sites with no certificate errors.  Clicking the "Certificate information" button in the page security information window should show a complete certificate chain (as opposed to just the server certificate).	28744		http://codereview.chromium.org/452042	svn://svn.chromium.org/chrome/trunk/src@34175 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/socket/ssl_client_socket_mac.h b/net/socket/ssl_client_socket_mac.h <newline>index a520abc..704090c 100644 <newline>--- a/net/socket/ssl_client_socket_mac.h <newline>+++ b/net/socket/ssl_client_socket_mac.h <newline>@@ -106,7 +106,6 @@ class SSLClientSocketMac : public SSLClientSocket { <newline>   State next_handshake_state_; <newline>   scoped_refptr<X509Certificate> server_cert_; <newline>-  std::vector<scoped_refptr<X509Certificate> > intermediate_certs_; <newline>   scoped_ptr<CertVerifier> verifier_; <newline>   CertVerifyResult server_cert_verify_result_;
ef15aa68c1ead785af67f8e4aaf8fcdb7ed6c04	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Dec 9 19:35:54 2009 +0000	Define X509Certificate::intermediate_ca_certs_ as a std::vector of OSCertHandle so that we can also use it on Windows. Remove the unused SSLClientSocketMac::intermediate_certs_ member. R=hawk TEST=Can visit good HTTPS sites with no certificate errors.  Clicking the "Certificate information" button in the page security information window should show a complete certificate chain (as opposed to just the server certificate).	28744		http://codereview.chromium.org/452042	svn://svn.chromium.org/chrome/trunk/src@34175 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/socket/ssl_client_socket_mac.h b/net/socket/ssl_client_socket_mac.h <newline>index a520abc..704090c 100644 <newline>--- a/net/socket/ssl_client_socket_mac.h <newline>+++ b/net/socket/ssl_client_socket_mac.h <newline>@@ -106,7 +106,6 @@ class SSLClientSocketMac : public SSLClientSocket { <newline>   State next_handshake_state_; <newline>   scoped_refptr<X509Certificate> server_cert_; <newline>-  std::vector<scoped_refptr<X509Certificate> > intermediate_certs_; <newline>   scoped_ptr<CertVerifier> verifier_; <newline>   CertVerifyResult server_cert_verify_result_;
73838f96e72098d873e3abb335d882d8d6fda37	yusukes@google.com <yusukes@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 25 01:50:33 2009 +0000	OTS DEPS roll, from r10 to r19. r19 is the first revision that has passed security reviews. TEST=none	27127		http://codereview.chromium.org/437034	svn://svn.chromium.org/chrome/trunk/src@33030 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 9e345a7..6d24db9 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -65,7 +65,7 @@ deps = { <newline>     Var("webkit_trunk") + "/WebKit/chromium@" + Var("webkit_revision"), <newline>   "src/third_party/ots": <newline>-    "http://ots.googlecode.com/svn/trunk@10", <newline>+    "http://ots.googlecode.com/svn/trunk@19", <newline>   "src/third_party/tcmalloc/tcmalloc": <newline>     "http://google-perftools.googlecode.com/svn/trunk@77",
a28f8aaba4ec474d1b96b03bf2aabd513245740	yusukes@google.com <yusukes@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 25 01:50:33 2009 +0000	OTS DEPS roll, from r10 to r19. r19 is the first revision that has passed security reviews. TEST=none	27127		http://codereview.chromium.org/437034	svn://svn.chromium.org/chrome/trunk/src@33030 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 9e345a7..6d24db9 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -65,7 +65,7 @@ deps = { <newline>     Var("webkit_trunk") + "/WebKit/chromium@" + Var("webkit_revision"), <newline>   "src/third_party/ots": <newline>-    "http://ots.googlecode.com/svn/trunk@10", <newline>+    "http://ots.googlecode.com/svn/trunk@19", <newline>   "src/third_party/tcmalloc/tcmalloc": <newline>     "http://google-perftools.googlecode.com/svn/trunk@77",
838c3420172c204f9dfac44d3de9eb7960ce82f	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 20 16:42:17 2009 +0000	Add some security considerations to our extension docs. TEST=None, just documentation	26594		http://codereview.chromium.org/412003	svn://svn.chromium.org/chrome/trunk/src@32614 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/xhr.html b/chrome/common/extensions/docs/xhr.html <newline>index 97dceb4..ac09d0d 100644 <newline>--- a/chrome/common/extensions/docs/xhr.html <newline>+++ b/chrome/common/extensions/docs/xhr.html <newline>@@ -328,6 +328,72 @@ of hosts, it must declare the permissions separately:</p> <newline> ], <newline> </pre> <newline>+<h2 id="security-considerations">Security considerations</h2> <newline>+ <newline>+<p> <newline>+When using resources retrieved via XMLHttpRequest, your background page should <newline>+be careful not to fall victim to <a href="http://en.wikipedia.org/wiki/Cross-site_scripting">cross-site <newline>+scripting</a>.  Specifically, avoid using dangerous APIs such as the below: <newline>+</p> <newline>+<pre>background.html <newline>+=============== <newline>+var xhr = new XMLHttpRequest(); <newline>+xhr.open("GET", "http://api.example.com/data.json", true); <newline>+xhr.send(); <newline>+xhr.onreadystatechange = function() { <newline>+  if (xhr.readyState == 4) { <newline>+    // WARNING! Might be evaluating an evil script! <newline>+    var resp = eval("(" + xhr.responseText + ")"); <newline>+    ... <newline>+  } <newline>+} <newline>+ <newline>+background.html <newline>+=============== <newline>+var xhr = new XMLHttpRequest(); <newline>+xhr.open("GET", "http://api.example.com/data.json", true); <newline>+xhr.send(); <newline>+xhr.onreadystatechange = function() { <newline>+  if (xhr.readyState == 4) { <newline>+    // WARNING! Might be injecting a malicious script! <newline>+    document.getElementById("resp").innerHTML = xhr.responseText; <newline>+    ... <newline>+  } <newline>+} <newline>+</pre> <newline>+<p> <newline>+Instead, prefer safer APIs that do not run scripts: <newline>+</p> <newline>+<pre>background.html <newline>+=============== <newline>+var xhr = new XMLHttpRequest(); <newline>+xhr.open("GET", "http://api.example.com/data.json", true); <newline>+xhr.send(); <newline>+xhr.onreadystatechange = function() { <newline>+  if (xhr.readyState == 4) { <newline>+    // JSON.parse does not evaluate the attacker's scripts. <newline>+    var resp = JSON.parse(xhr.responseText); <newline>+  } <newline>+} <newline>+ <newline>+background.html <newline>+=============== <newline>+var xhr = new XMLHttpRequest(); <newline>+xhr.open("GET", "http://api.example.com/data.json", true); <newline>+xhr.send(); <newline>+xhr.onreadystatechange = function() { <newline>+  if (xhr.readyState == 4) { <newline>+    // innerText does not let the attacker inject HTML elements. <newline>+    document.getElementById("resp").innerText = xhr.responseText; <newline>+  } <newline>+} <newline>+</pre> <newline>+<p> <newline>+Additionally, be especially careful of resource retrieved via HTTP.  If your <newline>+extension is used on a hostile network, an network attacker (aka a <a href="http://en.wikipedia.org/wiki/Man-in-the-middle_attack">"man-in-the-middle"</a>) <newline>+could modify the response and, potentially, attack your extension.  Instead, <newline>+prefer HTTPS whenever possible. <newline>+</p> <newline> <!-- END AUTHORED CONTENT --> <newline> </div>
c1b42a28ecd53f8dc4b8e3f43b9818e39f04a60	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 20 16:42:17 2009 +0000	Add some security considerations to our extension docs. TEST=None, just documentation	26594		http://codereview.chromium.org/412003	svn://svn.chromium.org/chrome/trunk/src@32614 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/extensions/docs/xhr.html b/chrome/common/extensions/docs/xhr.html <newline>index 97dceb4..ac09d0d 100644 <newline>--- a/chrome/common/extensions/docs/xhr.html <newline>+++ b/chrome/common/extensions/docs/xhr.html <newline>@@ -328,6 +328,72 @@ of hosts, it must declare the permissions separately:</p> <newline> ], <newline> </pre> <newline>+<h2 id="security-considerations">Security considerations</h2> <newline>+ <newline>+<p> <newline>+When using resources retrieved via XMLHttpRequest, your background page should <newline>+be careful not to fall victim to <a href="http://en.wikipedia.org/wiki/Cross-site_scripting">cross-site <newline>+scripting</a>.  Specifically, avoid using dangerous APIs such as the below: <newline>+</p> <newline>+<pre>background.html <newline>+=============== <newline>+var xhr = new XMLHttpRequest(); <newline>+xhr.open("GET", "http://api.example.com/data.json", true); <newline>+xhr.send(); <newline>+xhr.onreadystatechange = function() { <newline>+  if (xhr.readyState == 4) { <newline>+    // WARNING! Might be evaluating an evil script! <newline>+    var resp = eval("(" + xhr.responseText + ")"); <newline>+    ... <newline>+  } <newline>+} <newline>+ <newline>+background.html <newline>+=============== <newline>+var xhr = new XMLHttpRequest(); <newline>+xhr.open("GET", "http://api.example.com/data.json", true); <newline>+xhr.send(); <newline>+xhr.onreadystatechange = function() { <newline>+  if (xhr.readyState == 4) { <newline>+    // WARNING! Might be injecting a malicious script! <newline>+    document.getElementById("resp").innerHTML = xhr.responseText; <newline>+    ... <newline>+  } <newline>+} <newline>+</pre> <newline>+<p> <newline>+Instead, prefer safer APIs that do not run scripts: <newline>+</p> <newline>+<pre>background.html <newline>+=============== <newline>+var xhr = new XMLHttpRequest(); <newline>+xhr.open("GET", "http://api.example.com/data.json", true); <newline>+xhr.send(); <newline>+xhr.onreadystatechange = function() { <newline>+  if (xhr.readyState == 4) { <newline>+    // JSON.parse does not evaluate the attacker's scripts. <newline>+    var resp = JSON.parse(xhr.responseText); <newline>+  } <newline>+} <newline>+ <newline>+background.html <newline>+=============== <newline>+var xhr = new XMLHttpRequest(); <newline>+xhr.open("GET", "http://api.example.com/data.json", true); <newline>+xhr.send(); <newline>+xhr.onreadystatechange = function() { <newline>+  if (xhr.readyState == 4) { <newline>+    // innerText does not let the attacker inject HTML elements. <newline>+    document.getElementById("resp").innerText = xhr.responseText; <newline>+  } <newline>+} <newline>+</pre> <newline>+<p> <newline>+Additionally, be especially careful of resource retrieved via HTTP.  If your <newline>+extension is used on a hostile network, an network attacker (aka a <a href="http://en.wikipedia.org/wiki/Man-in-the-middle_attack">"man-in-the-middle"</a>) <newline>+could modify the response and, potentially, attack your extension.  Instead, <newline>+prefer HTTPS whenever possible. <newline>+</p> <newline> <!-- END AUTHORED CONTENT --> <newline> </div>
bb3b7dd1a80e0a8c3dfb394525b831b283e202a	erikkay@chromium.org <erikkay@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 17 22:00:23 2009 +0000	Add new failure to expectations on MAC. TEST=LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny.html TBR=yaar,idana	UKOT : LayoutTests/http/tests/navigation/onload-navigation-iframe-timeout.html = FAIL		http://codereview.chromium.org/399046	svn://svn.chromium.org/chrome/trunk/src@32217 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index a2a97ac..f7dc936 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -3083,4 +3083,4 @@ BUGYUKOT : LayoutTests/fast/forms/get-forms-to-about-blank.html = FAIL <newline> // TODO(YUKOT): Uncomment previous timeout expectations (above) for the following 2 layout tests. <newline>- <newline>+BUG28034 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny.html = FAIL
b97caaf14b0515fdb8303e26850e002041481ed	erikkay@chromium.org <erikkay@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 17 22:00:23 2009 +0000	Add new failure to expectations on MAC. TEST=LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny.html TBR=yaar,idana	UKOT : LayoutTests/http/tests/navigation/onload-navigation-iframe-timeout.html = FAIL		http://codereview.chromium.org/399046	svn://svn.chromium.org/chrome/trunk/src@32217 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index a2a97ac..f7dc936 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -3083,4 +3083,4 @@ BUGYUKOT : LayoutTests/fast/forms/get-forms-to-about-blank.html = FAIL <newline> // TODO(YUKOT): Uncomment previous timeout expectations (above) for the following 2 layout tests. <newline>- <newline>+BUG28034 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny.html = FAIL
8843c9af83df2d75a12382d03b44c4a1ae107ee	asargent@chromium.org <asargent@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 13 22:22:55 2009 +0000	Add stub functions for chrome.* APIs in content scripts. Most of the extensions API is not supported in content scripts for security purposes. Instead the typical pattern is to use messaging between content scripts and a background page which executes them on behalf of the script. This is not immediately obvious to many extension developers, so this change adds an error message to help them better understand what's going on. TEST=Try writing a content script that uses some of the extensions API stuff in chrome.tabs, chrome.windows, etc. You should see errors in the console telling you that it isn't supported in content scripts.	26128		http://codereview.chromium.org/366024	svn://svn.chromium.org/chrome/trunk/src@31958 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/api_test/stubs/manifest.json b/chrome/test/data/extensions/api_test/stubs/manifest.json <newline>new file mode 100644 <newline>index 0000000..0149ae6 <newline>--- /dev/null <newline>+++ b/chrome/test/data/extensions/api_test/stubs/manifest.json <newline>@@ -0,0 +1,11 @@ <newline>+{ <newline>+  "name": "Content Script Extension API Stubs Test", <newline>+  "version": "1.0", <newline>+  "background_page": "background.html", <newline>+  "content_scripts": [ <newline>+    { <newline>+      "matches": ["http://*/*", "file://*"], <newline>+      "js":["content_script.js"] <newline>+    } <newline>+  ] <newline>+}
307901f3bb5ab694530551f05e3898596acd854	asargent@chromium.org <asargent@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 13 22:22:55 2009 +0000	Add stub functions for chrome.* APIs in content scripts. Most of the extensions API is not supported in content scripts for security purposes. Instead the typical pattern is to use messaging between content scripts and a background page which executes them on behalf of the script. This is not immediately obvious to many extension developers, so this change adds an error message to help them better understand what's going on. TEST=Try writing a content script that uses some of the extensions API stuff in chrome.tabs, chrome.windows, etc. You should see errors in the console telling you that it isn't supported in content scripts.	26128		http://codereview.chromium.org/366024	svn://svn.chromium.org/chrome/trunk/src@31958 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/extensions/api_test/stubs/manifest.json b/chrome/test/data/extensions/api_test/stubs/manifest.json <newline>new file mode 100644 <newline>index 0000000..0149ae6 <newline>--- /dev/null <newline>+++ b/chrome/test/data/extensions/api_test/stubs/manifest.json <newline>@@ -0,0 +1,11 @@ <newline>+{ <newline>+  "name": "Content Script Extension API Stubs Test", <newline>+  "version": "1.0", <newline>+  "background_page": "background.html", <newline>+  "content_scripts": [ <newline>+    { <newline>+      "matches": ["http://*/*", "file://*"], <newline>+      "js":["content_script.js"] <newline>+    } <newline>+  ] <newline>+}
8969173df333e559bb04fea62592103ebe4080a	pamg@google.com <pamg@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 4 22:37:11 2009 +0000	Restoring r29827. The skia file is new to this attempt, and may be what was causing a unit test to crash last time. Refactor security-icon code to a more general form, also more consistent with the Windows implementation, in preparation for implementing page actions. TEST=unit tests included	14899, 22922, 12281		http://codereview.chromium.org/348069	svn://svn.chromium.org/chrome/trunk/src@31023 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/skia/ext/skia_utils_mac.mm b/skia/ext/skia_utils_mac.mm <newline>index 7d0c23c..0a08c75 100644 <newline>--- a/skia/ext/skia_utils_mac.mm <newline>+++ b/skia/ext/skia_utils_mac.mm <newline>@@ -177,6 +177,7 @@ NSImage* SkBitmapToNSImage(const SkBitmap& skiaBitmap) { <newline>   CFRelease(cgimage); <newline>   NSImage* image = [[[NSImage alloc] init] autorelease]; <newline>   [image addRepresentation:bitmap]; <newline>+  [image setSize:NSMakeSize(skiaBitmap.width(), skiaBitmap.height())]; <newline>   return image; <newline> }
0e8289ce8b13eee37d4063ad505255e9555c372	pamg@google.com <pamg@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Nov 4 22:37:11 2009 +0000	Restoring r29827. The skia file is new to this attempt, and may be what was causing a unit test to crash last time. Refactor security-icon code to a more general form, also more consistent with the Windows implementation, in preparation for implementing page actions. TEST=unit tests included	14899, 22922, 12281		http://codereview.chromium.org/348069	svn://svn.chromium.org/chrome/trunk/src@31023 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/skia/ext/skia_utils_mac.mm b/skia/ext/skia_utils_mac.mm <newline>index 7d0c23c..0a08c75 100644 <newline>--- a/skia/ext/skia_utils_mac.mm <newline>+++ b/skia/ext/skia_utils_mac.mm <newline>@@ -177,6 +177,7 @@ NSImage* SkBitmapToNSImage(const SkBitmap& skiaBitmap) { <newline>   CFRelease(cgimage); <newline>   NSImage* image = [[[NSImage alloc] init] autorelease]; <newline>   [image addRepresentation:bitmap]; <newline>+  [image setSize:NSMakeSize(skiaBitmap.width(), skiaBitmap.height())]; <newline>   return image; <newline> }
6591100ac74e0a179039b796bcd634d3251795a	brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 3 16:52:53 2009 +0000	Add the plumbing and test code for plugins opening files from the sandbox. This does not implement the actual opening of the files (currently the chain ends in resource_message_filter.cc), I will do that separately with some additional security review. This current patch just gets the synchronous request to the browser and returns a NULL result. TEST=none	none		http://codereview.chromium.org/340050	svn://svn.chromium.org/chrome/trunk/src@30819 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/webplugin_delegate_pepper.cc b/chrome/renderer/webplugin_delegate_pepper.cc <newline>index 30d29b7..1621406 100644 <newline>--- a/chrome/renderer/webplugin_delegate_pepper.cc <newline>+++ b/chrome/renderer/webplugin_delegate_pepper.cc <newline>@@ -16,6 +16,8 @@ <newline> #include "base/scoped_ptr.h" <newline> #include "base/stats_counters.h" <newline> #include "base/string_util.h" <newline>+#include "chrome/common/render_messages.h" <newline>+#include "chrome/renderer/render_thread.h" <newline> #include "webkit/api/public/WebInputEvent.h" <newline> #include "webkit/glue/glue_util.h" <newline> #include "webkit/glue/pepper/pepper.h" <newline>@@ -36,7 +38,9 @@ using WebKit::WebMouseEvent; <newline> using WebKit::WebMouseWheelEvent; <newline> namespace { <newline>-  const uint32 kBytesPerPixel = 4;  // Only 8888 RGBA for now. <newline>+ <newline>+const uint32 kBytesPerPixel = 4;  // Only 8888 RGBA for now. <newline>+ <newline> }  // namespace <newline> uint32 WebPluginDelegatePepper::next_buffer_id = 0; <newline>@@ -444,3 +448,30 @@ NPError WebPluginDelegatePepper::FlushRenderContext(NPRenderContext* context) {
d_bitmap_.setIsOpaque(false);			return NPERR_NO_ERROR; } + +NPError WebPluginDelegatePepper::OpenFileInSandbox(const char* file_name, +                                                   void** handle) { +  *handle = NULL; + +#if defined(OS_WIN) +  FilePath file_path(UTF8ToUTF16(file_name)); +#elif defined(OS_POSIX) +  FilePath file_path(file_name); +#endif + +  ViewMsg_OpenFileForPluginResponse_Params result; +  RenderThread::current()->Send(new ViewMsg_OpenFileForPlugin( +      file_path, &result)); + +#if defined(OS_WIN) +  if (!result.file_handle) +    return NPERR_INVALID_PARAM; +  *handle = result.file_handle; +#elif defined(OS_POSIX) +  if (result.file_handle.fd == -1) +    return NPERR_INVALID_PARAM; +  *reinterpret_cast<int*>(handle) = result.file_handle.fd; +#endif + +  return NPERR_NO_ERROR; +}					diff --git a/webkit/tools/pepper_test_plugin/plugin_object.cc b/webkit/tools/pepper_test_plugin/plugin_object.cc <newline>index bd3e9e2..8af7591 100644 <newline>--- a/webkit/tools/pepper_test_plugin/plugin_object.cc <newline>+++ b/webkit/tools/pepper_test_plugin/plugin_object.cc <newline>@@ -25,6 +25,7 @@ <newline> #include "webkit/tools/pepper_test_plugin/plugin_object.h" <newline>+#include <stdio.h> <newline> #include <string> <newline> #include "base/logging.h" <newline>@@ -223,8 +224,7 @@ void DrawSampleBitmap(SkCanvas& canvas, int width, int height) { <newline>   canvas.drawPath(path, paint); <newline> } <newline>-NPInitializeRenderContextPtr initialize_render_context = NULL; <newline>-NPFlushRenderContextPtr flush_render_context = NULL; <newline>+NPPepperExtensions* pepper = NULL; <newline> void FlushCallback(NPRenderContext* context, void* user_data) { <newline> } <newline>@@ -237,15 +237,10 @@ void FlushCallback(NPRenderContext* context, void* user_data) { <newline> PluginObject::PluginObject(NPP npp) <newline>     : npp_(npp), <newline>       test_object_(browser->createobject(npp, GetTestClass())) { <newline>-  if (!initialize_render_context || !flush_render_context) { <newline>-    NPPepperExtensions* extensions; <newline>+  if (!pepper) { <newline>     browser->getvalue(npp_, NPNVPepperExtensions, <newline>-                      reinterpret_cast<void*>(&extensions)); <newline>-    CHECK(extensions); <newline>-    initialize_render_context = extensions->initializeRender; <newline>-    CHECK(initialize_render_context); <newline>-    flush_render_context = extensions->flushRender; <newline>-    CHECK(flush_render_context); <newline>+                      reinterpret_cast<void*>(&pepper)); <newline>+    CHECK(pepper); <newline>   } <newline> } <newline>@@ -259,11 +254,26 @@ NPClass* PluginObject::GetPluginClass() { <newline> } <newline> void PluginObject::SetWindow(const NPWindow& window) { <newline>+  // File test <newline>+  /* TODO(brettw): remove this when the file stuff is complete. This code is for <newline>+     testing the OpenFileInSandbox function which is not complete. <newline>+  { <newline>+    void* handle = (void*)112358; <newline>+    NPError err = pepper->openFile(npp_, <newline>+        "q:\\prj\\src2\\src\\webkit\\tools\\pepper_test_plugin\\README", <newline>+        &handle); <newline>+    CHECK(err == NPERR_NO_ERROR); <newline>+ <newline>+    char buf[256]; <newline>+    sprintf(buf, "Got the handle %d", (int)handle); <newline>+    ::MessageBoxA(NULL, buf, "pepper", 0); <newline>+  }*/ <newline>+ <newline>   size_.set_width(window.width); <newline>   size_.set_height(window.height); <newline>   NPRenderContext context; <newline>-  initialize_render_context(npp_, NPRenderGraphicsRGBA, &context); <newline>+  pepper->initializeRender(npp_, NPRenderGraphicsRGBA, &context); <newline>   SkBitmap bitmap; <newline>   bitmap.setConfig(SkBitmap::kARGB_8888_Config, window.width, window.height); <newline>@@ -276,5 +286,5 @@ void PluginObject::SetWindow(const NPWindow& window) { <newline>   // match. Could be a calling convention mismatch? <newline>   NPFlushRenderContextCallbackPtr callback = <newline>       reinterpret_cast<NPFlushRenderContextCallbackPtr>(&FlushCallback); <newline>-  flush_render_context(npp_, &context, callback, NULL); <newline>+  pepper->flushRender(npp_, &context, callback, NULL); <newline> }
edf21e6299d270c7e044e2f9c2f7f3135551c7c	brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 3 16:52:53 2009 +0000	Add the plumbing and test code for plugins opening files from the sandbox. This does not implement the actual opening of the files (currently the chain ends in resource_message_filter.cc), I will do that separately with some additional security review. This current patch just gets the synchronous request to the browser and returns a NULL result. TEST=none	none		http://codereview.chromium.org/340050	svn://svn.chromium.org/chrome/trunk/src@30819 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/webplugin_delegate_pepper.cc b/chrome/renderer/webplugin_delegate_pepper.cc <newline>index 30d29b7..1621406 100644 <newline>--- a/chrome/renderer/webplugin_delegate_pepper.cc <newline>+++ b/chrome/renderer/webplugin_delegate_pepper.cc <newline>@@ -16,6 +16,8 @@ <newline> #include "base/scoped_ptr.h" <newline> #include "base/stats_counters.h" <newline> #include "base/string_util.h" <newline>+#include "chrome/common/render_messages.h" <newline>+#include "chrome/renderer/render_thread.h" <newline> #include "webkit/api/public/WebInputEvent.h" <newline> #include "webkit/glue/glue_util.h" <newline> #include "webkit/glue/pepper/pepper.h" <newline>@@ -36,7 +38,9 @@ using WebKit::WebMouseEvent; <newline> using WebKit::WebMouseWheelEvent; <newline> namespace { <newline>-  const uint32 kBytesPerPixel = 4;  // Only 8888 RGBA for now. <newline>+ <newline>+const uint32 kBytesPerPixel = 4;  // Only 8888 RGBA for now. <newline>+ <newline> }  // namespace <newline> uint32 WebPluginDelegatePepper::next_buffer_id = 0; <newline>@@ -444,3 +448,30 @@ NPError WebPluginDelegatePepper::FlushRenderContext(NPRenderContext* context) {
d_bitmap_.setIsOpaque(false);			return NPERR_NO_ERROR; } + +NPError WebPluginDelegatePepper::OpenFileInSandbox(const char* file_name, +                                                   void** handle) { +  *handle = NULL; + +#if defined(OS_WIN) +  FilePath file_path(UTF8ToUTF16(file_name)); +#elif defined(OS_POSIX) +  FilePath file_path(file_name); +#endif + +  ViewMsg_OpenFileForPluginResponse_Params result; +  RenderThread::current()->Send(new ViewMsg_OpenFileForPlugin( +      file_path, &result)); + +#if defined(OS_WIN) +  if (!result.file_handle) +    return NPERR_INVALID_PARAM; +  *handle = result.file_handle; +#elif defined(OS_POSIX) +  if (result.file_handle.fd == -1) +    return NPERR_INVALID_PARAM; +  *reinterpret_cast<int*>(handle) = result.file_handle.fd; +#endif + +  return NPERR_NO_ERROR; +}					diff --git a/webkit/tools/pepper_test_plugin/plugin_object.cc b/webkit/tools/pepper_test_plugin/plugin_object.cc <newline>index bd3e9e2..8af7591 100644 <newline>--- a/webkit/tools/pepper_test_plugin/plugin_object.cc <newline>+++ b/webkit/tools/pepper_test_plugin/plugin_object.cc <newline>@@ -25,6 +25,7 @@ <newline> #include "webkit/tools/pepper_test_plugin/plugin_object.h" <newline>+#include <stdio.h> <newline> #include <string> <newline> #include "base/logging.h" <newline>@@ -223,8 +224,7 @@ void DrawSampleBitmap(SkCanvas& canvas, int width, int height) { <newline>   canvas.drawPath(path, paint); <newline> } <newline>-NPInitializeRenderContextPtr initialize_render_context = NULL; <newline>-NPFlushRenderContextPtr flush_render_context = NULL; <newline>+NPPepperExtensions* pepper = NULL; <newline> void FlushCallback(NPRenderContext* context, void* user_data) { <newline> } <newline>@@ -237,15 +237,10 @@ void FlushCallback(NPRenderContext* context, void* user_data) { <newline> PluginObject::PluginObject(NPP npp) <newline>     : npp_(npp), <newline>       test_object_(browser->createobject(npp, GetTestClass())) { <newline>-  if (!initialize_render_context || !flush_render_context) { <newline>-    NPPepperExtensions* extensions; <newline>+  if (!pepper) { <newline>     browser->getvalue(npp_, NPNVPepperExtensions, <newline>-                      reinterpret_cast<void*>(&extensions)); <newline>-    CHECK(extensions); <newline>-    initialize_render_context = extensions->initializeRender; <newline>-    CHECK(initialize_render_context); <newline>-    flush_render_context = extensions->flushRender; <newline>-    CHECK(flush_render_context); <newline>+                      reinterpret_cast<void*>(&pepper)); <newline>+    CHECK(pepper); <newline>   } <newline> } <newline>@@ -259,11 +254,26 @@ NPClass* PluginObject::GetPluginClass() { <newline> } <newline> void PluginObject::SetWindow(const NPWindow& window) { <newline>+  // File test <newline>+  /* TODO(brettw): remove this when the file stuff is complete. This code is for <newline>+     testing the OpenFileInSandbox function which is not complete. <newline>+  { <newline>+    void* handle = (void*)112358; <newline>+    NPError err = pepper->openFile(npp_, <newline>+        "q:\\prj\\src2\\src\\webkit\\tools\\pepper_test_plugin\\README", <newline>+        &handle); <newline>+    CHECK(err == NPERR_NO_ERROR); <newline>+ <newline>+    char buf[256]; <newline>+    sprintf(buf, "Got the handle %d", (int)handle); <newline>+    ::MessageBoxA(NULL, buf, "pepper", 0); <newline>+  }*/ <newline>+ <newline>   size_.set_width(window.width); <newline>   size_.set_height(window.height); <newline>   NPRenderContext context; <newline>-  initialize_render_context(npp_, NPRenderGraphicsRGBA, &context); <newline>+  pepper->initializeRender(npp_, NPRenderGraphicsRGBA, &context); <newline>   SkBitmap bitmap; <newline>   bitmap.setConfig(SkBitmap::kARGB_8888_Config, window.width, window.height); <newline>@@ -276,5 +286,5 @@ void PluginObject::SetWindow(const NPWindow& window) { <newline>   // match. Could be a calling convention mismatch? <newline>   NPFlushRenderContextCallbackPtr callback = <newline>       reinterpret_cast<NPFlushRenderContextCallbackPtr>(&FlushCallback); <newline>-  flush_render_context(npp_, &context, callback, NULL); <newline>+  pepper->flushRender(npp_, &context, callback, NULL); <newline> }
f7fcf9e0ab53325dd84c6fd75f4fb7ed452cc99	scherkus@chromium.org <scherkus@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 28 01:21:48 2009 +0000	Checking in checkbin.py, a tool to make sure our Windows binaries were built correctly. It looks for binaries built with /NXCOMPAT and /DYNAMICBASE, two important security features for Windows binaries. TEST=try running it on the output of /src/chrome/Debug	25952		http://codereview.chromium.org/338052	svn://svn.chromium.org/chrome/trunk/src@30304 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/tools/checkbin/checkbin.sh b/tools/checkbin/checkbin.sh <newline>new file mode 100755 <newline>index 0000000..7888d03 <newline>--- /dev/null <newline>+++ b/tools/checkbin/checkbin.sh <newline>@@ -0,0 +1,9 @@ <newline>+#!/bin/sh <newline>+# Copyright (c) 2009 The Chromium Authors. All rights reserved. <newline>+# Use of this source code is governed by a BSD-style license that can be <newline>+# found in the LICENSE file. <newline>+ <newline>+# Include pefile in the path. <newline>+PYTHONPATH="$(dirname $0)/../../third_party/pefile:$PYTHONPATH" <newline>+export PYTHONPATH <newline>+python "$(dirname $0)/checkbin.py" "$@"
57703192ce824cb359d7e405cf2f1caf4c90211	scherkus@chromium.org <scherkus@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 28 01:21:48 2009 +0000	Checking in checkbin.py, a tool to make sure our Windows binaries were built correctly. It looks for binaries built with /NXCOMPAT and /DYNAMICBASE, two important security features for Windows binaries. TEST=try running it on the output of /src/chrome/Debug	25952		http://codereview.chromium.org/338052	svn://svn.chromium.org/chrome/trunk/src@30304 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/tools/checkbin/checkbin.sh b/tools/checkbin/checkbin.sh <newline>new file mode 100755 <newline>index 0000000..7888d03 <newline>--- /dev/null <newline>+++ b/tools/checkbin/checkbin.sh <newline>@@ -0,0 +1,9 @@ <newline>+#!/bin/sh <newline>+# Copyright (c) 2009 The Chromium Authors. All rights reserved. <newline>+# Use of this source code is governed by a BSD-style license that can be <newline>+# found in the LICENSE file. <newline>+ <newline>+# Include pefile in the path. <newline>+PYTHONPATH="$(dirname $0)/../../third_party/pefile:$PYTHONPATH" <newline>+export PYTHONPATH <newline>+python "$(dirname $0)/checkbin.py" "$@"
120a628b24329614299fef82ebc81768fb95a65	japhet@chromium.org <japhet@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 27 23:28:10 2009 +0000	LayoutTests\http\tests\security\frameNavigation\xss-DENIED-plugin-navigation.html is no longer timing out.  Rebaseline to match win/linux expectations TEST=green build	JORLOW WIN : LayoutTests/fast/parser/remove-node-stack.html = CRASH		http://codereview.chromium.org/345003	svn://svn.chromium.org/chrome/trunk/src@30279 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 6dbe72c..9ec2d54 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -3001,7 +3001,6 @@ BUG20438 MAC : chrome/plugins/get-url-with-iframe-target-no-crash.html = TIMEOUT <newline> // Mac LayoutTest/http errors after removing blanket exception. <newline>-BUG20748 MAC : LayoutTests/http/tests/security/frameNavigation/xss-DENIED-plugin-navigation.html = TIMEOUT <newline>@@ -3303,6 +3302,7 @@ BUG_JORLOW LINUX : LayoutTests/transitions/background-transitions.html = TIMEOUT <newline>+BUG_JORLOW LINUX : LayoutTests/fast/multicol/column-rules-stacking.html = PASS FAIL <newline> // The following should be uncommented when the next line is no longer needed. <newline> // BUG24182 WIN LINUX DEBUG SLOW : LayoutTests/svg/css/getComputedStyle-basic.xhtml = PASS
2b53cf095b0d200d0ada9d608e3ced12912e070	japhet@chromium.org <japhet@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 27 23:28:10 2009 +0000	LayoutTests\http\tests\security\frameNavigation\xss-DENIED-plugin-navigation.html is no longer timing out.  Rebaseline to match win/linux expectations TEST=green build	JORLOW WIN : LayoutTests/fast/parser/remove-node-stack.html = CRASH		http://codereview.chromium.org/345003	svn://svn.chromium.org/chrome/trunk/src@30279 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 6dbe72c..9ec2d54 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -3001,7 +3001,6 @@ BUG20438 MAC : chrome/plugins/get-url-with-iframe-target-no-crash.html = TIMEOUT <newline> // Mac LayoutTest/http errors after removing blanket exception. <newline>-BUG20748 MAC : LayoutTests/http/tests/security/frameNavigation/xss-DENIED-plugin-navigation.html = TIMEOUT <newline>@@ -3303,6 +3302,7 @@ BUG_JORLOW LINUX : LayoutTests/transitions/background-transitions.html = TIMEOUT <newline>+BUG_JORLOW LINUX : LayoutTests/fast/multicol/column-rules-stacking.html = PASS FAIL <newline> // The following should be uncommented when the next line is no longer needed. <newline> // BUG24182 WIN LINUX DEBUG SLOW : LayoutTests/svg/css/getComputedStyle-basic.xhtml = PASS
c2bf72d888e46438b97b5a0d14df2f9ad2c8072	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Oct 26 17:01:43 2009 +0000	Add a CERT_RDN_ENCODED_BLOB case to CertSubjectCommonNameHasNull because we get CERT_RDN_ENCODED_BLOB on machines patched for the CryptoAPI ASN.1 security vulnerabilities. R=rvargas TEST=the X509CertificateTest.PaypalNullCertParsing test in net_unittests (debug build) should not hit a NOTREACHED() assertion failure when running on a patched Windows machine.	24190		http://codereview.chromium.org/337014	svn://svn.chromium.org/chrome/trunk/src@30057 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/x509_certificate_win.cc b/net/base/x509_certificate_win.cc <newline>index 0ae4cfb..91c1fd8 100644 <newline>--- a/net/base/x509_certificate_win.cc <newline>+++ b/net/base/x509_certificate_win.cc <newline>@@ -204,6 +204,12 @@ bool CertSubjectCommonNameHasNull(PCCERT_CONTEXT cert) { <newline>         PCERT_RDN_ATTR rdn_attr = &rdn->rgRDNAttr[j]; <newline>         if (strcmp(rdn_attr->pszObjId, szOID_COMMON_NAME) == 0) { <newline>           switch (rdn_attr->dwValueType) { <newline>+            // After the CryptoAPI ASN.1 security vulnerabilities described in <newline>+            // http://www.microsoft.com/technet/security/Bulletin/MS09-056.mspx <newline>+            // were patched, we get CERT_RDN_ENCODED_BLOB for a common name <newline>+            // that contains a NULL character. <newline>+            case CERT_RDN_ENCODED_BLOB: <newline>+              break; <newline>             // Array of 8-bit characters. <newline>             case CERT_RDN_PRINTABLE_STRING: <newline>             case CERT_RDN_TELETEX_STRING:
36eabf380e2818b8b181f8af4bb4a89aeabe59b	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Oct 26 17:01:43 2009 +0000	Add a CERT_RDN_ENCODED_BLOB case to CertSubjectCommonNameHasNull because we get CERT_RDN_ENCODED_BLOB on machines patched for the CryptoAPI ASN.1 security vulnerabilities. R=rvargas TEST=the X509CertificateTest.PaypalNullCertParsing test in net_unittests (debug build) should not hit a NOTREACHED() assertion failure when running on a patched Windows machine.	24190		http://codereview.chromium.org/337014	svn://svn.chromium.org/chrome/trunk/src@30057 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/x509_certificate_win.cc b/net/base/x509_certificate_win.cc <newline>index 0ae4cfb..91c1fd8 100644 <newline>--- a/net/base/x509_certificate_win.cc <newline>+++ b/net/base/x509_certificate_win.cc <newline>@@ -204,6 +204,12 @@ bool CertSubjectCommonNameHasNull(PCCERT_CONTEXT cert) { <newline>         PCERT_RDN_ATTR rdn_attr = &rdn->rgRDNAttr[j]; <newline>         if (strcmp(rdn_attr->pszObjId, szOID_COMMON_NAME) == 0) { <newline>           switch (rdn_attr->dwValueType) { <newline>+            // After the CryptoAPI ASN.1 security vulnerabilities described in <newline>+            // http://www.microsoft.com/technet/security/Bulletin/MS09-056.mspx <newline>+            // were patched, we get CERT_RDN_ENCODED_BLOB for a common name <newline>+            // that contains a NULL character. <newline>+            case CERT_RDN_ENCODED_BLOB: <newline>+              break; <newline>             // Array of 8-bit characters. <newline>             case CERT_RDN_PRINTABLE_STRING: <newline>             case CERT_RDN_TELETEX_STRING:
9ab547a695a0bfae6bf21803de3a0a21e01bb35	nsylvain@chromium.org <nsylvain@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 23 00:22:57 2009 +0000	Revert 29827 - Refactor securityicon code to a more general form, also more consistent with the Windows implementation, in preparation for implementing page actions. TEST=unit tests included TBR=pamg@google.com	14899, 22922, 12281		http://codereview.chromium.org/333002	svn://svn.chromium.org/chrome/trunk/src@29847 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/cocoa/location_bar_view_mac.mm b/chrome/browser/cocoa/location_bar_view_mac.mm <newline>index c08633b..a4d2e64 100644 <newline>--- a/chrome/browser/cocoa/location_bar_view_mac.mm <newline>+++ b/chrome/browser/cocoa/location_bar_view_mac.mm <newline>@@ -12,7 +12,6 @@ <newline> #include "chrome/browser/alternate_nav_url_fetcher.h" <newline> #import "chrome/browser/app_controller_mac.h" <newline> #import "chrome/browser/autocomplete/autocomplete_edit_view_mac.h" <newline>-#include "chrome/browser/browser_list.h" <newline> #import "chrome/browser/cocoa/autocomplete_text_field.h" <newline> #import "chrome/browser/cocoa/autocomplete_text_field_cell.h" <newline> #include "chrome/browser/cocoa/event_utils.h" <newline>@@ -20,8 +19,6 @@ <newline> #include "chrome/browser/profile.h" <newline> #include "chrome/browser/search_engines/template_url.h" <newline> #include "chrome/browser/search_engines/template_url_model.h" <newline>-#include "chrome/browser/tab_contents/navigation_entry.h" <newline>-#include "chrome/browser/tab_contents/tab_contents.h" <newline> #include "grit/generated_resources.h" <newline> #include "grit/theme_resources.h" <newline> #include "skia/ext/skia_utils_mac.h" <newline>@@ -84,12 +81,9 @@ LocationBarViewMac::LocationBarViewMac( <newline>       command_updater_(command_updater), <newline>       field_(field), <newline>       disposition_(CURRENT_TAB), <newline>-      security_image_view_(profile, toolbar_model), <newline>       profile_(profile), <newline>       toolbar_model_(toolbar_model), <newline>       transition_(PageTransition::TYPED) { <newline>-  AutocompleteTextFieldCell* cell = [field_ autocompleteTextFieldCell]; <newline>-  [cell setSecurityImageView:&security_image_view_]; <newline> } <newline> LocationBarViewMac::~LocationBarViewMac() { <newline>@@ -309,120 +303,40 @@ NSImage* LocationBarViewMac::GetTabButtonImage() { <newline>   return tab_button_image_; <newline> } <newline>-void LocationBarViewMac::SetSecurityIconLabel() { <newline>-  std::wstring info_text; <newline>-  std::wstring info_tooltip; <newline>+void LocationBarViewMac::SetSecurityIcon(ToolbarModel::Icon security_icon) { <newline>+  std::wstring info_text, info_tooltip; <newline>   ToolbarModel::InfoTextType info_text_type = <newline>       toolbar_model_->GetInfoText(&info_text, &info_tooltip); <newline>+  NSColor* color = nil; <newline>+  NSString* icon_label = nil; <newline>   if (info_text_type == ToolbarModel::INFO_EV_TEXT) { <newline>-    NSString* icon_label = base::SysWideToNSString(info_text); <newline>-    NSColor* color = [NSColor colorWithCalibratedRed:kEvTextColorRedComponent <newline>-                                               green:kEvTextColorGreenComponent <newline>-                                                blue:kEvTextColorBlueComponent <newline>-                                               alpha:1.0]; <newline>-    security_image_view_.SetLabel(icon_label, [field_ font], color); <newline>-  } else { <newline>-    security_image_view_.SetLabel(nil, nil, nil); <newline>+    icon_label = base::SysWideToNSString(info_text); <newline>+    color = <newline>+      [NSColor colorWithCalibratedRed:kEvTextColorRedComponent <newline>+                                green:kEvTextColorGreenComponent <newline>+                                 blue:kEvTextColorBlueComponent <newline>+                                alpha:1.0]; <newline>   } <newline>-} <newline>-void LocationBarViewMac::SetSecurityIcon(ToolbarModel::Icon icon) { <newline>-  switch (icon) { <newline>+  ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>+  AutocompleteTextFieldCell* cell = [field_ autocompleteTextFieldCell]; <newline>+  switch (security_icon) { <newline>     case ToolbarModel::LOCK_ICON: <newline>-      security_image_view_.SetImageShown(SecurityImageView::LOCK); <newline>-      security_image_view_.SetVisible(true); <newline>-      SetSecurityIconLabel(); <newline>+      [cell setHintIcon:rb.GetNSImageNamed(IDR_LOCK) <newline>+                  label:icon_label <newline>+                  color:color]; <newline>       break; <newline>     case ToolbarModel::WARNING_ICON: <newline>-      security_image_view_.SetImageShown(SecurityImageView::WARNING); <newline>-      security_image_view_.SetVisible(true); <newline>-      SetSecurityIconLabel(); <newline>+      [cell setHintIcon:rb.GetNSImageNamed(IDR_WARNING) <newline>+                  label:icon_label <newline>+                  color:color]; <newline>       break; <newline>     case ToolbarModel::NO_ICON: <newline>-      security_image_view_.SetVisible(false); <newline>+      [cell setHintIcon:nil label:nil color:nil]; <newline>       break; <newline>     default: <newline>       NOTREACHED(); <newline>-      security_image_view_.SetVisible(false); <newline>       break; <newline>   } <newline>   [field_ resetFieldEditorFrameIfNeeded]; <newline> } <newline>- <newline>-// LocationBarImageView--------------------------------------------------------- <newline>- <newline>-void LocationBarViewMac::LocationBarImageView::SetImage(NSImage* image) { <newline>-  image_.reset([image retain]); <newline>-} <newline>- <newline>-void LocationBarViewMac::LocationBarImageView::SetLabel(NSString* text, <newline>-                                                        NSFont* baseFont, <newline>-                                                        NSColor* color) { <newline>-  // Create an attributed string for the label, if a label was given. <newline>-  label_.reset(); <newline>-  if (text) { <newline>-    DCHECK(color); <newline>-    DCHECK(baseFont); <newline>-    NSFont* font = [NSFont fontWithDescriptor:[baseFont fontDescriptor] <newline>-                                         size:[baseFont pointSize] - 2.0]; <newline>-    NSDictionary* attributes = <newline>-        [NSDictionary dictionaryWithObjectsAndKeys: <newline>-         color, NSForegroundColorAttributeName, <newline>-         font, NSFontAttributeName, <newline>-         NULL]; <newline>-    NSAttributedString* attrStr = <newline>-        [[NSAttributedString alloc] initWithString:text attributes:attributes]; <newline>-    label_.reset(attrStr); <newline>-  } <newline>-} <newline>- <newline>-void LocationBarViewMac::LocationBarImageView::SetVisible(bool visible) { <newline>-  DCHECK(!visible || image_); <newline>-  visible_ = visible; <newline>-} <newline>- <newline>-// SecurityImageView------------------------------------------------------------ <newline>- <newline>-LocationBarViewMac::SecurityImageView::SecurityImageView( <newline>-    Profile* profile, <newline>-    ToolbarModel* model) <newline>-    : lock_icon_(nil), <newline>-      warning_icon_(nil), <newline>-      profile_(profile), <newline>-      model_(model) {} <newline>- <newline>-LocationBarViewMac::SecurityImageView::~SecurityImageView() {} <newline>- <newline>-void LocationBarViewMac::SecurityImageView::SetImageShown(Image image) { <newline>-  switch (image) { <newline>-    case LOCK: <newline>-      if (!lock_icon_.get()) { <newline>-        ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>-        lock_icon_.reset([rb.GetNSImageNamed(IDR_LOCK) retain]); <newline>-      } <newline>-      SetImage(lock_icon_); <newline>-      break; <newline>-    case WARNING: <newline>-      if (!warning_icon_.get()) { <newline>-        ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>-        warning_icon_.reset([rb.GetNSImageNamed(IDR_WARNING) retain]); <newline>-      } <newline>-      SetImage(warning_icon_); <newline>-      break; <newline>-    default: <newline>-      NOTREACHED(); <newline>-      break; <newline>-  } <newline>-} <newline>- <newline>- <newline>-bool LocationBarViewMac::SecurityImageView::OnMousePressed() { <newline>-  TabContents* tab = BrowserList::GetLastActive()->GetSelectedTabContents(); <newline>-  NavigationEntry* nav_entry = tab->controller().GetActiveEntry(); <newline>-  if (!nav_entry) { <newline>-    NOTREACHED(); <newline>-    return true; <newline>-  } <newline>-  tab->ShowPageInfo(nav_entry->url(), nav_entry->ssl(), true); <newline>-  return true; <newline>-}
1449b3dc0ac325ab90bc1418bab8a7dda947f3e	nsylvain@chromium.org <nsylvain@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 23 00:22:57 2009 +0000	Revert 29827 - Refactor securityicon code to a more general form, also more consistent with the Windows implementation, in preparation for implementing page actions. TEST=unit tests included TBR=pamg@google.com	14899, 22922, 12281		http://codereview.chromium.org/333002	svn://svn.chromium.org/chrome/trunk/src@29847 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/cocoa/location_bar_view_mac.mm b/chrome/browser/cocoa/location_bar_view_mac.mm <newline>index c08633b..a4d2e64 100644 <newline>--- a/chrome/browser/cocoa/location_bar_view_mac.mm <newline>+++ b/chrome/browser/cocoa/location_bar_view_mac.mm <newline>@@ -12,7 +12,6 @@ <newline> #include "chrome/browser/alternate_nav_url_fetcher.h" <newline> #import "chrome/browser/app_controller_mac.h" <newline> #import "chrome/browser/autocomplete/autocomplete_edit_view_mac.h" <newline>-#include "chrome/browser/browser_list.h" <newline> #import "chrome/browser/cocoa/autocomplete_text_field.h" <newline> #import "chrome/browser/cocoa/autocomplete_text_field_cell.h" <newline> #include "chrome/browser/cocoa/event_utils.h" <newline>@@ -20,8 +19,6 @@ <newline> #include "chrome/browser/profile.h" <newline> #include "chrome/browser/search_engines/template_url.h" <newline> #include "chrome/browser/search_engines/template_url_model.h" <newline>-#include "chrome/browser/tab_contents/navigation_entry.h" <newline>-#include "chrome/browser/tab_contents/tab_contents.h" <newline> #include "grit/generated_resources.h" <newline> #include "grit/theme_resources.h" <newline> #include "skia/ext/skia_utils_mac.h" <newline>@@ -84,12 +81,9 @@ LocationBarViewMac::LocationBarViewMac( <newline>       command_updater_(command_updater), <newline>       field_(field), <newline>       disposition_(CURRENT_TAB), <newline>-      security_image_view_(profile, toolbar_model), <newline>       profile_(profile), <newline>       toolbar_model_(toolbar_model), <newline>       transition_(PageTransition::TYPED) { <newline>-  AutocompleteTextFieldCell* cell = [field_ autocompleteTextFieldCell]; <newline>-  [cell setSecurityImageView:&security_image_view_]; <newline> } <newline> LocationBarViewMac::~LocationBarViewMac() { <newline>@@ -309,120 +303,40 @@ NSImage* LocationBarViewMac::GetTabButtonImage() { <newline>   return tab_button_image_; <newline> } <newline>-void LocationBarViewMac::SetSecurityIconLabel() { <newline>-  std::wstring info_text; <newline>-  std::wstring info_tooltip; <newline>+void LocationBarViewMac::SetSecurityIcon(ToolbarModel::Icon security_icon) { <newline>+  std::wstring info_text, info_tooltip; <newline>   ToolbarModel::InfoTextType info_text_type = <newline>       toolbar_model_->GetInfoText(&info_text, &info_tooltip); <newline>+  NSColor* color = nil; <newline>+  NSString* icon_label = nil; <newline>   if (info_text_type == ToolbarModel::INFO_EV_TEXT) { <newline>-    NSString* icon_label = base::SysWideToNSString(info_text); <newline>-    NSColor* color = [NSColor colorWithCalibratedRed:kEvTextColorRedComponent <newline>-                                               green:kEvTextColorGreenComponent <newline>-                                                blue:kEvTextColorBlueComponent <newline>-                                               alpha:1.0]; <newline>-    security_image_view_.SetLabel(icon_label, [field_ font], color); <newline>-  } else { <newline>-    security_image_view_.SetLabel(nil, nil, nil); <newline>+    icon_label = base::SysWideToNSString(info_text); <newline>+    color = <newline>+      [NSColor colorWithCalibratedRed:kEvTextColorRedComponent <newline>+                                green:kEvTextColorGreenComponent <newline>+                                 blue:kEvTextColorBlueComponent <newline>+                                alpha:1.0]; <newline>   } <newline>-} <newline>-void LocationBarViewMac::SetSecurityIcon(ToolbarModel::Icon icon) { <newline>-  switch (icon) { <newline>+  ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>+  AutocompleteTextFieldCell* cell = [field_ autocompleteTextFieldCell]; <newline>+  switch (security_icon) { <newline>     case ToolbarModel::LOCK_ICON: <newline>-      security_image_view_.SetImageShown(SecurityImageView::LOCK); <newline>-      security_image_view_.SetVisible(true); <newline>-      SetSecurityIconLabel(); <newline>+      [cell setHintIcon:rb.GetNSImageNamed(IDR_LOCK) <newline>+                  label:icon_label <newline>+                  color:color]; <newline>       break; <newline>     case ToolbarModel::WARNING_ICON: <newline>-      security_image_view_.SetImageShown(SecurityImageView::WARNING); <newline>-      security_image_view_.SetVisible(true); <newline>-      SetSecurityIconLabel(); <newline>+      [cell setHintIcon:rb.GetNSImageNamed(IDR_WARNING) <newline>+                  label:icon_label <newline>+                  color:color]; <newline>       break; <newline>     case ToolbarModel::NO_ICON: <newline>-      security_image_view_.SetVisible(false); <newline>+      [cell setHintIcon:nil label:nil color:nil]; <newline>       break; <newline>     default: <newline>       NOTREACHED(); <newline>-      security_image_view_.SetVisible(false); <newline>       break; <newline>   } <newline>   [field_ resetFieldEditorFrameIfNeeded]; <newline> } <newline>- <newline>-// LocationBarImageView--------------------------------------------------------- <newline>- <newline>-void LocationBarViewMac::LocationBarImageView::SetImage(NSImage* image) { <newline>-  image_.reset([image retain]); <newline>-} <newline>- <newline>-void LocationBarViewMac::LocationBarImageView::SetLabel(NSString* text, <newline>-                                                        NSFont* baseFont, <newline>-                                                        NSColor* color) { <newline>-  // Create an attributed string for the label, if a label was given. <newline>-  label_.reset(); <newline>-  if (text) { <newline>-    DCHECK(color); <newline>-    DCHECK(baseFont); <newline>-    NSFont* font = [NSFont fontWithDescriptor:[baseFont fontDescriptor] <newline>-                                         size:[baseFont pointSize] - 2.0]; <newline>-    NSDictionary* attributes = <newline>-        [NSDictionary dictionaryWithObjectsAndKeys: <newline>-         color, NSForegroundColorAttributeName, <newline>-         font, NSFontAttributeName, <newline>-         NULL]; <newline>-    NSAttributedString* attrStr = <newline>-        [[NSAttributedString alloc] initWithString:text attributes:attributes]; <newline>-    label_.reset(attrStr); <newline>-  } <newline>-} <newline>- <newline>-void LocationBarViewMac::LocationBarImageView::SetVisible(bool visible) { <newline>-  DCHECK(!visible || image_); <newline>-  visible_ = visible; <newline>-} <newline>- <newline>-// SecurityImageView------------------------------------------------------------ <newline>- <newline>-LocationBarViewMac::SecurityImageView::SecurityImageView( <newline>-    Profile* profile, <newline>-    ToolbarModel* model) <newline>-    : lock_icon_(nil), <newline>-      warning_icon_(nil), <newline>-      profile_(profile), <newline>-      model_(model) {} <newline>- <newline>-LocationBarViewMac::SecurityImageView::~SecurityImageView() {} <newline>- <newline>-void LocationBarViewMac::SecurityImageView::SetImageShown(Image image) { <newline>-  switch (image) { <newline>-    case LOCK: <newline>-      if (!lock_icon_.get()) { <newline>-        ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>-        lock_icon_.reset([rb.GetNSImageNamed(IDR_LOCK) retain]); <newline>-      } <newline>-      SetImage(lock_icon_); <newline>-      break; <newline>-    case WARNING: <newline>-      if (!warning_icon_.get()) { <newline>-        ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>-        warning_icon_.reset([rb.GetNSImageNamed(IDR_WARNING) retain]); <newline>-      } <newline>-      SetImage(warning_icon_); <newline>-      break; <newline>-    default: <newline>-      NOTREACHED(); <newline>-      break; <newline>-  } <newline>-} <newline>- <newline>- <newline>-bool LocationBarViewMac::SecurityImageView::OnMousePressed() { <newline>-  TabContents* tab = BrowserList::GetLastActive()->GetSelectedTabContents(); <newline>-  NavigationEntry* nav_entry = tab->controller().GetActiveEntry(); <newline>-  if (!nav_entry) { <newline>-    NOTREACHED(); <newline>-    return true; <newline>-  } <newline>-  tab->ShowPageInfo(nav_entry->url(), nav_entry->ssl(), true); <newline>-  return true; <newline>-}
fa5ac3ece80f6f41c9502ee15f8c393990b7ed5	pamg@google.com <pamg@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Oct 22 22:01:07 2009 +0000	Refactor security-icon code to a more general form, also more consistent with the Windows implementation, in preparation for implementing page actions. TEST=unit tests included	14899, 22922, 12281		http://codereview.chromium.org/264037	svn://svn.chromium.org/chrome/trunk/src@29827 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/cocoa/location_bar_view_mac.mm b/chrome/browser/cocoa/location_bar_view_mac.mm <newline>index a4d2e64..c08633b 100644 <newline>--- a/chrome/browser/cocoa/location_bar_view_mac.mm <newline>+++ b/chrome/browser/cocoa/location_bar_view_mac.mm <newline>@@ -12,6 +12,7 @@ <newline> #include "chrome/browser/alternate_nav_url_fetcher.h" <newline> #import "chrome/browser/app_controller_mac.h" <newline> #import "chrome/browser/autocomplete/autocomplete_edit_view_mac.h" <newline>+#include "chrome/browser/browser_list.h" <newline> #import "chrome/browser/cocoa/autocomplete_text_field.h" <newline> #import "chrome/browser/cocoa/autocomplete_text_field_cell.h" <newline> #include "chrome/browser/cocoa/event_utils.h" <newline>@@ -19,6 +20,8 @@ <newline> #include "chrome/browser/profile.h" <newline> #include "chrome/browser/search_engines/template_url.h" <newline> #include "chrome/browser/search_engines/template_url_model.h" <newline>+#include "chrome/browser/tab_contents/navigation_entry.h" <newline>+#include "chrome/browser/tab_contents/tab_contents.h" <newline> #include "grit/generated_resources.h" <newline> #include "grit/theme_resources.h" <newline> #include "skia/ext/skia_utils_mac.h" <newline>@@ -81,9 +84,12 @@ LocationBarViewMac::LocationBarViewMac( <newline>       command_updater_(command_updater), <newline>       field_(field), <newline>       disposition_(CURRENT_TAB), <newline>+      security_image_view_(profile, toolbar_model), <newline>       profile_(profile), <newline>       toolbar_model_(toolbar_model), <newline>       transition_(PageTransition::TYPED) { <newline>+  AutocompleteTextFieldCell* cell = [field_ autocompleteTextFieldCell]; <newline>+  [cell setSecurityImageView:&security_image_view_]; <newline> } <newline> LocationBarViewMac::~LocationBarViewMac() { <newline>@@ -303,40 +309,120 @@ NSImage* LocationBarViewMac::GetTabButtonImage() { <newline>   return tab_button_image_; <newline> } <newline>-void LocationBarViewMac::SetSecurityIcon(ToolbarModel::Icon security_icon) { <newline>-  std::wstring info_text, info_tooltip; <newline>+void LocationBarViewMac::SetSecurityIconLabel() { <newline>+  std::wstring info_text; <newline>+  std::wstring info_tooltip; <newline>   ToolbarModel::InfoTextType info_text_type = <newline>       toolbar_model_->GetInfoText(&info_text, &info_tooltip); <newline>-  NSColor* color = nil; <newline>-  NSString* icon_label = nil; <newline>   if (info_text_type == ToolbarModel::INFO_EV_TEXT) { <newline>-    icon_label = base::SysWideToNSString(info_text); <newline>-    color = <newline>-      [NSColor colorWithCalibratedRed:kEvTextColorRedComponent <newline>-                                green:kEvTextColorGreenComponent <newline>-                                 blue:kEvTextColorBlueComponent <newline>-                                alpha:1.0]; <newline>+    NSString* icon_label = base::SysWideToNSString(info_text); <newline>+    NSColor* color = [NSColor colorWithCalibratedRed:kEvTextColorRedComponent <newline>+                                               green:kEvTextColorGreenComponent <newline>+                                                blue:kEvTextColorBlueComponent <newline>+                                               alpha:1.0]; <newline>+    security_image_view_.SetLabel(icon_label, [field_ font], color); <newline>+  } else { <newline>+    security_image_view_.SetLabel(nil, nil, nil); <newline>   } <newline>+} <newline>-  ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>-  AutocompleteTextFieldCell* cell = [field_ autocompleteTextFieldCell]; <newline>-  switch (security_icon) { <newline>+void LocationBarViewMac::SetSecurityIcon(ToolbarModel::Icon icon) { <newline>+  switch (icon) { <newline>     case ToolbarModel::LOCK_ICON: <newline>-      [cell setHintIcon:rb.GetNSImageNamed(IDR_LOCK) <newline>-                  label:icon_label <newline>-                  color:color]; <newline>+      security_image_view_.SetImageShown(SecurityImageView::LOCK); <newline>+      security_image_view_.SetVisible(true); <newline>+      SetSecurityIconLabel(); <newline>       break; <newline>     case ToolbarModel::WARNING_ICON: <newline>-      [cell setHintIcon:rb.GetNSImageNamed(IDR_WARNING) <newline>-                  label:icon_label <newline>-                  color:color]; <newline>+      security_image_view_.SetImageShown(SecurityImageView::WARNING); <newline>+      security_image_view_.SetVisible(true); <newline>+      SetSecurityIconLabel(); <newline>       break; <newline>     case ToolbarModel::NO_ICON: <newline>-      [cell setHintIcon:nil label:nil color:nil]; <newline>+      security_image_view_.SetVisible(false); <newline>       break; <newline>     default: <newline>       NOTREACHED(); <newline>+      security_image_view_.SetVisible(false); <newline>       break; <newline>   } <newline>   [field_ resetFieldEditorFrameIfNeeded]; <newline> } <newline>+ <newline>+// LocationBarImageView--------------------------------------------------------- <newline>+ <newline>+void LocationBarViewMac::LocationBarImageView::SetImage(NSImage* image) { <newline>+  image_.reset([image retain]); <newline>+} <newline>+ <newline>+void LocationBarViewMac::LocationBarImageView::SetLabel(NSString* text, <newline>+                                                        NSFont* baseFont, <newline>+                                                        NSColor* color) { <newline>+  // Create an attributed string for the label, if a label was given. <newline>+  label_.reset(); <newline>+  if (text) { <newline>+    DCHECK(color); <newline>+    DCHECK(baseFont); <newline>+    NSFont* font = [NSFont fontWithDescriptor:[baseFont fontDescriptor] <newline>+                                         size:[baseFont pointSize] - 2.0]; <newline>+    NSDictionary* attributes = <newline>+        [NSDictionary dictionaryWithObjectsAndKeys: <newline>+         color, NSForegroundColorAttributeName, <newline>+         font, NSFontAttributeName, <newline>+         NULL]; <newline>+    NSAttributedString* attrStr = <newline>+        [[NSAttributedString alloc] initWithString:text attributes:attributes]; <newline>+    label_.reset(attrStr); <newline>+  } <newline>+} <newline>+ <newline>+void LocationBarViewMac::LocationBarImageView::SetVisible(bool visible) { <newline>+  DCHECK(!visible || image_); <newline>+  visible_ = visible; <newline>+} <newline>+ <newline>+// SecurityImageView------------------------------------------------------------ <newline>+ <newline>+LocationBarViewMac::SecurityImageView::SecurityImageView( <newline>+    Profile* profile, <newline>+    ToolbarModel* model) <newline>+    : lock_icon_(nil), <newline>+      warning_icon_(nil), <newline>+      profile_(profile), <newline>+      model_(model) {} <newline>+ <newline>+LocationBarViewMac::SecurityImageView::~SecurityImageView() {} <newline>+ <newline>+void LocationBarViewMac::SecurityImageView::SetImageShown(Image image) { <newline>+  switch (image) { <newline>+    case LOCK: <newline>+      if (!lock_icon_.get()) { <newline>+        ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>+        lock_icon_.reset([rb.GetNSImageNamed(IDR_LOCK) retain]); <newline>+      } <newline>+      SetImage(lock_icon_); <newline>+      break; <newline>+    case WARNING: <newline>+      if (!warning_icon_.get()) { <newline>+        ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>+        warning_icon_.reset([rb.GetNSImageNamed(IDR_WARNING) retain]); <newline>+      } <newline>+      SetImage(warning_icon_); <newline>+      break; <newline>+    default: <newline>+      NOTREACHED(); <newline>+      break; <newline>+  } <newline>+} <newline>+ <newline>+ <newline>+bool LocationBarViewMac::SecurityImageView::OnMousePressed() { <newline>+  TabContents* tab = BrowserList::GetLastActive()->GetSelectedTabContents(); <newline>+  NavigationEntry* nav_entry = tab->controller().GetActiveEntry(); <newline>+  if (!nav_entry) { <newline>+    NOTREACHED(); <newline>+    return true; <newline>+  } <newline>+  tab->ShowPageInfo(nav_entry->url(), nav_entry->ssl(), true); <newline>+  return true; <newline>+}
05dfb4047a28defa718f5d2d6e7fa16497f927b	pamg@google.com <pamg@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Oct 22 22:01:07 2009 +0000	Refactor security-icon code to a more general form, also more consistent with the Windows implementation, in preparation for implementing page actions. TEST=unit tests included	14899, 22922, 12281		http://codereview.chromium.org/264037	svn://svn.chromium.org/chrome/trunk/src@29827 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/cocoa/location_bar_view_mac.mm b/chrome/browser/cocoa/location_bar_view_mac.mm <newline>index a4d2e64..c08633b 100644 <newline>--- a/chrome/browser/cocoa/location_bar_view_mac.mm <newline>+++ b/chrome/browser/cocoa/location_bar_view_mac.mm <newline>@@ -12,6 +12,7 @@ <newline> #include "chrome/browser/alternate_nav_url_fetcher.h" <newline> #import "chrome/browser/app_controller_mac.h" <newline> #import "chrome/browser/autocomplete/autocomplete_edit_view_mac.h" <newline>+#include "chrome/browser/browser_list.h" <newline> #import "chrome/browser/cocoa/autocomplete_text_field.h" <newline> #import "chrome/browser/cocoa/autocomplete_text_field_cell.h" <newline> #include "chrome/browser/cocoa/event_utils.h" <newline>@@ -19,6 +20,8 @@ <newline> #include "chrome/browser/profile.h" <newline> #include "chrome/browser/search_engines/template_url.h" <newline> #include "chrome/browser/search_engines/template_url_model.h" <newline>+#include "chrome/browser/tab_contents/navigation_entry.h" <newline>+#include "chrome/browser/tab_contents/tab_contents.h" <newline> #include "grit/generated_resources.h" <newline> #include "grit/theme_resources.h" <newline> #include "skia/ext/skia_utils_mac.h" <newline>@@ -81,9 +84,12 @@ LocationBarViewMac::LocationBarViewMac( <newline>       command_updater_(command_updater), <newline>       field_(field), <newline>       disposition_(CURRENT_TAB), <newline>+      security_image_view_(profile, toolbar_model), <newline>       profile_(profile), <newline>       toolbar_model_(toolbar_model), <newline>       transition_(PageTransition::TYPED) { <newline>+  AutocompleteTextFieldCell* cell = [field_ autocompleteTextFieldCell]; <newline>+  [cell setSecurityImageView:&security_image_view_]; <newline> } <newline> LocationBarViewMac::~LocationBarViewMac() { <newline>@@ -303,40 +309,120 @@ NSImage* LocationBarViewMac::GetTabButtonImage() { <newline>   return tab_button_image_; <newline> } <newline>-void LocationBarViewMac::SetSecurityIcon(ToolbarModel::Icon security_icon) { <newline>-  std::wstring info_text, info_tooltip; <newline>+void LocationBarViewMac::SetSecurityIconLabel() { <newline>+  std::wstring info_text; <newline>+  std::wstring info_tooltip; <newline>   ToolbarModel::InfoTextType info_text_type = <newline>       toolbar_model_->GetInfoText(&info_text, &info_tooltip); <newline>-  NSColor* color = nil; <newline>-  NSString* icon_label = nil; <newline>   if (info_text_type == ToolbarModel::INFO_EV_TEXT) { <newline>-    icon_label = base::SysWideToNSString(info_text); <newline>-    color = <newline>-      [NSColor colorWithCalibratedRed:kEvTextColorRedComponent <newline>-                                green:kEvTextColorGreenComponent <newline>-                                 blue:kEvTextColorBlueComponent <newline>-                                alpha:1.0]; <newline>+    NSString* icon_label = base::SysWideToNSString(info_text); <newline>+    NSColor* color = [NSColor colorWithCalibratedRed:kEvTextColorRedComponent <newline>+                                               green:kEvTextColorGreenComponent <newline>+                                                blue:kEvTextColorBlueComponent <newline>+                                               alpha:1.0]; <newline>+    security_image_view_.SetLabel(icon_label, [field_ font], color); <newline>+  } else { <newline>+    security_image_view_.SetLabel(nil, nil, nil); <newline>   } <newline>+} <newline>-  ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>-  AutocompleteTextFieldCell* cell = [field_ autocompleteTextFieldCell]; <newline>-  switch (security_icon) { <newline>+void LocationBarViewMac::SetSecurityIcon(ToolbarModel::Icon icon) { <newline>+  switch (icon) { <newline>     case ToolbarModel::LOCK_ICON: <newline>-      [cell setHintIcon:rb.GetNSImageNamed(IDR_LOCK) <newline>-                  label:icon_label <newline>-                  color:color]; <newline>+      security_image_view_.SetImageShown(SecurityImageView::LOCK); <newline>+      security_image_view_.SetVisible(true); <newline>+      SetSecurityIconLabel(); <newline>       break; <newline>     case ToolbarModel::WARNING_ICON: <newline>-      [cell setHintIcon:rb.GetNSImageNamed(IDR_WARNING) <newline>-                  label:icon_label <newline>-                  color:color]; <newline>+      security_image_view_.SetImageShown(SecurityImageView::WARNING); <newline>+      security_image_view_.SetVisible(true); <newline>+      SetSecurityIconLabel(); <newline>       break; <newline>     case ToolbarModel::NO_ICON: <newline>-      [cell setHintIcon:nil label:nil color:nil]; <newline>+      security_image_view_.SetVisible(false); <newline>       break; <newline>     default: <newline>       NOTREACHED(); <newline>+      security_image_view_.SetVisible(false); <newline>       break; <newline>   } <newline>   [field_ resetFieldEditorFrameIfNeeded]; <newline> } <newline>+ <newline>+// LocationBarImageView--------------------------------------------------------- <newline>+ <newline>+void LocationBarViewMac::LocationBarImageView::SetImage(NSImage* image) { <newline>+  image_.reset([image retain]); <newline>+} <newline>+ <newline>+void LocationBarViewMac::LocationBarImageView::SetLabel(NSString* text, <newline>+                                                        NSFont* baseFont, <newline>+                                                        NSColor* color) { <newline>+  // Create an attributed string for the label, if a label was given. <newline>+  label_.reset(); <newline>+  if (text) { <newline>+    DCHECK(color); <newline>+    DCHECK(baseFont); <newline>+    NSFont* font = [NSFont fontWithDescriptor:[baseFont fontDescriptor] <newline>+                                         size:[baseFont pointSize] - 2.0]; <newline>+    NSDictionary* attributes = <newline>+        [NSDictionary dictionaryWithObjectsAndKeys: <newline>+         color, NSForegroundColorAttributeName, <newline>+         font, NSFontAttributeName, <newline>+         NULL]; <newline>+    NSAttributedString* attrStr = <newline>+        [[NSAttributedString alloc] initWithString:text attributes:attributes]; <newline>+    label_.reset(attrStr); <newline>+  } <newline>+} <newline>+ <newline>+void LocationBarViewMac::LocationBarImageView::SetVisible(bool visible) { <newline>+  DCHECK(!visible || image_); <newline>+  visible_ = visible; <newline>+} <newline>+ <newline>+// SecurityImageView------------------------------------------------------------ <newline>+ <newline>+LocationBarViewMac::SecurityImageView::SecurityImageView( <newline>+    Profile* profile, <newline>+    ToolbarModel* model) <newline>+    : lock_icon_(nil), <newline>+      warning_icon_(nil), <newline>+      profile_(profile), <newline>+      model_(model) {} <newline>+ <newline>+LocationBarViewMac::SecurityImageView::~SecurityImageView() {} <newline>+ <newline>+void LocationBarViewMac::SecurityImageView::SetImageShown(Image image) { <newline>+  switch (image) { <newline>+    case LOCK: <newline>+      if (!lock_icon_.get()) { <newline>+        ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>+        lock_icon_.reset([rb.GetNSImageNamed(IDR_LOCK) retain]); <newline>+      } <newline>+      SetImage(lock_icon_); <newline>+      break; <newline>+    case WARNING: <newline>+      if (!warning_icon_.get()) { <newline>+        ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>+        warning_icon_.reset([rb.GetNSImageNamed(IDR_WARNING) retain]); <newline>+      } <newline>+      SetImage(warning_icon_); <newline>+      break; <newline>+    default: <newline>+      NOTREACHED(); <newline>+      break; <newline>+  } <newline>+} <newline>+ <newline>+ <newline>+bool LocationBarViewMac::SecurityImageView::OnMousePressed() { <newline>+  TabContents* tab = BrowserList::GetLastActive()->GetSelectedTabContents(); <newline>+  NavigationEntry* nav_entry = tab->controller().GetActiveEntry(); <newline>+  if (!nav_entry) { <newline>+    NOTREACHED(); <newline>+    return true; <newline>+  } <newline>+  tab->ShowPageInfo(nav_entry->url(), nav_entry->ssl(), true); <newline>+  return true; <newline>+}
6152421ccb639539c225cb42dc6ed228720c369	mhm@chromium.org <mhm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Oct 22 03:56:30 2009 +0000	Introduce WebSecurityPolicy for security related methods. Move security related methods out of WebKit.h into its own class WebSecurityPolicy. This involves these functions: - registerURLSchemeAsLocal - registerURLSchemeAsNoAccess - whiteListAccessFromOrigin - resetOriginAccessWhiteLists TEST=Compiled locally, try bot'ed.	24601				diff --git a/chrome/browser/cocoa/location_bar_view_mac.mm b/chrome/browser/cocoa/location_bar_view_mac.mm <newline>index a4d2e64..c08633b 100644 <newline>--- a/chrome/browser/cocoa/location_bar_view_mac.mm <newline>+++ b/chrome/browser/cocoa/location_bar_view_mac.mm <newline>@@ -12,6 +12,7 @@ <newline> #include "chrome/browser/alternate_nav_url_fetcher.h" <newline> #import "chrome/browser/app_controller_mac.h" <newline> #import "chrome/browser/autocomplete/autocomplete_edit_view_mac.h" <newline>+#include "chrome/browser/browser_list.h" <newline> #import "chrome/browser/cocoa/autocomplete_text_field.h" <newline> #import "chrome/browser/cocoa/autocomplete_text_field_cell.h" <newline> #include "chrome/browser/cocoa/event_utils.h" <newline>@@ -19,6 +20,8 @@ <newline> #include "chrome/browser/profile.h" <newline> #include "chrome/browser/search_engines/template_url.h" <newline> #include "chrome/browser/search_engines/template_url_model.h" <newline>+#include "chrome/browser/tab_contents/navigation_entry.h" <newline>+#include "chrome/browser/tab_contents/tab_contents.h" <newline> #include "grit/generated_resources.h" <newline> #include "grit/theme_resources.h" <newline> #include "skia/ext/skia_utils_mac.h" <newline>@@ -81,9 +84,12 @@ LocationBarViewMac::LocationBarViewMac( <newline>       command_updater_(command_updater), <newline>       field_(field), <newline>       disposition_(CURRENT_TAB), <newline>+      security_image_view_(profile, toolbar_model), <newline>       profile_(profile), <newline>       toolbar_model_(toolbar_model), <newline>       transition_(PageTransition::TYPED) { <newline>+  AutocompleteTextFieldCell* cell = [field_ autocompleteTextFieldCell]; <newline>+  [cell setSecurityImageView:&security_image_view_]; <newline> } <newline> LocationBarViewMac::~LocationBarViewMac() { <newline>@@ -303,40 +309,120 @@ NSImage* LocationBarViewMac::GetTabButtonImage() { <newline>   return tab_button_image_; <newline> } <newline>-void LocationBarViewMac::SetSecurityIcon(ToolbarModel::Icon security_icon) { <newline>-  std::wstring info_text, info_tooltip; <newline>+void LocationBarViewMac::SetSecurityIconLabel() { <newline>+  std::wstring info_text; <newline>+  std::wstring info_tooltip; <newline>   ToolbarModel::InfoTextType info_text_type = <newline>       toolbar_model_->GetInfoText(&info_text, &info_tooltip); <newline>-  NSColor* color = nil; <newline>-  NSString* icon_label = nil; <newline>   if (info_text_type == ToolbarModel::INFO_EV_TEXT) { <newline>-    icon_label = base::SysWideToNSString(info_text); <newline>-    color = <newline>-      [NSColor colorWithCalibratedRed:kEvTextColorRedComponent <newline>-                                green:kEvTextColorGreenComponent <newline>-                                 blue:kEvTextColorBlueComponent <newline>-                                alpha:1.0]; <newline>+    NSString* icon_label = base::SysWideToNSString(info_text); <newline>+    NSColor* color = [NSColor colorWithCalibratedRed:kEvTextColorRedComponent <newline>+                                               green:kEvTextColorGreenComponent <newline>+                                                blue:kEvTextColorBlueComponent <newline>+                                               alpha:1.0]; <newline>+    security_image_view_.SetLabel(icon_label, [field_ font], color); <newline>+  } else { <newline>+    security_image_view_.SetLabel(nil, nil, nil); <newline>   } <newline>+} <newline>-  ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>-  AutocompleteTextFieldCell* cell = [field_ autocompleteTextFieldCell]; <newline>-  switch (security_icon) { <newline>+void LocationBarViewMac::SetSecurityIcon(ToolbarModel::Icon icon) { <newline>+  switch (icon) { <newline>     case ToolbarModel::LOCK_ICON: <newline>-      [cell setHintIcon:rb.GetNSImageNamed(IDR_LOCK) <newline>-                  label:icon_label <newline>-                  color:color]; <newline>+      security_image_view_.SetImageShown(SecurityImageView::LOCK); <newline>+      security_image_view_.SetVisible(true); <newline>+      SetSecurityIconLabel(); <newline>       break; <newline>     case ToolbarModel::WARNING_ICON: <newline>-      [cell setHintIcon:rb.GetNSImageNamed(IDR_WARNING) <newline>-                  label:icon_label <newline>-                  color:color]; <newline>+      security_image_view_.SetImageShown(SecurityImageView::WARNING); <newline>+      security_image_view_.SetVisible(true); <newline>+      SetSecurityIconLabel(); <newline>       break; <newline>     case ToolbarModel::NO_ICON: <newline>-      [cell setHintIcon:nil label:nil color:nil]; <newline>+      security_image_view_.SetVisible(false); <newline>       break; <newline>     default: <newline>       NOTREACHED(); <newline>+      security_image_view_.SetVisible(false); <newline>       break; <newline>   } <newline>   [field_ resetFieldEditorFrameIfNeeded]; <newline> } <newline>+ <newline>+// LocationBarImageView--------------------------------------------------------- <newline>+ <newline>+void LocationBarViewMac::LocationBarImageView::SetImage(NSImage* image) { <newline>+  image_.reset([image retain]); <newline>+} <newline>+ <newline>+void LocationBarViewMac::LocationBarImageView::SetLabel(NSString* text, <newline>+                                                        NSFont* baseFont, <newline>+                                                        NSColor* color) { <newline>+  // Create an attributed string for the label, if a label was given. <newline>+  label_.reset(); <newline>+  if (text) { <newline>+    DCHECK(color); <newline>+    DCHECK(baseFont); <newline>+    NSFont* font = [NSFont fontWithDescriptor:[baseFont fontDescriptor] <newline>+                                         size:[baseFont pointSize] - 2.0]; <newline>+    NSDictionary* attributes = <newline>+        [NSDictionary dictionaryWithObjectsAndKeys: <newline>+         color, NSForegroundColorAttributeName, <newline>+         font, NSFontAttributeName, <newline>+         NULL]; <newline>+    NSAttributedString* attrStr = <newline>+        [[NSAttributedString alloc] initWithString:text attributes:attributes]; <newline>+    label_.reset(attrStr); <newline>+  } <newline>+} <newline>+ <newline>+void LocationBarViewMac::LocationBarImageView::SetVisible(bool visible) { <newline>+  DCHECK(!visible || image_); <newline>+  visible_ = visible; <newline>+} <newline>+ <newline>+// SecurityImageView------------------------------------------------------------ <newline>+ <newline>+LocationBarViewMac::SecurityImageView::SecurityImageView( <newline>+    Profile* profile, <newline>+    ToolbarModel* model) <newline>+    : lock_icon_(nil), <newline>+      warning_icon_(nil), <newline>+      profile_(profile), <newline>+      model_(model) {} <newline>+ <newline>+LocationBarViewMac::SecurityImageView::~SecurityImageView() {} <newline>+ <newline>+void LocationBarViewMac::SecurityImageView::SetImageShown(Image image) { <newline>+  switch (image) { <newline>+    case LOCK: <newline>+      if (!lock_icon_.get()) { <newline>+        ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>+        lock_icon_.reset([rb.GetNSImageNamed(IDR_LOCK) retain]); <newline>+      } <newline>+      SetImage(lock_icon_); <newline>+      break; <newline>+    case WARNING: <newline>+      if (!warning_icon_.get()) { <newline>+        ResourceBundle& rb = ResourceBundle::GetSharedInstance(); <newline>+        warning_icon_.reset([rb.GetNSImageNamed(IDR_WARNING) retain]); <newline>+      } <newline>+      SetImage(warning_icon_); <newline>+      break; <newline>+    default: <newline>+      NOTREACHED(); <newline>+      break; <newline>+  } <newline>+} <newline>+ <newline>+ <newline>+bool LocationBarViewMac::SecurityImageView::OnMousePressed() { <newline>+  TabContents* tab = BrowserList::GetLastActive()->GetSelectedTabContents(); <newline>+  NavigationEntry* nav_entry = tab->controller().GetActiveEntry(); <newline>+  if (!nav_entry) { <newline>+    NOTREACHED(); <newline>+    return true; <newline>+  } <newline>+  tab->ShowPageInfo(nav_entry->url(), nav_entry->ssl(), true); <newline>+  return true; <newline>+}
d: http://src.chromium.org/viewvc/chrome?view=rev&revision=29639					hell* LayoutTestController::shell_ = NULL;	http://codereview.chromium.org/293021	svn://svn.chromium.org/chrome/trunk/src@29758 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/webkit.gyp b/webkit/webkit.gyp <newline>index ce249c2..c505680 100644 <newline>--- a/webkit/webkit.gyp <newline>+++ b/webkit/webkit.gyp <newline>@@ -135,6 +135,7 @@ <newline>         'api/public/WebScriptController.h', <newline>         'api/public/WebScriptSource.h', <newline>         'api/public/WebSecurityOrigin.h', <newline>+        'api/public/WebSecurityPolicy.h', <newline>         'api/public/WebSettings.h', <newline>         'api/public/WebSize.h', <newline>         'api/public/WebSocketStreamError.h', <newline>@@ -230,6 +231,7 @@ <newline>         'api/src/WebRange.cpp', <newline>         'api/src/WebScriptController.cpp', <newline>         'api/src/WebSecurityOrigin.cpp', <newline>+        'api/src/WebSecurityPolicy.cpp', <newline>         'api/src/WebSettingsImpl.cpp', <newline>         'api/src/WebSettingsImpl.h', <newline>         'api/src/WebStorageAreaImpl.cpp',
04758c792daa561ccf691ecd101e6360540360f	mhm@chromium.org <mhm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Oct 22 03:56:30 2009 +0000	Introduce WebSecurityPolicy for security related methods. Move security related methods out of WebKit.h into its own class WebSecurityPolicy. This involves these functions: - registerURLSchemeAsLocal - registerURLSchemeAsNoAccess - whiteListAccessFromOrigin - resetOriginAccessWhiteLists TEST=Compiled locally, try bot'ed.	24601				diff --git a/webkit/webkit.gyp b/webkit/webkit.gyp <newline>index ce249c2..c505680 100644 <newline>--- a/webkit/webkit.gyp <newline>+++ b/webkit/webkit.gyp <newline>@@ -135,6 +135,7 @@ <newline>         'api/public/WebScriptController.h', <newline>         'api/public/WebScriptSource.h', <newline>         'api/public/WebSecurityOrigin.h', <newline>+        'api/public/WebSecurityPolicy.h', <newline>         'api/public/WebSettings.h', <newline>         'api/public/WebSize.h', <newline>         'api/public/WebSocketStreamError.h', <newline>@@ -230,6 +231,7 @@ <newline>         'api/src/WebRange.cpp', <newline>         'api/src/WebScriptController.cpp', <newline>         'api/src/WebSecurityOrigin.cpp', <newline>+        'api/src/WebSecurityPolicy.cpp', <newline>         'api/src/WebSettingsImpl.cpp', <newline>         'api/src/WebSettingsImpl.h', <newline>         'api/src/WebStorageAreaImpl.cpp',
d: http://src.chromium.org/viewvc/chrome?view=rev&revision=29639					hell* LayoutTestController::shell_ = NULL;	http://codereview.chromium.org/293021	svn://svn.chromium.org/chrome/trunk/src@29758 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/webkit.gyp b/webkit/webkit.gyp <newline>index ce249c2..c505680 100644 <newline>--- a/webkit/webkit.gyp <newline>+++ b/webkit/webkit.gyp <newline>@@ -135,6 +135,7 @@ <newline>         'api/public/WebScriptController.h', <newline>         'api/public/WebScriptSource.h', <newline>         'api/public/WebSecurityOrigin.h', <newline>+        'api/public/WebSecurityPolicy.h', <newline>         'api/public/WebSettings.h', <newline>         'api/public/WebSize.h', <newline>         'api/public/WebSocketStreamError.h', <newline>@@ -230,6 +231,7 @@ <newline>         'api/src/WebRange.cpp', <newline>         'api/src/WebScriptController.cpp', <newline>         'api/src/WebSecurityOrigin.cpp', <newline>+        'api/src/WebSecurityPolicy.cpp', <newline>         'api/src/WebSettingsImpl.cpp', <newline>         'api/src/WebSettingsImpl.h', <newline>         'api/src/WebStorageAreaImpl.cpp',
0c0f9925936a01d6591388f73e462b4cdf0204f	mhm@chromium.org <mhm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 21 13:50:03 2009 +0000	Introduce WebSecurityPolicy for security related methods. Move security related methods out of WebKit.h into its own class WebSecurityPolicy. This involves these functions: - registerURLSchemeAsLocal - registerURLSchemeAsNoAccess - whiteListAccessFromOrigin - resetOriginAccessWhiteLists TEST=Compiled locally, try bot'ed.	24601	hell* LayoutTestController::shell_ = NULL;	http://codereview.chromium.org/293021	svn://svn.chromium.org/chrome/trunk/src@29639 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/webkit.gyp b/webkit/webkit.gyp <newline>index 927463a..34fe489 100644 <newline>--- a/webkit/webkit.gyp <newline>+++ b/webkit/webkit.gyp <newline>@@ -135,6 +135,7 @@ <newline>         'api/public/WebScriptController.h', <newline>         'api/public/WebScriptSource.h', <newline>         'api/public/WebSecurityOrigin.h', <newline>+        'api/public/WebSecurityPolicy.h', <newline>         'api/public/WebSettings.h', <newline>         'api/public/WebSize.h', <newline>         'api/public/WebSocketStreamError.h', <newline>@@ -230,6 +231,7 @@ <newline>         'api/src/WebRange.cpp', <newline>         'api/src/WebScriptController.cpp', <newline>         'api/src/WebSecurityOrigin.cpp', <newline>+        'api/src/WebSecurityPolicy.cpp', <newline>         'api/src/WebSettingsImpl.cpp', <newline>         'api/src/WebSettingsImpl.h', <newline>         'api/src/WebStorageAreaImpl.cpp',
62a91816bcce1e9d406251ec0db132e645bacad	mhm@chromium.org <mhm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 21 13:50:03 2009 +0000	Introduce WebSecurityPolicy for security related methods. Move security related methods out of WebKit.h into its own class WebSecurityPolicy. This involves these functions: - registerURLSchemeAsLocal - registerURLSchemeAsNoAccess - whiteListAccessFromOrigin - resetOriginAccessWhiteLists TEST=Compiled locally, try bot'ed.	24601	hell* LayoutTestController::shell_ = NULL;	http://codereview.chromium.org/293021	svn://svn.chromium.org/chrome/trunk/src@29639 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/webkit.gyp b/webkit/webkit.gyp <newline>index 927463a..34fe489 100644 <newline>--- a/webkit/webkit.gyp <newline>+++ b/webkit/webkit.gyp <newline>@@ -135,6 +135,7 @@ <newline>         'api/public/WebScriptController.h', <newline>         'api/public/WebScriptSource.h', <newline>         'api/public/WebSecurityOrigin.h', <newline>+        'api/public/WebSecurityPolicy.h', <newline>         'api/public/WebSettings.h', <newline>         'api/public/WebSize.h', <newline>         'api/public/WebSocketStreamError.h', <newline>@@ -230,6 +231,7 @@ <newline>         'api/src/WebRange.cpp', <newline>         'api/src/WebScriptController.cpp', <newline>         'api/src/WebSecurityOrigin.cpp', <newline>+        'api/src/WebSecurityPolicy.cpp', <newline>         'api/src/WebSettingsImpl.cpp', <newline>         'api/src/WebSettingsImpl.h', <newline>         'api/src/WebStorageAreaImpl.cpp',
0fc388ca8c8c930ca7443802f06bf8d4665169a	finnur@chromium.org <finnur@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 14 17:54:38 2009 +0000	Remove deleted test. r49487 upstream removed /trunk/LayoutTests/http/tests/security/xssAuditor/script-tag-utf-7.html Updating expected_test_results to reflect this. TBR=abarth TEST=None	798 MAC DEBUG : LayoutTests/http/tests/xmlhttprequest/access-control-basic-allow-preflight-cache.html = TIMEOUT PASS		http://codereview.chromium.org/274053	svn://svn.chromium.org/chrome/trunk/src@28981 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 826a49f..937b0fb 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2583,7 +2583,6 @@ BUG9798 WIN DEBUG : LayoutTests/http/tests/security/cross-frame-access-protocol. <newline>-BUG9798 MAC RELEASE : LayoutTests/http/tests/security/xssAuditor/script-tag-utf-7.html = TIMEOUT PASS
d15e827d53a4c8b90e986ea67afff15a25476b2	finnur@chromium.org <finnur@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 14 17:54:38 2009 +0000	Remove deleted test. r49487 upstream removed /trunk/LayoutTests/http/tests/security/xssAuditor/script-tag-utf-7.html Updating expected_test_results to reflect this. TBR=abarth TEST=None	798 MAC DEBUG : LayoutTests/http/tests/xmlhttprequest/access-control-basic-allow-preflight-cache.html = TIMEOUT PASS		http://codereview.chromium.org/274053	svn://svn.chromium.org/chrome/trunk/src@28981 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 826a49f..937b0fb 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2583,7 +2583,6 @@ BUG9798 WIN DEBUG : LayoutTests/http/tests/security/cross-frame-access-protocol. <newline>-BUG9798 MAC RELEASE : LayoutTests/http/tests/security/xssAuditor/script-tag-utf-7.html = TIMEOUT PASS
7f2a5e92c775f3d51d529f502b53675e6caab81	yusukes@google.com <yusukes@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Oct 10 18:19:04 2009 +0000	Don't draw the red line when the security level is SECURE. TEST=see the bug	24510		http://codereview.chromium.org/273016/show	svn://svn.chromium.org/chrome/trunk/src@28667 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/autocomplete/autocomplete_edit_view_gtk.cc b/chrome/browser/autocomplete/autocomplete_edit_view_gtk.cc <newline>index 46e92e8..35017b6 100644 <newline>--- a/chrome/browser/autocomplete/autocomplete_edit_view_gtk.cc <newline>+++ b/chrome/browser/autocomplete/autocomplete_edit_view_gtk.cc <newline>@@ -1199,17 +1199,17 @@ void AutocompleteEditViewGtk::EmphasizeURLComponents() { <newline>   // Emphasize the scheme for security UI display purposes (if necessary). <newline>   if (!model_->user_input_in_progress() && parts.scheme.is_nonempty() && <newline>       (scheme_security_level_ != ToolbarModel::NORMAL)) { <newline>-    strikethrough_ = CharRange(GetUTF8Offset(text, parts.scheme.begin), <newline>-                               GetUTF8Offset(text, parts.scheme.end())); <newline>-    ItersFromCharRange(strikethrough_, &start, &end); <newline>-    // When we draw the strikethrough, we don't want to include the ':' at the <newline>-    // end of the scheme. <newline>-    strikethrough_.cp_max--; <newline>- <newline>     if (scheme_security_level_ == ToolbarModel::SECURE) { <newline>       gtk_text_buffer_apply_tag(text_buffer_, secure_scheme_tag_, <newline>                                 &start, &end); <newline>     } else { <newline>+      strikethrough_ = CharRange(GetUTF8Offset(text, parts.scheme.begin), <newline>+                                 GetUTF8Offset(text, parts.scheme.end())); <newline>+      ItersFromCharRange(strikethrough_, &start, &end); <newline>+      // When we draw the strikethrough, we don't want to include the ':' at the <newline>+      // end of the scheme. <newline>+      strikethrough_.cp_max--; <newline>+ <newline>       gtk_text_buffer_apply_tag(text_buffer_, insecure_scheme_tag_, <newline>                                 &start, &end); <newline>     }
2f2e494291d1eccb2be7b1886afbbf3c4fb3b77	yusukes@google.com <yusukes@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Oct 10 18:19:04 2009 +0000	Don't draw the red line when the security level is SECURE. TEST=see the bug	24510		http://codereview.chromium.org/273016/show	svn://svn.chromium.org/chrome/trunk/src@28667 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/autocomplete/autocomplete_edit_view_gtk.cc b/chrome/browser/autocomplete/autocomplete_edit_view_gtk.cc <newline>index 46e92e8..35017b6 100644 <newline>--- a/chrome/browser/autocomplete/autocomplete_edit_view_gtk.cc <newline>+++ b/chrome/browser/autocomplete/autocomplete_edit_view_gtk.cc <newline>@@ -1199,17 +1199,17 @@ void AutocompleteEditViewGtk::EmphasizeURLComponents() { <newline>   // Emphasize the scheme for security UI display purposes (if necessary). <newline>   if (!model_->user_input_in_progress() && parts.scheme.is_nonempty() && <newline>       (scheme_security_level_ != ToolbarModel::NORMAL)) { <newline>-    strikethrough_ = CharRange(GetUTF8Offset(text, parts.scheme.begin), <newline>-                               GetUTF8Offset(text, parts.scheme.end())); <newline>-    ItersFromCharRange(strikethrough_, &start, &end); <newline>-    // When we draw the strikethrough, we don't want to include the ':' at the <newline>-    // end of the scheme. <newline>-    strikethrough_.cp_max--; <newline>- <newline>     if (scheme_security_level_ == ToolbarModel::SECURE) { <newline>       gtk_text_buffer_apply_tag(text_buffer_, secure_scheme_tag_, <newline>                                 &start, &end); <newline>     } else { <newline>+      strikethrough_ = CharRange(GetUTF8Offset(text, parts.scheme.begin), <newline>+                                 GetUTF8Offset(text, parts.scheme.end())); <newline>+      ItersFromCharRange(strikethrough_, &start, &end); <newline>+      // When we draw the strikethrough, we don't want to include the ':' at the <newline>+      // end of the scheme. <newline>+      strikethrough_.cp_max--; <newline>+ <newline>       gtk_text_buffer_apply_tag(text_buffer_, insecure_scheme_tag_, <newline>                                 &start, &end); <newline>     }
baf85496c21f02f7ceae16259f5b01d05d5b3d4	rsesek@chromium.org <rsesek@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 7 02:30:05 2009 +0000	[Mac] Show the page info window after clicking the security icon in the URL bar TEST=Go to https://twitter.com, click the lock icon, see page info window.	22922		http://codereview.chromium.org/222020	svn://svn.chromium.org/chrome/trunk/src@28221 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/cocoa/autocomplete_text_field_unittest_helper.h b/chrome/browser/cocoa/autocomplete_text_field_unittest_helper.h <newline>index 9aef620..c3a617e 100644 <newline>--- a/chrome/browser/cocoa/autocomplete_text_field_unittest_helper.h <newline>+++ b/chrome/browser/cocoa/autocomplete_text_field_unittest_helper.h <newline>@@ -37,6 +37,7 @@ class MockAutocompleteTextFieldObserver : public AutocompleteTextFieldObserver { <newline>   MOCK_METHOD0(CanPasteAndGo, bool()); <newline>   MOCK_METHOD0(GetPasteActionStringId, int()); <newline>   MOCK_METHOD0(OnPasteAndGo, void()); <newline>+  MOCK_METHOD0(OnSecurityIconClicked, void()); <newline> }; <newline> }  // namespace
9193b9b0af28ed636ebad88d82f3e32466b3f76	rsesek@chromium.org <rsesek@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 7 02:30:05 2009 +0000	[Mac] Show the page info window after clicking the security icon in the URL bar TEST=Go to https://twitter.com, click the lock icon, see page info window.	22922		http://codereview.chromium.org/222020	svn://svn.chromium.org/chrome/trunk/src@28221 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/cocoa/autocomplete_text_field_unittest_helper.h b/chrome/browser/cocoa/autocomplete_text_field_unittest_helper.h <newline>index 9aef620..c3a617e 100644 <newline>--- a/chrome/browser/cocoa/autocomplete_text_field_unittest_helper.h <newline>+++ b/chrome/browser/cocoa/autocomplete_text_field_unittest_helper.h <newline>@@ -37,6 +37,7 @@ class MockAutocompleteTextFieldObserver : public AutocompleteTextFieldObserver { <newline>   MOCK_METHOD0(CanPasteAndGo, bool()); <newline>   MOCK_METHOD0(GetPasteActionStringId, int()); <newline>   MOCK_METHOD0(OnPasteAndGo, void()); <newline>+  MOCK_METHOD0(OnSecurityIconClicked, void()); <newline> }; <newline> }  // namespace
682b03e3e6d6a8764bfa1b84a46473e31de6292	tkent@chromium.org <tkent@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Oct 5 00:51:18 2009 +0000	Marks fast/encoding/idn-security.html as WONTFIX. Our IDN security model is different from WebKit/mac, and the test is not for WebCore or JavaScriptCore.  So we don't need to run it. TEST=none	21814		http://codereview.chromium.org/243075	svn://svn.chromium.org/chrome/trunk/src@27972 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index a9fde97..c366d98 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -366,6 +366,11 @@ WONTFIX : LayoutTests/storage/domstorage/sessionstorage/private-browsing-affects <newline> WONTFIX BUG21840 : LayoutTests/http/tests/loading/basic-auth-resend-wrong-credentials.html = FAIL <newline> WONTFIX BUG21840 : LayoutTests/http/tests/loading/basic-credentials-sent-automatically.html = FAIL <newline>+// This checks the IDN behavior of WebKit/WebKit on Mac, not WebKit/WebCore or <newline>+// WebKit/JavaScriptCore. Chrome doesn't use WebKit/WebKit, and Chrome's IDN <newline>+// security model is different from it. <newline>+BUG21814 WONTFIX SKIP: LayoutTests/fast/encoding/idn-security.html = FAIL <newline>+ <newline> // ----------------------------------------------------------------- <newline> // CHROME REWRITTEN TESTS <newline> // ----------------------------------------------------------------- <newline>@@ -516,9 +521,6 @@ BUG20566 : LayoutTests/fast/invalid/residual-style.html = FAIL <newline> // Tests requiring features not currently in test_shell. <newline> // ----------------------------------------------------------------- <newline>-// requires support for layoutTestController.encodeHostName() <newline>-BUG21814 : LayoutTests/fast/encoding/idn-security.html = FAIL <newline>- <newline> // These layout tests to see if link colors change after visiting a page. They <newline> // does this by using layoutTestController.keepWebHistory() to turn on a <newline> // temporary web history. layoutTestController.keepWebHistory() is not
e7a2378237e231b395c1faddd19fb349b8e8a23	tkent@chromium.org <tkent@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Oct 5 00:51:18 2009 +0000	Marks fast/encoding/idn-security.html as WONTFIX. Our IDN security model is different from WebKit/mac, and the test is not for WebCore or JavaScriptCore.  So we don't need to run it. TEST=none	21814		http://codereview.chromium.org/243075	svn://svn.chromium.org/chrome/trunk/src@27972 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index a9fde97..c366d98 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -366,6 +366,11 @@ WONTFIX : LayoutTests/storage/domstorage/sessionstorage/private-browsing-affects <newline> WONTFIX BUG21840 : LayoutTests/http/tests/loading/basic-auth-resend-wrong-credentials.html = FAIL <newline> WONTFIX BUG21840 : LayoutTests/http/tests/loading/basic-credentials-sent-automatically.html = FAIL <newline>+// This checks the IDN behavior of WebKit/WebKit on Mac, not WebKit/WebCore or <newline>+// WebKit/JavaScriptCore. Chrome doesn't use WebKit/WebKit, and Chrome's IDN <newline>+// security model is different from it. <newline>+BUG21814 WONTFIX SKIP: LayoutTests/fast/encoding/idn-security.html = FAIL <newline>+ <newline> // ----------------------------------------------------------------- <newline> // CHROME REWRITTEN TESTS <newline> // ----------------------------------------------------------------- <newline>@@ -516,9 +521,6 @@ BUG20566 : LayoutTests/fast/invalid/residual-style.html = FAIL <newline> // Tests requiring features not currently in test_shell. <newline> // ----------------------------------------------------------------- <newline>-// requires support for layoutTestController.encodeHostName() <newline>-BUG21814 : LayoutTests/fast/encoding/idn-security.html = FAIL <newline>- <newline> // These layout tests to see if link colors change after visiting a page. They <newline> // does this by using layoutTestController.keepWebHistory() to turn on a <newline> // temporary web history. layoutTestController.keepWebHistory() is not
10b813eb983d64395e17ee5758550094f7d5b98	yutak@chromium.org <yutak@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 30 01:48:12 2009 +0000	Add mime-type for SVG to lighttpd.conf for run_webkit_tests. Formerly, the HTTP server sent an SVG file as application/octet-stream, which caused the following layout test failures. This change fixes them. - LayoutTests/http/tests/xmlhttprequest/xmlhttprequest-image-not-loaded-svg.svg (issue 10387) - LayoutTests/http/tests/security/canvas-remote-read-svg-image.html (issue 18978) - LayoutTests/http/tests/misc/SVGFont-delayed-load.html (issue 20505) TEST=none	0401 : LayoutTests/plugins/npruntime.html = TIMEOUT FAIL		http://codereview.chromium.org/235053	svn://svn.chromium.org/chrome/trunk/src@27583 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 697bcbe..046aedd 100755 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -452,10 +452,6 @@ BUG18978 : LayoutTests/http/tests/xmlhttprequest/access-control-basic-allow-pref <newline>-// This passes when run in Chrome. It appears to be because of a difference <newline>-// in how lighttpd serves up the svn resource image (or the image <newline>-// contained in the svg image). <newline>-BUG18978 : LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline> // Another lighttpd quirk. <newline>@@ -818,10 +814,8 @@ BUG8696 WIN LINUX : LayoutTests/fast/gradients/simple-gradients.html = FAIL <newline>-BUG10387 SKIP : LayoutTests/http/tests/xmlhttprequest/xmlhttprequest-image-not-loaded-svg.svg = FAIL <newline>-BUG20505 : LayoutTests/http/tests/misc/SVGFont-delayed-load.html = FAIL
90ad0e3a76df78c71ed0b1bceb39ac04a136090	yutak@chromium.org <yutak@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 30 01:48:12 2009 +0000	Add mime-type for SVG to lighttpd.conf for run_webkit_tests. Formerly, the HTTP server sent an SVG file as application/octet-stream, which caused the following layout test failures. This change fixes them. - LayoutTests/http/tests/xmlhttprequest/xmlhttprequest-image-not-loaded-svg.svg (issue 10387) - LayoutTests/http/tests/security/canvas-remote-read-svg-image.html (issue 18978) - LayoutTests/http/tests/misc/SVGFont-delayed-load.html (issue 20505) TEST=none	0401 : LayoutTests/plugins/npruntime.html = TIMEOUT FAIL		http://codereview.chromium.org/235053	svn://svn.chromium.org/chrome/trunk/src@27583 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 697bcbe..046aedd 100755 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -452,10 +452,6 @@ BUG18978 : LayoutTests/http/tests/xmlhttprequest/access-control-basic-allow-pref <newline>-// This passes when run in Chrome. It appears to be because of a difference <newline>-// in how lighttpd serves up the svn resource image (or the image <newline>-// contained in the svg image). <newline>-BUG18978 : LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline> // Another lighttpd quirk. <newline>@@ -818,10 +814,8 @@ BUG8696 WIN LINUX : LayoutTests/fast/gradients/simple-gradients.html = FAIL <newline>-BUG10387 SKIP : LayoutTests/http/tests/xmlhttprequest/xmlhttprequest-image-not-loaded-svg.svg = FAIL <newline>-BUG20505 : LayoutTests/http/tests/misc/SVGFont-delayed-load.html = FAIL
42c64d6676fc46041662228f9e9f991bac9294b	ananta@chromium.org <ananta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 25 22:54:33 2009 +0000	Currently in full tab mode IE displays the security zone as Unknown. This CL fixes that by returning URLZONE_INTERNET for most of the URLs, as we cannot directly map them to internal/external URLs. The reason being Chrome would need to honor the security settings from IE based on the zone. We also disallow navigation in ChromeFrame for restricted URLs. This fixes bug http://b/issue?id=2059403 This CL also fixes the stray issues with cf:attach_external_tab being visible in the tab title at times. This can be easily reproduced if the tabs being opened are background tabs. To set the title we call Exec on the IOleCommandTarget exposed by the frame. This is queried off the IOleInPlaceSite interface which is maintained by the m_spInPlaceSite member variable in CComControlBase. This member is not set when the tab is opened as a background tab and only gets set when it is activated. The fix is to query the IOleInPlaceSite interface from the IOleClientSite interface if the m_spInPlaceSite  is not set. This fixes http://b/issue?id=2119243	2059403,2119243		http://codereview.chromium.org/220042	svn://svn.chromium.org/chrome/trunk/src@27274 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/chrome_active_document.h b/chrome_frame/chrome_active_document.h <newline>index b488bc5..d8824b9 100644 <newline>--- a/chrome_frame/chrome_active_document.h <newline>+++ b/chrome_frame/chrome_active_document.h <newline>@@ -41,11 +41,17 @@ class ChromeActiveDocument; <newline> // A call to IOleCommandTarget::Exec on the webbrowser with this command id <newline> // and a command group of CGID_EXPLORER causes IE to replace the URL in the <newline> // current travel log entry <newline>-#define UNDOC_CMDID_REPLACE_CURRENT_TRAVEL_LOG_ENTRY_URL (40) <newline>+#define INTERNAL_CMDID_REPLACE_CURRENT_TRAVEL_LOG_ENTRY_URL (40) <newline>-#define UNDOC_IE_CONTEXTMENU_ADDFAV        (2261) <newline>-#define UNDOC_IE_CONTEXTMENU_VIEWSOURCE    (2139) <newline>-#define UNDOC_IE_CONTEXTMENU_REFRESH       (6042) <newline>+#define INTERNAL_IE_CONTEXTMENU_VIEWSOURCE    (2139) <newline>+ <newline>+#ifndef SBCMDID_MIXEDZONE <newline>+// This command is sent by the frame to allow the document to return the URL <newline>+// security zone for display. <newline>+// Please refer to http://msdn.microsoft.com/en-us/library/aa770042(VS.85).aspx <newline>+// for more information. <newline>+#define SBCMDID_MIXEDZONE                   39 <newline>+#endif  // SBCMDID_MIXEDZONE <newline> // This macro should be defined in the public section of the class. <newline> #define BEGIN_EXEC_COMMAND_MAP(theClass) \ <newline>@@ -60,7 +66,7 @@ class ChromeActiveDocument; <newline> #define EXEC_COMMAND_HANDLER(id, handler) \ <newline>   case id: { \ <newline>     hr = S_OK;  \ <newline>-    handler(cmd_group_guid, command_id, cmd_exec_opt, in_args, out_args)  \ <newline>+    handler(cmd_group_guid, command_id, cmd_exec_opt, in_args, out_args);  \ <newline>     break;  \ <newline>   } <newline>@@ -127,13 +133,14 @@ END_MSG_MAP() <newline> BEGIN_EXEC_COMMAND_MAP(ChromeActiveDocument) <newline>   EXEC_COMMAND_HANDLER_GENERIC(OLECMDID_PRINT, automation_client_->PrintTab()) <newline>   EXEC_COMMAND_HANDLER_NO_ARGS(OLECMDID_FIND, OnFindInPage) <newline>-  EXEC_COMMAND_HANDLER_NO_ARGS(UNDOC_IE_CONTEXTMENU_VIEWSOURCE, OnViewSource) <newline>+  EXEC_COMMAND_HANDLER_NO_ARGS(INTERNAL_IE_CONTEXTMENU_VIEWSOURCE, OnViewSource) <newline>   FORWARD_TAB_COMMAND(OLECMDID_SELECTALL, SelectAll) <newline>   FORWARD_TAB_COMMAND(OLECMDID_CUT, Cut) <newline>   FORWARD_TAB_COMMAND(OLECMDID_COPY, Copy) <newline>   FORWARD_TAB_COMMAND(OLECMDID_PASTE, Paste) <newline>   FORWARD_TAB_COMMAND(OLECMDID_REFRESH, ReloadAsync) <newline>   FORWARD_TAB_COMMAND(OLECMDID_STOP, StopAsync) <newline>+  EXEC_COMMAND_HANDLER(SBCMDID_MIXEDZONE, OnDetermineSecurityZone) <newline> END_EXEC_COMMAND_MAP() <newline>   // IPCs from automation server. <newline>@@ -145,9 +152,6 @@ END_EXEC_COMMAND_MAP() <newline>   virtual void OnTabbedOut(int tab_handle, bool reverse); <newline>   virtual void OnDidNavigate(int tab_handle, <newline>                              const IPC::NavigationInfo& nav_info); <newline>- <newline>-  void OnFindInPage(); <newline>- <newline>   // Override DoVerb <newline>   STDMETHOD(DoVerb)(LONG verb, <newline>                     LPMSG msg, <newline>@@ -197,7 +201,7 @@ END_EXEC_COMMAND_MAP() <newline>   bool PreProcessContextMenu(HMENU menu); <newline>   bool HandleContextMenuCommand(UINT cmd); <newline>-  // Should connections initiated by this class try to block <newline>+  // Should connections initiated by this class try to block <newline>   // responses served with the X-Frame-Options header? <newline>   bool is_frame_busting_enabled(); <newline>@@ -220,12 +224,30 @@ END_EXEC_COMMAND_MAP() <newline>   } <newline>   // Exec command handlers <newline>+  void OnFindInPage(); <newline>   void OnViewSource(); <newline>+  void OnDetermineSecurityZone(const GUID* cmd_group_guid, DWORD command_id, <newline>+                               DWORD cmd_exec_opt, VARIANT* in_args, <newline>+                               VARIANT* out_args); <newline>   // Call exec on our site's command target <newline>   HRESULT IEExec(const GUID* cmd_group_guid, DWORD command_id, <newline>                  DWORD cmd_exec_opt, VARIANT* in_args, VARIANT* out_args); <newline>+  bool IsUrlZoneRestricted(const std::wstring& url); <newline>+ <newline>+  // Parses the URL and returns information whether it is a new navigation and <newline>+  // the actual url after stripping out the cf: prefix if any. <newline>+  // This function also checks if the url scheme is valid for navigation within <newline>+  // chrome and whether it is a restricted URL as per IE settings. In either of <newline>+  // these cases it returns false. <newline>+  bool ParseUrl(const std::wstring& url, bool* is_new_navigation, <newline>+                bool* is_chrome_protocol, std::wstring* parsed_url); <newline>+ <newline>+  // Initiates navigation to the URL passed in. <newline>+  // Returns true on success. <newline>+  bool LaunchUrl(const std::wstring& url, bool is_new_navigation); <newline>+ <newline>  protected: <newline>   typedef std::map<int, bool> EnabledCommandsMap; <newline>@@ -248,6 +270,8 @@ END_EXEC_COMMAND_MAP() <newline>   // a new ChromeActiveDocument instance is taking its place. <newline>   bool is_automation_client_reused_; <newline>+  ScopedComPtr<IInternetSecurityManager> security_manager_; <newline>+ <newline>  public: <newline>   ScopedComPtr<IOleInPlaceFrame> in_place_frame_; <newline>   OLEINPLACEFRAMEINFO frame_info_;
7346bc4f02930840c23581ce2e5f1d67f165544	ananta@chromium.org <ananta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 25 22:54:33 2009 +0000	Currently in full tab mode IE displays the security zone as Unknown. This CL fixes that by returning URLZONE_INTERNET for most of the URLs, as we cannot directly map them to internal/external URLs. The reason being Chrome would need to honor the security settings from IE based on the zone. We also disallow navigation in ChromeFrame for restricted URLs. This fixes bug http://b/issue?id=2059403 This CL also fixes the stray issues with cf:attach_external_tab being visible in the tab title at times. This can be easily reproduced if the tabs being opened are background tabs. To set the title we call Exec on the IOleCommandTarget exposed by the frame. This is queried off the IOleInPlaceSite interface which is maintained by the m_spInPlaceSite member variable in CComControlBase. This member is not set when the tab is opened as a background tab and only gets set when it is activated. The fix is to query the IOleInPlaceSite interface from the IOleClientSite interface if the m_spInPlaceSite  is not set. This fixes http://b/issue?id=2119243	2059403,2119243		http://codereview.chromium.org/220042	svn://svn.chromium.org/chrome/trunk/src@27274 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome_frame/chrome_active_document.h b/chrome_frame/chrome_active_document.h <newline>index b488bc5..d8824b9 100644 <newline>--- a/chrome_frame/chrome_active_document.h <newline>+++ b/chrome_frame/chrome_active_document.h <newline>@@ -41,11 +41,17 @@ class ChromeActiveDocument; <newline> // A call to IOleCommandTarget::Exec on the webbrowser with this command id <newline> // and a command group of CGID_EXPLORER causes IE to replace the URL in the <newline> // current travel log entry <newline>-#define UNDOC_CMDID_REPLACE_CURRENT_TRAVEL_LOG_ENTRY_URL (40) <newline>+#define INTERNAL_CMDID_REPLACE_CURRENT_TRAVEL_LOG_ENTRY_URL (40) <newline>-#define UNDOC_IE_CONTEXTMENU_ADDFAV        (2261) <newline>-#define UNDOC_IE_CONTEXTMENU_VIEWSOURCE    (2139) <newline>-#define UNDOC_IE_CONTEXTMENU_REFRESH       (6042) <newline>+#define INTERNAL_IE_CONTEXTMENU_VIEWSOURCE    (2139) <newline>+ <newline>+#ifndef SBCMDID_MIXEDZONE <newline>+// This command is sent by the frame to allow the document to return the URL <newline>+// security zone for display. <newline>+// Please refer to http://msdn.microsoft.com/en-us/library/aa770042(VS.85).aspx <newline>+// for more information. <newline>+#define SBCMDID_MIXEDZONE                   39 <newline>+#endif  // SBCMDID_MIXEDZONE <newline> // This macro should be defined in the public section of the class. <newline> #define BEGIN_EXEC_COMMAND_MAP(theClass) \ <newline>@@ -60,7 +66,7 @@ class ChromeActiveDocument; <newline> #define EXEC_COMMAND_HANDLER(id, handler) \ <newline>   case id: { \ <newline>     hr = S_OK;  \ <newline>-    handler(cmd_group_guid, command_id, cmd_exec_opt, in_args, out_args)  \ <newline>+    handler(cmd_group_guid, command_id, cmd_exec_opt, in_args, out_args);  \ <newline>     break;  \ <newline>   } <newline>@@ -127,13 +133,14 @@ END_MSG_MAP() <newline> BEGIN_EXEC_COMMAND_MAP(ChromeActiveDocument) <newline>   EXEC_COMMAND_HANDLER_GENERIC(OLECMDID_PRINT, automation_client_->PrintTab()) <newline>   EXEC_COMMAND_HANDLER_NO_ARGS(OLECMDID_FIND, OnFindInPage) <newline>-  EXEC_COMMAND_HANDLER_NO_ARGS(UNDOC_IE_CONTEXTMENU_VIEWSOURCE, OnViewSource) <newline>+  EXEC_COMMAND_HANDLER_NO_ARGS(INTERNAL_IE_CONTEXTMENU_VIEWSOURCE, OnViewSource) <newline>   FORWARD_TAB_COMMAND(OLECMDID_SELECTALL, SelectAll) <newline>   FORWARD_TAB_COMMAND(OLECMDID_CUT, Cut) <newline>   FORWARD_TAB_COMMAND(OLECMDID_COPY, Copy) <newline>   FORWARD_TAB_COMMAND(OLECMDID_PASTE, Paste) <newline>   FORWARD_TAB_COMMAND(OLECMDID_REFRESH, ReloadAsync) <newline>   FORWARD_TAB_COMMAND(OLECMDID_STOP, StopAsync) <newline>+  EXEC_COMMAND_HANDLER(SBCMDID_MIXEDZONE, OnDetermineSecurityZone) <newline> END_EXEC_COMMAND_MAP() <newline>   // IPCs from automation server. <newline>@@ -145,9 +152,6 @@ END_EXEC_COMMAND_MAP() <newline>   virtual void OnTabbedOut(int tab_handle, bool reverse); <newline>   virtual void OnDidNavigate(int tab_handle, <newline>                              const IPC::NavigationInfo& nav_info); <newline>- <newline>-  void OnFindInPage(); <newline>- <newline>   // Override DoVerb <newline>   STDMETHOD(DoVerb)(LONG verb, <newline>                     LPMSG msg, <newline>@@ -197,7 +201,7 @@ END_EXEC_COMMAND_MAP() <newline>   bool PreProcessContextMenu(HMENU menu); <newline>   bool HandleContextMenuCommand(UINT cmd); <newline>-  // Should connections initiated by this class try to block <newline>+  // Should connections initiated by this class try to block <newline>   // responses served with the X-Frame-Options header? <newline>   bool is_frame_busting_enabled(); <newline>@@ -220,12 +224,30 @@ END_EXEC_COMMAND_MAP() <newline>   } <newline>   // Exec command handlers <newline>+  void OnFindInPage(); <newline>   void OnViewSource(); <newline>+  void OnDetermineSecurityZone(const GUID* cmd_group_guid, DWORD command_id, <newline>+                               DWORD cmd_exec_opt, VARIANT* in_args, <newline>+                               VARIANT* out_args); <newline>   // Call exec on our site's command target <newline>   HRESULT IEExec(const GUID* cmd_group_guid, DWORD command_id, <newline>                  DWORD cmd_exec_opt, VARIANT* in_args, VARIANT* out_args); <newline>+  bool IsUrlZoneRestricted(const std::wstring& url); <newline>+ <newline>+  // Parses the URL and returns information whether it is a new navigation and <newline>+  // the actual url after stripping out the cf: prefix if any. <newline>+  // This function also checks if the url scheme is valid for navigation within <newline>+  // chrome and whether it is a restricted URL as per IE settings. In either of <newline>+  // these cases it returns false. <newline>+  bool ParseUrl(const std::wstring& url, bool* is_new_navigation, <newline>+                bool* is_chrome_protocol, std::wstring* parsed_url); <newline>+ <newline>+  // Initiates navigation to the URL passed in. <newline>+  // Returns true on success. <newline>+  bool LaunchUrl(const std::wstring& url, bool is_new_navigation); <newline>+ <newline>  protected: <newline>   typedef std::map<int, bool> EnabledCommandsMap; <newline>@@ -248,6 +270,8 @@ END_EXEC_COMMAND_MAP() <newline>   // a new ChromeActiveDocument instance is taking its place. <newline>   bool is_automation_client_reused_; <newline>+  ScopedComPtr<IInternetSecurityManager> security_manager_; <newline>+ <newline>  public: <newline>   ScopedComPtr<IOleInPlaceFrame> in_place_frame_; <newline>   OLEINPLACEFRAMEINFO frame_info_;
c32463f56212c4b2decb3211f53e962be2320db	jhawkins@chromium.org <jhawkins@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 23 19:22:24 2009 +0000	Coverity: Initialize ssl_cert_id_, ssl_cert_status_, and ssl_security_bits_ in the constructor. CID=5442 TEST=none	none		http://codereview.chromium.org/222008	svn://svn.chromium.org/chrome/trunk/src@26960 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/tab_contents/provisional_load_details.h b/chrome/browser/tab_contents/provisional_load_details.h <newline>index 4359668..ce4f5da 100644 <newline>--- a/chrome/browser/tab_contents/provisional_load_details.h <newline>+++ b/chrome/browser/tab_contents/provisional_load_details.h <newline>@@ -5,6 +5,8 @@ <newline> #ifndef CHROME_BROWSER_TAB_CONTENTS_PROVISIONAL_LOAD_DETAILS_H_ <newline> #define CHROME_BROWSER_TAB_CONTENTS_PROVISIONAL_LOAD_DETAILS_H_ <newline>+#include <string> <newline>+ <newline> #include "base/basictypes.h" <newline> #include "googleurl/src/gurl.h" <newline>@@ -26,7 +28,7 @@ class ProvisionalLoadDetails { <newline>                          bool is_filtered); <newline>   virtual ~ProvisionalLoadDetails() { } <newline>-  void set_error_code(int error_code) { error_code_ = error_code; }; <newline>+  void set_error_code(int error_code) { error_code_ = error_code; } <newline>   int error_code() const { return error_code_; } <newline>   const GURL& url() const { return url_; }
c797e617d7743343497fbbac92e2e9ce71a8ec6	jhawkins@chromium.org <jhawkins@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 23 19:22:24 2009 +0000	Coverity: Initialize ssl_cert_id_, ssl_cert_status_, and ssl_security_bits_ in the constructor. CID=5442 TEST=none	none		http://codereview.chromium.org/222008	svn://svn.chromium.org/chrome/trunk/src@26960 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/tab_contents/provisional_load_details.h b/chrome/browser/tab_contents/provisional_load_details.h <newline>index 4359668..ce4f5da 100644 <newline>--- a/chrome/browser/tab_contents/provisional_load_details.h <newline>+++ b/chrome/browser/tab_contents/provisional_load_details.h <newline>@@ -5,6 +5,8 @@ <newline> #ifndef CHROME_BROWSER_TAB_CONTENTS_PROVISIONAL_LOAD_DETAILS_H_ <newline> #define CHROME_BROWSER_TAB_CONTENTS_PROVISIONAL_LOAD_DETAILS_H_ <newline>+#include <string> <newline>+ <newline> #include "base/basictypes.h" <newline> #include "googleurl/src/gurl.h" <newline>@@ -26,7 +28,7 @@ class ProvisionalLoadDetails { <newline>                          bool is_filtered); <newline>   virtual ~ProvisionalLoadDetails() { } <newline>-  void set_error_code(int error_code) { error_code_ = error_code; }; <newline>+  void set_error_code(int error_code) { error_code_ = error_code; } <newline>   int error_code() const { return error_code_; } <newline>   const GURL& url() const { return url_; }
40ab738abe736be822a9d853c870469c923215e	pinkerton@chromium.org <pinkerton@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Sep 21 15:01:54 2009 +0000	Remove the "mixed content" security warnings because "no one in the history of the universe used them". TEST=None	22353		http://codereview.chromium.org/210033	svn://svn.chromium.org/chrome/trunk/src@26680 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/nibs/Preferences.xib b/chrome/app/nibs/Preferences.xib <newline>index e0e098c..4d3f2ec 100644 <newline>--- a/chrome/app/nibs/Preferences.xib <newline>+++ b/chrome/app/nibs/Preferences.xib <newline>@@ -1,14 +1,18 @@ <newline> <?xml version="1.0" encoding="UTF-8"?> <newline>-<archive type="com.apple.InterfaceBuilder3.Cocoa.XIB" version="7.03"> <newline>+<archive type="com.apple.InterfaceBuilder3.Cocoa.XIB" version="7.10"> <newline> 	<data> <newline> 		<int key="IBDocument.SystemTarget">1050</int> <newline>-		<string key="IBDocument.SystemVersion">9L30</string> <newline>-		<string key="IBDocument.InterfaceBuilderVersion">677</string> <newline>-		<string key="IBDocument.AppKitVersion">949.54</string> <newline>-		<string key="IBDocument.HIToolboxVersion">353.00</string> <newline>+		<string key="IBDocument.SystemVersion">10A432</string> <newline>+		<string key="IBDocument.InterfaceBuilderVersion">732</string> <newline>+		<string key="IBDocument.AppKitVersion">1038</string> <newline>+		<string key="IBDocument.HIToolboxVersion">437.00</string> <newline>+		<object class="NSMutableDictionary" key="IBDocument.PluginVersions"> <newline>+			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>+			<string key="NS.object.0">732</string> <newline>+		</object> <newline> 		<object class="NSMutableArray" key="IBDocument.EditedObjectIDs"> <newline> 			<bool key="EncodedWithXMLCoder">YES</bool> <newline>-			<integer value="18"/> <newline>+			<integer value="74"/> <newline> 		</object> <newline> 		<object class="NSArray" key="IBDocument.PluginDependencies"> <newline> 			<bool key="EncodedWithXMLCoder">YES</bool> <newline>@@ -16,7 +20,7 @@ <newline> 		</object> <newline> 		<object class="NSMutableDictionary" key="IBDocument.Metadata"> <newline> 			<bool key="EncodedWithXMLCoder">YES</bool> <newline>-			<object class="NSArray" key="dict.sortedKeys"> <newline>+			<object class="NSArray" key="dict.sortedKeys" id="0"> <newline> 				<bool key="EncodedWithXMLCoder">YES</bool> <newline> 			</object> <newline> 			<object class="NSMutableArray" key="dict.values"> <newline>@@ -42,7 +46,7 @@ <newline> 				<string key="NSWindowTitle">Preferences</string> <newline> 				<string key="NSWindowClass">NSWindow</string> <newline> 				<nil key="NSViewClass"/> <newline>-				<string key="NSWindowContentMaxSize">{3.40282e+38, 3.40282e+38}</string> <newline>+				<string key="NSWindowContentMaxSize">{1.79769e+308, 1.79769e+308}</string> <newline> 				<object class="NSView" key="NSWindowView" id="408649839"> <newline> 					<reference key="NSNextResponder"/> <newline> 					<int key="NSvFlags">256</int> <newline>@@ -53,6 +57,7 @@ <newline> 							<int key="NSvFlags">36</int> <newline> 							<string key="NSFrame">{{13, 10}, {533, 499}}</string> <newline> 							<reference key="NSSuperview" ref="408649839"/> <newline>+							<reference key="NSWindow"/> <newline> 							<object class="NSMutableArray" key="NSTabViewItems"> <newline> 								<bool key="EncodedWithXMLCoder">YES</bool> <newline> 								<object class="NSTabViewItem" id="1024664267"> <newline>@@ -74,7 +79,7 @@ <newline> 													<string key="NSContents">Use Current</string> <newline> 													<object class="NSFont" key="NSSupport" id="445696277"> <newline> 														<string key="NSName">LucidaGrande</string> <newline>-														<double key="NSSize">1.300000e+01</double> <newline>+														<double key="NSSize">13</double> <newline> 														<int key="NSfFlags">1044</int> <newline> 													</object> <newline> 													<reference key="NSControlView" ref="810089388"/> <newline>@@ -146,7 +151,7 @@ <newline> 													<string key="NSContents">Toolbar:</string> <newline> 													<object class="NSFont" key="NSSupport" id="290273273"> <newline> 														<string key="NSName">LucidaGrande-Bold</string> <newline>-														<double key="NSSize">1.300000e+01</double> <newline>+														<double key="NSSize">13</double> <newline> 														<int key="NSfFlags">16</int> <newline> 													</object> <newline> 													<reference key="NSControlView" ref="881113898"/> <newline>@@ -156,7 +161,7 @@ <newline> 														<string key="NSColorName">controlColor</string> <newline> 														<object class="NSColor" key="NSColor" id="854057974"> <newline> 															<int key="NSColorSpace">3</int> <newline>-															<bytes key="NSWhite">MC42NjY2NjY2OQA</bytes> <newline>+															<bytes key="NSWhite">MC42NjY2NjY2NjY3AA</bytes> <newline> 														</object> <newline> 													</object> <newline> 													<object class="NSColor" key="NSTextColor" id="748094473"> <newline>@@ -244,8 +249,8 @@ <newline> 														<int key="NSCellFlags2">0</int> <newline> 														<string key="NSContents">Restore the pages that were open last</string> <newline> 														<reference key="NSSupport" ref="445696277"/> <newline>-														<int key="NSTag">1</int> <newline> 														<reference key="NSControlView" ref="1016627403"/> <newline>+														<int key="NSTag">1</int> <newline> 														<int key="NSButtonFlags">1211912703</int> <newline> 														<int key="NSButtonFlags2">128</int> <newline> 														<object class="NSImage" key="NSNormalImage"> <newline>@@ -255,7 +260,7 @@ <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline> 																<object class="NSArray"> <newline> 																	<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																	<integer value="0" id="8"/> <newline>+																	<integer value="0"/> <newline> 																	<object class="NSBitmapImageRep"> <newline> 																		<object class="NSData" key="NSTIFFRepresentation"> <newline> 																			<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -281,7 +286,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFxgEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFzodzAAcAAAwYAAAF1gAAAAAACAAIAAgACAABAAEAAQABAAAMGGFw <newline> cGwCAAAAbW50clJHQiBYWVogB9YABAADABMALAASYWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline>@@ -353,8 +358,8 @@ QXBwbGUgQ29tcHV0ZXIsIEluYy4sIDIwMDUAAAAAA</bytes> <newline> 														<int key="NSCellFlags2">0</int> <newline> 														<string key="NSContents">Open the following pages:</string> <newline> 														<reference key="NSSupport" ref="445696277"/> <newline>-														<int key="NSTag">2</int> <newline> 														<reference key="NSControlView" ref="1016627403"/> <newline>+														<int key="NSTag">2</int> <newline> 														<int key="NSButtonFlags">1211912703</int> <newline> 														<int key="NSButtonFlags2">128</int> <newline> 														<object class="NSImage" key="NSNormalImage"> <newline>@@ -364,7 +369,7 @@ QXBwbGUgQ29tcHV0ZXIsIEluYy4sIDIwMDUAAAAAA</bytes> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline> 																<object class="NSArray"> <newline> 																	<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																	<reference ref="8"/> <newline>+																	<integer value="0"/> <newline> 																	<object class="NSBitmapImageRep"> <newline> 																		<object class="NSData" key="NSTIFFRepresentation"> <newline> 																			<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -390,7 +395,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFxgEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFzodzAAcAABEcAAAF1gAAAAAACAAIAAgACAABAAEAAQABAAARHGFw <newline> cGwCAAAAbW50clJHQiBYWVogB9kAAgADABEABQAfYWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAPbWAAEAAAAA0y1hcHBsTYFxS94VjCFH/cYlpD4aTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline>@@ -494,7 +499,7 @@ rwAAAAAAAAAAAAAAAAAAAAAAdGV4dAAAAABDb3B5cmlnaHQgQXBwbGUsIEluYy4sIDIwMDkAA</bytes <newline> 															<bool key="EncodedWithXMLCoder">YES</bool> <newline> 															<object class="NSArray"> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																<reference ref="8"/> <newline>+																<integer value="0"/> <newline> 																<object class="NSBitmapImageRep"> <newline> 																	<object class="NSData" key="NSTIFFRepresentation"> <newline> 																		<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -520,7 +525,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFugEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																	</object> <newline> 																</object> <newline>@@ -607,8 +612,8 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSCellFlags2">0</int> <newline> 														<string key="NSContents">Open this page:</string> <newline> 														<reference key="NSSupport" ref="445696277"/> <newline>-														<int key="NSTag">1</int> <newline> 														<reference key="NSControlView" ref="743261621"/> <newline>+														<int key="NSTag">1</int> <newline> 														<int key="NSButtonFlags">1211912703</int> <newline> 														<int key="NSButtonFlags2">128</int> <newline> 														<object class="NSImage" key="NSNormalImage"> <newline>@@ -618,7 +623,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline> 																<object class="NSArray"> <newline> 																	<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																	<reference ref="8"/> <newline>+																	<integer value="0"/> <newline> 																	<object class="NSBitmapImageRep"> <newline> 																		<object class="NSData" key="NSTIFFRepresentation"> <newline> 																			<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -644,7 +649,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFxgEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFzodzAAcAAAwYAAAF1gAAAAAACAAIAAgACAABAAEAAQABAAAMGGFw <newline> cGwCAAAAbW50clJHQiBYWVogB9YABAADABMALAASYWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline>@@ -727,7 +732,7 @@ QXBwbGUgQ29tcHV0ZXIsIEluYy4sIDIwMDUAAAAAA</bytes> <newline> 															<bool key="EncodedWithXMLCoder">YES</bool> <newline> 															<object class="NSArray"> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																<reference ref="8"/> <newline>+																<integer value="0"/> <newline> 																<object class="NSBitmapImageRep"> <newline> 																	<object class="NSData" key="NSTIFFRepresentation"> <newline> 																		<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -753,7 +758,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFugEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																	</object> <newline> 																</object> <newline>@@ -874,16 +879,16 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																<object class="NSMutableArray" key="NSTableColumns"> <newline> 																	<bool key="EncodedWithXMLCoder">YES</bool> <newline> 																	<object class="NSTableColumn" id="1005813658"> <newline>-																		<double key="NSWidth">2.790000e+02</double> <newline>-																		<double key="NSMinWidth">4.000000e+01</double> <newline>-																		<double key="NSMaxWidth">1.000000e+03</double> <newline>+																		<double key="NSWidth">279</double> <newline>+																		<double key="NSMinWidth">40</double> <newline>+																		<double key="NSMaxWidth">1000</double> <newline> 																		<object class="NSTableHeaderCell" key="NSHeaderCell"> <newline> 																			<int key="NSCellFlags">75628096</int> <newline> 																			<int key="NSCellFlags2">2048</int> <newline> 																			<string key="NSContents"/> <newline> 																			<object class="NSFont" key="NSSupport" id="26"> <newline> 																				<string key="NSName">LucidaGrande</string> <newline>-																				<double key="NSSize">1.100000e+01</double> <newline>+																				<double key="NSSize">11</double> <newline> 																				<int key="NSfFlags">3100</int> <newline> 																			</object> <newline> 																			<object class="NSColor" key="NSBackgroundColor"> <newline>@@ -917,8 +922,8 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																		<reference key="NSTableView" ref="165250101"/> <newline> 																	</object> <newline> 																</object> <newline>-																<double key="NSIntercellSpacingWidth">3.000000e+00</double> <newline>-																<double key="NSIntercellSpacingHeight">2.000000e+00</double> <newline>+																<double key="NSIntercellSpacingWidth">3</double> <newline>+																<double key="NSIntercellSpacingHeight">2</double> <newline> 																<reference key="NSBackgroundColor" ref="571857138"/> <newline> 																<object class="NSColor" key="NSGridColor"> <newline> 																	<int key="NSColorSpace">6</int> <newline>@@ -929,12 +934,15 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																		<bytes key="NSWhite">MC41AA</bytes> <newline> 																	</object> <newline> 																</object> <newline>-																<double key="NSRowHeight">1.700000e+01</double> <newline>+																<double key="NSRowHeight">17</double> <newline> 																<int key="NSTvFlags">-901775360</int> <newline>+																<reference key="NSDelegate"/> <newline>+																<reference key="NSDataSource"/> <newline> 																<int key="NSColumnAutoresizingStyle">4</int> <newline> 																<int key="NSDraggingSourceMaskForLocal">15</int> <newline> 																<int key="NSDraggingSourceMaskForNonLocal">0</int> <newline> 																<bool key="NSAllowsTypeSelect">YES</bool> <newline>+																<int key="NSTableViewDraggingDestinationStyle">0</int> <newline> 															</object> <newline> 														</object> <newline> 														<string key="NSFrame">{{1, 1}, {282, 63}}</string> <newline>@@ -952,7 +960,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSsFlags">256</int> <newline> 														<reference key="NSTarget" ref="54854923"/> <newline> 														<string key="NSAction">_doScroller:</string> <newline>-														<double key="NSPercent">9.868421e-01</double> <newline>+														<double key="NSPercent">0.98684210000000006</double> <newline> 													</object> <newline> 													<object class="NSScroller" id="757862790"> <newline> 														<reference key="NSNextResponder" ref="54854923"/> <newline>@@ -962,7 +970,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSsFlags">1</int> <newline> 														<reference key="NSTarget" ref="54854923"/> <newline> 														<string key="NSAction">_doScroller:</string> <newline>-														<double key="NSPercent">5.714286e-01</double> <newline>+														<double key="NSPercent">0.57142859999999995</double> <newline> 													</object> <newline> 												</object> <newline> 												<string key="NSFrame">{{171, 302}, {284, 65}}</string> <newline>@@ -990,7 +998,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 													<int key="NSButtonFlags2">129</int> <newline> 													<object class="NSFont" key="NSAlternateImage" id="497093453"> <newline> 														<string key="NSName">LucidaGrande</string> <newline>-														<double key="NSSize">1.300000e+01</double> <newline>+														<double key="NSSize">13</double> <newline> 														<int key="NSfFlags">16</int> <newline> 													</object> <newline> 													<string key="NSAlternateContents"/> <newline>@@ -1011,7 +1019,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 													<string key="NSContents">Chromium is not the default browser.</string> <newline> 													<object class="NSFont" key="NSSupport" id="783256529"> <newline> 														<string key="NSName">LucidaGrande</string> <newline>-														<double key="NSSize">1.100000e+01</double> <newline>+														<double key="NSSize">11</double> <newline> 														<int key="NSfFlags">16</int> <newline> 													</object> <newline> 													<reference key="NSControlView" ref="402804707"/> <newline>@@ -1090,6 +1098,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{22, 419}, {138, 17}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSTextFieldCell" key="NSCell" id="218087448"> <newline> 													<int key="NSCellFlags">68288064</int> <newline>@@ -1106,6 +1115,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{171, 396}, {300, 40}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<int key="NSNumRows">2</int> <newline> 												<int key="NSNumCols">1</int> <newline>@@ -1116,8 +1126,8 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSCellFlags2">0</int> <newline> 														<string key="NSContents">Offer to save passwords</string> <newline> 														<reference key="NSSupport" ref="445696277"/> <newline>-														<int key="NSTag">1</int> <newline> 														<reference key="NSControlView" ref="1019357609"/> <newline>+														<int key="NSTag">1</int> <newline> 														<int key="NSButtonFlags">1211912703</int> <newline> 														<int key="NSButtonFlags2">128</int> <newline> 														<reference key="NSAlternateImage" ref="1028460734"/> <newline>@@ -1141,7 +1151,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline> 																<object class="NSArray"> <newline> 																	<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																	<reference ref="8"/> <newline>+																	<integer value="0"/> <newline> 																	<object class="NSBitmapImageRep"> <newline> 																		<object class="NSData" key="NSTIFFRepresentation"> <newline> 																			<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -1167,7 +1177,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFxgEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFzodzAAcAAAwYAAAF1gAAAAAACAAIAAgACAABAAEAAQABAAAMGGFw <newline> cGwCAAAAbW50clJHQiBYWVogB9YABAADABMALAASYWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline>@@ -1250,7 +1260,7 @@ QXBwbGUgQ29tcHV0ZXIsIEluYy4sIDIwMDUAAAAAA</bytes> <newline> 															<bool key="EncodedWithXMLCoder">YES</bool> <newline> 															<object class="NSArray"> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																<reference ref="8"/> <newline>+																<integer value="0"/> <newline> 																<object class="NSBitmapImageRep"> <newline> 																	<object class="NSData" key="NSTIFFRepresentation"> <newline> 																		<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -1276,7 +1286,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFugEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																	</object> <newline> 																</object> <newline>@@ -1298,6 +1308,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{165, 354}, {184, 32}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSButtonCell" key="NSCell" id="745829249"> <newline> 													<int key="NSCellFlags">67239424</int> <newline>@@ -1318,6 +1329,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{22, 125}, {139, 17}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSTextFieldCell" key="NSCell" id="1066495099"> <newline> 													<int key="NSCellFlags">68288064</int> <newline>@@ -1334,6 +1346,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{22, 317}, {138, 17}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSTextFieldCell" key="NSCell" id="677476881"> <newline> 													<int key="NSCellFlags">68288064</int> <newline>@@ -1350,6 +1363,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{22, 246}, {138, 17}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSTextFieldCell" key="NSCell" id="340834043"> <newline> 													<int key="NSCellFlags">68288064</int> <newline>@@ -1366,6 +1380,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{168, 173}, {331, 30}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSTextFieldCell" key="NSCell" id="1066779324"> <newline> 													<int key="NSCellFlags">67239424</int> <newline>@@ -1382,11 +1397,12 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{165, 235}, {153, 32}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSButtonCell" key="NSCell" id="325720834"> <newline> 													<int key="NSCellFlags">604110336</int> <newline> 													<int key="NSCellFlags2">134217728</int> <newline>-													<string type="base64-UTF8" key="NSContents">SW1wb3J0IERhdGHigKY</string> <newline>+													<string key="NSContents">Import Data…</string> <newline> 													<reference key="NSSupport" ref="445696277"/> <newline> 													<reference key="NSControlView" ref="885386403"/> <newline> 													<int key="NSButtonFlags">-2038284033</int> <newline>@@ -1402,11 +1418,12 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{165, 203}, {180, 32}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSButtonCell" key="NSCell" id="551321318"> <newline> 													<int key="NSCellFlags">67239424</int> <newline> 													<int key="NSCellFlags2">134217728</int> <newline>-													<string type="base64-UTF8" key="NSContents">Q2xlYXIgQnJvd3NpbmcgRGF0YeKApg</string> <newline>+													<string key="NSContents">Clear Browsing Data…</string> <newline> 													<reference key="NSSupport" ref="445696277"/> <newline> 													<reference key="NSControlView" ref="987908490"/> <newline> 													<int key="NSButtonFlags">-2038284033</int> <newline>@@ -1422,6 +1439,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{171, 294}, {300, 40}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<int key="NSNumRows">2</int> <newline> 												<int key="NSNumCols">1</int> <newline>@@ -1432,8 +1450,8 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSCellFlags2">0</int> <newline> 														<string key="NSContents">Save text from forms on web pages</string> <newline> 														<reference key="NSSupport" ref="445696277"/> <newline>-														<int key="NSTag">1</int> <newline> 														<reference key="NSControlView" ref="854747859"/> <newline>+														<int key="NSTag">1</int> <newline> 														<int key="NSButtonFlags">1211912703</int> <newline> 														<int key="NSButtonFlags2">128</int> <newline> 														<reference key="NSAlternateImage" ref="1028460734"/> <newline>@@ -1457,7 +1475,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline> 																<object class="NSArray"> <newline> 																	<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																	<reference ref="8"/> <newline>+																	<integer value="0"/> <newline> 																	<object class="NSBitmapImageRep"> <newline> 																		<object class="NSData" key="NSTIFFRepresentation"> <newline> 																			<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -1483,7 +1501,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFxgEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFzodzAAcAAAwYAAAF1gAAAAAACAAIAAgACAABAAEAAQABAAAMGGFw <newline> cGwCAAAAbW50clJHQiBYWVogB9YABAADABMALAASYWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline>@@ -1566,7 +1584,7 @@ QXBwbGUgQ29tcHV0ZXIsIEluYy4sIDIwMDUAAAAAA</bytes> <newline> 															<bool key="EncodedWithXMLCoder">YES</bool> <newline> 															<object class="NSArray"> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																<reference ref="8"/> <newline>+																<integer value="0"/> <newline> 																<object class="NSBitmapImageRep"> <newline> 																	<object class="NSData" key="NSTIFFRepresentation"> <newline> 																		<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -1592,7 +1610,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFugEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																	</object> <newline> 																</object> <newline>@@ -1614,11 +1632,12 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{165, 83}, {129, 32}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSButtonCell" key="NSCell" id="309945174"> <newline> 													<int key="NSCellFlags">67239424</int> <newline> 													<int key="NSCellFlags2">134217728</int> <newline>-													<string type="base64-UTF8" key="NSContents">R2V0IFRoZW1lc+KApg</string> <newline>+													<string key="NSContents">Get Themes…</string> <newline> 													<reference key="NSSupport" ref="445696277"/> <newline> 													<reference key="NSControlView" ref="423027085"/> <newline> 													<int key="NSButtonFlags">-2038284033</int> <newline>@@ -1634,6 +1653,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{165, 115}, {183, 32}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSButtonCell" key="NSCell" id="270492768"> <newline> 													<int key="NSCellFlags">67239424</int> <newline>@@ -1652,6 +1672,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 										</object> <newline> 										<string key="NSFrame">{{10, 33}, {513, 453}}</string> <newline> 										<reference key="NSSuperview" ref="838559838"/> <newline>+										<reference key="NSWindow"/> <newline> 									</object> <newline> 									<string key="NSLabel">Personal Stuff</string> <newline> 									<reference key="NSColor" ref="592613688"/> <newline>@@ -1697,8 +1718,8 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSsFlags">256</int> <newline> 														<reference key="NSTarget" ref="14278481"/> <newline> 														<string key="NSAction">_doScroller:</string> <newline>-														<double key="NSCurValue">1.000000e+00</double> <newline>-														<double key="NSPercent">9.636363e-01</double> <newline>+														<double key="NSCurValue">1</double> <newline>+														<double key="NSPercent">0.9636363</double> <newline> 													</object> <newline> 													<object class="NSScroller" id="470087648"> <newline> 														<reference key="NSNextResponder" ref="14278481"/> <newline>@@ -1708,7 +1729,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSsFlags">1</int> <newline> 														<reference key="NSTarget" ref="14278481"/> <newline> 														<string key="NSAction">_doScroller:</string> <newline>-														<double key="NSPercent">5.060241e-01</double> <newline>+														<double key="NSPercent">0.50602409999999998</double> <newline> 													</object> <newline> 												</object> <newline> 												<string key="NSFrame">{{17, 64}, {479, 386}}</string> <newline>@@ -1760,19 +1781,20 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 					</object> <newline> 					<string key="NSFrameSize">{559, 515}</string> <newline> 					<reference key="NSSuperview"/> <newline>+					<reference key="NSWindow"/> <newline> 				</object> <newline> 				<string key="NSScreenRect">{{0, 0}, {1440, 878}}</string> <newline>-				<string key="NSMaxSize">{3.40282e+38, 3.40282e+38}</string> <newline>+				<string key="NSMaxSize">{1.79769e+308, 1.79769e+308}</string> <newline> 			</object> <newline> 			<object class="NSCustomView" id="1016273328"> <newline>-				<nil key="NSNextResponder"/> <newline>+				<reference key="NSNextResponder"/> <newline> 				<int key="NSvFlags">268</int> <newline> 				<object class="NSMutableArray" key="NSSubviews"> <newline> 					<bool key="EncodedWithXMLCoder">YES</bool> <newline> 					<object class="NSTextField" id="1032231978"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{17, 683}, {146, 17}}</string> <newline>+						<string key="NSFrame">{{17, 602}, {146, 17}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="710610494"> <newline>@@ -1789,7 +1811,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 					<object class="NSTextField" id="287656702"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{17, 268}, {146, 17}}</string> <newline>+						<string key="NSFrame">{{17, 187}, {146, 17}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="237538019"> <newline>@@ -1805,15 +1827,13 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 					<object class="NSTextField" id="412658410"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{43, 293}, {421, 59}}</string> <newline>+						<string key="NSFrame">{{43, 212}, {421, 59}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="786981193"> <newline> 							<int key="NSCellFlags">67239424</int> <newline> 							<int key="NSCellFlags2">272629760</int> <newline>-							<string type="base64-UTF8" key="NSContents">SWYgeW91IGhhdmUgY2hvc2VuIHRvIG9wZW4gY2VydGFpbiBmaWxlIHR5cGVzIGF1dG9tYXRpY2FsbHkg <newline>-YWZ0ZXIgZG93bmxvYWRpbmcsIHlvdSBjYW4gY2xlYXIgdGhlc2Ugc2V0dGluZ3Mgc28gdGhhdCBkb3du <newline>-bG9hZGVkIGZpbGVzIGRvbid0IG9wZW4gYXV0b21hdGljYWxseS4</string> <newline>+							<string key="NSContents">If you have chosen to open certain file types automatically after downloading, you can clear these settings so that downloaded files don't open automatically.</string> <newline> 							<reference key="NSSupport" ref="497093453"/> <newline> 							<reference key="NSControlView" ref="412658410"/> <newline> 							<reference key="NSBackgroundColor" ref="592613688"/> <newline>@@ -1823,15 +1843,13 @@ bG9hZGVkIGZpbGVzIGRvbid0IG9wZW4gYXV0b21hdGljYWxseS4</string> <newline> 					<object class="NSTextField" id="1043699198"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{25, 640}, {441, 40}}</string> <newline>+						<string key="NSFrame">{{25, 559}, {441, 40}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="494850700"> <newline> 							<int key="NSCellFlags">67239424</int> <newline> 							<int key="NSCellFlags2">272629760</int> <newline>-							<string type="base64-UTF8" key="NSContents">VGhlIGZvbGxvd2luZyB3ZWIgc2VydmljZXMgbWF5IGJlIHVzZWQgdG8gaW1wcm92ZSB5b3VyIGJyb3dz <newline>-aW5nIGV4cGVyaWVuY2Ug4oCUIHlvdSBtYXkgb3B0aW9uYWxseSBkaXNhYmxlIHRoZXNlIHNlcnZpY2Vz <newline>-Lg</string> <newline>+							<string key="NSContents">The following web services may be used to improve your browsing experience — you may optionally disable these services.</string> <newline> 							<reference key="NSSupport" ref="497093453"/> <newline> 							<reference key="NSControlView" ref="1043699198"/> <newline> 							<reference key="NSBackgroundColor" ref="592613688"/> <newline>@@ -1841,7 +1859,7 @@ Lg</string> <newline> 					<object class="NSButton" id="348105916"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{22, 352}, {220, 32}}</string> <newline>+						<string key="NSFrame">{{22, 271}, {220, 32}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="1018797611"> <newline>@@ -1861,7 +1879,7 @@ Lg</string> <newline> 					<object class="NSButton" id="480577047"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{26, 616}, {437, 18}}</string> <newline>+						<string key="NSFrame">{{26, 535}, {437, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="298042898"> <newline>@@ -1883,7 +1901,7 @@ Lg</string> <newline> 					<object class="NSButton" id="808321623"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{26, 596}, {439, 18}}</string> <newline>+						<string key="NSFrame">{{26, 515}, {439, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="874031585"> <newline>@@ -1905,7 +1923,7 @@ Lg</string> <newline> 					<object class="NSButton" id="139965100"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{26, 576}, {428, 18}}</string> <newline>+						<string key="NSFrame">{{26, 495}, {428, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="647261577"> <newline>@@ -1927,7 +1945,7 @@ Lg</string> <newline> 					<object class="NSButton" id="514356928"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{56, 127}, {174, 32}}</string> <newline>+						<string key="NSFrame">{{56, 46}, {174, 32}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="821186353"> <newline>@@ -1947,7 +1965,7 @@ Lg</string> <newline> 					<object class="NSTextField" id="860741341"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{17, 191}, {146, 17}}</string> <newline>+						<string key="NSFrame">{{17, 110}, {146, 17}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="240354523"> <newline>@@ -1963,7 +1981,7 @@ Lg</string> <newline> 					<object class="NSButton" id="217654608"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{26, 556}, {428, 18}}</string> <newline>+						<string key="NSFrame">{{26, 475}, {428, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="935362863"> <newline>@@ -1985,7 +2003,7 @@ Lg</string> <newline> 					<object class="NSTextField" id="886068350"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{29, 166}, {193, 17}}</string> <newline>+						<string key="NSFrame">{{29, 85}, {193, 17}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="550006091"> <newline>@@ -2001,7 +2019,7 @@ Lg</string> <newline> 					<object class="NSButton" id="733677494"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{30, 99}, {276, 18}}</string> <newline>+						<string key="NSFrame">{{30, 18}, {276, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="694359929"> <newline>@@ -2020,26 +2038,10 @@ Lg</string> <newline> 							<int key="NSPeriodicInterval">25</int> <newline> 						</object> <newline> 					</object> <newline>-					<object class="NSTextField" id="319078021"> <newline>-						<reference key="NSNextResponder" ref="1016273328"/> <newline>-						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{29, 76}, {330, 17}}</string> <newline>-						<reference key="NSSuperview" ref="1016273328"/> <newline>-						<bool key="NSEnabled">YES</bool> <newline>-						<object class="NSTextFieldCell" key="NSCell" id="789709547"> <newline>-							<int key="NSCellFlags">68288064</int> <newline>-							<int key="NSCellFlags2">272630784</int> <newline>-							<string key="NSContents">When there is mixed content on secure (SSL) pages:</string> <newline>-							<reference key="NSSupport" ref="445696277"/> <newline>-							<reference key="NSControlView" ref="319078021"/> <newline>-							<reference key="NSBackgroundColor" ref="592613688"/> <newline>-							<reference key="NSTextColor" ref="748094473"/> <newline>-						</object> <newline>-					</object> <newline> 					<object class="NSTextField" id="913832943"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{25, 513}, {193, 17}}</string> <newline>+						<string key="NSFrame">{{25, 432}, {193, 17}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="589077222"> <newline>@@ -2055,13 +2057,13 @@ Lg</string> <newline> 					<object class="NSButton" id="1054376288"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{307, 465}, {151, 32}}</string> <newline>+						<string key="NSFrame">{{307, 396}, {151, 32}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="441531293"> <newline> 							<int key="NSCellFlags">604110336</int> <newline> 							<int key="NSCellFlags2">134217728</int> <newline>-							<string type="base64-UTF8" key="NSContents">U2hvdyBDb29raWVz4oCmA</string> <newline>+							<string key="NSContents">Show Cookies…</string> <newline> 							<reference key="NSSupport" ref="445696277"/> <newline> 							<reference key="NSControlView" ref="1054376288"/> <newline> 							<int key="NSButtonFlags">-2038284033</int> <newline>@@ -2072,75 +2074,10 @@ Lg</string> <newline> 							<int key="NSPeriodicInterval">25</int> <newline> 						</object> <newline> 					</object> <newline>-					<object class="NSPopUpButton" id="333355502"> <newline>-						<reference key="NSNextResponder" ref="1016273328"/> <newline>-						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{53, 44}, {237, 26}}</string> <newline>-						<reference key="NSSuperview" ref="1016273328"/> <newline>-						<bool key="NSEnabled">YES</bool> <newline>-						<object class="NSPopUpButtonCell" key="NSCell" id="753519282"> <newline>-							<int key="NSCellFlags">-1539178944</int> <newline>-							<int key="NSCellFlags2">2048</int> <newline>-							<reference key="NSSupport" ref="445696277"/> <newline>-							<reference key="NSControlView" ref="333355502"/> <newline>-							<int key="NSButtonFlags">109199615</int> <newline>-							<int key="NSButtonFlags2">129</int> <newline>-							<string key="NSAlternateContents"/> <newline>-							<string key="NSKeyEquivalent"/> <newline>-							<int key="NSPeriodicDelay">400</int> <newline>-							<int key="NSPeriodicInterval">75</int> <newline>-							<object class="NSMenuItem" key="NSMenuItem" id="664774881"> <newline>-								<reference key="NSMenu" ref="117498722"/> <newline>-								<string key="NSTitle">Allow all content to load</string> <newline>-								<string key="NSKeyEquiv"/> <newline>-								<int key="NSKeyEquivModMask">1048576</int> <newline>-								<int key="NSMnemonicLoc">2147483647</int> <newline>-								<int key="NSState">1</int> <newline>-								<reference key="NSOnImage" ref="312983820"/> <newline>-								<reference key="NSMixedImage" ref="533879330"/> <newline>-								<string key="NSAction">_popUpItemAction:</string> <newline>-								<reference key="NSTarget" ref="753519282"/> <newline>-							</object> <newline>-							<bool key="NSMenuItemRespectAlignment">YES</bool> <newline>-							<object class="NSMenu" key="NSMenu" id="117498722"> <newline>-								<string key="NSTitle">OtherViews</string> <newline>-								<object class="NSMutableArray" key="NSMenuItems"> <newline>-									<bool key="EncodedWithXMLCoder">YES</bool> <newline>-									<reference ref="664774881"/> <newline>-									<object class="NSMenuItem" id="617012582"> <newline>-										<reference key="NSMenu" ref="117498722"/> <newline>-										<string key="NSTitle">Allow insecure images</string> <newline>-										<string key="NSKeyEquiv"/> <newline>-										<int key="NSKeyEquivModMask">1048576</int> <newline>-										<int key="NSMnemonicLoc">2147483647</int> <newline>-										<reference key="NSOnImage" ref="312983820"/> <newline>-										<reference key="NSMixedImage" ref="533879330"/> <newline>-										<string key="NSAction">_popUpItemAction:</string> <newline>-										<reference key="NSTarget" ref="753519282"/> <newline>-									</object> <newline>-									<object class="NSMenuItem" id="58256631"> <newline>-										<reference key="NSMenu" ref="117498722"/> <newline>-										<string key="NSTitle">Block all insecure content</string> <newline>-										<string key="NSKeyEquiv"/> <newline>-										<int key="NSKeyEquivModMask">1048576</int> <newline>-										<int key="NSMnemonicLoc">2147483647</int> <newline>-										<reference key="NSOnImage" ref="312983820"/> <newline>-										<reference key="NSMixedImage" ref="533879330"/> <newline>-										<string key="NSAction">_popUpItemAction:</string> <newline>-										<reference key="NSTarget" ref="753519282"/> <newline>-									</object> <newline>-								</object> <newline>-							</object> <newline>-							<int key="NSPreferredEdge">1</int> <newline>-							<bool key="NSUsesItemFromMenu">YES</bool> <newline>-							<bool key="NSAltersState">YES</bool> <newline>-							<int key="NSArrowPosition">2</int> <newline>-						</object> <newline>-					</object> <newline> 					<object class="NSPopUpButton" id="685290609"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{55, 481}, {237, 26}}</string> <newline>+						<string key="NSFrame">{{55, 400}, {237, 26}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSPopUpButtonCell" key="NSCell" id="583724370"> <newline>@@ -2205,7 +2142,7 @@ Lg</string> <newline> 					<object class="NSTextField" id="630848197"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{17, 448}, {146, 17}}</string> <newline>+						<string key="NSFrame">{{17, 367}, {146, 17}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="660352048"> <newline>@@ -2224,13 +2161,13 @@ Lg</string> <newline> 						<int key="NSvFlags">268</int> <newline> 						<object class="NSMutableSet" key="NSDragTypes"> <newline> 							<bool key="EncodedWithXMLCoder">YES</bool> <newline>-							<object class="NSMutableArray" key="set.sortedObjects"> <newline>+							<object class="NSArray" key="set.sortedObjects"> <newline> 								<bool key="EncodedWithXMLCoder">YES</bool> <newline> 								<string>Apple URL pasteboard type</string> <newline> 								<string>NSFilenamesPboardType</string> <newline> 							</object> <newline> 						</object> <newline>-						<string key="NSFrame">{{20, 414}, {179, 26}}</string> <newline>+						<string key="NSFrame">{{20, 333}, {179, 26}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSPathCell" key="NSCell" id="25958950"> <newline>@@ -2248,7 +2185,7 @@ Lg</string> <newline> 					<object class="NSButton" id="928184762"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{32, 390}, {323, 18}}</string> <newline>+						<string key="NSFrame">{{32, 309}, {323, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="731161158"> <newline>@@ -2270,13 +2207,13 @@ Lg</string> <newline> 					<object class="NSButton" id="777041502"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{22, 220}, {275, 32}}</string> <newline>+						<string key="NSFrame">{{22, 139}, {275, 32}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="526979400"> <newline> 							<int key="NSCellFlags">604110336</int> <newline> 							<int key="NSCellFlags2">134217728</int> <newline>-							<string type="base64-UTF8" key="NSContents">Q2hhbmdlIEZvbnQgYW5kIExhbmd1YWdlIFNldHRpbmdz4oCmA</string> <newline>+							<string key="NSContents">Change Font and Language Settings…</string> <newline> 							<reference key="NSSupport" ref="445696277"/> <newline> 							<reference key="NSControlView" ref="777041502"/> <newline> 							<int key="NSButtonFlags">-2038284033</int> <newline>@@ -2290,7 +2227,7 @@ Lg</string> <newline> 					<object class="NSButton" id="346222444"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{26, 536}, {428, 18}}</string> <newline>+						<string key="NSFrame">{{26, 455}, {428, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="209704674"> <newline>@@ -2310,7 +2247,8 @@ Lg</string> <newline> 						</object> <newline> 					</object> <newline> 				</object> <newline>-				<string key="NSFrameSize">{466, 720}</string> <newline>+				<string key="NSFrameSize">{466, 639}</string> <newline>+				<reference key="NSSuperview"/> <newline> 				<string key="NSClassName">NSView</string> <newline> 			</object> <newline> 			<object class="NSCustomObject" id="775776152"> <newline>@@ -2539,7 +2477,7 @@ Lg</string> <newline> 							<string key="NSKeyPath">defaultBrowserText</string> <newline> 							<object class="NSDictionary" key="NSOptions"> <newline> 								<string key="NS.key.0">NSAllowsEditingMultipleValuesSelection</string> <newline>-								<boolean value="NO" key="NS.object.0" id="6"/> <newline>+								<boolean value="NO" key="NS.object.0"/> <newline> 							</object> <newline> 							<int key="NSNibBindingConnectorVersion">2</int> <newline> 						</object> <newline>@@ -2583,7 +2521,7 @@ Lg</string> <newline> 							<string key="NSKeyPath">passwordManagerEnabledIndex</string> <newline> 							<object class="NSDictionary" key="NSOptions"> <newline> 								<string key="NS.key.0">NSAllowsEditingMultipleValuesSelection</string> <newline>-								<reference key="NS.object.0" ref="6"/> <newline>+								<boolean value="NO" key="NS.object.0"/> <newline> 							</object> <newline> 							<int key="NSNibBindingConnectorVersion">2</int> <newline> 						</object> <newline>@@ -2603,7 +2541,7 @@ Lg</string> <newline> 							<string key="NSKeyPath">formAutofillEnabledIndex</string> <newline> 							<object class="NSDictionary" key="NSOptions"> <newline> 								<string key="NS.key.0">NSAllowsEditingMultipleValuesSelection</string> <newline>-								<reference key="NS.object.0" ref="6"/> <newline>+								<boolean value="NO" key="NS.object.0"/> <newline> 							</object> <newline> 							<int key="NSNibBindingConnectorVersion">2</int> <newline> 						</object> <newline>@@ -2905,28 +2843,26 @@ Lg</string> <newline> 					<bool key="EncodedWithXMLCoder">YES</bool> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">0</int> <newline>-						<object class="NSArray" key="object" id="420192856"> <newline>-							<bool key="EncodedWithXMLCoder">YES</bool> <newline>-						</object> <newline>+						<reference key="object" ref="0"/> <newline> 						<reference key="children" ref="1000"/> <newline> 						<nil key="parent"/> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">-2</int> <newline> 						<reference key="object" ref="1001"/> <newline>-						<reference key="parent" ref="420192856"/> <newline>-						<string type="base64-UTF8" key="objectName">RmlsZSdzIE93bmVyA</string> <newline>+						<reference key="parent" ref="0"/> <newline>+						<string key="objectName">File's Owner</string> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">-1</int> <newline> 						<reference key="object" ref="1003"/> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 						<string key="objectName">First Responder</string> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">-3</int> <newline> 						<reference key="object" ref="1004"/> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 						<string key="objectName">Application</string> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline>@@ -2936,7 +2872,7 @@ Lg</string> <newline> 							<bool key="EncodedWithXMLCoder">YES</bool> <newline> 							<reference ref="408649839"/> <newline> 						</object> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">4</int> <newline>@@ -3272,7 +3208,6 @@ Lg</string> <newline> 							<bool key="EncodedWithXMLCoder">YES</bool> <newline> 							<reference ref="1032231978"/> <newline> 							<reference ref="1043699198"/> <newline>-							<reference ref="1054376288"/> <newline> 							<reference ref="287656702"/> <newline> 							<reference ref="412658410"/> <newline> 							<reference ref="348105916"/> <newline>@@ -3284,17 +3219,16 @@ Lg</string> <newline> 							<reference ref="217654608"/> <newline> 							<reference ref="886068350"/> <newline> 							<reference ref="733677494"/> <newline>-							<reference ref="319078021"/> <newline> 							<reference ref="913832943"/> <newline>-							<reference ref="333355502"/> <newline> 							<reference ref="685290609"/> <newline> 							<reference ref="630848197"/> <newline> 							<reference ref="484273049"/> <newline> 							<reference ref="928184762"/> <newline> 							<reference ref="777041502"/> <newline> 							<reference ref="346222444"/> <newline>+							<reference ref="1054376288"/> <newline> 						</object> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 						<string key="objectName">Under The Hood</string> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline>@@ -3552,20 +3486,6 @@ Lg</string> <newline> 						<reference key="parent" ref="733677494"/> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline>-						<int key="objectID">138</int> <newline>-						<reference key="object" ref="319078021"/> <newline>-						<object class="NSMutableArray" key="children"> <newline>-							<bool key="EncodedWithXMLCoder">YES</bool> <newline>-							<reference ref="789709547"/> <newline>-						</object> <newline>-						<reference key="parent" ref="1016273328"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">139</int> <newline>-						<reference key="object" ref="789709547"/> <newline>-						<reference key="parent" ref="319078021"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline> 						<int key="objectID">140</int> <newline> 						<reference key="object" ref="913832943"/> <newline> 						<object class="NSMutableArray" key="children"> <newline>@@ -3594,50 +3514,6 @@ Lg</string> <newline> 						<reference key="parent" ref="1054376288"/> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline>-						<int key="objectID">144</int> <newline>-						<reference key="object" ref="333355502"/> <newline>-						<object class="NSMutableArray" key="children"> <newline>-							<bool key="EncodedWithXMLCoder">YES</bool> <newline>-							<reference ref="753519282"/> <newline>-						</object> <newline>-						<reference key="parent" ref="1016273328"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">145</int> <newline>-						<reference key="object" ref="753519282"/> <newline>-						<object class="NSMutableArray" key="children"> <newline>-							<bool key="EncodedWithXMLCoder">YES</bool> <newline>-							<reference ref="117498722"/> <newline>-						</object> <newline>-						<reference key="parent" ref="333355502"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">146</int> <newline>-						<reference key="object" ref="117498722"/> <newline>-						<object class="NSMutableArray" key="children"> <newline>-							<bool key="EncodedWithXMLCoder">YES</bool> <newline>-							<reference ref="664774881"/> <newline>-							<reference ref="617012582"/> <newline>-							<reference ref="58256631"/> <newline>-						</object> <newline>-						<reference key="parent" ref="753519282"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">147</int> <newline>-						<reference key="object" ref="664774881"/> <newline>-						<reference key="parent" ref="117498722"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">148</int> <newline>-						<reference key="object" ref="617012582"/> <newline>-						<reference key="parent" ref="117498722"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">149</int> <newline>-						<reference key="object" ref="58256631"/> <newline>-						<reference key="parent" ref="117498722"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline> 						<int key="objectID">150</int> <newline> 						<reference key="object" ref="685290609"/> <newline> 						<object class="NSMutableArray" key="children"> <newline>@@ -3878,7 +3754,7 @@ Lg</string> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">358</int> <newline> 						<reference key="object" ref="775776152"/> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">362</int> <newline>@@ -3909,7 +3785,7 @@ Lg</string> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">380</int> <newline> 						<reference key="object" ref="495015235"/> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 						<string key="objectName">CustomHomePages Array Controller</string> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline>@@ -4003,7 +3879,7 @@ Lg</string> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">449</int> <newline> 						<reference key="object" ref="650617813"/> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">457</int> <newline>@@ -4037,7 +3913,7 @@ Lg</string> <newline> 			</object> <newline> 			<object class="NSMutableDictionary" key="flattenedProperties"> <newline> 				<bool key="EncodedWithXMLCoder">YES</bool> <newline>-				<object class="NSMutableArray" key="dict.sortedKeys"> <newline>+				<object class="NSArray" key="dict.sortedKeys"> <newline> 					<bool key="EncodedWithXMLCoder">YES</bool> <newline> 					<string>-1.IBPluginDependency</string> <newline> 					<string>-2.IBPluginDependency</string> <newline>@@ -4062,19 +3938,10 @@ Lg</string> <newline> 					<string>131.IBPluginDependency</string> <newline> 					<string>136.IBPluginDependency</string> <newline> 					<string>137.IBPluginDependency</string> <newline>-					<string>138.IBPluginDependency</string> <newline>-					<string>139.IBPluginDependency</string> <newline> 					<string>140.IBPluginDependency</string> <newline> 					<string>141.IBPluginDependency</string> <newline> 					<string>142.IBPluginDependency</string> <newline> 					<string>143.IBPluginDependency</string> <newline>-					<string>144.IBPluginDependency</string> <newline>-					<string>145.IBPluginDependency</string> <newline>-					<string>146.IBEditorWindowLastContentRect</string> <newline>-					<string>146.IBPluginDependency</string> <newline>-					<string>147.IBPluginDependency</string> <newline>-					<string>148.IBPluginDependency</string> <newline>-					<string>149.IBPluginDependency</string> <newline> 					<string>150.IBPluginDependency</string> <newline> 					<string>151.IBPluginDependency</string> <newline> 					<string>152.IBEditorWindowLastContentRect</string> <newline>@@ -4227,15 +4094,6 @@ Lg</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>{{772, 130}, {243, 63}}</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>{{764, 606}, {375, 63}}</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>@@ -4259,7 +4117,7 @@ Lg</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>{{784, 543}, {559, 515}}</string> <newline> 					<string>{{784, 543}, {559, 515}}</string> <newline>-					<reference ref="6"/> <newline>+					<boolean value="NO"/> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>@@ -4334,7 +4192,7 @@ Lg</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>{{317, 136}, {466, 720}}</string> <newline>+					<string>{{317, 217}, {466, 639}}</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>@@ -4358,9 +4216,7 @@ Lg</string> <newline> 			</object> <newline> 			<object class="NSMutableDictionary" key="unlocalizedProperties"> <newline> 				<bool key="EncodedWithXMLCoder">YES</bool> <newline>-				<object class="NSArray" key="dict.sortedKeys"> <newline>-					<bool key="EncodedWithXMLCoder">YES</bool> <newline>-				</object> <newline>+				<reference key="dict.sortedKeys" ref="0"/> <newline> 				<object class="NSMutableArray" key="dict.values"> <newline> 					<bool key="EncodedWithXMLCoder">YES</bool> <newline> 				</object> <newline>@@ -4368,9 +4224,7 @@ Lg</string> <newline> 			<nil key="activeLocalization"/> <newline> 			<object class="NSMutableDictionary" key="localizations"> <newline> 				<bool key="EncodedWithXMLCoder">YES</bool> <newline>-				<object class="NSArray" key="dict.sortedKeys"> <newline>-					<bool key="EncodedWithXMLCoder">YES</bool> <newline>-				</object> <newline>+				<reference key="dict.sortedKeys" ref="0"/> <newline> 				<object class="NSMutableArray" key="dict.values"> <newline> 					<bool key="EncodedWithXMLCoder">YES</bool> <newline> 				</object> <newline>@@ -4386,7 +4240,7 @@ Lg</string> <newline> 					<string key="superclassName">NSObject</string> <newline> 					<object class="NSMutableDictionary" key="outlets"> <newline> 						<bool key="EncodedWithXMLCoder">YES</bool> <newline>-						<object class="NSMutableArray" key="dict.sortedKeys"> <newline>+						<object class="NSArray" key="dict.sortedKeys"> <newline> 							<bool key="EncodedWithXMLCoder">YES</bool> <newline> 							<string>otherObjectToLocalize_</string> <newline> 							<string>owner_</string> <newline>@@ -4419,6 +4273,13 @@ Lg</string> <newline> 					</object> <newline> 				</object> <newline> 				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSWindow</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBProjectSource</string> <newline>+						<string key="minorKey">browser/cocoa/nswindow_local_state.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline> 					<string key="className">PreferencesLocalizer</string> <newline> 					<string key="superclassName">GTMUILocalizer</string> <newline> 					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>@@ -4431,7 +4292,7 @@ Lg</string> <newline> 					<string key="superclassName">NSWindowController</string> <newline> 					<object class="NSMutableDictionary" key="actions"> <newline> 						<bool key="EncodedWithXMLCoder">YES</bool> <newline>-						<object class="NSMutableArray" key="dict.sortedKeys"> <newline>+						<object class="NSArray" key="dict.sortedKeys"> <newline> 							<bool key="EncodedWithXMLCoder">YES</bool> <newline> 							<string>addHomepage:</string> <newline> 							<string>clearData:</string> <newline>@@ -4462,7 +4323,7 @@ Lg</string> <newline> 					</object> <newline> 					<object class="NSMutableDictionary" key="outlets"> <newline> 						<bool key="EncodedWithXMLCoder">YES</bool> <newline>-						<object class="NSMutableArray" key="dict.sortedKeys"> <newline>+						<object class="NSArray" key="dict.sortedKeys"> <newline> 							<bool key="EncodedWithXMLCoder">YES</bool> <newline> 							<string>advancedScroller_</string> <newline> 							<string>advancedView_</string> <newline>@@ -4483,8 +4344,630 @@ Lg</string> <newline> 					</object> <newline> 				</object> <newline> 			</object> <newline>+			<object class="NSMutableArray" key="referencedPartialClassDescriptionsV3.2+"> <newline>+				<bool key="EncodedWithXMLCoder">YES</bool> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSActionCell</string> <newline>+					<string key="superclassName">NSCell</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSActionCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSApplication</string> <newline>+					<string key="superclassName">NSResponder</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="326993992"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSApplication.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSApplication</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="208251762"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSApplicationScripting.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSApplication</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="193671119"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSColorPanel.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSApplication</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSHelpManager.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSApplication</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSPageLayout.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSApplication</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSUserInterfaceItemSearching.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSArrayController</string> <newline>+					<string key="superclassName">NSObjectController</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSArrayController.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSButton</string> <newline>+					<string key="superclassName">NSControl</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSButton.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSButtonCell</string> <newline>+					<string key="superclassName">NSActionCell</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSButtonCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSCell</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSControl</string> <newline>+					<string key="superclassName">NSView</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="78713610"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSControl.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSController</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSController.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSFormatter</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSFormatter.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSMatrix</string> <newline>+					<string key="superclassName">NSControl</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSMatrix.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSMenu</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="778162332"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSMenu.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSMenuItem</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="540393616"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSMenuItem.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSMenuItemCell</string> <newline>+					<string key="superclassName">NSButtonCell</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSMenuItemCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSAccessibility.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<reference key="sourceIdentifier" ref="326993992"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<reference key="sourceIdentifier" ref="208251762"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<reference key="sourceIdentifier" ref="193671119"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<reference key="sourceIdentifier" ref="78713610"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSDictionaryController.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSDragging.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSFontManager.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSFontPanel.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSKeyValueBinding.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<reference key="sourceIdentifier" ref="778162332"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSNibLoading.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSOutlineView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSPasteboard.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSSavePanel.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="643463087"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSTableView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSToolbarItem.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="448229358"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSArchiver.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSClassDescription.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSError.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSFileManager.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSKeyValueCoding.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSKeyValueObserving.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSKeyedArchiver.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSObject.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSObjectScripting.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSPortCoder.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSRunLoop.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSScriptClassDescription.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSScriptKeyValueCoding.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSScriptObjectSpecifiers.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSScriptWhoseTests.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSThread.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSURL.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSURLConnection.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSURLDownload.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">QuartzCore.framework/Headers/CAAnimation.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">QuartzCore.framework/Headers/CALayer.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">QuartzCore.framework/Headers/CIImageProvider.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">SecurityInterface.framework/Headers/SFAuthorizationView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">SecurityInterface.framework/Headers/SFCertificatePanel.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">SecurityInterface.framework/Headers/SFChooseIdentityPanel.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObjectController</string> <newline>+					<string key="superclassName">NSController</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSObjectController.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSPathCell</string> <newline>+					<string key="superclassName">NSActionCell</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSPathCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSPathControl</string> <newline>+					<string key="superclassName">NSControl</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSPathControl.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSPopUpButton</string> <newline>+					<string key="superclassName">NSButton</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSPopUpButton.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSPopUpButtonCell</string> <newline>+					<string key="superclassName">NSMenuItemCell</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSPopUpButtonCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSResponder</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSInterfaceStyle.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSResponder</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSResponder.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSScrollView</string> <newline>+					<string key="superclassName">NSView</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSScrollView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSScroller</string> <newline>+					<string key="superclassName">NSControl</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSScroller.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSTabView</string> <newline>+					<string key="superclassName">NSView</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSTabView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSTabViewItem</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSTabViewItem.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSTableColumn</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSTableColumn.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSTableView</string> <newline>+					<string key="superclassName">NSControl</string> <newline>+					<reference key="sourceIdentifier" ref="643463087"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSTextField</string> <newline>+					<string key="superclassName">NSControl</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSTextField.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSTextFieldCell</string> <newline>+					<string key="superclassName">NSActionCell</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSTextFieldCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSUserDefaultsController</string> <newline>+					<string key="superclassName">NSController</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSUserDefaultsController.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSView</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSClipView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSView</string> <newline>+					<reference key="sourceIdentifier" ref="540393616"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSView</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSRulerView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSView</string> <newline>+					<string key="superclassName">NSResponder</string> <newline>+					<reference key="sourceIdentifier" ref="448229358"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSWindow</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSDrawer.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSWindow</string> <newline>+					<string key="superclassName">NSResponder</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSWindow.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSWindow</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSWindowScripting.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSWindowController</string> <newline>+					<string key="superclassName">NSResponder</string> <newline>+					<object class="NSMutableDictionary" key="actions"> <newline>+						<string key="NS.key.0">showWindow:</string> <newline>+						<string key="NS.object.0">id</string> <newline>+					</object> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSWindowController.h</string> <newline>+					</object> <newline>+				</object> <newline>+			</object> <newline> 		</object> <newline> 		<int key="IBDocument.localizationMode">0</int> <newline>+		<object class="NSMutableDictionary" key="IBDocument.PluginDeclaredDependencies"> <newline>+			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin.macosx</string> <newline>+			<integer value="1050" key="NS.object.0"/> <newline>+		</object> <newline>+		<object class="NSMutableDictionary" key="IBDocument.PluginDeclaredDependencyDefaults"> <newline>+			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin.macosx</string> <newline>+			<integer value="1050" key="NS.object.0"/> <newline>+		</object> <newline>+		<object class="NSMutableDictionary" key="IBDocument.PluginDeclaredDevelopmentDependencies"> <newline>+			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin.InterfaceBuilder3</string> <newline>+			<integer value="3000" key="NS.object.0"/> <newline>+		</object> <newline>+		<bool key="IBDocument.PluginDeclaredDependenciesTrackSystemTargetVersion">YES</bool> <newline> 		<string key="IBDocument.LastKnownRelativeProjectPath">../../chrome.xcodeproj</string> <newline> 		<int key="IBDocument.defaultPropertyAccessControl">3</int> <newline> 	</data>
6dd877a2937a0b5ca74de4240117206df36628b	pinkerton@chromium.org <pinkerton@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Sep 21 15:01:54 2009 +0000	Remove the "mixed content" security warnings because "no one in the history of the universe used them". TEST=None	22353		http://codereview.chromium.org/210033	svn://svn.chromium.org/chrome/trunk/src@26680 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/app/nibs/Preferences.xib b/chrome/app/nibs/Preferences.xib <newline>index e0e098c..4d3f2ec 100644 <newline>--- a/chrome/app/nibs/Preferences.xib <newline>+++ b/chrome/app/nibs/Preferences.xib <newline>@@ -1,14 +1,18 @@ <newline> <?xml version="1.0" encoding="UTF-8"?> <newline>-<archive type="com.apple.InterfaceBuilder3.Cocoa.XIB" version="7.03"> <newline>+<archive type="com.apple.InterfaceBuilder3.Cocoa.XIB" version="7.10"> <newline> 	<data> <newline> 		<int key="IBDocument.SystemTarget">1050</int> <newline>-		<string key="IBDocument.SystemVersion">9L30</string> <newline>-		<string key="IBDocument.InterfaceBuilderVersion">677</string> <newline>-		<string key="IBDocument.AppKitVersion">949.54</string> <newline>-		<string key="IBDocument.HIToolboxVersion">353.00</string> <newline>+		<string key="IBDocument.SystemVersion">10A432</string> <newline>+		<string key="IBDocument.InterfaceBuilderVersion">732</string> <newline>+		<string key="IBDocument.AppKitVersion">1038</string> <newline>+		<string key="IBDocument.HIToolboxVersion">437.00</string> <newline>+		<object class="NSMutableDictionary" key="IBDocument.PluginVersions"> <newline>+			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>+			<string key="NS.object.0">732</string> <newline>+		</object> <newline> 		<object class="NSMutableArray" key="IBDocument.EditedObjectIDs"> <newline> 			<bool key="EncodedWithXMLCoder">YES</bool> <newline>-			<integer value="18"/> <newline>+			<integer value="74"/> <newline> 		</object> <newline> 		<object class="NSArray" key="IBDocument.PluginDependencies"> <newline> 			<bool key="EncodedWithXMLCoder">YES</bool> <newline>@@ -16,7 +20,7 @@ <newline> 		</object> <newline> 		<object class="NSMutableDictionary" key="IBDocument.Metadata"> <newline> 			<bool key="EncodedWithXMLCoder">YES</bool> <newline>-			<object class="NSArray" key="dict.sortedKeys"> <newline>+			<object class="NSArray" key="dict.sortedKeys" id="0"> <newline> 				<bool key="EncodedWithXMLCoder">YES</bool> <newline> 			</object> <newline> 			<object class="NSMutableArray" key="dict.values"> <newline>@@ -42,7 +46,7 @@ <newline> 				<string key="NSWindowTitle">Preferences</string> <newline> 				<string key="NSWindowClass">NSWindow</string> <newline> 				<nil key="NSViewClass"/> <newline>-				<string key="NSWindowContentMaxSize">{3.40282e+38, 3.40282e+38}</string> <newline>+				<string key="NSWindowContentMaxSize">{1.79769e+308, 1.79769e+308}</string> <newline> 				<object class="NSView" key="NSWindowView" id="408649839"> <newline> 					<reference key="NSNextResponder"/> <newline> 					<int key="NSvFlags">256</int> <newline>@@ -53,6 +57,7 @@ <newline> 							<int key="NSvFlags">36</int> <newline> 							<string key="NSFrame">{{13, 10}, {533, 499}}</string> <newline> 							<reference key="NSSuperview" ref="408649839"/> <newline>+							<reference key="NSWindow"/> <newline> 							<object class="NSMutableArray" key="NSTabViewItems"> <newline> 								<bool key="EncodedWithXMLCoder">YES</bool> <newline> 								<object class="NSTabViewItem" id="1024664267"> <newline>@@ -74,7 +79,7 @@ <newline> 													<string key="NSContents">Use Current</string> <newline> 													<object class="NSFont" key="NSSupport" id="445696277"> <newline> 														<string key="NSName">LucidaGrande</string> <newline>-														<double key="NSSize">1.300000e+01</double> <newline>+														<double key="NSSize">13</double> <newline> 														<int key="NSfFlags">1044</int> <newline> 													</object> <newline> 													<reference key="NSControlView" ref="810089388"/> <newline>@@ -146,7 +151,7 @@ <newline> 													<string key="NSContents">Toolbar:</string> <newline> 													<object class="NSFont" key="NSSupport" id="290273273"> <newline> 														<string key="NSName">LucidaGrande-Bold</string> <newline>-														<double key="NSSize">1.300000e+01</double> <newline>+														<double key="NSSize">13</double> <newline> 														<int key="NSfFlags">16</int> <newline> 													</object> <newline> 													<reference key="NSControlView" ref="881113898"/> <newline>@@ -156,7 +161,7 @@ <newline> 														<string key="NSColorName">controlColor</string> <newline> 														<object class="NSColor" key="NSColor" id="854057974"> <newline> 															<int key="NSColorSpace">3</int> <newline>-															<bytes key="NSWhite">MC42NjY2NjY2OQA</bytes> <newline>+															<bytes key="NSWhite">MC42NjY2NjY2NjY3AA</bytes> <newline> 														</object> <newline> 													</object> <newline> 													<object class="NSColor" key="NSTextColor" id="748094473"> <newline>@@ -244,8 +249,8 @@ <newline> 														<int key="NSCellFlags2">0</int> <newline> 														<string key="NSContents">Restore the pages that were open last</string> <newline> 														<reference key="NSSupport" ref="445696277"/> <newline>-														<int key="NSTag">1</int> <newline> 														<reference key="NSControlView" ref="1016627403"/> <newline>+														<int key="NSTag">1</int> <newline> 														<int key="NSButtonFlags">1211912703</int> <newline> 														<int key="NSButtonFlags2">128</int> <newline> 														<object class="NSImage" key="NSNormalImage"> <newline>@@ -255,7 +260,7 @@ <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline> 																<object class="NSArray"> <newline> 																	<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																	<integer value="0" id="8"/> <newline>+																	<integer value="0"/> <newline> 																	<object class="NSBitmapImageRep"> <newline> 																		<object class="NSData" key="NSTIFFRepresentation"> <newline> 																			<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -281,7 +286,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFxgEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFzodzAAcAAAwYAAAF1gAAAAAACAAIAAgACAABAAEAAQABAAAMGGFw <newline> cGwCAAAAbW50clJHQiBYWVogB9YABAADABMALAASYWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline>@@ -353,8 +358,8 @@ QXBwbGUgQ29tcHV0ZXIsIEluYy4sIDIwMDUAAAAAA</bytes> <newline> 														<int key="NSCellFlags2">0</int> <newline> 														<string key="NSContents">Open the following pages:</string> <newline> 														<reference key="NSSupport" ref="445696277"/> <newline>-														<int key="NSTag">2</int> <newline> 														<reference key="NSControlView" ref="1016627403"/> <newline>+														<int key="NSTag">2</int> <newline> 														<int key="NSButtonFlags">1211912703</int> <newline> 														<int key="NSButtonFlags2">128</int> <newline> 														<object class="NSImage" key="NSNormalImage"> <newline>@@ -364,7 +369,7 @@ QXBwbGUgQ29tcHV0ZXIsIEluYy4sIDIwMDUAAAAAA</bytes> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline> 																<object class="NSArray"> <newline> 																	<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																	<reference ref="8"/> <newline>+																	<integer value="0"/> <newline> 																	<object class="NSBitmapImageRep"> <newline> 																		<object class="NSData" key="NSTIFFRepresentation"> <newline> 																			<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -390,7 +395,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFxgEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFzodzAAcAABEcAAAF1gAAAAAACAAIAAgACAABAAEAAQABAAARHGFw <newline> cGwCAAAAbW50clJHQiBYWVogB9kAAgADABEABQAfYWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAPbWAAEAAAAA0y1hcHBsTYFxS94VjCFH/cYlpD4aTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline>@@ -494,7 +499,7 @@ rwAAAAAAAAAAAAAAAAAAAAAAdGV4dAAAAABDb3B5cmlnaHQgQXBwbGUsIEluYy4sIDIwMDkAA</bytes <newline> 															<bool key="EncodedWithXMLCoder">YES</bool> <newline> 															<object class="NSArray"> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																<reference ref="8"/> <newline>+																<integer value="0"/> <newline> 																<object class="NSBitmapImageRep"> <newline> 																	<object class="NSData" key="NSTIFFRepresentation"> <newline> 																		<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -520,7 +525,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFugEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																	</object> <newline> 																</object> <newline>@@ -607,8 +612,8 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSCellFlags2">0</int> <newline> 														<string key="NSContents">Open this page:</string> <newline> 														<reference key="NSSupport" ref="445696277"/> <newline>-														<int key="NSTag">1</int> <newline> 														<reference key="NSControlView" ref="743261621"/> <newline>+														<int key="NSTag">1</int> <newline> 														<int key="NSButtonFlags">1211912703</int> <newline> 														<int key="NSButtonFlags2">128</int> <newline> 														<object class="NSImage" key="NSNormalImage"> <newline>@@ -618,7 +623,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline> 																<object class="NSArray"> <newline> 																	<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																	<reference ref="8"/> <newline>+																	<integer value="0"/> <newline> 																	<object class="NSBitmapImageRep"> <newline> 																		<object class="NSData" key="NSTIFFRepresentation"> <newline> 																			<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -644,7 +649,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFxgEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFzodzAAcAAAwYAAAF1gAAAAAACAAIAAgACAABAAEAAQABAAAMGGFw <newline> cGwCAAAAbW50clJHQiBYWVogB9YABAADABMALAASYWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline>@@ -727,7 +732,7 @@ QXBwbGUgQ29tcHV0ZXIsIEluYy4sIDIwMDUAAAAAA</bytes> <newline> 															<bool key="EncodedWithXMLCoder">YES</bool> <newline> 															<object class="NSArray"> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																<reference ref="8"/> <newline>+																<integer value="0"/> <newline> 																<object class="NSBitmapImageRep"> <newline> 																	<object class="NSData" key="NSTIFFRepresentation"> <newline> 																		<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -753,7 +758,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFugEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																	</object> <newline> 																</object> <newline>@@ -874,16 +879,16 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																<object class="NSMutableArray" key="NSTableColumns"> <newline> 																	<bool key="EncodedWithXMLCoder">YES</bool> <newline> 																	<object class="NSTableColumn" id="1005813658"> <newline>-																		<double key="NSWidth">2.790000e+02</double> <newline>-																		<double key="NSMinWidth">4.000000e+01</double> <newline>-																		<double key="NSMaxWidth">1.000000e+03</double> <newline>+																		<double key="NSWidth">279</double> <newline>+																		<double key="NSMinWidth">40</double> <newline>+																		<double key="NSMaxWidth">1000</double> <newline> 																		<object class="NSTableHeaderCell" key="NSHeaderCell"> <newline> 																			<int key="NSCellFlags">75628096</int> <newline> 																			<int key="NSCellFlags2">2048</int> <newline> 																			<string key="NSContents"/> <newline> 																			<object class="NSFont" key="NSSupport" id="26"> <newline> 																				<string key="NSName">LucidaGrande</string> <newline>-																				<double key="NSSize">1.100000e+01</double> <newline>+																				<double key="NSSize">11</double> <newline> 																				<int key="NSfFlags">3100</int> <newline> 																			</object> <newline> 																			<object class="NSColor" key="NSBackgroundColor"> <newline>@@ -917,8 +922,8 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																		<reference key="NSTableView" ref="165250101"/> <newline> 																	</object> <newline> 																</object> <newline>-																<double key="NSIntercellSpacingWidth">3.000000e+00</double> <newline>-																<double key="NSIntercellSpacingHeight">2.000000e+00</double> <newline>+																<double key="NSIntercellSpacingWidth">3</double> <newline>+																<double key="NSIntercellSpacingHeight">2</double> <newline> 																<reference key="NSBackgroundColor" ref="571857138"/> <newline> 																<object class="NSColor" key="NSGridColor"> <newline> 																	<int key="NSColorSpace">6</int> <newline>@@ -929,12 +934,15 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																		<bytes key="NSWhite">MC41AA</bytes> <newline> 																	</object> <newline> 																</object> <newline>-																<double key="NSRowHeight">1.700000e+01</double> <newline>+																<double key="NSRowHeight">17</double> <newline> 																<int key="NSTvFlags">-901775360</int> <newline>+																<reference key="NSDelegate"/> <newline>+																<reference key="NSDataSource"/> <newline> 																<int key="NSColumnAutoresizingStyle">4</int> <newline> 																<int key="NSDraggingSourceMaskForLocal">15</int> <newline> 																<int key="NSDraggingSourceMaskForNonLocal">0</int> <newline> 																<bool key="NSAllowsTypeSelect">YES</bool> <newline>+																<int key="NSTableViewDraggingDestinationStyle">0</int> <newline> 															</object> <newline> 														</object> <newline> 														<string key="NSFrame">{{1, 1}, {282, 63}}</string> <newline>@@ -952,7 +960,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSsFlags">256</int> <newline> 														<reference key="NSTarget" ref="54854923"/> <newline> 														<string key="NSAction">_doScroller:</string> <newline>-														<double key="NSPercent">9.868421e-01</double> <newline>+														<double key="NSPercent">0.98684210000000006</double> <newline> 													</object> <newline> 													<object class="NSScroller" id="757862790"> <newline> 														<reference key="NSNextResponder" ref="54854923"/> <newline>@@ -962,7 +970,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSsFlags">1</int> <newline> 														<reference key="NSTarget" ref="54854923"/> <newline> 														<string key="NSAction">_doScroller:</string> <newline>-														<double key="NSPercent">5.714286e-01</double> <newline>+														<double key="NSPercent">0.57142859999999995</double> <newline> 													</object> <newline> 												</object> <newline> 												<string key="NSFrame">{{171, 302}, {284, 65}}</string> <newline>@@ -990,7 +998,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 													<int key="NSButtonFlags2">129</int> <newline> 													<object class="NSFont" key="NSAlternateImage" id="497093453"> <newline> 														<string key="NSName">LucidaGrande</string> <newline>-														<double key="NSSize">1.300000e+01</double> <newline>+														<double key="NSSize">13</double> <newline> 														<int key="NSfFlags">16</int> <newline> 													</object> <newline> 													<string key="NSAlternateContents"/> <newline>@@ -1011,7 +1019,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 													<string key="NSContents">Chromium is not the default browser.</string> <newline> 													<object class="NSFont" key="NSSupport" id="783256529"> <newline> 														<string key="NSName">LucidaGrande</string> <newline>-														<double key="NSSize">1.100000e+01</double> <newline>+														<double key="NSSize">11</double> <newline> 														<int key="NSfFlags">16</int> <newline> 													</object> <newline> 													<reference key="NSControlView" ref="402804707"/> <newline>@@ -1090,6 +1098,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{22, 419}, {138, 17}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSTextFieldCell" key="NSCell" id="218087448"> <newline> 													<int key="NSCellFlags">68288064</int> <newline>@@ -1106,6 +1115,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{171, 396}, {300, 40}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<int key="NSNumRows">2</int> <newline> 												<int key="NSNumCols">1</int> <newline>@@ -1116,8 +1126,8 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSCellFlags2">0</int> <newline> 														<string key="NSContents">Offer to save passwords</string> <newline> 														<reference key="NSSupport" ref="445696277"/> <newline>-														<int key="NSTag">1</int> <newline> 														<reference key="NSControlView" ref="1019357609"/> <newline>+														<int key="NSTag">1</int> <newline> 														<int key="NSButtonFlags">1211912703</int> <newline> 														<int key="NSButtonFlags2">128</int> <newline> 														<reference key="NSAlternateImage" ref="1028460734"/> <newline>@@ -1141,7 +1151,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline> 																<object class="NSArray"> <newline> 																	<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																	<reference ref="8"/> <newline>+																	<integer value="0"/> <newline> 																	<object class="NSBitmapImageRep"> <newline> 																		<object class="NSData" key="NSTIFFRepresentation"> <newline> 																			<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -1167,7 +1177,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFxgEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFzodzAAcAAAwYAAAF1gAAAAAACAAIAAgACAABAAEAAQABAAAMGGFw <newline> cGwCAAAAbW50clJHQiBYWVogB9YABAADABMALAASYWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline>@@ -1250,7 +1260,7 @@ QXBwbGUgQ29tcHV0ZXIsIEluYy4sIDIwMDUAAAAAA</bytes> <newline> 															<bool key="EncodedWithXMLCoder">YES</bool> <newline> 															<object class="NSArray"> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																<reference ref="8"/> <newline>+																<integer value="0"/> <newline> 																<object class="NSBitmapImageRep"> <newline> 																	<object class="NSData" key="NSTIFFRepresentation"> <newline> 																		<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -1276,7 +1286,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFugEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																	</object> <newline> 																</object> <newline>@@ -1298,6 +1308,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{165, 354}, {184, 32}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSButtonCell" key="NSCell" id="745829249"> <newline> 													<int key="NSCellFlags">67239424</int> <newline>@@ -1318,6 +1329,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{22, 125}, {139, 17}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSTextFieldCell" key="NSCell" id="1066495099"> <newline> 													<int key="NSCellFlags">68288064</int> <newline>@@ -1334,6 +1346,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{22, 317}, {138, 17}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSTextFieldCell" key="NSCell" id="677476881"> <newline> 													<int key="NSCellFlags">68288064</int> <newline>@@ -1350,6 +1363,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{22, 246}, {138, 17}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSTextFieldCell" key="NSCell" id="340834043"> <newline> 													<int key="NSCellFlags">68288064</int> <newline>@@ -1366,6 +1380,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{168, 173}, {331, 30}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSTextFieldCell" key="NSCell" id="1066779324"> <newline> 													<int key="NSCellFlags">67239424</int> <newline>@@ -1382,11 +1397,12 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{165, 235}, {153, 32}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSButtonCell" key="NSCell" id="325720834"> <newline> 													<int key="NSCellFlags">604110336</int> <newline> 													<int key="NSCellFlags2">134217728</int> <newline>-													<string type="base64-UTF8" key="NSContents">SW1wb3J0IERhdGHigKY</string> <newline>+													<string key="NSContents">Import Data…</string> <newline> 													<reference key="NSSupport" ref="445696277"/> <newline> 													<reference key="NSControlView" ref="885386403"/> <newline> 													<int key="NSButtonFlags">-2038284033</int> <newline>@@ -1402,11 +1418,12 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{165, 203}, {180, 32}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSButtonCell" key="NSCell" id="551321318"> <newline> 													<int key="NSCellFlags">67239424</int> <newline> 													<int key="NSCellFlags2">134217728</int> <newline>-													<string type="base64-UTF8" key="NSContents">Q2xlYXIgQnJvd3NpbmcgRGF0YeKApg</string> <newline>+													<string key="NSContents">Clear Browsing Data…</string> <newline> 													<reference key="NSSupport" ref="445696277"/> <newline> 													<reference key="NSControlView" ref="987908490"/> <newline> 													<int key="NSButtonFlags">-2038284033</int> <newline>@@ -1422,6 +1439,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{171, 294}, {300, 40}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<int key="NSNumRows">2</int> <newline> 												<int key="NSNumCols">1</int> <newline>@@ -1432,8 +1450,8 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSCellFlags2">0</int> <newline> 														<string key="NSContents">Save text from forms on web pages</string> <newline> 														<reference key="NSSupport" ref="445696277"/> <newline>-														<int key="NSTag">1</int> <newline> 														<reference key="NSControlView" ref="854747859"/> <newline>+														<int key="NSTag">1</int> <newline> 														<int key="NSButtonFlags">1211912703</int> <newline> 														<int key="NSButtonFlags2">128</int> <newline> 														<reference key="NSAlternateImage" ref="1028460734"/> <newline>@@ -1457,7 +1475,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline> 																<object class="NSArray"> <newline> 																	<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																	<reference ref="8"/> <newline>+																	<integer value="0"/> <newline> 																	<object class="NSBitmapImageRep"> <newline> 																		<object class="NSData" key="NSTIFFRepresentation"> <newline> 																			<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -1483,7 +1501,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFxgEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFzodzAAcAAAwYAAAF1gAAAAAACAAIAAgACAABAAEAAQABAAAMGGFw <newline> cGwCAAAAbW50clJHQiBYWVogB9YABAADABMALAASYWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline>@@ -1566,7 +1584,7 @@ QXBwbGUgQ29tcHV0ZXIsIEluYy4sIDIwMDUAAAAAA</bytes> <newline> 															<bool key="EncodedWithXMLCoder">YES</bool> <newline> 															<object class="NSArray"> <newline> 																<bool key="EncodedWithXMLCoder">YES</bool> <newline>-																<reference ref="8"/> <newline>+																<integer value="0"/> <newline> 																<object class="NSBitmapImageRep"> <newline> 																	<object class="NSData" key="NSTIFFRepresentation"> <newline> 																		<bytes key="NS.bytes">TU0AKgAABRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAA <newline>@@ -1592,7 +1610,7 @@ AAAAFwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAoAAAAXAAAAJAAAAC4AAAAu <newline> AAAAJAAAABcAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA <newline> AAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQEAAAMAAAABABIAAAEB <newline> AAMAAAABABIAAAECAAMAAAAEAAAFugEDAAMAAAABAAEAAAEGAAMAAAABAAIAAAERAAQAAAABAAAACAES <newline>-AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABBxwAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline>+AAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABABIAAAEXAAQAAAABAAAFEAEcAAMAAAABAAEAAAFS <newline> AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 																	</object> <newline> 																</object> <newline>@@ -1614,11 +1632,12 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{165, 83}, {129, 32}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSButtonCell" key="NSCell" id="309945174"> <newline> 													<int key="NSCellFlags">67239424</int> <newline> 													<int key="NSCellFlags2">134217728</int> <newline>-													<string type="base64-UTF8" key="NSContents">R2V0IFRoZW1lc+KApg</string> <newline>+													<string key="NSContents">Get Themes…</string> <newline> 													<reference key="NSSupport" ref="445696277"/> <newline> 													<reference key="NSControlView" ref="423027085"/> <newline> 													<int key="NSButtonFlags">-2038284033</int> <newline>@@ -1634,6 +1653,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 												<int key="NSvFlags">268</int> <newline> 												<string key="NSFrame">{{165, 115}, {183, 32}}</string> <newline> 												<reference key="NSSuperview" ref="712581699"/> <newline>+												<reference key="NSWindow"/> <newline> 												<bool key="NSEnabled">YES</bool> <newline> 												<object class="NSButtonCell" key="NSCell" id="270492768"> <newline> 													<int key="NSCellFlags">67239424</int> <newline>@@ -1652,6 +1672,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 										</object> <newline> 										<string key="NSFrame">{{10, 33}, {513, 453}}</string> <newline> 										<reference key="NSSuperview" ref="838559838"/> <newline>+										<reference key="NSWindow"/> <newline> 									</object> <newline> 									<string key="NSLabel">Personal Stuff</string> <newline> 									<reference key="NSColor" ref="592613688"/> <newline>@@ -1697,8 +1718,8 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSsFlags">256</int> <newline> 														<reference key="NSTarget" ref="14278481"/> <newline> 														<string key="NSAction">_doScroller:</string> <newline>-														<double key="NSCurValue">1.000000e+00</double> <newline>-														<double key="NSPercent">9.636363e-01</double> <newline>+														<double key="NSCurValue">1</double> <newline>+														<double key="NSPercent">0.9636363</double> <newline> 													</object> <newline> 													<object class="NSScroller" id="470087648"> <newline> 														<reference key="NSNextResponder" ref="14278481"/> <newline>@@ -1708,7 +1729,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 														<int key="NSsFlags">1</int> <newline> 														<reference key="NSTarget" ref="14278481"/> <newline> 														<string key="NSAction">_doScroller:</string> <newline>-														<double key="NSPercent">5.060241e-01</double> <newline>+														<double key="NSPercent">0.50602409999999998</double> <newline> 													</object> <newline> 												</object> <newline> 												<string key="NSFrame">{{17, 64}, {479, 386}}</string> <newline>@@ -1760,19 +1781,20 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 					</object> <newline> 					<string key="NSFrameSize">{559, 515}</string> <newline> 					<reference key="NSSuperview"/> <newline>+					<reference key="NSWindow"/> <newline> 				</object> <newline> 				<string key="NSScreenRect">{{0, 0}, {1440, 878}}</string> <newline>-				<string key="NSMaxSize">{3.40282e+38, 3.40282e+38}</string> <newline>+				<string key="NSMaxSize">{1.79769e+308, 1.79769e+308}</string> <newline> 			</object> <newline> 			<object class="NSCustomView" id="1016273328"> <newline>-				<nil key="NSNextResponder"/> <newline>+				<reference key="NSNextResponder"/> <newline> 				<int key="NSvFlags">268</int> <newline> 				<object class="NSMutableArray" key="NSSubviews"> <newline> 					<bool key="EncodedWithXMLCoder">YES</bool> <newline> 					<object class="NSTextField" id="1032231978"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{17, 683}, {146, 17}}</string> <newline>+						<string key="NSFrame">{{17, 602}, {146, 17}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="710610494"> <newline>@@ -1789,7 +1811,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 					<object class="NSTextField" id="287656702"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{17, 268}, {146, 17}}</string> <newline>+						<string key="NSFrame">{{17, 187}, {146, 17}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="237538019"> <newline>@@ -1805,15 +1827,13 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA</bytes> <newline> 					<object class="NSTextField" id="412658410"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{43, 293}, {421, 59}}</string> <newline>+						<string key="NSFrame">{{43, 212}, {421, 59}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="786981193"> <newline> 							<int key="NSCellFlags">67239424</int> <newline> 							<int key="NSCellFlags2">272629760</int> <newline>-							<string type="base64-UTF8" key="NSContents">SWYgeW91IGhhdmUgY2hvc2VuIHRvIG9wZW4gY2VydGFpbiBmaWxlIHR5cGVzIGF1dG9tYXRpY2FsbHkg <newline>-YWZ0ZXIgZG93bmxvYWRpbmcsIHlvdSBjYW4gY2xlYXIgdGhlc2Ugc2V0dGluZ3Mgc28gdGhhdCBkb3du <newline>-bG9hZGVkIGZpbGVzIGRvbid0IG9wZW4gYXV0b21hdGljYWxseS4</string> <newline>+							<string key="NSContents">If you have chosen to open certain file types automatically after downloading, you can clear these settings so that downloaded files don't open automatically.</string> <newline> 							<reference key="NSSupport" ref="497093453"/> <newline> 							<reference key="NSControlView" ref="412658410"/> <newline> 							<reference key="NSBackgroundColor" ref="592613688"/> <newline>@@ -1823,15 +1843,13 @@ bG9hZGVkIGZpbGVzIGRvbid0IG9wZW4gYXV0b21hdGljYWxseS4</string> <newline> 					<object class="NSTextField" id="1043699198"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{25, 640}, {441, 40}}</string> <newline>+						<string key="NSFrame">{{25, 559}, {441, 40}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="494850700"> <newline> 							<int key="NSCellFlags">67239424</int> <newline> 							<int key="NSCellFlags2">272629760</int> <newline>-							<string type="base64-UTF8" key="NSContents">VGhlIGZvbGxvd2luZyB3ZWIgc2VydmljZXMgbWF5IGJlIHVzZWQgdG8gaW1wcm92ZSB5b3VyIGJyb3dz <newline>-aW5nIGV4cGVyaWVuY2Ug4oCUIHlvdSBtYXkgb3B0aW9uYWxseSBkaXNhYmxlIHRoZXNlIHNlcnZpY2Vz <newline>-Lg</string> <newline>+							<string key="NSContents">The following web services may be used to improve your browsing experience — you may optionally disable these services.</string> <newline> 							<reference key="NSSupport" ref="497093453"/> <newline> 							<reference key="NSControlView" ref="1043699198"/> <newline> 							<reference key="NSBackgroundColor" ref="592613688"/> <newline>@@ -1841,7 +1859,7 @@ Lg</string> <newline> 					<object class="NSButton" id="348105916"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{22, 352}, {220, 32}}</string> <newline>+						<string key="NSFrame">{{22, 271}, {220, 32}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="1018797611"> <newline>@@ -1861,7 +1879,7 @@ Lg</string> <newline> 					<object class="NSButton" id="480577047"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{26, 616}, {437, 18}}</string> <newline>+						<string key="NSFrame">{{26, 535}, {437, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="298042898"> <newline>@@ -1883,7 +1901,7 @@ Lg</string> <newline> 					<object class="NSButton" id="808321623"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{26, 596}, {439, 18}}</string> <newline>+						<string key="NSFrame">{{26, 515}, {439, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="874031585"> <newline>@@ -1905,7 +1923,7 @@ Lg</string> <newline> 					<object class="NSButton" id="139965100"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{26, 576}, {428, 18}}</string> <newline>+						<string key="NSFrame">{{26, 495}, {428, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="647261577"> <newline>@@ -1927,7 +1945,7 @@ Lg</string> <newline> 					<object class="NSButton" id="514356928"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{56, 127}, {174, 32}}</string> <newline>+						<string key="NSFrame">{{56, 46}, {174, 32}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="821186353"> <newline>@@ -1947,7 +1965,7 @@ Lg</string> <newline> 					<object class="NSTextField" id="860741341"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{17, 191}, {146, 17}}</string> <newline>+						<string key="NSFrame">{{17, 110}, {146, 17}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="240354523"> <newline>@@ -1963,7 +1981,7 @@ Lg</string> <newline> 					<object class="NSButton" id="217654608"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{26, 556}, {428, 18}}</string> <newline>+						<string key="NSFrame">{{26, 475}, {428, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="935362863"> <newline>@@ -1985,7 +2003,7 @@ Lg</string> <newline> 					<object class="NSTextField" id="886068350"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{29, 166}, {193, 17}}</string> <newline>+						<string key="NSFrame">{{29, 85}, {193, 17}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="550006091"> <newline>@@ -2001,7 +2019,7 @@ Lg</string> <newline> 					<object class="NSButton" id="733677494"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{30, 99}, {276, 18}}</string> <newline>+						<string key="NSFrame">{{30, 18}, {276, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="694359929"> <newline>@@ -2020,26 +2038,10 @@ Lg</string> <newline> 							<int key="NSPeriodicInterval">25</int> <newline> 						</object> <newline> 					</object> <newline>-					<object class="NSTextField" id="319078021"> <newline>-						<reference key="NSNextResponder" ref="1016273328"/> <newline>-						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{29, 76}, {330, 17}}</string> <newline>-						<reference key="NSSuperview" ref="1016273328"/> <newline>-						<bool key="NSEnabled">YES</bool> <newline>-						<object class="NSTextFieldCell" key="NSCell" id="789709547"> <newline>-							<int key="NSCellFlags">68288064</int> <newline>-							<int key="NSCellFlags2">272630784</int> <newline>-							<string key="NSContents">When there is mixed content on secure (SSL) pages:</string> <newline>-							<reference key="NSSupport" ref="445696277"/> <newline>-							<reference key="NSControlView" ref="319078021"/> <newline>-							<reference key="NSBackgroundColor" ref="592613688"/> <newline>-							<reference key="NSTextColor" ref="748094473"/> <newline>-						</object> <newline>-					</object> <newline> 					<object class="NSTextField" id="913832943"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{25, 513}, {193, 17}}</string> <newline>+						<string key="NSFrame">{{25, 432}, {193, 17}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="589077222"> <newline>@@ -2055,13 +2057,13 @@ Lg</string> <newline> 					<object class="NSButton" id="1054376288"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{307, 465}, {151, 32}}</string> <newline>+						<string key="NSFrame">{{307, 396}, {151, 32}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="441531293"> <newline> 							<int key="NSCellFlags">604110336</int> <newline> 							<int key="NSCellFlags2">134217728</int> <newline>-							<string type="base64-UTF8" key="NSContents">U2hvdyBDb29raWVz4oCmA</string> <newline>+							<string key="NSContents">Show Cookies…</string> <newline> 							<reference key="NSSupport" ref="445696277"/> <newline> 							<reference key="NSControlView" ref="1054376288"/> <newline> 							<int key="NSButtonFlags">-2038284033</int> <newline>@@ -2072,75 +2074,10 @@ Lg</string> <newline> 							<int key="NSPeriodicInterval">25</int> <newline> 						</object> <newline> 					</object> <newline>-					<object class="NSPopUpButton" id="333355502"> <newline>-						<reference key="NSNextResponder" ref="1016273328"/> <newline>-						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{53, 44}, {237, 26}}</string> <newline>-						<reference key="NSSuperview" ref="1016273328"/> <newline>-						<bool key="NSEnabled">YES</bool> <newline>-						<object class="NSPopUpButtonCell" key="NSCell" id="753519282"> <newline>-							<int key="NSCellFlags">-1539178944</int> <newline>-							<int key="NSCellFlags2">2048</int> <newline>-							<reference key="NSSupport" ref="445696277"/> <newline>-							<reference key="NSControlView" ref="333355502"/> <newline>-							<int key="NSButtonFlags">109199615</int> <newline>-							<int key="NSButtonFlags2">129</int> <newline>-							<string key="NSAlternateContents"/> <newline>-							<string key="NSKeyEquivalent"/> <newline>-							<int key="NSPeriodicDelay">400</int> <newline>-							<int key="NSPeriodicInterval">75</int> <newline>-							<object class="NSMenuItem" key="NSMenuItem" id="664774881"> <newline>-								<reference key="NSMenu" ref="117498722"/> <newline>-								<string key="NSTitle">Allow all content to load</string> <newline>-								<string key="NSKeyEquiv"/> <newline>-								<int key="NSKeyEquivModMask">1048576</int> <newline>-								<int key="NSMnemonicLoc">2147483647</int> <newline>-								<int key="NSState">1</int> <newline>-								<reference key="NSOnImage" ref="312983820"/> <newline>-								<reference key="NSMixedImage" ref="533879330"/> <newline>-								<string key="NSAction">_popUpItemAction:</string> <newline>-								<reference key="NSTarget" ref="753519282"/> <newline>-							</object> <newline>-							<bool key="NSMenuItemRespectAlignment">YES</bool> <newline>-							<object class="NSMenu" key="NSMenu" id="117498722"> <newline>-								<string key="NSTitle">OtherViews</string> <newline>-								<object class="NSMutableArray" key="NSMenuItems"> <newline>-									<bool key="EncodedWithXMLCoder">YES</bool> <newline>-									<reference ref="664774881"/> <newline>-									<object class="NSMenuItem" id="617012582"> <newline>-										<reference key="NSMenu" ref="117498722"/> <newline>-										<string key="NSTitle">Allow insecure images</string> <newline>-										<string key="NSKeyEquiv"/> <newline>-										<int key="NSKeyEquivModMask">1048576</int> <newline>-										<int key="NSMnemonicLoc">2147483647</int> <newline>-										<reference key="NSOnImage" ref="312983820"/> <newline>-										<reference key="NSMixedImage" ref="533879330"/> <newline>-										<string key="NSAction">_popUpItemAction:</string> <newline>-										<reference key="NSTarget" ref="753519282"/> <newline>-									</object> <newline>-									<object class="NSMenuItem" id="58256631"> <newline>-										<reference key="NSMenu" ref="117498722"/> <newline>-										<string key="NSTitle">Block all insecure content</string> <newline>-										<string key="NSKeyEquiv"/> <newline>-										<int key="NSKeyEquivModMask">1048576</int> <newline>-										<int key="NSMnemonicLoc">2147483647</int> <newline>-										<reference key="NSOnImage" ref="312983820"/> <newline>-										<reference key="NSMixedImage" ref="533879330"/> <newline>-										<string key="NSAction">_popUpItemAction:</string> <newline>-										<reference key="NSTarget" ref="753519282"/> <newline>-									</object> <newline>-								</object> <newline>-							</object> <newline>-							<int key="NSPreferredEdge">1</int> <newline>-							<bool key="NSUsesItemFromMenu">YES</bool> <newline>-							<bool key="NSAltersState">YES</bool> <newline>-							<int key="NSArrowPosition">2</int> <newline>-						</object> <newline>-					</object> <newline> 					<object class="NSPopUpButton" id="685290609"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{55, 481}, {237, 26}}</string> <newline>+						<string key="NSFrame">{{55, 400}, {237, 26}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSPopUpButtonCell" key="NSCell" id="583724370"> <newline>@@ -2205,7 +2142,7 @@ Lg</string> <newline> 					<object class="NSTextField" id="630848197"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{17, 448}, {146, 17}}</string> <newline>+						<string key="NSFrame">{{17, 367}, {146, 17}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSTextFieldCell" key="NSCell" id="660352048"> <newline>@@ -2224,13 +2161,13 @@ Lg</string> <newline> 						<int key="NSvFlags">268</int> <newline> 						<object class="NSMutableSet" key="NSDragTypes"> <newline> 							<bool key="EncodedWithXMLCoder">YES</bool> <newline>-							<object class="NSMutableArray" key="set.sortedObjects"> <newline>+							<object class="NSArray" key="set.sortedObjects"> <newline> 								<bool key="EncodedWithXMLCoder">YES</bool> <newline> 								<string>Apple URL pasteboard type</string> <newline> 								<string>NSFilenamesPboardType</string> <newline> 							</object> <newline> 						</object> <newline>-						<string key="NSFrame">{{20, 414}, {179, 26}}</string> <newline>+						<string key="NSFrame">{{20, 333}, {179, 26}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSPathCell" key="NSCell" id="25958950"> <newline>@@ -2248,7 +2185,7 @@ Lg</string> <newline> 					<object class="NSButton" id="928184762"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{32, 390}, {323, 18}}</string> <newline>+						<string key="NSFrame">{{32, 309}, {323, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="731161158"> <newline>@@ -2270,13 +2207,13 @@ Lg</string> <newline> 					<object class="NSButton" id="777041502"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{22, 220}, {275, 32}}</string> <newline>+						<string key="NSFrame">{{22, 139}, {275, 32}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="526979400"> <newline> 							<int key="NSCellFlags">604110336</int> <newline> 							<int key="NSCellFlags2">134217728</int> <newline>-							<string type="base64-UTF8" key="NSContents">Q2hhbmdlIEZvbnQgYW5kIExhbmd1YWdlIFNldHRpbmdz4oCmA</string> <newline>+							<string key="NSContents">Change Font and Language Settings…</string> <newline> 							<reference key="NSSupport" ref="445696277"/> <newline> 							<reference key="NSControlView" ref="777041502"/> <newline> 							<int key="NSButtonFlags">-2038284033</int> <newline>@@ -2290,7 +2227,7 @@ Lg</string> <newline> 					<object class="NSButton" id="346222444"> <newline> 						<reference key="NSNextResponder" ref="1016273328"/> <newline> 						<int key="NSvFlags">268</int> <newline>-						<string key="NSFrame">{{26, 536}, {428, 18}}</string> <newline>+						<string key="NSFrame">{{26, 455}, {428, 18}}</string> <newline> 						<reference key="NSSuperview" ref="1016273328"/> <newline> 						<bool key="NSEnabled">YES</bool> <newline> 						<object class="NSButtonCell" key="NSCell" id="209704674"> <newline>@@ -2310,7 +2247,8 @@ Lg</string> <newline> 						</object> <newline> 					</object> <newline> 				</object> <newline>-				<string key="NSFrameSize">{466, 720}</string> <newline>+				<string key="NSFrameSize">{466, 639}</string> <newline>+				<reference key="NSSuperview"/> <newline> 				<string key="NSClassName">NSView</string> <newline> 			</object> <newline> 			<object class="NSCustomObject" id="775776152"> <newline>@@ -2539,7 +2477,7 @@ Lg</string> <newline> 							<string key="NSKeyPath">defaultBrowserText</string> <newline> 							<object class="NSDictionary" key="NSOptions"> <newline> 								<string key="NS.key.0">NSAllowsEditingMultipleValuesSelection</string> <newline>-								<boolean value="NO" key="NS.object.0" id="6"/> <newline>+								<boolean value="NO" key="NS.object.0"/> <newline> 							</object> <newline> 							<int key="NSNibBindingConnectorVersion">2</int> <newline> 						</object> <newline>@@ -2583,7 +2521,7 @@ Lg</string> <newline> 							<string key="NSKeyPath">passwordManagerEnabledIndex</string> <newline> 							<object class="NSDictionary" key="NSOptions"> <newline> 								<string key="NS.key.0">NSAllowsEditingMultipleValuesSelection</string> <newline>-								<reference key="NS.object.0" ref="6"/> <newline>+								<boolean value="NO" key="NS.object.0"/> <newline> 							</object> <newline> 							<int key="NSNibBindingConnectorVersion">2</int> <newline> 						</object> <newline>@@ -2603,7 +2541,7 @@ Lg</string> <newline> 							<string key="NSKeyPath">formAutofillEnabledIndex</string> <newline> 							<object class="NSDictionary" key="NSOptions"> <newline> 								<string key="NS.key.0">NSAllowsEditingMultipleValuesSelection</string> <newline>-								<reference key="NS.object.0" ref="6"/> <newline>+								<boolean value="NO" key="NS.object.0"/> <newline> 							</object> <newline> 							<int key="NSNibBindingConnectorVersion">2</int> <newline> 						</object> <newline>@@ -2905,28 +2843,26 @@ Lg</string> <newline> 					<bool key="EncodedWithXMLCoder">YES</bool> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">0</int> <newline>-						<object class="NSArray" key="object" id="420192856"> <newline>-							<bool key="EncodedWithXMLCoder">YES</bool> <newline>-						</object> <newline>+						<reference key="object" ref="0"/> <newline> 						<reference key="children" ref="1000"/> <newline> 						<nil key="parent"/> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">-2</int> <newline> 						<reference key="object" ref="1001"/> <newline>-						<reference key="parent" ref="420192856"/> <newline>-						<string type="base64-UTF8" key="objectName">RmlsZSdzIE93bmVyA</string> <newline>+						<reference key="parent" ref="0"/> <newline>+						<string key="objectName">File's Owner</string> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">-1</int> <newline> 						<reference key="object" ref="1003"/> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 						<string key="objectName">First Responder</string> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">-3</int> <newline> 						<reference key="object" ref="1004"/> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 						<string key="objectName">Application</string> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline>@@ -2936,7 +2872,7 @@ Lg</string> <newline> 							<bool key="EncodedWithXMLCoder">YES</bool> <newline> 							<reference ref="408649839"/> <newline> 						</object> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">4</int> <newline>@@ -3272,7 +3208,6 @@ Lg</string> <newline> 							<bool key="EncodedWithXMLCoder">YES</bool> <newline> 							<reference ref="1032231978"/> <newline> 							<reference ref="1043699198"/> <newline>-							<reference ref="1054376288"/> <newline> 							<reference ref="287656702"/> <newline> 							<reference ref="412658410"/> <newline> 							<reference ref="348105916"/> <newline>@@ -3284,17 +3219,16 @@ Lg</string> <newline> 							<reference ref="217654608"/> <newline> 							<reference ref="886068350"/> <newline> 							<reference ref="733677494"/> <newline>-							<reference ref="319078021"/> <newline> 							<reference ref="913832943"/> <newline>-							<reference ref="333355502"/> <newline> 							<reference ref="685290609"/> <newline> 							<reference ref="630848197"/> <newline> 							<reference ref="484273049"/> <newline> 							<reference ref="928184762"/> <newline> 							<reference ref="777041502"/> <newline> 							<reference ref="346222444"/> <newline>+							<reference ref="1054376288"/> <newline> 						</object> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 						<string key="objectName">Under The Hood</string> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline>@@ -3552,20 +3486,6 @@ Lg</string> <newline> 						<reference key="parent" ref="733677494"/> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline>-						<int key="objectID">138</int> <newline>-						<reference key="object" ref="319078021"/> <newline>-						<object class="NSMutableArray" key="children"> <newline>-							<bool key="EncodedWithXMLCoder">YES</bool> <newline>-							<reference ref="789709547"/> <newline>-						</object> <newline>-						<reference key="parent" ref="1016273328"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">139</int> <newline>-						<reference key="object" ref="789709547"/> <newline>-						<reference key="parent" ref="319078021"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline> 						<int key="objectID">140</int> <newline> 						<reference key="object" ref="913832943"/> <newline> 						<object class="NSMutableArray" key="children"> <newline>@@ -3594,50 +3514,6 @@ Lg</string> <newline> 						<reference key="parent" ref="1054376288"/> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline>-						<int key="objectID">144</int> <newline>-						<reference key="object" ref="333355502"/> <newline>-						<object class="NSMutableArray" key="children"> <newline>-							<bool key="EncodedWithXMLCoder">YES</bool> <newline>-							<reference ref="753519282"/> <newline>-						</object> <newline>-						<reference key="parent" ref="1016273328"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">145</int> <newline>-						<reference key="object" ref="753519282"/> <newline>-						<object class="NSMutableArray" key="children"> <newline>-							<bool key="EncodedWithXMLCoder">YES</bool> <newline>-							<reference ref="117498722"/> <newline>-						</object> <newline>-						<reference key="parent" ref="333355502"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">146</int> <newline>-						<reference key="object" ref="117498722"/> <newline>-						<object class="NSMutableArray" key="children"> <newline>-							<bool key="EncodedWithXMLCoder">YES</bool> <newline>-							<reference ref="664774881"/> <newline>-							<reference ref="617012582"/> <newline>-							<reference ref="58256631"/> <newline>-						</object> <newline>-						<reference key="parent" ref="753519282"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">147</int> <newline>-						<reference key="object" ref="664774881"/> <newline>-						<reference key="parent" ref="117498722"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">148</int> <newline>-						<reference key="object" ref="617012582"/> <newline>-						<reference key="parent" ref="117498722"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline>-						<int key="objectID">149</int> <newline>-						<reference key="object" ref="58256631"/> <newline>-						<reference key="parent" ref="117498722"/> <newline>-					</object> <newline>-					<object class="IBObjectRecord"> <newline> 						<int key="objectID">150</int> <newline> 						<reference key="object" ref="685290609"/> <newline> 						<object class="NSMutableArray" key="children"> <newline>@@ -3878,7 +3754,7 @@ Lg</string> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">358</int> <newline> 						<reference key="object" ref="775776152"/> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">362</int> <newline>@@ -3909,7 +3785,7 @@ Lg</string> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">380</int> <newline> 						<reference key="object" ref="495015235"/> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 						<string key="objectName">CustomHomePages Array Controller</string> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline>@@ -4003,7 +3879,7 @@ Lg</string> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">449</int> <newline> 						<reference key="object" ref="650617813"/> <newline>-						<reference key="parent" ref="420192856"/> <newline>+						<reference key="parent" ref="0"/> <newline> 					</object> <newline> 					<object class="IBObjectRecord"> <newline> 						<int key="objectID">457</int> <newline>@@ -4037,7 +3913,7 @@ Lg</string> <newline> 			</object> <newline> 			<object class="NSMutableDictionary" key="flattenedProperties"> <newline> 				<bool key="EncodedWithXMLCoder">YES</bool> <newline>-				<object class="NSMutableArray" key="dict.sortedKeys"> <newline>+				<object class="NSArray" key="dict.sortedKeys"> <newline> 					<bool key="EncodedWithXMLCoder">YES</bool> <newline> 					<string>-1.IBPluginDependency</string> <newline> 					<string>-2.IBPluginDependency</string> <newline>@@ -4062,19 +3938,10 @@ Lg</string> <newline> 					<string>131.IBPluginDependency</string> <newline> 					<string>136.IBPluginDependency</string> <newline> 					<string>137.IBPluginDependency</string> <newline>-					<string>138.IBPluginDependency</string> <newline>-					<string>139.IBPluginDependency</string> <newline> 					<string>140.IBPluginDependency</string> <newline> 					<string>141.IBPluginDependency</string> <newline> 					<string>142.IBPluginDependency</string> <newline> 					<string>143.IBPluginDependency</string> <newline>-					<string>144.IBPluginDependency</string> <newline>-					<string>145.IBPluginDependency</string> <newline>-					<string>146.IBEditorWindowLastContentRect</string> <newline>-					<string>146.IBPluginDependency</string> <newline>-					<string>147.IBPluginDependency</string> <newline>-					<string>148.IBPluginDependency</string> <newline>-					<string>149.IBPluginDependency</string> <newline> 					<string>150.IBPluginDependency</string> <newline> 					<string>151.IBPluginDependency</string> <newline> 					<string>152.IBEditorWindowLastContentRect</string> <newline>@@ -4227,15 +4094,6 @@ Lg</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>{{772, 130}, {243, 63}}</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>{{764, 606}, {375, 63}}</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>@@ -4259,7 +4117,7 @@ Lg</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>{{784, 543}, {559, 515}}</string> <newline> 					<string>{{784, 543}, {559, 515}}</string> <newline>-					<reference ref="6"/> <newline>+					<boolean value="NO"/> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>@@ -4334,7 +4192,7 @@ Lg</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>-					<string>{{317, 136}, {466, 720}}</string> <newline>+					<string>{{317, 217}, {466, 639}}</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline> 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string> <newline>@@ -4358,9 +4216,7 @@ Lg</string> <newline> 			</object> <newline> 			<object class="NSMutableDictionary" key="unlocalizedProperties"> <newline> 				<bool key="EncodedWithXMLCoder">YES</bool> <newline>-				<object class="NSArray" key="dict.sortedKeys"> <newline>-					<bool key="EncodedWithXMLCoder">YES</bool> <newline>-				</object> <newline>+				<reference key="dict.sortedKeys" ref="0"/> <newline> 				<object class="NSMutableArray" key="dict.values"> <newline> 					<bool key="EncodedWithXMLCoder">YES</bool> <newline> 				</object> <newline>@@ -4368,9 +4224,7 @@ Lg</string> <newline> 			<nil key="activeLocalization"/> <newline> 			<object class="NSMutableDictionary" key="localizations"> <newline> 				<bool key="EncodedWithXMLCoder">YES</bool> <newline>-				<object class="NSArray" key="dict.sortedKeys"> <newline>-					<bool key="EncodedWithXMLCoder">YES</bool> <newline>-				</object> <newline>+				<reference key="dict.sortedKeys" ref="0"/> <newline> 				<object class="NSMutableArray" key="dict.values"> <newline> 					<bool key="EncodedWithXMLCoder">YES</bool> <newline> 				</object> <newline>@@ -4386,7 +4240,7 @@ Lg</string> <newline> 					<string key="superclassName">NSObject</string> <newline> 					<object class="NSMutableDictionary" key="outlets"> <newline> 						<bool key="EncodedWithXMLCoder">YES</bool> <newline>-						<object class="NSMutableArray" key="dict.sortedKeys"> <newline>+						<object class="NSArray" key="dict.sortedKeys"> <newline> 							<bool key="EncodedWithXMLCoder">YES</bool> <newline> 							<string>otherObjectToLocalize_</string> <newline> 							<string>owner_</string> <newline>@@ -4419,6 +4273,13 @@ Lg</string> <newline> 					</object> <newline> 				</object> <newline> 				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSWindow</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBProjectSource</string> <newline>+						<string key="minorKey">browser/cocoa/nswindow_local_state.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline> 					<string key="className">PreferencesLocalizer</string> <newline> 					<string key="superclassName">GTMUILocalizer</string> <newline> 					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>@@ -4431,7 +4292,7 @@ Lg</string> <newline> 					<string key="superclassName">NSWindowController</string> <newline> 					<object class="NSMutableDictionary" key="actions"> <newline> 						<bool key="EncodedWithXMLCoder">YES</bool> <newline>-						<object class="NSMutableArray" key="dict.sortedKeys"> <newline>+						<object class="NSArray" key="dict.sortedKeys"> <newline> 							<bool key="EncodedWithXMLCoder">YES</bool> <newline> 							<string>addHomepage:</string> <newline> 							<string>clearData:</string> <newline>@@ -4462,7 +4323,7 @@ Lg</string> <newline> 					</object> <newline> 					<object class="NSMutableDictionary" key="outlets"> <newline> 						<bool key="EncodedWithXMLCoder">YES</bool> <newline>-						<object class="NSMutableArray" key="dict.sortedKeys"> <newline>+						<object class="NSArray" key="dict.sortedKeys"> <newline> 							<bool key="EncodedWithXMLCoder">YES</bool> <newline> 							<string>advancedScroller_</string> <newline> 							<string>advancedView_</string> <newline>@@ -4483,8 +4344,630 @@ Lg</string> <newline> 					</object> <newline> 				</object> <newline> 			</object> <newline>+			<object class="NSMutableArray" key="referencedPartialClassDescriptionsV3.2+"> <newline>+				<bool key="EncodedWithXMLCoder">YES</bool> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSActionCell</string> <newline>+					<string key="superclassName">NSCell</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSActionCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSApplication</string> <newline>+					<string key="superclassName">NSResponder</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="326993992"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSApplication.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSApplication</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="208251762"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSApplicationScripting.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSApplication</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="193671119"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSColorPanel.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSApplication</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSHelpManager.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSApplication</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSPageLayout.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSApplication</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSUserInterfaceItemSearching.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSArrayController</string> <newline>+					<string key="superclassName">NSObjectController</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSArrayController.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSButton</string> <newline>+					<string key="superclassName">NSControl</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSButton.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSButtonCell</string> <newline>+					<string key="superclassName">NSActionCell</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSButtonCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSCell</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSControl</string> <newline>+					<string key="superclassName">NSView</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="78713610"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSControl.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSController</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSController.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSFormatter</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSFormatter.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSMatrix</string> <newline>+					<string key="superclassName">NSControl</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSMatrix.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSMenu</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="778162332"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSMenu.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSMenuItem</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="540393616"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSMenuItem.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSMenuItemCell</string> <newline>+					<string key="superclassName">NSButtonCell</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSMenuItemCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSAccessibility.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<reference key="sourceIdentifier" ref="326993992"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<reference key="sourceIdentifier" ref="208251762"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<reference key="sourceIdentifier" ref="193671119"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<reference key="sourceIdentifier" ref="78713610"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSDictionaryController.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSDragging.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSFontManager.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSFontPanel.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSKeyValueBinding.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<reference key="sourceIdentifier" ref="778162332"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSNibLoading.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSOutlineView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSPasteboard.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSSavePanel.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="643463087"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSTableView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSToolbarItem.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier" id="448229358"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSArchiver.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSClassDescription.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSError.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSFileManager.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSKeyValueCoding.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSKeyValueObserving.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSKeyedArchiver.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSObject.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSObjectScripting.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSPortCoder.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSRunLoop.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSScriptClassDescription.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSScriptKeyValueCoding.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSScriptObjectSpecifiers.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSScriptWhoseTests.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSThread.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSURL.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSURLConnection.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">Foundation.framework/Headers/NSURLDownload.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">QuartzCore.framework/Headers/CAAnimation.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">QuartzCore.framework/Headers/CALayer.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">QuartzCore.framework/Headers/CIImageProvider.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">SecurityInterface.framework/Headers/SFAuthorizationView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">SecurityInterface.framework/Headers/SFCertificatePanel.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">SecurityInterface.framework/Headers/SFChooseIdentityPanel.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSObjectController</string> <newline>+					<string key="superclassName">NSController</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSObjectController.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSPathCell</string> <newline>+					<string key="superclassName">NSActionCell</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSPathCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSPathControl</string> <newline>+					<string key="superclassName">NSControl</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSPathControl.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSPopUpButton</string> <newline>+					<string key="superclassName">NSButton</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSPopUpButton.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSPopUpButtonCell</string> <newline>+					<string key="superclassName">NSMenuItemCell</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSPopUpButtonCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSResponder</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSInterfaceStyle.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSResponder</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSResponder.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSScrollView</string> <newline>+					<string key="superclassName">NSView</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSScrollView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSScroller</string> <newline>+					<string key="superclassName">NSControl</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSScroller.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSTabView</string> <newline>+					<string key="superclassName">NSView</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSTabView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSTabViewItem</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSTabViewItem.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSTableColumn</string> <newline>+					<string key="superclassName">NSObject</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSTableColumn.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSTableView</string> <newline>+					<string key="superclassName">NSControl</string> <newline>+					<reference key="sourceIdentifier" ref="643463087"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSTextField</string> <newline>+					<string key="superclassName">NSControl</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSTextField.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSTextFieldCell</string> <newline>+					<string key="superclassName">NSActionCell</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSTextFieldCell.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSUserDefaultsController</string> <newline>+					<string key="superclassName">NSController</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSUserDefaultsController.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSView</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSClipView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSView</string> <newline>+					<reference key="sourceIdentifier" ref="540393616"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSView</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSRulerView.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSView</string> <newline>+					<string key="superclassName">NSResponder</string> <newline>+					<reference key="sourceIdentifier" ref="448229358"/> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSWindow</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSDrawer.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSWindow</string> <newline>+					<string key="superclassName">NSResponder</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSWindow.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSWindow</string> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSWindowScripting.h</string> <newline>+					</object> <newline>+				</object> <newline>+				<object class="IBPartialClassDescription"> <newline>+					<string key="className">NSWindowController</string> <newline>+					<string key="superclassName">NSResponder</string> <newline>+					<object class="NSMutableDictionary" key="actions"> <newline>+						<string key="NS.key.0">showWindow:</string> <newline>+						<string key="NS.object.0">id</string> <newline>+					</object> <newline>+					<object class="IBClassDescriptionSource" key="sourceIdentifier"> <newline>+						<string key="majorKey">IBFrameworkSource</string> <newline>+						<string key="minorKey">AppKit.framework/Headers/NSWindowController.h</string> <newline>+					</object> <newline>+				</object> <newline>+			</object> <newline> 		</object> <newline> 		<int key="IBDocument.localizationMode">0</int> <newline>+		<object class="NSMutableDictionary" key="IBDocument.PluginDeclaredDependencies"> <newline>+			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin.macosx</string> <newline>+			<integer value="1050" key="NS.object.0"/> <newline>+		</object> <newline>+		<object class="NSMutableDictionary" key="IBDocument.PluginDeclaredDependencyDefaults"> <newline>+			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin.macosx</string> <newline>+			<integer value="1050" key="NS.object.0"/> <newline>+		</object> <newline>+		<object class="NSMutableDictionary" key="IBDocument.PluginDeclaredDevelopmentDependencies"> <newline>+			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin.InterfaceBuilder3</string> <newline>+			<integer value="3000" key="NS.object.0"/> <newline>+		</object> <newline>+		<bool key="IBDocument.PluginDeclaredDependenciesTrackSystemTargetVersion">YES</bool> <newline> 		<string key="IBDocument.LastKnownRelativeProjectPath">../../chrome.xcodeproj</string> <newline> 		<int key="IBDocument.defaultPropertyAccessControl">3</int> <newline> 	</data>
d75d8db7184ed06fd30e6241353d97abfc35ba4	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 18 06:21:09 2009 +0000	Introduce WebKit::WebSecurityOrigin as a wrapper around WebCore::SecurityOrigin. This provides us a little wiggle room in the future in case we ever want to provide more details about a security origin beyond just its stringified value. This was done on recommendation from Adam Barth. R=jorlow TEST=none	21967		http://codereview.chromium.org/211013	svn://svn.chromium.org/chrome/trunk/src@26554 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/webkit.gyp b/webkit/webkit.gyp <newline>index 5f843e5..91b8b33 100644 <newline>--- a/webkit/webkit.gyp <newline>+++ b/webkit/webkit.gyp <newline>@@ -1009,6 +1009,7 @@ <newline>         'api/public/WebRect.h', <newline>         'api/public/WebScreenInfo.h', <newline>         'api/public/WebScriptSource.h', <newline>+        'api/public/WebSecurityOrigin.h', <newline>         'api/public/WebSettings.h', <newline>         'api/public/WebSize.h', <newline>         'api/public/WebStorageArea.h', <newline>@@ -1085,6 +1086,7 @@ <newline>         'api/src/WebPluginLoadObserver.cpp', <newline>         'api/src/WebPluginLoadObserver.h', <newline>         'api/src/WebRange.cpp', <newline>+        'api/src/WebSecurityOrigin.cpp', <newline>         'api/src/WebSettingsImpl.cpp', <newline>         'api/src/WebSettingsImpl.h', <newline>         'api/src/WebStorageAreaImpl.cpp',
1733b650d1e31b84a50860b3e5780d97b11d86d	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 18 06:21:09 2009 +0000	Introduce WebKit::WebSecurityOrigin as a wrapper around WebCore::SecurityOrigin. This provides us a little wiggle room in the future in case we ever want to provide more details about a security origin beyond just its stringified value. This was done on recommendation from Adam Barth. R=jorlow TEST=none	21967		http://codereview.chromium.org/211013	svn://svn.chromium.org/chrome/trunk/src@26554 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/webkit.gyp b/webkit/webkit.gyp <newline>index 5f843e5..91b8b33 100644 <newline>--- a/webkit/webkit.gyp <newline>+++ b/webkit/webkit.gyp <newline>@@ -1009,6 +1009,7 @@ <newline>         'api/public/WebRect.h', <newline>         'api/public/WebScreenInfo.h', <newline>         'api/public/WebScriptSource.h', <newline>+        'api/public/WebSecurityOrigin.h', <newline>         'api/public/WebSettings.h', <newline>         'api/public/WebSize.h', <newline>         'api/public/WebStorageArea.h', <newline>@@ -1085,6 +1086,7 @@ <newline>         'api/src/WebPluginLoadObserver.cpp', <newline>         'api/src/WebPluginLoadObserver.h', <newline>         'api/src/WebRange.cpp', <newline>+        'api/src/WebSecurityOrigin.cpp', <newline>         'api/src/WebSettingsImpl.cpp', <newline>         'api/src/WebSettingsImpl.h', <newline>         'api/src/WebStorageAreaImpl.cpp',
9d89dd67cabf32fcc368ad039bf57139e52a114	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 18 00:44:53 2009 +0000	Revert "Strict transport security: add checkbox to clear state." This reverts commit r25955.				svn://svn.chromium.org/chrome/trunk/src@26528 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/strict_transport_security_state_unittest.cc b/net/base/strict_transport_security_state_unittest.cc <newline>index 2b769d7..5ebd358 100644 <newline>--- a/net/base/strict_transport_security_state_unittest.cc <newline>+++ b/net/base/strict_transport_security_state_unittest.cc <newline>@@ -204,17 +204,3 @@ TEST_F(StrictTransportSecurityStateTest, Serialise2) { <newline>   EXPECT_TRUE(state->IsEnabledForHost("foo.bar.baz.google.com")); <newline>   EXPECT_FALSE(state->IsEnabledForHost("com")); <newline> } <newline>- <newline>-TEST_F(StrictTransportSecurityStateTest, Clear) { <newline>-  scoped_refptr<net::StrictTransportSecurityState> state( <newline>-      new net::StrictTransportSecurityState); <newline>- <newline>-  const base::Time current_time(base::Time::Now()); <newline>-  const base::Time expiry = current_time + base::TimeDelta::FromSeconds(1000); <newline>- <newline>-  EXPECT_FALSE(state->IsEnabledForHost("google.com")); <newline>-  state->EnableHost("google.com", expiry, true); <newline>-  EXPECT_TRUE(state->IsEnabledForHost("google.com")); <newline>-  state->Clear(); <newline>-  EXPECT_FALSE(state->IsEnabledForHost("google.com")); <newline>-}
fb867ac9f72438e75b008f7925525390fb97530	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 18 00:44:53 2009 +0000	Revert "Strict transport security: add checkbox to clear state." This reverts commit r25955.				svn://svn.chromium.org/chrome/trunk/src@26528 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/strict_transport_security_state_unittest.cc b/net/base/strict_transport_security_state_unittest.cc <newline>index 2b769d7..5ebd358 100644 <newline>--- a/net/base/strict_transport_security_state_unittest.cc <newline>+++ b/net/base/strict_transport_security_state_unittest.cc <newline>@@ -204,17 +204,3 @@ TEST_F(StrictTransportSecurityStateTest, Serialise2) { <newline>   EXPECT_TRUE(state->IsEnabledForHost("foo.bar.baz.google.com")); <newline>   EXPECT_FALSE(state->IsEnabledForHost("com")); <newline> } <newline>- <newline>-TEST_F(StrictTransportSecurityStateTest, Clear) { <newline>-  scoped_refptr<net::StrictTransportSecurityState> state( <newline>-      new net::StrictTransportSecurityState); <newline>- <newline>-  const base::Time current_time(base::Time::Now()); <newline>-  const base::Time expiry = current_time + base::TimeDelta::FromSeconds(1000); <newline>- <newline>-  EXPECT_FALSE(state->IsEnabledForHost("google.com")); <newline>-  state->EnableHost("google.com", expiry, true); <newline>-  EXPECT_TRUE(state->IsEnabledForHost("google.com")); <newline>-  state->Clear(); <newline>-  EXPECT_FALSE(state->IsEnabledForHost("google.com")); <newline>-}
933169ef67835d69eb546f1f193cd818b5049a7	michaeln@google.com <michaeln@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 16 21:36:44 2009 +0000	Gears File Drag Drop r24899 now keys the child security policy database based on renderer id, rather than renderer process id. Update gears drag drop to use the renderer id for the file policy access checks. This is a clone for submission of of noel's original CL http://codereview.chromium.org/195079	7995		http://codereview.chromium.org/196145	svn://svn.chromium.org/chrome/trunk/src@26397 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/plugin/webplugin_proxy.h b/chrome/plugin/webplugin_proxy.h <newline>index 62b01ef..0ff1890 100644 <newline>--- a/chrome/plugin/webplugin_proxy.h <newline>+++ b/chrome/plugin/webplugin_proxy.h <newline>@@ -87,8 +87,8 @@ class WebPluginProxy : public webkit_glue::WebPlugin { <newline>   // object with that id exists. <newline>   webkit_glue::WebPluginResourceClient* GetResourceClient(int id); <newline>-  // Returns the process id of the renderer that contains this plugin. <newline>-  int GetRendererProcessId(); <newline>+  // Returns the id of the renderer that contains this plugin. <newline>+  int GetRendererId(); <newline>   // For windowless plugins, paints the given rectangle into the local buffer. <newline>   void Paint(const gfx::Rect& rect);
84a78578ea53490282bfb128fd844b120f926b5	michaeln@google.com <michaeln@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 16 21:36:44 2009 +0000	Gears File Drag Drop r24899 now keys the child security policy database based on renderer id, rather than renderer process id. Update gears drag drop to use the renderer id for the file policy access checks. This is a clone for submission of of noel's original CL http://codereview.chromium.org/195079	7995		http://codereview.chromium.org/196145	svn://svn.chromium.org/chrome/trunk/src@26397 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/plugin/webplugin_proxy.h b/chrome/plugin/webplugin_proxy.h <newline>index 62b01ef..0ff1890 100644 <newline>--- a/chrome/plugin/webplugin_proxy.h <newline>+++ b/chrome/plugin/webplugin_proxy.h <newline>@@ -87,8 +87,8 @@ class WebPluginProxy : public webkit_glue::WebPlugin { <newline>   // object with that id exists. <newline>   webkit_glue::WebPluginResourceClient* GetResourceClient(int id); <newline>-  // Returns the process id of the renderer that contains this plugin. <newline>-  int GetRendererProcessId(); <newline>+  // Returns the id of the renderer that contains this plugin. <newline>+  int GetRendererId(); <newline>   // For windowless plugins, paints the given rectangle into the local buffer. <newline>   void Paint(const gfx::Rect& rect);
5c55fc49154c01be94afdd21856edfea5f2fdc4	jhawkins@chromium.org <jhawkins@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 16 19:52:04 2009 +0000	valgrind: memset the window command data structure.  |timestamp| is aligned on a 16 byte boundary leaving 4 bytes of uninitialized data in the middle of the struct.  We write this data to disk, which is a possible security risk. TEST=TabRestoreUITest.RestoreToDifferentWindow	22031		http://codereview.chromium.org/196144	svn://svn.chromium.org/chrome/trunk/src@26379 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/sessions/tab_restore_service.cc b/chrome/browser/sessions/tab_restore_service.cc <newline>index 3eefdf2..a5f8545 100644 <newline>--- a/chrome/browser/sessions/tab_restore_service.cc <newline>+++ b/chrome/browser/sessions/tab_restore_service.cc <newline>@@ -6,6 +6,7 @@ <newline> #include <algorithm> <newline> #include <iterator> <newline>+#include <map> <newline> #include "base/scoped_vector.h" <newline> #include "base/stl_util-inl.h" <newline>@@ -63,7 +64,8 @@ namespace { <newline> typedef int32 RestoredEntryPayload; <newline> // Payload used for the start of a window close. This is the old struct that is <newline>-// used for backwards compat when it comes to reading the session files. <newline>+// used for backwards compat when it comes to reading the session files. This <newline>+// struct must be POD, because we memset the contents. <newline> struct WindowPayload { <newline>   SessionID::id_type window_id; <newline>   int32 selected_tab_index; <newline>@@ -77,7 +79,8 @@ struct SelectedNavigationInTabPayload { <newline>   int32 index; <newline> }; <newline>-// Payload used for the start of a window close. <newline>+// Payload used for the start of a window close.  This struct must be POD, <newline>+// because we memset the contents. <newline> struct WindowPayload2 : WindowPayload { <newline>   int64 timestamp; <newline> }; <newline>@@ -502,6 +505,9 @@ SessionCommand* TabRestoreService::CreateWindowCommand(SessionID::id_type id, <newline>                                                        int num_tabs, <newline>                                                        Time timestamp) { <newline>   WindowPayload2 payload; <newline>+  // |timestamp| is aligned on a 16 byte boundary, leaving 4 bytes of <newline>+  // uninitialized memory in the struct. <newline>+  memset(&payload, 0, sizeof(payload)); <newline>   payload.window_id = id; <newline>   payload.selected_tab_index = selected_tab_index; <newline>   payload.num_tabs = num_tabs;
ca7e00339fdc2e0c7533b1af6e75d6b3d123166	jhawkins@chromium.org <jhawkins@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 16 19:52:04 2009 +0000	valgrind: memset the window command data structure.  |timestamp| is aligned on a 16 byte boundary leaving 4 bytes of uninitialized data in the middle of the struct.  We write this data to disk, which is a possible security risk. TEST=TabRestoreUITest.RestoreToDifferentWindow	22031		http://codereview.chromium.org/196144	svn://svn.chromium.org/chrome/trunk/src@26379 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/sessions/tab_restore_service.cc b/chrome/browser/sessions/tab_restore_service.cc <newline>index 3eefdf2..a5f8545 100644 <newline>--- a/chrome/browser/sessions/tab_restore_service.cc <newline>+++ b/chrome/browser/sessions/tab_restore_service.cc <newline>@@ -6,6 +6,7 @@ <newline> #include <algorithm> <newline> #include <iterator> <newline>+#include <map> <newline> #include "base/scoped_vector.h" <newline> #include "base/stl_util-inl.h" <newline>@@ -63,7 +64,8 @@ namespace { <newline> typedef int32 RestoredEntryPayload; <newline> // Payload used for the start of a window close. This is the old struct that is <newline>-// used for backwards compat when it comes to reading the session files. <newline>+// used for backwards compat when it comes to reading the session files. This <newline>+// struct must be POD, because we memset the contents. <newline> struct WindowPayload { <newline>   SessionID::id_type window_id; <newline>   int32 selected_tab_index; <newline>@@ -77,7 +79,8 @@ struct SelectedNavigationInTabPayload { <newline>   int32 index; <newline> }; <newline>-// Payload used for the start of a window close. <newline>+// Payload used for the start of a window close.  This struct must be POD, <newline>+// because we memset the contents. <newline> struct WindowPayload2 : WindowPayload { <newline>   int64 timestamp; <newline> }; <newline>@@ -502,6 +505,9 @@ SessionCommand* TabRestoreService::CreateWindowCommand(SessionID::id_type id, <newline>                                                        int num_tabs, <newline>                                                        Time timestamp) { <newline>   WindowPayload2 payload; <newline>+  // |timestamp| is aligned on a 16 byte boundary, leaving 4 bytes of <newline>+  // uninitialized memory in the struct. <newline>+  memset(&payload, 0, sizeof(payload)); <newline>   payload.window_id = id; <newline>   payload.selected_tab_index = selected_tab_index; <newline>   payload.num_tabs = num_tabs;
778ba88a6fdb68b3222aff3d16601683dfca5d2	dpranke@google.com <dpranke@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Sep 15 11:23:59 2009 +0000	Check in new baselines w/ generic theme for Windows, enabling layout tests on both XP and Vista to work. R=none TEST=none A    platform/chromium-win-vista A    platform/chromium-win-xp/LayoutTests A    platform/chromium-win-xp/LayoutTests/svg A    platform/chromium-win-xp/LayoutTests/svg/text A    platform/chromium-win-xp/LayoutTests/svg/text/text-intro-05-t-expected.checksum AM   platform/chromium-win-xp/LayoutTests/svg/text/text-intro-05-t-expected.png A    platform/chromium-win-xp/LayoutTests/svg/text/text-fonts-01-t-expected.checksum AM   platform/chromium-win-xp/LayoutTests/svg/text/text-fonts-01-t-expected.png A    platform/chromium-win-xp/LayoutTests/svg/text/text-intro-05-t-expected.txt A    platform/chromium-win-xp/LayoutTests/svg/W3C-SVG-1.1 A    platform/chromium-win-xp/LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t-expected.checksum AM   platform/chromium-win-xp/LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t-expected.png A    platform/chromium-win-xp/LayoutTests/svg/W3C-SVG-1.1/text-fonts-01-t-expected.checksum AM   platform/chromium-win-xp/LayoutTests/svg/W3C-SVG-1.1/text-fonts-01-t-expected.png A    platform/chromium-win-xp/LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t-expected.txt A    platform/chromium-win-xp/LayoutTests/css2.1 AM   platform/chromium-win-xp/LayoutTests/css2.1/t1202-counters-09-b-expected.png A    platform/chromium-win-xp/LayoutTests/css2.1/t1202-counter-09-b-expected.checksum AM   platform/chromium-win-xp/LayoutTests/css2.1/t1202-counter-09-b-expected.png A    platform/chromium-win-xp/LayoutTests/css2.1/t1202-counters-09-b-expected.checksum A    platform/chromium-win-xp/LayoutTests/fast A    platform/chromium-win-xp/LayoutTests/fast/replaced A    platform/chromium-win-xp/LayoutTests/fast/replaced/border-radius-clip-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/replaced/border-radius-clip-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text A    platform/chromium-win-xp/LayoutTests/fast/text/bidi-embedding-pop-and-push-same-expected.checksum A    platform/chromium-win-xp/LayoutTests/fast/text/complex-text-opacity-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/text/bidi-embedding-pop-and-push-same-expected.png AM   platform/chromium-win-xp/LayoutTests/fast/text/complex-text-opacity-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/cg-vs-atsui-expected.checksum A    platform/chromium-win-xp/LayoutTests/fast/text/atsui-spacing-features-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/text/cg-vs-atsui-expected.png AM   platform/chromium-win-xp/LayoutTests/fast/text/atsui-spacing-features-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/international A    platform/chromium-win-xp/LayoutTests/fast/text/international/thai-line-breaks-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/text/international/danda-space-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/international/hindi-whitespace-expected.checksum A    platform/chromium-win-xp/LayoutTests/fast/text/international/complex-character-based-fallback-expected.txt A    platform/chromium-win-xp/LayoutTests/fast/text/international/khmer-selection-expected.checksum A    platform/chromium-win-xp/LayoutTests/fast/text/international/thai-baht-space-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/text/international/complex-character-based-fallback-expected.png AM   platform/chromium-win-xp/LayoutTests/fast/text/international/hindi-spacing-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/international/danda-space-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/text/international/thai-line-breaks-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/international/khmer-selection-expected.txt AM   platform/chromium-win-xp/LayoutTests/fast/text/international/hindi-whitespace-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/international/complex-character-based-fallback-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/text/international/khmer-selection-expected.png AM   platform/chromium-win-xp/LayoutTests/fast/text/international/thai-baht-space-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/international/hindi-spacing-expected.checksum A    platform/chromium-win-xp/LayoutTests/fast/text/international/danda-space-expected.txt A    platform/chromium-win-xp/LayoutTests/fast/forms M    platform/chromium-win/LayoutTests/http/tests/navigation/post-frames-expected.png M    platform/chromium-win/LayoutTests/http/tests/navigation/postredirect-frames-expected.checksum M    platform/chromium-win/LayoutTests/http/tests/navigation/error404-frames-expected.checksum M    platform/chromium-win/LayoutTests/http/tests/navigation/javascriptlink-frames-expected.checksum M    platform/chromium-win/LayoutTests/http/tests/navigation/post-frames-expected.checksum M    platform/chromium-win/LayoutTests/http/tests/navigation/javascriptlink-frames-expected.png M    platform/chromium-win/LayoutTests/http/tests/navigation/error404-subframeload-expected.checksum M    platform/chromium-win/LayoutTests/http/tests/navigation/anchor-frames-expected.checksum M    platform/chromium-win/LayoutTests/http/tests/navigation/postredirect-frames-expected.png M    platform/chromium-win/LayoutTests/http/tests/navigation/error404-subframeload-expected.png M    platform/chromium-win/LayoutTests/http/tests/navigation/anchor-frames-expected.png M    platform/chromium-win/LayoutTests/http/tests/navigation/error404-frames-expected.png M    platform/chromium-win/LayoutTests/webarchive/test-duplicate-resources-expected.png M    platform/chromium-win/LayoutTests/webarchive/test-duplicate-resources-expected.checksum M    platform/chromium-win/LayoutTests/editing/inserting/5607069-3-expected.checksum M    platform/chromium-win/LayoutTests/editing/inserting/insert-div-023-expected.checksum M    platform/chromium-win/LayoutTests/editing/inserting/5607069-3-expected.png M    platform/chromium-win/LayoutTests/editing/inserting/insert-div-023-expected.png M    platform/chromium-win/LayoutTests/editing/inserting/5607069-2-expected.png M    platform/chromium-win/LayoutTests/editing/inserting/before-after-input-element-expected.png M    platform/chromium-win/LayoutTests/editing/inserting/typing-tab-designmode-forms-expected.png M    platform/chromium-win/LayoutTests/editing/inserting/4960120-1-expected.checksum M    platform/chromium-win/LayoutTests/editing/inserting/typing-tab-designmode-forms-expected.checksum M    platform/chromium-win/LayoutTests/editing/inserting/4960120-1-expected.png M    platform/chromium-win/LayoutTests/editing/inserting/before-after-input-element-expected.checksum M    platform/chromium-win/LayoutTests/editing/inserting/5607069-2-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/nested-blocks-with-text-area-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/nested-blocks-with-text-field-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/4944770-2-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/4944770-1-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/4944770-1-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/input-field-1-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/4944770-2-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/4806874-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/drop-link-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/select-element-1-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/4806874-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/4641033-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/pasting-tabs-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/input-field-1-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/select-element-1-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/4641033-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/nested-blocks-with-text-area-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/nested-blocks-with-text-field-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/drop-link-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/pasting-tabs-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/drop-text-without-selection-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/drop-text-without-selection-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/focus_editable_html-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-all-002-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/4895428-3-expected.png M    platform/chromium-win/LayoutTests/editing/selection/4975120-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/caret-before-select-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-all-001-expected.png M    platform/chromium-win/LayoutTests/editing/selection/unrendered-003-expected.png M    platform/chromium-win/LayoutTests/editing/selection/iframe-expected.png M    platform/chromium-win/LayoutTests/editing/selection/drag-text-delay-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/4895428-3-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/drag-select-1-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-all-003-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/unrendered-001-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/5136696-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/select-box-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/3690703-2-expected.png M    platform/chromium-win/LayoutTests/editing/selection/unrendered-002-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-all-004-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/3690703-2-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/unrendered-002-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/5240265-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-element-paragraph-boundary-expected.png M    platform/chromium-win/LayoutTests/editing/selection/3690719-expected.png M    platform/chromium-win/LayoutTests/editing/selection/5136696-expected.png M    platform/chromium-win/LayoutTests/editing/selection/replaced-boundaries-3-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-element-paragraph-boundary-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/caret-before-select-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/5240265-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/unrendered-003-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/unrendered-001-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-all-004-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-from-textfield-outwards-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/drag-select-1-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/unrendered-004-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/3690703-expected.png M    platform/chromium-win/LayoutTests/editing/selection/4397952-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/focus_editable_html-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/unrendered-005-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/select-all-003-expected.png M    platform/chromium-win/LayoutTests/editing/selection/4975120-expected.png M    platform/chromium-win/LayoutTests/editing/selection/unrendered-005-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-box-expected.png M    platform/chromium-win/LayoutTests/editing/selection/replaced-boundaries-3-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/drag-text-delay-expected.png M    platform/chromium-win/LayoutTests/editing/selection/4397952-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-from-textfield-outwards-expected.png M    platform/chromium-win/LayoutTests/editing/selection/3690719-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/select-all-002-expected.png M    platform/chromium-win/LayoutTests/editing/selection/unrendered-004-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-all-001-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/3690703-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/iframe-expected.checksum M    platform/chromium-win/LayoutTests/editing/deleting/delete-line-end-ws-001-expected.checksum M    platform/chromium-win/LayoutTests/editing/deleting/delete-after-span-ws-003-expected.checksum M    platform/chromium-win/LayoutTests/editing/deleting/delete-line-end-ws-001-expected.png M    platform/chromium-win/LayoutTests/editing/deleting/delete-after-span-ws-002-expected.png M    platform/chromium-win/LayoutTests/editing/deleting/delete-line-end-ws-002-expected.checksum M    platform/chromium-win/LayoutTests/editing/deleting/5168598-expected.png M    platform/chromium-win/LayoutTests/editing/deleting/delete-after-span-ws-001-expected.png M    platform/chromium-win/LayoutTests/editing/deleting/delete-after-span-ws-001-expected.checksum M    platform/chromium-win/LayoutTests/editing/deleting/delete-after-span-ws-002-expected.checksum M    platform/chromium-win/LayoutTests/editing/deleting/delete-line-end-ws-002-expected.png M    platform/chromium-win/LayoutTests/editing/deleting/delete-after-span-ws-003-expected.png M    platform/chromium-win/LayoutTests/editing/deleting/5168598-expected.checksum M    platform/chromium-win/LayoutTests/editing/spelling/spellcheck-attribute-expected.png M    platform/chromium-win/LayoutTests/editing/spelling/spellcheck-attribute-expected.checksum M    platform/chromium-win/LayoutTests/fonts/cursive-expected.checksum M    platform/chromium-win/LayoutTests/fonts/monospace-expected.checksum M    platform/chromium-win/LayoutTests/fonts/default-expected.checksum M    platform/chromium-win/LayoutTests/fonts/fantasy-expected.png M    platform/chromium-win/LayoutTests/fonts/serif-expected.png M    platform/chromium-win/LayoutTests/fonts/sans-serif-expected.png M    platform/chromium-win/LayoutTests/fonts/cursive-expected.png M    platform/chromium-win/LayoutTests/fonts/fantasy-expected.checksum M    platform/chromium-win/LayoutTests/fonts/default-expected.png M    platform/chromium-win/LayoutTests/fonts/monospace-expected.png M    platform/chromium-win/LayoutTests/fonts/serif-expected.checksum M    platform/chromium-win/LayoutTests/fonts/sans-serif-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-07-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-09-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-03-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-06-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-04-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-04-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-08-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-03-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-01-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-04-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-08-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-05-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-09-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-05-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-03-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-01-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-02-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-02-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-06-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-07-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-02-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-04-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-02-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-03-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-menulist-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/replaced-breaking-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-image-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/005-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-searchfield-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-textarea-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/border-radius-clip-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/replaced-breaking-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/three-selects-break-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-textarea-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-image-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-radio-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-textfield-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-radio-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-checkbox-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-checkbox-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-textfield-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-button-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/005-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-button-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-menulist-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/replaced-breaking-mixture-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-searchfield-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/replaced-breaking-mixture-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/border-radius-clip-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/three-selects-break-expected.png M    platform/chromium-win/LayoutTests/fast/dynamic/anchor-lock-expected.png M    platform/chromium-win/LayoutTests/fast/dynamic/008-expected.png M    platform/chromium-win/LayoutTests/fast/dynamic/008-expected.checksum M    platform/chromium-win/LayoutTests/fast/dynamic/insert-before-table-part-in-continuation-expected.checksum M    platform/chromium-win/LayoutTests/fast/dynamic/insert-before-table-part-in-continuation-expected.png M    platform/chromium-win/LayoutTests/fast/dynamic/anchor-lock-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/large-text-composed-char-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/bidi-embedding-pop-and-push-same-expected.png M    platform/chromium-win/LayoutTests/fast/text/text-letter-spacing-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/danda-space-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-menulist-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/hindi-spacing-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/rtl-white-space-pre-wrap-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/khmer-selection-expected.txt M    platform/chromium-win/LayoutTests/fast/text/international/bidi-LDB-2-formatting-characters-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-neutral-run-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/bidi-european-terminators-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/khmer-selection-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/bidi-LDB-2-formatting-characters-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/bidi-listbox-atsui-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/thai-line-breaks-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-neutral-run-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/khmer-selection-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/thai-baht-space-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/hindi-whitespace-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/complex-character-based-fallback-expected.txt M    platform/chromium-win/LayoutTests/fast/text/international/thai-baht-space-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/danda-space-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/hindi-whitespace-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-european-terminators-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/danda-space-expected.txt M    platform/chromium-win/LayoutTests/fast/text/international/thai-line-breaks-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/rtl-white-space-pre-wrap-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-listbox-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/complex-character-based-fallback-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-menulist-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/complex-character-based-fallback-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/bidi-listbox-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-listbox-atsui-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/hindi-spacing-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/drawBidiText-expected.png M    platform/chromium-win/LayoutTests/fast/text/complex-text-opacity-expected.png M    platform/chromium-win/LayoutTests/fast/text/softHyphen-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/drawBidiText-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/whitespace/024-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/whitespace/normal-after-nowrap-breaking-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/whitespace/024-expected.png M    platform/chromium-win/LayoutTests/fast/text/whitespace/pre-wrap-spaces-after-newline-expected.png M    platform/chromium-win/LayoutTests/fast/text/whitespace/normal-after-nowrap-breaking-expected.png M    platform/chromium-win/LayoutTests/fast/text/whitespace/pre-wrap-spaces-after-newline-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/wbr-expected.png M    platform/chromium-win/LayoutTests/fast/text/bidi-embedding-pop-and-push-same-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/atsui-spacing-features-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/wbr-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/complex-text-opacity-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/updateNewFont-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/text-letter-spacing-expected.png M    platform/chromium-win/LayoutTests/fast/text/textIteratorNilRenderer-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/line-breaks-expected.png M    platform/chromium-win/LayoutTests/fast/text/large-text-composed-char-expected.png M    platform/chromium-win/LayoutTests/fast/text/word-break-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/atsui-spacing-features-expected.png M    platform/chromium-win/LayoutTests/fast/text/textIteratorNilRenderer-expected.png M    platform/chromium-win/LayoutTests/fast/text/word-break-expected.png M    platform/chromium-win/LayoutTests/fast/text/updateNewFont-expected.png M    platform/chromium-win/LayoutTests/fast/text/cg-vs-atsui-expected.png M    platform/chromium-win/LayoutTests/fast/text/line-breaks-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/cg-vs-atsui-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/line-breaks-expected.txt M    platform/chromium-win/LayoutTests/fast/text/softHyphen-expected.png M    platform/chromium-win/LayoutTests/fast/encoding/utf-16-little-endian-expected.png M    platform/chromium-win/LayoutTests/fast/encoding/utf-16-big-endian-expected.png M    platform/chromium-win/LayoutTests/fast/encoding/utf-16-little-endian-expected.checksum M    platform/chromium-win/LayoutTests/fast/encoding/utf-16-big-endian-expected.checksum M    platform/chromium-win/LayoutTests/fast/multicol/column-rules-stacking-expected.checksum M    platform/chromium-win/LayoutTests/fast/multicol/float-multicol-expected.checksum M    platform/chromium-win/LayoutTests/fast/multicol/columns-shorthand-parsing-expected.png M    platform/chromium-win/LayoutTests/fast/multicol/column-rules-stacking-expected.png M    platform/chromium-win/LayoutTests/fast/multicol/columns-shorthand-parsing-expected.checksum M    platform/chromium-win/LayoutTests/fast/multicol/float-multicol-expected.png M    platform/chromium-win/LayoutTests/fast/css-generated-content/014-expected.checksum M    platform/chromium-win/LayoutTests/fast/css-generated-content/014-expected.png M    platform/chromium-win/LayoutTests/fast/lists/li-br-expected.png M    platform/chromium-win/LayoutTests/fast/lists/001-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/alpha-list-wrap-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/w3-list-styles-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/alpha-list-wrap-expected.png M    platform/chromium-win/LayoutTests/fast/lists/ol-start-parsing-expected.png M    platform/chromium-win/LayoutTests/fast/lists/008-expected.png M    platform/chromium-win/LayoutTests/fast/lists/ol-start-parsing-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/001-expected.png M    platform/chromium-win/LayoutTests/fast/lists/olstart-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/dynamic-marker-crash-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/008-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/dynamic-marker-crash-expected.png M    platform/chromium-win/LayoutTests/fast/lists/li-br-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/w3-list-styles-expected.png M    platform/chromium-win/LayoutTests/fast/lists/olstart-expected.png M    platform/chromium-win/LayoutTests/fast/transforms/transformed-focused-text-input-expected.checksum M    platform/chromium-win/LayoutTests/fast/transforms/transformed-focused-text-input-expected.png M    platform/chromium-win/LayoutTests/fast/selectors/166-expected.checksum M    platform/chromium-win/LayoutTests/fast/selectors/166-expected.png M    platform/chromium-win/LayoutTests/fast/selectors/064-expected.checksum M    platform/chromium-win/LayoutTests/fast/selectors/064-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/overflow-auto-table-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/003-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/hit-test-overflow-controls-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/007-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/overflow-auto-table-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-x-y-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/003-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/005-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-text-hit-testing-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/scrollbar-position-update-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/007-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/unreachable-overflow-rtl-bug-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/overflow-auto-position-absolute-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/childFocusRingClip-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-x-y-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-text-hit-testing-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-rtl-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/float-in-relpositioned-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/scrollbar-position-update-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/008-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/scroll-nested-positioned-layer-in-overflow-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/table-overflow-float-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/image-selection-highlight-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/overflow-rtl-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/hit-test-overflow-controls-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-stacking-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/image-selection-highlight-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/005-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/overflow-auto-position-absolute-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-with-local-background-attachment-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/scrollRevealButton-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/002-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/006-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/008-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/scrollRevealButton-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/002-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/unreachable-overflow-rtl-bug-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-stacking-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/006-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/childFocusRingClip-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/clip-rects-fixed-ancestor-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/overflow-with-local-background-attachment-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/scroll-nested-positioned-layer-in-overflow-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/float-in-relpositioned-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/table-overflow-float-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/clip-rects-fixed-ancestor-expected.checksum M    platform/chromium-win/LayoutTests/fast/events/reveal-link-when-focused-expected.png M    platform/chromium-win/LayoutTests/fast/events/autoscroll-expected.checksum M    platform/chromium-win/LayoutTests/fast/events/reveal-link-when-focused-expected.checksum M    platform/chromium-win/LayoutTests/fast/events/context-no-deselect-expected.png M    platform/chromium-win/LayoutTests/fast/events/autoscroll-expected.png M    platform/chromium-win/LayoutTests/fast/events/label-focus-expected.png M    platform/chromium-win/LayoutTests/fast/events/pointer-events-2-expected.checksum M    platform/chromium-win/LayoutTests/fast/events/context-no-deselect-expected.checksum M    platform/chromium-win/LayoutTests/fast/events/label-focus-expected.checksum M    platform/chromium-win/LayoutTests/fast/events/pointer-events-2-expected.png M    platform/chromium-win/LayoutTests/fast/inline-block/inline-block-vertical-align-expected.png M    platform/chromium-win/LayoutTests/fast/inline-block/tricky-baseline-expected.checksum M    platform/chromium-win/LayoutTests/fast/inline-block/inline-block-vertical-align-expected.checksum M    platform/chromium-win/LayoutTests/fast/inline-block/tricky-baseline-expected.png M    platform/chromium-win/LayoutTests/fast/flexbox/flex-hang-expected.png M    platform/chromium-win/LayoutTests/fast/flexbox/009-expected.checksum M    platform/chromium-win/LayoutTests/fast/flexbox/016-expected.png M    platform/chromium-win/LayoutTests/fast/flexbox/016-expected.checksum M    platform/chromium-win/LayoutTests/fast/flexbox/009-expected.png M    platform/chromium-win/LayoutTests/fast/flexbox/flex-hang-expected.checksum M    platform/chromium-win/LayoutTests/fast/inline/inline-continuation-borders-expected.png M    platform/chromium-win/LayoutTests/fast/inline/positionedLifetime-expected.png M    platform/chromium-win/LayoutTests/fast/inline/long-wrapped-line-expected.checksum M    platform/chromium-win/LayoutTests/fast/inline/inline-borders-with-bidi-override-expected.png M    platform/chromium-win/LayoutTests/fast/inline/long-wrapped-line-expected.png M    platform/chromium-win/LayoutTests/fast/inline/inline-borders-with-bidi-override-expected.checksum M    platform/chromium-win/LayoutTests/fast/inline/inline-continuation-borders-expected.checksum M    platform/chromium-win/LayoutTests/fast/inline/positionedLifetime-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/004-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/006-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/001-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/003-declarative-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/004-declarative-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/003-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/005-declarative-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/005-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/006-declarative-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/007-declarative-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/007-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/001-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/002-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/003-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/004-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/005-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/003-declarative-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/006-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/007-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/005-declarative-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/007-declarative-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/001-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/003-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/005-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/007-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/002-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/004-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/006-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/001-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/002-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/003-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/004-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/005-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/006-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/007-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/004-declarative-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/006-declarative-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/002-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/dom/isindex-002-expected.png M    platform/chromium-win/LayoutTests/fast/dom/isindex-002-expected.checksum M    platform/chromium-win/LayoutTests/fast/dom/focus-contenteditable-expected.checksum M    platform/chromium-win/LayoutTests/fast/dom/focus-contenteditable-expected.png M    platform/chromium-win/LayoutTests/fast/dom/HTMLTextAreaElement/reset-textarea-expected.png M    platform/chromium-win/LayoutTests/fast/dom/HTMLTextAreaElement/reset-textarea-expected.checksum M    platform/chromium-win/LayoutTests/fast/dom/HTMLTableColElement/resize-table-using-col-width-expected.checksum M    platform/chromium-win/LayoutTests/fast/dom/HTMLTableColElement/resize-table-using-col-width-expected.png M    platform/chromium-win/LayoutTests/fast/dom/stripNullFromTextNodes-expected.png M    platform/chromium-win/LayoutTests/fast/dom/stripNullFromTextNodes-expected.checksum M    platform/chromium-win/LayoutTests/fast/gradients/background-clipped-expected.png M    platform/chromium-win/LayoutTests/fast/gradients/background-clipped-expected.checksum M    platform/chromium-win/LayoutTests/fast/invalid/014-expected.checksum M    platform/chromium-win/LayoutTests/fast/invalid/014-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-readonly-autoscroll-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label04-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-baseline-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/001-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-table-styles-expected.png M    platform/chromium-win/LayoutTests/fast/forms/menulist-separator-painting-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-setinnerhtml-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-align-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-cannot-be-nested-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-height-expected.png M    platform/chromium-win/LayoutTests/fast/forms/blankbuttons-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/search-placeholder-value-changed-expected.png M    platform/chromium-win/LayoutTests/fast/forms/placeholder-pseudo-style-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-type-text-min-width-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-visibility-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/001-expected.png M    platform/chromium-win/LayoutTests/fast/forms/option-script-expected.png M    platform/chromium-win/LayoutTests/fast/forms/placeholder-pseudo-style-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-white-space-expected.png M    platform/chromium-win/LayoutTests/fast/forms/linebox-overflow-in-textarea-padding-expected.png M    platform/chromium-win/LayoutTests/fast/forms/slider-padding-expected.png M    platform/chromium-win/LayoutTests/fast/forms/menulist-restrict-line-height-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label05-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/option-strip-whitespace-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-drag-down-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-default-bkcolor-expected.png M    platform/chromium-win/LayoutTests/fast/forms/disabled-select-change-index-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-baseline-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-align-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-text-scroll-left-on-blur-expected.png M    platform/chromium-win/LayoutTests/fast/forms/form-hides-table-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-positioned-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-selection-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-scrolled-type-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-width-expected.png M    platform/chromium-win/LayoutTests/fast/forms/search-zoomed-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/003-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-text-transform-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-default-bkcolor-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-style-color-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/linebox-overflow-in-textarea-padding-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/blankbuttons-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-width-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-default-title-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-list-box-with-height-expected.png M    platform/chromium-win/LayoutTests/fast/forms/search-zoomed-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label02-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-drag-down-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/option-strip-whitespace-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/radio-attr-order-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-align-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/fieldset-align-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-spaces-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label07-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-change-listbox-size-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-baseline-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-word-wrap-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label07-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textAreaLineHeight-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-scrolled-type-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/search-rtl-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/formmove-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-style-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-text-transform-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-placeholder-pseudo-style-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/formmove-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-style-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-placeholder-set-attribute-expected.png M    platform/chromium-win/LayoutTests/fast/forms/password-placeholder-text-security-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/placeholder-set-attribute-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-generated-content-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/listbox-scrollbar-incremental-load-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/searchfield-heights-expected.png M    platform/chromium-win/LayoutTests/fast/forms/checkbox-radio-onchange-expected.png M    platform/chromium-win/LayoutTests/fast/forms/004-expected.png M    platform/chromium-win/LayoutTests/fast/forms/menulist-separator-painting-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textfield-overflow-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/encoding-test-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-deselect-update-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-text-click-inside-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-inner-block-reuse-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-scrollbar-expected.png M    platform/chromium-win/LayoutTests/fast/forms/radio_checked-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-size-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-text-click-inside-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-word-wrap-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-selected-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/formmove3-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-default-title-expected.png M    platform/chromium-win/LayoutTests/fast/forms/formmove3-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-click-outside-expected.png M    platform/chromium-win/LayoutTests/fast/forms/targeted-frame-submission-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-change-listbox-to-popup-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-readonly-empty-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/placeholder-set-value-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-self-emptying-click-expected.png M    platform/chromium-win/LayoutTests/fast/forms/menulist-no-overflow-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textAreaLineHeight-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-type-change2-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/radio_checked_dynamic-expected.png M    platform/chromium-win/LayoutTests/fast/forms/minWidthPercent-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label02-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-paste-undo-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-baseline-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-double-click-selection-gap-bug-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-preventDefault-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-deselect-update-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label05-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textfield-overflow-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-double-click-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/search-placeholder-value-changed-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/placeholder-set-attribute-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-disabled-color-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-visibility-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-type-change2-expected.png M    platform/chromium-win/LayoutTests/fast/forms/slider-padding-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-align-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-option-delete-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-readonly-empty-expected.png M    platform/chromium-win/LayoutTests/fast/forms/option-text-clip-expected.png M    platform/chromium-win/LayoutTests/fast/forms/tabbing-input-iframe-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-text-click-outside-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/radio-attr-order-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-positioned-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-scroll-height-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-width-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label04-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/form-element-geometry-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-change-listbox-size-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-spaces-expected.png M    platform/chromium-win/LayoutTests/fast/forms/text-style-color-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/checkbox-radio-onchange-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/searchfield-heights-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-placeholder-pseudo-style-expected.png M    platform/chromium-win/LayoutTests/fast/forms/file-input-disabled-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-disabled-appearance-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-align-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-setinnerhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-focus-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-value-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-paste-undo-expected.png M    platform/chromium-win/LayoutTests/fast/forms/radio_checked_dynamic-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/option-script-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-text-self-emptying-click-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/placeholder-set-value-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-selected-expected.png M    platform/chromium-win/LayoutTests/fast/forms/search-cancel-button-style-sharing-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label03-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-double-click-expected.png M    platform/chromium-win/LayoutTests/fast/forms/form-element-geometry-expected.png M    platform/chromium-win/LayoutTests/fast/forms/listbox-width-change-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-table-styles-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-change-listbox-to-popup-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-align-expected.png M    platform/chromium-win/LayoutTests/fast/forms/menulist-style-color-expected.png M    platform/chromium-win/LayoutTests/fast/forms/radio-nested-labels-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-preventDefault-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-change-popup-to-listbox-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label06-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/search-rtl-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-readonly-dimmed-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-field-text-truncated-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-list-box-with-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/listbox-scrollbar-incremental-load-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-style-color-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-align-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/password-placeholder-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/listbox-width-change-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-align-expected.png M    platform/chromium-win/LayoutTests/fast/forms/indeterminate-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-readonly-expected.png M    platform/chromium-win/LayoutTests/fast/forms/menulist-no-overflow-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-type-text-min-width-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/004-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-block-background-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-readonly-dimmed-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/file-input-direction-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-scroll-left-on-blur-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/stuff-on-my-optgroup-expected.png M    platform/chromium-win/LayoutTests/fast/forms/file-input-direction-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/control-clip-overflow-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-readonly-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-narrow-width-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/search-display-none-cancel-button-expected.png M    platform/chromium-win/LayoutTests/fast/forms/fieldset-align-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/plaintext-mode-2-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-placeholder-set-value-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-size-expected.png M    platform/chromium-win/LayoutTests/fast/forms/formmove2-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/radio-nested-labels-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/option-text-clip-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-disabled-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-block-background-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-restrict-line-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label01-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-inner-block-reuse-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-readonly-autoscroll-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-width-change-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-sizes-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-field-text-truncated-expected.png M    platform/chromium-win/LayoutTests/fast/forms/floating-textfield-relayout-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-scroll-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/targeted-frame-submission-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-placeholder-set-value-expected.png M    platform/chromium-win/LayoutTests/fast/forms/slider-thumb-shared-style-expected.png M    platform/chromium-win/LayoutTests/fast/forms/minWidthPercent-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-placeholder-set-attribute-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-dirty-parent-pref-widths-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label06-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-cannot-be-nested-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-selection-expected.png M    platform/chromium-win/LayoutTests/fast/forms/stuff-on-my-optgroup-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-narrow-width-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label01-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-white-space-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-width-change-expected.png M    platform/chromium-win/LayoutTests/fast/forms/control-clip-overflow-expected.png M    platform/chromium-win/LayoutTests/fast/forms/search-display-none-cancel-button-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-table-expected.png M    platform/chromium-win/LayoutTests/fast/forms/form-hides-table-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/003-expected.png M    platform/chromium-win/LayoutTests/fast/forms/encoding-test-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-double-click-selection-gap-bug-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-disabled-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/radio_checked-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/search-cancel-button-style-sharing-expected.png M    platform/chromium-win/LayoutTests/fast/forms/plaintext-mode-2-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-disabled-color-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/text-style-color-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-style-color-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/tabbing-input-iframe-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-change-popup-to-listbox-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-sizes-expected.png M    platform/chromium-win/LayoutTests/fast/forms/password-placeholder-text-security-expected.png M    platform/chromium-win/LayoutTests/fast/forms/slider-thumb-shared-style-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/password-placeholder-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-option-delete-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-focus-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-value-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/disabled-select-change-index-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-table-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/formmove2-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-scrollbar-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/file-input-disabled-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-disabled-appearance-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label03-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-dirty-parent-pref-widths-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-width-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/floating-textfield-relayout-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-generated-content-expected.png M    platform/chromium-win/LayoutTests/fast/forms/indeterminate-expected.png M    platform/chromium-win/LayoutTests/fast/clip/014-expected.png M    platform/chromium-win/LayoutTests/fast/clip/014-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/empty-cells-expected.png M    platform/chromium-win/LayoutTests/fast/table/height-percent-test-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/text-field-baseline-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/table-display-types-expected.png M    platform/chromium-win/LayoutTests/fast/table/wide-colspan-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/remove-td-display-none-expected.png M    platform/chromium-win/LayoutTests/fast/table/overflowHidden-expected.png M    platform/chromium-win/LayoutTests/fast/table/height-percent-test-expected.png M    platform/chromium-win/LayoutTests/fast/table/wide-column-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/034-expected.png M    platform/chromium-win/LayoutTests/fast/table/prepend-in-anonymous-table-expected.png M    platform/chromium-win/LayoutTests/fast/table/colspanMinWidth-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/empty-cells-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/003-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/frame-and-rules-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/wide-column-expected.png M    platform/chromium-win/LayoutTests/fast/table/colspanMinWidth-expected.png M    platform/chromium-win/LayoutTests/fast/table/023-expected.png M    platform/chromium-win/LayoutTests/fast/table/border-collapsing/004-expected.png M    platform/chromium-win/LayoutTests/fast/table/border-collapsing/004-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/text-field-baseline-expected.png M    platform/chromium-win/LayoutTests/fast/table/spanOverlapRepaint-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/spanOverlapRepaint-expected.png M    platform/chromium-win/LayoutTests/fast/table/wide-colspan-expected.png M    platform/chromium-win/LayoutTests/fast/table/append-cells2-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/edge-offsets-expected.png M    platform/chromium-win/LayoutTests/fast/table/remove-td-display-none-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/040-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/023-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/table-display-types-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/overflowHidden-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/003-expected.png M    platform/chromium-win/LayoutTests/fast/table/frame-and-rules-expected.png M    platform/chromium-win/LayoutTests/fast/table/040-expected.png M    platform/chromium-win/LayoutTests/fast/table/prepend-in-anonymous-table-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/append-cells2-expected.png M    platform/chromium-win/LayoutTests/fast/table/034-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/edge-offsets-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/line-height-expected.png M    platform/chromium-win/LayoutTests/fast/css/font_property_normal-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/border-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/only-of-type-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/rtl-ordering-expected.png M    platform/chromium-win/LayoutTests/fast/css/hsl-color-expected.png M    platform/chromium-win/LayoutTests/fast/css/text-overflow-ellipsis-expected.png M    platform/chromium-win/LayoutTests/fast/css/percentage-non-integer-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/border-height-expected.png M    platform/chromium-win/LayoutTests/fast/css/pseudo-cache-stale-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/text-overflow-ellipsis-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/first-child-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/percentage-non-integer-expected.png M    platform/chromium-win/LayoutTests/fast/css/word-space-extra-expected.png M    platform/chromium-win/LayoutTests/fast/css/continuationCrash-expected.png M    platform/chromium-win/LayoutTests/fast/css/only-child-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/first-of-type-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/nested-floating-relative-position-percentages-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/text-overflow-ellipsis-strict-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/005-expected.png M    platform/chromium-win/LayoutTests/fast/css/text-overflow-ellipsis-strict-expected.png M    platform/chromium-win/LayoutTests/fast/css/line-height-overflow-expected.png M    platform/chromium-win/LayoutTests/fast/css/pseudo-cache-stale-expected.png M    platform/chromium-win/LayoutTests/fast/css/rtl-ordering-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/margin-top-bottom-dynamic-expected.png M    platform/chromium-win/LayoutTests/fast/css/font_property_normal-expected.png M    platform/chromium-win/LayoutTests/fast/css/005-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/last-of-type-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/last-child-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/MarqueeLayoutTest-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/only-of-type-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/resize-corner-tracking-expected.png M    platform/chromium-win/LayoutTests/fast/css/MarqueeLayoutTest-expected.png M    platform/chromium-win/LayoutTests/fast/css/empty-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/continuationCrash-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/hsl-color-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/nested-floating-relative-position-percentages-expected.png M    platform/chromium-win/LayoutTests/fast/css/last-of-type-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/last-child-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/resize-corner-tracking-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/line-height-overflow-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/margin-top-bottom-dynamic-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/first-of-type-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/word-space-extra-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/positioned-overflow-scroll-expected.png M    platform/chromium-win/LayoutTests/fast/css/positioned-overflow-scroll-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/first-child-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/only-child-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/empty-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/line-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/box-sizing/box-sizing-expected.checksum M    platform/chromium-win/LayoutTests/fast/box-sizing/box-sizing-expected.png M    platform/chromium-win/LayoutTests/fast/block/basic/011-expected.png M    platform/chromium-win/LayoutTests/fast/block/basic/016-expected.png M    platform/chromium-win/LayoutTests/fast/block/basic/016-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/basic/fieldset-stretch-to-legend-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/basic/011-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/basic/fieldset-stretch-to-legend-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/051-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/047-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/inline-block-relposition-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/047-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/relative-overflow-replaced-float-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/complex-percentage-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/relative-overflow-block-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/fixed-positioning-scrollbar-bug-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/complex-percentage-height-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/relative-overflow-replaced-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/relative-overflow-replaced-float-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/055-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/relative-overflow-block-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/fixed-positioning-scrollbar-bug-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/inline-block-relposition-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/auto/007-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/auto/007-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/051-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/055-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/relative-overflow-replaced-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/035-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/019-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/026-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/br-with-clear-2-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/032-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/028-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/035-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/013-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/025-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/float-avoidance-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/br-with-clear-2-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/027-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/relative-painted-twice-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/032-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/019-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/027-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/028-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/008-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/avoidance-percent-width-strict-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/033-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/avoidance-percent-width-strict-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/021-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/033-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/021-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/025-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/008-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/026-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/013-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/relative-painted-twice-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/float-avoidance-expected.png M    platform/chromium-win/LayoutTests/fast/block/margin-collapse/104-expected.png M    platform/chromium-win/LayoutTests/fast/block/margin-collapse/103-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/margin-collapse/104-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/margin-collapse/103-expected.png M    platform/chromium-win/LayoutTests/fast/block/margin-collapse/empty-clear-blocks-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/margin-collapse/empty-clear-blocks-expected.png M    platform/chromium-win/LayoutTests/fast/parser/bad-xml-slash-expected.checksum M    platform/chromium-win/LayoutTests/fast/parser/open-comment-in-textarea-expected.checksum M    platform/chromium-win/LayoutTests/fast/parser/document-write-option-expected.checksum M    platform/chromium-win/LayoutTests/fast/parser/entity-comment-in-textarea-expected.png M    platform/chromium-win/LayoutTests/fast/parser/bad-xml-slash-expected.png M    platform/chromium-win/LayoutTests/fast/parser/open-comment-in-textarea-expected.png M    platform/chromium-win/LayoutTests/fast/parser/comment-in-textarea-expected.checksum M    platform/chromium-win/LayoutTests/fast/parser/entity-comment-in-textarea-expected.checksum M    platform/chromium-win/LayoutTests/fast/parser/document-write-option-expected.png M    platform/chromium-win/LayoutTests/fast/parser/comment-in-textarea-expected.png M    platform/chromium-win/LayoutTests/fast/layers/overflow-scroll-auto-switch-expected.png M    platform/chromium-win/LayoutTests/fast/layers/scroll-rect-to-visible-expected.png M    platform/chromium-win/LayoutTests/fast/layers/scroll-rect-to-visible-expected.checksum M    platform/chromium-win/LayoutTests/fast/layers/overflow-scroll-auto-switch-expected.checksum M    platform/chromium-win/LayoutTests/fast/backgrounds/background-inherit-color-bug-expected.png M    platform/chromium-win/LayoutTests/fast/backgrounds/background-inherit-color-bug-expected.checksum M    platform/chromium-win/LayoutTests/fast/backgrounds/size/backgroundSize15-expected.checksum M    platform/chromium-win/LayoutTests/fast/backgrounds/size/backgroundSize15-expected.png M    platform/chromium-win/LayoutTests/fast/backgrounds/repeat/negative-offset-repeat-transformed-expected.checksum M    platform/chromium-win/LayoutTests/fast/backgrounds/repeat/negative-offset-repeat-transformed-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/subtree-root-skipped-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-5-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-5-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/fixed-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/layout-state-only-positioned-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/control-clip-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/overflow-scroll-delete-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-10-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-4-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-7-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/renderer-destruction-by-invalidateSelection-crash-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/selection-gap-overflow-scroll-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/dynamic-table-vertical-alignment-change-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-3-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/selection-gap-overflow-scroll-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/fixed-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-10-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/renderer-destruction-by-invalidateSelection-crash-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/search-field-cancel-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/layout-state-only-positioned-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/overflow-scroll-delete-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-7-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/control-clip-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-3-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/dynamic-table-vertical-alignment-change-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/search-field-cancel-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/subtree-root-skipped-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-4-expected.checksum M    platform/chromium-win/LayoutTests/fast/canvas/canvas-bg-expected.png M    platform/chromium-win/LayoutTests/fast/canvas/image-object-in-canvas-expected.png M    platform/chromium-win/LayoutTests/fast/canvas/canvas-text-alignment-expected.checksum M    platform/chromium-win/LayoutTests/fast/canvas/canvas-text-alignment-expected.png M    platform/chromium-win/LayoutTests/fast/canvas/image-object-in-canvas-expected.checksum M    platform/chromium-win/LayoutTests/fast/canvas/canvas-bg-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/onlyCommentInIFrame-expected.png M    platform/chromium-win/LayoutTests/fast/frames/iframe-scrolling-attribute-expected.png M    platform/chromium-win/LayoutTests/fast/frames/valid-expected.png M    platform/chromium-win/LayoutTests/fast/frames/inline-object-inside-frameset-expected.png M    platform/chromium-win/LayoutTests/fast/frames/iframe-scrolling-attribute-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/onlyCommentInIFrame-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/valid-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/inline-object-inside-frameset-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/invalid-expected.png M    platform/chromium-win/LayoutTests/fast/frames/frame-scrolling-attribute-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/invalid-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/frame-scrolling-attribute-expected.png M    platform/chromium-win/LayoutTests/fast/reflections/reflection-direction-expected.png M    platform/chromium-win/LayoutTests/fast/reflections/reflection-direction-expected.checksum M    platform/chromium-win/LayoutTests/transforms/2d/zoom-menulist-expected.checksum M    platform/chromium-win/LayoutTests/transforms/2d/zoom-menulist-expected.png M    platform/chromium-win/LayoutTests/svg/text/text-intro-05-t-expected.checksum M    platform/chromium-win/LayoutTests/svg/text/multichar-glyph-expected.checksum M    platform/chromium-win/LayoutTests/svg/text/text-intro-05-t-expected.txt M    platform/chromium-win/LayoutTests/svg/text/multichar-glyph-expected.png M    platform/chromium-win/LayoutTests/svg/text/text-intro-05-t-expected.png M    platform/chromium-win/LayoutTests/svg/text/kerning-expected.checksum M    platform/chromium-win/LayoutTests/svg/text/text-fonts-01-t-expected.png M    platform/chromium-win/LayoutTests/svg/text/kerning-expected.png M    platform/chromium-win/LayoutTests/svg/text/text-fonts-01-t-expected.checksum M    platform/chromium-win/LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t-expected.txt M    platform/chromium-win/LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t-expected.checksum M    platform/chromium-win/LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t-expected.png M    platform/chromium-win/LayoutTests/svg/W3C-SVG-1.1/text-fonts-01-t-expected.png M    platform/chromium-win/LayoutTests/svg/W3C-SVG-1.1/text-fonts-01-t-expected.checksum M    platform/chromium-win/LayoutTests/svg/hixie/links/003-broken-expected.checksum M    platform/chromium-win/LayoutTests/svg/hixie/links/003-broken-expected.png M    platform/chromium-win/LayoutTests/svg/hixie/error/012-expected.png M    platform/chromium-win/LayoutTests/svg/hixie/error/012-expected.checksum M    platform/chromium-win/LayoutTests/svg/hixie/mixed/003-expected.png M    platform/chromium-win/LayoutTests/svg/hixie/mixed/003-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/altglyph-expected.png M    platform/chromium-win/LayoutTests/svg/custom/scrolling-embedded-svg-file-image-repaint-problem-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/junk-data-expected.png M    platform/chromium-win/LayoutTests/svg/custom/altglyph-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/missing-xlink-expected.png M    platform/chromium-win/LayoutTests/svg/custom/junk-data-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/inline-svg-in-xhtml-expected.png M    platform/chromium-win/LayoutTests/svg/custom/scrolling-embedded-svg-file-image-repaint-problem-expected.png M    platform/chromium-win/LayoutTests/svg/custom/invisible-text-after-scrolling-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/foreign-object-skew-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/missing-xlink-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/invisible-text-after-scrolling-expected.png M    platform/chromium-win/LayoutTests/svg/custom/inline-svg-in-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/foreign-object-skew-expected.png M    platform/chromium-win/LayoutTests/css2.1/t0905-c5525-fltclr-00-c-ag-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t1508-c527-font-07-b-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t080301-c411-vt-mrgn-00-b-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t0905-c5525-fltwidth-00-c-g-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t1508-c527-font-07-b-expected.png M    platform/chromium-win/LayoutTests/css2.1/t0905-c5526-fltclr-00-c-ag-expected.png M    platform/chromium-win/LayoutTests/css2.1/t1202-counters-09-b-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t1202-counter-09-b-expected.png M    platform/chromium-win/LayoutTests/css2.1/t140201-c535-bg-fixd-00-b-g-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t09-c5526c-display-00-e-expected.png M    platform/chromium-win/LayoutTests/css2.1/t1002-c5523-width-02-b-g-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t080301-c411-vt-mrgn-00-b-expected.png M    platform/chromium-win/LayoutTests/css2.1/t140201-c535-bg-fixd-00-b-g-expected.png M    platform/chromium-win/LayoutTests/css2.1/t1002-c5523-width-02-b-g-expected.png M    platform/chromium-win/LayoutTests/css2.1/t0905-c5526-fltclr-00-c-ag-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t140201-c537-bgfxps-00-c-ag-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t1202-counters-09-b-expected.png M    platform/chromium-win/LayoutTests/css2.1/t0905-c5525-fltmrgn-00-c-ag-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t0803-c5505-mrgn-02-c-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t1202-counter-09-b-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t0803-c5505-mrgn-02-c-expected.png M    platform/chromium-win/LayoutTests/css2.1/t0905-c5525-fltclr-00-c-ag-expected.png M    platform/chromium-win/LayoutTests/css2.1/t09-c5526c-display-00-e-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t0905-c5525-fltmrgn-00-c-ag-expected.png M    platform/chromium-win/LayoutTests/css2.1/t1202-counters-08-b-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t140201-c537-bgfxps-00-c-ag-expected.png M    platform/chromium-win/LayoutTests/css2.1/t0905-c5525-fltwidth-00-c-g-expected.png M    platform/chromium-win/LayoutTests/css2.1/t1202-counters-08-b-expected.png M    platform/chromium-win/LayoutTests/css1/color_and_background/background_repeat-expected.checksum M    platform/chromium-win/LayoutTests/css1/color_and_background/background-expected.checksum M    platform/chromium-win/LayoutTests/css1/color_and_background/background_position-expected.png M    platform/chromium-win/LayoutTests/css1/color_and_background/background_attachment-expected.checksum M    platform/chromium-win/LayoutTests/css1/color_and_background/background-expected.png M    platform/chromium-win/LayoutTests/css1/color_and_background/background_repeat-expected.png M    platform/chromium-win/LayoutTests/css1/color_and_background/background_position-expected.checksum M    platform/chromium-win/LayoutTests/css1/color_and_background/background_attachment-expected.png M    platform/chromium-win/LayoutTests/css1/pseudo/firstline-expected.png M    platform/chromium-win/LayoutTests/css1/pseudo/pseudo_elements_in_selectors-expected.png M    platform/chromium-win/LayoutTests/css1/pseudo/multiple_pseudo_elements-expected.png M    platform/chromium-win/LayoutTests/css1/pseudo/firstletter-expected.png M    platform/chromium-win/LayoutTests/css1/pseudo/anchor-expected.png M    platform/chromium-win/LayoutTests/css1/pseudo/firstline-expected.checksum M    platform/chromium-win/LayoutTests/css1/pseudo/pseudo_elements_in_selectors-expected.checksum M    platform/chromium-win/LayoutTests/css1/pseudo/multiple_pseudo_elements-expected.checksum M    platform/chromium-win/LayoutTests/css1/pseudo/firstletter-expected.checksum M    platform/chromium-win/LayoutTests/css1/pseudo/anchor-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/text_transform-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/line_height-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/word_spacing-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/vertical_align-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/text_indent-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/letter_spacing-expected.png M    platform/chromium-win/LayoutTests/css1/text_properties/text_decoration-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/text_transform-expected.png M    platform/chromium-win/LayoutTests/css1/text_properties/line_height-expected.png M    platform/chromium-win/LayoutTests/css1/text_properties/word_spacing-expected.png M    platform/chromium-win/LayoutTests/css1/text_properties/letter_spacing-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/vertical_align-expected.png M    platform/chromium-win/LayoutTests/css1/text_properties/text_indent-expected.png M    platform/chromium-win/LayoutTests/css1/text_properties/text_decoration-expected.png M    platform/chromium-win/LayoutTests/css1/basic/id_as_selector-expected.checksum M    platform/chromium-win/LayoutTests/css1/basic/containment-expected.checksum M    platform/chromium-win/LayoutTests/css1/basic/comments-expected.checksum M    platform/chromium-win/LayoutTests/css1/basic/class_as_selector-expected.checksum M    platform/chromium-win/LayoutTests/css1/basic/inheritance-expected.checksum M    platform/chromium-win/LayoutTests/css1/basic/containment-expected.png M    platform/chromium-win/LayoutTests/css1/basic/id_as_selector-expected.png M    platform/chromium-win/LayoutTests/css1/basic/comments-expected.png M    platform/chromium-win/LayoutTests/css1/basic/class_as_selector-expected.png M    platform/chromium-win/LayoutTests/css1/basic/inheritance-expected.png M    platform/chromium-win/LayoutTests/css1/font_properties/font_size-expected.png M    platform/chromium-win/LayoutTests/css1/font_properties/font-expected.png M    platform/chromium-win/LayoutTests/css1/font_properties/font_family-expected.png M    platform/chromium-win/LayoutTests/css1/font_properties/font_weight-expected.png M    platform/chromium-win/LayoutTests/css1/font_properties/font_size-expected.checksum M    platform/chromium-win/LayoutTests/css1/font_properties/font-expected.checksum M    platform/chromium-win/LayoutTests/css1/font_properties/font_family-expected.checksum M    platform/chromium-win/LayoutTests/css1/font_properties/font_weight-expected.checksum M    platform/chromium-win/LayoutTests/css1/units/color_units-expected.checksum M    platform/chromium-win/LayoutTests/css1/units/color_units-expected.png M    platform/chromium-win/LayoutTests/css1/units/length_units-expected.checksum M    platform/chromium-win/LayoutTests/css1/units/length_units-expected.png M    platform/chromium-win/LayoutTests/css1/cascade/cascade_order-expected.png M    platform/chromium-win/LayoutTests/css1/cascade/cascade_order-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/margin_top-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/float_margin-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_top_width-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_top-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/margin_bottom-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/float_margin-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding_left-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_left_width-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/clear_float-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/float_elements_in_series-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/padding_top-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/margin_right-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/margin_top-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/margin_right-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/acid_test-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/float_on_text_elements-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_right_width-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding_top-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/padding_bottom-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/clear-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/padding_bottom-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/clear_float-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/acid_test-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_bottom_width-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding_right-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_right_inline-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_left-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/margin_inline-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/margin-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_top_width-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_bottom-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/padding_inline-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_style-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_width-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/margin-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/float_elements_in_series-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/width-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/height-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/margin_left-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_style-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_bottom_width-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/margin_bottom-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_left_width-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_left-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_right_inline-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/width-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding_right-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/margin_left-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/height-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/margin_inline-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/padding_inline-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/clear-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_width-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding_left-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_top-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/float_on_text_elements-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_right_width-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_bottom-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding-expected.checksum M    platform/chromium-win/LayoutTests/css1/conformance/forward_compatible_parsing-expected.checksum M    platform/chromium-win/LayoutTests/css1/conformance/forward_compatible_parsing-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/floating_elements-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/horizontal_formatting-expected.checksum M    platform/chromium-win/LayoutTests/css1/formatting_model/vertical_formatting-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/height_of_lines-expected.checksum M    platform/chromium-win/LayoutTests/css1/formatting_model/inline_elements-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/replaced_elements-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/floating_elements-expected.checksum M    platform/chromium-win/LayoutTests/css1/formatting_model/vertical_formatting-expected.checksum M    platform/chromium-win/LayoutTests/css1/formatting_model/horizontal_formatting-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/height_of_lines-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/inline_elements-expected.checksum M    platform/chromium-win/LayoutTests/css1/formatting_model/replaced_elements-expected.checksum M    platform/chromium-win/LayoutTests/css1/classification/display-expected.png M    platform/chromium-win/LayoutTests/css1/classification/white_space-expected.checksum M    platform/chromium-win/LayoutTests/css1/classification/list_style_type-expected.checksum M    platform/chromium-win/LayoutTests/css1/classification/display-expected.checksum M    platform/chromium-win/LayoutTests/css1/classification/white_space-expected.png M    platform/chromium-win/LayoutTests/css1/classification/list_style_type-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug19526-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug14007-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug58402-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug80762-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug67915-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug91057-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug131020-3-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug10216-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug106966-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug32205-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug80762-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug10216-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug1055-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug220653-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug131020-3-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug7243-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug2479-5-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug32205-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug7243-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug1055-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug58402-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug92647-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug1725-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug92647-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug14007-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug22122-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug67915-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug85016-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug89315-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug10140-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug101759-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug89315-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug2479-5-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug14007-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug220653-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug19526-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug106966-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug1725-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug22122-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug14007-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug85016-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug91057-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug10140-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug101759-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/other/empty_cells-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/other/empty_cells-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/other/test4-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/other/test4-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/col_span2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/columns-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/captions1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/captions2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/backgrounds-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/conflicts-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/captions3-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/standards1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/captions1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/col_span2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/captions2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/backgrounds-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/columns-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/captions3-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/standards1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/conflicts-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/collapsing_borders/bug41262-6-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/collapsing_borders/bug41262-5-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/collapsing_borders/bug41262-6-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/collapsing_borders/bug41262-5-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_dirty_reflow_tbody-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-cell-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-column-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-column-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_fixed-bg-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-column-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-row-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-row-group-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-column-group-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_style_reflow_row_sibling-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_layers-show-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-cell-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-row-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_dirty_reflow_tbody-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-quirks-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-row-group-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-column-group-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_layers-hide-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-row-group-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_fixed-bg-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-quirks-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-cell-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-row-group-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-column-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_dirty_reflow_row-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_layers-hide-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_style_reflow_tbody_sibling-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-column-group-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_dirty_reflow_row-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_style_reflow_row_sibling-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-cell-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_layers-show-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-row-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_style_reflow_tbody_sibling-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-row-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-column-group-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/dom/tableDom-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/dom/tableDom-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug27038-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug194024-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug10269-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-4-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug26178-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-3-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug60749-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug73321-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug92647-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug7112-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug7112-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug23151-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug52505-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug29314-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug43039-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug12384-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug51727-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug26178-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1318-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1302-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug3977-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug131020_iframe-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug22019-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug51727-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug137388-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug3977-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug131020_iframe-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug29326-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug68912-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1302-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug43854-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug120364-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-4-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-3-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug29326-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug33855-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug27038-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug113235-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug12384-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug7112-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug4527-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug7112-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug28928-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug52506-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46480-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug7342-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1055-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug113235-3-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug44505-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug96334-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug149275-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2997-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug10296-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug56405-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug149275-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug131020-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug43039-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46480-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46368-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug92647-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug23151-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug11944-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug50695-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46368-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug92143-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug30559-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug8858-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2997-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug52506-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug120364-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2947-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/45621-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug625-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug30692-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug39209-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug30559-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug18359-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug44505-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug22019-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46480-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1055-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug4382-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug4429-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug73321-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug4429-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug59354-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug194024-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug10269-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug7342-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug24200-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1188-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46480-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46368-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug33855-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46368-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug11944-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug5797-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug5835-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1318-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug96334-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug30692-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug52505-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug113235-3-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug56405-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug43854-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug92143-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug8858-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug4382-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1188-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug67915-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug625-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug32205-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug55545-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug51037-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug51037-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2947-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug18359-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug138725-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/45621-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug113235-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug5835-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug138725-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug59354-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug38916-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug28928-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug60749-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug5797-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug32205-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug29314-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug101674-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug131020-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug10296-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug55545-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug650-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug101674-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug50695-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug4527-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug137388-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug68912-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug39209-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug67915-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug38916-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug24200-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug650-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/wa_table_tr_align-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/test3-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/move_row-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/nestedTables-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/cell_widths-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/test3-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/test6-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/move_row-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/cell_widths-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/test6-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/wa_table_thtd_rowspan-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/wa_table_tr_align-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/wa_table_thtd_rowspan-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/nestedTables-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/borders-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/row_span-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/col_widths_auto_fix-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/bloomberg-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/cell_heights-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/col_widths_auto_fix-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/captions-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/margins-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/nested1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/cell_heights-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/one_row-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/col_widths_fix_fixPer-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/row_span-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/col_widths_fix_fixPer-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/bloomberg-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/borders-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/captions-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/nested1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/col_span-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/col_span-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/margins-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/one_row-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/collapsing_borders/bug41262-4-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/collapsing_borders/bug41262-3-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/collapsing_borders/bug41262-4-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/collapsing_borders/bug41262-3-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_bgcolor_rgb-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_table_bgcolor_name-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-row-group-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_nowrap-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_layers-opacity-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_bgcolor_name-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_table_bgcolor_rgb-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_height-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_nowrap-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-row-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_layers-opacity-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-cell-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_table_bgcolor_name-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_bgcolor_rgb-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_height-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_height-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_index-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_bgcolor_name-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-column-group-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_tr_bgcolor_rgb-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_tr_bgcolor_name-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_tr_bgcolor_rgb-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-column-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_bgcolor_rgb-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_tr_bgcolor_name-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_nowrap-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-column-group-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_position-table-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_bgcolor_rgb-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-row-group-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-column-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_bgcolor_name-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_index-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-cell-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_height-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_bgcolor_name-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_position-table-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-row-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_table_bgcolor_rgb-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_nowrap-expected.png M    platform/chromium-win/chrome/fast/forms/basic-textareas-expected.checksum M    platform/chromium-win/chrome/fast/forms/basic-selects-expected.checksum M    platform/chromium-win/chrome/fast/forms/basic-inputs-expected.png M    platform/chromium-win/chrome/fast/forms/basic-textareas-quirks-expected.checksum M    platform/chromium-win/chrome/fast/forms/basic-buttons-expected.png M    platform/chromium-win/chrome/fast/forms/basic-inputs-expected.checksum M    platform/chromium-win/chrome/fast/forms/basic-textareas-expected.png M    platform/chromium-win/chrome/fast/forms/basic-selects-expected.png M    platform/chromium-win/chrome/fast/forms/basic-buttons-expected.checksum M    platform/chromium-win/chrome/fast/forms/basic-textareas-quirks-expected.png	none			svn://svn.chromium.org/chrome/trunk/src@26204 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/data/layout_tests/platform/chromium-win/chrome/fast/forms/basic-textareas-quirks-expected.png b/webkit/data/layout_tests/platform/chromium-win/chrome/fast/forms/basic-textareas-quirks-expected.png <newline>index fadcb98..8214052 100644 <newline>Binary files a/webkit/data/layout_tests/platform/chromium-win/chrome/fast/forms/basic-textareas-quirks-expected.png and b/webkit/data/layout_tests/platform/chromium-win/chrome/fast/forms/basic-textareas-quirks-expected.png differ
ade99b3c2b022c5ae38b40369f1b3604f660942	dpranke@google.com <dpranke@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Sep 15 11:23:59 2009 +0000	Check in new baselines w/ generic theme for Windows, enabling layout tests on both XP and Vista to work. R=none TEST=none A    platform/chromium-win-vista A    platform/chromium-win-xp/LayoutTests A    platform/chromium-win-xp/LayoutTests/svg A    platform/chromium-win-xp/LayoutTests/svg/text A    platform/chromium-win-xp/LayoutTests/svg/text/text-intro-05-t-expected.checksum AM   platform/chromium-win-xp/LayoutTests/svg/text/text-intro-05-t-expected.png A    platform/chromium-win-xp/LayoutTests/svg/text/text-fonts-01-t-expected.checksum AM   platform/chromium-win-xp/LayoutTests/svg/text/text-fonts-01-t-expected.png A    platform/chromium-win-xp/LayoutTests/svg/text/text-intro-05-t-expected.txt A    platform/chromium-win-xp/LayoutTests/svg/W3C-SVG-1.1 A    platform/chromium-win-xp/LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t-expected.checksum AM   platform/chromium-win-xp/LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t-expected.png A    platform/chromium-win-xp/LayoutTests/svg/W3C-SVG-1.1/text-fonts-01-t-expected.checksum AM   platform/chromium-win-xp/LayoutTests/svg/W3C-SVG-1.1/text-fonts-01-t-expected.png A    platform/chromium-win-xp/LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t-expected.txt A    platform/chromium-win-xp/LayoutTests/css2.1 AM   platform/chromium-win-xp/LayoutTests/css2.1/t1202-counters-09-b-expected.png A    platform/chromium-win-xp/LayoutTests/css2.1/t1202-counter-09-b-expected.checksum AM   platform/chromium-win-xp/LayoutTests/css2.1/t1202-counter-09-b-expected.png A    platform/chromium-win-xp/LayoutTests/css2.1/t1202-counters-09-b-expected.checksum A    platform/chromium-win-xp/LayoutTests/fast A    platform/chromium-win-xp/LayoutTests/fast/replaced A    platform/chromium-win-xp/LayoutTests/fast/replaced/border-radius-clip-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/replaced/border-radius-clip-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text A    platform/chromium-win-xp/LayoutTests/fast/text/bidi-embedding-pop-and-push-same-expected.checksum A    platform/chromium-win-xp/LayoutTests/fast/text/complex-text-opacity-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/text/bidi-embedding-pop-and-push-same-expected.png AM   platform/chromium-win-xp/LayoutTests/fast/text/complex-text-opacity-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/cg-vs-atsui-expected.checksum A    platform/chromium-win-xp/LayoutTests/fast/text/atsui-spacing-features-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/text/cg-vs-atsui-expected.png AM   platform/chromium-win-xp/LayoutTests/fast/text/atsui-spacing-features-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/international A    platform/chromium-win-xp/LayoutTests/fast/text/international/thai-line-breaks-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/text/international/danda-space-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/international/hindi-whitespace-expected.checksum A    platform/chromium-win-xp/LayoutTests/fast/text/international/complex-character-based-fallback-expected.txt A    platform/chromium-win-xp/LayoutTests/fast/text/international/khmer-selection-expected.checksum A    platform/chromium-win-xp/LayoutTests/fast/text/international/thai-baht-space-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/text/international/complex-character-based-fallback-expected.png AM   platform/chromium-win-xp/LayoutTests/fast/text/international/hindi-spacing-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/international/danda-space-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/text/international/thai-line-breaks-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/international/khmer-selection-expected.txt AM   platform/chromium-win-xp/LayoutTests/fast/text/international/hindi-whitespace-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/international/complex-character-based-fallback-expected.checksum AM   platform/chromium-win-xp/LayoutTests/fast/text/international/khmer-selection-expected.png AM   platform/chromium-win-xp/LayoutTests/fast/text/international/thai-baht-space-expected.png A    platform/chromium-win-xp/LayoutTests/fast/text/international/hindi-spacing-expected.checksum A    platform/chromium-win-xp/LayoutTests/fast/text/international/danda-space-expected.txt A    platform/chromium-win-xp/LayoutTests/fast/forms M    platform/chromium-win/LayoutTests/http/tests/navigation/post-frames-expected.png M    platform/chromium-win/LayoutTests/http/tests/navigation/postredirect-frames-expected.checksum M    platform/chromium-win/LayoutTests/http/tests/navigation/error404-frames-expected.checksum M    platform/chromium-win/LayoutTests/http/tests/navigation/javascriptlink-frames-expected.checksum M    platform/chromium-win/LayoutTests/http/tests/navigation/post-frames-expected.checksum M    platform/chromium-win/LayoutTests/http/tests/navigation/javascriptlink-frames-expected.png M    platform/chromium-win/LayoutTests/http/tests/navigation/error404-subframeload-expected.checksum M    platform/chromium-win/LayoutTests/http/tests/navigation/anchor-frames-expected.checksum M    platform/chromium-win/LayoutTests/http/tests/navigation/postredirect-frames-expected.png M    platform/chromium-win/LayoutTests/http/tests/navigation/error404-subframeload-expected.png M    platform/chromium-win/LayoutTests/http/tests/navigation/anchor-frames-expected.png M    platform/chromium-win/LayoutTests/http/tests/navigation/error404-frames-expected.png M    platform/chromium-win/LayoutTests/webarchive/test-duplicate-resources-expected.png M    platform/chromium-win/LayoutTests/webarchive/test-duplicate-resources-expected.checksum M    platform/chromium-win/LayoutTests/editing/inserting/5607069-3-expected.checksum M    platform/chromium-win/LayoutTests/editing/inserting/insert-div-023-expected.checksum M    platform/chromium-win/LayoutTests/editing/inserting/5607069-3-expected.png M    platform/chromium-win/LayoutTests/editing/inserting/insert-div-023-expected.png M    platform/chromium-win/LayoutTests/editing/inserting/5607069-2-expected.png M    platform/chromium-win/LayoutTests/editing/inserting/before-after-input-element-expected.png M    platform/chromium-win/LayoutTests/editing/inserting/typing-tab-designmode-forms-expected.png M    platform/chromium-win/LayoutTests/editing/inserting/4960120-1-expected.checksum M    platform/chromium-win/LayoutTests/editing/inserting/typing-tab-designmode-forms-expected.checksum M    platform/chromium-win/LayoutTests/editing/inserting/4960120-1-expected.png M    platform/chromium-win/LayoutTests/editing/inserting/before-after-input-element-expected.checksum M    platform/chromium-win/LayoutTests/editing/inserting/5607069-2-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/nested-blocks-with-text-area-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/nested-blocks-with-text-field-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/4944770-2-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/4944770-1-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/4944770-1-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/input-field-1-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/4944770-2-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/4806874-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/drop-link-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/select-element-1-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/4806874-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/4641033-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/pasting-tabs-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/input-field-1-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/select-element-1-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/4641033-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/nested-blocks-with-text-area-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/nested-blocks-with-text-field-expected.checksum M    platform/chromium-win/LayoutTests/editing/pasteboard/drop-link-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/pasting-tabs-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/drop-text-without-selection-expected.png M    platform/chromium-win/LayoutTests/editing/pasteboard/drop-text-without-selection-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/focus_editable_html-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-all-002-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/4895428-3-expected.png M    platform/chromium-win/LayoutTests/editing/selection/4975120-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/caret-before-select-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-all-001-expected.png M    platform/chromium-win/LayoutTests/editing/selection/unrendered-003-expected.png M    platform/chromium-win/LayoutTests/editing/selection/iframe-expected.png M    platform/chromium-win/LayoutTests/editing/selection/drag-text-delay-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/4895428-3-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/drag-select-1-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-all-003-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/unrendered-001-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/5136696-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/select-box-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/3690703-2-expected.png M    platform/chromium-win/LayoutTests/editing/selection/unrendered-002-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-all-004-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/3690703-2-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/unrendered-002-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/5240265-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-element-paragraph-boundary-expected.png M    platform/chromium-win/LayoutTests/editing/selection/3690719-expected.png M    platform/chromium-win/LayoutTests/editing/selection/5136696-expected.png M    platform/chromium-win/LayoutTests/editing/selection/replaced-boundaries-3-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-element-paragraph-boundary-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/caret-before-select-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/5240265-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/unrendered-003-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/unrendered-001-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-all-004-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-from-textfield-outwards-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/drag-select-1-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/unrendered-004-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/3690703-expected.png M    platform/chromium-win/LayoutTests/editing/selection/4397952-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/focus_editable_html-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/unrendered-005-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/select-all-003-expected.png M    platform/chromium-win/LayoutTests/editing/selection/4975120-expected.png M    platform/chromium-win/LayoutTests/editing/selection/unrendered-005-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-box-expected.png M    platform/chromium-win/LayoutTests/editing/selection/replaced-boundaries-3-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/drag-text-delay-expected.png M    platform/chromium-win/LayoutTests/editing/selection/4397952-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-from-textfield-outwards-expected.png M    platform/chromium-win/LayoutTests/editing/selection/3690719-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/select-all-002-expected.png M    platform/chromium-win/LayoutTests/editing/selection/unrendered-004-expected.png M    platform/chromium-win/LayoutTests/editing/selection/select-all-001-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/3690703-expected.checksum M    platform/chromium-win/LayoutTests/editing/selection/iframe-expected.checksum M    platform/chromium-win/LayoutTests/editing/deleting/delete-line-end-ws-001-expected.checksum M    platform/chromium-win/LayoutTests/editing/deleting/delete-after-span-ws-003-expected.checksum M    platform/chromium-win/LayoutTests/editing/deleting/delete-line-end-ws-001-expected.png M    platform/chromium-win/LayoutTests/editing/deleting/delete-after-span-ws-002-expected.png M    platform/chromium-win/LayoutTests/editing/deleting/delete-line-end-ws-002-expected.checksum M    platform/chromium-win/LayoutTests/editing/deleting/5168598-expected.png M    platform/chromium-win/LayoutTests/editing/deleting/delete-after-span-ws-001-expected.png M    platform/chromium-win/LayoutTests/editing/deleting/delete-after-span-ws-001-expected.checksum M    platform/chromium-win/LayoutTests/editing/deleting/delete-after-span-ws-002-expected.checksum M    platform/chromium-win/LayoutTests/editing/deleting/delete-line-end-ws-002-expected.png M    platform/chromium-win/LayoutTests/editing/deleting/delete-after-span-ws-003-expected.png M    platform/chromium-win/LayoutTests/editing/deleting/5168598-expected.checksum M    platform/chromium-win/LayoutTests/editing/spelling/spellcheck-attribute-expected.png M    platform/chromium-win/LayoutTests/editing/spelling/spellcheck-attribute-expected.checksum M    platform/chromium-win/LayoutTests/fonts/cursive-expected.checksum M    platform/chromium-win/LayoutTests/fonts/monospace-expected.checksum M    platform/chromium-win/LayoutTests/fonts/default-expected.checksum M    platform/chromium-win/LayoutTests/fonts/fantasy-expected.png M    platform/chromium-win/LayoutTests/fonts/serif-expected.png M    platform/chromium-win/LayoutTests/fonts/sans-serif-expected.png M    platform/chromium-win/LayoutTests/fonts/cursive-expected.png M    platform/chromium-win/LayoutTests/fonts/fantasy-expected.checksum M    platform/chromium-win/LayoutTests/fonts/default-expected.png M    platform/chromium-win/LayoutTests/fonts/monospace-expected.png M    platform/chromium-win/LayoutTests/fonts/serif-expected.checksum M    platform/chromium-win/LayoutTests/fonts/sans-serif-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-07-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-09-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-03-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-06-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-04-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-04-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-08-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-03-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-01-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-04-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-08-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-05-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-09-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-05-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-03-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-01-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-02-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-02-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-06-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-07-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-02-expected.checksum M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-04-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-width-absolute-02-expected.png M    platform/chromium-win/LayoutTests/fast/media/mq-relative-constraints-03-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-menulist-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/replaced-breaking-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-image-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/005-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-searchfield-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-textarea-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/border-radius-clip-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/replaced-breaking-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/three-selects-break-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-textarea-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-image-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-radio-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-textfield-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-radio-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-checkbox-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-checkbox-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-textfield-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-button-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/005-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-button-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-menulist-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/replaced-breaking-mixture-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/width100percent-searchfield-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/replaced-breaking-mixture-expected.checksum M    platform/chromium-win/LayoutTests/fast/replaced/border-radius-clip-expected.png M    platform/chromium-win/LayoutTests/fast/replaced/three-selects-break-expected.png M    platform/chromium-win/LayoutTests/fast/dynamic/anchor-lock-expected.png M    platform/chromium-win/LayoutTests/fast/dynamic/008-expected.png M    platform/chromium-win/LayoutTests/fast/dynamic/008-expected.checksum M    platform/chromium-win/LayoutTests/fast/dynamic/insert-before-table-part-in-continuation-expected.checksum M    platform/chromium-win/LayoutTests/fast/dynamic/insert-before-table-part-in-continuation-expected.png M    platform/chromium-win/LayoutTests/fast/dynamic/anchor-lock-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/large-text-composed-char-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/bidi-embedding-pop-and-push-same-expected.png M    platform/chromium-win/LayoutTests/fast/text/text-letter-spacing-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/danda-space-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-menulist-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/hindi-spacing-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/rtl-white-space-pre-wrap-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/khmer-selection-expected.txt M    platform/chromium-win/LayoutTests/fast/text/international/bidi-LDB-2-formatting-characters-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-neutral-run-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/bidi-european-terminators-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/khmer-selection-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/bidi-LDB-2-formatting-characters-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/bidi-listbox-atsui-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/thai-line-breaks-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-neutral-run-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/khmer-selection-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/thai-baht-space-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/hindi-whitespace-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/complex-character-based-fallback-expected.txt M    platform/chromium-win/LayoutTests/fast/text/international/thai-baht-space-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/danda-space-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/hindi-whitespace-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-european-terminators-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/danda-space-expected.txt M    platform/chromium-win/LayoutTests/fast/text/international/thai-line-breaks-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/rtl-white-space-pre-wrap-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-listbox-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/complex-character-based-fallback-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-menulist-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/complex-character-based-fallback-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/bidi-listbox-expected.png M    platform/chromium-win/LayoutTests/fast/text/international/bidi-listbox-atsui-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/international/hindi-spacing-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/drawBidiText-expected.png M    platform/chromium-win/LayoutTests/fast/text/complex-text-opacity-expected.png M    platform/chromium-win/LayoutTests/fast/text/softHyphen-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/drawBidiText-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/whitespace/024-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/whitespace/normal-after-nowrap-breaking-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/whitespace/024-expected.png M    platform/chromium-win/LayoutTests/fast/text/whitespace/pre-wrap-spaces-after-newline-expected.png M    platform/chromium-win/LayoutTests/fast/text/whitespace/normal-after-nowrap-breaking-expected.png M    platform/chromium-win/LayoutTests/fast/text/whitespace/pre-wrap-spaces-after-newline-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/wbr-expected.png M    platform/chromium-win/LayoutTests/fast/text/bidi-embedding-pop-and-push-same-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/atsui-spacing-features-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/wbr-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/complex-text-opacity-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/updateNewFont-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/text-letter-spacing-expected.png M    platform/chromium-win/LayoutTests/fast/text/textIteratorNilRenderer-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/line-breaks-expected.png M    platform/chromium-win/LayoutTests/fast/text/large-text-composed-char-expected.png M    platform/chromium-win/LayoutTests/fast/text/word-break-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/atsui-spacing-features-expected.png M    platform/chromium-win/LayoutTests/fast/text/textIteratorNilRenderer-expected.png M    platform/chromium-win/LayoutTests/fast/text/word-break-expected.png M    platform/chromium-win/LayoutTests/fast/text/updateNewFont-expected.png M    platform/chromium-win/LayoutTests/fast/text/cg-vs-atsui-expected.png M    platform/chromium-win/LayoutTests/fast/text/line-breaks-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/cg-vs-atsui-expected.checksum M    platform/chromium-win/LayoutTests/fast/text/line-breaks-expected.txt M    platform/chromium-win/LayoutTests/fast/text/softHyphen-expected.png M    platform/chromium-win/LayoutTests/fast/encoding/utf-16-little-endian-expected.png M    platform/chromium-win/LayoutTests/fast/encoding/utf-16-big-endian-expected.png M    platform/chromium-win/LayoutTests/fast/encoding/utf-16-little-endian-expected.checksum M    platform/chromium-win/LayoutTests/fast/encoding/utf-16-big-endian-expected.checksum M    platform/chromium-win/LayoutTests/fast/multicol/column-rules-stacking-expected.checksum M    platform/chromium-win/LayoutTests/fast/multicol/float-multicol-expected.checksum M    platform/chromium-win/LayoutTests/fast/multicol/columns-shorthand-parsing-expected.png M    platform/chromium-win/LayoutTests/fast/multicol/column-rules-stacking-expected.png M    platform/chromium-win/LayoutTests/fast/multicol/columns-shorthand-parsing-expected.checksum M    platform/chromium-win/LayoutTests/fast/multicol/float-multicol-expected.png M    platform/chromium-win/LayoutTests/fast/css-generated-content/014-expected.checksum M    platform/chromium-win/LayoutTests/fast/css-generated-content/014-expected.png M    platform/chromium-win/LayoutTests/fast/lists/li-br-expected.png M    platform/chromium-win/LayoutTests/fast/lists/001-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/alpha-list-wrap-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/w3-list-styles-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/alpha-list-wrap-expected.png M    platform/chromium-win/LayoutTests/fast/lists/ol-start-parsing-expected.png M    platform/chromium-win/LayoutTests/fast/lists/008-expected.png M    platform/chromium-win/LayoutTests/fast/lists/ol-start-parsing-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/001-expected.png M    platform/chromium-win/LayoutTests/fast/lists/olstart-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/dynamic-marker-crash-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/008-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/dynamic-marker-crash-expected.png M    platform/chromium-win/LayoutTests/fast/lists/li-br-expected.checksum M    platform/chromium-win/LayoutTests/fast/lists/w3-list-styles-expected.png M    platform/chromium-win/LayoutTests/fast/lists/olstart-expected.png M    platform/chromium-win/LayoutTests/fast/transforms/transformed-focused-text-input-expected.checksum M    platform/chromium-win/LayoutTests/fast/transforms/transformed-focused-text-input-expected.png M    platform/chromium-win/LayoutTests/fast/selectors/166-expected.checksum M    platform/chromium-win/LayoutTests/fast/selectors/166-expected.png M    platform/chromium-win/LayoutTests/fast/selectors/064-expected.checksum M    platform/chromium-win/LayoutTests/fast/selectors/064-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/overflow-auto-table-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/003-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/hit-test-overflow-controls-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/007-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/overflow-auto-table-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-x-y-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/003-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/005-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-text-hit-testing-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/scrollbar-position-update-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/007-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/unreachable-overflow-rtl-bug-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/overflow-auto-position-absolute-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/childFocusRingClip-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-x-y-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-text-hit-testing-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-rtl-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/float-in-relpositioned-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/scrollbar-position-update-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/008-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/scroll-nested-positioned-layer-in-overflow-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/table-overflow-float-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/image-selection-highlight-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/overflow-rtl-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/hit-test-overflow-controls-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-stacking-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/image-selection-highlight-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/005-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/overflow-auto-position-absolute-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-with-local-background-attachment-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/scrollRevealButton-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/002-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/006-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/008-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/scrollRevealButton-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/002-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/unreachable-overflow-rtl-bug-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/overflow-stacking-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/006-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/childFocusRingClip-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/clip-rects-fixed-ancestor-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/overflow-with-local-background-attachment-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/scroll-nested-positioned-layer-in-overflow-expected.checksum M    platform/chromium-win/LayoutTests/fast/overflow/float-in-relpositioned-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/table-overflow-float-expected.png M    platform/chromium-win/LayoutTests/fast/overflow/clip-rects-fixed-ancestor-expected.checksum M    platform/chromium-win/LayoutTests/fast/events/reveal-link-when-focused-expected.png M    platform/chromium-win/LayoutTests/fast/events/autoscroll-expected.checksum M    platform/chromium-win/LayoutTests/fast/events/reveal-link-when-focused-expected.checksum M    platform/chromium-win/LayoutTests/fast/events/context-no-deselect-expected.png M    platform/chromium-win/LayoutTests/fast/events/autoscroll-expected.png M    platform/chromium-win/LayoutTests/fast/events/label-focus-expected.png M    platform/chromium-win/LayoutTests/fast/events/pointer-events-2-expected.checksum M    platform/chromium-win/LayoutTests/fast/events/context-no-deselect-expected.checksum M    platform/chromium-win/LayoutTests/fast/events/label-focus-expected.checksum M    platform/chromium-win/LayoutTests/fast/events/pointer-events-2-expected.png M    platform/chromium-win/LayoutTests/fast/inline-block/inline-block-vertical-align-expected.png M    platform/chromium-win/LayoutTests/fast/inline-block/tricky-baseline-expected.checksum M    platform/chromium-win/LayoutTests/fast/inline-block/inline-block-vertical-align-expected.checksum M    platform/chromium-win/LayoutTests/fast/inline-block/tricky-baseline-expected.png M    platform/chromium-win/LayoutTests/fast/flexbox/flex-hang-expected.png M    platform/chromium-win/LayoutTests/fast/flexbox/009-expected.checksum M    platform/chromium-win/LayoutTests/fast/flexbox/016-expected.png M    platform/chromium-win/LayoutTests/fast/flexbox/016-expected.checksum M    platform/chromium-win/LayoutTests/fast/flexbox/009-expected.png M    platform/chromium-win/LayoutTests/fast/flexbox/flex-hang-expected.checksum M    platform/chromium-win/LayoutTests/fast/inline/inline-continuation-borders-expected.png M    platform/chromium-win/LayoutTests/fast/inline/positionedLifetime-expected.png M    platform/chromium-win/LayoutTests/fast/inline/long-wrapped-line-expected.checksum M    platform/chromium-win/LayoutTests/fast/inline/inline-borders-with-bidi-override-expected.png M    platform/chromium-win/LayoutTests/fast/inline/long-wrapped-line-expected.png M    platform/chromium-win/LayoutTests/fast/inline/inline-borders-with-bidi-override-expected.checksum M    platform/chromium-win/LayoutTests/fast/inline/inline-continuation-borders-expected.checksum M    platform/chromium-win/LayoutTests/fast/inline/positionedLifetime-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/004-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/006-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/001-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/003-declarative-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/004-declarative-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/003-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/005-declarative-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/005-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/006-declarative-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/007-declarative-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/007-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/001-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/002-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/003-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/004-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/005-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/003-declarative-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/006-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/007-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/005-declarative-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/007-declarative-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/001-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/003-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/005-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/007-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/002-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/004-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/006-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/001-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/002-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/003-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/004-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/005-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/006-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/007-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/004-declarative-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/006-declarative-expected.png M    platform/chromium-win/LayoutTests/fast/body-propagation/overflow/002-xhtml-expected.png M    platform/chromium-win/LayoutTests/fast/dom/isindex-002-expected.png M    platform/chromium-win/LayoutTests/fast/dom/isindex-002-expected.checksum M    platform/chromium-win/LayoutTests/fast/dom/focus-contenteditable-expected.checksum M    platform/chromium-win/LayoutTests/fast/dom/focus-contenteditable-expected.png M    platform/chromium-win/LayoutTests/fast/dom/HTMLTextAreaElement/reset-textarea-expected.png M    platform/chromium-win/LayoutTests/fast/dom/HTMLTextAreaElement/reset-textarea-expected.checksum M    platform/chromium-win/LayoutTests/fast/dom/HTMLTableColElement/resize-table-using-col-width-expected.checksum M    platform/chromium-win/LayoutTests/fast/dom/HTMLTableColElement/resize-table-using-col-width-expected.png M    platform/chromium-win/LayoutTests/fast/dom/stripNullFromTextNodes-expected.png M    platform/chromium-win/LayoutTests/fast/dom/stripNullFromTextNodes-expected.checksum M    platform/chromium-win/LayoutTests/fast/gradients/background-clipped-expected.png M    platform/chromium-win/LayoutTests/fast/gradients/background-clipped-expected.checksum M    platform/chromium-win/LayoutTests/fast/invalid/014-expected.checksum M    platform/chromium-win/LayoutTests/fast/invalid/014-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-readonly-autoscroll-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label04-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-baseline-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/001-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-table-styles-expected.png M    platform/chromium-win/LayoutTests/fast/forms/menulist-separator-painting-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-setinnerhtml-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-align-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-cannot-be-nested-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-height-expected.png M    platform/chromium-win/LayoutTests/fast/forms/blankbuttons-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/search-placeholder-value-changed-expected.png M    platform/chromium-win/LayoutTests/fast/forms/placeholder-pseudo-style-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-type-text-min-width-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-visibility-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/001-expected.png M    platform/chromium-win/LayoutTests/fast/forms/option-script-expected.png M    platform/chromium-win/LayoutTests/fast/forms/placeholder-pseudo-style-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-white-space-expected.png M    platform/chromium-win/LayoutTests/fast/forms/linebox-overflow-in-textarea-padding-expected.png M    platform/chromium-win/LayoutTests/fast/forms/slider-padding-expected.png M    platform/chromium-win/LayoutTests/fast/forms/menulist-restrict-line-height-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label05-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/option-strip-whitespace-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-drag-down-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-default-bkcolor-expected.png M    platform/chromium-win/LayoutTests/fast/forms/disabled-select-change-index-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-baseline-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-align-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-text-scroll-left-on-blur-expected.png M    platform/chromium-win/LayoutTests/fast/forms/form-hides-table-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-positioned-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-selection-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-scrolled-type-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-width-expected.png M    platform/chromium-win/LayoutTests/fast/forms/search-zoomed-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/003-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-text-transform-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-default-bkcolor-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-style-color-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/linebox-overflow-in-textarea-padding-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/blankbuttons-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-width-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-default-title-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-list-box-with-height-expected.png M    platform/chromium-win/LayoutTests/fast/forms/search-zoomed-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label02-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-drag-down-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/option-strip-whitespace-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/radio-attr-order-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-align-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/fieldset-align-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-spaces-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label07-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-change-listbox-size-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-baseline-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-word-wrap-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label07-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textAreaLineHeight-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-scrolled-type-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/search-rtl-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/formmove-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-style-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-text-transform-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-placeholder-pseudo-style-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/formmove-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-style-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-placeholder-set-attribute-expected.png M    platform/chromium-win/LayoutTests/fast/forms/password-placeholder-text-security-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/placeholder-set-attribute-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-generated-content-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/listbox-scrollbar-incremental-load-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/searchfield-heights-expected.png M    platform/chromium-win/LayoutTests/fast/forms/checkbox-radio-onchange-expected.png M    platform/chromium-win/LayoutTests/fast/forms/004-expected.png M    platform/chromium-win/LayoutTests/fast/forms/menulist-separator-painting-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textfield-overflow-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/encoding-test-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-deselect-update-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-text-click-inside-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-inner-block-reuse-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-scrollbar-expected.png M    platform/chromium-win/LayoutTests/fast/forms/radio_checked-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-size-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-text-click-inside-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-word-wrap-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-selected-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/formmove3-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-default-title-expected.png M    platform/chromium-win/LayoutTests/fast/forms/formmove3-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-click-outside-expected.png M    platform/chromium-win/LayoutTests/fast/forms/targeted-frame-submission-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-change-listbox-to-popup-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-readonly-empty-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/placeholder-set-value-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-self-emptying-click-expected.png M    platform/chromium-win/LayoutTests/fast/forms/menulist-no-overflow-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textAreaLineHeight-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-type-change2-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/radio_checked_dynamic-expected.png M    platform/chromium-win/LayoutTests/fast/forms/minWidthPercent-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label02-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-paste-undo-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-baseline-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-double-click-selection-gap-bug-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-preventDefault-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-deselect-update-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label05-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textfield-overflow-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-double-click-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/search-placeholder-value-changed-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/placeholder-set-attribute-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-disabled-color-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-visibility-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-type-change2-expected.png M    platform/chromium-win/LayoutTests/fast/forms/slider-padding-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-align-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-option-delete-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-readonly-empty-expected.png M    platform/chromium-win/LayoutTests/fast/forms/option-text-clip-expected.png M    platform/chromium-win/LayoutTests/fast/forms/tabbing-input-iframe-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-text-click-outside-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/radio-attr-order-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-positioned-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-scroll-height-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-width-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label04-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/form-element-geometry-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-change-listbox-size-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-spaces-expected.png M    platform/chromium-win/LayoutTests/fast/forms/text-style-color-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/checkbox-radio-onchange-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/searchfield-heights-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-placeholder-pseudo-style-expected.png M    platform/chromium-win/LayoutTests/fast/forms/file-input-disabled-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-disabled-appearance-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-align-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-setinnerhtml-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-focus-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-value-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-paste-undo-expected.png M    platform/chromium-win/LayoutTests/fast/forms/radio_checked_dynamic-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/option-script-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-text-self-emptying-click-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/placeholder-set-value-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-selected-expected.png M    platform/chromium-win/LayoutTests/fast/forms/search-cancel-button-style-sharing-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label03-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-double-click-expected.png M    platform/chromium-win/LayoutTests/fast/forms/form-element-geometry-expected.png M    platform/chromium-win/LayoutTests/fast/forms/listbox-width-change-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-table-styles-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-change-listbox-to-popup-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-align-expected.png M    platform/chromium-win/LayoutTests/fast/forms/menulist-style-color-expected.png M    platform/chromium-win/LayoutTests/fast/forms/radio-nested-labels-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-preventDefault-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-change-popup-to-listbox-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label06-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/search-rtl-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-readonly-dimmed-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-field-text-truncated-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-list-box-with-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/listbox-scrollbar-incremental-load-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-style-color-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-align-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/password-placeholder-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/listbox-width-change-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-align-expected.png M    platform/chromium-win/LayoutTests/fast/forms/indeterminate-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-readonly-expected.png M    platform/chromium-win/LayoutTests/fast/forms/menulist-no-overflow-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-type-text-min-width-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/004-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-block-background-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-readonly-dimmed-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/file-input-direction-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-scroll-left-on-blur-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/stuff-on-my-optgroup-expected.png M    platform/chromium-win/LayoutTests/fast/forms/file-input-direction-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/control-clip-overflow-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-readonly-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-narrow-width-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/search-display-none-cancel-button-expected.png M    platform/chromium-win/LayoutTests/fast/forms/fieldset-align-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/plaintext-mode-2-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-placeholder-set-value-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-size-expected.png M    platform/chromium-win/LayoutTests/fast/forms/formmove2-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/radio-nested-labels-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/option-text-clip-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-disabled-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-block-background-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-restrict-line-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label01-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-inner-block-reuse-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-readonly-autoscroll-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-width-change-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-sizes-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-field-text-truncated-expected.png M    platform/chromium-win/LayoutTests/fast/forms/floating-textfield-relayout-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-scroll-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/targeted-frame-submission-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/textarea-placeholder-set-value-expected.png M    platform/chromium-win/LayoutTests/fast/forms/slider-thumb-shared-style-expected.png M    platform/chromium-win/LayoutTests/fast/forms/minWidthPercent-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-placeholder-set-attribute-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-dirty-parent-pref-widths-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label06-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-cannot-be-nested-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-selection-expected.png M    platform/chromium-win/LayoutTests/fast/forms/stuff-on-my-optgroup-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-narrow-width-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label01-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-white-space-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/menulist-width-change-expected.png M    platform/chromium-win/LayoutTests/fast/forms/control-clip-overflow-expected.png M    platform/chromium-win/LayoutTests/fast/forms/search-display-none-cancel-button-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-table-expected.png M    platform/chromium-win/LayoutTests/fast/forms/form-hides-table-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/003-expected.png M    platform/chromium-win/LayoutTests/fast/forms/encoding-test-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-double-click-selection-gap-bug-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-disabled-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/radio_checked-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/search-cancel-button-style-sharing-expected.png M    platform/chromium-win/LayoutTests/fast/forms/plaintext-mode-2-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-disabled-color-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/text-style-color-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-style-color-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/tabbing-input-iframe-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-change-popup-to-listbox-expected.png M    platform/chromium-win/LayoutTests/fast/forms/button-sizes-expected.png M    platform/chromium-win/LayoutTests/fast/forms/password-placeholder-text-security-expected.png M    platform/chromium-win/LayoutTests/fast/forms/slider-thumb-shared-style-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/password-placeholder-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-text-option-delete-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-appearance-focus-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-value-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/disabled-select-change-index-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/input-table-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/formmove2-expected.png M    platform/chromium-win/LayoutTests/fast/forms/textarea-scrollbar-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/file-input-disabled-expected.png M    platform/chromium-win/LayoutTests/fast/forms/select-disabled-appearance-expected.png M    platform/chromium-win/LayoutTests/fast/forms/HTMLOptionElement_label03-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/select-dirty-parent-pref-widths-expected.png M    platform/chromium-win/LayoutTests/fast/forms/input-width-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/floating-textfield-relayout-expected.checksum M    platform/chromium-win/LayoutTests/fast/forms/button-generated-content-expected.png M    platform/chromium-win/LayoutTests/fast/forms/indeterminate-expected.png M    platform/chromium-win/LayoutTests/fast/clip/014-expected.png M    platform/chromium-win/LayoutTests/fast/clip/014-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/empty-cells-expected.png M    platform/chromium-win/LayoutTests/fast/table/height-percent-test-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/text-field-baseline-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/table-display-types-expected.png M    platform/chromium-win/LayoutTests/fast/table/wide-colspan-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/remove-td-display-none-expected.png M    platform/chromium-win/LayoutTests/fast/table/overflowHidden-expected.png M    platform/chromium-win/LayoutTests/fast/table/height-percent-test-expected.png M    platform/chromium-win/LayoutTests/fast/table/wide-column-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/034-expected.png M    platform/chromium-win/LayoutTests/fast/table/prepend-in-anonymous-table-expected.png M    platform/chromium-win/LayoutTests/fast/table/colspanMinWidth-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/empty-cells-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/003-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/frame-and-rules-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/wide-column-expected.png M    platform/chromium-win/LayoutTests/fast/table/colspanMinWidth-expected.png M    platform/chromium-win/LayoutTests/fast/table/023-expected.png M    platform/chromium-win/LayoutTests/fast/table/border-collapsing/004-expected.png M    platform/chromium-win/LayoutTests/fast/table/border-collapsing/004-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/text-field-baseline-expected.png M    platform/chromium-win/LayoutTests/fast/table/spanOverlapRepaint-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/spanOverlapRepaint-expected.png M    platform/chromium-win/LayoutTests/fast/table/wide-colspan-expected.png M    platform/chromium-win/LayoutTests/fast/table/append-cells2-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/edge-offsets-expected.png M    platform/chromium-win/LayoutTests/fast/table/remove-td-display-none-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/040-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/023-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/table-display-types-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/overflowHidden-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/003-expected.png M    platform/chromium-win/LayoutTests/fast/table/frame-and-rules-expected.png M    platform/chromium-win/LayoutTests/fast/table/040-expected.png M    platform/chromium-win/LayoutTests/fast/table/prepend-in-anonymous-table-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/append-cells2-expected.png M    platform/chromium-win/LayoutTests/fast/table/034-expected.checksum M    platform/chromium-win/LayoutTests/fast/table/edge-offsets-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/line-height-expected.png M    platform/chromium-win/LayoutTests/fast/css/font_property_normal-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/border-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/only-of-type-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/rtl-ordering-expected.png M    platform/chromium-win/LayoutTests/fast/css/hsl-color-expected.png M    platform/chromium-win/LayoutTests/fast/css/text-overflow-ellipsis-expected.png M    platform/chromium-win/LayoutTests/fast/css/percentage-non-integer-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/border-height-expected.png M    platform/chromium-win/LayoutTests/fast/css/pseudo-cache-stale-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/text-overflow-ellipsis-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/first-child-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/percentage-non-integer-expected.png M    platform/chromium-win/LayoutTests/fast/css/word-space-extra-expected.png M    platform/chromium-win/LayoutTests/fast/css/continuationCrash-expected.png M    platform/chromium-win/LayoutTests/fast/css/only-child-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/first-of-type-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/nested-floating-relative-position-percentages-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/text-overflow-ellipsis-strict-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/005-expected.png M    platform/chromium-win/LayoutTests/fast/css/text-overflow-ellipsis-strict-expected.png M    platform/chromium-win/LayoutTests/fast/css/line-height-overflow-expected.png M    platform/chromium-win/LayoutTests/fast/css/pseudo-cache-stale-expected.png M    platform/chromium-win/LayoutTests/fast/css/rtl-ordering-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/margin-top-bottom-dynamic-expected.png M    platform/chromium-win/LayoutTests/fast/css/font_property_normal-expected.png M    platform/chromium-win/LayoutTests/fast/css/005-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/last-of-type-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/last-child-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/MarqueeLayoutTest-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/only-of-type-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/resize-corner-tracking-expected.png M    platform/chromium-win/LayoutTests/fast/css/MarqueeLayoutTest-expected.png M    platform/chromium-win/LayoutTests/fast/css/empty-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/continuationCrash-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/hsl-color-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/nested-floating-relative-position-percentages-expected.png M    platform/chromium-win/LayoutTests/fast/css/last-of-type-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/last-child-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/resize-corner-tracking-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/line-height-overflow-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/margin-top-bottom-dynamic-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/first-of-type-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/word-space-extra-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/positioned-overflow-scroll-expected.png M    platform/chromium-win/LayoutTests/fast/css/positioned-overflow-scroll-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/first-child-pseudo-class-expected.png M    platform/chromium-win/LayoutTests/fast/css/only-child-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/empty-pseudo-class-expected.checksum M    platform/chromium-win/LayoutTests/fast/css/line-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/box-sizing/box-sizing-expected.checksum M    platform/chromium-win/LayoutTests/fast/box-sizing/box-sizing-expected.png M    platform/chromium-win/LayoutTests/fast/block/basic/011-expected.png M    platform/chromium-win/LayoutTests/fast/block/basic/016-expected.png M    platform/chromium-win/LayoutTests/fast/block/basic/016-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/basic/fieldset-stretch-to-legend-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/basic/011-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/basic/fieldset-stretch-to-legend-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/051-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/047-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/inline-block-relposition-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/047-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/relative-overflow-replaced-float-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/complex-percentage-height-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/relative-overflow-block-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/fixed-positioning-scrollbar-bug-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/complex-percentage-height-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/relative-overflow-replaced-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/relative-overflow-replaced-float-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/055-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/relative-overflow-block-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/fixed-positioning-scrollbar-bug-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/inline-block-relposition-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/auto/007-expected.png M    platform/chromium-win/LayoutTests/fast/block/positioning/auto/007-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/051-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/055-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/positioning/relative-overflow-replaced-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/035-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/019-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/026-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/br-with-clear-2-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/032-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/028-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/035-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/013-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/025-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/float-avoidance-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/br-with-clear-2-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/027-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/relative-painted-twice-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/032-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/019-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/027-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/028-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/008-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/avoidance-percent-width-strict-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/033-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/avoidance-percent-width-strict-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/021-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/033-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/021-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/025-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/008-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/026-expected.png M    platform/chromium-win/LayoutTests/fast/block/float/013-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/relative-painted-twice-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/float/float-avoidance-expected.png M    platform/chromium-win/LayoutTests/fast/block/margin-collapse/104-expected.png M    platform/chromium-win/LayoutTests/fast/block/margin-collapse/103-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/margin-collapse/104-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/margin-collapse/103-expected.png M    platform/chromium-win/LayoutTests/fast/block/margin-collapse/empty-clear-blocks-expected.checksum M    platform/chromium-win/LayoutTests/fast/block/margin-collapse/empty-clear-blocks-expected.png M    platform/chromium-win/LayoutTests/fast/parser/bad-xml-slash-expected.checksum M    platform/chromium-win/LayoutTests/fast/parser/open-comment-in-textarea-expected.checksum M    platform/chromium-win/LayoutTests/fast/parser/document-write-option-expected.checksum M    platform/chromium-win/LayoutTests/fast/parser/entity-comment-in-textarea-expected.png M    platform/chromium-win/LayoutTests/fast/parser/bad-xml-slash-expected.png M    platform/chromium-win/LayoutTests/fast/parser/open-comment-in-textarea-expected.png M    platform/chromium-win/LayoutTests/fast/parser/comment-in-textarea-expected.checksum M    platform/chromium-win/LayoutTests/fast/parser/entity-comment-in-textarea-expected.checksum M    platform/chromium-win/LayoutTests/fast/parser/document-write-option-expected.png M    platform/chromium-win/LayoutTests/fast/parser/comment-in-textarea-expected.png M    platform/chromium-win/LayoutTests/fast/layers/overflow-scroll-auto-switch-expected.png M    platform/chromium-win/LayoutTests/fast/layers/scroll-rect-to-visible-expected.png M    platform/chromium-win/LayoutTests/fast/layers/scroll-rect-to-visible-expected.checksum M    platform/chromium-win/LayoutTests/fast/layers/overflow-scroll-auto-switch-expected.checksum M    platform/chromium-win/LayoutTests/fast/backgrounds/background-inherit-color-bug-expected.png M    platform/chromium-win/LayoutTests/fast/backgrounds/background-inherit-color-bug-expected.checksum M    platform/chromium-win/LayoutTests/fast/backgrounds/size/backgroundSize15-expected.checksum M    platform/chromium-win/LayoutTests/fast/backgrounds/size/backgroundSize15-expected.png M    platform/chromium-win/LayoutTests/fast/backgrounds/repeat/negative-offset-repeat-transformed-expected.checksum M    platform/chromium-win/LayoutTests/fast/backgrounds/repeat/negative-offset-repeat-transformed-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/subtree-root-skipped-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-5-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-5-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/fixed-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/layout-state-only-positioned-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/control-clip-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/overflow-scroll-delete-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-10-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-4-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-7-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/renderer-destruction-by-invalidateSelection-crash-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/selection-gap-overflow-scroll-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/dynamic-table-vertical-alignment-change-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-3-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/selection-gap-overflow-scroll-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/fixed-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-10-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/renderer-destruction-by-invalidateSelection-crash-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/search-field-cancel-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/layout-state-only-positioned-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/overflow-scroll-delete-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-7-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/control-clip-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-3-expected.checksum M    platform/chromium-win/LayoutTests/fast/repaint/dynamic-table-vertical-alignment-change-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/search-field-cancel-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/subtree-root-skipped-expected.png M    platform/chromium-win/LayoutTests/fast/repaint/line-flow-with-floats-4-expected.checksum M    platform/chromium-win/LayoutTests/fast/canvas/canvas-bg-expected.png M    platform/chromium-win/LayoutTests/fast/canvas/image-object-in-canvas-expected.png M    platform/chromium-win/LayoutTests/fast/canvas/canvas-text-alignment-expected.checksum M    platform/chromium-win/LayoutTests/fast/canvas/canvas-text-alignment-expected.png M    platform/chromium-win/LayoutTests/fast/canvas/image-object-in-canvas-expected.checksum M    platform/chromium-win/LayoutTests/fast/canvas/canvas-bg-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/onlyCommentInIFrame-expected.png M    platform/chromium-win/LayoutTests/fast/frames/iframe-scrolling-attribute-expected.png M    platform/chromium-win/LayoutTests/fast/frames/valid-expected.png M    platform/chromium-win/LayoutTests/fast/frames/inline-object-inside-frameset-expected.png M    platform/chromium-win/LayoutTests/fast/frames/iframe-scrolling-attribute-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/onlyCommentInIFrame-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/valid-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/inline-object-inside-frameset-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/invalid-expected.png M    platform/chromium-win/LayoutTests/fast/frames/frame-scrolling-attribute-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/invalid-expected.checksum M    platform/chromium-win/LayoutTests/fast/frames/frame-scrolling-attribute-expected.png M    platform/chromium-win/LayoutTests/fast/reflections/reflection-direction-expected.png M    platform/chromium-win/LayoutTests/fast/reflections/reflection-direction-expected.checksum M    platform/chromium-win/LayoutTests/transforms/2d/zoom-menulist-expected.checksum M    platform/chromium-win/LayoutTests/transforms/2d/zoom-menulist-expected.png M    platform/chromium-win/LayoutTests/svg/text/text-intro-05-t-expected.checksum M    platform/chromium-win/LayoutTests/svg/text/multichar-glyph-expected.checksum M    platform/chromium-win/LayoutTests/svg/text/text-intro-05-t-expected.txt M    platform/chromium-win/LayoutTests/svg/text/multichar-glyph-expected.png M    platform/chromium-win/LayoutTests/svg/text/text-intro-05-t-expected.png M    platform/chromium-win/LayoutTests/svg/text/kerning-expected.checksum M    platform/chromium-win/LayoutTests/svg/text/text-fonts-01-t-expected.png M    platform/chromium-win/LayoutTests/svg/text/kerning-expected.png M    platform/chromium-win/LayoutTests/svg/text/text-fonts-01-t-expected.checksum M    platform/chromium-win/LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t-expected.txt M    platform/chromium-win/LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t-expected.checksum M    platform/chromium-win/LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t-expected.png M    platform/chromium-win/LayoutTests/svg/W3C-SVG-1.1/text-fonts-01-t-expected.png M    platform/chromium-win/LayoutTests/svg/W3C-SVG-1.1/text-fonts-01-t-expected.checksum M    platform/chromium-win/LayoutTests/svg/hixie/links/003-broken-expected.checksum M    platform/chromium-win/LayoutTests/svg/hixie/links/003-broken-expected.png M    platform/chromium-win/LayoutTests/svg/hixie/error/012-expected.png M    platform/chromium-win/LayoutTests/svg/hixie/error/012-expected.checksum M    platform/chromium-win/LayoutTests/svg/hixie/mixed/003-expected.png M    platform/chromium-win/LayoutTests/svg/hixie/mixed/003-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/altglyph-expected.png M    platform/chromium-win/LayoutTests/svg/custom/scrolling-embedded-svg-file-image-repaint-problem-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/junk-data-expected.png M    platform/chromium-win/LayoutTests/svg/custom/altglyph-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/missing-xlink-expected.png M    platform/chromium-win/LayoutTests/svg/custom/junk-data-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/inline-svg-in-xhtml-expected.png M    platform/chromium-win/LayoutTests/svg/custom/scrolling-embedded-svg-file-image-repaint-problem-expected.png M    platform/chromium-win/LayoutTests/svg/custom/invisible-text-after-scrolling-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/foreign-object-skew-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/missing-xlink-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/invisible-text-after-scrolling-expected.png M    platform/chromium-win/LayoutTests/svg/custom/inline-svg-in-xhtml-expected.checksum M    platform/chromium-win/LayoutTests/svg/custom/foreign-object-skew-expected.png M    platform/chromium-win/LayoutTests/css2.1/t0905-c5525-fltclr-00-c-ag-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t1508-c527-font-07-b-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t080301-c411-vt-mrgn-00-b-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t0905-c5525-fltwidth-00-c-g-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t1508-c527-font-07-b-expected.png M    platform/chromium-win/LayoutTests/css2.1/t0905-c5526-fltclr-00-c-ag-expected.png M    platform/chromium-win/LayoutTests/css2.1/t1202-counters-09-b-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t1202-counter-09-b-expected.png M    platform/chromium-win/LayoutTests/css2.1/t140201-c535-bg-fixd-00-b-g-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t09-c5526c-display-00-e-expected.png M    platform/chromium-win/LayoutTests/css2.1/t1002-c5523-width-02-b-g-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t080301-c411-vt-mrgn-00-b-expected.png M    platform/chromium-win/LayoutTests/css2.1/t140201-c535-bg-fixd-00-b-g-expected.png M    platform/chromium-win/LayoutTests/css2.1/t1002-c5523-width-02-b-g-expected.png M    platform/chromium-win/LayoutTests/css2.1/t0905-c5526-fltclr-00-c-ag-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t140201-c537-bgfxps-00-c-ag-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t1202-counters-09-b-expected.png M    platform/chromium-win/LayoutTests/css2.1/t0905-c5525-fltmrgn-00-c-ag-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t0803-c5505-mrgn-02-c-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t1202-counter-09-b-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t0803-c5505-mrgn-02-c-expected.png M    platform/chromium-win/LayoutTests/css2.1/t0905-c5525-fltclr-00-c-ag-expected.png M    platform/chromium-win/LayoutTests/css2.1/t09-c5526c-display-00-e-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t0905-c5525-fltmrgn-00-c-ag-expected.png M    platform/chromium-win/LayoutTests/css2.1/t1202-counters-08-b-expected.checksum M    platform/chromium-win/LayoutTests/css2.1/t140201-c537-bgfxps-00-c-ag-expected.png M    platform/chromium-win/LayoutTests/css2.1/t0905-c5525-fltwidth-00-c-g-expected.png M    platform/chromium-win/LayoutTests/css2.1/t1202-counters-08-b-expected.png M    platform/chromium-win/LayoutTests/css1/color_and_background/background_repeat-expected.checksum M    platform/chromium-win/LayoutTests/css1/color_and_background/background-expected.checksum M    platform/chromium-win/LayoutTests/css1/color_and_background/background_position-expected.png M    platform/chromium-win/LayoutTests/css1/color_and_background/background_attachment-expected.checksum M    platform/chromium-win/LayoutTests/css1/color_and_background/background-expected.png M    platform/chromium-win/LayoutTests/css1/color_and_background/background_repeat-expected.png M    platform/chromium-win/LayoutTests/css1/color_and_background/background_position-expected.checksum M    platform/chromium-win/LayoutTests/css1/color_and_background/background_attachment-expected.png M    platform/chromium-win/LayoutTests/css1/pseudo/firstline-expected.png M    platform/chromium-win/LayoutTests/css1/pseudo/pseudo_elements_in_selectors-expected.png M    platform/chromium-win/LayoutTests/css1/pseudo/multiple_pseudo_elements-expected.png M    platform/chromium-win/LayoutTests/css1/pseudo/firstletter-expected.png M    platform/chromium-win/LayoutTests/css1/pseudo/anchor-expected.png M    platform/chromium-win/LayoutTests/css1/pseudo/firstline-expected.checksum M    platform/chromium-win/LayoutTests/css1/pseudo/pseudo_elements_in_selectors-expected.checksum M    platform/chromium-win/LayoutTests/css1/pseudo/multiple_pseudo_elements-expected.checksum M    platform/chromium-win/LayoutTests/css1/pseudo/firstletter-expected.checksum M    platform/chromium-win/LayoutTests/css1/pseudo/anchor-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/text_transform-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/line_height-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/word_spacing-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/vertical_align-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/text_indent-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/letter_spacing-expected.png M    platform/chromium-win/LayoutTests/css1/text_properties/text_decoration-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/text_transform-expected.png M    platform/chromium-win/LayoutTests/css1/text_properties/line_height-expected.png M    platform/chromium-win/LayoutTests/css1/text_properties/word_spacing-expected.png M    platform/chromium-win/LayoutTests/css1/text_properties/letter_spacing-expected.checksum M    platform/chromium-win/LayoutTests/css1/text_properties/vertical_align-expected.png M    platform/chromium-win/LayoutTests/css1/text_properties/text_indent-expected.png M    platform/chromium-win/LayoutTests/css1/text_properties/text_decoration-expected.png M    platform/chromium-win/LayoutTests/css1/basic/id_as_selector-expected.checksum M    platform/chromium-win/LayoutTests/css1/basic/containment-expected.checksum M    platform/chromium-win/LayoutTests/css1/basic/comments-expected.checksum M    platform/chromium-win/LayoutTests/css1/basic/class_as_selector-expected.checksum M    platform/chromium-win/LayoutTests/css1/basic/inheritance-expected.checksum M    platform/chromium-win/LayoutTests/css1/basic/containment-expected.png M    platform/chromium-win/LayoutTests/css1/basic/id_as_selector-expected.png M    platform/chromium-win/LayoutTests/css1/basic/comments-expected.png M    platform/chromium-win/LayoutTests/css1/basic/class_as_selector-expected.png M    platform/chromium-win/LayoutTests/css1/basic/inheritance-expected.png M    platform/chromium-win/LayoutTests/css1/font_properties/font_size-expected.png M    platform/chromium-win/LayoutTests/css1/font_properties/font-expected.png M    platform/chromium-win/LayoutTests/css1/font_properties/font_family-expected.png M    platform/chromium-win/LayoutTests/css1/font_properties/font_weight-expected.png M    platform/chromium-win/LayoutTests/css1/font_properties/font_size-expected.checksum M    platform/chromium-win/LayoutTests/css1/font_properties/font-expected.checksum M    platform/chromium-win/LayoutTests/css1/font_properties/font_family-expected.checksum M    platform/chromium-win/LayoutTests/css1/font_properties/font_weight-expected.checksum M    platform/chromium-win/LayoutTests/css1/units/color_units-expected.checksum M    platform/chromium-win/LayoutTests/css1/units/color_units-expected.png M    platform/chromium-win/LayoutTests/css1/units/length_units-expected.checksum M    platform/chromium-win/LayoutTests/css1/units/length_units-expected.png M    platform/chromium-win/LayoutTests/css1/cascade/cascade_order-expected.png M    platform/chromium-win/LayoutTests/css1/cascade/cascade_order-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/margin_top-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/float_margin-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_top_width-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_top-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/margin_bottom-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/float_margin-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding_left-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_left_width-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/clear_float-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/float_elements_in_series-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/padding_top-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/margin_right-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/margin_top-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/margin_right-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/acid_test-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/float_on_text_elements-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_right_width-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding_top-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/padding_bottom-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/clear-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/padding_bottom-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/clear_float-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/acid_test-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_bottom_width-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding_right-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_right_inline-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_left-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/margin_inline-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/margin-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_top_width-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_bottom-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/padding_inline-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_style-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_width-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/margin-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/float_elements_in_series-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/width-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/height-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/margin_left-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_style-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_bottom_width-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/margin_bottom-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_left_width-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_left-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_right_inline-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/width-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding_right-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/margin_left-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/height-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/margin_inline-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/padding_inline-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/clear-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_width-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding_left-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/border_top-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/float_on_text_elements-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_right_width-expected.png M    platform/chromium-win/LayoutTests/css1/box_properties/border_bottom-expected.checksum M    platform/chromium-win/LayoutTests/css1/box_properties/padding-expected.checksum M    platform/chromium-win/LayoutTests/css1/conformance/forward_compatible_parsing-expected.checksum M    platform/chromium-win/LayoutTests/css1/conformance/forward_compatible_parsing-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/floating_elements-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/horizontal_formatting-expected.checksum M    platform/chromium-win/LayoutTests/css1/formatting_model/vertical_formatting-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/height_of_lines-expected.checksum M    platform/chromium-win/LayoutTests/css1/formatting_model/inline_elements-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/replaced_elements-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/floating_elements-expected.checksum M    platform/chromium-win/LayoutTests/css1/formatting_model/vertical_formatting-expected.checksum M    platform/chromium-win/LayoutTests/css1/formatting_model/horizontal_formatting-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/height_of_lines-expected.png M    platform/chromium-win/LayoutTests/css1/formatting_model/inline_elements-expected.checksum M    platform/chromium-win/LayoutTests/css1/formatting_model/replaced_elements-expected.checksum M    platform/chromium-win/LayoutTests/css1/classification/display-expected.png M    platform/chromium-win/LayoutTests/css1/classification/white_space-expected.checksum M    platform/chromium-win/LayoutTests/css1/classification/list_style_type-expected.checksum M    platform/chromium-win/LayoutTests/css1/classification/display-expected.checksum M    platform/chromium-win/LayoutTests/css1/classification/white_space-expected.png M    platform/chromium-win/LayoutTests/css1/classification/list_style_type-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug19526-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug14007-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug58402-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug80762-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug67915-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug91057-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug131020-3-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug10216-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug106966-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug32205-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug80762-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug10216-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug1055-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug220653-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug131020-3-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug7243-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug2479-5-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug32205-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug7243-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug1055-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug58402-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug92647-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug1725-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug92647-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug14007-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug22122-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug67915-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug85016-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug89315-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug10140-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug101759-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug89315-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug2479-5-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug14007-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug220653-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug19526-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug106966-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug1725-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug22122-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug14007-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug85016-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug91057-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug10140-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/bugs/bug101759-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/other/empty_cells-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/other/empty_cells-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/other/test4-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/other/test4-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/col_span2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/columns-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/captions1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/captions2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/backgrounds-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/conflicts-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/captions3-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/standards1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/captions1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/col_span2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/captions2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/backgrounds-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/columns-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/captions3-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/standards1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/core/conflicts-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/collapsing_borders/bug41262-6-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/collapsing_borders/bug41262-5-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/collapsing_borders/bug41262-6-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/collapsing_borders/bug41262-5-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_dirty_reflow_tbody-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-cell-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-column-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-column-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_fixed-bg-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-column-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-row-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-row-group-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-column-group-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_style_reflow_row_sibling-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_layers-show-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-cell-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-row-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_dirty_reflow_tbody-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-quirks-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-row-group-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-column-group-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_layers-hide-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-row-group-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_fixed-bg-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-quirks-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-cell-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-row-group-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-column-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_dirty_reflow_row-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_layers-hide-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_style_reflow_tbody_sibling-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_border-table-column-group-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_dirty_reflow_row-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_style_reflow_row_sibling-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-cell-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_layers-show-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-row-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/table_overflow_style_reflow_tbody_sibling-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-row-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla_expected_failures/marvin/backgr_position-table-column-group-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/dom/tableDom-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/dom/tableDom-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug27038-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug194024-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug10269-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-4-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug26178-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-3-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug60749-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug73321-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug92647-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug7112-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug7112-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug23151-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug52505-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug29314-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug43039-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug12384-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug51727-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug26178-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1318-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1302-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug3977-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug131020_iframe-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug22019-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug51727-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug137388-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug3977-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug131020_iframe-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug29326-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug68912-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1302-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug43854-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug120364-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-4-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-3-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug29326-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug33855-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug27038-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug113235-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug12384-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug7112-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug4527-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug7112-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug28928-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug52506-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46480-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug7342-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1055-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug113235-3-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug44505-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug96334-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug149275-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2997-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug10296-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug56405-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug149275-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug131020-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug43039-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46480-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46368-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug92647-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug23151-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug11944-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug50695-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46368-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug92143-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug30559-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug8858-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2997-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug52506-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug120364-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2947-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/45621-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug625-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug30692-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug39209-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug30559-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug18359-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug44505-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug22019-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46480-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1055-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug4382-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug4429-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug73321-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug4429-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug59354-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug194024-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug10269-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug7342-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug24200-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1188-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46480-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46368-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug33855-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug46368-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug11944-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug5797-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug5835-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1318-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug96334-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug30692-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug52505-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug113235-3-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug56405-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug43854-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug92143-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug8858-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug4382-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug1188-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug67915-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug625-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug32205-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug55545-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug51037-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug51037-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2947-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug18359-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug138725-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/45621-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug113235-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug5835-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug138725-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug59354-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug38916-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug28928-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug60749-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug5797-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug2479-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug32205-2-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug29314-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug101674-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug131020-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug10296-1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug55545-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug650-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug101674-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug50695-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug4527-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug137388-2-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug68912-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug39209-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug67915-1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug38916-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug24200-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/bugs/bug650-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/wa_table_tr_align-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/test3-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/move_row-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/nestedTables-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/cell_widths-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/test3-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/test6-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/move_row-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/cell_widths-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/test6-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/wa_table_thtd_rowspan-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/other/wa_table_tr_align-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/wa_table_thtd_rowspan-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/other/nestedTables-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/borders-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/row_span-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/col_widths_auto_fix-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/bloomberg-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/cell_heights-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/col_widths_auto_fix-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/captions-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/margins-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/nested1-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/cell_heights-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/one_row-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/col_widths_fix_fixPer-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/row_span-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/col_widths_fix_fixPer-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/bloomberg-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/borders-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/captions-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/nested1-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/col_span-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/core/col_span-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/margins-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/core/one_row-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/collapsing_borders/bug41262-4-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/collapsing_borders/bug41262-3-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/collapsing_borders/bug41262-4-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/collapsing_borders/bug41262-3-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_bgcolor_rgb-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_table_bgcolor_name-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-row-group-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_nowrap-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_layers-opacity-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_bgcolor_name-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_table_bgcolor_rgb-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_height-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_nowrap-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-row-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_layers-opacity-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-cell-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_table_bgcolor_name-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_bgcolor_rgb-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_height-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_height-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_index-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_bgcolor_name-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-column-group-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_tr_bgcolor_rgb-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_tr_bgcolor_name-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_tr_bgcolor_rgb-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-column-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_bgcolor_rgb-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_tr_bgcolor_name-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_nowrap-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-column-group-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_position-table-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_bgcolor_rgb-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-row-group-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-column-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_th_bgcolor_name-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_index-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-cell-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_height-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_bgcolor_name-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_position-table-expected.checksum M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/backgr_simple-table-row-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_table_bgcolor_rgb-expected.png M    platform/chromium-win/LayoutTests/tables/mozilla/marvin/x_td_nowrap-expected.png M    platform/chromium-win/chrome/fast/forms/basic-textareas-expected.checksum M    platform/chromium-win/chrome/fast/forms/basic-selects-expected.checksum M    platform/chromium-win/chrome/fast/forms/basic-inputs-expected.png M    platform/chromium-win/chrome/fast/forms/basic-textareas-quirks-expected.checksum M    platform/chromium-win/chrome/fast/forms/basic-buttons-expected.png M    platform/chromium-win/chrome/fast/forms/basic-inputs-expected.checksum M    platform/chromium-win/chrome/fast/forms/basic-textareas-expected.png M    platform/chromium-win/chrome/fast/forms/basic-selects-expected.png M    platform/chromium-win/chrome/fast/forms/basic-buttons-expected.checksum M    platform/chromium-win/chrome/fast/forms/basic-textareas-quirks-expected.png	none			svn://svn.chromium.org/chrome/trunk/src@26204 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/data/layout_tests/platform/chromium-win/chrome/fast/forms/basic-textareas-quirks-expected.png b/webkit/data/layout_tests/platform/chromium-win/chrome/fast/forms/basic-textareas-quirks-expected.png <newline>index fadcb98..8214052 100644 <newline>Binary files a/webkit/data/layout_tests/platform/chromium-win/chrome/fast/forms/basic-textareas-quirks-expected.png and b/webkit/data/layout_tests/platform/chromium-win/chrome/fast/forms/basic-textareas-quirks-expected.png differ
caa557f149cacacf14903ebd135eedc0fd03936	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 11 00:17:44 2009 +0000	Strict transport security: add checkbox to clear state. This patches add a checkbox to the "Clear Browsing Data" dialog which clears the STS state when checked. Since we don't timestamp our entries (for now at least, should we?), the duration selected has no effect: we always clear everything. Mac doesn't appear to have a dialog for this yet, so no Mac specific changes. http://codereview.chromium.org/196070				svn://svn.chromium.org/chrome/trunk/src@25955 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/strict_transport_security_state_unittest.cc b/net/base/strict_transport_security_state_unittest.cc <newline>index 5ebd358..2b769d7 100644 <newline>--- a/net/base/strict_transport_security_state_unittest.cc <newline>+++ b/net/base/strict_transport_security_state_unittest.cc <newline>@@ -204,3 +204,17 @@ TEST_F(StrictTransportSecurityStateTest, Serialise2) { <newline>   EXPECT_TRUE(state->IsEnabledForHost("foo.bar.baz.google.com")); <newline>   EXPECT_FALSE(state->IsEnabledForHost("com")); <newline> } <newline>+ <newline>+TEST_F(StrictTransportSecurityStateTest, Clear) { <newline>+  scoped_refptr<net::StrictTransportSecurityState> state( <newline>+      new net::StrictTransportSecurityState); <newline>+ <newline>+  const base::Time current_time(base::Time::Now()); <newline>+  const base::Time expiry = current_time + base::TimeDelta::FromSeconds(1000); <newline>+ <newline>+  EXPECT_FALSE(state->IsEnabledForHost("google.com")); <newline>+  state->EnableHost("google.com", expiry, true); <newline>+  EXPECT_TRUE(state->IsEnabledForHost("google.com")); <newline>+  state->Clear(); <newline>+  EXPECT_FALSE(state->IsEnabledForHost("google.com")); <newline>+}
7dbbec00aa43f94a078f2e5852601fb725d4b4b	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Sep 11 00:17:44 2009 +0000	Strict transport security: add checkbox to clear state. This patches add a checkbox to the "Clear Browsing Data" dialog which clears the STS state when checked. Since we don't timestamp our entries (for now at least, should we?), the duration selected has no effect: we always clear everything. Mac doesn't appear to have a dialog for this yet, so no Mac specific changes. http://codereview.chromium.org/196070				svn://svn.chromium.org/chrome/trunk/src@25955 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/strict_transport_security_state_unittest.cc b/net/base/strict_transport_security_state_unittest.cc <newline>index 5ebd358..2b769d7 100644 <newline>--- a/net/base/strict_transport_security_state_unittest.cc <newline>+++ b/net/base/strict_transport_security_state_unittest.cc <newline>@@ -204,3 +204,17 @@ TEST_F(StrictTransportSecurityStateTest, Serialise2) { <newline>   EXPECT_TRUE(state->IsEnabledForHost("foo.bar.baz.google.com")); <newline>   EXPECT_FALSE(state->IsEnabledForHost("com")); <newline> } <newline>+ <newline>+TEST_F(StrictTransportSecurityStateTest, Clear) { <newline>+  scoped_refptr<net::StrictTransportSecurityState> state( <newline>+      new net::StrictTransportSecurityState); <newline>+ <newline>+  const base::Time current_time(base::Time::Now()); <newline>+  const base::Time expiry = current_time + base::TimeDelta::FromSeconds(1000); <newline>+ <newline>+  EXPECT_FALSE(state->IsEnabledForHost("google.com")); <newline>+  state->EnableHost("google.com", expiry, true); <newline>+  EXPECT_TRUE(state->IsEnabledForHost("google.com")); <newline>+  state->Clear(); <newline>+  EXPECT_FALSE(state->IsEnabledForHost("google.com")); <newline>+}
c4c38d2ae01e7f7c7951b9db26bd39d88ebe07a	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Sep 10 18:35:16 2009 +0000	Strict transport security: come out from behind the flag. With this change, Strict Transport Security is active by default and doesn't need the --force-https flag any more. http://codereview.chromium.org/193067				svn://svn.chromium.org/chrome/trunk/src@25888 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_http_job.cc b/net/url_request/url_request_http_job.cc <newline>index ada4ad1..8d71b36 100644 <newline>--- a/net/url_request/url_request_http_job.cc <newline>+++ b/net/url_request/url_request_http_job.cc <newline>@@ -46,11 +46,7 @@ URLRequestJob* URLRequestHttpJob::Factory(URLRequest* request, <newline>     return new URLRequestErrorJob(request, net::ERR_INVALID_ARGUMENT); <newline>   } <newline>-  // We cache the value of the switch because this code path is hit on every <newline>-  // network request. <newline>-  static const bool kForceHTTPS = <newline>-      CommandLine::ForCurrentProcess()->HasSwitch(switches::kForceHTTPS); <newline>-  if (kForceHTTPS && scheme == "http" && <newline>+  if (scheme == "http" && <newline>       request->context()->strict_transport_security_state() && <newline>       request->context()->strict_transport_security_state()->IsEnabledForHost( <newline>           request->url().host())) { <newline>@@ -486,10 +482,6 @@ bool URLRequestHttpJob::ShouldTreatAsCertificateError(int result) { <newline>   if (!net::IsCertificateError(result)) <newline>     return false; <newline>-  // Hide the fancy processing behind a command line switch. <newline>-  if (!CommandLine::ForCurrentProcess()->HasSwitch(switches::kForceHTTPS)) <newline>-    return true; <newline>- <newline>   // Check whether our context is using Strict-Transport-Security. <newline>   if (!context_->strict_transport_security_state()) <newline>     return true; <newline>@@ -698,10 +690,6 @@ void URLRequestHttpJob::FetchResponseCookies() { <newline> void URLRequestHttpJob::ProcessStrictTransportSecurityHeader() { <newline>   DCHECK(response_info_); <newline>-  // Hide processing behind a command line flag. <newline>-  if (!CommandLine::ForCurrentProcess()->HasSwitch(switches::kForceHTTPS)) <newline>-    return; <newline>- <newline>   // Only process Strict-Transport-Security from HTTPS responses. <newline>   if (request_info_.url.scheme() != "https") <newline>     return;
0b15301bced121bee671159f826b7917ac89afb	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Sep 10 18:35:16 2009 +0000	Strict transport security: come out from behind the flag. With this change, Strict Transport Security is active by default and doesn't need the --force-https flag any more. http://codereview.chromium.org/193067				svn://svn.chromium.org/chrome/trunk/src@25888 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_http_job.cc b/net/url_request/url_request_http_job.cc <newline>index ada4ad1..8d71b36 100644 <newline>--- a/net/url_request/url_request_http_job.cc <newline>+++ b/net/url_request/url_request_http_job.cc <newline>@@ -46,11 +46,7 @@ URLRequestJob* URLRequestHttpJob::Factory(URLRequest* request, <newline>     return new URLRequestErrorJob(request, net::ERR_INVALID_ARGUMENT); <newline>   } <newline>-  // We cache the value of the switch because this code path is hit on every <newline>-  // network request. <newline>-  static const bool kForceHTTPS = <newline>-      CommandLine::ForCurrentProcess()->HasSwitch(switches::kForceHTTPS); <newline>-  if (kForceHTTPS && scheme == "http" && <newline>+  if (scheme == "http" && <newline>       request->context()->strict_transport_security_state() && <newline>       request->context()->strict_transport_security_state()->IsEnabledForHost( <newline>           request->url().host())) { <newline>@@ -486,10 +482,6 @@ bool URLRequestHttpJob::ShouldTreatAsCertificateError(int result) { <newline>   if (!net::IsCertificateError(result)) <newline>     return false; <newline>-  // Hide the fancy processing behind a command line switch. <newline>-  if (!CommandLine::ForCurrentProcess()->HasSwitch(switches::kForceHTTPS)) <newline>-    return true; <newline>- <newline>   // Check whether our context is using Strict-Transport-Security. <newline>   if (!context_->strict_transport_security_state()) <newline>     return true; <newline>@@ -698,10 +690,6 @@ void URLRequestHttpJob::FetchResponseCookies() { <newline> void URLRequestHttpJob::ProcessStrictTransportSecurityHeader() { <newline>   DCHECK(response_info_); <newline>-  // Hide processing behind a command line flag. <newline>-  if (!CommandLine::ForCurrentProcess()->HasSwitch(switches::kForceHTTPS)) <newline>-    return; <newline>- <newline>   // Only process Strict-Transport-Security from HTTPS responses. <newline>   if (request_info_.url.scheme() != "https") <newline>     return;
0ac41835af36afaf46d6d4f28262cbeae6fea10	ager@chromium.org <ager@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Sep 7 07:32:26 2009 +0000	Guard against NULL webview in dispatchDidFinishDocumentLoad. The webview can be NULL if dispatchDidFinishDocumentLoad is called via a frame destructor. TEST=LayoutTests/http/tests/security/javascriptURL/javascriptURL-in-new-iframe.html	20324		http://codereview.chromium.org/194022	svn://svn.chromium.org/chrome/trunk/src@25596 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/webframeloaderclient_impl.cc b/webkit/glue/webframeloaderclient_impl.cc <newline>index 760d59a..5fdaf9e 100644 <newline>--- a/webkit/glue/webframeloaderclient_impl.cc <newline>+++ b/webkit/glue/webframeloaderclient_impl.cc <newline>@@ -320,7 +320,6 @@ void WebFrameLoaderClient::dispatchDidFailLoading(DocumentLoader* loader, <newline> void WebFrameLoaderClient::dispatchDidFinishDocumentLoad() { <newline>   WebViewImpl* webview = webframe_->GetWebViewImpl(); <newline>-  WebViewDelegate* d = webview->delegate(); <newline>   DocumentLoader* documentLoader = <newline>       webframe_->frame()->loader()->activeDocumentLoader(); <newline>   WebDataSourceImpl* data_source = <newline>@@ -330,8 +329,8 @@ void WebFrameLoaderClient::dispatchDidFinishDocumentLoad() { <newline>   // listeners and their associated HTMLInputElements. <newline>   webframe_->ClearPasswordListeners(); <newline>-  if (d) <newline>-    d->DidFinishDocumentLoadForFrame(webview, webframe_); <newline>+  if (webview && webview->delegate()) <newline>+    webview->delegate()->DidFinishDocumentLoadForFrame(webview, webframe_); <newline> } <newline> bool WebFrameLoaderClient::dispatchDidLoadResourceFromMemoryCache(
8019e398fcee63eb95f2ed0873aca9475744799	ager@chromium.org <ager@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Sep 7 07:32:26 2009 +0000	Guard against NULL webview in dispatchDidFinishDocumentLoad. The webview can be NULL if dispatchDidFinishDocumentLoad is called via a frame destructor. TEST=LayoutTests/http/tests/security/javascriptURL/javascriptURL-in-new-iframe.html	20324		http://codereview.chromium.org/194022	svn://svn.chromium.org/chrome/trunk/src@25596 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/webframeloaderclient_impl.cc b/webkit/glue/webframeloaderclient_impl.cc <newline>index 760d59a..5fdaf9e 100644 <newline>--- a/webkit/glue/webframeloaderclient_impl.cc <newline>+++ b/webkit/glue/webframeloaderclient_impl.cc <newline>@@ -320,7 +320,6 @@ void WebFrameLoaderClient::dispatchDidFailLoading(DocumentLoader* loader, <newline> void WebFrameLoaderClient::dispatchDidFinishDocumentLoad() { <newline>   WebViewImpl* webview = webframe_->GetWebViewImpl(); <newline>-  WebViewDelegate* d = webview->delegate(); <newline>   DocumentLoader* documentLoader = <newline>       webframe_->frame()->loader()->activeDocumentLoader(); <newline>   WebDataSourceImpl* data_source = <newline>@@ -330,8 +329,8 @@ void WebFrameLoaderClient::dispatchDidFinishDocumentLoad() { <newline>   // listeners and their associated HTMLInputElements. <newline>   webframe_->ClearPasswordListeners(); <newline>-  if (d) <newline>-    d->DidFinishDocumentLoadForFrame(webview, webframe_); <newline>+  if (webview && webview->delegate()) <newline>+    webview->delegate()->DidFinishDocumentLoadForFrame(webview, webframe_); <newline> } <newline> bool WebFrameLoaderClient::dispatchDidLoadResourceFromMemoryCache(
3c198dc8b3e16a8f602f6c16a8062224529b0ef	pam@chromium.org <pam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 28 22:00:41 2009 +0000	De-orange the layout tests: remove passing tests from the list and add PASS notation where needed. Haven't failed in 100+ builds: LINUX : LayoutTests/fast/history/back-forward-is-asynchronous.html LINUX : LayoutTests/fast/multicol/columns-shorthand-parsing.html MAC : LayoutTests/fast/css/only-of-type-pseudo-class.html MAC : LayoutTests/fast/events/pointer-events-2.html MAC : LayoutTests/fast/forms/listbox-onchange.html MAC : LayoutTests/fast/forms/listbox-selection.html MAC : LayoutTests/fast/forms/button-state-restore.html MAC : LayoutTests/fast/forms/input-type-change2.html Have been passing occasionally for at least 100 builds: LINUX : LayoutTests/svg/dynamic-updates/SVGClipPathElement-dom-clipPathUnits-attr.html LINUX : LayoutTests/svg/dynamic-updates/SVGClipPathElement-dom-clipPathUnits-prop.html Apparently fixed by r24625: MAC : LayoutTests/http/tests/security/cross-frame-access-protocol-explicit-domain.html MAC : LayoutTests/http/tests/security/cross-frame-access-protocol.html MAC : LayoutTests/http/tests/security/originHeader/origin-header-for-https.html Apparently fixed sometime before build 2930 (r24560): r24546-24548 MAC : LayoutTests/fast/history/back-forward-is-asynchronous.html TEST=covered by layout tests	0345 : LayoutTests/fast/js/getOwnPropertyDescriptor.html = FAIL		http://codereview.chromium.org/173614	svn://svn.chromium.org/chrome/trunk/src@24809 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 7e592a5..0dbccd0 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -1415,8 +1415,6 @@ BUG10354 MAC : LayoutTests/plugins/netscape-construct.html = FAIL <newline>-BUG10356 MAC : LayoutTests/http/tests/security/originHeader/origin-header-for-https.html = TIMEOUT FAIL <newline>- <newline> // MERGE 38389:38450 <newline> // WebKit regression: https://bugs.webkit.org/show_bug.cgi?id=20342 <newline> // Fails upstream, deferring for now. <newline>@@ -1478,8 +1476,6 @@ BUG10367 MAC : LayoutTests/fast/events/attempt-scroll-with-no-scrollbars.html = <newline> // selection <newline>-BUG10369 MAC : LayoutTests/fast/forms/listbox-onchange.html = FAIL <newline>-BUG10369 MAC : LayoutTests/fast/forms/listbox-selection.html = FAIL <newline>@@ -1779,10 +1775,6 @@ BUG10430 LINUX : LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t.svg = FAIL <newline>-// Always fails for mac, new failure with merge for eseidel <newline>-BUG5248 MAC : LayoutTests/http/tests/security/cross-frame-access-protocol-explicit-domain.html = FAIL <newline>-BUG5248 MAC : LayoutTests/http/tests/security/cross-frame-access-protocol.html = FAIL <newline>- <newline> // New tests from merge 41181:41217 <newline>@@ -2636,9 +2628,9 @@ BUG18802 WIN : LayoutTests/http/tests/misc/referrer.html = TIMEOUT PASS <newline>-BUG18896 LINUX DEBUG : LayoutTests/svg/dynamic-updates/SVGClipPathElement-dom-clipPathUnits-attr.html = FAIL <newline>+BUG18896 LINUX DEBUG : LayoutTests/svg/dynamic-updates/SVGClipPathElement-dom-clipPathUnits-attr.html = PASS FAIL <newline>-BUG18896 LINUX DEBUG : LayoutTests/svg/dynamic-updates/SVGClipPathElement-svgdom-clipPathUnits-prop.html = FAIL <newline>+BUG18896 LINUX DEBUG : LayoutTests/svg/dynamic-updates/SVGClipPathElement-svgdom-clipPathUnits-prop.html = PASS FAIL <newline> // Test failures from WebKit merge 46894 to 46977 <newline>@@ -2675,8 +2667,6 @@ BUG19397 LINUX DEBUG : LayoutTests/svg/hixie/perf/002.xml = FAIL <newline> // Fallout from webkit 47305:47383 <newline>-BUG_JPARENT LINUX MAC: LayoutTests/fast/history/back-forward-is-asynchronous.html = TIMEOUT <newline>-BUG_JPARENT LINUX DEBUG : LayoutTests/fast/multicol/columns-shorthand-parsing.html = CRASH <newline> // WebKit roll r47417:47528 <newline>@@ -2689,12 +2679,6 @@ BUG19766 LINUX : LayoutTests/fast/replaced/width100percent-menulist.html = FAIL <newline>-// Temporary supression while we investigate. <newline>-BUG19842 MAC : LayoutTests/fast/forms/input-type-change2.html = CRASH <newline>- <newline>-// WebKit 47646:47719. <newline>-BUG20340 MAC : LayoutTests/fast/forms/button-state-restore.html = CRASH <newline>- <newline> // WebKit 47719:47732. New test. Time out on all 3 platforms. <newline>@@ -2708,9 +2692,6 @@ BUG20265 LINUX : LayoutTests/fast/forms/range-default-value.html = CRASH <newline>-// Fails after V8 rollup <newline>-BUG20314 MAC : LayoutTests/fast/css/only-of-type-pseudo-class.html = FAIL <newline>- <newline> // WebKit 47777:47790 - getOwnPropertyDescriptor
ec8cc601270e88253c3881bc225a17ee51f1117	pam@chromium.org <pam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 28 22:00:41 2009 +0000	De-orange the layout tests: remove passing tests from the list and add PASS notation where needed. Haven't failed in 100+ builds: LINUX : LayoutTests/fast/history/back-forward-is-asynchronous.html LINUX : LayoutTests/fast/multicol/columns-shorthand-parsing.html MAC : LayoutTests/fast/css/only-of-type-pseudo-class.html MAC : LayoutTests/fast/events/pointer-events-2.html MAC : LayoutTests/fast/forms/listbox-onchange.html MAC : LayoutTests/fast/forms/listbox-selection.html MAC : LayoutTests/fast/forms/button-state-restore.html MAC : LayoutTests/fast/forms/input-type-change2.html Have been passing occasionally for at least 100 builds: LINUX : LayoutTests/svg/dynamic-updates/SVGClipPathElement-dom-clipPathUnits-attr.html LINUX : LayoutTests/svg/dynamic-updates/SVGClipPathElement-dom-clipPathUnits-prop.html Apparently fixed by r24625: MAC : LayoutTests/http/tests/security/cross-frame-access-protocol-explicit-domain.html MAC : LayoutTests/http/tests/security/cross-frame-access-protocol.html MAC : LayoutTests/http/tests/security/originHeader/origin-header-for-https.html Apparently fixed sometime before build 2930 (r24560): r24546-24548 MAC : LayoutTests/fast/history/back-forward-is-asynchronous.html TEST=covered by layout tests	0345 : LayoutTests/fast/js/getOwnPropertyDescriptor.html = FAIL		http://codereview.chromium.org/173614	svn://svn.chromium.org/chrome/trunk/src@24809 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 7e592a5..0dbccd0 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -1415,8 +1415,6 @@ BUG10354 MAC : LayoutTests/plugins/netscape-construct.html = FAIL <newline>-BUG10356 MAC : LayoutTests/http/tests/security/originHeader/origin-header-for-https.html = TIMEOUT FAIL <newline>- <newline> // MERGE 38389:38450 <newline> // WebKit regression: https://bugs.webkit.org/show_bug.cgi?id=20342 <newline> // Fails upstream, deferring for now. <newline>@@ -1478,8 +1476,6 @@ BUG10367 MAC : LayoutTests/fast/events/attempt-scroll-with-no-scrollbars.html = <newline> // selection <newline>-BUG10369 MAC : LayoutTests/fast/forms/listbox-onchange.html = FAIL <newline>-BUG10369 MAC : LayoutTests/fast/forms/listbox-selection.html = FAIL <newline>@@ -1779,10 +1775,6 @@ BUG10430 LINUX : LayoutTests/svg/W3C-SVG-1.1/text-intro-05-t.svg = FAIL <newline>-// Always fails for mac, new failure with merge for eseidel <newline>-BUG5248 MAC : LayoutTests/http/tests/security/cross-frame-access-protocol-explicit-domain.html = FAIL <newline>-BUG5248 MAC : LayoutTests/http/tests/security/cross-frame-access-protocol.html = FAIL <newline>- <newline> // New tests from merge 41181:41217 <newline>@@ -2636,9 +2628,9 @@ BUG18802 WIN : LayoutTests/http/tests/misc/referrer.html = TIMEOUT PASS <newline>-BUG18896 LINUX DEBUG : LayoutTests/svg/dynamic-updates/SVGClipPathElement-dom-clipPathUnits-attr.html = FAIL <newline>+BUG18896 LINUX DEBUG : LayoutTests/svg/dynamic-updates/SVGClipPathElement-dom-clipPathUnits-attr.html = PASS FAIL <newline>-BUG18896 LINUX DEBUG : LayoutTests/svg/dynamic-updates/SVGClipPathElement-svgdom-clipPathUnits-prop.html = FAIL <newline>+BUG18896 LINUX DEBUG : LayoutTests/svg/dynamic-updates/SVGClipPathElement-svgdom-clipPathUnits-prop.html = PASS FAIL <newline> // Test failures from WebKit merge 46894 to 46977 <newline>@@ -2675,8 +2667,6 @@ BUG19397 LINUX DEBUG : LayoutTests/svg/hixie/perf/002.xml = FAIL <newline> // Fallout from webkit 47305:47383 <newline>-BUG_JPARENT LINUX MAC: LayoutTests/fast/history/back-forward-is-asynchronous.html = TIMEOUT <newline>-BUG_JPARENT LINUX DEBUG : LayoutTests/fast/multicol/columns-shorthand-parsing.html = CRASH <newline> // WebKit roll r47417:47528 <newline>@@ -2689,12 +2679,6 @@ BUG19766 LINUX : LayoutTests/fast/replaced/width100percent-menulist.html = FAIL <newline>-// Temporary supression while we investigate. <newline>-BUG19842 MAC : LayoutTests/fast/forms/input-type-change2.html = CRASH <newline>- <newline>-// WebKit 47646:47719. <newline>-BUG20340 MAC : LayoutTests/fast/forms/button-state-restore.html = CRASH <newline>- <newline> // WebKit 47719:47732. New test. Time out on all 3 platforms. <newline>@@ -2708,9 +2692,6 @@ BUG20265 LINUX : LayoutTests/fast/forms/range-default-value.html = CRASH <newline>-// Fails after V8 rollup <newline>-BUG20314 MAC : LayoutTests/fast/css/only-of-type-pseudo-class.html = FAIL <newline>- <newline> // WebKit 47777:47790 - getOwnPropertyDescriptor
8b45a330378fc9188c759e39dbefe73ae9177cf	jparent@chromium.org <jparent@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 28 18:42:51 2009 +0000	Rebaseline LayoutTests/fast/xmlhttprequest/xmlhttprequest-nonexistent-file.html for Windows and Linux.  Chrome allows xhr's to local directories (if the security origin of the document is file://) and Safari does not, so when testXHRDirectory is run on Safari hits an error handler, but returns a real result in Chrome.  Mac is still marked as failing because of unimplemented test shell features (See http://crbug.com/20458 for more details). TEST=layout test try bots	0477 : LayoutTests/http/tests/navigation/onload-navigation-iframe-2.html = TIMEOUT		http://codereview.chromium.org/173598	svn://svn.chromium.org/chrome/trunk/src@24756 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 25d3d86..d013203 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2012,7 +2012,10 @@ BUG10476 : LayoutTests/http/tests/xmlhttprequest/redirect-cross-origin-post-sync <newline> // Merge WebKit 42133:42199 regressions <newline>-BUG18686 : LayoutTests/fast/xmlhttprequest/xmlhttprequest-nonexistent-file.html = FAIL <newline>+// All platforms fail because Chrome allows XHR to local directories and Safari doesn't. <newline>+// Mac also has unimplemented test shell features. <newline>+BUG20450 LINUX WIN : LayoutTests/fast/xmlhttprequest/xmlhttprequest-nonexistent-file.html = FAIL <newline>+BUG20458 MAC : LayoutTests/fast/xmlhttprequest/xmlhttprequest-nonexistent-file.html = FAIL <newline> // Flaky since rev 13111.
4c84bc6d9fdc15a8d49786b28ee2256aaaf50a8	jparent@chromium.org <jparent@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 28 18:42:51 2009 +0000	Rebaseline LayoutTests/fast/xmlhttprequest/xmlhttprequest-nonexistent-file.html for Windows and Linux.  Chrome allows xhr's to local directories (if the security origin of the document is file://) and Safari does not, so when testXHRDirectory is run on Safari hits an error handler, but returns a real result in Chrome.  Mac is still marked as failing because of unimplemented test shell features (See http://crbug.com/20458 for more details). TEST=layout test try bots	0477 : LayoutTests/http/tests/navigation/onload-navigation-iframe-2.html = TIMEOUT		http://codereview.chromium.org/173598	svn://svn.chromium.org/chrome/trunk/src@24756 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 25d3d86..d013203 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2012,7 +2012,10 @@ BUG10476 : LayoutTests/http/tests/xmlhttprequest/redirect-cross-origin-post-sync <newline> // Merge WebKit 42133:42199 regressions <newline>-BUG18686 : LayoutTests/fast/xmlhttprequest/xmlhttprequest-nonexistent-file.html = FAIL <newline>+// All platforms fail because Chrome allows XHR to local directories and Safari doesn't. <newline>+// Mac also has unimplemented test shell features. <newline>+BUG20450 LINUX WIN : LayoutTests/fast/xmlhttprequest/xmlhttprequest-nonexistent-file.html = FAIL <newline>+BUG20458 MAC : LayoutTests/fast/xmlhttprequest/xmlhttprequest-nonexistent-file.html = FAIL <newline> // Flaky since rev 13111.
b94bd20fa07dbcd5cb2cb25b38bc2db8b33c37f	tejasshah@google.com <tejasshah@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 26 20:28:19 2009 +0000	With this change script can look out for password file if password was not supplied as a parameter. This change is required for buildbot slave security, as buildbot will call this script without password and can't store password for calling.			http://codereview.chromium.org/173500	svn://svn.chromium.org/chrome/trunk/src@24516 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/live_sync/sync_integration_test.py b/chrome/test/live_sync/sync_integration_test.py <newline>index 913c473..5d15fc4 100644 <newline>--- a/chrome/test/live_sync/sync_integration_test.py <newline>+++ b/chrome/test/live_sync/sync_integration_test.py <newline>@@ -369,9 +369,19 @@ if '__main__' == __name__: <newline>   option_parser.add_option( <newline>       '', '--sync-test-password', help='Password for the test account') <newline>   options, args = option_parser.parse_args() <newline>+  if not options.sync_test_password: <newline>+    if os.path.exists('sync_password'): <newline>+      fs = open('sync_password', 'r') <newline>+      lines = fs.readlines() <newline>+      if len(lines)==1: <newline>+        options.sync_test_password = lines[0].strip() <newline>+      else: <newline>+        sys.stderr.write('sync_password file is not in required format.\n') <newline>+    else: <newline>+      sys.stderr.write( <newline>+          'Missing required parameter- sync_test_password, please fix it.\n') <newline>   if (not options.build_dir or not options.http_server_url or <newline>-      not options.http_server_port or not options.sync_test_username or <newline>-      not options.sync_test_password): <newline>+      not options.http_server_port or not options.sync_test_username): <newline>     sys.stderr.write('Missing required parameter, please fix it.\n') <newline>     option_parser.print_help() <newline>     sys.exit(1)
aa58f2b4d950ef8c77a2b80184e5ff29dea476c	tejasshah@google.com <tejasshah@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 26 20:28:19 2009 +0000	With this change script can look out for password file if password was not supplied as a parameter. This change is required for buildbot slave security, as buildbot will call this script without password and can't store password for calling.			http://codereview.chromium.org/173500	svn://svn.chromium.org/chrome/trunk/src@24516 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/live_sync/sync_integration_test.py b/chrome/test/live_sync/sync_integration_test.py <newline>index 913c473..5d15fc4 100644 <newline>--- a/chrome/test/live_sync/sync_integration_test.py <newline>+++ b/chrome/test/live_sync/sync_integration_test.py <newline>@@ -369,9 +369,19 @@ if '__main__' == __name__: <newline>   option_parser.add_option( <newline>       '', '--sync-test-password', help='Password for the test account') <newline>   options, args = option_parser.parse_args() <newline>+  if not options.sync_test_password: <newline>+    if os.path.exists('sync_password'): <newline>+      fs = open('sync_password', 'r') <newline>+      lines = fs.readlines() <newline>+      if len(lines)==1: <newline>+        options.sync_test_password = lines[0].strip() <newline>+      else: <newline>+        sys.stderr.write('sync_password file is not in required format.\n') <newline>+    else: <newline>+      sys.stderr.write( <newline>+          'Missing required parameter- sync_test_password, please fix it.\n') <newline>   if (not options.build_dir or not options.http_server_url or <newline>-      not options.http_server_port or not options.sync_test_username or <newline>-      not options.sync_test_password): <newline>+      not options.http_server_port or not options.sync_test_username): <newline>     sys.stderr.write('Missing required parameter, please fix it.\n') <newline>     option_parser.print_help() <newline>     sys.exit(1)
3073c4d4963472b71a7a7f89c0ab27eea9e24d3	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Aug 15 21:44:31 2009 +0000	Add "bool FilePath::ReferencesParent()" which adds a clean & simple way for checking for ".." in a FilePath. Needed to make an upcoming security fix clean. TEST=FilePathTest.ReferencesParent	NONE		http://codereview.chromium.org/172012	svn://svn.chromium.org/chrome/trunk/src@23528 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/file_path_unittest.cc b/base/file_path_unittest.cc <newline>index ca30baa..e14bbca 100644 <newline>--- a/base/file_path_unittest.cc <newline>+++ b/base/file_path_unittest.cc <newline>@@ -535,7 +535,6 @@ TEST_F(FilePathTest, EqualityTest) { <newline>       b.value(); <newline>   } <newline>- <newline>   for (size_t i = 0; i < arraysize(cases); ++i) { <newline>     FilePath a(cases[i].inputs[0]); <newline>     FilePath b(cases[i].inputs[1]); <newline>@@ -734,3 +733,35 @@ TEST_F(FilePathTest, MatchesExtension) { <newline>         "i: " << i << ", path: " << path.value() << ", ext: " << ext; <newline>   } <newline> } <newline>+ <newline>+TEST_F(FilePathTest, ReferencesParent) { <newline>+  const struct UnaryBooleanTestData cases[] = { <newline>+    { FPL("."),        false }, <newline>+    { FPL(".."),       true }, <newline>+    { FPL("a.."),      false }, <newline>+    { FPL("..a"),      false }, <newline>+    { FPL("../"),      true }, <newline>+    { FPL("/.."),      true }, <newline>+    { FPL("/../"),     true }, <newline>+    { FPL("/a../"),    false }, <newline>+    { FPL("/..a/"),    false }, <newline>+    { FPL("//.."),     true }, <newline>+    { FPL("..//"),     true }, <newline>+    { FPL("//..//"),   true }, <newline>+    { FPL("a//..//c"), true }, <newline>+    { FPL("../b/c"),   true }, <newline>+    { FPL("/../b/c"),  true }, <newline>+    { FPL("a/b/.."),   true }, <newline>+    { FPL("a/b/../"),  true }, <newline>+    { FPL("a/../c"),   true }, <newline>+    { FPL("a/b/c"),    false }, <newline>+  }; <newline>+ <newline>+  for (size_t i = 0; i < arraysize(cases); ++i) { <newline>+    FilePath input(cases[i].input); <newline>+    bool observed = input.ReferencesParent(); <newline>+    EXPECT_EQ(cases[i].expected, observed) << <newline>+              "i: " << i << ", input: " << input.value(); <newline>+  } <newline>+} <newline>+
67086103743fa898f4dedae1c7c07a9688c27be	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Aug 15 21:44:31 2009 +0000	Add "bool FilePath::ReferencesParent()" which adds a clean & simple way for checking for ".." in a FilePath. Needed to make an upcoming security fix clean. TEST=FilePathTest.ReferencesParent	NONE		http://codereview.chromium.org/172012	svn://svn.chromium.org/chrome/trunk/src@23528 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/file_path_unittest.cc b/base/file_path_unittest.cc <newline>index ca30baa..e14bbca 100644 <newline>--- a/base/file_path_unittest.cc <newline>+++ b/base/file_path_unittest.cc <newline>@@ -535,7 +535,6 @@ TEST_F(FilePathTest, EqualityTest) { <newline>       b.value(); <newline>   } <newline>- <newline>   for (size_t i = 0; i < arraysize(cases); ++i) { <newline>     FilePath a(cases[i].inputs[0]); <newline>     FilePath b(cases[i].inputs[1]); <newline>@@ -734,3 +733,35 @@ TEST_F(FilePathTest, MatchesExtension) { <newline>         "i: " << i << ", path: " << path.value() << ", ext: " << ext; <newline>   } <newline> } <newline>+ <newline>+TEST_F(FilePathTest, ReferencesParent) { <newline>+  const struct UnaryBooleanTestData cases[] = { <newline>+    { FPL("."),        false }, <newline>+    { FPL(".."),       true }, <newline>+    { FPL("a.."),      false }, <newline>+    { FPL("..a"),      false }, <newline>+    { FPL("../"),      true }, <newline>+    { FPL("/.."),      true }, <newline>+    { FPL("/../"),     true }, <newline>+    { FPL("/a../"),    false }, <newline>+    { FPL("/..a/"),    false }, <newline>+    { FPL("//.."),     true }, <newline>+    { FPL("..//"),     true }, <newline>+    { FPL("//..//"),   true }, <newline>+    { FPL("a//..//c"), true }, <newline>+    { FPL("../b/c"),   true }, <newline>+    { FPL("/../b/c"),  true }, <newline>+    { FPL("a/b/.."),   true }, <newline>+    { FPL("a/b/../"),  true }, <newline>+    { FPL("a/../c"),   true }, <newline>+    { FPL("a/b/c"),    false }, <newline>+  }; <newline>+ <newline>+  for (size_t i = 0; i < arraysize(cases); ++i) { <newline>+    FilePath input(cases[i].input); <newline>+    bool observed = input.ReferencesParent(); <newline>+    EXPECT_EQ(cases[i].expected, observed) << <newline>+              "i: " << i << ", input: " << input.value(); <newline>+  } <newline>+} <newline>+
04cbac7771f35b78d00fcb0a1cc4435a1b1e701	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 12 21:47:13 2009 +0000	Linux sandbox: fix security issue. (Reported by Julien Tinnes) Because the chroot helper process and the zygote share a FILES structure, the latter can race the former and change the value of cwd before it does chroot("."). Because of this, the zygote could chroot into a directory of its choosing. Once there, it could setup hardlinks to SUID binaries and possibly make them misbehave if they weren't sufficiently paranoid. This possibility should have been migigated by the removal of dangerous environment variables. However, we had to reinstate them in order to pass LD_LIBRARY_PATH because some setups don't have ld.so setup to use /usr/lib32 and also for ffmpeg. http://codereview.chromium.org/164427				svn://svn.chromium.org/chrome/trunk/src@23228 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/sandbox/linux/suid/sandbox.cc b/sandbox/linux/suid/sandbox.cc <newline>index 26aee65..ea6b232 100644 <newline>--- a/sandbox/linux/suid/sandbox.cc <newline>+++ b/sandbox/linux/suid/sandbox.cc <newline>@@ -121,13 +121,17 @@ static int CloneChrootHelperProcess() { <newline>     fchmod(chroot_dir_fd, 0000 /* no-access */); <newline>     struct stat st; <newline>-    if (stat(".", &st)) <newline>+    if (fstat(chroot_dir_fd, &st)) <newline>       FatalError("stat"); <newline>     if (st.st_uid || st.st_gid || st.st_mode & S_IWOTH) <newline>       FatalError("Bad permissions on chroot temp directory"); <newline>-    if (chroot(".")) <newline>+    char proc_self_fd_str[128]; <newline>+    snprintf(proc_self_fd_str, sizeof(proc_self_fd_str), "/proc/self/fd/%d", <newline>+             chroot_dir_fd); <newline>+ <newline>+    if (chroot(proc_self_fd_str)) <newline>       FatalError("Cannot chroot into temp directory"); <newline>     if (chdir("/"))
b3dd2d4c849d348cc6aa8bdeabcf4a9f82d815e	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Aug 12 21:47:13 2009 +0000	Linux sandbox: fix security issue. (Reported by Julien Tinnes) Because the chroot helper process and the zygote share a FILES structure, the latter can race the former and change the value of cwd before it does chroot("."). Because of this, the zygote could chroot into a directory of its choosing. Once there, it could setup hardlinks to SUID binaries and possibly make them misbehave if they weren't sufficiently paranoid. This possibility should have been migigated by the removal of dangerous environment variables. However, we had to reinstate them in order to pass LD_LIBRARY_PATH because some setups don't have ld.so setup to use /usr/lib32 and also for ffmpeg. http://codereview.chromium.org/164427				svn://svn.chromium.org/chrome/trunk/src@23228 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/sandbox/linux/suid/sandbox.cc b/sandbox/linux/suid/sandbox.cc <newline>index 26aee65..ea6b232 100644 <newline>--- a/sandbox/linux/suid/sandbox.cc <newline>+++ b/sandbox/linux/suid/sandbox.cc <newline>@@ -121,13 +121,17 @@ static int CloneChrootHelperProcess() { <newline>     fchmod(chroot_dir_fd, 0000 /* no-access */); <newline>     struct stat st; <newline>-    if (stat(".", &st)) <newline>+    if (fstat(chroot_dir_fd, &st)) <newline>       FatalError("stat"); <newline>     if (st.st_uid || st.st_gid || st.st_mode & S_IWOTH) <newline>       FatalError("Bad permissions on chroot temp directory"); <newline>-    if (chroot(".")) <newline>+    char proc_self_fd_str[128]; <newline>+    snprintf(proc_self_fd_str, sizeof(proc_self_fd_str), "/proc/self/fd/%d", <newline>+             chroot_dir_fd); <newline>+ <newline>+    if (chroot(proc_self_fd_str)) <newline>       FatalError("Cannot chroot into temp directory"); <newline>     if (chdir("/"))
2a219aa96dd4ddf8dd51ea63d4f0f307eaec60e	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Aug 6 23:00:35 2009 +0000	Enable new FTP for Windows TestShell so that the results of block-test.html are the same across platforms.  WTC tells me that it should be ready to go, and it anyways is only exercised by these two security/block-test*.html tests. Also, add back the fix from r22651. Extend that fix a bit so that when we do not have a special mapping, we just spit out the existing error code value.  This way, if we get an unexpected result, the output will tell us what the original error code was.  This change doesn't impact any layout tests. R=dglazkov,wtc TEST=none	8665 MAC : LayoutTests/security/block-test.html = FAIL	hellRequestContext::~TestShellRequestContext() {	http://codereview.chromium.org/165091	svn://svn.chromium.org/chrome/trunk/src@22686 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_webview_delegate.cc b/webkit/tools/test_shell/test_webview_delegate.cc <newline>index 3bda3ef..5280c06 100644 <newline>--- a/webkit/tools/test_shell/test_webview_delegate.cc <newline>+++ b/webkit/tools/test_shell/test_webview_delegate.cc <newline>@@ -138,10 +138,10 @@ std::string GetResponseDescription(const WebURLResponse& response) { <newline> } <newline> std::string GetErrorDescription(const WebURLError& error) { <newline>-  std::string domain; <newline>-  int code; <newline>+  std::string domain = UTF16ToASCII(error.domain); <newline>+  int code = error.reason; <newline>-  if (EqualsASCII(error.domain, net::kErrorDomain)) { <newline>+  if (domain == net::kErrorDomain) { <newline>     domain = "NSURLErrorDomain"; <newline>     switch (error.reason) { <newline>       case net::ERR_ABORTED: <newline>@@ -154,15 +154,12 @@ std::string GetErrorDescription(const WebURLError& error) { <newline>         code = 103; <newline>         break; <newline>       case net::ERR_ADDRESS_INVALID: <newline>+      case net::ERR_ADDRESS_UNREACHABLE: <newline>         code = -1004; <newline>         break; <newline>-      default: <newline>-        code = -1; <newline>     } <newline>   } else { <newline>     DLOG(WARNING) << "Unknown error domain"; <newline>-    domain = UTF16ToASCII(error.domain); <newline>-    code = error.reason; <newline>   } <newline>   return StringPrintf("<NSError domain %s, code %d, failing URL \"%s\">",
1151a2b3d06e47f95f3431fd020a8f59c00678e	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Aug 6 23:00:35 2009 +0000	Enable new FTP for Windows TestShell so that the results of block-test.html are the same across platforms.  WTC tells me that it should be ready to go, and it anyways is only exercised by these two security/block-test*.html tests. Also, add back the fix from r22651. Extend that fix a bit so that when we do not have a special mapping, we just spit out the existing error code value.  This way, if we get an unexpected result, the output will tell us what the original error code was.  This change doesn't impact any layout tests. R=dglazkov,wtc TEST=none	8665 MAC : LayoutTests/security/block-test.html = FAIL	hellRequestContext::~TestShellRequestContext() {	http://codereview.chromium.org/165091	svn://svn.chromium.org/chrome/trunk/src@22686 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_webview_delegate.cc b/webkit/tools/test_shell/test_webview_delegate.cc <newline>index 3bda3ef..5280c06 100644 <newline>--- a/webkit/tools/test_shell/test_webview_delegate.cc <newline>+++ b/webkit/tools/test_shell/test_webview_delegate.cc <newline>@@ -138,10 +138,10 @@ std::string GetResponseDescription(const WebURLResponse& response) { <newline> } <newline> std::string GetErrorDescription(const WebURLError& error) { <newline>-  std::string domain; <newline>-  int code; <newline>+  std::string domain = UTF16ToASCII(error.domain); <newline>+  int code = error.reason; <newline>-  if (EqualsASCII(error.domain, net::kErrorDomain)) { <newline>+  if (domain == net::kErrorDomain) { <newline>     domain = "NSURLErrorDomain"; <newline>     switch (error.reason) { <newline>       case net::ERR_ABORTED: <newline>@@ -154,15 +154,12 @@ std::string GetErrorDescription(const WebURLError& error) { <newline>         code = 103; <newline>         break; <newline>       case net::ERR_ADDRESS_INVALID: <newline>+      case net::ERR_ADDRESS_UNREACHABLE: <newline>         code = -1004; <newline>         break; <newline>-      default: <newline>-        code = -1; <newline>     } <newline>   } else { <newline>     DLOG(WARNING) << "Unknown error domain"; <newline>-    domain = UTF16ToASCII(error.domain); <newline>-    code = error.reason; <newline>   } <newline>   return StringPrintf("<NSError domain %s, code %d, failing URL \"%s\">",
11538b6f736cdb6c271346123c83e42c94a6fbc	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Aug 6 18:42:39 2009 +0000	Update baseline for security/block-test.html This CL also revises how we print resource errors to make our results more close resemble those of Mac WebKit. security/block-test-no-port.html is no longer WONTFIX since we always run layout tests with a no-proxy configuration now. security/block-test.html does not need to be skipped on mac since we now have a FTP implementation ;-) R=dglazkov TEST=none	8656 MAC : LayoutTests/fast/dom/Window/window-lookup-precedence.html = FAIL CRASH		http://codereview.chromium.org/165038	svn://svn.chromium.org/chrome/trunk/src@22635 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_webview_delegate.cc b/webkit/tools/test_shell/test_webview_delegate.cc <newline>index d01c39e..3bda3ef 100644 <newline>--- a/webkit/tools/test_shell/test_webview_delegate.cc <newline>+++ b/webkit/tools/test_shell/test_webview_delegate.cc <newline>@@ -121,6 +121,13 @@ const char* WebNavigationTypeToString(WebNavigationType type) { <newline>   return kIllegalString; <newline> } <newline>+std::string GetURLDescription(const GURL& url) { <newline>+  if (url.SchemeIs("file")) <newline>+    return url.ExtractFileName(); <newline>+ <newline>+  return url.possibly_invalid_spec(); <newline>+} <newline>+ <newline> std::string GetResponseDescription(const WebURLResponse& response) { <newline>   if (response.isNull()) <newline>     return "(null)"; <newline>@@ -130,15 +137,36 @@ std::string GetResponseDescription(const WebURLResponse& response) { <newline>       response.httpStatusCode()); <newline> } <newline>-int ToNSErrorCode(const WebURLError& error) { <newline>-  if (UTF16ToUTF8(error.domain) == net::kErrorDomain) { <newline>+std::string GetErrorDescription(const WebURLError& error) { <newline>+  std::string domain; <newline>+  int code; <newline>+ <newline>+  if (EqualsASCII(error.domain, net::kErrorDomain)) { <newline>+    domain = "NSURLErrorDomain"; <newline>     switch (error.reason) { <newline>       case net::ERR_ABORTED: <newline>-        return -999; <newline>+        code = -999; <newline>+        break; <newline>+      case net::ERR_UNSAFE_PORT: <newline>+        // Our unsafe port checking happens at the network stack level, but we <newline>+        // make this translation here to match the behavior of stock WebKit. <newline>+        domain = "WebKitErrorDomain"; <newline>+        code = 103; <newline>+        break; <newline>+      case net::ERR_ADDRESS_INVALID: <newline>+        code = -1004; <newline>+        break; <newline>+      default: <newline>+        code = -1; <newline>     } <newline>+  } else { <newline>+    DLOG(WARNING) << "Unknown error domain"; <newline>+    domain = UTF16ToASCII(error.domain); <newline>+    code = error.reason; <newline>   } <newline>-  DLOG(WARNING) << "Add an error code mapping!"; <newline>-  return error.reason; <newline>+ <newline>+  return StringPrintf("<NSError domain %s, code %d, failing URL \"%s\">", <newline>+      domain.c_str(), code, error.unreachableURL.spec().data()); <newline> } <newline> }  // namespace <newline>@@ -216,15 +244,9 @@ WebNavigationPolicy TestWebViewDelegate::PolicyForNavigationAction( <newline>   WebNavigationPolicy result; <newline>   if (policy_delegate_enabled_) { <newline>     std::wstring frame_name = frame->GetName(); <newline>-    std::string url_description; <newline>-    GURL request_url = request.url(); <newline>-    if (request_url.SchemeIs("file")) { <newline>-      url_description = request_url.ExtractFileName(); <newline>-    } else { <newline>-      url_description = request_url.spec(); <newline>-    } <newline>     printf("Policy delegate: attempt to load %s with navigation type '%s'\n", <newline>-           url_description.c_str(), WebNavigationTypeToString(type)); <newline>+           GetURLDescription(request.url()).c_str(), <newline>+           WebNavigationTypeToString(type)); <newline>     if (policy_delegate_is_permissive_) { <newline>       result = WebKit::WebNavigationPolicyCurrentTab; <newline>     } else { <newline>@@ -265,7 +287,7 @@ void TestWebViewDelegate::WillSendRequest( <newline>            " http method %s> redirectResponse %s\n", <newline>            GetResourceDescription(identifier).c_str(), <newline>            request_url.c_str(), <newline>-           main_document_url.possibly_invalid_spec().c_str(), <newline>+           GetURLDescription(main_document_url).c_str(), <newline>            UTF16ToUTF8(request->httpMethod()).c_str(), <newline>            GetResponseDescription(redirect_response).c_str()); <newline>   } <newline>@@ -323,11 +345,9 @@ void TestWebViewDelegate::DidFailLoadingWithError(WebFrame* webframe, <newline>                                                   uint32 identifier, <newline>                                                   const WebURLError& error) { <newline>   if (shell_->ShouldDumpResourceLoadCallbacks()) { <newline>-    printf("%s - didFailLoadingWithError: <NSError domain NSURLErrorDomain," <newline>-           " code %d, failing URL \"%s\">\n", <newline>+    printf("%s - didFailLoadingWithError: %s\n", <newline>            GetResourceDescription(identifier).c_str(), <newline>-           ToNSErrorCode(error), <newline>-           error.unreachableURL.spec().data()); <newline>+           GetErrorDescription(error).c_str()); <newline>   } <newline>   resource_identifier_map_.erase(identifier);
1622c7100f20cbd2c8c82204d99ee082cda19f1	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Aug 6 18:42:39 2009 +0000	Update baseline for security/block-test.html This CL also revises how we print resource errors to make our results more close resemble those of Mac WebKit. security/block-test-no-port.html is no longer WONTFIX since we always run layout tests with a no-proxy configuration now. security/block-test.html does not need to be skipped on mac since we now have a FTP implementation ;-) R=dglazkov TEST=none	8656 MAC : LayoutTests/fast/dom/Window/window-lookup-precedence.html = FAIL CRASH		http://codereview.chromium.org/165038	svn://svn.chromium.org/chrome/trunk/src@22635 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_webview_delegate.cc b/webkit/tools/test_shell/test_webview_delegate.cc <newline>index d01c39e..3bda3ef 100644 <newline>--- a/webkit/tools/test_shell/test_webview_delegate.cc <newline>+++ b/webkit/tools/test_shell/test_webview_delegate.cc <newline>@@ -121,6 +121,13 @@ const char* WebNavigationTypeToString(WebNavigationType type) { <newline>   return kIllegalString; <newline> } <newline>+std::string GetURLDescription(const GURL& url) { <newline>+  if (url.SchemeIs("file")) <newline>+    return url.ExtractFileName(); <newline>+ <newline>+  return url.possibly_invalid_spec(); <newline>+} <newline>+ <newline> std::string GetResponseDescription(const WebURLResponse& response) { <newline>   if (response.isNull()) <newline>     return "(null)"; <newline>@@ -130,15 +137,36 @@ std::string GetResponseDescription(const WebURLResponse& response) { <newline>       response.httpStatusCode()); <newline> } <newline>-int ToNSErrorCode(const WebURLError& error) { <newline>-  if (UTF16ToUTF8(error.domain) == net::kErrorDomain) { <newline>+std::string GetErrorDescription(const WebURLError& error) { <newline>+  std::string domain; <newline>+  int code; <newline>+ <newline>+  if (EqualsASCII(error.domain, net::kErrorDomain)) { <newline>+    domain = "NSURLErrorDomain"; <newline>     switch (error.reason) { <newline>       case net::ERR_ABORTED: <newline>-        return -999; <newline>+        code = -999; <newline>+        break; <newline>+      case net::ERR_UNSAFE_PORT: <newline>+        // Our unsafe port checking happens at the network stack level, but we <newline>+        // make this translation here to match the behavior of stock WebKit. <newline>+        domain = "WebKitErrorDomain"; <newline>+        code = 103; <newline>+        break; <newline>+      case net::ERR_ADDRESS_INVALID: <newline>+        code = -1004; <newline>+        break; <newline>+      default: <newline>+        code = -1; <newline>     } <newline>+  } else { <newline>+    DLOG(WARNING) << "Unknown error domain"; <newline>+    domain = UTF16ToASCII(error.domain); <newline>+    code = error.reason; <newline>   } <newline>-  DLOG(WARNING) << "Add an error code mapping!"; <newline>-  return error.reason; <newline>+ <newline>+  return StringPrintf("<NSError domain %s, code %d, failing URL \"%s\">", <newline>+      domain.c_str(), code, error.unreachableURL.spec().data()); <newline> } <newline> }  // namespace <newline>@@ -216,15 +244,9 @@ WebNavigationPolicy TestWebViewDelegate::PolicyForNavigationAction( <newline>   WebNavigationPolicy result; <newline>   if (policy_delegate_enabled_) { <newline>     std::wstring frame_name = frame->GetName(); <newline>-    std::string url_description; <newline>-    GURL request_url = request.url(); <newline>-    if (request_url.SchemeIs("file")) { <newline>-      url_description = request_url.ExtractFileName(); <newline>-    } else { <newline>-      url_description = request_url.spec(); <newline>-    } <newline>     printf("Policy delegate: attempt to load %s with navigation type '%s'\n", <newline>-           url_description.c_str(), WebNavigationTypeToString(type)); <newline>+           GetURLDescription(request.url()).c_str(), <newline>+           WebNavigationTypeToString(type)); <newline>     if (policy_delegate_is_permissive_) { <newline>       result = WebKit::WebNavigationPolicyCurrentTab; <newline>     } else { <newline>@@ -265,7 +287,7 @@ void TestWebViewDelegate::WillSendRequest( <newline>            " http method %s> redirectResponse %s\n", <newline>            GetResourceDescription(identifier).c_str(), <newline>            request_url.c_str(), <newline>-           main_document_url.possibly_invalid_spec().c_str(), <newline>+           GetURLDescription(main_document_url).c_str(), <newline>            UTF16ToUTF8(request->httpMethod()).c_str(), <newline>            GetResponseDescription(redirect_response).c_str()); <newline>   } <newline>@@ -323,11 +345,9 @@ void TestWebViewDelegate::DidFailLoadingWithError(WebFrame* webframe, <newline>                                                   uint32 identifier, <newline>                                                   const WebURLError& error) { <newline>   if (shell_->ShouldDumpResourceLoadCallbacks()) { <newline>-    printf("%s - didFailLoadingWithError: <NSError domain NSURLErrorDomain," <newline>-           " code %d, failing URL \"%s\">\n", <newline>+    printf("%s - didFailLoadingWithError: %s\n", <newline>            GetResourceDescription(identifier).c_str(), <newline>-           ToNSErrorCode(error), <newline>-           error.unreachableURL.spec().data()); <newline>+           GetErrorDescription(error).c_str()); <newline>   } <newline>   resource_identifier_map_.erase(identifier);
8b33139e66020c76b00eba6a0e01ad7967ff839	hamaji@chromium.org <hamaji@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Aug 6 09:49:47 2009 +0000	These tests seems to be OK now: Maybe the following webkit patch changed this. http://trac.webkit.org/changeset/46809 TEST=none	992 WIN LINUX : LayoutTests/fast/text/shadow-no-blur.html = FAIL		http://codereview.chromium.org/164051	svn://svn.chromium.org/chrome/trunk/src@22600 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index f5090d1..ca26841 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2217,13 +2217,6 @@ BUG9916 WIN LINUX : LayoutTests/http/tests/xmlhttprequest/web-apps/012.html = FA <newline> // Windows. Probably just need the same on other platforms. <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny-meta-tag-in-body.html = FAIL <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny-meta-tag-parent-same-origin-allow.html = FAIL <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny-meta-tag-parent-same-origin-deny.html = FAIL <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny-meta-tag.html = FAIL <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny.html = FAIL <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-parent-same-origin-allow.html = TIMEOUT FAIL <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-parent-same-origin-deny.html = FAIL <newline> // Regressions from WebKit merge 43264:42403, possibly due to r42375.
8c74e59733b0175df56812ddd949de40ba953ac	hamaji@chromium.org <hamaji@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Aug 6 09:49:47 2009 +0000	These tests seems to be OK now: Maybe the following webkit patch changed this. http://trac.webkit.org/changeset/46809 TEST=none	992 WIN LINUX : LayoutTests/fast/text/shadow-no-blur.html = FAIL		http://codereview.chromium.org/164051	svn://svn.chromium.org/chrome/trunk/src@22600 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index f5090d1..ca26841 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2217,13 +2217,6 @@ BUG9916 WIN LINUX : LayoutTests/http/tests/xmlhttprequest/web-apps/012.html = FA <newline> // Windows. Probably just need the same on other platforms. <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny-meta-tag-in-body.html = FAIL <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny-meta-tag-parent-same-origin-allow.html = FAIL <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny-meta-tag-parent-same-origin-deny.html = FAIL <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny-meta-tag.html = FAIL <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-deny.html = FAIL <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-parent-same-origin-allow.html = TIMEOUT FAIL <newline>-BUG9962 MAC : LayoutTests/http/tests/security/XFrameOptions/x-frame-options-parent-same-origin-deny.html = FAIL <newline> // Regressions from WebKit merge 43264:42403, possibly due to r42375.
04ea5c25e0dbd495ef0fe8a5c9a7ec41cfb6ffd	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 30 18:01:39 2009 +0000	Add plumbing for allowing the renderer to intercept and cancel redirects before they are sent. A good portion of this CL is to support the new UI test. The IPC to notify the renderer of a redirect now includes a ResponseInfo struct allowing WebURLLoaderImpl to provide detailed response info (including response headers) to WebKit.  This isn't strictly necessary, but I thought I'd include this to make the code more future proof. A cross origin restriction is added to SyncResourceHandler::OnRequestRedirected that mimics the code in WebCore/platform/network/cf/ResourceHandleCFNet.cpp. This is most unfortunate, and I filed a bug at bugs.webkit.org about the similar duplication of logic in WebCore. There seemed to be enough code paths leading to request cancellation at the ResourceDispatcher level that I couldn't easily ensure that a request only gets cancelled once.  So, I added an is_cancelled flag to record if it is not necessary to send a ViewHostMsg_CancelRequest IPC.  This avoids some warnings in the ResourceDispatcherHost. To support my UI test, I needed to change URLRequestMockHttpJob to know how to serve redirects.  I moved URLRequestHttpJob::IsRedirectResponse to its base class, URLRequestJob so that the implementation could be shared.  This revealed a minor bug in URLRequest.  We were never resetting response_info_ upon following a redirect.  I added this code consolidated similar code from URLRequest::Redirect and URLRequest::RestartWithJob into a new PrepareToRestart method. To support my UI test, I added a "hit count" field to URLRequestFilter, and I added an associated automation IPC to query the value.  The test was a bit challenging to write because there is no way to tell the difference from JS. Before and after, it appears to JS as though the cross-origin redirect failed. However, the server can see the extra redirect request.  So, I simply record the number of hits against URLs of the form http://mock.http/foo, and use that to observe if any extra requests were made.  I implemented the new IPC message by extending the AutomationResourceMessageFilter.  This allowed me to trap the IPC message on the IO thread where it is safe to probe the URLRequestFilter.  I then changed the implementation of AutomationMsg_SetFilteredInet to work similarly. I revised URLRequestMockHTTPJob::GetOnDiskPath to support ports.  This actually allowed me to reuse URLRequestMockHTTPJob to service URLs in different security origins.  My test redirects from http://mock.http/ to http://mock.http:4000/. Please see the comments in cross-origin-redirect-blocked.html for details about how the test functions. R=brettw,wtc TEST=covered by resource_dispatcher_host_uitest.cc	16413	equestCallback() : complete_(false) {	http://codereview.chromium.org/159370	svn://svn.chromium.org/chrome/trunk/src@22067 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index c11bcec..a7d27a0 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -151,9 +151,14 @@ class RequestProxy : public URLRequest::Delegate, <newline>   // various URLRequest callbacks.  The event hooks, defined below, trigger <newline>   // these methods asynchronously. <newline>-  void NotifyReceivedRedirect(const GURL& new_url) { <newline>-    if (peer_) <newline>-      peer_->OnReceivedRedirect(new_url); <newline>+  void NotifyReceivedRedirect(const GURL& new_url, <newline>+                              const ResourceLoaderBridge::ResponseInfo& info) { <newline>+    if (peer_ && peer_->OnReceivedRedirect(new_url, info)) { <newline>+      io_thread->message_loop()->PostTask(FROM_HERE, NewRunnableMethod( <newline>+          this, &RequestProxy::AsyncFollowDeferredRedirect)); <newline>+    } else { <newline>+      Cancel(); <newline>+    } <newline>   } <newline>   void NotifyReceivedResponse(const ResourceLoaderBridge::ResponseInfo& info, <newline>@@ -230,6 +235,14 @@ class RequestProxy : public URLRequest::Delegate, <newline>     Done(); <newline>   } <newline>+  void AsyncFollowDeferredRedirect() { <newline>+    // This can be null in cases where the request is already done. <newline>+    if (!request_.get()) <newline>+      return; <newline>+ <newline>+    request_->FollowDeferredRedirect(); <newline>+  } <newline>+ <newline>   void AsyncReadData() { <newline>     // This can be null in cases where the request is already done. <newline>     if (!request_.get()) <newline>@@ -252,9 +265,13 @@ class RequestProxy : public URLRequest::Delegate, <newline>   // callbacks) that run on the IO thread.  They are designed to be overridden <newline>   // by the SyncRequestProxy subclass. <newline>-  virtual void OnReceivedRedirect(const GURL& new_url) { <newline>+  virtual void OnReceivedRedirect( <newline>+      const GURL& new_url, <newline>+      const ResourceLoaderBridge::ResponseInfo& info, <newline>+      bool* defer_redirect) { <newline>+    *defer_redirect = true;  // See AsyncFollowDeferredRedirect <newline>     owner_loop_->PostTask(FROM_HERE, NewRunnableMethod( <newline>-        this, &RequestProxy::NotifyReceivedRedirect, new_url)); <newline>+        this, &RequestProxy::NotifyReceivedRedirect, new_url, info)); <newline>   } <newline>   virtual void OnReceivedResponse( <newline>@@ -282,19 +299,15 @@ class RequestProxy : public URLRequest::Delegate, <newline>                                   const GURL& new_url, <newline>                                   bool* defer_redirect) { <newline>     DCHECK(request->status().is_success()); <newline>-    OnReceivedRedirect(new_url); <newline>+    ResourceLoaderBridge::ResponseInfo info; <newline>+    PopulateResponseInfo(request, &info); <newline>+    OnReceivedRedirect(new_url, info, defer_redirect); <newline>   } <newline>   virtual void OnResponseStarted(URLRequest* request) { <newline>     if (request->status().is_success()) { <newline>       ResourceLoaderBridge::ResponseInfo info; <newline>-      info.request_time = request->request_time(); <newline>-      info.response_time = request->response_time(); <newline>-      info.headers = request->response_headers(); <newline>-      info.app_cache_id = WebAppCacheContext::kNoAppCacheId; <newline>-      request->GetMimeType(&info.mime_type); <newline>-      request->GetCharset(&info.charset); <newline>-      info.content_length = request->GetExpectedContentSize(); <newline>+      PopulateResponseInfo(request, &info); <newline>       OnReceivedResponse(info, false); <newline>       AsyncReadData();  // start reading <newline>     } else { <newline>@@ -358,6 +371,17 @@ class RequestProxy : public URLRequest::Delegate, <newline>     } <newline>   } <newline>+  void PopulateResponseInfo(URLRequest* request, <newline>+                            ResourceLoaderBridge::ResponseInfo* info) const { <newline>+    info->request_time = request->request_time(); <newline>+    info->response_time = request->response_time(); <newline>+    info->headers = request->response_headers(); <newline>+    info->app_cache_id = WebAppCacheContext::kNoAppCacheId; <newline>+    request->GetMimeType(&info->mime_type); <newline>+    request->GetCharset(&info->charset); <newline>+    info->content_length = request->GetExpectedContentSize(); <newline>+  } <newline>+ <newline>   scoped_ptr<URLRequest> request_; <newline>   // Size of our async IO data buffers <newline>@@ -397,7 +421,18 @@ class SyncRequestProxy : public RequestProxy { <newline>   // -------------------------------------------------------------------------- <newline>   // Event hooks that run on the IO thread: <newline>-  virtual void OnReceivedRedirect(const GURL& new_url) { <newline>+  virtual void OnReceivedRedirect( <newline>+      const GURL& new_url, <newline>+      const ResourceLoaderBridge::ResponseInfo& info, <newline>+      bool* defer_redirect) { <newline>+    // TODO(darin): It would be much better if this could live in WebCore, but <newline>+    // doing so requires API changes at all levels.  Similar code exists in <newline>+    // WebCore/platform/network/cf/ResourceHandleCFNet.cpp :-( <newline>+    if (new_url.GetOrigin() != result_->url.GetOrigin()) { <newline>+      LOG(ERROR) << "Cross origin redirect denied"; <newline>+      Cancel(); <newline>+      return; <newline>+    } <newline>     result_->url = new_url; <newline>   }
568a9e384e0f92422c68d4f31fb401df4acbaed	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 30 18:01:39 2009 +0000	Add plumbing for allowing the renderer to intercept and cancel redirects before they are sent. A good portion of this CL is to support the new UI test. The IPC to notify the renderer of a redirect now includes a ResponseInfo struct allowing WebURLLoaderImpl to provide detailed response info (including response headers) to WebKit.  This isn't strictly necessary, but I thought I'd include this to make the code more future proof. A cross origin restriction is added to SyncResourceHandler::OnRequestRedirected that mimics the code in WebCore/platform/network/cf/ResourceHandleCFNet.cpp. This is most unfortunate, and I filed a bug at bugs.webkit.org about the similar duplication of logic in WebCore. There seemed to be enough code paths leading to request cancellation at the ResourceDispatcher level that I couldn't easily ensure that a request only gets cancelled once.  So, I added an is_cancelled flag to record if it is not necessary to send a ViewHostMsg_CancelRequest IPC.  This avoids some warnings in the ResourceDispatcherHost. To support my UI test, I needed to change URLRequestMockHttpJob to know how to serve redirects.  I moved URLRequestHttpJob::IsRedirectResponse to its base class, URLRequestJob so that the implementation could be shared.  This revealed a minor bug in URLRequest.  We were never resetting response_info_ upon following a redirect.  I added this code consolidated similar code from URLRequest::Redirect and URLRequest::RestartWithJob into a new PrepareToRestart method. To support my UI test, I added a "hit count" field to URLRequestFilter, and I added an associated automation IPC to query the value.  The test was a bit challenging to write because there is no way to tell the difference from JS. Before and after, it appears to JS as though the cross-origin redirect failed. However, the server can see the extra redirect request.  So, I simply record the number of hits against URLs of the form http://mock.http/foo, and use that to observe if any extra requests were made.  I implemented the new IPC message by extending the AutomationResourceMessageFilter.  This allowed me to trap the IPC message on the IO thread where it is safe to probe the URLRequestFilter.  I then changed the implementation of AutomationMsg_SetFilteredInet to work similarly. I revised URLRequestMockHTTPJob::GetOnDiskPath to support ports.  This actually allowed me to reuse URLRequestMockHTTPJob to service URLs in different security origins.  My test redirects from http://mock.http/ to http://mock.http:4000/. Please see the comments in cross-origin-redirect-blocked.html for details about how the test functions. R=brettw,wtc TEST=covered by resource_dispatcher_host_uitest.cc	16413	equestCallback() : complete_(false) {	http://codereview.chromium.org/159370	svn://svn.chromium.org/chrome/trunk/src@22067 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index c11bcec..a7d27a0 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -151,9 +151,14 @@ class RequestProxy : public URLRequest::Delegate, <newline>   // various URLRequest callbacks.  The event hooks, defined below, trigger <newline>   // these methods asynchronously. <newline>-  void NotifyReceivedRedirect(const GURL& new_url) { <newline>-    if (peer_) <newline>-      peer_->OnReceivedRedirect(new_url); <newline>+  void NotifyReceivedRedirect(const GURL& new_url, <newline>+                              const ResourceLoaderBridge::ResponseInfo& info) { <newline>+    if (peer_ && peer_->OnReceivedRedirect(new_url, info)) { <newline>+      io_thread->message_loop()->PostTask(FROM_HERE, NewRunnableMethod( <newline>+          this, &RequestProxy::AsyncFollowDeferredRedirect)); <newline>+    } else { <newline>+      Cancel(); <newline>+    } <newline>   } <newline>   void NotifyReceivedResponse(const ResourceLoaderBridge::ResponseInfo& info, <newline>@@ -230,6 +235,14 @@ class RequestProxy : public URLRequest::Delegate, <newline>     Done(); <newline>   } <newline>+  void AsyncFollowDeferredRedirect() { <newline>+    // This can be null in cases where the request is already done. <newline>+    if (!request_.get()) <newline>+      return; <newline>+ <newline>+    request_->FollowDeferredRedirect(); <newline>+  } <newline>+ <newline>   void AsyncReadData() { <newline>     // This can be null in cases where the request is already done. <newline>     if (!request_.get()) <newline>@@ -252,9 +265,13 @@ class RequestProxy : public URLRequest::Delegate, <newline>   // callbacks) that run on the IO thread.  They are designed to be overridden <newline>   // by the SyncRequestProxy subclass. <newline>-  virtual void OnReceivedRedirect(const GURL& new_url) { <newline>+  virtual void OnReceivedRedirect( <newline>+      const GURL& new_url, <newline>+      const ResourceLoaderBridge::ResponseInfo& info, <newline>+      bool* defer_redirect) { <newline>+    *defer_redirect = true;  // See AsyncFollowDeferredRedirect <newline>     owner_loop_->PostTask(FROM_HERE, NewRunnableMethod( <newline>-        this, &RequestProxy::NotifyReceivedRedirect, new_url)); <newline>+        this, &RequestProxy::NotifyReceivedRedirect, new_url, info)); <newline>   } <newline>   virtual void OnReceivedResponse( <newline>@@ -282,19 +299,15 @@ class RequestProxy : public URLRequest::Delegate, <newline>                                   const GURL& new_url, <newline>                                   bool* defer_redirect) { <newline>     DCHECK(request->status().is_success()); <newline>-    OnReceivedRedirect(new_url); <newline>+    ResourceLoaderBridge::ResponseInfo info; <newline>+    PopulateResponseInfo(request, &info); <newline>+    OnReceivedRedirect(new_url, info, defer_redirect); <newline>   } <newline>   virtual void OnResponseStarted(URLRequest* request) { <newline>     if (request->status().is_success()) { <newline>       ResourceLoaderBridge::ResponseInfo info; <newline>-      info.request_time = request->request_time(); <newline>-      info.response_time = request->response_time(); <newline>-      info.headers = request->response_headers(); <newline>-      info.app_cache_id = WebAppCacheContext::kNoAppCacheId; <newline>-      request->GetMimeType(&info.mime_type); <newline>-      request->GetCharset(&info.charset); <newline>-      info.content_length = request->GetExpectedContentSize(); <newline>+      PopulateResponseInfo(request, &info); <newline>       OnReceivedResponse(info, false); <newline>       AsyncReadData();  // start reading <newline>     } else { <newline>@@ -358,6 +371,17 @@ class RequestProxy : public URLRequest::Delegate, <newline>     } <newline>   } <newline>+  void PopulateResponseInfo(URLRequest* request, <newline>+                            ResourceLoaderBridge::ResponseInfo* info) const { <newline>+    info->request_time = request->request_time(); <newline>+    info->response_time = request->response_time(); <newline>+    info->headers = request->response_headers(); <newline>+    info->app_cache_id = WebAppCacheContext::kNoAppCacheId; <newline>+    request->GetMimeType(&info->mime_type); <newline>+    request->GetCharset(&info->charset); <newline>+    info->content_length = request->GetExpectedContentSize(); <newline>+  } <newline>+ <newline>   scoped_ptr<URLRequest> request_; <newline>   // Size of our async IO data buffers <newline>@@ -397,7 +421,18 @@ class SyncRequestProxy : public RequestProxy { <newline>   // -------------------------------------------------------------------------- <newline>   // Event hooks that run on the IO thread: <newline>-  virtual void OnReceivedRedirect(const GURL& new_url) { <newline>+  virtual void OnReceivedRedirect( <newline>+      const GURL& new_url, <newline>+      const ResourceLoaderBridge::ResponseInfo& info, <newline>+      bool* defer_redirect) { <newline>+    // TODO(darin): It would be much better if this could live in WebCore, but <newline>+    // doing so requires API changes at all levels.  Similar code exists in <newline>+    // WebCore/platform/network/cf/ResourceHandleCFNet.cpp :-( <newline>+    if (new_url.GetOrigin() != result_->url.GetOrigin()) { <newline>+      LOG(ERROR) << "Cross origin redirect denied"; <newline>+      Cancel(); <newline>+      return; <newline>+    } <newline>     result_->url = new_url; <newline>   }
d5bf9e3766986e63a985aad72e478ea98222316	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 27 18:11:11 2009 +0000	Linux: add GYP variable to use the system libpng. Since our packagers have been requesting that we support using more system libraries, I'm starting to commit these sorts of changes. However, please note that one MUST NOT use the system libpng on, at least, Ubuntu 64-bit. Because Chromium on Linux is still a 32-bit build we end up with the 32-bit compat versions of libraries and, on Ubuntu at least, this includes a very old libpng with security issues.				svn://svn.chromium.org/chrome/trunk/src@21663 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libpng/libpng.gyp b/third_party/libpng/libpng.gyp <newline>index 63bd9d7..03320e8 100644 <newline>--- a/third_party/libpng/libpng.gyp <newline>+++ b/third_party/libpng/libpng.gyp <newline>@@ -6,55 +6,88 @@ <newline>   'includes': [ <newline>     '../../build/common.gypi', <newline>   ], <newline>-  'targets': [ <newline>-    { <newline>-      'target_name': 'libpng', <newline>-      'type': '<(library)', <newline>-      'dependencies': [ <newline>-        '../zlib/zlib.gyp:zlib', <newline>+  'variables': { <newline>+    'use_system_libpng%': 0, <newline>+  }, <newline>+  'conditions': [ <newline>+    ['use_system_libpng==0', { <newline>+      'targets': [ <newline>+        { <newline>+          'target_name': 'libpng', <newline>+          'type': '<(library)', <newline>+          'dependencies': [ <newline>+            '../zlib/zlib.gyp:zlib', <newline>+          ], <newline>+          'defines': [ <newline>+            'CHROME_PNG_WRITE_SUPPORT', <newline>+            'PNG_USER_CONFIG', <newline>+          ], <newline>+          'msvs_guid': 'C564F145-9172-42C3-BFCB-6014CA97DBCD', <newline>+          'sources': [ <newline>+            'png.c', <newline>+            'png.h', <newline>+            'pngconf.h', <newline>+            'pngerror.c', <newline>+            'pnggccrd.c', <newline>+            'pngget.c', <newline>+            'pngmem.c', <newline>+            'pngpread.c', <newline>+            'pngread.c', <newline>+            'pngrio.c', <newline>+            'pngrtran.c', <newline>+            'pngrutil.c', <newline>+            'pngset.c', <newline>+            'pngtrans.c', <newline>+            'pngusr.h', <newline>+            'pngvcrd.c', <newline>+            'pngwio.c', <newline>+            'pngwrite.c', <newline>+            'pngwtran.c', <newline>+            'pngwutil.c', <newline>+          ], <newline>+          'direct_dependent_settings': { <newline>+            'include_dirs': [ <newline>+              '.', <newline>+            ], <newline>+            'defines': [ <newline>+              'CHROME_PNG_WRITE_SUPPORT', <newline>+              'PNG_USER_CONFIG', <newline>+            ], <newline>+          }, <newline>+          'export_dependent_settings': [ <newline>+            '../zlib/zlib.gyp:zlib', <newline>+          ], <newline>+          'conditions': [ <newline>+            ['OS!="win"', {'product_name': 'png'}], <newline>+          ], <newline>+        }, <newline>+      ] <newline>+    }, { <newline>+      'targets': [ <newline>+        { <newline>+          'target_name': 'libpng', <newline>+          'type': '<(library)', <newline>+          'dependencies': [ <newline>+            '../zlib/zlib.gyp:zlib', <newline>+          ], <newline>+          'defines': [ <newline>+            'USE_SYSTEM_LIBPNG', <newline>+          ], <newline>+          'direct_dependent_settings': { <newline>+            'cflags': [ <newline>+              '<!@(pkg-config --cflags libpng)', <newline>+            ], <newline>+          }, <newline>+          'link_settings': { <newline>+            'ldflags': [ <newline>+              '<!@(pkg-config --libs-only-L --libs-only-other libpng)', <newline>+            ], <newline>+            'libraries': [ <newline>+              '<!@(pkg-config --libs-only-l libpng)', <newline>+            ], <newline>+          }, <newline>+        }, <newline>       ], <newline>-      'defines': [ <newline>-        'CHROME_PNG_WRITE_SUPPORT', <newline>-        'PNG_USER_CONFIG', <newline>-      ], <newline>-      'msvs_guid': 'C564F145-9172-42C3-BFCB-6014CA97DBCD', <newline>-      'sources': [ <newline>-        'png.c', <newline>-        'png.h', <newline>-        'pngconf.h', <newline>-        'pngerror.c', <newline>-        'pnggccrd.c', <newline>-        'pngget.c', <newline>-        'pngmem.c', <newline>-        'pngpread.c', <newline>-        'pngread.c', <newline>-        'pngrio.c', <newline>-        'pngrtran.c', <newline>-        'pngrutil.c', <newline>-        'pngset.c', <newline>-        'pngtrans.c', <newline>-        'pngusr.h', <newline>-        'pngvcrd.c', <newline>-        'pngwio.c', <newline>-        'pngwrite.c', <newline>-        'pngwtran.c', <newline>-        'pngwutil.c', <newline>-      ], <newline>-      'direct_dependent_settings': { <newline>-        'include_dirs': [ <newline>-          '.', <newline>-        ], <newline>-        'defines': [ <newline>-          'CHROME_PNG_WRITE_SUPPORT', <newline>-          'PNG_USER_CONFIG', <newline>-        ], <newline>-      }, <newline>-      'export_dependent_settings': [ <newline>-        '../zlib/zlib.gyp:zlib', <newline>-      ], <newline>-      'conditions': [ <newline>-        ['OS!="win"', {'product_name': 'png'}], <newline>-      ], <newline>-    }, <newline>+    }], <newline>   ], <newline> }
7a72f81f25f01298ce4fa53b335fb8bcac577cd	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 27 18:11:11 2009 +0000	Linux: add GYP variable to use the system libpng. Since our packagers have been requesting that we support using more system libraries, I'm starting to commit these sorts of changes. However, please note that one MUST NOT use the system libpng on, at least, Ubuntu 64-bit. Because Chromium on Linux is still a 32-bit build we end up with the 32-bit compat versions of libraries and, on Ubuntu at least, this includes a very old libpng with security issues.				svn://svn.chromium.org/chrome/trunk/src@21663 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libpng/libpng.gyp b/third_party/libpng/libpng.gyp <newline>index 63bd9d7..03320e8 100644 <newline>--- a/third_party/libpng/libpng.gyp <newline>+++ b/third_party/libpng/libpng.gyp <newline>@@ -6,55 +6,88 @@ <newline>   'includes': [ <newline>     '../../build/common.gypi', <newline>   ], <newline>-  'targets': [ <newline>-    { <newline>-      'target_name': 'libpng', <newline>-      'type': '<(library)', <newline>-      'dependencies': [ <newline>-        '../zlib/zlib.gyp:zlib', <newline>+  'variables': { <newline>+    'use_system_libpng%': 0, <newline>+  }, <newline>+  'conditions': [ <newline>+    ['use_system_libpng==0', { <newline>+      'targets': [ <newline>+        { <newline>+          'target_name': 'libpng', <newline>+          'type': '<(library)', <newline>+          'dependencies': [ <newline>+            '../zlib/zlib.gyp:zlib', <newline>+          ], <newline>+          'defines': [ <newline>+            'CHROME_PNG_WRITE_SUPPORT', <newline>+            'PNG_USER_CONFIG', <newline>+          ], <newline>+          'msvs_guid': 'C564F145-9172-42C3-BFCB-6014CA97DBCD', <newline>+          'sources': [ <newline>+            'png.c', <newline>+            'png.h', <newline>+            'pngconf.h', <newline>+            'pngerror.c', <newline>+            'pnggccrd.c', <newline>+            'pngget.c', <newline>+            'pngmem.c', <newline>+            'pngpread.c', <newline>+            'pngread.c', <newline>+            'pngrio.c', <newline>+            'pngrtran.c', <newline>+            'pngrutil.c', <newline>+            'pngset.c', <newline>+            'pngtrans.c', <newline>+            'pngusr.h', <newline>+            'pngvcrd.c', <newline>+            'pngwio.c', <newline>+            'pngwrite.c', <newline>+            'pngwtran.c', <newline>+            'pngwutil.c', <newline>+          ], <newline>+          'direct_dependent_settings': { <newline>+            'include_dirs': [ <newline>+              '.', <newline>+            ], <newline>+            'defines': [ <newline>+              'CHROME_PNG_WRITE_SUPPORT', <newline>+              'PNG_USER_CONFIG', <newline>+            ], <newline>+          }, <newline>+          'export_dependent_settings': [ <newline>+            '../zlib/zlib.gyp:zlib', <newline>+          ], <newline>+          'conditions': [ <newline>+            ['OS!="win"', {'product_name': 'png'}], <newline>+          ], <newline>+        }, <newline>+      ] <newline>+    }, { <newline>+      'targets': [ <newline>+        { <newline>+          'target_name': 'libpng', <newline>+          'type': '<(library)', <newline>+          'dependencies': [ <newline>+            '../zlib/zlib.gyp:zlib', <newline>+          ], <newline>+          'defines': [ <newline>+            'USE_SYSTEM_LIBPNG', <newline>+          ], <newline>+          'direct_dependent_settings': { <newline>+            'cflags': [ <newline>+              '<!@(pkg-config --cflags libpng)', <newline>+            ], <newline>+          }, <newline>+          'link_settings': { <newline>+            'ldflags': [ <newline>+              '<!@(pkg-config --libs-only-L --libs-only-other libpng)', <newline>+            ], <newline>+            'libraries': [ <newline>+              '<!@(pkg-config --libs-only-l libpng)', <newline>+            ], <newline>+          }, <newline>+        }, <newline>       ], <newline>-      'defines': [ <newline>-        'CHROME_PNG_WRITE_SUPPORT', <newline>-        'PNG_USER_CONFIG', <newline>-      ], <newline>-      'msvs_guid': 'C564F145-9172-42C3-BFCB-6014CA97DBCD', <newline>-      'sources': [ <newline>-        'png.c', <newline>-        'png.h', <newline>-        'pngconf.h', <newline>-        'pngerror.c', <newline>-        'pnggccrd.c', <newline>-        'pngget.c', <newline>-        'pngmem.c', <newline>-        'pngpread.c', <newline>-        'pngread.c', <newline>-        'pngrio.c', <newline>-        'pngrtran.c', <newline>-        'pngrutil.c', <newline>-        'pngset.c', <newline>-        'pngtrans.c', <newline>-        'pngusr.h', <newline>-        'pngvcrd.c', <newline>-        'pngwio.c', <newline>-        'pngwrite.c', <newline>-        'pngwtran.c', <newline>-        'pngwutil.c', <newline>-      ], <newline>-      'direct_dependent_settings': { <newline>-        'include_dirs': [ <newline>-          '.', <newline>-        ], <newline>-        'defines': [ <newline>-          'CHROME_PNG_WRITE_SUPPORT', <newline>-          'PNG_USER_CONFIG', <newline>-        ], <newline>-      }, <newline>-      'export_dependent_settings': [ <newline>-        '../zlib/zlib.gyp:zlib', <newline>-      ], <newline>-      'conditions': [ <newline>-        ['OS!="win"', {'product_name': 'png'}], <newline>-      ], <newline>-    }, <newline>+    }], <newline>   ], <newline> }
b4e5148e4da75fb71739187e00891b336f7cbf6	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 16 18:54:38 2009 +0000	Enable isolated worlds for content scripts. R=aa TEST=LayoutTests/http/tests/security/isolatedWorld/ (will be landing soon after this patch)	12218		http://codereview.chromium.org/155626	svn://svn.chromium.org/chrome/trunk/src@20883 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/layout_test_controller.cc b/webkit/tools/test_shell/layout_test_controller.cc <newline>index 374f95f..5ae2bb3 100644 <newline>--- a/webkit/tools/test_shell/layout_test_controller.cc <newline>+++ b/webkit/tools/test_shell/layout_test_controller.cc <newline>@@ -351,7 +351,7 @@ class WorkItemIsolatedWorldScript : public LayoutTestController::WorkItem { <newline>   WorkItemIsolatedWorldScript(const string& script) : script_(script) {} <newline>   bool Run(TestShell* shell) { <newline>     WebScriptSource source(WebString::fromUTF8(script_)); <newline>-    shell->webView()->GetMainFrame()->ExecuteScriptInNewContext(&source, 1); <newline>+    shell->webView()->GetMainFrame()->ExecuteScriptInNewWorld(&source, 1); <newline>     return false; <newline>   } <newline>  private:
40fab35301a73038485151be30940b214b571f7	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 16 18:54:38 2009 +0000	Enable isolated worlds for content scripts. R=aa TEST=LayoutTests/http/tests/security/isolatedWorld/ (will be landing soon after this patch)	12218		http://codereview.chromium.org/155626	svn://svn.chromium.org/chrome/trunk/src@20883 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/layout_test_controller.cc b/webkit/tools/test_shell/layout_test_controller.cc <newline>index 374f95f..5ae2bb3 100644 <newline>--- a/webkit/tools/test_shell/layout_test_controller.cc <newline>+++ b/webkit/tools/test_shell/layout_test_controller.cc <newline>@@ -351,7 +351,7 @@ class WorkItemIsolatedWorldScript : public LayoutTestController::WorkItem { <newline>   WorkItemIsolatedWorldScript(const string& script) : script_(script) {} <newline>   bool Run(TestShell* shell) { <newline>     WebScriptSource source(WebString::fromUTF8(script_)); <newline>-    shell->webView()->GetMainFrame()->ExecuteScriptInNewContext(&source, 1); <newline>+    shell->webView()->GetMainFrame()->ExecuteScriptInNewWorld(&source, 1); <newline>     return false; <newline>   } <newline>  private:
f63684aaba0e9c00dcbe134bee60588378be703	gman@google.com <gman@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 16 02:36:10 2009 +0000	Some security fixes for Skin and Curve deseralization. Both Curve and Skin have the issue that the format does not store any kind of length. So, I serialize a Skin to binary, followed but some other data in the same binary. Then at runtine I can deserialize the Skin and call  mySkin.setFromRaw(rawData, validOffset, INVALID_LENGTH) At which point there the possibility, how ever small, that the skin deserialization code will read into the next chunk of binary data in the RawData. Data that does not belong to it. The best solution IMO would be to add a length or count to the Skin and Curve formats since then, like Buffer, it would know exactly how much data is expected and if the length passed in does not match the length the format says it needs it would fail. Unfortunately, that would break all assets out there. This fix just makes sure that if we do get any kind of error the data is not left in the Skin or Curve like it was before. Should probably do the same with Buffer.			http://codereview.chromium.org/155599	svn://svn.chromium.org/chrome/trunk/src@20841 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/o3d/core/cross/skin.h b/o3d/core/cross/skin.h <newline>index 9e0c33f..70193db 100644 <newline>--- a/o3d/core/cross/skin.h <newline>+++ b/o3d/core/cross/skin.h <newline>@@ -152,6 +152,9 @@ class Skin : public NamedObject { <newline>   // Update the highest influences and highest matrix index. <newline>   void UpdateInfo() const; <newline>+  // Frees all the influences and matrices. <newline>+  void FreeAll(); <newline>+ <newline>   // The vertex influences. <newline>   InfluencesArray influences_array_;
cbbc67b1f2f8d93f3b085625c1827a7ce751b80	gman@google.com <gman@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 16 02:36:10 2009 +0000	Some security fixes for Skin and Curve deseralization. Both Curve and Skin have the issue that the format does not store any kind of length. So, I serialize a Skin to binary, followed but some other data in the same binary. Then at runtine I can deserialize the Skin and call  mySkin.setFromRaw(rawData, validOffset, INVALID_LENGTH) At which point there the possibility, how ever small, that the skin deserialization code will read into the next chunk of binary data in the RawData. Data that does not belong to it. The best solution IMO would be to add a length or count to the Skin and Curve formats since then, like Buffer, it would know exactly how much data is expected and if the length passed in does not match the length the format says it needs it would fail. Unfortunately, that would break all assets out there. This fix just makes sure that if we do get any kind of error the data is not left in the Skin or Curve like it was before. Should probably do the same with Buffer.			http://codereview.chromium.org/155599	svn://svn.chromium.org/chrome/trunk/src@20841 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/o3d/core/cross/skin.h b/o3d/core/cross/skin.h <newline>index 9e0c33f..70193db 100644 <newline>--- a/o3d/core/cross/skin.h <newline>+++ b/o3d/core/cross/skin.h <newline>@@ -152,6 +152,9 @@ class Skin : public NamedObject { <newline>   // Update the highest influences and highest matrix index. <newline>   void UpdateInfo() const; <newline>+  // Frees all the influences and matrices. <newline>+  void FreeAll(); <newline>+ <newline>   // The vertex influences. <newline>   InfluencesArray influences_array_;
29f6385d641d31c7c0dd95c6f43bf76c6224fb6	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 15 17:05:18 2009 +0000	Linux: propagate LD_LIBRARY_PATH through the SUID sandbox. With the SUID sandbox, certain environment variables (esp LD_LIBRARY_PATH) are cleared for security reasons. This means that the child zygote process isn't run with the correct environment and can fail to start.	16815			svn://svn.chromium.org/chrome/trunk/src@20733 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/sandbox/linux/suid/sandbox.cc b/sandbox/linux/suid/sandbox.cc <newline>index b594d21..30b8426 100644 <newline>--- a/sandbox/linux/suid/sandbox.cc <newline>+++ b/sandbox/linux/suid/sandbox.cc <newline>@@ -218,6 +218,19 @@ static bool DropRoot() { <newline>   return true; <newline> } <newline>+static bool SetupChildEnvironment() { <newline>+  // ld.so will have cleared LD_LIBRARY_PATH because we are SUID. However, the <newline>+  // child process might need this so zygote_host_linux.cc saved a copy in <newline>+  // SANDBOX_LD_LIBRARY_PATH. <newline>+  const char* sandbox_ld_library_path = getenv("SANDBOX_LD_LIBRARY_PATH"); <newline>+  if (sandbox_ld_library_path) { <newline>+    setenv("LD_LIBRARY_PATH", sandbox_ld_library_path, 1 /* overwrite */); <newline>+    unsetenv("SANDBOX_LD_LIBRARY_PATH"); <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline> int main(int argc, char **argv) { <newline>   if (argc == 1) { <newline>     fprintf(stderr, "Usage: %s <renderer process> <args...>\n", argv[0]); <newline>@@ -281,6 +294,8 @@ int main(int argc, char **argv) { <newline>     return 1; <newline>   if (!DropRoot()) <newline>     return 1; <newline>+  if (!SetupChildEnvironment()) <newline>+    return 1; <newline>   execv(argv[1], &argv[1]); <newline>   FatalError("execv failed");
5bf919de97cab42aa719a13a939487cf9f18242	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 15 17:05:18 2009 +0000	Linux: propagate LD_LIBRARY_PATH through the SUID sandbox. With the SUID sandbox, certain environment variables (esp LD_LIBRARY_PATH) are cleared for security reasons. This means that the child zygote process isn't run with the correct environment and can fail to start.	16815			svn://svn.chromium.org/chrome/trunk/src@20733 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/sandbox/linux/suid/sandbox.cc b/sandbox/linux/suid/sandbox.cc <newline>index b594d21..30b8426 100644 <newline>--- a/sandbox/linux/suid/sandbox.cc <newline>+++ b/sandbox/linux/suid/sandbox.cc <newline>@@ -218,6 +218,19 @@ static bool DropRoot() { <newline>   return true; <newline> } <newline>+static bool SetupChildEnvironment() { <newline>+  // ld.so will have cleared LD_LIBRARY_PATH because we are SUID. However, the <newline>+  // child process might need this so zygote_host_linux.cc saved a copy in <newline>+  // SANDBOX_LD_LIBRARY_PATH. <newline>+  const char* sandbox_ld_library_path = getenv("SANDBOX_LD_LIBRARY_PATH"); <newline>+  if (sandbox_ld_library_path) { <newline>+    setenv("LD_LIBRARY_PATH", sandbox_ld_library_path, 1 /* overwrite */); <newline>+    unsetenv("SANDBOX_LD_LIBRARY_PATH"); <newline>+  } <newline>+ <newline>+  return true; <newline>+} <newline>+ <newline> int main(int argc, char **argv) { <newline>   if (argc == 1) { <newline>     fprintf(stderr, "Usage: %s <renderer process> <args...>\n", argv[0]); <newline>@@ -281,6 +294,8 @@ int main(int argc, char **argv) { <newline>     return 1; <newline>   if (!DropRoot()) <newline>     return 1; <newline>+  if (!SetupChildEnvironment()) <newline>+    return 1; <newline>   execv(argv[1], &argv[1]); <newline>   FatalError("execv failed");
0a35429a9d340c22b10ae417aeac83d4519db78	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 9 21:30:45 2009 +0000	Validate offset / length of extra field in the message. Note these fields are decoded and set in a structure but unsused, so this is not a current security issue. This change just future-proofs the area in case these fields are used one day. TEST=NONE	NONE		http://codereview.chromium.org/155311	svn://svn.chromium.org/chrome/trunk/src@20315 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/http/http_auth_handler_ntlm.cc b/net/http/http_auth_handler_ntlm.cc <newline>index c7343cc..f7cadf8 100644 <newline>--- a/net/http/http_auth_handler_ntlm.cc <newline>+++ b/net/http/http_auth_handler_ntlm.cc <newline>@@ -411,10 +411,17 @@ static int ParseType2Msg(const void* in_buf, uint32 in_len, Type2Msg* msg) { <newline>   cursor += sizeof(NTLM_TYPE2_MARKER); <newline>   // read target name security buffer <newline>-  msg->target_len = ReadUint16(cursor); <newline>+  uint32 target_len = ReadUint16(cursor); <newline>   ReadUint16(cursor);  // discard next 16-bit value <newline>   uint32 offset = ReadUint32(cursor);  // get offset from in_buf <newline>-  msg->target = ((const uint8*) in_buf) + offset; <newline>+  msg->target_len = 0; <newline>+  msg->target = NULL; <newline>+  // Check the offset / length combo is in range of the input buffer, including <newline>+  // integer overflow checking. <newline>+  if (offset + target_len > offset && offset + target_len <= in_len) { <newline>+    msg->target_len = target_len; <newline>+    msg->target = ((const uint8*) in_buf) + offset; <newline>+  } <newline>   // read flags <newline>   msg->flags = ReadUint32(cursor);
6b118a0f798a2e88103492173225e57b2062a37	cevans@chromium.org <cevans@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 9 21:30:45 2009 +0000	Validate offset / length of extra field in the message. Note these fields are decoded and set in a structure but unsused, so this is not a current security issue. This change just future-proofs the area in case these fields are used one day. TEST=NONE	NONE		http://codereview.chromium.org/155311	svn://svn.chromium.org/chrome/trunk/src@20315 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/http/http_auth_handler_ntlm.cc b/net/http/http_auth_handler_ntlm.cc <newline>index c7343cc..f7cadf8 100644 <newline>--- a/net/http/http_auth_handler_ntlm.cc <newline>+++ b/net/http/http_auth_handler_ntlm.cc <newline>@@ -411,10 +411,17 @@ static int ParseType2Msg(const void* in_buf, uint32 in_len, Type2Msg* msg) { <newline>   cursor += sizeof(NTLM_TYPE2_MARKER); <newline>   // read target name security buffer <newline>-  msg->target_len = ReadUint16(cursor); <newline>+  uint32 target_len = ReadUint16(cursor); <newline>   ReadUint16(cursor);  // discard next 16-bit value <newline>   uint32 offset = ReadUint32(cursor);  // get offset from in_buf <newline>-  msg->target = ((const uint8*) in_buf) + offset; <newline>+  msg->target_len = 0; <newline>+  msg->target = NULL; <newline>+  // Check the offset / length combo is in range of the input buffer, including <newline>+  // integer overflow checking. <newline>+  if (offset + target_len > offset && offset + target_len <= in_len) { <newline>+    msg->target_len = target_len; <newline>+    msg->target = ((const uint8*) in_buf) + offset; <newline>+  } <newline>   // read flags <newline>   msg->flags = ReadUint32(cursor);
4119f84848837bf8a260ad8ff28eb11c72ea8d7	jam@chromium.org <jam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 9 02:25:22 2009 +0000	Add runtime dependency on security_tests for ui/plugin tests.			http://codereview.chromium.org/149353	svn://svn.chromium.org/chrome/trunk/src@20229 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome.gyp b/chrome/chrome.gyp <newline>index db94fa8..8dcb0fa 100644 <newline>--- a/chrome/chrome.gyp <newline>+++ b/chrome/chrome.gyp <newline>@@ -3333,6 +3333,7 @@ <newline>           ], <newline>           'dependencies': [ <newline>             'crash_service',  # run time dependency <newline>+            'security_tests',  # run time dependency <newline>             'test_support_common', <newline>             '../google_update/google_update.gyp:google_update', <newline>             '../views/views.gyp:views', <newline>@@ -4685,6 +4686,7 @@ <newline>           'dependencies': [ <newline>             'chrome_resources', <newline>             'chrome_strings', <newline>+            'security_tests',  # run time dependency <newline>             'test_support_common', <newline>             'test_support_ui', <newline>             '../skia/skia.gyp:skia',
e7e64b131bca19ec5d1a042f32cfd4294045ff8	jam@chromium.org <jam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jul 9 02:25:22 2009 +0000	Add runtime dependency on security_tests for ui/plugin tests.			http://codereview.chromium.org/149353	svn://svn.chromium.org/chrome/trunk/src@20229 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome.gyp b/chrome/chrome.gyp <newline>index db94fa8..8dcb0fa 100644 <newline>--- a/chrome/chrome.gyp <newline>+++ b/chrome/chrome.gyp <newline>@@ -3333,6 +3333,7 @@ <newline>           ], <newline>           'dependencies': [ <newline>             'crash_service',  # run time dependency <newline>+            'security_tests',  # run time dependency <newline>             'test_support_common', <newline>             '../google_update/google_update.gyp:google_update', <newline>             '../views/views.gyp:views', <newline>@@ -4685,6 +4686,7 @@ <newline>           'dependencies': [ <newline>             'chrome_resources', <newline>             'chrome_strings', <newline>+            'security_tests',  # run time dependency <newline>             'test_support_common', <newline>             'test_support_ui', <newline>             '../skia/skia.gyp:skia',
4632ff817d613b624fac8ee849403b534b43d9d	japhet@chromium.org <japhet@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jul 7 16:42:13 2009 +0000	Add LayoutTests/http/tests/security/cross-frame-access-call.html as failing on MAC again. TEST=WebKit Mac builders go green. TBR=nsylvain	5977 : LayoutTests/svg/custom/createImageElement2.xhtml = FAIL			svn://svn.chromium.org/chrome/trunk/src@20030 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 9a94c99..de1abd7 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2957,3 +2957,8 @@ BUG15921 SKIP : LayoutTests/media/controls-strict.html = FAIL <newline> // Webkit 45535:45555 <newline>+ <newline>+// Webkit 45555:45558 <newline>+// This was removed from test_expectations when it was passing after the Webkit merge 45495:45535. <newline>+// Not sure if this is a regression or some manner of flakiness. <newline>+BUG11613 MAC : LayoutTests/http/tests/security/cross-frame-access-call.html = FAIL
2c9a8e3985009ee3503497cb4e1ab18d8cecc97	japhet@chromium.org <japhet@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jul 7 16:42:13 2009 +0000	Add LayoutTests/http/tests/security/cross-frame-access-call.html as failing on MAC again. TEST=WebKit Mac builders go green. TBR=nsylvain	5977 : LayoutTests/svg/custom/createImageElement2.xhtml = FAIL			svn://svn.chromium.org/chrome/trunk/src@20030 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 9a94c99..de1abd7 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2957,3 +2957,8 @@ BUG15921 SKIP : LayoutTests/media/controls-strict.html = FAIL <newline> // Webkit 45535:45555 <newline>+ <newline>+// Webkit 45555:45558 <newline>+// This was removed from test_expectations when it was passing after the Webkit merge 45495:45535. <newline>+// Not sure if this is a regression or some manner of flakiness. <newline>+BUG11613 MAC : LayoutTests/http/tests/security/cross-frame-access-call.html = FAIL
82e059be6539a4199aacd6c2c580b55065a0095	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 1 17:12:55 2009 +0000	Add Reload and LoadData methods to WebFrame.  LoadData replaces LoadAlternateHTMLString, changing types to WebKit API types and allowing for more flexibility (supports loading non-HTML data). LoadHTMLString is modified to support some optional parameters. Note: Since WebFrame is going to soon be part of the WebKit API, it is OK style-wise for it to use optional parameters. This patch also includes a change to remove the securityInfo property from WebURLRequest.  I did this so that I could eliminate the need to pass a WebURLRequest to LoadData / LoadHTMLString. This also fixes a TODO of mine to eliminate this field on WebCore::ResourceRequest since securityInfo (SSL cert info) is really more of a response property.  It was only part of the request as a hack to support certain error pages.  I work around that by leveraging NavigationState in chrome/renderer. I added some templatized, implicit constructors to WebData for convenience.  I plan to make similar changes to WebCString and WebString in a future CL. This CL is a incremental step toward moving ResourceFetcher out of WebFrame. TEST=none R=dglazkov	15648		http://codereview.chromium.org/150146	svn://svn.chromium.org/chrome/trunk/src@19742 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_webview_delegate.cc b/webkit/tools/test_shell/test_webview_delegate.cc <newline>index 912b937..b97c923 100644 <newline>--- a/webkit/tools/test_shell/test_webview_delegate.cc <newline>+++ b/webkit/tools/test_shell/test_webview_delegate.cc <newline>@@ -18,6 +18,7 @@ <newline> #include "base/string_util.h" <newline> #include "base/trace_event.h" <newline> #include "net/base/net_errors.h" <newline>+#include "webkit/api/public/WebData.h" <newline> #include "webkit/api/public/WebDataSource.h" <newline> #include "webkit/api/public/WebDragData.h" <newline> #include "webkit/api/public/WebHistoryItem.h" <newline>@@ -50,6 +51,7 @@ <newline> #include "webkit/tools/test_shell/drop_delegate.h" <newline> #endif <newline>+using WebKit::WebData; <newline> using WebKit::WebDataSource; <newline> using WebKit::WebDragData; <newline> using WebKit::WebHistoryItem; <newline>@@ -342,18 +344,15 @@ void TestWebViewDelegate::DidFailProvisionalLoadWithError( <newline>       static_cast<TestShellExtraData*>(failed_ds->extraData()); <newline>   bool replace = extra_data && extra_data->pending_page_id != -1; <newline>-  WebURLRequest request = failed_ds->request(); <newline>- <newline>-  std::string error_text = <newline>+  const std::string& error_text = <newline>       StringPrintf("Error %d when loading url %s", error.reason, <newline>-      request.url().spec().data()); <newline>-  request.setURL(GURL("testshell-error:")); <newline>+      failed_ds->request().url().spec().data()); <newline>   // Make sure we never show errors in view source mode. <newline>   frame->SetInViewSourceMode(false); <newline>-  frame->LoadAlternateHTMLString( <newline>-      request, error_text, error.unreachableURL, replace); <newline>+  frame->LoadHTMLString( <newline>+      error_text, GURL("testshell-error:"), error.unreachableURL, replace); <newline> } <newline> void TestWebViewDelegate::DidCommitLoadForFrame(WebView* webview,
6f546c3ab626d39d375376890b7f4bfef92f48e	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jul 1 17:12:55 2009 +0000	Add Reload and LoadData methods to WebFrame.  LoadData replaces LoadAlternateHTMLString, changing types to WebKit API types and allowing for more flexibility (supports loading non-HTML data). LoadHTMLString is modified to support some optional parameters. Note: Since WebFrame is going to soon be part of the WebKit API, it is OK style-wise for it to use optional parameters. This patch also includes a change to remove the securityInfo property from WebURLRequest.  I did this so that I could eliminate the need to pass a WebURLRequest to LoadData / LoadHTMLString. This also fixes a TODO of mine to eliminate this field on WebCore::ResourceRequest since securityInfo (SSL cert info) is really more of a response property.  It was only part of the request as a hack to support certain error pages.  I work around that by leveraging NavigationState in chrome/renderer. I added some templatized, implicit constructors to WebData for convenience.  I plan to make similar changes to WebCString and WebString in a future CL. This CL is a incremental step toward moving ResourceFetcher out of WebFrame. TEST=none R=dglazkov	15648		http://codereview.chromium.org/150146	svn://svn.chromium.org/chrome/trunk/src@19742 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_webview_delegate.cc b/webkit/tools/test_shell/test_webview_delegate.cc <newline>index 912b937..b97c923 100644 <newline>--- a/webkit/tools/test_shell/test_webview_delegate.cc <newline>+++ b/webkit/tools/test_shell/test_webview_delegate.cc <newline>@@ -18,6 +18,7 @@ <newline> #include "base/string_util.h" <newline> #include "base/trace_event.h" <newline> #include "net/base/net_errors.h" <newline>+#include "webkit/api/public/WebData.h" <newline> #include "webkit/api/public/WebDataSource.h" <newline> #include "webkit/api/public/WebDragData.h" <newline> #include "webkit/api/public/WebHistoryItem.h" <newline>@@ -50,6 +51,7 @@ <newline> #include "webkit/tools/test_shell/drop_delegate.h" <newline> #endif <newline>+using WebKit::WebData; <newline> using WebKit::WebDataSource; <newline> using WebKit::WebDragData; <newline> using WebKit::WebHistoryItem; <newline>@@ -342,18 +344,15 @@ void TestWebViewDelegate::DidFailProvisionalLoadWithError( <newline>       static_cast<TestShellExtraData*>(failed_ds->extraData()); <newline>   bool replace = extra_data && extra_data->pending_page_id != -1; <newline>-  WebURLRequest request = failed_ds->request(); <newline>- <newline>-  std::string error_text = <newline>+  const std::string& error_text = <newline>       StringPrintf("Error %d when loading url %s", error.reason, <newline>-      request.url().spec().data()); <newline>-  request.setURL(GURL("testshell-error:")); <newline>+      failed_ds->request().url().spec().data()); <newline>   // Make sure we never show errors in view source mode. <newline>   frame->SetInViewSourceMode(false); <newline>-  frame->LoadAlternateHTMLString( <newline>-      request, error_text, error.unreachableURL, replace); <newline>+  frame->LoadHTMLString( <newline>+      error_text, GURL("testshell-error:"), error.unreachableURL, replace); <newline> } <newline> void TestWebViewDelegate::DidCommitLoadForFrame(WebView* webview,
37730d6a2a345a8723d7e40a30fbd874b56220e	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jun 26 17:18:54 2009 +0000	Rebaseline LayoutTests/security/block-test.html for Linux.  On Linux, connect() to 255.255.255.255 fails with errno ENETUNREACH (101), which is mapped to net::ERR_ADDRESS_UNREACHABLE (-109). R=eroman TEST=LayoutTests/security/block-test.html should pass on Linux	0439 LINUX : LayoutTests/fast/canvas/set-colors.html = CRASH PASS		http://codereview.chromium.org/147070	svn://svn.chromium.org/chrome/trunk/src@19371 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index d8148b5..5a6c6bd 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -1871,7 +1871,7 @@ BUG10438 MAC LINUX : LayoutTests/plugins/destroy-stream-twice.html = TIMEOUT <newline> // Needs an FTP implementation to work completely. <newline>-BUG10440 MAC LINUX : LayoutTests/security/block-test.html = FAIL <newline>+BUG10440 MAC : LayoutTests/security/block-test.html = FAIL <newline> // Flakey. Not clear when it started, but it was before 3/9/09. <newline> // This test also started failing with the merge of March 25th 2009
457b150e965030f9a032ebc24292f2014631441	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jun 26 17:18:54 2009 +0000	Rebaseline LayoutTests/security/block-test.html for Linux.  On Linux, connect() to 255.255.255.255 fails with errno ENETUNREACH (101), which is mapped to net::ERR_ADDRESS_UNREACHABLE (-109). R=eroman TEST=LayoutTests/security/block-test.html should pass on Linux	0439 LINUX : LayoutTests/fast/canvas/set-colors.html = CRASH PASS		http://codereview.chromium.org/147070	svn://svn.chromium.org/chrome/trunk/src@19371 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index d8148b5..5a6c6bd 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -1871,7 +1871,7 @@ BUG10438 MAC LINUX : LayoutTests/plugins/destroy-stream-twice.html = TIMEOUT <newline> // Needs an FTP implementation to work completely. <newline>-BUG10440 MAC LINUX : LayoutTests/security/block-test.html = FAIL <newline>+BUG10440 MAC : LayoutTests/security/block-test.html = FAIL <newline> // Flakey. Not clear when it started, but it was before 3/9/09. <newline> // This test also started failing with the merge of March 25th 2009
0f5bd4cb10a904efc21b364c4fc8e82acf458ac	ukai@chromium.org <ukai@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jun 25 03:06:28 2009 +0000	Show EV cert info text next to security icon. Use hbox to pack location entry, security icons and EV cert info text. Change ToolbarModel::GetInfoText not return SkColor. TEST=none	none		http://codereview.chromium.org/126117	svn://svn.chromium.org/chrome/trunk/src@19224 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/views/location_bar_view.h b/chrome/browser/views/location_bar_view.h <newline>index 434fbed..b90693f 100644 <newline>--- a/chrome/browser/views/location_bar_view.h <newline>+++ b/chrome/browser/views/location_bar_view.h <newline>@@ -415,7 +415,7 @@ class LocationBarView : public LocationBar, <newline>   // tooltip text.  Call with an empty string if the info label should be <newline>   // hidden. <newline>   void SetInfoText(const std::wstring& text, <newline>-                   SkColor text_color, <newline>+                   ToolbarModel::InfoTextType text_type, <newline>                    const std::wstring& tooltip_text); <newline>   // Sets the visibility of view to new_vis. Returns whether the visibility
4cafafac04f16475b30346609c21dca6a8906d0	ukai@chromium.org <ukai@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jun 25 03:06:28 2009 +0000	Show EV cert info text next to security icon. Use hbox to pack location entry, security icons and EV cert info text. Change ToolbarModel::GetInfoText not return SkColor. TEST=none	none		http://codereview.chromium.org/126117	svn://svn.chromium.org/chrome/trunk/src@19224 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/views/location_bar_view.h b/chrome/browser/views/location_bar_view.h <newline>index 434fbed..b90693f 100644 <newline>--- a/chrome/browser/views/location_bar_view.h <newline>+++ b/chrome/browser/views/location_bar_view.h <newline>@@ -415,7 +415,7 @@ class LocationBarView : public LocationBar, <newline>   // tooltip text.  Call with an empty string if the info label should be <newline>   // hidden. <newline>   void SetInfoText(const std::wstring& text, <newline>-                   SkColor text_color, <newline>+                   ToolbarModel::InfoTextType text_type, <newline>                    const std::wstring& tooltip_text); <newline>   // Sets the visibility of view to new_vis. Returns whether the visibility
0e8cf7ff4863f01c67e3ad0facd1e8526654d7a	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jun 24 17:10:12 2009 +0000	Merge WebKit r42737, which added port 3659 (apple-sasl / PasswordServer) to the list of blocked ports and to LayoutTests/security/block-test.html. Fix cpplint.py nits. R=eroman TEST=LayoutTests/security/block-test.html should pass on Windows	0861 LINUX MAC : LayoutTests/security/set-form-autocomplete-attribute.html = TIMEOUT PASS		http://codereview.chromium.org/147069	svn://svn.chromium.org/chrome/trunk/src@19136 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 4b27171..e9653dc 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2285,7 +2285,6 @@ BUG10859 LINUX MAC : LayoutTests/fast/dom/HTMLSelectElement/named-options.html = <newline> // New failures from WebKit Merge 42671:42725 <newline>-BUG10861 WIN : LayoutTests/security/block-test.html = FAIL
8f0bf6f76dcf9cd4dc48b1699e5313d4694825a	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Jun 24 17:10:12 2009 +0000	Merge WebKit r42737, which added port 3659 (apple-sasl / PasswordServer) to the list of blocked ports and to LayoutTests/security/block-test.html. Fix cpplint.py nits. R=eroman TEST=LayoutTests/security/block-test.html should pass on Windows	0861 LINUX MAC : LayoutTests/security/set-form-autocomplete-attribute.html = TIMEOUT PASS		http://codereview.chromium.org/147069	svn://svn.chromium.org/chrome/trunk/src@19136 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 4b27171..e9653dc 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2285,7 +2285,6 @@ BUG10859 LINUX MAC : LayoutTests/fast/dom/HTMLSelectElement/named-options.html = <newline> // New failures from WebKit Merge 42671:42725 <newline>-BUG10861 WIN : LayoutTests/security/block-test.html = FAIL
87f6289f1b6cd31384e8d166ba1bdcbcd7be4b2	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jun 23 19:18:20 2009 +0000	Revert the previous checkin r19037 because it causes test_shell to crash when running LayoutTests/security/block-test.html. TBR=jshin TEST=none	http://crbug.com/4965		http://codereview.chromium.org/147036	svn://svn.chromium.org/chrome/trunk/src@19042 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_job_manager.cc b/net/url_request/url_request_job_manager.cc <newline>index 0b193c4..d964532 100644 <newline>--- a/net/url_request/url_request_job_manager.cc <newline>+++ b/net/url_request/url_request_job_manager.cc <newline>@@ -16,7 +16,7 @@ <newline> #if defined(OS_WIN) <newline> #include "net/url_request/url_request_ftp_job.h" <newline> #else <newline>-#include "net/url_request/url_request_new_ftp_job.h" <newline>+// TODO(playmobil): Implement on non-windows platforms. <newline> #endif <newline> #include "net/url_request/url_request_http_job.h" <newline> #include "net/url_request/url_request_view_cache_job.h" <newline>@@ -38,7 +38,7 @@ static const SchemeToFactory kBuiltinFactories[] = { <newline> #if defined(OS_WIN) <newline>   { "ftp", URLRequestFtpJob::Factory }, <newline> #else <newline>-  { "ftp", URLRequestNewFtpJob::Factory }, <newline>+// TODO(playmobil): Implement on non-windows platforms. <newline> #endif <newline>   { "about", URLRequestAboutJob::Factory }, <newline>   { "view-cache", URLRequestViewCacheJob::Factory },
ce2376fe1a3024702a99ec93221cdb1886d7172	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jun 23 19:18:20 2009 +0000	Revert the previous checkin r19037 because it causes test_shell to crash when running LayoutTests/security/block-test.html. TBR=jshin TEST=none	http://crbug.com/4965		http://codereview.chromium.org/147036	svn://svn.chromium.org/chrome/trunk/src@19042 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_job_manager.cc b/net/url_request/url_request_job_manager.cc <newline>index 0b193c4..d964532 100644 <newline>--- a/net/url_request/url_request_job_manager.cc <newline>+++ b/net/url_request/url_request_job_manager.cc <newline>@@ -16,7 +16,7 @@ <newline> #if defined(OS_WIN) <newline> #include "net/url_request/url_request_ftp_job.h" <newline> #else <newline>-#include "net/url_request/url_request_new_ftp_job.h" <newline>+// TODO(playmobil): Implement on non-windows platforms. <newline> #endif <newline> #include "net/url_request/url_request_http_job.h" <newline> #include "net/url_request/url_request_view_cache_job.h" <newline>@@ -38,7 +38,7 @@ static const SchemeToFactory kBuiltinFactories[] = { <newline> #if defined(OS_WIN) <newline>   { "ftp", URLRequestFtpJob::Factory }, <newline> #else <newline>-  { "ftp", URLRequestNewFtpJob::Factory }, <newline>+// TODO(playmobil): Implement on non-windows platforms. <newline> #endif <newline>   { "about", URLRequestAboutJob::Factory }, <newline>   { "view-cache", URLRequestViewCacheJob::Factory },
a81ac8cd18a82c47be4ece87c1a9b905e3697e6	shess@chromium.org <shess@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jun 6 00:30:11 2009 +0000	Only allow tabs to be dragged between compatible windows. Right now, this means windows with the same Profile. http://crbug.com/12241 TEST=Open some tabs in incognito and regular windows.  Try to drag between.  Should be able to drag between like security contexts (incognito to incognito, regular to regular), but not across.			http://codereview.chromium.org/119266	svn://svn.chromium.org/chrome/trunk/src@17807 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/cocoa/tab_window_controller.mm b/chrome/browser/cocoa/tab_window_controller.mm <newline>index 8d808a4..12fc4a5 100644 <newline>--- a/chrome/browser/cocoa/tab_window_controller.mm <newline>+++ b/chrome/browser/cocoa/tab_window_controller.mm <newline>@@ -100,6 +100,12 @@ <newline>   return overlayWindow_; <newline> } <newline>+- (BOOL)canReceiveFrom:(TabWindowController*)source { <newline>+  // subclass must implement <newline>+  NOTIMPLEMENTED(); <newline>+  return NO; <newline>+} <newline>+ <newline> - (void)moveTabView:(NSView*)view <newline>      fromController:(TabWindowController*)dragController { <newline>   NOTIMPLEMENTED();
96f37d0d4d2425175194bd6fb5dc4458d47971b	shess@chromium.org <shess@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Jun 6 00:30:11 2009 +0000	Only allow tabs to be dragged between compatible windows. Right now, this means windows with the same Profile. http://crbug.com/12241 TEST=Open some tabs in incognito and regular windows.  Try to drag between.  Should be able to drag between like security contexts (incognito to incognito, regular to regular), but not across.			http://codereview.chromium.org/119266	svn://svn.chromium.org/chrome/trunk/src@17807 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/cocoa/tab_window_controller.mm b/chrome/browser/cocoa/tab_window_controller.mm <newline>index 8d808a4..12fc4a5 100644 <newline>--- a/chrome/browser/cocoa/tab_window_controller.mm <newline>+++ b/chrome/browser/cocoa/tab_window_controller.mm <newline>@@ -100,6 +100,12 @@ <newline>   return overlayWindow_; <newline> } <newline>+- (BOOL)canReceiveFrom:(TabWindowController*)source { <newline>+  // subclass must implement <newline>+  NOTIMPLEMENTED(); <newline>+  return NO; <newline>+} <newline>+ <newline> - (void)moveTabView:(NSView*)view <newline>      fromController:(TabWindowController*)dragController { <newline>   NOTIMPLEMENTED();
5e76ad77e1e6399557a1163e6816e13175cf718	sgk@chromium.org <sgk@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jun 4 23:04:16 2009 +0000	Convert additional targets to gyp generation: image_diff.exe, startup_tests.exe, page_cycler_tests.exe, plugin_tests.exe, security_tests.dll, test_chrome_plugin.dll, theme/default.dll. TEST=none	none		http://codereview.chromium.org/118264	svn://svn.chromium.org/chrome/trunk/src@17687 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome.gyp b/chrome/chrome.gyp <newline>index 133a102..5b5baee 100644 <newline>--- a/chrome/chrome.gyp <newline>+++ b/chrome/chrome.gyp <newline>@@ -2663,7 +2663,6 @@ <newline>       'target_name': 'image_diff', <newline>       'type': 'executable', <newline>       'msvs_guid': '50B079C7-CD01-42D3-B8C4-9F8D9322E822', <newline>-      'msvs_existing_vcproj': 'tools/test/image_diff/image_diff.vcproj', <newline>       'dependencies': [ <newline>         '../base/base.gyp:base', <newline>         '../base/base.gyp:base_gfx', <newline>@@ -3383,7 +3382,6 @@ <newline>       'target_name': 'startup_tests', <newline>       'type': 'executable', <newline>       'msvs_guid': 'D3E6C0FD-54C7-4FF2-9AE1-72F2DAFD820C', <newline>-      'msvs_existing_vcproj': 'test/startup/startup_tests.vcproj', <newline>       'dependencies': [ <newline>         'app', <newline>         'browser', <newline>@@ -3418,7 +3416,6 @@ <newline>       'target_name': 'page_cycler_tests', <newline>       'type': 'executable', <newline>       'msvs_guid': 'C9E0BD1D-B175-4A91-8380-3FDC81FAB9D7', <newline>-      'msvs_existing_vcproj': 'test/page_cycler/page_cycler_tests.vcproj', <newline>       'dependencies': [ <newline>         'app', <newline>         'chrome_resources', <newline>@@ -4049,7 +4046,6 @@ <newline>           'target_name': 'plugin_tests', <newline>           'type': 'executable', <newline>           'msvs_guid': 'A1CAA831-C507-4B2E-87F3-AEC63C9907F9', <newline>-          'msvs_existing_vcproj': 'test/plugin/plugin_tests.vcproj', <newline>           'dependencies': [ <newline>             'chrome_resources', <newline>             'chrome_strings', <newline>@@ -4102,7 +4098,6 @@ <newline>           'target_name': 'security_tests', <newline>           'type': 'shared_library', <newline>           'msvs_guid': 'E750512D-FC7C-4C98-BF04-0A0DAF882055', <newline>-          'msvs_existing_vcproj': 'test/security_tests/security_tests.vcproj', <newline>           'include_dirs': [ <newline>             '..', <newline>           ], <newline>@@ -4165,7 +4160,6 @@ <newline>           'target_name': 'test_chrome_plugin', <newline>           'type': 'shared_library', <newline>           'msvs_guid': '7F0A70F6-BE3F-4C19-B435-956AB8F30BA4', <newline>-          'msvs_existing_vcproj': 'test/chrome_plugin/test_chrome_plugin.vcproj', <newline>           'dependencies': [ <newline>             '../base/base.gyp:base', <newline>             '../build/temp_gyp/googleurl.gyp:googleurl', <newline>@@ -4188,7 +4182,6 @@ <newline>           'target_name': 'theme_dll', <newline>           'type': 'shared_library', <newline>           'msvs_guid': 'FD683DD6-D9BF-4B1B-AB6D-A3AC03EDAA4D', <newline>-          'msvs_existing_vcproj': 'app/theme/theme_dll.vcproj', <newline>           'product_name': 'default', <newline>           'dependencies': [ <newline>             'theme_resources',
7b4e5fa63a79f8ca74c5dace16d8b4a9186e88e	sgk@chromium.org <sgk@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Jun 4 23:04:16 2009 +0000	Convert additional targets to gyp generation: image_diff.exe, startup_tests.exe, page_cycler_tests.exe, plugin_tests.exe, security_tests.dll, test_chrome_plugin.dll, theme/default.dll. TEST=none	none		http://codereview.chromium.org/118264	svn://svn.chromium.org/chrome/trunk/src@17687 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/chrome.gyp b/chrome/chrome.gyp <newline>index 133a102..5b5baee 100644 <newline>--- a/chrome/chrome.gyp <newline>+++ b/chrome/chrome.gyp <newline>@@ -2663,7 +2663,6 @@ <newline>       'target_name': 'image_diff', <newline>       'type': 'executable', <newline>       'msvs_guid': '50B079C7-CD01-42D3-B8C4-9F8D9322E822', <newline>-      'msvs_existing_vcproj': 'tools/test/image_diff/image_diff.vcproj', <newline>       'dependencies': [ <newline>         '../base/base.gyp:base', <newline>         '../base/base.gyp:base_gfx', <newline>@@ -3383,7 +3382,6 @@ <newline>       'target_name': 'startup_tests', <newline>       'type': 'executable', <newline>       'msvs_guid': 'D3E6C0FD-54C7-4FF2-9AE1-72F2DAFD820C', <newline>-      'msvs_existing_vcproj': 'test/startup/startup_tests.vcproj', <newline>       'dependencies': [ <newline>         'app', <newline>         'browser', <newline>@@ -3418,7 +3416,6 @@ <newline>       'target_name': 'page_cycler_tests', <newline>       'type': 'executable', <newline>       'msvs_guid': 'C9E0BD1D-B175-4A91-8380-3FDC81FAB9D7', <newline>-      'msvs_existing_vcproj': 'test/page_cycler/page_cycler_tests.vcproj', <newline>       'dependencies': [ <newline>         'app', <newline>         'chrome_resources', <newline>@@ -4049,7 +4046,6 @@ <newline>           'target_name': 'plugin_tests', <newline>           'type': 'executable', <newline>           'msvs_guid': 'A1CAA831-C507-4B2E-87F3-AEC63C9907F9', <newline>-          'msvs_existing_vcproj': 'test/plugin/plugin_tests.vcproj', <newline>           'dependencies': [ <newline>             'chrome_resources', <newline>             'chrome_strings', <newline>@@ -4102,7 +4098,6 @@ <newline>           'target_name': 'security_tests', <newline>           'type': 'shared_library', <newline>           'msvs_guid': 'E750512D-FC7C-4C98-BF04-0A0DAF882055', <newline>-          'msvs_existing_vcproj': 'test/security_tests/security_tests.vcproj', <newline>           'include_dirs': [ <newline>             '..', <newline>           ], <newline>@@ -4165,7 +4160,6 @@ <newline>           'target_name': 'test_chrome_plugin', <newline>           'type': 'shared_library', <newline>           'msvs_guid': '7F0A70F6-BE3F-4C19-B435-956AB8F30BA4', <newline>-          'msvs_existing_vcproj': 'test/chrome_plugin/test_chrome_plugin.vcproj', <newline>           'dependencies': [ <newline>             '../base/base.gyp:base', <newline>             '../build/temp_gyp/googleurl.gyp:googleurl', <newline>@@ -4188,7 +4182,6 @@ <newline>           'target_name': 'theme_dll', <newline>           'type': 'shared_library', <newline>           'msvs_guid': 'FD683DD6-D9BF-4B1B-AB6D-A3AC03EDAA4D', <newline>-          'msvs_existing_vcproj': 'app/theme/theme_dll.vcproj', <newline>           'product_name': 'default', <newline>           'dependencies': [ <newline>             'theme_resources',
612fffb9e6ff08f0cb339f242968e3b5ae953d1	mhm@chromium.org <mhm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jun 1 22:41:42 2009 +0000	Security bug for libpng, update needed to 1.2.36 There's a new version of libpng, 1.2.36 which fixes a security bug. Chrome/Chromium still runs on 1.2.35 it seems TEST=Ran tests	13046		http://codereview.chromium.org/112080	svn://svn.chromium.org/chrome/trunk/src@17365 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libpng/pngwutil.c b/third_party/libpng/pngwutil.c <newline>index 957e266..3f55f57 100644 <newline>--- a/third_party/libpng/pngwutil.c <newline>+++ b/third_party/libpng/pngwutil.c <newline>@@ -1,9 +1,9 @@ <newline> /* pngwutil.c - utilities to write a PNG file <newline>  * <newline>- * Last changed in libpng 1.2.34 [December 18, 2008] <newline>+ * Last changed in libpng 1.2.36 [May 7, 2009] <newline>  * For conditions of distribution and use, see copyright notice in png.h <newline>- * Copyright (c) 1998-2008 Glenn Randers-Pehrson <newline>+ * Copyright (c) 1998-2009 Glenn Randers-Pehrson <newline>  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger) <newline>  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.) <newline>  */ <newline>@@ -785,6 +785,7 @@ png_write_iCCP(png_structp png_ptr, png_charp name, int compression_type, <newline>    { <newline>       png_warning(png_ptr, <newline>         "Embedded profile length too large in iCCP chunk"); <newline>+      png_free(png_ptr, new_name); <newline>       return; <newline>    } <newline>@@ -1759,9 +1760,9 @@ png_write_start_row(png_structp png_ptr) <newline>    if (png_ptr->do_filter & (PNG_FILTER_AVG | PNG_FILTER_UP | PNG_FILTER_PAETH)) <newline>    { <newline>      /* set up previous row buffer */ <newline>-      png_ptr->prev_row = (png_bytep)png_malloc(png_ptr, <newline>+     png_ptr->prev_row = (png_bytep)png_malloc(png_ptr, <newline>         (png_uint_32)buf_size); <newline>-      png_memset(png_ptr->prev_row, 0, buf_size); <newline>+     png_memset(png_ptr->prev_row, 0, buf_size); <newline>       if (png_ptr->do_filter & PNG_FILTER_UP) <newline>       {
7aa910d904da92ba9d461d4f867b9438ace6ce0	mhm@chromium.org <mhm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jun 1 22:41:42 2009 +0000	Security bug for libpng, update needed to 1.2.36 There's a new version of libpng, 1.2.36 which fixes a security bug. Chrome/Chromium still runs on 1.2.35 it seems TEST=Ran tests	13046		http://codereview.chromium.org/112080	svn://svn.chromium.org/chrome/trunk/src@17365 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libpng/pngwutil.c b/third_party/libpng/pngwutil.c <newline>index 957e266..3f55f57 100644 <newline>--- a/third_party/libpng/pngwutil.c <newline>+++ b/third_party/libpng/pngwutil.c <newline>@@ -1,9 +1,9 @@ <newline> /* pngwutil.c - utilities to write a PNG file <newline>  * <newline>- * Last changed in libpng 1.2.34 [December 18, 2008] <newline>+ * Last changed in libpng 1.2.36 [May 7, 2009] <newline>  * For conditions of distribution and use, see copyright notice in png.h <newline>- * Copyright (c) 1998-2008 Glenn Randers-Pehrson <newline>+ * Copyright (c) 1998-2009 Glenn Randers-Pehrson <newline>  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger) <newline>  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.) <newline>  */ <newline>@@ -785,6 +785,7 @@ png_write_iCCP(png_structp png_ptr, png_charp name, int compression_type, <newline>    { <newline>       png_warning(png_ptr, <newline>         "Embedded profile length too large in iCCP chunk"); <newline>+      png_free(png_ptr, new_name); <newline>       return; <newline>    } <newline>@@ -1759,9 +1760,9 @@ png_write_start_row(png_structp png_ptr) <newline>    if (png_ptr->do_filter & (PNG_FILTER_AVG | PNG_FILTER_UP | PNG_FILTER_PAETH)) <newline>    { <newline>      /* set up previous row buffer */ <newline>-      png_ptr->prev_row = (png_bytep)png_malloc(png_ptr, <newline>+     png_ptr->prev_row = (png_bytep)png_malloc(png_ptr, <newline>         (png_uint_32)buf_size); <newline>-      png_memset(png_ptr->prev_row, 0, buf_size); <newline>+     png_memset(png_ptr->prev_row, 0, buf_size); <newline>       if (png_ptr->do_filter & PNG_FILTER_UP) <newline>       {
f38c6b06b6aee7c86838c8c7887ded06726444d	deanm@chromium.org <deanm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jun 1 16:30:52 2009 +0000	Linux Omnibox, handle OnInputInProgress to clear the security style. TEST=Go to an https:// page, the location bar should be yellow. Type something, the background should change to white. Hit escape to revert the text, background should be yellow again.	10965		http://codereview.chromium.org/113995	svn://svn.chromium.org/chrome/trunk/src@17319 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/gtk/location_bar_view_gtk.cc b/chrome/browser/gtk/location_bar_view_gtk.cc <newline>index 49f1a27..bf4ee9b 100644 <newline>--- a/chrome/browser/gtk/location_bar_view_gtk.cc <newline>+++ b/chrome/browser/gtk/location_bar_view_gtk.cc <newline>@@ -137,12 +137,13 @@ void LocationBarViewGtk::OnChanged() { <newline> } <newline> void LocationBarViewGtk::OnInputInProgress(bool in_progress) { <newline>-  // Here's a comment copied from the Windows code, which propagates this <newline>-  // call up to the toolbar. <newline>-  // "Called by the location bar view when the user starts typing in the edit. <newline>-  // This forces our security style to be UNKNOWN for the duration of the <newline>-  // editing." <newline>-  // http://code.google.com/p/chromium/issues/detail?id=10965 <newline>+  // This is identical to the Windows code, except that we don't proxy the call <newline>+  // back through the Toolbar, and just access the model here. <newline>+  // The edit should make sure we're only notified when something changes. <newline>+  DCHECK(toolbar_model_->input_in_progress() != in_progress); <newline>+ <newline>+  toolbar_model_->set_input_in_progress(in_progress); <newline>+  Update(NULL); <newline> } <newline> SkBitmap LocationBarViewGtk::GetFavIcon() const {
7fbb8a4590a82e14cb1afce2205f4dbf85983d4	deanm@chromium.org <deanm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jun 1 16:30:52 2009 +0000	Linux Omnibox, handle OnInputInProgress to clear the security style. TEST=Go to an https:// page, the location bar should be yellow. Type something, the background should change to white. Hit escape to revert the text, background should be yellow again.	10965		http://codereview.chromium.org/113995	svn://svn.chromium.org/chrome/trunk/src@17319 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/gtk/location_bar_view_gtk.cc b/chrome/browser/gtk/location_bar_view_gtk.cc <newline>index 49f1a27..bf4ee9b 100644 <newline>--- a/chrome/browser/gtk/location_bar_view_gtk.cc <newline>+++ b/chrome/browser/gtk/location_bar_view_gtk.cc <newline>@@ -137,12 +137,13 @@ void LocationBarViewGtk::OnChanged() { <newline> } <newline> void LocationBarViewGtk::OnInputInProgress(bool in_progress) { <newline>-  // Here's a comment copied from the Windows code, which propagates this <newline>-  // call up to the toolbar. <newline>-  // "Called by the location bar view when the user starts typing in the edit. <newline>-  // This forces our security style to be UNKNOWN for the duration of the <newline>-  // editing." <newline>-  // http://code.google.com/p/chromium/issues/detail?id=10965 <newline>+  // This is identical to the Windows code, except that we don't proxy the call <newline>+  // back through the Toolbar, and just access the model here. <newline>+  // The edit should make sure we're only notified when something changes. <newline>+  DCHECK(toolbar_model_->input_in_progress() != in_progress); <newline>+ <newline>+  toolbar_model_->set_input_in_progress(in_progress); <newline>+  Update(NULL); <newline> } <newline> SkBitmap LocationBarViewGtk::GetFavIcon() const {
dfbbd22a1aca07e73a4a3defaa3e952eb40dd59	sgk@google.com <sgk@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed May 27 21:29:36 2009 +0000	Add .dll (and a .exe) files to the gyp build: * activex_test_control.dll * browser_tests.dll * browser_tests.exe * memory_watcher.dll * rlz.dll * security_tests.dll * test_chrome_plugin.dll * themes/default.dll TEST=none	none		http://codereview.chromium.org/113915	svn://svn.chromium.org/chrome/trunk/src@17023 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/tools/memory_watcher/memory_watcher.gyp b/tools/memory_watcher/memory_watcher.gyp <newline>new file mode 100644 <newline>index 0000000..045e650 <newline>--- /dev/null <newline>+++ b/tools/memory_watcher/memory_watcher.gyp <newline>@@ -0,0 +1,41 @@ <newline>+# Copyright (c) 2009 The Chromium Authors. All rights reserved. <newline>+# Use of this source code is governed by a BSD-style license that can be <newline>+# found in the LICENSE file. <newline>+ <newline>+{ <newline>+  'includes': [ <newline>+    '../../build/common.gypi', <newline>+  ], <newline>+  'targets': [ <newline>+    { <newline>+      'target_name': 'memory_watcher', <newline>+      'type': 'shared_library', <newline>+      'msvs_guid': '3BD81303-4E14-4559-AA69-B30C3BAB08DD', <newline>+      'dependencies': [ <newline>+        '../../base/base.gyp:base', <newline>+      ], <newline>+      'defines': [ <newline>+        'BUILD_MEMORY_WATCHER', <newline>+      ], <newline>+      'include_dirs': [ <newline>+        '../..', <newline>+      ], <newline>+      'sources': [ <newline>+        'call_stack.cc', <newline>+        'call_stack.h', <newline>+        'dllmain.cc', <newline>+        'hotkey.h', <newline>+        'ia32_modrm_map.cc', <newline>+        'ia32_opcode_map.cc', <newline>+        'memory_hook.cc', <newline>+        'memory_hook.h', <newline>+        'memory_watcher.cc', <newline>+        'memory_watcher.h', <newline>+        'mini_disassembler.cc', <newline>+        'preamble_patcher.cc', <newline>+        'preamble_patcher.h', <newline>+        'preamble_patcher_with_stub.cc', <newline>+      ], <newline>+    }, <newline>+  ], <newline>+}
cfa7b62ee01fcb4c2b17b6b68a1c98b64dfe480	sgk@google.com <sgk@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed May 27 21:29:36 2009 +0000	Add .dll (and a .exe) files to the gyp build: * activex_test_control.dll * browser_tests.dll * browser_tests.exe * memory_watcher.dll * rlz.dll * security_tests.dll * test_chrome_plugin.dll * themes/default.dll TEST=none	none		http://codereview.chromium.org/113915	svn://svn.chromium.org/chrome/trunk/src@17023 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/tools/memory_watcher/memory_watcher.gyp b/tools/memory_watcher/memory_watcher.gyp <newline>new file mode 100644 <newline>index 0000000..045e650 <newline>--- /dev/null <newline>+++ b/tools/memory_watcher/memory_watcher.gyp <newline>@@ -0,0 +1,41 @@ <newline>+# Copyright (c) 2009 The Chromium Authors. All rights reserved. <newline>+# Use of this source code is governed by a BSD-style license that can be <newline>+# found in the LICENSE file. <newline>+ <newline>+{ <newline>+  'includes': [ <newline>+    '../../build/common.gypi', <newline>+  ], <newline>+  'targets': [ <newline>+    { <newline>+      'target_name': 'memory_watcher', <newline>+      'type': 'shared_library', <newline>+      'msvs_guid': '3BD81303-4E14-4559-AA69-B30C3BAB08DD', <newline>+      'dependencies': [ <newline>+        '../../base/base.gyp:base', <newline>+      ], <newline>+      'defines': [ <newline>+        'BUILD_MEMORY_WATCHER', <newline>+      ], <newline>+      'include_dirs': [ <newline>+        '../..', <newline>+      ], <newline>+      'sources': [ <newline>+        'call_stack.cc', <newline>+        'call_stack.h', <newline>+        'dllmain.cc', <newline>+        'hotkey.h', <newline>+        'ia32_modrm_map.cc', <newline>+        'ia32_opcode_map.cc', <newline>+        'memory_hook.cc', <newline>+        'memory_hook.h', <newline>+        'memory_watcher.cc', <newline>+        'memory_watcher.h', <newline>+        'mini_disassembler.cc', <newline>+        'preamble_patcher.cc', <newline>+        'preamble_patcher.h', <newline>+        'preamble_patcher_with_stub.cc', <newline>+      ], <newline>+    }, <newline>+  ], <newline>+}
9c127a7679623e2b65451446fc2e6b2c602fd0d	ukai@chromium.org <ukai@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 22 05:06:17 2009 +0000	Add failure tests by WebKit Update 43965:44030 LayoutTests/fast/js/global-function-resolve.html added by webkit 44016 LayoutTests/http/tests/mime/accept-all-text-types.html modified by webkit 43991 LayoutTests/http/tests/local/drag-over-remote-content.html LayoutTests/http/tests/security/drag-over-remote-content-iframe.html added by webkit 44010, 44027 TBR=paul TEST=4 new failure tests	2361 : LayoutTests/http/tests/cookies/double-quoted-value-with-semi-colon.html = FAIL		http://codereview.chromium.org/115694	svn://svn.chromium.org/chrome/trunk/src@16725 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 2e80611..bc52ce9 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2688,3 +2688,11 @@ BUG12354 : LayoutTests/plugins/netscape-invoke-browserfuncs.html = FAIL <newline>+// webkit 44016 introducted this new test <newline>+BUG12477 : LayoutTests/fast/js/global-function-resolve.html = FAIL <newline>+// webkit 43991 fixed the test <newline>+BUG12477 : LayoutTests/http/tests/mime/accept-all-text-types.html = FAIL <newline>+// webkit 44010+44027 introducted new tests <newline>+BUG12477 : LayoutTests/http/tests/local/drag-over-remote-content.html = FAIL <newline>+BUG12477 : LayoutTests/http/tests/security/drag-over-remote-content-iframe.html = FAIL <newline>+
a60540fbb84166c838987fa1e3224d0eba9388d	ukai@chromium.org <ukai@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 22 05:06:17 2009 +0000	Add failure tests by WebKit Update 43965:44030 LayoutTests/fast/js/global-function-resolve.html added by webkit 44016 LayoutTests/http/tests/mime/accept-all-text-types.html modified by webkit 43991 LayoutTests/http/tests/local/drag-over-remote-content.html LayoutTests/http/tests/security/drag-over-remote-content-iframe.html added by webkit 44010, 44027 TBR=paul TEST=4 new failure tests	2361 : LayoutTests/http/tests/cookies/double-quoted-value-with-semi-colon.html = FAIL		http://codereview.chromium.org/115694	svn://svn.chromium.org/chrome/trunk/src@16725 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 2e80611..bc52ce9 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2688,3 +2688,11 @@ BUG12354 : LayoutTests/plugins/netscape-invoke-browserfuncs.html = FAIL <newline>+// webkit 44016 introducted this new test <newline>+BUG12477 : LayoutTests/fast/js/global-function-resolve.html = FAIL <newline>+// webkit 43991 fixed the test <newline>+BUG12477 : LayoutTests/http/tests/mime/accept-all-text-types.html = FAIL <newline>+// webkit 44010+44027 introducted new tests <newline>+BUG12477 : LayoutTests/http/tests/local/drag-over-remote-content.html = FAIL <newline>+BUG12477 : LayoutTests/http/tests/security/drag-over-remote-content-iframe.html = FAIL <newline>+
92961caa43b69466bd61a7ef4efa3ac0f7cf380	ukai@chromium.org <ukai@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 22 03:39:47 2009 +0000	WebKit Update 43965:44030 4 regressions on buildbot new tests LayoutTests/fast/js/global-function-resolv.html = FAIL LayoutTests/http/tests/local/drag-over-remote-content.html = FAIL LayoutTests/http/tests/security/drag-over-remote-content-iframe.html = FAIL fails LayoutTests/http/tests/mime/accept-all-text-types.html = FAIL For webkit_revision 44029, webkit/webkit.gyp updated http://codereview.chromium.org/115619 Add third_party/WebKit/WebCore/css/mediaControlsChromium.css in webkit/webkit.gyp TBR=paul TEST=4 regressions on buildbot	0		http://codereview.chromium.org/115690	svn://svn.chromium.org/chrome/trunk/src@16720 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/webkit.gyp b/webkit/webkit.gyp <newline>index caf136a..ca4edf1 100644 <newline>--- a/webkit/webkit.gyp <newline>+++ b/webkit/webkit.gyp <newline>@@ -517,6 +517,7 @@ <newline>             '../third_party/WebKit/WebCore/css/themeWinQuirks.css', <newline>             '../third_party/WebKit/WebCore/css/svg.css', <newline>             '../third_party/WebKit/WebCore/css/mediaControls.css', <newline>+            '../third_party/WebKit/WebCore/css/mediaControlsChromium.css', <newline>           ], <newline>           'outputs': [ <newline>             '<(INTERMEDIATE_DIR)/UserAgentStyleSheets.h',
9c866754bc2327f3c1afc77d46d86e5b8bd47d0	ukai@chromium.org <ukai@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri May 22 03:39:47 2009 +0000	WebKit Update 43965:44030 4 regressions on buildbot new tests LayoutTests/fast/js/global-function-resolv.html = FAIL LayoutTests/http/tests/local/drag-over-remote-content.html = FAIL LayoutTests/http/tests/security/drag-over-remote-content-iframe.html = FAIL fails LayoutTests/http/tests/mime/accept-all-text-types.html = FAIL For webkit_revision 44029, webkit/webkit.gyp updated http://codereview.chromium.org/115619 Add third_party/WebKit/WebCore/css/mediaControlsChromium.css in webkit/webkit.gyp TBR=paul TEST=4 regressions on buildbot	0		http://codereview.chromium.org/115690	svn://svn.chromium.org/chrome/trunk/src@16720 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/webkit.gyp b/webkit/webkit.gyp <newline>index caf136a..ca4edf1 100644 <newline>--- a/webkit/webkit.gyp <newline>+++ b/webkit/webkit.gyp <newline>@@ -517,6 +517,7 @@ <newline>             '../third_party/WebKit/WebCore/css/themeWinQuirks.css', <newline>             '../third_party/WebKit/WebCore/css/svg.css', <newline>             '../third_party/WebKit/WebCore/css/mediaControls.css', <newline>+            '../third_party/WebKit/WebCore/css/mediaControlsChromium.css', <newline>           ], <newline>           'outputs': [ <newline>             '<(INTERMEDIATE_DIR)/UserAgentStyleSheets.h',
3deb8b31006f534c99dc27b7962d7385eaa54af	ukai@chromium.org <ukai@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 21 04:54:28 2009 +0000	WebKit Update 43946:43958 remove fail expectations LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-lexical.html LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-write-lexical.html LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-writeln-lexical.html TEST=no additional test regressions	1933 LINUX : LayoutTests/fast/frames/content-opacity-2.html = FAIL		http://codereview.chromium.org/115622	svn://svn.chromium.org/chrome/trunk/src@16581 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 83dbae3..140e194 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2645,11 +2645,6 @@ BUG11898 WIN DEBUG : LayoutTests/http/tests/misc/submit-get-in-utf16be.html = TI <newline> // This test is marked as Slow on other platforms but still times out on Mac debug <newline>-// These tests started to fail after r43604 upstream. <newline>-BUG11909 : LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-lexical.html = FAIL <newline>-BUG11909 : LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-write-lexical.html = FAIL <newline>-BUG11909 : LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-writeln-lexical.html = FAIL <newline>-
ad7b84b3d681bc57732272117019350521557cd	ukai@chromium.org <ukai@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 21 04:54:28 2009 +0000	WebKit Update 43946:43958 remove fail expectations LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-lexical.html LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-write-lexical.html LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-writeln-lexical.html TEST=no additional test regressions	1933 LINUX : LayoutTests/fast/frames/content-opacity-2.html = FAIL		http://codereview.chromium.org/115622	svn://svn.chromium.org/chrome/trunk/src@16581 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 83dbae3..140e194 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2645,11 +2645,6 @@ BUG11898 WIN DEBUG : LayoutTests/http/tests/misc/submit-get-in-utf16be.html = TI <newline> // This test is marked as Slow on other platforms but still times out on Mac debug <newline>-// These tests started to fail after r43604 upstream. <newline>-BUG11909 : LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-lexical.html = FAIL <newline>-BUG11909 : LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-write-lexical.html = FAIL <newline>-BUG11909 : LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-writeln-lexical.html = FAIL <newline>-
6b304a1f966b31f6bea1742081bccef77b2ff84	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 21 02:05:03 2009 +0000	Map the NSS error code SEC_ERROR_CA_CERT_INVALID (-8156) to ERR_CERT_AUTHORITY_INVALID. R=ukai TEST=Visit https://www.grounation.org/.  The SSL error page should say "The site's security certificate is not trusted!" rather than "Invalid Server Certificate".	12359		http://codereview.chromium.org/115597	svn://svn.chromium.org/chrome/trunk/src@16566 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/ssl_client_socket_nss.cc b/net/base/ssl_client_socket_nss.cc <newline>index 7318b25..a8993a9 100644 <newline>--- a/net/base/ssl_client_socket_nss.cc <newline>+++ b/net/base/ssl_client_socket_nss.cc <newline>@@ -64,6 +64,7 @@ int NetErrorFromNSPRError(PRErrorCode err) { <newline>     case SEC_ERROR_REVOKED_CERTIFICATE: <newline>     case SEC_ERROR_REVOKED_KEY: <newline>       return ERR_CERT_REVOKED; <newline>+    case SEC_ERROR_CA_CERT_INVALID: <newline>     case SEC_ERROR_UNKNOWN_ISSUER: <newline>     case SEC_ERROR_UNTRUSTED_CERT: <newline>     case SEC_ERROR_UNTRUSTED_ISSUER: <newline>@@ -141,7 +142,7 @@ int SSLClientSocketNSS::Init() { <newline> class ConnectCallbackWrapper : <newline>       public CompletionCallbackImpl<ConnectCallbackWrapper> { <newline>  public: <newline>-  ConnectCallbackWrapper(CompletionCallback* user_callback) <newline>+  explicit ConnectCallbackWrapper(CompletionCallback* user_callback) <newline>       : ALLOW_THIS_IN_INITIALIZER_LIST( <newline>           CompletionCallbackImpl<ConnectCallbackWrapper>(this, <newline>                                  &ConnectCallbackWrapper::ReturnValueWrapper)),
d0dbbaa2379e0b5d11909f25584c4da0c0610d2	wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 21 02:02:29 2009 +0000	Map the NSS error code SEC_ERROR_CA_CERT_INVALID (-8156) to ERR_CERT_AUTHORITY_INVALID. R=ukai TEST=Visit https://www.grounation.org/.  The SSL error page should say "The site's security certificate is not trusted!" rather than "Invalid Server Certificate".	12359		http://codereview.chromium.org/115597	svn://svn.chromium.org/chrome/trunk/src@16566 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/ssl_client_socket_nss.cc b/net/base/ssl_client_socket_nss.cc <newline>index 7318b25..a8993a9 100644 <newline>--- a/net/base/ssl_client_socket_nss.cc <newline>+++ b/net/base/ssl_client_socket_nss.cc <newline>@@ -64,6 +64,7 @@ int NetErrorFromNSPRError(PRErrorCode err) { <newline>     case SEC_ERROR_REVOKED_CERTIFICATE: <newline>     case SEC_ERROR_REVOKED_KEY: <newline>       return ERR_CERT_REVOKED; <newline>+    case SEC_ERROR_CA_CERT_INVALID: <newline>     case SEC_ERROR_UNKNOWN_ISSUER: <newline>     case SEC_ERROR_UNTRUSTED_CERT: <newline>     case SEC_ERROR_UNTRUSTED_ISSUER: <newline>@@ -141,7 +142,7 @@ int SSLClientSocketNSS::Init() { <newline> class ConnectCallbackWrapper : <newline>       public CompletionCallbackImpl<ConnectCallbackWrapper> { <newline>  public: <newline>-  ConnectCallbackWrapper(CompletionCallback* user_callback) <newline>+  explicit ConnectCallbackWrapper(CompletionCallback* user_callback) <newline>       : ALLOW_THIS_IN_INITIALIZER_LIST( <newline>           CompletionCallbackImpl<ConnectCallbackWrapper>(this, <newline>                                  &ConnectCallbackWrapper::ReturnValueWrapper)),
19880876a2b989421a5a403835dd99e2b60c13f	ager@chromium.org <ager@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 7 08:00:04 2009 +0000	Fix regression in security checks introduced by WebKit merge 42932:42994. Do not allow cross-frame access to a frame whose document is unavailable. See http://trac.webkit.org/changeset/42983 for details.  The rest of the changes from that change set will follow as a separate changelist.	1178 MAC : LayoutTests/fast/dom/Document/open-with-pending-load.html = CRASH		http://codereview.chromium.org/113093	svn://svn.chromium.org/chrome/trunk/src@15536 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 0702c5f..0ea43ed 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2339,14 +2339,6 @@ BUG11176 MAC : LayoutTests/fast/css/first-child-pseudo-class.html = FAIL PASS <newline> // New failures from WebKit Merge 42932:42994 <newline>-BUG11178 : LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-addEventListener.html = FAIL <newline>-BUG11178 : LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-shortcut.html = FAIL <newline>-BUG11178 : LayoutTests/http/tests/security/listener/xss-XMLHttpRequest-addEventListener.html = FAIL <newline>-BUG11178 : LayoutTests/http/tests/security/listener/xss-XMLHttpRequest-shortcut.html = FAIL <newline>-BUG11178 : LayoutTests/http/tests/security/listener/xss-window-onclick-addEventListener.html = FAIL <newline>-BUG11178 : LayoutTests/http/tests/security/listener/xss-window-onclick-shortcut.html = FAIL <newline>-BUG11178 : chrome/http/tests/security/listener/xss-inactive-closure.html = FAIL <newline>-BUG11178 WIN MAC : LayoutTests/http/tests/security/xss-eval.html = FAIL
0e7634de65a1b81c5c35a12718052bc69cd7d8d	ager@chromium.org <ager@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Thu May 7 07:59:39 2009 +0000	Fix regression in security checks introduced by WebKit merge 42932:42994. Do not allow cross-frame access to a frame whose document is unavailable. See http://trac.webkit.org/changeset/42983 for details.  The rest of the changes from that change set will follow as a separate changelist.	1178 MAC : LayoutTests/fast/dom/Document/open-with-pending-load.html = CRASH		http://codereview.chromium.org/113093	svn://svn.chromium.org/chrome/trunk/src@15536 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_expectations.txt b/webkit/tools/layout_tests/test_expectations.txt <newline>index 0702c5f..0ea43ed 100644 <newline>--- a/webkit/tools/layout_tests/test_expectations.txt <newline>+++ b/webkit/tools/layout_tests/test_expectations.txt <newline>@@ -2339,14 +2339,6 @@ BUG11176 MAC : LayoutTests/fast/css/first-child-pseudo-class.html = FAIL PASS <newline> // New failures from WebKit Merge 42932:42994 <newline>-BUG11178 : LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-addEventListener.html = FAIL <newline>-BUG11178 : LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-shortcut.html = FAIL <newline>-BUG11178 : LayoutTests/http/tests/security/listener/xss-XMLHttpRequest-addEventListener.html = FAIL <newline>-BUG11178 : LayoutTests/http/tests/security/listener/xss-XMLHttpRequest-shortcut.html = FAIL <newline>-BUG11178 : LayoutTests/http/tests/security/listener/xss-window-onclick-addEventListener.html = FAIL <newline>-BUG11178 : LayoutTests/http/tests/security/listener/xss-window-onclick-shortcut.html = FAIL <newline>-BUG11178 : chrome/http/tests/security/listener/xss-inactive-closure.html = FAIL <newline>-BUG11178 WIN MAC : LayoutTests/http/tests/security/xss-eval.html = FAIL
945ea847857de9e93fa600eb4d6b6b5227f5fb1	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon May 4 18:48:03 2009 +0000	revert r15223 to see if it fixes the security-context-with-base-tag.html crash				svn://svn.chromium.org/chrome/trunk/src@15230 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/webview_delegate.h b/webkit/glue/webview_delegate.h <newline>index c6e164c..27036db 100644 <newline>--- a/webkit/glue/webview_delegate.h <newline>+++ b/webkit/glue/webview_delegate.h <newline>@@ -188,10 +188,6 @@ class WebViewDelegate : virtual public WebWidgetDelegate { <newline>   virtual void DocumentElementAvailable(WebFrame* webframe) { <newline>   } <newline>-  // Notifies the delegate that the webframe is about to be destroyed. <newline>-  virtual void WillDestroyFrame(WebFrame* webframe) { <newline>-  } <newline>- <newline>   // PolicyDelegate ---------------------------------------------------------- <newline>   // This method is called to notify the delegate, and let it modify a
cbdd95340fa62df680ae4c4ae0bc1fb33dc3b3a	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon May 4 18:48:03 2009 +0000	revert r15223 to see if it fixes the security-context-with-base-tag.html crash				svn://svn.chromium.org/chrome/trunk/src@15230 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/webview_delegate.h b/webkit/glue/webview_delegate.h <newline>index c6e164c..27036db 100644 <newline>--- a/webkit/glue/webview_delegate.h <newline>+++ b/webkit/glue/webview_delegate.h <newline>@@ -188,10 +188,6 @@ class WebViewDelegate : virtual public WebWidgetDelegate { <newline>   virtual void DocumentElementAvailable(WebFrame* webframe) { <newline>   } <newline>-  // Notifies the delegate that the webframe is about to be destroyed. <newline>-  virtual void WillDestroyFrame(WebFrame* webframe) { <newline>-  } <newline>- <newline>   // PolicyDelegate ---------------------------------------------------------- <newline>   // This method is called to notify the delegate, and let it modify a
9b0822a048e08aa39fad1b8c845ec8b9e6df754	dimich@google.com <dimich@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Apr 24 22:04:01 2009 +0000	Chromium side of WebKit merge 42725:42805. In addition to the tests that were rebaselined or disabled, the following tests fail on my machine but I suspect it's my local ssl problem and will risk it on buildbot. Will promptly disable them if they don't work there. LayoutTests/http/tests/security/cross-frame-access-protocol-explicit-domain.html = FAIL LayoutTests/http/tests/security/cross-frame-access-protocol.html = FAIL LayoutTests/http/tests/ssl/verify-ssl-enabled.php = FAIL LayoutTests/http/tests/security/originHeader/origin-header-for-https.html = TIMEOUT	0861 LINUX : LayoutTests/fast/dynamic/001.html = FAIL		http://codereview.chromium.org/92157	svn://svn.chromium.org/chrome/trunk/src@14484 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/webkit.gyp b/webkit/webkit.gyp <newline>index 22d6ab7..b866619 100644 <newline>--- a/webkit/webkit.gyp <newline>+++ b/webkit/webkit.gyp <newline>@@ -1446,6 +1446,8 @@ <newline>         '../third_party/WebKit/WebCore/dom/XMLTokenizer.cpp', <newline>         '../third_party/WebKit/WebCore/dom/XMLTokenizer.h', <newline>         '../third_party/WebKit/WebCore/dom/XMLTokenizerLibxml2.cpp', <newline>+        '../third_party/WebKit/WebCore/dom/XMLTokenizerScope.cpp', <newline>+        '../third_party/WebKit/WebCore/dom/XMLTokenizerScope.h', <newline>         '../third_party/WebKit/WebCore/dom/XMLTokenizerQt.cpp', <newline>         '../third_party/WebKit/WebCore/editing/android/EditorAndroid.cpp', <newline>         '../third_party/WebKit/WebCore/editing/chromium/EditorChromium.cpp',
073de3cf523d1096d3416ac071b6f6968dbeb79	dimich@google.com <dimich@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Apr 24 22:04:01 2009 +0000	Chromium side of WebKit merge 42725:42805. In addition to the tests that were rebaselined or disabled, the following tests fail on my machine but I suspect it's my local ssl problem and will risk it on buildbot. Will promptly disable them if they don't work there. LayoutTests/http/tests/security/cross-frame-access-protocol-explicit-domain.html = FAIL LayoutTests/http/tests/security/cross-frame-access-protocol.html = FAIL LayoutTests/http/tests/ssl/verify-ssl-enabled.php = FAIL LayoutTests/http/tests/security/originHeader/origin-header-for-https.html = TIMEOUT	0861 LINUX : LayoutTests/fast/dynamic/001.html = FAIL		http://codereview.chromium.org/92157	svn://svn.chromium.org/chrome/trunk/src@14484 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/webkit.gyp b/webkit/webkit.gyp <newline>index 22d6ab7..b866619 100644 <newline>--- a/webkit/webkit.gyp <newline>+++ b/webkit/webkit.gyp <newline>@@ -1446,6 +1446,8 @@ <newline>         '../third_party/WebKit/WebCore/dom/XMLTokenizer.cpp', <newline>         '../third_party/WebKit/WebCore/dom/XMLTokenizer.h', <newline>         '../third_party/WebKit/WebCore/dom/XMLTokenizerLibxml2.cpp', <newline>+        '../third_party/WebKit/WebCore/dom/XMLTokenizerScope.cpp', <newline>+        '../third_party/WebKit/WebCore/dom/XMLTokenizerScope.h', <newline>         '../third_party/WebKit/WebCore/dom/XMLTokenizerQt.cpp', <newline>         '../third_party/WebKit/WebCore/editing/android/EditorAndroid.cpp', <newline>         '../third_party/WebKit/WebCore/editing/chromium/EditorChromium.cpp',
dc7f8880710447b01f552d87c1a658491c0896e	sverrir@google.com <sverrir@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Apr 20 19:34:57 2009 +0000	Revert change (r10357, http://codereview.chromium.org/21477) that removes the registration of URL Protocol.  The original change broke launching of chrome when it's the default browser on Vista from some programs (e.g. Google Desktop). The reason for removing this is that we thought it would be a potential security threat but it seems like this is how other browsers do this and the user gets presented by a warning dialog anyway.	10613		http://codereview.chromium.org/67256	svn://svn.chromium.org/chrome/trunk/src@14052 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/installer/util/shell_util.cc b/chrome/installer/util/shell_util.cc <newline>index 6370c61..2e5e9c5 100644 <newline>--- a/chrome/installer/util/shell_util.cc <newline>+++ b/chrome/installer/util/shell_util.cc <newline>@@ -57,6 +57,8 @@ class RegistryEntry { <newline>     file_util::AppendToPath(&chrome_html_prog_id, ShellUtil::kChromeHTMLProgId); <newline>     entries.push_front(new RegistryEntry(chrome_html_prog_id, <newline>                                          ShellUtil::kChromeHTMLProgIdDesc)); <newline>+    entries.push_front(new RegistryEntry(chrome_html_prog_id, <newline>+                                         ShellUtil::kRegUrlProtocol, L"")); <newline>     entries.push_front(new RegistryEntry( <newline>         chrome_html_prog_id + ShellUtil::kRegDefaultIcon, icon_path)); <newline>     entries.push_front(new RegistryEntry( <newline>@@ -139,7 +141,7 @@ class RegistryEntry { <newline>     return entries; <newline>   } <newline>-  // Generate work_item tasks required to create current regitry entry and <newline>+  // Generate work_item tasks required to create current registry entry and <newline>   // add them to the given work item list. <newline>   void AddToWorkItemList(HKEY root, WorkItemList *items) { <newline>     items->AddCreateRegKeyWorkItem(root, _key_path); <newline>@@ -356,15 +358,6 @@ ShellUtil::RegisterStatus RegisterOnVista(const std::wstring& chrome_exe, <newline>   return ShellUtil::FAILURE; <newline> } <newline>-// Remove unnecessary "URL Protocol" entry from shell registration.  This value <newline>-// was written by older installers so ignoring error conditions. <newline>-void RemoveUrlProtocol(HKEY root) { <newline>-  std::wstring chrome_html_prog_id(ShellUtil::kRegClasses); <newline>-  file_util::AppendToPath(&chrome_html_prog_id, ShellUtil::kChromeHTMLProgId); <newline>-  RegKey key(root, chrome_html_prog_id.c_str(), KEY_ALL_ACCESS); <newline>-  key.DeleteValue(ShellUtil::kRegUrlProtocol); <newline>-} <newline>- <newline> }  // namespace <newline>@@ -402,9 +395,6 @@ const wchar_t* ShellUtil::kChromeExtProgIdDesc = L"Chrome Extension Installer"; <newline> ShellUtil::RegisterStatus ShellUtil::AddChromeToSetAccessDefaults( <newline>     const std::wstring& chrome_exe, bool skip_if_not_admin) { <newline>-  RemoveUrlProtocol(HKEY_LOCAL_MACHINE); <newline>-  RemoveUrlProtocol(HKEY_CURRENT_USER); <newline>- <newline>   if (IsChromeRegistered(chrome_exe)) <newline>     return ShellUtil::SUCCESS;
ee6368c466235c5919c9b4d5cfe11f8e48b29ca	sverrir@google.com <sverrir@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Apr 20 19:34:57 2009 +0000	Revert change (r10357, http://codereview.chromium.org/21477) that removes the registration of URL Protocol.  The original change broke launching of chrome when it's the default browser on Vista from some programs (e.g. Google Desktop). The reason for removing this is that we thought it would be a potential security threat but it seems like this is how other browsers do this and the user gets presented by a warning dialog anyway.	10613		http://codereview.chromium.org/67256	svn://svn.chromium.org/chrome/trunk/src@14052 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/installer/util/shell_util.cc b/chrome/installer/util/shell_util.cc <newline>index 6370c61..2e5e9c5 100644 <newline>--- a/chrome/installer/util/shell_util.cc <newline>+++ b/chrome/installer/util/shell_util.cc <newline>@@ -57,6 +57,8 @@ class RegistryEntry { <newline>     file_util::AppendToPath(&chrome_html_prog_id, ShellUtil::kChromeHTMLProgId); <newline>     entries.push_front(new RegistryEntry(chrome_html_prog_id, <newline>                                          ShellUtil::kChromeHTMLProgIdDesc)); <newline>+    entries.push_front(new RegistryEntry(chrome_html_prog_id, <newline>+                                         ShellUtil::kRegUrlProtocol, L"")); <newline>     entries.push_front(new RegistryEntry( <newline>         chrome_html_prog_id + ShellUtil::kRegDefaultIcon, icon_path)); <newline>     entries.push_front(new RegistryEntry( <newline>@@ -139,7 +141,7 @@ class RegistryEntry { <newline>     return entries; <newline>   } <newline>-  // Generate work_item tasks required to create current regitry entry and <newline>+  // Generate work_item tasks required to create current registry entry and <newline>   // add them to the given work item list. <newline>   void AddToWorkItemList(HKEY root, WorkItemList *items) { <newline>     items->AddCreateRegKeyWorkItem(root, _key_path); <newline>@@ -356,15 +358,6 @@ ShellUtil::RegisterStatus RegisterOnVista(const std::wstring& chrome_exe, <newline>   return ShellUtil::FAILURE; <newline> } <newline>-// Remove unnecessary "URL Protocol" entry from shell registration.  This value <newline>-// was written by older installers so ignoring error conditions. <newline>-void RemoveUrlProtocol(HKEY root) { <newline>-  std::wstring chrome_html_prog_id(ShellUtil::kRegClasses); <newline>-  file_util::AppendToPath(&chrome_html_prog_id, ShellUtil::kChromeHTMLProgId); <newline>-  RegKey key(root, chrome_html_prog_id.c_str(), KEY_ALL_ACCESS); <newline>-  key.DeleteValue(ShellUtil::kRegUrlProtocol); <newline>-} <newline>- <newline> }  // namespace <newline>@@ -402,9 +395,6 @@ const wchar_t* ShellUtil::kChromeExtProgIdDesc = L"Chrome Extension Installer"; <newline> ShellUtil::RegisterStatus ShellUtil::AddChromeToSetAccessDefaults( <newline>     const std::wstring& chrome_exe, bool skip_if_not_admin) { <newline>-  RemoveUrlProtocol(HKEY_LOCAL_MACHINE); <newline>-  RemoveUrlProtocol(HKEY_CURRENT_USER); <newline>- <newline>   if (IsChromeRegistered(chrome_exe)) <newline>     return ShellUtil::SUCCESS;
4c6d4057e84c0585566f880e6df4fb09f0eb5bb	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Mar 27 18:42:21 2009 +0000	Fix renderer hang caused when a synchronous XHR is disallowed for security reasons (via ShouldServiceReqeuest). R=jam	8401		http://codereview.chromium.org/56016	svn://svn.chromium.org/chrome/trunk/src@12675 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/resource_loader_bridge.cc b/webkit/glue/resource_loader_bridge.cc <newline>index 266b518..882f892 100644 <newline>--- a/webkit/glue/resource_loader_bridge.cc <newline>+++ b/webkit/glue/resource_loader_bridge.cc <newline>@@ -12,6 +12,7 @@ <newline> namespace webkit_glue { <newline> ResourceLoaderBridge::ResponseInfo::ResponseInfo() { <newline>+  content_length = -1; <newline> #if defined(OS_WIN) <newline>   response_data_file = base::kInvalidPlatformFileValue; <newline> #elif defined(OS_POSIX)
b0ae24406c5cf0e587b05592256629e5aae31f2	darin@chromium.org <darin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Mar 27 18:42:21 2009 +0000	Fix renderer hang caused when a synchronous XHR is disallowed for security reasons (via ShouldServiceReqeuest). R=jam	8401		http://codereview.chromium.org/56016	svn://svn.chromium.org/chrome/trunk/src@12675 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/resource_loader_bridge.cc b/webkit/glue/resource_loader_bridge.cc <newline>index 266b518..882f892 100644 <newline>--- a/webkit/glue/resource_loader_bridge.cc <newline>+++ b/webkit/glue/resource_loader_bridge.cc <newline>@@ -12,6 +12,7 @@ <newline> namespace webkit_glue { <newline> ResourceLoaderBridge::ResponseInfo::ResponseInfo() { <newline>+  content_length = -1; <newline> #if defined(OS_WIN) <newline>   response_data_file = base::kInvalidPlatformFileValue; <newline> #elif defined(OS_POSIX)
ca1d803e0df1cdb7bed955ed1664dcadb162540	ager@chromium.org <ager@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 25 13:25:31 2009 +0000	Fix data url security tests. The problem was that the security token in V8 was set to the string "null" for all data urls.  Therefore, the access check succeeded.  The cause of the regression was that securityOrigin's toString implementation was changed in WebKit to return "null" instead of String(). R=kasperl@chromium.org TBR=scherkus@chromium.org			http://codereview.chromium.org/53049	svn://svn.chromium.org/chrome/trunk/src@12444 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index eb2a0f8..eae011a 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -1270,10 +1270,7 @@ WIN : LayoutTests/fast/repaint/overflow-scroll-delete.html = FAIL <newline> LINUX MAC : LayoutTests/fast/forms/form-element-geometry.html = FAIL <newline> LINUX MAC : LayoutTests/fast/replaced/width100percent-textarea.html = FAIL <newline> LINUX : LayoutTests/fast/text/drawBidiText.html = FAIL <newline>-MAC : LayoutTests/http/tests/security/dataURL/xss-DENIED-from-data-url-in-foreign-domain-subframe.html = TIMEOUT PASS <newline>-LayoutTests/http/tests/security/dataURL/xss-DENIED-from-data-url-sub-frame-to-data-url-sub-frame.html = FAIL <newline>-LayoutTests/http/tests/security/dataURL/xss-DENIED-from-data-url-to-data-url.html = FAIL <newline>-LayoutTests/http/tests/security/dataURL/xss-DENIED-to-data-url-from-data-url.html = FAIL <newline>+LINUX MAC : LayoutTests/http/tests/security/dataURL/xss-DENIED-from-data-url-in-foreign-domain-subframe.html = TIMEOUT PASS <newline> chrome/fast/dom/xss-DENIED-javascript-variations.html = FAIL <newline> // This test can end up taking longer than the amount of time we give <newline> // each test. DEFERd until we find a better way to deal with it. <newline>@@ -2247,7 +2244,6 @@ WIN LINUX : LayoutTests/fast/repaint/renderer-destruction-by-invalidateSelection <newline> WIN LINUX : LayoutTests/editing/selection/move-by-line-002.html = FAIL PASS <newline> WIN : LayoutTests/webarchive/loading/cache-expired-subresource.html = CRASH PASS <newline> WIN : LayoutTests/webarchive/loading/test-loading-archive.html = CRASH TIMEOUT PASS <newline>-LINUX : LayoutTests/http/tests/security/dataURL/xss-DENIED-from-data-url-in-foreign-domain-subframe.html = TIMEOUT PASS <newline> LINUX : LayoutTests/http/tests/navigation/javascriptlink-basic.html = FAIL PASS <newline> MAC : LayoutTests/fast/css/rgb-float.html = FAIL PASS <newline> MAC : LayoutTests/fast/forms/003.html = FAIL PASS
09aa86fa4f39abaf973bca964ce1086dbec8c49	ager@chromium.org <ager@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 25 13:25:31 2009 +0000	Fix data url security tests. The problem was that the security token in V8 was set to the string "null" for all data urls.  Therefore, the access check succeeded.  The cause of the regression was that securityOrigin's toString implementation was changed in WebKit to return "null" instead of String(). R=kasperl@chromium.org TBR=scherkus@chromium.org			http://codereview.chromium.org/53049	svn://svn.chromium.org/chrome/trunk/src@12444 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index eb2a0f8..eae011a 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -1270,10 +1270,7 @@ WIN : LayoutTests/fast/repaint/overflow-scroll-delete.html = FAIL <newline> LINUX MAC : LayoutTests/fast/forms/form-element-geometry.html = FAIL <newline> LINUX MAC : LayoutTests/fast/replaced/width100percent-textarea.html = FAIL <newline> LINUX : LayoutTests/fast/text/drawBidiText.html = FAIL <newline>-MAC : LayoutTests/http/tests/security/dataURL/xss-DENIED-from-data-url-in-foreign-domain-subframe.html = TIMEOUT PASS <newline>-LayoutTests/http/tests/security/dataURL/xss-DENIED-from-data-url-sub-frame-to-data-url-sub-frame.html = FAIL <newline>-LayoutTests/http/tests/security/dataURL/xss-DENIED-from-data-url-to-data-url.html = FAIL <newline>-LayoutTests/http/tests/security/dataURL/xss-DENIED-to-data-url-from-data-url.html = FAIL <newline>+LINUX MAC : LayoutTests/http/tests/security/dataURL/xss-DENIED-from-data-url-in-foreign-domain-subframe.html = TIMEOUT PASS <newline> chrome/fast/dom/xss-DENIED-javascript-variations.html = FAIL <newline> // This test can end up taking longer than the amount of time we give <newline> // each test. DEFERd until we find a better way to deal with it. <newline>@@ -2247,7 +2244,6 @@ WIN LINUX : LayoutTests/fast/repaint/renderer-destruction-by-invalidateSelection <newline> WIN LINUX : LayoutTests/editing/selection/move-by-line-002.html = FAIL PASS <newline> WIN : LayoutTests/webarchive/loading/cache-expired-subresource.html = CRASH PASS <newline> WIN : LayoutTests/webarchive/loading/test-loading-archive.html = CRASH TIMEOUT PASS <newline>-LINUX : LayoutTests/http/tests/security/dataURL/xss-DENIED-from-data-url-in-foreign-domain-subframe.html = TIMEOUT PASS <newline> LINUX : LayoutTests/http/tests/navigation/javascriptlink-basic.html = FAIL PASS <newline> MAC : LayoutTests/fast/css/rgb-float.html = FAIL PASS <newline> MAC : LayoutTests/fast/forms/003.html = FAIL PASS
e634299e6cf5dc851f7dd9364924a5d580da907	jungshik@google.com <jungshik@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 25 00:58:34 2009 +0000	Update ICU38 to r12390 to pick up the security patch. TEST=1. LayoutTests/fast/encoding 2. chromium/fast/encoding 3. Go to https://bug381412.bugzilla.mozilla.org/attachment.cgi?id=267398 and see a bunch of 'inverse question marks' for U+FFFD. Also, hovering the mouse over 'aaa' should not bring up an alert box. A real layout test will be added later. TBR=agl	2074,3823		http://codereview.chromium.org/45039	svn://svn.chromium.org/chrome/trunk/src@12427 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 5332c40..1cd8551 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -22,7 +22,7 @@ deps = { <newline>     "/trunk/deps/third_party/WebKit@12376", <newline>   "src/third_party/icu38": <newline>-    "/trunk/deps/third_party/icu38@11496", <newline>+    "/trunk/deps/third_party/icu38@12390", <newline>   # TODO(mark): Remove once this has moved into depot_tools. <newline>   "src/tools/gyp":
bd916052afca35014953ec65bb090fc8dfd0f94	jungshik@google.com <jungshik@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 25 00:58:34 2009 +0000	Update ICU38 to r12390 to pick up the security patch. TEST=1. LayoutTests/fast/encoding 2. chromium/fast/encoding 3. Go to https://bug381412.bugzilla.mozilla.org/attachment.cgi?id=267398 and see a bunch of 'inverse question marks' for U+FFFD. Also, hovering the mouse over 'aaa' should not bring up an alert box. A real layout test will be added later. TBR=agl	2074,3823		http://codereview.chromium.org/45039	svn://svn.chromium.org/chrome/trunk/src@12427 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/DEPS b/DEPS <newline>index 5332c40..1cd8551 100644 <newline>--- a/DEPS <newline>+++ b/DEPS <newline>@@ -22,7 +22,7 @@ deps = { <newline>     "/trunk/deps/third_party/WebKit@12376", <newline>   "src/third_party/icu38": <newline>-    "/trunk/deps/third_party/icu38@11496", <newline>+    "/trunk/deps/third_party/icu38@12390", <newline>   # TODO(mark): Remove once this has moved into depot_tools. <newline>   "src/tools/gyp":
eda6cc5466a2340946f509cb55e985ceb4f3af6	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Mar 20 01:37:47 2009 +0000	SSLPolicy fix: Step 9 of 9 (hopefully!). Change our algorithm for computing the state of our SSL security indicators.  Previously, we were computing this state for a single navigation entry.  Although this matches other browsers, it fails to take the same-origin policy into account.  For example, if one tab is contaminated with insecure content, that insecure content can spread to all the tabs in the same security origin. R=jcampan,wtc TEST=SSLUITest.TestMixedContentsRandomizeHash,SSLUITest.TestMixedContentsTwoTabs	8706		http://codereview.chromium.org/42314	svn://svn.chromium.org/chrome/trunk/src@12178 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/ssl/randomize_hash.js b/chrome/test/data/ssl/randomize_hash.js <newline>new file mode 100755 <newline>index 0000000..46c2082 <newline>--- /dev/null <newline>+++ b/chrome/test/data/ssl/randomize_hash.js <newline>@@ -0,0 +1,2 @@ <newline>+document.body.innerHTML = "I'm content from an HTTP script." <newline>+location.hash = Math.random();
4182160e5cfb36d623ca3f7baef71ea4fd980af	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Mar 20 01:37:47 2009 +0000	SSLPolicy fix: Step 9 of 9 (hopefully!). Change our algorithm for computing the state of our SSL security indicators.  Previously, we were computing this state for a single navigation entry.  Although this matches other browsers, it fails to take the same-origin policy into account.  For example, if one tab is contaminated with insecure content, that insecure content can spread to all the tabs in the same security origin. R=jcampan,wtc TEST=SSLUITest.TestMixedContentsRandomizeHash,SSLUITest.TestMixedContentsTwoTabs	8706		http://codereview.chromium.org/42314	svn://svn.chromium.org/chrome/trunk/src@12178 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/ssl/randomize_hash.js b/chrome/test/data/ssl/randomize_hash.js <newline>new file mode 100755 <newline>index 0000000..46c2082 <newline>--- /dev/null <newline>+++ b/chrome/test/data/ssl/randomize_hash.js <newline>@@ -0,0 +1,2 @@ <newline>+document.body.innerHTML = "I'm content from an HTTP script." <newline>+location.hash = Math.random();
bdaf3cc7439b218de2212cf6704e9355fa0e02f	tc@google.com <tc@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 18 19:22:56 2009 +0000	DEFER a test that is broken upstream. The test tries to load a file:/// URL from a data: URL.  This isn't allowed in Chromium but it is in Safari.  The test really doesn't have anything to do with security checks so we should fix the test upstream instead. I'm deleting the existing pixel baseline because they're wrong (missing the image because of the security check mentioned above).			http://codereview.chromium.org/42349	svn://svn.chromium.org/chrome/trunk/src@12000 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index d9fb082..6047bb8 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -87,8 +87,6 @@ DEFER LINUX WIN : LayoutTests/fast/text/capitalize-boundaries.html = FAIL <newline> DEFER : LayoutTests/fast/forms/control-restrict-line-height.html = FAIL <newline> DEFER : LayoutTests/fast/replaced/table-percent-height.html = FAIL <newline>-// Bug 992930: Unable to load file:/// URLs from data: URLs. <newline>-DEFER RELEASE : LayoutTests/fast/events/standalone-image-drag-to-editable.html = FAIL <newline> // ----------------------------------------------------------------- <newline> // URL <newline>@@ -1376,11 +1374,9 @@ DEFER : LayoutTests/http/tests/security/feed-urls-from-remote.html = PASS FAIL <newline> // support. Enable once we turn on DOM_STORAGE. <newline> DEFER SKIP : LayoutTests/http/tests/navigation/post-goback-repost-policy.html = TIMEOUT <newline>-// This is failing because of an additional console message. <newline>-LINUX WIN DEBUG : LayoutTests/fast/events/standalone-image-drag-to-editable.html = FAIL <newline>- <newline>-// eventSender to fake a drag <newline>-MAC DEBUG : LayoutTests/fast/events/standalone-image-drag-to-editable.html = FAIL <newline>+// Bug 992930: In our port, we prevent the loading of file:/// URLs from <newline>+// data: URLs.  We should try to fix the test to not use a data: URL. <newline>+DEFER : LayoutTests/fast/events/standalone-image-drag-to-editable.html = FAIL <newline> // Missing expected results.  Probably going to fail anyway, since <newline> // chromium does not support webarchive format.
1dbc20bf59eb8c7c2f0c671854cfefb3a59cf6d	tc@google.com <tc@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 18 19:22:56 2009 +0000	DEFER a test that is broken upstream. The test tries to load a file:/// URL from a data: URL.  This isn't allowed in Chromium but it is in Safari.  The test really doesn't have anything to do with security checks so we should fix the test upstream instead. I'm deleting the existing pixel baseline because they're wrong (missing the image because of the security check mentioned above).			http://codereview.chromium.org/42349	svn://svn.chromium.org/chrome/trunk/src@12000 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index d9fb082..6047bb8 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -87,8 +87,6 @@ DEFER LINUX WIN : LayoutTests/fast/text/capitalize-boundaries.html = FAIL <newline> DEFER : LayoutTests/fast/forms/control-restrict-line-height.html = FAIL <newline> DEFER : LayoutTests/fast/replaced/table-percent-height.html = FAIL <newline>-// Bug 992930: Unable to load file:/// URLs from data: URLs. <newline>-DEFER RELEASE : LayoutTests/fast/events/standalone-image-drag-to-editable.html = FAIL <newline> // ----------------------------------------------------------------- <newline> // URL <newline>@@ -1376,11 +1374,9 @@ DEFER : LayoutTests/http/tests/security/feed-urls-from-remote.html = PASS FAIL <newline> // support. Enable once we turn on DOM_STORAGE. <newline> DEFER SKIP : LayoutTests/http/tests/navigation/post-goback-repost-policy.html = TIMEOUT <newline>-// This is failing because of an additional console message. <newline>-LINUX WIN DEBUG : LayoutTests/fast/events/standalone-image-drag-to-editable.html = FAIL <newline>- <newline>-// eventSender to fake a drag <newline>-MAC DEBUG : LayoutTests/fast/events/standalone-image-drag-to-editable.html = FAIL <newline>+// Bug 992930: In our port, we prevent the loading of file:/// URLs from <newline>+// data: URLs.  We should try to fix the test to not use a data: URL. <newline>+DEFER : LayoutTests/fast/events/standalone-image-drag-to-editable.html = FAIL <newline> // Missing expected results.  Probably going to fail anyway, since <newline> // chromium does not support webarchive format.
89ab5d4de53b01edf75aa2dd12186435d7dbb54	patrick@chromium.org <patrick@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 17 22:39:51 2009 +0000	Re-baseline LayoutTests\security\block-test-expected.txt. This test differs in type names, error codes, and GURL canonicalization. Allow the test to fail on Linux and Mac because it requires an FTP implementation.			http://codereview.chromium.org/46025	svn://svn.chromium.org/chrome/trunk/src@11923 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index 4032579..6c284f3 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -949,10 +949,6 @@ MAC : LayoutTests/http/tests/security/originHeader/origin-header-for-https.html <newline> // Fails upstream, deferring for now. <newline> DEFER : LayoutTests/fast/dom/cssTarget-crash.html = TIMEOUT <newline>-// Started failing with r5743 (darin) <newline>-// http://crbug.com/4617 <newline>-LayoutTests/security/block-test.html = FAIL <newline>- <newline> // MERGE 38500:39550: New tests <newline> // Missing expected results <newline> SKIP LINUX MAC : LayoutTests/animations/animation-drt-api.html = PASS <newline>@@ -1713,6 +1709,7 @@ LINUX : LayoutTests/fast/canvas/set-colors.html = PASS CRASH <newline> // Needs an FTP implementation to work completely. <newline> LINUX MAC : pending/security/block-test.html = FAIL <newline>+LINUX MAC : LayoutTests/security/block-test.html = FAIL <newline> // Flakey. Not clear when it started, but it was before 3/9/09. <newline> LINUX : LayoutTests/fast/clip/outline-overflowClip.html = CRASH PASS
48b39ccc260e30b46681d6925b5f1cc72fd6313	patrick@chromium.org <patrick@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 17 22:39:51 2009 +0000	Re-baseline LayoutTests\security\block-test-expected.txt. This test differs in type names, error codes, and GURL canonicalization. Allow the test to fail on Linux and Mac because it requires an FTP implementation.			http://codereview.chromium.org/46025	svn://svn.chromium.org/chrome/trunk/src@11923 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index 4032579..6c284f3 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -949,10 +949,6 @@ MAC : LayoutTests/http/tests/security/originHeader/origin-header-for-https.html <newline> // Fails upstream, deferring for now. <newline> DEFER : LayoutTests/fast/dom/cssTarget-crash.html = TIMEOUT <newline>-// Started failing with r5743 (darin) <newline>-// http://crbug.com/4617 <newline>-LayoutTests/security/block-test.html = FAIL <newline>- <newline> // MERGE 38500:39550: New tests <newline> // Missing expected results <newline> SKIP LINUX MAC : LayoutTests/animations/animation-drt-api.html = PASS <newline>@@ -1713,6 +1709,7 @@ LINUX : LayoutTests/fast/canvas/set-colors.html = PASS CRASH <newline> // Needs an FTP implementation to work completely. <newline> LINUX MAC : pending/security/block-test.html = FAIL <newline>+LINUX MAC : LayoutTests/security/block-test.html = FAIL <newline> // Flakey. Not clear when it started, but it was before 3/9/09. <newline> LINUX : LayoutTests/fast/clip/outline-overflowClip.html = CRASH PASS
0470a1c5651401b12fc8d201ab11f0815c06076	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 17 10:08:24 2009 +0000	SSLPolicy Fix: Step 5. Add a new notification type to notify other SSLManagers when a security origin becomes contaminated with mixed content. TBR=wtc	8706		http://codereview.chromium.org/48059	svn://svn.chromium.org/chrome/trunk/src@11853 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/notification_type.h b/chrome/common/notification_type.h <newline>index 5e59742..942c072 100644 <newline>--- a/chrome/common/notification_type.h <newline>+++ b/chrome/common/notification_type.h <newline>@@ -132,15 +132,26 @@ class NotificationType { <newline>     // are provided. <newline>     RESOURCE_RECEIVED_REDIRECT, <newline>-    // The SSL state of a page has changed somehow. For example, if an insecure <newline>-    // resource is loaded on a secure page. Note that a toplevel load commit <newline>-    // will also update the SSL state (since the NavigationEntry is new) and <newline>-    // this message won't always be sent in that case. <newline>+    // The SSL state of a page has changed in some visible way.  For example, <newline>+    // if an insecure resource is loaded on a secure page.  Note that a <newline>+    // toplevel load commit will also update the SSL state (since the <newline>+    // NavigationEntry is new) and this message won't always be sent in that <newline>+    // case.  Listen to this notification if you need to refresh SSL-related UI <newline>+    // elements. <newline>     // <newline>     // The source will be the navigation controller associated with the load. <newline>-    // There are no details. The entry changed will be the active entry of the <newline>+    // There are no details.  The entry changed will be the active entry of the <newline>     // controller. <newline>-    SSL_STATE_CHANGED, <newline>+    SSL_VISIBLE_STATE_CHANGED, <newline>+ <newline>+    // The SSL state of the browser has changed in some internal way.  For <newline>+    // example, the user might have explicitly allowed some broken certificate <newline>+    // or a secure origin might have included some insecure content.  Listen to <newline>+    // this notifiation if you need to keep track of our internal SSL state. <newline>+    // <newline>+    // The source will be the navigation controller associated with the state <newline>+    // change.  There are no details. <newline>+    SSL_INTERNAL_STATE_CHANGED, <newline>     // Download start and stop notifications. Stop notifications can occur on <newline>     // both normal completion or via a cancel operation.
4a19ea2e5e85b15eb611770200a3eb76566b03a	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 17 10:08:24 2009 +0000	SSLPolicy Fix: Step 5. Add a new notification type to notify other SSLManagers when a security origin becomes contaminated with mixed content. TBR=wtc	8706		http://codereview.chromium.org/48059	svn://svn.chromium.org/chrome/trunk/src@11853 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/notification_type.h b/chrome/common/notification_type.h <newline>index 5e59742..942c072 100644 <newline>--- a/chrome/common/notification_type.h <newline>+++ b/chrome/common/notification_type.h <newline>@@ -132,15 +132,26 @@ class NotificationType { <newline>     // are provided. <newline>     RESOURCE_RECEIVED_REDIRECT, <newline>-    // The SSL state of a page has changed somehow. For example, if an insecure <newline>-    // resource is loaded on a secure page. Note that a toplevel load commit <newline>-    // will also update the SSL state (since the NavigationEntry is new) and <newline>-    // this message won't always be sent in that case. <newline>+    // The SSL state of a page has changed in some visible way.  For example, <newline>+    // if an insecure resource is loaded on a secure page.  Note that a <newline>+    // toplevel load commit will also update the SSL state (since the <newline>+    // NavigationEntry is new) and this message won't always be sent in that <newline>+    // case.  Listen to this notification if you need to refresh SSL-related UI <newline>+    // elements. <newline>     // <newline>     // The source will be the navigation controller associated with the load. <newline>-    // There are no details. The entry changed will be the active entry of the <newline>+    // There are no details.  The entry changed will be the active entry of the <newline>     // controller. <newline>-    SSL_STATE_CHANGED, <newline>+    SSL_VISIBLE_STATE_CHANGED, <newline>+ <newline>+    // The SSL state of the browser has changed in some internal way.  For <newline>+    // example, the user might have explicitly allowed some broken certificate <newline>+    // or a secure origin might have included some insecure content.  Listen to <newline>+    // this notifiation if you need to keep track of our internal SSL state. <newline>+    // <newline>+    // The source will be the navigation controller associated with the state <newline>+    // change.  There are no details. <newline>+    SSL_INTERNAL_STATE_CHANGED, <newline>     // Download start and stop notifications. Stop notifications can occur on <newline>     // both normal completion or via a cancel operation.
511c2af582f09776a166aed873ae0308d629a07	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 17 09:18:06 2009 +0000	SSLPolicy Fix: Step 3. Plumbing the security origin of the frame making the request to SSL land. R=wtc	8706	equestCallback callback;	http://codereview.chromium.org/48038	svn://svn.chromium.org/chrome/trunk/src@11851 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index 0763246..657e97b 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -548,11 +548,12 @@ ResourceLoaderBridge* ResourceLoaderBridge::Create( <newline>     const GURL& url, <newline>     const GURL& policy_url, <newline>     const GURL& referrer, <newline>+    const std::string& frame_origin, <newline>+    const std::string& main_frame_origin, <newline>     const std::string& headers, <newline>     int load_flags, <newline>     int requestor_pid, <newline>     ResourceType::Type request_type, <newline>-    bool mixed_contents, <newline>     int routing_id) { <newline>   return new ResourceLoaderBridgeImpl(method, url, policy_url, <newline>                                       referrer, headers, load_flags);
46b0e667387bb42a18be86e8b1f85e968902953	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 17 09:18:06 2009 +0000	SSLPolicy Fix: Step 3. Plumbing the security origin of the frame making the request to SSL land. R=wtc	8706	equestCallback callback;	http://codereview.chromium.org/48038	svn://svn.chromium.org/chrome/trunk/src@11851 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index 0763246..657e97b 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -548,11 +548,12 @@ ResourceLoaderBridge* ResourceLoaderBridge::Create( <newline>     const GURL& url, <newline>     const GURL& policy_url, <newline>     const GURL& referrer, <newline>+    const std::string& frame_origin, <newline>+    const std::string& main_frame_origin, <newline>     const std::string& headers, <newline>     int load_flags, <newline>     int requestor_pid, <newline>     ResourceType::Type request_type, <newline>-    bool mixed_contents, <newline>     int routing_id) { <newline>   return new ResourceLoaderBridgeImpl(method, url, policy_url, <newline>                                       referrer, headers, load_flags);
59ec7c9d43201c8df86742500852f7dd84b7613	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 17 06:11:08 2009 +0000	SSL Fix: Step 4. Plumb the security origin information for memory cache loads too. R=wtc	8706		http://codereview.chromium.org/42263	svn://svn.chromium.org/chrome/trunk/src@11850 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/render_view.cc b/chrome/renderer/render_view.cc <newline>index bfbdbc1..cc46bda 100644 <newline>--- a/chrome/renderer/render_view.cc <newline>+++ b/chrome/renderer/render_view.cc <newline>@@ -1265,7 +1265,9 @@ bool RenderView::DidLoadResourceFromMemoryCache(WebView* webview, <newline>   // Let the browser know we loaded a resource from the memory cache.  This <newline>   // message is needed to display the correct SSL indicators. <newline>   Send(new ViewHostMsg_DidLoadResourceFromMemoryCache(routing_id_, <newline>-      request.GetURL(), response.GetSecurityInfo())); <newline>+      request.GetURL(), frame->GetSecurityOrigin(), <newline>+      frame->GetTop()->GetSecurityOrigin(), <newline>+      response.GetSecurityInfo())); <newline>   return false; <newline> }
fc45869f044885b81265e6a67cb0220758113b5	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Mar 17 06:11:08 2009 +0000	SSL Fix: Step 4. Plumb the security origin information for memory cache loads too. R=wtc	8706		http://codereview.chromium.org/42263	svn://svn.chromium.org/chrome/trunk/src@11850 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/renderer/render_view.cc b/chrome/renderer/render_view.cc <newline>index bfbdbc1..cc46bda 100644 <newline>--- a/chrome/renderer/render_view.cc <newline>+++ b/chrome/renderer/render_view.cc <newline>@@ -1265,7 +1265,9 @@ bool RenderView::DidLoadResourceFromMemoryCache(WebView* webview, <newline>   // Let the browser know we loaded a resource from the memory cache.  This <newline>   // message is needed to display the correct SSL indicators. <newline>   Send(new ViewHostMsg_DidLoadResourceFromMemoryCache(routing_id_, <newline>-      request.GetURL(), response.GetSecurityInfo())); <newline>+      request.GetURL(), frame->GetSecurityOrigin(), <newline>+      frame->GetTop()->GetSecurityOrigin(), <newline>+      response.GetSecurityInfo())); <newline>   return false; <newline> }
e39340b6d9f2eeaaed9d286d12010998b125657	ojan@google.com <ojan@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 16 22:49:29 2009 +0000	Fix baseline of pending/security/block-test.html. It was grabbing the wrong set of expected results. This is a short-term workaround until the test is upstreamed.			http://codereview.chromium.org/48036	svn://svn.chromium.org/chrome/trunk/src@11790 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index e90b7d8..39e8df5 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -2058,9 +2058,6 @@ LINUX : LayoutTests/tables/mozilla_expected_failures/marvin/backgr_layers-show.h <newline> // Merge 41709:41733 <newline> // Expectations changed upstream. <newline>-WIN : pending/security/block-test.html = FAIL <newline>-LINUX : LayoutTests/editing/selection/5354455-2.html = FAIL <newline>-LINUX : LayoutTests/editing/selection/5109817.html = FAIL <newline> WIN LINUX : LayoutTests/http/tests/misc/url-in-utf16le.html = FAIL <newline> MAC RELEASE : LayoutTests/http/tests/misc/url-in-utf16le.html = FAIL <newline> WIN LINUX : LayoutTests/http/tests/misc/url-in-utf16be.html = TIMEOUT
4e2321232035e77c7718b21b67d83a6a014792b	ojan@google.com <ojan@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 16 22:49:29 2009 +0000	Fix baseline of pending/security/block-test.html. It was grabbing the wrong set of expected results. This is a short-term workaround until the test is upstreamed.			http://codereview.chromium.org/48036	svn://svn.chromium.org/chrome/trunk/src@11790 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index e90b7d8..39e8df5 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -2058,9 +2058,6 @@ LINUX : LayoutTests/tables/mozilla_expected_failures/marvin/backgr_layers-show.h <newline> // Merge 41709:41733 <newline> // Expectations changed upstream. <newline>-WIN : pending/security/block-test.html = FAIL <newline>-LINUX : LayoutTests/editing/selection/5354455-2.html = FAIL <newline>-LINUX : LayoutTests/editing/selection/5109817.html = FAIL <newline> WIN LINUX : LayoutTests/http/tests/misc/url-in-utf16le.html = FAIL <newline> MAC RELEASE : LayoutTests/http/tests/misc/url-in-utf16le.html = FAIL <newline> WIN LINUX : LayoutTests/http/tests/misc/url-in-utf16be.html = TIMEOUT
81fd2263acf29b754330742eaa352f4c7278270	patrick@chromium.org <patrick@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 9 18:39:03 2009 +0000	Add a copy of DOM checker for testing. DOM checker is a tool to help automate domain security policy enforcement. This copy of DOM checker was fetched from: http://lcamtuf.coredump.cx/dom_checker/ Some values in dom_config.js have been changed. There have been no other modifications. In order to automate this test, there will need to be a few more small changes. To more easily see what changes have been made for Chromium, I'm first checking in a clean copy.	6274		http://codereview.chromium.org/40234	svn://svn.chromium.org/chrome/trunk/src@11264 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/dom_checker/dom_target_page.html b/chrome/test/data/dom_checker/dom_target_page.html <newline>new file mode 100644 <newline>index 0000000..a5a62b4 <newline>--- /dev/null <newline>+++ b/chrome/test/data/dom_checker/dom_target_page.html <newline>@@ -0,0 +1,154 @@ <newline>+<html> <newline>+<!-- <newline>+ <newline>+   DOM checker - test target page <newline>+   ------------------------------ <newline>+ <newline>+   Authors: Michal Zalewski <lcamtuf@google.com> <newline>+            Filipe Almeida <filipe@google.com> <newline>+ <newline>+   Copyright 2008 by Google Inc. All Rights Reserved. <newline>+ <newline>+   Licensed under the Apache License, Version 2.0 (the "License"); <newline>+   you may not use this file except in compliance with the License. <newline>+   You may obtain a copy of the License at <newline>+ <newline>+     http://www.apache.org/licenses/LICENSE-2.0 <newline>+ <newline>+   Unless required by applicable law or agreed to in writing, software <newline>+   distributed under the License is distributed on an "AS IS" BASIS, <newline>+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. <newline>+   See the License for the specific language governing permissions and <newline>+   limitations under the License. <newline>+ <newline>+--> <newline>+ <newline>+<script src="dom_config.js"></script> <newline>+ <newline>+<script> <newline>+ <newline>+var private_var = 1;		// We'll try to set it across domains. <newline>+var ipc_page;			// IPC page location <newline>+var queue_timer;		// IPC queue handling timer <newline>+var idle = true;		// IPC handler state <newline>+var prev_hval = 'NONE';		// Previous IPC command <newline>+var idle_cycles = 0;		// Number of cycles spend in idle <newline>+ <newline>+/* Try to inject a variable to paren't namespace by defining a getter in <newline>+   another domain. */ <newline>+ <newline>+try { <newline>+  top.__defineGetter__('injected_var', function() {return 1;}) <newline>+} catch(e) {} <newline>+ <newline>+ <newline>+/* Update IPC frame location as needed, set timers. */ <newline>+function page_init() { <newline>+ <newline>+  ipc_page = 'http://' + main_host + '/' + main_dir + '/dom_blank_page.html'; <newline>+  document.getElementById('ipc_write').src = ipc_page + '#2'; <newline>+ <newline>+  // log('Local ipc_write initialized to ' + ipc_page); <newline>+ <newline>+  queue_timer = setInterval('get_ipc_command()',250); <newline>+ <newline>+} <newline>+ <newline>+ <newline>+/* IPC subsystem logging (debugging purposes only) */ <newline>+function log(x) { <newline>+  var e = document.createElement('li'); <newline>+  e.innerHTML = x; <newline>+  document.getElementById('log').appendChild(e); <newline>+} <newline>+ <newline>+ <newline>+/* Wait for IPC state change, execute command, send results. */ <newline>+function get_ipc_command() { <newline>+ <newline>+  var hval; <newline>+ <newline>+  try { hval = top.frames['ipc_read'].location.hash; } catch (e) { <newline>+    // log('IPC command read failed from external ipc_read.'); <newline>+    hval = ''; <newline>+  } <newline>+ <newline>+  if (hval == prev_hval || hval == '' || hval == undefined || hval == 'NONE') { <newline>+    if (!idle) { <newline>+      idle_cycles++; <newline>+ <newline>+      if (idle_cycles == 200) { <newline>+        // log('Entered power saving mode.'); <newline>+        clearInterval(queue_timer); <newline>+        queue_timer = setInterval('get_ipc_command()',250); <newline>+        idle = true; <newline>+      } <newline>+ <newline>+    } <newline>+ <newline>+    return; <newline>+  } <newline>+ <newline>+  /* Full speed! */ <newline>+  if (idle) { <newline>+    // log('Entered full speed mode.'); <newline>+    clearInterval(queue_timer); <newline>+    queue_timer = setInterval('get_ipc_command()',1); <newline>+    idle = false; <newline>+    idle_cycles = 0; <newline>+  } <newline>+ <newline>+  // log('Got IPC command ' + hval + ' (prev: ' + prev_hval + ')'); <newline>+ <newline>+  prev_hval = hval; <newline>+ <newline>+  var res = 0; <newline>+ <newline>+  hval = hval.substr(1); <newline>+ <newline>+  if (hval == 'RESET') res = 2; <newline>+  else try { <newline>+    if (eval(unescape(hval))) res = 1; <newline>+   } catch (e) { <newline>+    // log('Evaluation exception! Final was: ' + unescape(hval)); <newline>+  } <newline>+ <newline>+  document.getElementById('ipc_write').src =  ipc_page + '#' + res; <newline>+ <newline>+} <newline>+ <newline>+</script> <newline>+<title>DOM checker victim page</title> <newline>+<body onload="page_init()"> <newline>+ <newline>+<!-- Some bogus page elements to make it possible to enumerate arrays. --> <newline>+ <newline>+<style name=ns>MENU { margin: 1em }</style> <newline>+ <newline>+<img src="#bad" name=ni> <newline>+ <newline>+<form name=nf method=post action=foo> <newline>+<input type=hidden name=foo value=bar> <newline>+</form> <newline>+ <newline>+<h1><a href="#bad" name=nl>Hi mom!</a></h1> <newline>+ <newline>+<a name=ni2> <newline>+ <newline>+<embed name=ne></embed> <newline>+ <newline>+<object name=no></object> <newline>+ <newline>+<applet name=na></applet> <newline>+ <newline>+<!-- Log container --> <newline>+<div id=log> <newline>+</div> <newline>+ <newline>+<!-- Nested subframe used for about:blank tests --> <newline>+<iframe id=nf name=nf src="about:blank"> <newline>+</iframe> <newline>+ <newline>+<!-- IPC frame --> <newline>+<iframe id=ipc_write name=ipc_write></iframe> <newline>+
0cdf1b498549d19a9b39388831d5ac1a5c93b98	patrick@chromium.org <patrick@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Mar 9 18:39:03 2009 +0000	Add a copy of DOM checker for testing. DOM checker is a tool to help automate domain security policy enforcement. This copy of DOM checker was fetched from: http://lcamtuf.coredump.cx/dom_checker/ Some values in dom_config.js have been changed. There have been no other modifications. In order to automate this test, there will need to be a few more small changes. To more easily see what changes have been made for Chromium, I'm first checking in a clean copy.	6274		http://codereview.chromium.org/40234	svn://svn.chromium.org/chrome/trunk/src@11264 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/dom_checker/dom_target_page.html b/chrome/test/data/dom_checker/dom_target_page.html <newline>new file mode 100644 <newline>index 0000000..a5a62b4 <newline>--- /dev/null <newline>+++ b/chrome/test/data/dom_checker/dom_target_page.html <newline>@@ -0,0 +1,154 @@ <newline>+<html> <newline>+<!-- <newline>+ <newline>+   DOM checker - test target page <newline>+   ------------------------------ <newline>+ <newline>+   Authors: Michal Zalewski <lcamtuf@google.com> <newline>+            Filipe Almeida <filipe@google.com> <newline>+ <newline>+   Copyright 2008 by Google Inc. All Rights Reserved. <newline>+ <newline>+   Licensed under the Apache License, Version 2.0 (the "License"); <newline>+   you may not use this file except in compliance with the License. <newline>+   You may obtain a copy of the License at <newline>+ <newline>+     http://www.apache.org/licenses/LICENSE-2.0 <newline>+ <newline>+   Unless required by applicable law or agreed to in writing, software <newline>+   distributed under the License is distributed on an "AS IS" BASIS, <newline>+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. <newline>+   See the License for the specific language governing permissions and <newline>+   limitations under the License. <newline>+ <newline>+--> <newline>+ <newline>+<script src="dom_config.js"></script> <newline>+ <newline>+<script> <newline>+ <newline>+var private_var = 1;		// We'll try to set it across domains. <newline>+var ipc_page;			// IPC page location <newline>+var queue_timer;		// IPC queue handling timer <newline>+var idle = true;		// IPC handler state <newline>+var prev_hval = 'NONE';		// Previous IPC command <newline>+var idle_cycles = 0;		// Number of cycles spend in idle <newline>+ <newline>+/* Try to inject a variable to paren't namespace by defining a getter in <newline>+   another domain. */ <newline>+ <newline>+try { <newline>+  top.__defineGetter__('injected_var', function() {return 1;}) <newline>+} catch(e) {} <newline>+ <newline>+ <newline>+/* Update IPC frame location as needed, set timers. */ <newline>+function page_init() { <newline>+ <newline>+  ipc_page = 'http://' + main_host + '/' + main_dir + '/dom_blank_page.html'; <newline>+  document.getElementById('ipc_write').src = ipc_page + '#2'; <newline>+ <newline>+  // log('Local ipc_write initialized to ' + ipc_page); <newline>+ <newline>+  queue_timer = setInterval('get_ipc_command()',250); <newline>+ <newline>+} <newline>+ <newline>+ <newline>+/* IPC subsystem logging (debugging purposes only) */ <newline>+function log(x) { <newline>+  var e = document.createElement('li'); <newline>+  e.innerHTML = x; <newline>+  document.getElementById('log').appendChild(e); <newline>+} <newline>+ <newline>+ <newline>+/* Wait for IPC state change, execute command, send results. */ <newline>+function get_ipc_command() { <newline>+ <newline>+  var hval; <newline>+ <newline>+  try { hval = top.frames['ipc_read'].location.hash; } catch (e) { <newline>+    // log('IPC command read failed from external ipc_read.'); <newline>+    hval = ''; <newline>+  } <newline>+ <newline>+  if (hval == prev_hval || hval == '' || hval == undefined || hval == 'NONE') { <newline>+    if (!idle) { <newline>+      idle_cycles++; <newline>+ <newline>+      if (idle_cycles == 200) { <newline>+        // log('Entered power saving mode.'); <newline>+        clearInterval(queue_timer); <newline>+        queue_timer = setInterval('get_ipc_command()',250); <newline>+        idle = true; <newline>+      } <newline>+ <newline>+    } <newline>+ <newline>+    return; <newline>+  } <newline>+ <newline>+  /* Full speed! */ <newline>+  if (idle) { <newline>+    // log('Entered full speed mode.'); <newline>+    clearInterval(queue_timer); <newline>+    queue_timer = setInterval('get_ipc_command()',1); <newline>+    idle = false; <newline>+    idle_cycles = 0; <newline>+  } <newline>+ <newline>+  // log('Got IPC command ' + hval + ' (prev: ' + prev_hval + ')'); <newline>+ <newline>+  prev_hval = hval; <newline>+ <newline>+  var res = 0; <newline>+ <newline>+  hval = hval.substr(1); <newline>+ <newline>+  if (hval == 'RESET') res = 2; <newline>+  else try { <newline>+    if (eval(unescape(hval))) res = 1; <newline>+   } catch (e) { <newline>+    // log('Evaluation exception! Final was: ' + unescape(hval)); <newline>+  } <newline>+ <newline>+  document.getElementById('ipc_write').src =  ipc_page + '#' + res; <newline>+ <newline>+} <newline>+ <newline>+</script> <newline>+<title>DOM checker victim page</title> <newline>+<body onload="page_init()"> <newline>+ <newline>+<!-- Some bogus page elements to make it possible to enumerate arrays. --> <newline>+ <newline>+<style name=ns>MENU { margin: 1em }</style> <newline>+ <newline>+<img src="#bad" name=ni> <newline>+ <newline>+<form name=nf method=post action=foo> <newline>+<input type=hidden name=foo value=bar> <newline>+</form> <newline>+ <newline>+<h1><a href="#bad" name=nl>Hi mom!</a></h1> <newline>+ <newline>+<a name=ni2> <newline>+ <newline>+<embed name=ne></embed> <newline>+ <newline>+<object name=no></object> <newline>+ <newline>+<applet name=na></applet> <newline>+ <newline>+<!-- Log container --> <newline>+<div id=log> <newline>+</div> <newline>+ <newline>+<!-- Nested subframe used for about:blank tests --> <newline>+<iframe id=nf name=nf src="about:blank"> <newline>+</iframe> <newline>+ <newline>+<!-- IPC frame --> <newline>+<iframe id=ipc_write name=ipc_write></iframe> <newline>+
3d4a3da9ee9826c6d2e7eecd30bf1d632731256	jcampan@chromium.org <jcampan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sun Mar 8 07:41:31 2009 +0000	Landing again the CL that adds security info to canceled requests (last time it was causing sync XMLHttpRequests to hang, breaking many layout tests). TBR=darin			http://codereview.chromium.org/39321	svn://svn.chromium.org/chrome/trunk/src@11221 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index f6b10f3..2e94f3f 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -173,9 +173,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>     peer_->OnReceivedData(buf_copy.get(), bytes_read); <newline>   } <newline>-  void NotifyCompletedRequest(const URLRequestStatus& status) { <newline>+  void NotifyCompletedRequest(const URLRequestStatus& status, <newline>+                              const std::string& security_info) { <newline>     if (peer_) { <newline>-      peer_->OnCompletedRequest(status); <newline>+      peer_->OnCompletedRequest(status, security_info); <newline>       DropPeer();  // ensure no further notifications <newline>     } <newline>   } <newline>@@ -246,9 +247,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>         this, &RequestProxy::NotifyReceivedData, bytes_read)); <newline>   } <newline>-  virtual void OnCompletedRequest(const URLRequestStatus& status) { <newline>+  virtual void OnCompletedRequest(const URLRequestStatus& status, <newline>+                                  const std::string& security_info) { <newline>     owner_loop_->PostTask(FROM_HERE, NewRunnableMethod( <newline>-        this, &RequestProxy::NotifyCompletedRequest, status)); <newline>+        this, &RequestProxy::NotifyCompletedRequest, status, security_info)); <newline>   } <newline>   // -------------------------------------------------------------------------- <newline>@@ -289,7 +291,7 @@ class RequestProxy : public URLRequest::Delegate, <newline>   void Done() { <newline>     DCHECK(request_.get()); <newline>-    OnCompletedRequest(request_->status()); <newline>+    OnCompletedRequest(request_->status(), std::string()); <newline>     request_.reset();  // destroy on the io thread <newline>   } <newline>@@ -340,7 +342,8 @@ class SyncRequestProxy : public RequestProxy { <newline>     AsyncReadData();  // read more (may recurse) <newline>   } <newline>-  virtual void OnCompletedRequest(const URLRequestStatus& status) { <newline>+  virtual void OnCompletedRequest(const URLRequestStatus& status, <newline>+                                  const std::string& security_info) { <newline>     result_->status = status; <newline>     event_.Signal(); <newline>   }
4891b363f7d9ca534880d25524adeb810ff3ff0	jcampan@chromium.org <jcampan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sun Mar 8 07:41:31 2009 +0000	Landing again the CL that adds security info to canceled requests (last time it was causing sync XMLHttpRequests to hang, breaking many layout tests). TBR=darin			http://codereview.chromium.org/39321	svn://svn.chromium.org/chrome/trunk/src@11221 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index f6b10f3..2e94f3f 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -173,9 +173,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>     peer_->OnReceivedData(buf_copy.get(), bytes_read); <newline>   } <newline>-  void NotifyCompletedRequest(const URLRequestStatus& status) { <newline>+  void NotifyCompletedRequest(const URLRequestStatus& status, <newline>+                              const std::string& security_info) { <newline>     if (peer_) { <newline>-      peer_->OnCompletedRequest(status); <newline>+      peer_->OnCompletedRequest(status, security_info); <newline>       DropPeer();  // ensure no further notifications <newline>     } <newline>   } <newline>@@ -246,9 +247,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>         this, &RequestProxy::NotifyReceivedData, bytes_read)); <newline>   } <newline>-  virtual void OnCompletedRequest(const URLRequestStatus& status) { <newline>+  virtual void OnCompletedRequest(const URLRequestStatus& status, <newline>+                                  const std::string& security_info) { <newline>     owner_loop_->PostTask(FROM_HERE, NewRunnableMethod( <newline>-        this, &RequestProxy::NotifyCompletedRequest, status)); <newline>+        this, &RequestProxy::NotifyCompletedRequest, status, security_info)); <newline>   } <newline>   // -------------------------------------------------------------------------- <newline>@@ -289,7 +291,7 @@ class RequestProxy : public URLRequest::Delegate, <newline>   void Done() { <newline>     DCHECK(request_.get()); <newline>-    OnCompletedRequest(request_->status()); <newline>+    OnCompletedRequest(request_->status(), std::string()); <newline>     request_.reset();  // destroy on the io thread <newline>   } <newline>@@ -340,7 +342,8 @@ class SyncRequestProxy : public RequestProxy { <newline>     AsyncReadData();  // read more (may recurse) <newline>   } <newline>-  virtual void OnCompletedRequest(const URLRequestStatus& status) { <newline>+  virtual void OnCompletedRequest(const URLRequestStatus& status, <newline>+                                  const std::string& security_info) { <newline>     result_->status = status; <newline>     event_.Signal(); <newline>   }
8f04bca1df0c2dbdb25cb4ce1d595a6ab914110	jcampan@chromium.org <jcampan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Mar 7 07:47:52 2009 +0000	Landing again the CL that adds security info to canceled requests (it was breaking NPAPI tests on Vista due to an erroneuous commented line). TBR=darin			http://codereview.chromium.org/39309	svn://svn.chromium.org/chrome/trunk/src@11197 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index f6b10f3..c6c7b78 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -173,9 +173,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>     peer_->OnReceivedData(buf_copy.get(), bytes_read); <newline>   } <newline>-  void NotifyCompletedRequest(const URLRequestStatus& status) { <newline>+  void NotifyCompletedRequest(const URLRequestStatus& status, <newline>+                              const std::string& security_info) { <newline>     if (peer_) { <newline>-      peer_->OnCompletedRequest(status); <newline>+      peer_->OnCompletedRequest(status, security_info); <newline>       DropPeer();  // ensure no further notifications <newline>     } <newline>   } <newline>@@ -246,9 +247,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>         this, &RequestProxy::NotifyReceivedData, bytes_read)); <newline>   } <newline>-  virtual void OnCompletedRequest(const URLRequestStatus& status) { <newline>+  virtual void OnCompletedRequest(const URLRequestStatus& status, <newline>+                                  const std::string& security_info) { <newline>     owner_loop_->PostTask(FROM_HERE, NewRunnableMethod( <newline>-        this, &RequestProxy::NotifyCompletedRequest, status)); <newline>+        this, &RequestProxy::NotifyCompletedRequest, status, security_info)); <newline>   } <newline>   // -------------------------------------------------------------------------- <newline>@@ -289,7 +291,7 @@ class RequestProxy : public URLRequest::Delegate, <newline>   void Done() { <newline>     DCHECK(request_.get()); <newline>-    OnCompletedRequest(request_->status()); <newline>+    OnCompletedRequest(request_->status(), std::string()); <newline>     request_.reset();  // destroy on the io thread <newline>   }
db11b555f79840fc9f793d808af13bcaf9bd1f7	jcampan@chromium.org <jcampan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Mar 7 07:47:52 2009 +0000	Landing again the CL that adds security info to canceled requests (it was breaking NPAPI tests on Vista due to an erroneuous commented line). TBR=darin			http://codereview.chromium.org/39309	svn://svn.chromium.org/chrome/trunk/src@11197 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index f6b10f3..c6c7b78 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -173,9 +173,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>     peer_->OnReceivedData(buf_copy.get(), bytes_read); <newline>   } <newline>-  void NotifyCompletedRequest(const URLRequestStatus& status) { <newline>+  void NotifyCompletedRequest(const URLRequestStatus& status, <newline>+                              const std::string& security_info) { <newline>     if (peer_) { <newline>-      peer_->OnCompletedRequest(status); <newline>+      peer_->OnCompletedRequest(status, security_info); <newline>       DropPeer();  // ensure no further notifications <newline>     } <newline>   } <newline>@@ -246,9 +247,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>         this, &RequestProxy::NotifyReceivedData, bytes_read)); <newline>   } <newline>-  virtual void OnCompletedRequest(const URLRequestStatus& status) { <newline>+  virtual void OnCompletedRequest(const URLRequestStatus& status, <newline>+                                  const std::string& security_info) { <newline>     owner_loop_->PostTask(FROM_HERE, NewRunnableMethod( <newline>-        this, &RequestProxy::NotifyCompletedRequest, status)); <newline>+        this, &RequestProxy::NotifyCompletedRequest, status, security_info)); <newline>   } <newline>   // -------------------------------------------------------------------------- <newline>@@ -289,7 +291,7 @@ class RequestProxy : public URLRequest::Delegate, <newline>   void Done() { <newline>     DCHECK(request_.get()); <newline>-    OnCompletedRequest(request_->status()); <newline>+    OnCompletedRequest(request_->status(), std::string()); <newline>     request_.reset();  // destroy on the io thread <newline>   }
2d33086535a625dd9156bb226b0abc91c2f475b	jcampan@chromium.org <jcampan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Mar 7 00:19:38 2009 +0000	This CL adds a way to specify the security info when canceling a URLRequest. This allows to tag a request on the renderer side with its security info.  It is useful for the "frame info" dialog. When showing that dialog for blocked frames, the security info can be retrieved and users can see the cert details for the blocked frame. TEST=Open a page containing a frame served over bad HTTPS.  The frame is blocked (replaced with a warning message). Right-click, select "Frame info". The dialog should have a "show cert" button which when pressed should show the frame's bad cert.	2853		http://codereview.chromium.org/7276	svn://svn.chromium.org/chrome/trunk/src@11179 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index f6b10f3..c6c7b78 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -173,9 +173,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>     peer_->OnReceivedData(buf_copy.get(), bytes_read); <newline>   } <newline>-  void NotifyCompletedRequest(const URLRequestStatus& status) { <newline>+  void NotifyCompletedRequest(const URLRequestStatus& status, <newline>+                              const std::string& security_info) { <newline>     if (peer_) { <newline>-      peer_->OnCompletedRequest(status); <newline>+      peer_->OnCompletedRequest(status, security_info); <newline>       DropPeer();  // ensure no further notifications <newline>     } <newline>   } <newline>@@ -246,9 +247,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>         this, &RequestProxy::NotifyReceivedData, bytes_read)); <newline>   } <newline>-  virtual void OnCompletedRequest(const URLRequestStatus& status) { <newline>+  virtual void OnCompletedRequest(const URLRequestStatus& status, <newline>+                                  const std::string& security_info) { <newline>     owner_loop_->PostTask(FROM_HERE, NewRunnableMethod( <newline>-        this, &RequestProxy::NotifyCompletedRequest, status)); <newline>+        this, &RequestProxy::NotifyCompletedRequest, status, security_info)); <newline>   } <newline>   // -------------------------------------------------------------------------- <newline>@@ -289,7 +291,7 @@ class RequestProxy : public URLRequest::Delegate, <newline>   void Done() { <newline>     DCHECK(request_.get()); <newline>-    OnCompletedRequest(request_->status()); <newline>+    OnCompletedRequest(request_->status(), std::string()); <newline>     request_.reset();  // destroy on the io thread <newline>   }
8e7d5688f95703ac9a6ddac4752098c407223e5	jcampan@chromium.org <jcampan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Sat Mar 7 00:19:38 2009 +0000	This CL adds a way to specify the security info when canceling a URLRequest. This allows to tag a request on the renderer side with its security info.  It is useful for the "frame info" dialog. When showing that dialog for blocked frames, the security info can be retrieved and users can see the cert details for the blocked frame. TEST=Open a page containing a frame served over bad HTTPS.  The frame is blocked (replaced with a warning message). Right-click, select "Frame info". The dialog should have a "show cert" button which when pressed should show the frame's bad cert.	2853		http://codereview.chromium.org/7276	svn://svn.chromium.org/chrome/trunk/src@11179 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index f6b10f3..c6c7b78 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -173,9 +173,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>     peer_->OnReceivedData(buf_copy.get(), bytes_read); <newline>   } <newline>-  void NotifyCompletedRequest(const URLRequestStatus& status) { <newline>+  void NotifyCompletedRequest(const URLRequestStatus& status, <newline>+                              const std::string& security_info) { <newline>     if (peer_) { <newline>-      peer_->OnCompletedRequest(status); <newline>+      peer_->OnCompletedRequest(status, security_info); <newline>       DropPeer();  // ensure no further notifications <newline>     } <newline>   } <newline>@@ -246,9 +247,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>         this, &RequestProxy::NotifyReceivedData, bytes_read)); <newline>   } <newline>-  virtual void OnCompletedRequest(const URLRequestStatus& status) { <newline>+  virtual void OnCompletedRequest(const URLRequestStatus& status, <newline>+                                  const std::string& security_info) { <newline>     owner_loop_->PostTask(FROM_HERE, NewRunnableMethod( <newline>-        this, &RequestProxy::NotifyCompletedRequest, status)); <newline>+        this, &RequestProxy::NotifyCompletedRequest, status, security_info)); <newline>   } <newline>   // -------------------------------------------------------------------------- <newline>@@ -289,7 +291,7 @@ class RequestProxy : public URLRequest::Delegate, <newline>   void Done() { <newline>     DCHECK(request_.get()); <newline>-    OnCompletedRequest(request_->status()); <newline>+    OnCompletedRequest(request_->status(), std::string()); <newline>     request_.reset();  // destroy on the io thread <newline>   }
4c58ddd02b113d1193754a072f293d5cb5f399b	patrick@chromium.org <patrick@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Mar 6 00:34:20 2009 +0000	Fix layout test pending/security/block-test.html. Some output was missing due to calling finishTesting too early.			http://codereview.chromium.org/40196	svn://svn.chromium.org/chrome/trunk/src@11062 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index 1ebcf3c..fc4e769 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -982,7 +982,6 @@ DEFER LINUX WIN : LayoutTests/fast/layers/opacity-transforms.html = FAIL <newline> DEFER : LayoutTests/plugins/netscape-construct.html = FAIL <newline> // MERGE 37604:38097 REGRESSIONS <newline>-pending/security/block-test.html = CRASH FAIL <newline> // New test. We should fix it, but it doesn't need to block the current release <newline> DEFER : LayoutTests/http/tests/security/originHeader/origin-header-for-empty.html = FAIL TIMEOUT PASS
cfd24a00abbccb9cb979e55dc695a967698a935	patrick@chromium.org <patrick@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Mar 6 00:34:20 2009 +0000	Fix layout test pending/security/block-test.html. Some output was missing due to calling finishTesting too early.			http://codereview.chromium.org/40196	svn://svn.chromium.org/chrome/trunk/src@11062 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index 1ebcf3c..fc4e769 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -982,7 +982,6 @@ DEFER LINUX WIN : LayoutTests/fast/layers/opacity-transforms.html = FAIL <newline> DEFER : LayoutTests/plugins/netscape-construct.html = FAIL <newline> // MERGE 37604:38097 REGRESSIONS <newline>-pending/security/block-test.html = CRASH FAIL <newline> // New test. We should fix it, but it doesn't need to block the current release <newline> DEFER : LayoutTests/http/tests/security/originHeader/origin-header-for-empty.html = FAIL TIMEOUT PASS
c2e9fd2012435a193f10adcb80a1e0b1a36f418	evan@chromium.org <evan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 4 19:00:43 2009 +0000	Register SSLManager preferences on linux and mac. This should fix the following error: FATAL:common/pref_service.cc(314)] Check failed: false. Trying to read an unregistered pref: security.mixed_content_filtering			http://codereview.chromium.org/39006	svn://svn.chromium.org/chrome/trunk/src@10903 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/browser_prefs.cc b/chrome/browser/browser_prefs.cc <newline>index 3625995..5a50444 100644 <newline>--- a/chrome/browser/browser_prefs.cc <newline>+++ b/chrome/browser/browser_prefs.cc <newline>@@ -9,20 +9,20 @@ <newline> #include "chrome/browser/browser_shutdown.h" <newline> #include "chrome/browser/cache_manager_host.h" <newline> #include "chrome/browser/download/download_manager.h" <newline>+#include "chrome/browser/google_url_tracker.h" <newline> #include "chrome/browser/metrics/metrics_service.h" <newline> #include "chrome/browser/net/dns_global.h" <newline> #include "chrome/browser/password_manager/password_manager.h" <newline> #include "chrome/browser/renderer_host/browser_render_process_host.h" <newline> #include "chrome/browser/search_engines/template_url_prepopulate_data.h" <newline>-#include "chrome/browser/google_url_tracker.h" <newline> #include "chrome/browser/session_startup_pref.h" <newline>+#include "chrome/browser/ssl/ssl_manager.h" <newline> #include "chrome/browser/tab_contents/web_contents.h" <newline> #if defined(OS_WIN)  // TODO(port): whittle this down as we port <newline> #include "chrome/browser/external_protocol_handler.h" <newline> #include "chrome/browser/safe_browsing/safe_browsing_service.h" <newline> #include "chrome/browser/spellchecker.h" <newline>-#include "chrome/browser/ssl/ssl_manager.h" <newline> #include "chrome/browser/task_manager.h" <newline> #include "chrome/browser/views/bookmark_bar_view.h" <newline> #include "chrome/browser/views/bookmark_manager_view.h" <newline>@@ -59,10 +59,10 @@ void RegisterAllPrefs(PrefService* user_prefs, PrefService* local_state) { <newline>   PasswordManager::RegisterUserPrefs(user_prefs); <newline>   chrome_browser_net::RegisterUserPrefs(user_prefs); <newline>   DownloadManager::RegisterUserPrefs(user_prefs); <newline>+  SSLManager::RegisterUserPrefs(user_prefs); <newline> #if defined(OS_WIN)  // TODO(port): whittle this down as we port <newline>   BookmarkBarView::RegisterUserPrefs(user_prefs); <newline>   BookmarkTableView::RegisterUserPrefs(user_prefs); <newline>-  SSLManager::RegisterUserPrefs(user_prefs); <newline> #endif <newline>   AutofillManager::RegisterUserPrefs(user_prefs); <newline>   TabContents::RegisterUserPrefs(user_prefs);
a73e252110d9cfa026e913487b0f4a55fe94df5	evan@chromium.org <evan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Mar 4 19:00:43 2009 +0000	Register SSLManager preferences on linux and mac. This should fix the following error: FATAL:common/pref_service.cc(314)] Check failed: false. Trying to read an unregistered pref: security.mixed_content_filtering			http://codereview.chromium.org/39006	svn://svn.chromium.org/chrome/trunk/src@10903 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/browser_prefs.cc b/chrome/browser/browser_prefs.cc <newline>index 3625995..5a50444 100644 <newline>--- a/chrome/browser/browser_prefs.cc <newline>+++ b/chrome/browser/browser_prefs.cc <newline>@@ -9,20 +9,20 @@ <newline> #include "chrome/browser/browser_shutdown.h" <newline> #include "chrome/browser/cache_manager_host.h" <newline> #include "chrome/browser/download/download_manager.h" <newline>+#include "chrome/browser/google_url_tracker.h" <newline> #include "chrome/browser/metrics/metrics_service.h" <newline> #include "chrome/browser/net/dns_global.h" <newline> #include "chrome/browser/password_manager/password_manager.h" <newline> #include "chrome/browser/renderer_host/browser_render_process_host.h" <newline> #include "chrome/browser/search_engines/template_url_prepopulate_data.h" <newline>-#include "chrome/browser/google_url_tracker.h" <newline> #include "chrome/browser/session_startup_pref.h" <newline>+#include "chrome/browser/ssl/ssl_manager.h" <newline> #include "chrome/browser/tab_contents/web_contents.h" <newline> #if defined(OS_WIN)  // TODO(port): whittle this down as we port <newline> #include "chrome/browser/external_protocol_handler.h" <newline> #include "chrome/browser/safe_browsing/safe_browsing_service.h" <newline> #include "chrome/browser/spellchecker.h" <newline>-#include "chrome/browser/ssl/ssl_manager.h" <newline> #include "chrome/browser/task_manager.h" <newline> #include "chrome/browser/views/bookmark_bar_view.h" <newline> #include "chrome/browser/views/bookmark_manager_view.h" <newline>@@ -59,10 +59,10 @@ void RegisterAllPrefs(PrefService* user_prefs, PrefService* local_state) { <newline>   PasswordManager::RegisterUserPrefs(user_prefs); <newline>   chrome_browser_net::RegisterUserPrefs(user_prefs); <newline>   DownloadManager::RegisterUserPrefs(user_prefs); <newline>+  SSLManager::RegisterUserPrefs(user_prefs); <newline> #if defined(OS_WIN)  // TODO(port): whittle this down as we port <newline>   BookmarkBarView::RegisterUserPrefs(user_prefs); <newline>   BookmarkTableView::RegisterUserPrefs(user_prefs); <newline>-  SSLManager::RegisterUserPrefs(user_prefs); <newline> #endif <newline>   AutofillManager::RegisterUserPrefs(user_prefs); <newline>   TabContents::RegisterUserPrefs(user_prefs);
e56e08bbdb3870794680f4d7523fd41a912f5af	sky@google.com <sky@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 12 19:15:12 2009 +0000	Defers the test http/tests/security/canvas-remote-read-svg-image.html. This test passes in Chrome, but appears to fail in test shell because of a difference in how lighttpd is serving up the resource. TEST=none TBR=tc	none		http://codereview.chromium.org/21299	svn://svn.chromium.org/chrome/trunk/src@9684 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index f09796e..476a72d 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -34,6 +34,10 @@ DEFER : LayoutTests/http/tests/xmlhttprequest/methods-async.html = FAIL TIMEOUT <newline> // LightTPD doesn't accept unknown HTTP methods and passes CGIs a Content-Type <newline> // even when a request didn't send the header. <newline> DEFER : LayoutTests/http/tests/xmlhttprequest/methods.html = FAIL <newline>+// This passes when run in Chrome. It appears to be because of a difference <newline>+// in how lighttpd serves up the svn resource image (or the image <newline>+// contained in the svg image). <newline>+DEFER : LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline> // http://crbug.com/2975 : Need to support upload progress notifications in <newline> // the resource bridge. <newline> LayoutTests/http/tests/xmlhttprequest/upload-onload-event.html = FAIL CRASH <newline>@@ -705,7 +709,6 @@ LINUX WIN : LayoutTests/fast/css/shadow-multiple.html = FAIL <newline> // Problems with getImageData and toDataURL: http://crbug.com/2972 <newline> LINUX WIN : LayoutTests/fast/canvas/canvas-getImageData.html = FAIL <newline>-LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline> // We're much closer now. To fully pass this we need encoders for jpg <newline> // and gif, which is a low priority. <newline> DEFER LINUX WIN : LayoutTests/fast/canvas/toDataURL-supportedTypes.html = FAIL
ad53097583e754d912742e4b632928cd25cf2c9	sky@google.com <sky@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Feb 12 19:15:12 2009 +0000	Defers the test http/tests/security/canvas-remote-read-svg-image.html. This test passes in Chrome, but appears to fail in test shell because of a difference in how lighttpd is serving up the resource. TEST=none TBR=tc	none		http://codereview.chromium.org/21299	svn://svn.chromium.org/chrome/trunk/src@9684 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index f09796e..476a72d 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -34,6 +34,10 @@ DEFER : LayoutTests/http/tests/xmlhttprequest/methods-async.html = FAIL TIMEOUT <newline> // LightTPD doesn't accept unknown HTTP methods and passes CGIs a Content-Type <newline> // even when a request didn't send the header. <newline> DEFER : LayoutTests/http/tests/xmlhttprequest/methods.html = FAIL <newline>+// This passes when run in Chrome. It appears to be because of a difference <newline>+// in how lighttpd serves up the svn resource image (or the image <newline>+// contained in the svg image). <newline>+DEFER : LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline> // http://crbug.com/2975 : Need to support upload progress notifications in <newline> // the resource bridge. <newline> LayoutTests/http/tests/xmlhttprequest/upload-onload-event.html = FAIL CRASH <newline>@@ -705,7 +709,6 @@ LINUX WIN : LayoutTests/fast/css/shadow-multiple.html = FAIL <newline> // Problems with getImageData and toDataURL: http://crbug.com/2972 <newline> LINUX WIN : LayoutTests/fast/canvas/canvas-getImageData.html = FAIL <newline>-LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline> // We're much closer now. To fully pass this we need encoders for jpg <newline> // and gif, which is a low priority. <newline> DEFER LINUX WIN : LayoutTests/fast/canvas/toDataURL-supportedTypes.html = FAIL
3c6af6488e87af32d2f2dbdb5af4ae8b5d6a4c3	sverrir@chromium.org <sverrir@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 10 16:05:18 2009 +0000	Fix a crash where the security origin of the destination is not initialized.  Simply refusing access to prevent the crash.	7330			svn://svn.chromium.org/chrome/trunk/src@9479 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/port/bindings/v8/v8_proxy.cpp b/webkit/port/bindings/v8/v8_proxy.cpp <newline>index 81c6e63..0042d12 100644 <newline>--- a/webkit/port/bindings/v8/v8_proxy.cpp <newline>+++ b/webkit/port/bindings/v8/v8_proxy.cpp <newline>@@ -2172,6 +2172,12 @@ bool V8Proxy::CanAccessPrivate(DOMWindow* target_window) <newline>     const SecurityOrigin* active_security_origin = origin_window->securityOrigin(); <newline>     const SecurityOrigin* target_security_origin = target_window->securityOrigin(); <newline>+    // We have seen crashes were the security origin of the target has not been <newline>+    // initialized.  Defend against that. <newline>+    ASSERT(target_security_origin); <newline>+    if (!target_security_origin) <newline>+        return false; <newline>+ <newline>     String ui_resource_protocol = ChromiumBridge::uiResourceProtocol(); <newline>     if (active_security_origin->protocol() == ui_resource_protocol) { <newline>         KURL inspector_url = ChromiumBridge::inspectorURL();
fc00b4313bfe911b6b3ca7354e748315ca161c5	sverrir@chromium.org <sverrir@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 10 16:05:18 2009 +0000	Fix a crash where the security origin of the destination is not initialized.  Simply refusing access to prevent the crash.	7330			svn://svn.chromium.org/chrome/trunk/src@9479 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/port/bindings/v8/v8_proxy.cpp b/webkit/port/bindings/v8/v8_proxy.cpp <newline>index 81c6e63..0042d12 100644 <newline>--- a/webkit/port/bindings/v8/v8_proxy.cpp <newline>+++ b/webkit/port/bindings/v8/v8_proxy.cpp <newline>@@ -2172,6 +2172,12 @@ bool V8Proxy::CanAccessPrivate(DOMWindow* target_window) <newline>     const SecurityOrigin* active_security_origin = origin_window->securityOrigin(); <newline>     const SecurityOrigin* target_security_origin = target_window->securityOrigin(); <newline>+    // We have seen crashes were the security origin of the target has not been <newline>+    // initialized.  Defend against that. <newline>+    ASSERT(target_security_origin); <newline>+    if (!target_security_origin) <newline>+        return false; <newline>+ <newline>     String ui_resource_protocol = ChromiumBridge::uiResourceProtocol(); <newline>     if (active_security_origin->protocol() == ui_resource_protocol) { <newline>         KURL inspector_url = ChromiumBridge::inspectorURL();
36043802a116aeac2f1f1ae1ac905f8b7846375	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 6 20:59:15 2009 +0000	Add a command line option --disable-web-security.  People can use this option when the same-origin policy interferes with testing their web sites. R=deanm	6449		http://codereview.chromium.org/20101	svn://svn.chromium.org/chrome/trunk/src@9337 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/webview_impl.cc b/webkit/glue/webview_impl.cc <newline>index 024d689..c1a175d 100644 <newline>--- a/webkit/glue/webview_impl.cc <newline>+++ b/webkit/glue/webview_impl.cc <newline>@@ -1266,6 +1266,7 @@ void WebViewImpl::SetPreferences(const WebPreferences& preferences) { <newline>   settings->setDefaultTextEncodingName(webkit_glue::StdWStringToString( <newline>     preferences.default_encoding)); <newline>   settings->setJavaScriptEnabled(preferences.javascript_enabled); <newline>+  settings->setWebSecurityEnabled(preferences.web_security_enabled); <newline>   settings->setJavaScriptCanOpenWindowsAutomatically( <newline>     preferences.javascript_can_open_windows_automatically); <newline>   settings->setLoadsImagesAutomatically(
8adf848df7ad7a724be0526e25196ba6adee0e9	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Feb 6 20:59:15 2009 +0000	Add a command line option --disable-web-security.  People can use this option when the same-origin policy interferes with testing their web sites. R=deanm	6449		http://codereview.chromium.org/20101	svn://svn.chromium.org/chrome/trunk/src@9337 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/glue/webview_impl.cc b/webkit/glue/webview_impl.cc <newline>index 024d689..c1a175d 100644 <newline>--- a/webkit/glue/webview_impl.cc <newline>+++ b/webkit/glue/webview_impl.cc <newline>@@ -1266,6 +1266,7 @@ void WebViewImpl::SetPreferences(const WebPreferences& preferences) { <newline>   settings->setDefaultTextEncodingName(webkit_glue::StdWStringToString( <newline>     preferences.default_encoding)); <newline>   settings->setJavaScriptEnabled(preferences.javascript_enabled); <newline>+  settings->setWebSecurityEnabled(preferences.web_security_enabled); <newline>   settings->setJavaScriptCanOpenWindowsAutomatically( <newline>     preferences.javascript_can_open_windows_automatically); <newline>   settings->setLoadsImagesAutomatically(
00fcdc3bf4a03d0562588d2da37909b7bf06338	pinkerton@chromium.org <pinkerton@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 4 00:59:11 2009 +0000	Add site_instance, navigation_entry, browsing_instance, renderer_security_policy, and render_widget_helper to mac and linux builds. Adds a hash for Profile so it can be put into a hash table on gcc.			http://codereview.chromium.org/21021	svn://svn.chromium.org/chrome/trunk/src@9115 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/temp_scaffolding_stubs.h b/chrome/common/temp_scaffolding_stubs.h <newline>index ad80ba8..f3a57e4 100644 <newline>--- a/chrome/common/temp_scaffolding_stubs.h <newline>+++ b/chrome/common/temp_scaffolding_stubs.h <newline>@@ -21,6 +21,7 @@ <newline> #include "chrome/browser/browser_process.h" <newline> #include "chrome/browser/cache_manager_host.h" <newline> #include "chrome/browser/search_engines/template_url.h" <newline>+#include "chrome/browser/tab_contents/navigation_entry.h" <newline> #include "chrome/browser/tab_contents/tab_contents_type.h" <newline> #include "chrome/common/navigation_types.h" <newline> #include "chrome/common/notification_service.h" <newline>@@ -42,9 +43,11 @@ class ModalHtmlDialogDelegate; <newline> class NavigationController; <newline> class NavigationEntry; <newline> class NotificationService; <newline>+class PluginService; <newline> class ProfileManager; <newline> class Profile; <newline> class RenderProcessHost; <newline>+class RenderWidgetHelper; <newline> class SessionID; <newline> class SiteInstance; <newline> class SpellChecker; <newline>@@ -293,30 +296,26 @@ struct ViewHostMsg_Resource_Request; <newline> class ResourceDispatcherHost { <newline>  public: <newline>   explicit ResourceDispatcherHost(MessageLoop* loop) {} <newline>- <newline>   class Receiver { <newline>    public: <newline>     virtual bool Send(IPC::Message* message) = 0; <newline>   }; <newline>- <newline>+  void OnClosePageACK(int, int); <newline>+  void CancelRequestsForRenderView(int, int); <newline>   void Initialize() { NOTIMPLEMENTED(); } <newline>   void Shutdown() { NOTIMPLEMENTED(); } <newline>- <newline>   SafeBrowsingService* safe_browsing_service() { <newline>     NOTIMPLEMENTED(); <newline>     return const_cast<SafeBrowsingService*>(&safe_browsing_service_); <newline>   } <newline>- <newline>   DownloadFileManager* download_file_manager() { <newline>     NOTIMPLEMENTED(); <newline>     return const_cast<DownloadFileManager*>(&download_file_manager_); <newline>   } <newline>- <newline>   SaveFileManager* save_file_manager() { <newline>     NOTIMPLEMENTED(); <newline>     return const_cast<SaveFileManager*>(&save_file_manager_); <newline>   } <newline>- <newline>  private: <newline>   SafeBrowsingService safe_browsing_service_; <newline>   DownloadFileManager download_file_manager_; <newline>@@ -400,30 +399,6 @@ class FaviconStatus { <newline>   GURL url_; <newline> }; <newline>-class NavigationEntry { <newline>- public: <newline>-  const GURL& url() const { return url_; } <newline>-  PageTransition::Type transition_type() const { <newline>-    return PageTransition::LINK; <newline>-  } <newline>-  int page_id() { return 0; } <newline>-  SiteInstance* site_instance() const { return NULL; } <newline>-  std::string content_state() const { return ""; } <newline>-  void set_content_state(const std::string&) { } <newline>-  void set_display_url(const GURL&) { } <newline>-  bool has_display_url() const { return false; } <newline>-  const GURL& display_url() const { return url_; } <newline>-  void set_url(const GURL& url) { url_ = url; } <newline>-  TabContentsType tab_type() const { return TAB_CONTENTS_WEB; } <newline>-  const GURL& user_typed_url() const { return url_; } <newline>-  const FaviconStatus& favicon() const { return favicon_status_; } <newline>-  std::wstring title() { return L""; } <newline>-  void set_title(const std::wstring&) { } <newline>- private: <newline>-  GURL url_; <newline>-  FaviconStatus favicon_status_; <newline>-}; <newline>- <newline> class NavigationController { <newline>  public: <newline>   struct LoadCommittedDetails { <newline>@@ -437,7 +412,7 @@ class NavigationController { <newline>     std::string serialized_security_info; <newline>     bool is_user_initiated_main_frame_load() const { return true; } <newline>   }; <newline>-  NavigationController() : entry_(new NavigationEntry()) { } <newline>+  NavigationController() : entry_(new NavigationEntry(TAB_CONTENTS_WEB)) { } <newline>   virtual ~NavigationController() { } <newline>   bool CanGoBack() const { <newline>     NOTIMPLEMENTED(); <newline>@@ -774,20 +749,6 @@ class SelectFileDialog : public base::RefCountedThreadSafe<SelectFileDialog> { <newline>   } <newline> }; <newline>-class SiteInstance { <newline>- public: <newline>-  bool has_site() { <newline>-    NOTIMPLEMENTED(); <newline>-    return false; <newline>-  } <newline>-  void SetSite(const GURL&) { NOTIMPLEMENTED(); } <newline>-  int max_page_id() { <newline>-    NOTIMPLEMENTED(); <newline>-    return 0; <newline>-  } <newline>-  void UpdateMaxPageID(int) { NOTIMPLEMENTED(); } <newline>-}; <newline>- <newline> class DockInfo { <newline>  public: <newline>   bool GetNewWindowBounds(gfx::Rect*, bool*) const {
13b4acdd4699cd35d85dc742dc5719ed7755fc2	pinkerton@chromium.org <pinkerton@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Feb 4 00:59:11 2009 +0000	Add site_instance, navigation_entry, browsing_instance, renderer_security_policy, and render_widget_helper to mac and linux builds. Adds a hash for Profile so it can be put into a hash table on gcc.			http://codereview.chromium.org/21021	svn://svn.chromium.org/chrome/trunk/src@9115 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/common/temp_scaffolding_stubs.h b/chrome/common/temp_scaffolding_stubs.h <newline>index ad80ba8..f3a57e4 100644 <newline>--- a/chrome/common/temp_scaffolding_stubs.h <newline>+++ b/chrome/common/temp_scaffolding_stubs.h <newline>@@ -21,6 +21,7 @@ <newline> #include "chrome/browser/browser_process.h" <newline> #include "chrome/browser/cache_manager_host.h" <newline> #include "chrome/browser/search_engines/template_url.h" <newline>+#include "chrome/browser/tab_contents/navigation_entry.h" <newline> #include "chrome/browser/tab_contents/tab_contents_type.h" <newline> #include "chrome/common/navigation_types.h" <newline> #include "chrome/common/notification_service.h" <newline>@@ -42,9 +43,11 @@ class ModalHtmlDialogDelegate; <newline> class NavigationController; <newline> class NavigationEntry; <newline> class NotificationService; <newline>+class PluginService; <newline> class ProfileManager; <newline> class Profile; <newline> class RenderProcessHost; <newline>+class RenderWidgetHelper; <newline> class SessionID; <newline> class SiteInstance; <newline> class SpellChecker; <newline>@@ -293,30 +296,26 @@ struct ViewHostMsg_Resource_Request; <newline> class ResourceDispatcherHost { <newline>  public: <newline>   explicit ResourceDispatcherHost(MessageLoop* loop) {} <newline>- <newline>   class Receiver { <newline>    public: <newline>     virtual bool Send(IPC::Message* message) = 0; <newline>   }; <newline>- <newline>+  void OnClosePageACK(int, int); <newline>+  void CancelRequestsForRenderView(int, int); <newline>   void Initialize() { NOTIMPLEMENTED(); } <newline>   void Shutdown() { NOTIMPLEMENTED(); } <newline>- <newline>   SafeBrowsingService* safe_browsing_service() { <newline>     NOTIMPLEMENTED(); <newline>     return const_cast<SafeBrowsingService*>(&safe_browsing_service_); <newline>   } <newline>- <newline>   DownloadFileManager* download_file_manager() { <newline>     NOTIMPLEMENTED(); <newline>     return const_cast<DownloadFileManager*>(&download_file_manager_); <newline>   } <newline>- <newline>   SaveFileManager* save_file_manager() { <newline>     NOTIMPLEMENTED(); <newline>     return const_cast<SaveFileManager*>(&save_file_manager_); <newline>   } <newline>- <newline>  private: <newline>   SafeBrowsingService safe_browsing_service_; <newline>   DownloadFileManager download_file_manager_; <newline>@@ -400,30 +399,6 @@ class FaviconStatus { <newline>   GURL url_; <newline> }; <newline>-class NavigationEntry { <newline>- public: <newline>-  const GURL& url() const { return url_; } <newline>-  PageTransition::Type transition_type() const { <newline>-    return PageTransition::LINK; <newline>-  } <newline>-  int page_id() { return 0; } <newline>-  SiteInstance* site_instance() const { return NULL; } <newline>-  std::string content_state() const { return ""; } <newline>-  void set_content_state(const std::string&) { } <newline>-  void set_display_url(const GURL&) { } <newline>-  bool has_display_url() const { return false; } <newline>-  const GURL& display_url() const { return url_; } <newline>-  void set_url(const GURL& url) { url_ = url; } <newline>-  TabContentsType tab_type() const { return TAB_CONTENTS_WEB; } <newline>-  const GURL& user_typed_url() const { return url_; } <newline>-  const FaviconStatus& favicon() const { return favicon_status_; } <newline>-  std::wstring title() { return L""; } <newline>-  void set_title(const std::wstring&) { } <newline>- private: <newline>-  GURL url_; <newline>-  FaviconStatus favicon_status_; <newline>-}; <newline>- <newline> class NavigationController { <newline>  public: <newline>   struct LoadCommittedDetails { <newline>@@ -437,7 +412,7 @@ class NavigationController { <newline>     std::string serialized_security_info; <newline>     bool is_user_initiated_main_frame_load() const { return true; } <newline>   }; <newline>-  NavigationController() : entry_(new NavigationEntry()) { } <newline>+  NavigationController() : entry_(new NavigationEntry(TAB_CONTENTS_WEB)) { } <newline>   virtual ~NavigationController() { } <newline>   bool CanGoBack() const { <newline>     NOTIMPLEMENTED(); <newline>@@ -774,20 +749,6 @@ class SelectFileDialog : public base::RefCountedThreadSafe<SelectFileDialog> { <newline>   } <newline> }; <newline>-class SiteInstance { <newline>- public: <newline>-  bool has_site() { <newline>-    NOTIMPLEMENTED(); <newline>-    return false; <newline>-  } <newline>-  void SetSite(const GURL&) { NOTIMPLEMENTED(); } <newline>-  int max_page_id() { <newline>-    NOTIMPLEMENTED(); <newline>-    return 0; <newline>-  } <newline>-  void UpdateMaxPageID(int) { NOTIMPLEMENTED(); } <newline>-}; <newline>- <newline> class DockInfo { <newline>  public: <newline>   bool GetNewWindowBounds(gfx::Rect*, bool*) const {
3e209b08ce94c41884e6414d74010fd825167cd	ericroman@google.com <ericroman@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 3 09:42:07 2009 +0000	WebKitMerge 40409:40464 (chromium-side). * The death of FrameLoaderClient.cpp correspond with <http://trac.webkit.org/changeset/40435> * The custom V8 binding for V8HTMLFormElement::submit() corresponds with <http://trac.webkit.org/changeset/40424> * Changes to FrameLoader::loadFrameRequestWithFormAndValues() and FrameLoadTypeRedirectWithLockedHistory correspond with <http://trac.webkit.org/changeset/40432> * No action was taken for the disable-web-security change <http://trac.webkit.org/changeset/40449>, defaults to enabled. * Frame::isFrameSet() moving to Document::isFrameSet corresponds with <http://trac.webkit.org/changeset/40443> * Frame::sendResizeEvent() moved to EventHandler::sendResizeEvent() <http://trac.webkit.org/changeset/40444> * Not sure which webkit change added RenderObjectChildList.cpp. ======================= Rebaselined the following layout tests to reflect upstream changes: ======================= * LayoutTests/fast/table/form-with-table-style.html http://trac.webkit.org/browser/trunk/LayoutTests/platform/mac/fast/table/form-with-table-style-expected.png?rev=40457 * LayoutTests/fast/table/insert-row-before-form.html http://trac.webkit.org/changeset/40456/trunk/LayoutTests/platform/mac/fast/table/insert-row-before-form-expected.txt?old=30635&old_path=trunk/LayoutTests/platform/mac/fast/table/insert-row-before-form-expected.txt * LayoutTests/tables/mozilla/bugs/bug4527.html http://trac.webkit.org/changeset/40458/trunk/LayoutTests/platform/mac/tables/mozilla/bugs/bug4527-expected.txt?old=30635&old_path=trunk/LayoutTests/platform/mac/tables/mozilla/bugs/bug4527-expected.txt * LayoutTests/tables/mozilla/bugs/bug96343.html http://trac.webkit.org/changeset/40458/trunk/LayoutTests/platform/mac/tables/mozilla/bugs/bug96343-expected.txt?old=30635&old_path=trunk/LayoutTests/platform/mac/tables/mozilla/bugs/bug96343-expected.txt * LayoutTests/tables/mozilla_expected_failures/bugs/bug1725.html http://trac.webkit.org/changeset/40459/trunk/LayoutTests/platform/mac/tables/mozilla_expected_failures/bugs/bug1725-expected.txt?old=30635&old_path=trunk/LayoutTests/platform/mac/tables/mozilla_expected_failures/bugs/bug1725-expected.txt * LayoutTests/tables/mozilla_expected_failures/other/test4.html http://trac.webkit.org/changeset/40460/trunk/LayoutTests/platform/mac/tables/mozilla_expected_failures/other/test4-expected.txt?old=34683&old_path=trunk/LayoutTests/platform/mac/tables/mozilla_expected_failures/other/test4-expected.txt * LayoutTests/editing/deleting/deletionUI-single-instance-actual.png http://trac.webkit.org/changeset/40454/trunk/LayoutTests/platform/mac/editing/deleting/deletionUI-single-instance-expected.txt?old=32226&old_path=trunk/LayoutTests/platform/mac/editing/deleting/deletionUI-single-instance-expected.txt			http://codereview.chromium.org/21007	svn://svn.chromium.org/chrome/trunk/src@9077 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/webkit.xcodeproj/project.pbxproj b/webkit/webkit.xcodeproj/project.pbxproj <newline>index 7aa7945..2006da5 100644 <newline>--- a/webkit/webkit.xcodeproj/project.pbxproj <newline>+++ b/webkit/webkit.xcodeproj/project.pbxproj <newline>@@ -316,7 +316,6 @@ <newline> 		938444E40F16B0570075F4C5 /* FrameChromium.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 41A3624D0F003B3000778012 /* FrameChromium.cpp */; }; <newline> 		938444E50F16B0570075F4C5 /* FramelessScrollView.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 93AF52740F002F680073C62D /* FramelessScrollView.cpp */; }; <newline> 		938444E60F16B0570075F4C5 /* FrameLoader.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7B5E8DAC0D7F3C01001ECF42 /* FrameLoader.cpp */; }; <newline>-		938444E70F16B0570075F4C5 /* FrameLoaderClient.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 416F45210ED7697D008215B6 /* FrameLoaderClient.cpp */; }; <newline> 		938444E80F16B0570075F4C5 /* FrameTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7B5E8E590D7F3C48001ECF42 /* FrameTree.cpp */; }; <newline> 		938444E90F16B0570075F4C5 /* FrameView.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7B5E8E5B0D7F3C48001ECF42 /* FrameView.cpp */; }; <newline> 		938444EA0F16B0570075F4C5 /* FTPDirectoryDocument.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7B5E8DB10D7F3C01001ECF42 /* FTPDirectoryDocument.cpp */; }; <newline>@@ -1298,6 +1297,7 @@ <newline> 		B58DCCEF0F27DF1400BF697A /* OptionElement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = B58DCCED0F27DF1400BF697A /* OptionElement.cpp */; }; <newline> 		B590A4E60F27DDAC0058FA26 /* FormControlElement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = B590A4E50F27DDAC0058FA26 /* FormControlElement.cpp */; }; <newline> 		B5B0D6890EC91D3D00EA3314 /* autofill_form.cc in Sources */ = {isa = PBXBuildFile; fileRef = B5B0D6880EC91D3D00EA3314 /* autofill_form.cc */; }; <newline>+		D16FD80FC5230DA712974DAF /* RenderObjectChildList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 619BC9B49D39DC88F3826A9B /* RenderObjectChildList.cpp */; }; <newline> 		E40054A70E9BC4C20055B38E /* RefCountedLeakCounter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E40054A60E9BC4C20055B38E /* RefCountedLeakCounter.cpp */; }; <newline> 		E40054B10E9BCC5C0055B38E /* CollatorICU.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E40054B00E9BCC5C0055B38E /* CollatorICU.cpp */; }; <newline> 		E40060DB0EA69E0B0055B38E /* ScriptController.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E40060DA0EA69E0B0055B38E /* ScriptController.cpp */; }; <newline>@@ -1520,7 +1520,6 @@ <newline> 		410303A10EFB0F8D008832CA /* CachedPage.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = CachedPage.h; sourceTree = "<group>"; }; <newline> 		4112E7040EFB0A26001E0E7A /* RandomNumber.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = RandomNumber.h; sourceTree = "<group>"; }; <newline> 		4112E7050EFB0A26001E0E7A /* RandomNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RandomNumber.cpp; sourceTree = "<group>"; }; <newline>-		416F45210ED7697D008215B6 /* FrameLoaderClient.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FrameLoaderClient.cpp; sourceTree = "<group>"; }; <newline> 		41807C550F268375007BB4CC /* ByteArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ByteArray.cpp; sourceTree = "<group>"; }; <newline> 		41807C560F268375007BB4CC /* ByteArray.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ByteArray.h; sourceTree = "<group>"; }; <newline> 		418E48770F166D9A00CF92F9 /* ColorChromium.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = ColorChromium.cpp; path = chromium/ColorChromium.cpp; sourceTree = "<group>"; }; <newline>@@ -1864,6 +1863,7 @@ <newline> 		53AAC3820F291F6300233688 /* ThreadableLoaderClient.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ThreadableLoaderClient.h; sourceTree = "<group>"; }; <newline> 		53AAC3930F291FCF00233688 /* HTTPHeaderMap.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = HTTPHeaderMap.cpp; sourceTree = "<group>"; }; <newline> 		53E8BE8D0EC36F4B00B3F8B0 /* autocomplete_input_listener.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = autocomplete_input_listener.h; sourceTree = "<group>"; }; <newline>+		619BC9B49D39DC88F3826A9B /* RenderObjectChildList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RenderObjectChildList.cpp; sourceTree = "<group>"; }; <newline> 		688FFA9B9CEFE9B1B66F8671 /* V8WebKitCSSMatrix.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = V8WebKitCSSMatrix.cpp; sourceTree = "<group>"; }; <newline> 		6A9898388068C93C5A7C011C /* ThreadTimers.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ThreadTimers.cpp; sourceTree = "<group>"; }; <newline> 		715E874BCC05E0A3DD5E5D8F /* GCController.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = GCController.cpp; path = port/bindings/v8/extensions/GCController.cpp; sourceTree = SOURCE_ROOT; }; <newline>@@ -5540,7 +5540,6 @@ <newline> 				7B5E8DAB0D7F3C01001ECF42 /* FormState.h */, <newline> 				7B5E8DAC0D7F3C01001ECF42 /* FrameLoader.cpp */, <newline> 				7B5E8DAD0D7F3C01001ECF42 /* FrameLoader.h */, <newline>-				416F45210ED7697D008215B6 /* FrameLoaderClient.cpp */, <newline> 				7B5E8DAF0D7F3C01001ECF42 /* FrameLoaderClient.h */, <newline> 				7B5E8DB00D7F3C01001ECF42 /* FrameLoaderTypes.h */, <newline> 				7B5E8DB10D7F3C01001ECF42 /* FTPDirectoryDocument.cpp */, <newline>@@ -6231,6 +6230,7 @@ <newline> 				7B5E95680D7F3E95001ECF42 /* RenderMenuList.h */, <newline> 				B5C1809A0E958D81006EAF87 /* RenderObject.h */, <newline> 				B5C1809B0E958D81006EAF87 /* RenderObject.cpp */, <newline>+				619BC9B49D39DC88F3826A9B /* RenderObjectChildList.cpp */, <newline> 				4C04BF9CDE7B0B591087B440 /* RenderObjectChildList.h */, <newline> 				7B5E956B0D7F3E95001ECF42 /* RenderPart.cpp */, <newline> 				B5C1809D0E958D96006EAF87 /* RenderPart.h */, <newline>@@ -8773,7 +8773,6 @@ <newline> 				938444E40F16B0570075F4C5 /* FrameChromium.cpp in Sources */, <newline> 				938444E50F16B0570075F4C5 /* FramelessScrollView.cpp in Sources */, <newline> 				938444E60F16B0570075F4C5 /* FrameLoader.cpp in Sources */, <newline>-				938444E70F16B0570075F4C5 /* FrameLoaderClient.cpp in Sources */, <newline> 				938444E80F16B0570075F4C5 /* FrameTree.cpp in Sources */, <newline> 				938444E90F16B0570075F4C5 /* FrameView.cpp in Sources */, <newline> 				938444EA0F16B0570075F4C5 /* FTPDirectoryDocument.cpp in Sources */, <newline>@@ -9036,6 +9035,7 @@ <newline> 				938445E90F16B0570075F4C5 /* RenderMedia.cpp in Sources */, <newline> 				938445EA0F16B0570075F4C5 /* RenderMenuList.cpp in Sources */, <newline> 				938445EB0F16B0570075F4C5 /* RenderObject.cpp in Sources */, <newline>+				D16FD80FC5230DA712974DAF /* RenderObjectChildList.cpp in Sources */, <newline> 				938445EC0F16B0570075F4C5 /* RenderPart.cpp in Sources */, <newline> 				938445ED0F16B0570075F4C5 /* RenderPartObject.cpp in Sources */, <newline> 				938445EE0F16B0570075F4C5 /* RenderPath.cpp in Sources */,
8af7742f9669c056510df377c899bd8fd860834	ericroman@google.com <ericroman@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Feb 3 09:42:07 2009 +0000	WebKitMerge 40409:40464 (chromium-side). * The death of FrameLoaderClient.cpp correspond with <http://trac.webkit.org/changeset/40435> * The custom V8 binding for V8HTMLFormElement::submit() corresponds with <http://trac.webkit.org/changeset/40424> * Changes to FrameLoader::loadFrameRequestWithFormAndValues() and FrameLoadTypeRedirectWithLockedHistory correspond with <http://trac.webkit.org/changeset/40432> * No action was taken for the disable-web-security change <http://trac.webkit.org/changeset/40449>, defaults to enabled. * Frame::isFrameSet() moving to Document::isFrameSet corresponds with <http://trac.webkit.org/changeset/40443> * Frame::sendResizeEvent() moved to EventHandler::sendResizeEvent() <http://trac.webkit.org/changeset/40444> * Not sure which webkit change added RenderObjectChildList.cpp. ======================= Rebaselined the following layout tests to reflect upstream changes: ======================= * LayoutTests/fast/table/form-with-table-style.html http://trac.webkit.org/browser/trunk/LayoutTests/platform/mac/fast/table/form-with-table-style-expected.png?rev=40457 * LayoutTests/fast/table/insert-row-before-form.html http://trac.webkit.org/changeset/40456/trunk/LayoutTests/platform/mac/fast/table/insert-row-before-form-expected.txt?old=30635&old_path=trunk/LayoutTests/platform/mac/fast/table/insert-row-before-form-expected.txt * LayoutTests/tables/mozilla/bugs/bug4527.html http://trac.webkit.org/changeset/40458/trunk/LayoutTests/platform/mac/tables/mozilla/bugs/bug4527-expected.txt?old=30635&old_path=trunk/LayoutTests/platform/mac/tables/mozilla/bugs/bug4527-expected.txt * LayoutTests/tables/mozilla/bugs/bug96343.html http://trac.webkit.org/changeset/40458/trunk/LayoutTests/platform/mac/tables/mozilla/bugs/bug96343-expected.txt?old=30635&old_path=trunk/LayoutTests/platform/mac/tables/mozilla/bugs/bug96343-expected.txt * LayoutTests/tables/mozilla_expected_failures/bugs/bug1725.html http://trac.webkit.org/changeset/40459/trunk/LayoutTests/platform/mac/tables/mozilla_expected_failures/bugs/bug1725-expected.txt?old=30635&old_path=trunk/LayoutTests/platform/mac/tables/mozilla_expected_failures/bugs/bug1725-expected.txt * LayoutTests/tables/mozilla_expected_failures/other/test4.html http://trac.webkit.org/changeset/40460/trunk/LayoutTests/platform/mac/tables/mozilla_expected_failures/other/test4-expected.txt?old=34683&old_path=trunk/LayoutTests/platform/mac/tables/mozilla_expected_failures/other/test4-expected.txt * LayoutTests/editing/deleting/deletionUI-single-instance-actual.png http://trac.webkit.org/changeset/40454/trunk/LayoutTests/platform/mac/editing/deleting/deletionUI-single-instance-expected.txt?old=32226&old_path=trunk/LayoutTests/platform/mac/editing/deleting/deletionUI-single-instance-expected.txt			http://codereview.chromium.org/21007	svn://svn.chromium.org/chrome/trunk/src@9077 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/webkit.xcodeproj/project.pbxproj b/webkit/webkit.xcodeproj/project.pbxproj <newline>index 7aa7945..2006da5 100644 <newline>--- a/webkit/webkit.xcodeproj/project.pbxproj <newline>+++ b/webkit/webkit.xcodeproj/project.pbxproj <newline>@@ -316,7 +316,6 @@ <newline> 		938444E40F16B0570075F4C5 /* FrameChromium.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 41A3624D0F003B3000778012 /* FrameChromium.cpp */; }; <newline> 		938444E50F16B0570075F4C5 /* FramelessScrollView.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 93AF52740F002F680073C62D /* FramelessScrollView.cpp */; }; <newline> 		938444E60F16B0570075F4C5 /* FrameLoader.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7B5E8DAC0D7F3C01001ECF42 /* FrameLoader.cpp */; }; <newline>-		938444E70F16B0570075F4C5 /* FrameLoaderClient.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 416F45210ED7697D008215B6 /* FrameLoaderClient.cpp */; }; <newline> 		938444E80F16B0570075F4C5 /* FrameTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7B5E8E590D7F3C48001ECF42 /* FrameTree.cpp */; }; <newline> 		938444E90F16B0570075F4C5 /* FrameView.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7B5E8E5B0D7F3C48001ECF42 /* FrameView.cpp */; }; <newline> 		938444EA0F16B0570075F4C5 /* FTPDirectoryDocument.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7B5E8DB10D7F3C01001ECF42 /* FTPDirectoryDocument.cpp */; }; <newline>@@ -1298,6 +1297,7 @@ <newline> 		B58DCCEF0F27DF1400BF697A /* OptionElement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = B58DCCED0F27DF1400BF697A /* OptionElement.cpp */; }; <newline> 		B590A4E60F27DDAC0058FA26 /* FormControlElement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = B590A4E50F27DDAC0058FA26 /* FormControlElement.cpp */; }; <newline> 		B5B0D6890EC91D3D00EA3314 /* autofill_form.cc in Sources */ = {isa = PBXBuildFile; fileRef = B5B0D6880EC91D3D00EA3314 /* autofill_form.cc */; }; <newline>+		D16FD80FC5230DA712974DAF /* RenderObjectChildList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 619BC9B49D39DC88F3826A9B /* RenderObjectChildList.cpp */; }; <newline> 		E40054A70E9BC4C20055B38E /* RefCountedLeakCounter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E40054A60E9BC4C20055B38E /* RefCountedLeakCounter.cpp */; }; <newline> 		E40054B10E9BCC5C0055B38E /* CollatorICU.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E40054B00E9BCC5C0055B38E /* CollatorICU.cpp */; }; <newline> 		E40060DB0EA69E0B0055B38E /* ScriptController.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E40060DA0EA69E0B0055B38E /* ScriptController.cpp */; }; <newline>@@ -1520,7 +1520,6 @@ <newline> 		410303A10EFB0F8D008832CA /* CachedPage.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = CachedPage.h; sourceTree = "<group>"; }; <newline> 		4112E7040EFB0A26001E0E7A /* RandomNumber.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = RandomNumber.h; sourceTree = "<group>"; }; <newline> 		4112E7050EFB0A26001E0E7A /* RandomNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RandomNumber.cpp; sourceTree = "<group>"; }; <newline>-		416F45210ED7697D008215B6 /* FrameLoaderClient.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FrameLoaderClient.cpp; sourceTree = "<group>"; }; <newline> 		41807C550F268375007BB4CC /* ByteArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ByteArray.cpp; sourceTree = "<group>"; }; <newline> 		41807C560F268375007BB4CC /* ByteArray.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ByteArray.h; sourceTree = "<group>"; }; <newline> 		418E48770F166D9A00CF92F9 /* ColorChromium.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = ColorChromium.cpp; path = chromium/ColorChromium.cpp; sourceTree = "<group>"; }; <newline>@@ -1864,6 +1863,7 @@ <newline> 		53AAC3820F291F6300233688 /* ThreadableLoaderClient.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ThreadableLoaderClient.h; sourceTree = "<group>"; }; <newline> 		53AAC3930F291FCF00233688 /* HTTPHeaderMap.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = HTTPHeaderMap.cpp; sourceTree = "<group>"; }; <newline> 		53E8BE8D0EC36F4B00B3F8B0 /* autocomplete_input_listener.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = autocomplete_input_listener.h; sourceTree = "<group>"; }; <newline>+		619BC9B49D39DC88F3826A9B /* RenderObjectChildList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RenderObjectChildList.cpp; sourceTree = "<group>"; }; <newline> 		688FFA9B9CEFE9B1B66F8671 /* V8WebKitCSSMatrix.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = V8WebKitCSSMatrix.cpp; sourceTree = "<group>"; }; <newline> 		6A9898388068C93C5A7C011C /* ThreadTimers.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ThreadTimers.cpp; sourceTree = "<group>"; }; <newline> 		715E874BCC05E0A3DD5E5D8F /* GCController.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = GCController.cpp; path = port/bindings/v8/extensions/GCController.cpp; sourceTree = SOURCE_ROOT; }; <newline>@@ -5540,7 +5540,6 @@ <newline> 				7B5E8DAB0D7F3C01001ECF42 /* FormState.h */, <newline> 				7B5E8DAC0D7F3C01001ECF42 /* FrameLoader.cpp */, <newline> 				7B5E8DAD0D7F3C01001ECF42 /* FrameLoader.h */, <newline>-				416F45210ED7697D008215B6 /* FrameLoaderClient.cpp */, <newline> 				7B5E8DAF0D7F3C01001ECF42 /* FrameLoaderClient.h */, <newline> 				7B5E8DB00D7F3C01001ECF42 /* FrameLoaderTypes.h */, <newline> 				7B5E8DB10D7F3C01001ECF42 /* FTPDirectoryDocument.cpp */, <newline>@@ -6231,6 +6230,7 @@ <newline> 				7B5E95680D7F3E95001ECF42 /* RenderMenuList.h */, <newline> 				B5C1809A0E958D81006EAF87 /* RenderObject.h */, <newline> 				B5C1809B0E958D81006EAF87 /* RenderObject.cpp */, <newline>+				619BC9B49D39DC88F3826A9B /* RenderObjectChildList.cpp */, <newline> 				4C04BF9CDE7B0B591087B440 /* RenderObjectChildList.h */, <newline> 				7B5E956B0D7F3E95001ECF42 /* RenderPart.cpp */, <newline> 				B5C1809D0E958D96006EAF87 /* RenderPart.h */, <newline>@@ -8773,7 +8773,6 @@ <newline> 				938444E40F16B0570075F4C5 /* FrameChromium.cpp in Sources */, <newline> 				938444E50F16B0570075F4C5 /* FramelessScrollView.cpp in Sources */, <newline> 				938444E60F16B0570075F4C5 /* FrameLoader.cpp in Sources */, <newline>-				938444E70F16B0570075F4C5 /* FrameLoaderClient.cpp in Sources */, <newline> 				938444E80F16B0570075F4C5 /* FrameTree.cpp in Sources */, <newline> 				938444E90F16B0570075F4C5 /* FrameView.cpp in Sources */, <newline> 				938444EA0F16B0570075F4C5 /* FTPDirectoryDocument.cpp in Sources */, <newline>@@ -9036,6 +9035,7 @@ <newline> 				938445E90F16B0570075F4C5 /* RenderMedia.cpp in Sources */, <newline> 				938445EA0F16B0570075F4C5 /* RenderMenuList.cpp in Sources */, <newline> 				938445EB0F16B0570075F4C5 /* RenderObject.cpp in Sources */, <newline>+				D16FD80FC5230DA712974DAF /* RenderObjectChildList.cpp in Sources */, <newline> 				938445EC0F16B0570075F4C5 /* RenderPart.cpp in Sources */, <newline> 				938445ED0F16B0570075F4C5 /* RenderPartObject.cpp in Sources */, <newline> 				938445EE0F16B0570075F4C5 /* RenderPath.cpp in Sources */,
02a0df4e9b502a3cfa7f54a20b4b981db1bbfc3	brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jan 23 18:38:13 2009 +0000	Move security style into the tab_contents directory. This is the last part of the "Tab Contents (old)" group!			http://codereview.chromium.org/18686	svn://svn.chromium.org/chrome/trunk/src@8564 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/automation/tab_proxy.h b/chrome/test/automation/tab_proxy.h <newline>index 64e04de..508de11 100644 <newline>--- a/chrome/test/automation/tab_proxy.h <newline>+++ b/chrome/test/automation/tab_proxy.h <newline>@@ -10,8 +10,8 @@ <newline> #include <vector> <newline> #include "chrome/browser/download/save_package.h" <newline>-#include "chrome/browser/security_style.h" <newline> #include "chrome/browser/tab_contents/navigation_entry.h" <newline>+#include "chrome/browser/tab_contents/security_style.h" <newline> #include "chrome/test/automation/automation_handle_tracker.h" <newline> class ConstrainedWindowProxy;
143697300f15a47688bce3d39fdb7323f081717	brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jan 23 18:38:13 2009 +0000	Move security style into the tab_contents directory. This is the last part of the "Tab Contents (old)" group!			http://codereview.chromium.org/18686	svn://svn.chromium.org/chrome/trunk/src@8564 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/automation/tab_proxy.h b/chrome/test/automation/tab_proxy.h <newline>index 64e04de..508de11 100644 <newline>--- a/chrome/test/automation/tab_proxy.h <newline>+++ b/chrome/test/automation/tab_proxy.h <newline>@@ -10,8 +10,8 @@ <newline> #include <vector> <newline> #include "chrome/browser/download/save_package.h" <newline>-#include "chrome/browser/security_style.h" <newline> #include "chrome/browser/tab_contents/navigation_entry.h" <newline>+#include "chrome/browser/tab_contents/security_style.h" <newline> #include "chrome/test/automation/automation_handle_tracker.h" <newline> class ConstrainedWindowProxy;
fa7f13276b0969f564c97821d6e03457a58cc52	mbelshe@google.com <mbelshe@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jan 16 22:16:15 2009 +0000	Update te way test shell cleans up on exit. It turns out that the LayoutTestControllers are only reset when a test is started.  Some tests leave sub-windows open (e.g. http/tests/security/aboutBlank/security-context-window-open.html) When these tests are run through the purify runner - which only runs one test per test shell - the effect is that the LayoutTestController does not get cleaned up.	5329		http://codereview.chromium.org/18300	svn://svn.chromium.org/chrome/trunk/src@8231 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_shell_main.cc b/webkit/tools/test_shell/test_shell_main.cc <newline>index b2f9830..f3a051d 100644 <newline>--- a/webkit/tools/test_shell/test_shell_main.cc <newline>+++ b/webkit/tools/test_shell/test_shell_main.cc <newline>@@ -380,7 +380,13 @@ int main(int argc, char* argv[]) { <newline>       shell->CallJSGC(); <newline>       shell->CallJSGC(); <newline>-      if (shell) delete shell; <newline>+      if (shell) { <newline>+        // When we finish the last test, cleanup the LayoutTestController. <newline>+        // It may have references to not-yet-cleaned up windows.  By <newline>+        // cleaning up here we help purify reports. <newline>+        shell->ResetTestController(); <newline>+        delete shell; <newline>+      } <newline>     } else { <newline>       MessageLoop::current()->Run(); <newline>     }
309460d327a8aef20a6bcd07c87b4bdb9628f51	mbelshe@google.com <mbelshe@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Jan 16 22:16:15 2009 +0000	Update te way test shell cleans up on exit. It turns out that the LayoutTestControllers are only reset when a test is started.  Some tests leave sub-windows open (e.g. http/tests/security/aboutBlank/security-context-window-open.html) When these tests are run through the purify runner - which only runs one test per test shell - the effect is that the LayoutTestController does not get cleaned up.	5329		http://codereview.chromium.org/18300	svn://svn.chromium.org/chrome/trunk/src@8231 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/test_shell_main.cc b/webkit/tools/test_shell/test_shell_main.cc <newline>index b2f9830..f3a051d 100644 <newline>--- a/webkit/tools/test_shell/test_shell_main.cc <newline>+++ b/webkit/tools/test_shell/test_shell_main.cc <newline>@@ -380,7 +380,13 @@ int main(int argc, char* argv[]) { <newline>       shell->CallJSGC(); <newline>       shell->CallJSGC(); <newline>-      if (shell) delete shell; <newline>+      if (shell) { <newline>+        // When we finish the last test, cleanup the LayoutTestController. <newline>+        // It may have references to not-yet-cleaned up windows.  By <newline>+        // cleaning up here we help purify reports. <newline>+        shell->ResetTestController(); <newline>+        delete shell; <newline>+      } <newline>     } else { <newline>       MessageLoop::current()->Run(); <newline>     }
e54b78eb9ba20e2b1a91c2f9642c18e635e289c	jcampan@chromium.org <jcampan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 13 01:56:22 2009 +0000	Adding the elementDoesAutoCompleteForElementWithId method to the layoutTestController class to fix the security/set-form-autocomplete-attribute.html layout test.			http://codereview.chromium.org/17364	svn://svn.chromium.org/chrome/trunk/src@7915 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/layout_test_controller.h b/webkit/tools/test_shell/layout_test_controller.h <newline>index d0f8f05..5155c3e 100644 <newline>--- a/webkit/tools/test_shell/layout_test_controller.h <newline>+++ b/webkit/tools/test_shell/layout_test_controller.h <newline>@@ -137,6 +137,8 @@ class LayoutTestController : public CppBoundClass { <newline>                                            CppVariant* result); <newline>   void pauseTransitionAtTimeOnElementWithId(const CppArgumentList& args, <newline>                                             CppVariant* result); <newline>+  void elementDoesAutoCompleteForElementWithId(const CppArgumentList& args, <newline>+                                               CppVariant* result); <newline>   // The following are only stubs.  TODO(pamg): Implement any of these that <newline>   // are needed to pass the layout tests.
cc47ce3146b70a4bef2665eebeb5875050d3534	jcampan@chromium.org <jcampan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Jan 13 01:56:22 2009 +0000	Adding the elementDoesAutoCompleteForElementWithId method to the layoutTestController class to fix the security/set-form-autocomplete-attribute.html layout test.			http://codereview.chromium.org/17364	svn://svn.chromium.org/chrome/trunk/src@7915 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/layout_test_controller.h b/webkit/tools/test_shell/layout_test_controller.h <newline>index d0f8f05..5155c3e 100644 <newline>--- a/webkit/tools/test_shell/layout_test_controller.h <newline>+++ b/webkit/tools/test_shell/layout_test_controller.h <newline>@@ -137,6 +137,8 @@ class LayoutTestController : public CppBoundClass { <newline>                                            CppVariant* result); <newline>   void pauseTransitionAtTimeOnElementWithId(const CppArgumentList& args, <newline>                                             CppVariant* result); <newline>+  void elementDoesAutoCompleteForElementWithId(const CppArgumentList& args, <newline>+                                               CppVariant* result); <newline>   // The following are only stubs.  TODO(pamg): Implement any of these that <newline>   // are needed to pass the layout tests.
2c85c953a5a757450094b01f652787270f6979a	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 16 22:19:24 2008 +0000	Implement ScriptController::updateSecurityOrigin.  Fixes two security LayoutTests. R=mbelshe	5247		http://codereview.chromium.org/14149	svn://svn.chromium.org/chrome/trunk/src@7104 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/port/bindings/v8/v8_proxy.h b/webkit/port/bindings/v8/v8_proxy.h <newline>index 12bebde..c38cae6 100644 <newline>--- a/webkit/port/bindings/v8/v8_proxy.h <newline>+++ b/webkit/port/bindings/v8/v8_proxy.h <newline>@@ -171,6 +171,10 @@ class V8Proxy { <newline>   // Update document object of the frame. <newline>   void updateDocument(); <newline>+  // Update the security origin of a document <newline>+  // (e.g., after setting docoument.domain). <newline>+  void updateSecurityOrigin(); <newline>+ <newline>   // Destroy the global object. <newline>   void DestroyGlobal(); <newline>@@ -405,9 +409,6 @@ class V8Proxy { <newline>   static void SetJSWrapperForDOMNode(Node* node, <newline>                                      v8::Persistent<v8::Object> wrapper); <newline>-  // Domain of a frame is changed, invalidate its security token. <newline>-  static void DomainChanged(Frame* frame); <newline>- <newline>   // Process any pending JavaScript console messages. <newline>   static void ProcessConsoleMessages();
1d04e075bc75c14a5d1f9feeeb4d1f407a57c24	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 16 22:19:24 2008 +0000	Implement ScriptController::updateSecurityOrigin.  Fixes two security LayoutTests. R=mbelshe	5247		http://codereview.chromium.org/14149	svn://svn.chromium.org/chrome/trunk/src@7104 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/port/bindings/v8/v8_proxy.h b/webkit/port/bindings/v8/v8_proxy.h <newline>index 12bebde..c38cae6 100644 <newline>--- a/webkit/port/bindings/v8/v8_proxy.h <newline>+++ b/webkit/port/bindings/v8/v8_proxy.h <newline>@@ -171,6 +171,10 @@ class V8Proxy { <newline>   // Update document object of the frame. <newline>   void updateDocument(); <newline>+  // Update the security origin of a document <newline>+  // (e.g., after setting docoument.domain). <newline>+  void updateSecurityOrigin(); <newline>+ <newline>   // Destroy the global object. <newline>   void DestroyGlobal(); <newline>@@ -405,9 +409,6 @@ class V8Proxy { <newline>   static void SetJSWrapperForDOMNode(Node* node, <newline>                                      v8::Persistent<v8::Object> wrapper); <newline>-  // Domain of a frame is changed, invalidate its security token. <newline>-  static void DomainChanged(Frame* frame); <newline>- <newline>   // Process any pending JavaScript console messages. <newline>   static void ProcessConsoleMessages();
412fca2cc6a1fa804315641487ad6ac9b1a4532	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Dec 15 09:01:33 2008 +0000	Command line switch for the ultra security concious: --force-https! If you set this switch, the browser refuses to talk HTTP and refuses to permit certificate errors.  For best results, use with a dedicated profile. R=jar			http://codereview.chromium.org/14421	svn://svn.chromium.org/chrome/trunk/src@6979 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_http_job.cc b/net/url_request/url_request_http_job.cc <newline>index ca28e7c..3cfb570 100644 <newline>--- a/net/url_request/url_request_http_job.cc <newline>+++ b/net/url_request/url_request_http_job.cc <newline>@@ -4,6 +4,8 @@ <newline> #include "net/url_request/url_request_http_job.h" <newline>+#include "base/base_switches.h" <newline>+#include "base/command_line.h" <newline> #include "base/compiler_specific.h" <newline> #include "base/file_util.h" <newline> #include "base/file_version_info.h" <newline>@@ -37,6 +39,13 @@ URLRequestJob* URLRequestHttpJob::Factory(URLRequest* request, <newline>     return new URLRequestErrorJob(request, net::ERR_INVALID_ARGUMENT); <newline>   } <newline>+  // We cache the value of the switch because this code path is hit on every <newline>+  // network request. <newline>+  static const bool kForceHTTPS = <newline>+        CommandLine().HasSwitch(switches::kForceHTTPS); <newline>+  if (kForceHTTPS && scheme != "https") <newline>+    return new URLRequestErrorJob(request, net::ERR_DISALLOWED_URL_SCHEME); <newline>+ <newline>   return new URLRequestHttpJob(request); <newline> } <newline>@@ -375,7 +384,8 @@ void URLRequestHttpJob::OnStartCompleted(int result) { <newline>   if (result == net::OK) { <newline>     NotifyHeadersComplete(); <newline>-  } else if (net::IsCertificateError(result)) { <newline>+  } else if (net::IsCertificateError(result) && <newline>+             !CommandLine().HasSwitch(switches::kForceHTTPS)) { <newline>     // We encountered an SSL certificate error.  Ask our delegate to decide <newline>     // what we should do. <newline>     // TODO(wtc): also pass ssl_info.cert_status, or just pass the whole
ed2755fa534075e250bb8ed5f909b753fa777fc	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Dec 15 09:01:33 2008 +0000	Command line switch for the ultra security concious: --force-https! If you set this switch, the browser refuses to talk HTTP and refuses to permit certificate errors.  For best results, use with a dedicated profile. R=jar			http://codereview.chromium.org/14421	svn://svn.chromium.org/chrome/trunk/src@6979 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_http_job.cc b/net/url_request/url_request_http_job.cc <newline>index ca28e7c..3cfb570 100644 <newline>--- a/net/url_request/url_request_http_job.cc <newline>+++ b/net/url_request/url_request_http_job.cc <newline>@@ -4,6 +4,8 @@ <newline> #include "net/url_request/url_request_http_job.h" <newline>+#include "base/base_switches.h" <newline>+#include "base/command_line.h" <newline> #include "base/compiler_specific.h" <newline> #include "base/file_util.h" <newline> #include "base/file_version_info.h" <newline>@@ -37,6 +39,13 @@ URLRequestJob* URLRequestHttpJob::Factory(URLRequest* request, <newline>     return new URLRequestErrorJob(request, net::ERR_INVALID_ARGUMENT); <newline>   } <newline>+  // We cache the value of the switch because this code path is hit on every <newline>+  // network request. <newline>+  static const bool kForceHTTPS = <newline>+        CommandLine().HasSwitch(switches::kForceHTTPS); <newline>+  if (kForceHTTPS && scheme != "https") <newline>+    return new URLRequestErrorJob(request, net::ERR_DISALLOWED_URL_SCHEME); <newline>+ <newline>   return new URLRequestHttpJob(request); <newline> } <newline>@@ -375,7 +384,8 @@ void URLRequestHttpJob::OnStartCompleted(int result) { <newline>   if (result == net::OK) { <newline>     NotifyHeadersComplete(); <newline>-  } else if (net::IsCertificateError(result)) { <newline>+  } else if (net::IsCertificateError(result) && <newline>+             !CommandLine().HasSwitch(switches::kForceHTTPS)) { <newline>     // We encountered an SSL certificate error.  Ask our delegate to decide <newline>     // what we should do. <newline>     // TODO(wtc): also pass ssl_info.cert_status, or just pass the whole
ad69efa2657a9ea60394ed3456fb86d654ace58	wtc@google.com <wtc@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 11 19:15:59 2008 +0000	Remove a stale comment.  net::ERR_CERT_UNABLE_TO_CHECK_REVOCATION now causes the security style to be set to authentication broken. (The security style is set elsewhere, not here, but this comment is still confusing.) R=jcampan	4749		http://codereview.chromium.org/13371	svn://svn.chromium.org/chrome/trunk/src@6805 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ssl_policy.cc b/chrome/browser/ssl_policy.cc <newline>index 62dbf40..8ed4486 100644 <newline>--- a/chrome/browser/ssl_policy.cc <newline>+++ b/chrome/browser/ssl_policy.cc <newline>@@ -187,7 +187,7 @@ class UnableToCheckRevocationPolicy : public SSLPolicy { <newline>   void OnCertError(const GURL& main_frame_url, <newline>                    SSLManager::CertError* error) { <newline>-    // We keep the style as secure and we display an info-bar. <newline>+    // We ignore this error and display an info-bar. <newline>     error->ContinueRequest(); <newline>     error->manager()->ShowMessage(l10n_util::GetString( <newline>         IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_INFO_BAR));
e6b0da009aabf92bfa1acbcdf589bad927f8f1d	wtc@google.com <wtc@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 11 19:15:59 2008 +0000	Remove a stale comment.  net::ERR_CERT_UNABLE_TO_CHECK_REVOCATION now causes the security style to be set to authentication broken. (The security style is set elsewhere, not here, but this comment is still confusing.) R=jcampan	4749		http://codereview.chromium.org/13371	svn://svn.chromium.org/chrome/trunk/src@6805 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/ssl_policy.cc b/chrome/browser/ssl_policy.cc <newline>index 62dbf40..8ed4486 100644 <newline>--- a/chrome/browser/ssl_policy.cc <newline>+++ b/chrome/browser/ssl_policy.cc <newline>@@ -187,7 +187,7 @@ class UnableToCheckRevocationPolicy : public SSLPolicy { <newline>   void OnCertError(const GURL& main_frame_url, <newline>                    SSLManager::CertError* error) { <newline>-    // We keep the style as secure and we display an info-bar. <newline>+    // We ignore this error and display an info-bar. <newline>     error->ContinueRequest(); <newline>     error->manager()->ShowMessage(l10n_util::GetString( <newline>         IDS_CERT_ERROR_UNABLE_TO_CHECK_REVOCATION_INFO_BAR));
4fb26e536a385b444db35d887ede7de73db62f3	fqian@google.com <fqian@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 11 01:22:11 2008 +0000	Update comments about security origin implementation.			http://codereview.chromium.org/13362	svn://svn.chromium.org/chrome/trunk/src@6767 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/port/bindings/v8/v8_proxy.cpp b/webkit/port/bindings/v8/v8_proxy.cpp <newline>index 672435b..dcc8145 100644 <newline>--- a/webkit/port/bindings/v8/v8_proxy.cpp <newline>+++ b/webkit/port/bindings/v8/v8_proxy.cpp <newline>@@ -211,7 +211,7 @@ namespace WebCore { <newline> // DOM objects are ref-counted, and JS objects are traced from <newline> // a set of root objects. They can create a cycle. To break <newline> // cycles, we do following: <newline>-//   Peer from DOM objects to JS wrappers are always weak, <newline>+//   Handles from DOM objects to JS wrappers are always weak, <newline> // so JS wrappers of non-node object cannot create a cycle. <newline> //   Before starting a global GC, we create a virtual connection <newline> // between nodes in the same tree in the JS heap. If the wrapper <newline>@@ -1997,6 +1997,28 @@ void V8Proxy::updateDocument() <newline> } <newline>+// Same origin policy implementation: <newline>+// <newline>+// Same origin policy prevents JS code from domain A access JS & DOM objects <newline>+// in a different domain B. There are exceptions and several objects are <newline>+// accessible by cross-domain code. For example, the window.frames object is <newline>+// accessible by code from a different domain, but window.document is not. <newline>+// <newline>+// The binding code sets security check callbacks on a function template, <newline>+// and accessing instances of the template calls the callback function. <newline>+// The callback function checks same origin policy. <newline>+// <newline>+// Callback functions are expensive. V8 uses a security token string to do <newline>+// fast access checks for the common case where source and target are in the <newline>+// same domain. A security token is a string object that represents <newline>+// the protocol/url/port of a domain. <newline>+// <newline>+// There are special cases where a security token matching is not enough. <newline>+// For example, JavaScript can set its domain to a super domain by calling <newline>+// document.setDomain(...). In these cases, the binding code can reset <newline>+// a context's security token to its global object so that the fast access <newline>+// check will always fail. <newline>+ <newline> // Check if the current execution context can access a target frame. <newline> // First it checks same domain policy using the lexical context <newline> //
4fe3611d6ebf53ecb78d88c15c17887e71b5ac3	fqian@google.com <fqian@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Dec 11 01:22:11 2008 +0000	Update comments about security origin implementation.			http://codereview.chromium.org/13362	svn://svn.chromium.org/chrome/trunk/src@6767 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/port/bindings/v8/v8_proxy.cpp b/webkit/port/bindings/v8/v8_proxy.cpp <newline>index 672435b..dcc8145 100644 <newline>--- a/webkit/port/bindings/v8/v8_proxy.cpp <newline>+++ b/webkit/port/bindings/v8/v8_proxy.cpp <newline>@@ -211,7 +211,7 @@ namespace WebCore { <newline> // DOM objects are ref-counted, and JS objects are traced from <newline> // a set of root objects. They can create a cycle. To break <newline> // cycles, we do following: <newline>-//   Peer from DOM objects to JS wrappers are always weak, <newline>+//   Handles from DOM objects to JS wrappers are always weak, <newline> // so JS wrappers of non-node object cannot create a cycle. <newline> //   Before starting a global GC, we create a virtual connection <newline> // between nodes in the same tree in the JS heap. If the wrapper <newline>@@ -1997,6 +1997,28 @@ void V8Proxy::updateDocument() <newline> } <newline>+// Same origin policy implementation: <newline>+// <newline>+// Same origin policy prevents JS code from domain A access JS & DOM objects <newline>+// in a different domain B. There are exceptions and several objects are <newline>+// accessible by cross-domain code. For example, the window.frames object is <newline>+// accessible by code from a different domain, but window.document is not. <newline>+// <newline>+// The binding code sets security check callbacks on a function template, <newline>+// and accessing instances of the template calls the callback function. <newline>+// The callback function checks same origin policy. <newline>+// <newline>+// Callback functions are expensive. V8 uses a security token string to do <newline>+// fast access checks for the common case where source and target are in the <newline>+// same domain. A security token is a string object that represents <newline>+// the protocol/url/port of a domain. <newline>+// <newline>+// There are special cases where a security token matching is not enough. <newline>+// For example, JavaScript can set its domain to a super domain by calling <newline>+// document.setDomain(...). In these cases, the binding code can reset <newline>+// a context's security token to its global object so that the fast access <newline>+// check will always fail. <newline>+ <newline> // Check if the current execution context can access a target frame. <newline> // First it checks same domain policy using the lexical context <newline> //
9be81bb8a40eb224485fd7dd7c6c4d5438400e4	pamg@google.com <pamg@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 9 21:49:54 2008 +0000	Remove pending http security tests that have been fixed in the mainline versions and update tests_fixable.txt correspondingly. TEST=covered by layout tests	4391		http://codereview.chromium.org/11016	svn://svn.chromium.org/chrome/trunk/src@6632 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index 0ecd000..71aea73 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -129,12 +129,6 @@ LayoutTests/fast/repaint/bugzilla-6473.html = PASS FAIL <newline> // Bug 982608: test had a wrong result for one condition <newline> LayoutTests/plugins/destroy-stream-twice.html = FAIL TIMEOUT <newline>-// Bug 1143337.  Forked to pending/http/tests/security/. <newline>-LINUX WIN : LayoutTests/http/tests/security/cross-frame-access-child-explicit-domain.html = FAIL <newline>-LayoutTests/http/tests/security/cross-frame-access-parent-explicit-domain.html = FAIL <newline>-LayoutTests/http/tests/security/cross-frame-access-protocol-explicit-domain.html = FAIL <newline>-LayoutTests/http/tests/security/cross-frame-access-protocol.html = FAIL <newline>- <newline> // Bug 1064038.  Image with border="1" drawn without the border. <newline> LINUX WIN : LayoutTests/fast/forms/image-border.html = FAIL <newline>@@ -145,6 +139,15 @@ LINUX WIN : LayoutTests/fast/forms/textarea-scrollbar-height.html = FAIL <newline> // Other <newline> // ----------------------------------------------------------------- <newline>+ <newline>+// Bug 5248 <newline>+LayoutTests/http/tests/security/cross-frame-access-protocol-explicit-domain.html = FAIL <newline>+LayoutTests/http/tests/security/cross-frame-access-protocol.html = FAIL <newline>+ <newline>+// Bug 5247: regressed with the giant WebKit merge? <newline>+LayoutTests/http/tests/security/cross-frame-access-child-explicit-domain.html = FAIL <newline>+LayoutTests/http/tests/security/cross-frame-access-parent-explicit-domain.html = FAIL <newline>+ <newline> // Bug 865472, this should just need proper pixel test rebaselining. <newline> // Also skipped by Apple on Windows (rdar://5723191). <newline> LayoutTests/http/tests/navigation/javascriptlink-frames.html = FAIL <newline>@@ -513,8 +516,6 @@ LINUX WIN : LayoutTests/fast/text/zero-width-characters.html = FAIL <newline> // HTTPS tests fail on the open source buildbot with error "cross-site not access allowed". <newline> // See bug # 2306 <newline> LayoutTests/http/tests/ssl/verify-ssl-enabled.php = FAIL PASS <newline>-pending/http/tests/security/cross-frame-access-protocol-explicit-domain.html = PASS TIMEOUT <newline>-pending/http/tests/security/cross-frame-access-protocol.html = CRASH PASS TIMEOUT <newline> // V8 doesn't stable sort. This is not required and may never be fixed. It is <newline> // tracked by: http://code.google.com/p/v8/issues/detail?id=90 <newline>@@ -759,8 +760,6 @@ LINUX WIN : LayoutTests/tables/mozilla/bugs/bug43854-1.html = FAIL <newline> LINUX WIN : LayoutTests/tables/mozilla_expected_failures/bugs/bug14007-2.html = FAIL <newline> chrome/fast/dom/domListEnumeration.html = FAIL <newline> chrome/fast/forms/basic-textareas-quirks.html = FAIL <newline>-pending/http/tests/security/cross-frame-access-child-explicit-domain.html = FAIL <newline>-pending/http/tests/security/cross-frame-access-parent-explicit-domain.html = FAIL <newline> // This test seems to fail on the builders but not locally. <newline> WIN : LayoutTests/fast/css/font-face-multiple-faces.html = FAIL <newline>@@ -1786,7 +1785,6 @@ MAC : LayoutTests/http/tests/security/aboutBlank/xss-DENIED-navigate-opener-docu <newline> MAC : LayoutTests/http/tests/security/aboutBlank/xss-DENIED-navigate-opener-javascript-url.html = FAIL <newline> MAC : LayoutTests/http/tests/security/aboutBlank/xss-DENIED-set-opener.html = FAIL <newline> MAC : LayoutTests/http/tests/security/cross-frame-access-call.html = FAIL TIMEOUT <newline>-MAC : LayoutTests/http/tests/security/cross-frame-access-child-explicit-domain.html = FAIL <newline> MAC : LayoutTests/http/tests/security/cross-frame-access-custom.html = FAIL <newline> MAC : LayoutTests/http/tests/security/cross-frame-access-get-override.html = FAIL <newline> MAC : LayoutTests/http/tests/security/cross-frame-access-get.html = FAIL
277ab37b8f87edd8871a0754e8a833dcf8924c8	pamg@google.com <pamg@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 9 21:49:54 2008 +0000	Remove pending http security tests that have been fixed in the mainline versions and update tests_fixable.txt correspondingly. TEST=covered by layout tests	4391		http://codereview.chromium.org/11016	svn://svn.chromium.org/chrome/trunk/src@6632 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index 0ecd000..71aea73 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -129,12 +129,6 @@ LayoutTests/fast/repaint/bugzilla-6473.html = PASS FAIL <newline> // Bug 982608: test had a wrong result for one condition <newline> LayoutTests/plugins/destroy-stream-twice.html = FAIL TIMEOUT <newline>-// Bug 1143337.  Forked to pending/http/tests/security/. <newline>-LINUX WIN : LayoutTests/http/tests/security/cross-frame-access-child-explicit-domain.html = FAIL <newline>-LayoutTests/http/tests/security/cross-frame-access-parent-explicit-domain.html = FAIL <newline>-LayoutTests/http/tests/security/cross-frame-access-protocol-explicit-domain.html = FAIL <newline>-LayoutTests/http/tests/security/cross-frame-access-protocol.html = FAIL <newline>- <newline> // Bug 1064038.  Image with border="1" drawn without the border. <newline> LINUX WIN : LayoutTests/fast/forms/image-border.html = FAIL <newline>@@ -145,6 +139,15 @@ LINUX WIN : LayoutTests/fast/forms/textarea-scrollbar-height.html = FAIL <newline> // Other <newline> // ----------------------------------------------------------------- <newline>+ <newline>+// Bug 5248 <newline>+LayoutTests/http/tests/security/cross-frame-access-protocol-explicit-domain.html = FAIL <newline>+LayoutTests/http/tests/security/cross-frame-access-protocol.html = FAIL <newline>+ <newline>+// Bug 5247: regressed with the giant WebKit merge? <newline>+LayoutTests/http/tests/security/cross-frame-access-child-explicit-domain.html = FAIL <newline>+LayoutTests/http/tests/security/cross-frame-access-parent-explicit-domain.html = FAIL <newline>+ <newline> // Bug 865472, this should just need proper pixel test rebaselining. <newline> // Also skipped by Apple on Windows (rdar://5723191). <newline> LayoutTests/http/tests/navigation/javascriptlink-frames.html = FAIL <newline>@@ -513,8 +516,6 @@ LINUX WIN : LayoutTests/fast/text/zero-width-characters.html = FAIL <newline> // HTTPS tests fail on the open source buildbot with error "cross-site not access allowed". <newline> // See bug # 2306 <newline> LayoutTests/http/tests/ssl/verify-ssl-enabled.php = FAIL PASS <newline>-pending/http/tests/security/cross-frame-access-protocol-explicit-domain.html = PASS TIMEOUT <newline>-pending/http/tests/security/cross-frame-access-protocol.html = CRASH PASS TIMEOUT <newline> // V8 doesn't stable sort. This is not required and may never be fixed. It is <newline> // tracked by: http://code.google.com/p/v8/issues/detail?id=90 <newline>@@ -759,8 +760,6 @@ LINUX WIN : LayoutTests/tables/mozilla/bugs/bug43854-1.html = FAIL <newline> LINUX WIN : LayoutTests/tables/mozilla_expected_failures/bugs/bug14007-2.html = FAIL <newline> chrome/fast/dom/domListEnumeration.html = FAIL <newline> chrome/fast/forms/basic-textareas-quirks.html = FAIL <newline>-pending/http/tests/security/cross-frame-access-child-explicit-domain.html = FAIL <newline>-pending/http/tests/security/cross-frame-access-parent-explicit-domain.html = FAIL <newline> // This test seems to fail on the builders but not locally. <newline> WIN : LayoutTests/fast/css/font-face-multiple-faces.html = FAIL <newline>@@ -1786,7 +1785,6 @@ MAC : LayoutTests/http/tests/security/aboutBlank/xss-DENIED-navigate-opener-docu <newline> MAC : LayoutTests/http/tests/security/aboutBlank/xss-DENIED-navigate-opener-javascript-url.html = FAIL <newline> MAC : LayoutTests/http/tests/security/aboutBlank/xss-DENIED-set-opener.html = FAIL <newline> MAC : LayoutTests/http/tests/security/cross-frame-access-call.html = FAIL TIMEOUT <newline>-MAC : LayoutTests/http/tests/security/cross-frame-access-child-explicit-domain.html = FAIL <newline> MAC : LayoutTests/http/tests/security/cross-frame-access-custom.html = FAIL <newline> MAC : LayoutTests/http/tests/security/cross-frame-access-get-override.html = FAIL <newline> MAC : LayoutTests/http/tests/security/cross-frame-access-get.html = FAIL
ec7c8d37f64b67f91d12c754d1253b740b31a73	deanm@chromium.org <deanm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 9 14:53:49 2008 +0000	Add baselines for new test password-placeholder-text-security. We match the behavior of upstream Mac, we differ on rendering fonts and controls.			http://codereview.chromium.org/13289	svn://svn.chromium.org/chrome/trunk/src@6583 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index b8d6827..673ebc2 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -1032,7 +1032,6 @@ LINUX WIN : LayoutTests/fast/block/positioning/replaced-inside-fixed-top-bottom. <newline> LayoutTests/fast/dom/StyleSheet/ownerNode-lifetime-2.html = FAIL <newline> LayoutTests/fast/dom/constructors-cached-navigate.html = FAIL <newline> LayoutTests/fast/dom/constructors-cached.html = FAIL <newline>-LayoutTests/fast/forms/password-placeholder-text-security.html = FAIL <newline> LayoutTests/fast/js/arguments.html = FAIL <newline> LayoutTests/fast/js/construct-global-object.html = FAIL <newline> LayoutTests/fast/js/function-dot-arguments.html = FAIL
1db0c695037f0e0a0492ee5eb7564ae85357b52	deanm@chromium.org <deanm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 9 14:53:49 2008 +0000	Add baselines for new test password-placeholder-text-security. We match the behavior of upstream Mac, we differ on rendering fonts and controls.			http://codereview.chromium.org/13289	svn://svn.chromium.org/chrome/trunk/src@6583 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index b8d6827..673ebc2 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -1032,7 +1032,6 @@ LINUX WIN : LayoutTests/fast/block/positioning/replaced-inside-fixed-top-bottom. <newline> LayoutTests/fast/dom/StyleSheet/ownerNode-lifetime-2.html = FAIL <newline> LayoutTests/fast/dom/constructors-cached-navigate.html = FAIL <newline> LayoutTests/fast/dom/constructors-cached.html = FAIL <newline>-LayoutTests/fast/forms/password-placeholder-text-security.html = FAIL <newline> LayoutTests/fast/js/arguments.html = FAIL <newline> LayoutTests/fast/js/construct-global-object.html = FAIL <newline> LayoutTests/fast/js/function-dot-arguments.html = FAIL
f7a4b3ab375b6faa72770cab61e51f3a238576f	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Dec 5 07:24:44 2008 +0000	Disable the content sniffing algorithm if the server instructs us to do so with the nosniff directive. For context, see http://blogs.msdn.com/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx R=deanm,darin			http://codereview.chromium.org/12982	svn://svn.chromium.org/chrome/trunk/src@6422 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/nosniff-test.html.mock-http-headers b/chrome/test/data/nosniff-test.html.mock-http-headers <newline>new file mode 100755 <newline>index 0000000..6cd1f86 <newline>--- /dev/null <newline>+++ b/chrome/test/data/nosniff-test.html.mock-http-headers <newline>@@ -0,0 +1,5 @@ <newline>+HTTP/1.1 200 OK <newline>+Content-Length: 111 <newline>+X-Content-Type-Options: nosniff <newline>+Date: Mon, 13 Nov 2006 21:38:09 GMT <newline>+Expires: Tue, 14 Nov 2006 19:23:58 GMT
116f0e31c10e5bf50ddddba007d4892e6b38e35	abarth@chromium.org <abarth@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Dec 5 07:24:44 2008 +0000	Disable the content sniffing algorithm if the server instructs us to do so with the nosniff directive. For context, see http://blogs.msdn.com/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx R=deanm,darin			http://codereview.chromium.org/12982	svn://svn.chromium.org/chrome/trunk/src@6422 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/test/data/nosniff-test.html.mock-http-headers b/chrome/test/data/nosniff-test.html.mock-http-headers <newline>new file mode 100755 <newline>index 0000000..6cd1f86 <newline>--- /dev/null <newline>+++ b/chrome/test/data/nosniff-test.html.mock-http-headers <newline>@@ -0,0 +1,5 @@ <newline>+HTTP/1.1 200 OK <newline>+Content-Length: 111 <newline>+X-Content-Type-Options: nosniff <newline>+Date: Mon, 13 Nov 2006 21:38:09 GMT <newline>+Expires: Tue, 14 Nov 2006 19:23:58 GMT
f6ca89dec47047aac8c4c7999c5eff6e65ece70	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 2 18:09:14 2008 +0000	Linux: fix layout test crash for security/block-test.html. If a connection fails without EINPROGRESS then we don't close the socket right away, but wait until the destructor calls Disconnect(). However, Disconnect assumes that we managed to setup the libevent handle, which is that case we didn't, and crashes on an assert.			http://codereview.chromium.org/12648	svn://svn.chromium.org/chrome/trunk/src@6223 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/tcp_client_socket_libevent.cc b/net/base/tcp_client_socket_libevent.cc <newline>index 2bf3f8d..79909c20 100644 <newline>--- a/net/base/tcp_client_socket_libevent.cc <newline>+++ b/net/base/tcp_client_socket_libevent.cc <newline>@@ -101,6 +101,8 @@ int TCPClientSocket::Connect(CompletionCallback* callback) { <newline>   if (errno != EINPROGRESS) { <newline>     DLOG(INFO) << "connect failed: " << errno; <newline>+    close(socket_); <newline>+    socket_ = kInvalidSocket; <newline>     return MapPosixError(errno); <newline>   }
902885a04fa4cc3c9e80eba7f9c55e96a4441dc	agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Dec 2 18:09:14 2008 +0000	Linux: fix layout test crash for security/block-test.html. If a connection fails without EINPROGRESS then we don't close the socket right away, but wait until the destructor calls Disconnect(). However, Disconnect assumes that we managed to setup the libevent handle, which is that case we didn't, and crashes on an assert.			http://codereview.chromium.org/12648	svn://svn.chromium.org/chrome/trunk/src@6223 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/tcp_client_socket_libevent.cc b/net/base/tcp_client_socket_libevent.cc <newline>index 2bf3f8d..79909c20 100644 <newline>--- a/net/base/tcp_client_socket_libevent.cc <newline>+++ b/net/base/tcp_client_socket_libevent.cc <newline>@@ -101,6 +101,8 @@ int TCPClientSocket::Connect(CompletionCallback* callback) { <newline>   if (errno != EINPROGRESS) { <newline>     DLOG(INFO) << "connect failed: " << errno; <newline>+    close(socket_); <newline>+    socket_ = kInvalidSocket; <newline>     return MapPosixError(errno); <newline>   }
3cf1a662e548a40de58e7dd70e5689eac84b741	jar@google.com <jar@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 18 20:22:52 2008 +0000	Avoid plausible DOS attack by malicious SDCH server Restrict SDCH to ONLY work with HTTP (fail safe security policy for this experimental protocol). Also add a histogram to see how often we encounter dictionary corruption (which will evidence itself by having a multitude of dicitionaries adverttised, with no real use server side). r=ajenjo,kmixter			http://codereview.chromium.org/11209	svn://svn.chromium.org/chrome/trunk/src@5628 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/sdch_manager.h b/net/base/sdch_manager.h <newline>index 69055f1..3a81584 100644 <newline>--- a/net/base/sdch_manager.h <newline>+++ b/net/base/sdch_manager.h <newline>@@ -85,15 +85,27 @@ class SdchManager { <newline>     DICTIONARY_SPECIFIES_TOP_LEVEL_DOMAIN, <newline>     DICTIONARY_DOMAIN_NOT_MATCHING_SOURCE_URL, <newline>     DICTIONARY_PORT_NOT_MATCHING_SOURCE_URL, <newline>+    DICTIONARY_HAS_NO_TEXT, <newline>     // Dictionary loading problems. <newline>     DICTIONARY_LOAD_ATTEMPT_FROM_DIFFERENT_HOST = 30, <newline>     DICTIONARY_SELECTED_FOR_SSL, <newline>     DICTIONARY_ALREADY_LOADED, <newline>+    DICTIONARY_SELECTED_FROM_NON_HTTP, <newline>+    DICTIONARY_IS_TOO_LARGE, <newline>+    DICTIONARY_COUNT_EXCEEDED, <newline>+ <newline>+    // Failsafe hack. <newline>+    ATTEMPT_TO_DECODE_NON_HTTP_DATA = 40, <newline>     MAX_PROBLEM_CODE  // Used to bound histogram. <newline>   }; <newline>+  // Use the following static limits to block DOS attacks until we implement <newline>+  // a cached dictionary evicition strategy. <newline>+  static const size_t kMaxDictionarySize; <newline>+  static const size_t kMaxDictionaryCount; <newline>+ <newline>   // There is one instance of |Dictionary| for each memory-cached SDCH <newline>   // dictionary. <newline>   class Dictionary : public base::RefCounted<Dictionary> { <newline>@@ -197,6 +209,11 @@ class SdchManager { <newline>   // cached in memory. <newline>   void FetchDictionary(const GURL& referring_url, const GURL& dictionary_url); <newline>+  // Security test function used before initiating a fetch. <newline>+  // Return true if fetch is legal. <newline>+  bool CanFetchDictionary(const GURL& referring_url, <newline>+                          const GURL& dictionary_url) const; <newline>+ <newline>   // Add an SDCH dictionary to our list of availible dictionaries. This addition <newline>   // will fail (return false) if addition is illegal (data in the dictionary is <newline>   // not acceptable from the dictionary_url; dictionary already added, etc.).
75bc8cbe5826e1f0034b2a97a7b7bdda2ce4515	jar@google.com <jar@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 18 20:22:52 2008 +0000	Avoid plausible DOS attack by malicious SDCH server Restrict SDCH to ONLY work with HTTP (fail safe security policy for this experimental protocol). Also add a histogram to see how often we encounter dictionary corruption (which will evidence itself by having a multitude of dicitionaries adverttised, with no real use server side). r=ajenjo,kmixter			http://codereview.chromium.org/11209	svn://svn.chromium.org/chrome/trunk/src@5628 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/sdch_manager.h b/net/base/sdch_manager.h <newline>index 69055f1..3a81584 100644 <newline>--- a/net/base/sdch_manager.h <newline>+++ b/net/base/sdch_manager.h <newline>@@ -85,15 +85,27 @@ class SdchManager { <newline>     DICTIONARY_SPECIFIES_TOP_LEVEL_DOMAIN, <newline>     DICTIONARY_DOMAIN_NOT_MATCHING_SOURCE_URL, <newline>     DICTIONARY_PORT_NOT_MATCHING_SOURCE_URL, <newline>+    DICTIONARY_HAS_NO_TEXT, <newline>     // Dictionary loading problems. <newline>     DICTIONARY_LOAD_ATTEMPT_FROM_DIFFERENT_HOST = 30, <newline>     DICTIONARY_SELECTED_FOR_SSL, <newline>     DICTIONARY_ALREADY_LOADED, <newline>+    DICTIONARY_SELECTED_FROM_NON_HTTP, <newline>+    DICTIONARY_IS_TOO_LARGE, <newline>+    DICTIONARY_COUNT_EXCEEDED, <newline>+ <newline>+    // Failsafe hack. <newline>+    ATTEMPT_TO_DECODE_NON_HTTP_DATA = 40, <newline>     MAX_PROBLEM_CODE  // Used to bound histogram. <newline>   }; <newline>+  // Use the following static limits to block DOS attacks until we implement <newline>+  // a cached dictionary evicition strategy. <newline>+  static const size_t kMaxDictionarySize; <newline>+  static const size_t kMaxDictionaryCount; <newline>+ <newline>   // There is one instance of |Dictionary| for each memory-cached SDCH <newline>   // dictionary. <newline>   class Dictionary : public base::RefCounted<Dictionary> { <newline>@@ -197,6 +209,11 @@ class SdchManager { <newline>   // cached in memory. <newline>   void FetchDictionary(const GURL& referring_url, const GURL& dictionary_url); <newline>+  // Security test function used before initiating a fetch. <newline>+  // Return true if fetch is legal. <newline>+  bool CanFetchDictionary(const GURL& referring_url, <newline>+                          const GURL& dictionary_url) const; <newline>+ <newline>   // Add an SDCH dictionary to our list of availible dictionaries. This addition <newline>   // will fail (return false) if addition is illegal (data in the dictionary is <newline>   // not acceptable from the dictionary_url; dictionary already added, etc.).
faab4c4b542422136e2bd1dd359fed9fa02fa95	fqian@google.com <fqian@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Nov 13 23:00:41 2008 +0000	Clean up the proxy code for handling frame navigation. When a frame navigates to a new page, the old context handle is disposed, and the global proxy object is detached from the old context. A new context is created using the global proxy object. However, the security token is not created because, at this point, the security origin is not updated to new URL. When the new document is ready, V8Proxy updates the security token using the security origin of the document. Our code relies on the fact that ScriptController::clearWindowShell be called only when the frame loads a page, but not at closing time.			http://codereview.chromium.org/10687	svn://svn.chromium.org/chrome/trunk/src@5396 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/port/bindings/v8/v8_proxy.h b/webkit/port/bindings/v8/v8_proxy.h <newline>index 3f69153..4a1aa9f 100644 <newline>--- a/webkit/port/bindings/v8/v8_proxy.h <newline>+++ b/webkit/port/bindings/v8/v8_proxy.h <newline>@@ -164,11 +164,11 @@ class V8Proxy { <newline>   // Clear page-specific data, but keep the global object identify. <newline>   void clearForNavigation(); <newline>-  // Clear data before closing the frame. <newline>+  // Clear page-specific data before shutting down the proxy object. <newline>   void clearForClose(); <newline>-  // Notify that a new DOMWindow object is ready. <newline>-  void domWindowReady(); <newline>+  // Update document object of the frame. <newline>+  void updateDocument(); <newline>   // Destroy the global object. <newline>   void DestroyGlobal(); <newline>@@ -189,9 +189,6 @@ class V8Proxy { <newline>   bool isEnabled(); <newline>-  // Remove 'document' property from the global object. <newline>-  void clearDocumentWrapper(); <newline>- <newline>   // Find/Create/Remove event listener wrappers. <newline>   PassRefPtr<V8EventListener> FindV8EventListener(v8::Local<v8::Value> listener, <newline>                                        bool html); <newline>@@ -421,6 +418,7 @@ class V8Proxy { <newline>  private: <newline>   void initContextIfNeeded(); <newline>   void DisconnectEventListeners(); <newline>+  void SetSecurityToken(); <newline>   static bool CanAccessPrivate(DOMWindow* target); <newline>@@ -484,10 +482,6 @@ class V8Proxy { <newline>   static const char* GetSVGExceptionName(int exception_code); <newline> #endif <newline>-  // Update m_document field, dispose old one and create a string reference <newline>-  // to the new one. <newline>-  void UpdateDocumentHandle(v8::Local<v8::Object> handle); <newline>- <newline>   // Returns a local handle of the context. <newline>   v8::Local<v8::Context> GetContext() { <newline>     return v8::Local<v8::Context>::New(m_context); <newline>@@ -497,9 +491,6 @@ class V8Proxy { <newline>   v8::Persistent<v8::Context> m_context; <newline>   v8::Persistent<v8::Object> m_global; <newline>-  // Special handling of document wrapper; <newline>-  v8::Persistent<v8::Object> m_document; <newline>- <newline>   int m_handlerLineno; <newline>   // A list of event listeners created for this frame,
a64bcecf1febf468f3eaa39695a11e72d24b5dc	fqian@google.com <fqian@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Nov 13 23:00:41 2008 +0000	Clean up the proxy code for handling frame navigation. When a frame navigates to a new page, the old context handle is disposed, and the global proxy object is detached from the old context. A new context is created using the global proxy object. However, the security token is not created because, at this point, the security origin is not updated to new URL. When the new document is ready, V8Proxy updates the security token using the security origin of the document. Our code relies on the fact that ScriptController::clearWindowShell be called only when the frame loads a page, but not at closing time.			http://codereview.chromium.org/10687	svn://svn.chromium.org/chrome/trunk/src@5396 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/port/bindings/v8/v8_proxy.h b/webkit/port/bindings/v8/v8_proxy.h <newline>index 3f69153..4a1aa9f 100644 <newline>--- a/webkit/port/bindings/v8/v8_proxy.h <newline>+++ b/webkit/port/bindings/v8/v8_proxy.h <newline>@@ -164,11 +164,11 @@ class V8Proxy { <newline>   // Clear page-specific data, but keep the global object identify. <newline>   void clearForNavigation(); <newline>-  // Clear data before closing the frame. <newline>+  // Clear page-specific data before shutting down the proxy object. <newline>   void clearForClose(); <newline>-  // Notify that a new DOMWindow object is ready. <newline>-  void domWindowReady(); <newline>+  // Update document object of the frame. <newline>+  void updateDocument(); <newline>   // Destroy the global object. <newline>   void DestroyGlobal(); <newline>@@ -189,9 +189,6 @@ class V8Proxy { <newline>   bool isEnabled(); <newline>-  // Remove 'document' property from the global object. <newline>-  void clearDocumentWrapper(); <newline>- <newline>   // Find/Create/Remove event listener wrappers. <newline>   PassRefPtr<V8EventListener> FindV8EventListener(v8::Local<v8::Value> listener, <newline>                                        bool html); <newline>@@ -421,6 +418,7 @@ class V8Proxy { <newline>  private: <newline>   void initContextIfNeeded(); <newline>   void DisconnectEventListeners(); <newline>+  void SetSecurityToken(); <newline>   static bool CanAccessPrivate(DOMWindow* target); <newline>@@ -484,10 +482,6 @@ class V8Proxy { <newline>   static const char* GetSVGExceptionName(int exception_code); <newline> #endif <newline>-  // Update m_document field, dispose old one and create a string reference <newline>-  // to the new one. <newline>-  void UpdateDocumentHandle(v8::Local<v8::Object> handle); <newline>- <newline>   // Returns a local handle of the context. <newline>   v8::Local<v8::Context> GetContext() { <newline>     return v8::Local<v8::Context>::New(m_context); <newline>@@ -497,9 +491,6 @@ class V8Proxy { <newline>   v8::Persistent<v8::Context> m_context; <newline>   v8::Persistent<v8::Object> m_global; <newline>-  // Special handling of document wrapper; <newline>-  v8::Persistent<v8::Object> m_document; <newline>- <newline>   int m_handlerLineno; <newline>   // A list of event listeners created for this frame,
657374170740a3a88da7da9bf2e0776555b7122	sgjesse@chromium.org <sgjesse@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Nov 10 10:11:32 2008 +0000	Changed the DumpFramesAsText() to not dump anything about a frame if it is empty (has no root element). This matches the WebKit version function dumpFramesAsText in WebKitTools/DumpRenderTree/win/DumpRenderTree.cpp, see http://trac.webkit.org/browser/trunk/WebKitTools/DumpRenderTree/win/DumpRenderTree.cpp?rev=34719#L306. This fixes layout test LayoutTests/http/tests/security/cross-origin-xsl-BLOCKED.html as it expects a totally empty iframe.			http://codereview.chromium.org/10003	svn://svn.chromium.org/chrome/trunk/src@5099 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>index 3715f10..a714d9e 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>@@ -810,7 +810,6 @@ V8 # LayoutTests/http/tests/misc/acid3.html = FAIL <newline> V8 # DEFER : LayoutTests/http/tests/misc/frame-default-enc-same-domain.html = FAIL <newline> V8 # LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline> V8 # LayoutTests/http/tests/security/cross-frame-access-object-prototype.html = FAIL | TIMEOUT <newline>-V8 # LayoutTests/http/tests/security/cross-origin-xsl-BLOCKED.html = FAIL <newline> V8 # LayoutTests/http/tests/security/xss-DENIED-synchronous-form.html = FAIL | TIMEOUT <newline> V8 # LayoutTests/http/tests/security/xss-eval.html = FAIL | TIMEOUT <newline> V8 # LayoutTests/http/tests/xmlhttprequest/access-control-basic-allow-preflight-cache-invalidation-by-method.html = FAIL
9b146165164583dbaedc285f97bdac966d04013	sgjesse@chromium.org <sgjesse@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Nov 10 10:11:32 2008 +0000	Changed the DumpFramesAsText() to not dump anything about a frame if it is empty (has no root element). This matches the WebKit version function dumpFramesAsText in WebKitTools/DumpRenderTree/win/DumpRenderTree.cpp, see http://trac.webkit.org/browser/trunk/WebKitTools/DumpRenderTree/win/DumpRenderTree.cpp?rev=34719#L306. This fixes layout test LayoutTests/http/tests/security/cross-origin-xsl-BLOCKED.html as it expects a totally empty iframe.			http://codereview.chromium.org/10003	svn://svn.chromium.org/chrome/trunk/src@5099 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>index 3715f10..a714d9e 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>@@ -810,7 +810,6 @@ V8 # LayoutTests/http/tests/misc/acid3.html = FAIL <newline> V8 # DEFER : LayoutTests/http/tests/misc/frame-default-enc-same-domain.html = FAIL <newline> V8 # LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline> V8 # LayoutTests/http/tests/security/cross-frame-access-object-prototype.html = FAIL | TIMEOUT <newline>-V8 # LayoutTests/http/tests/security/cross-origin-xsl-BLOCKED.html = FAIL <newline> V8 # LayoutTests/http/tests/security/xss-DENIED-synchronous-form.html = FAIL | TIMEOUT <newline> V8 # LayoutTests/http/tests/security/xss-eval.html = FAIL | TIMEOUT <newline> V8 # LayoutTests/http/tests/xmlhttprequest/access-control-basic-allow-preflight-cache-invalidation-by-method.html = FAIL
8a4e6b274fb33092c2ebc307dbae5cc0190cab6	sgjesse@chromium.org <sgjesse@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 7 13:50:19 2008 +0000	Rebaselined the following 6 layout tests. LayoutTests/http/tests/security/listener/xss-XMLHttpRequest-shortcut.html LayoutTests/http/tests/security/listener/xss-XMLHttpRequest-addEventListener.html LayoutTests/http/tests/security/listener/xss-window-onclick-shortcut.html LayoutTests/http/tests/security/listener/xss-window-onclick-addEventListener.html LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-shortcut.html LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-addEventListener.html In WebKit r33979 all these layout tests had alert("document.domain: " + window.document.domain); changed to try { alert("document.domain: " + window.document.domain); } catch(e) { } causing the document.domain access error to no longer be reported. Rebaselining the tests does not compromize what they are testing as if window.domain was accessible the output would change causing failures.			http://codereview.chromium.org/9691	svn://svn.chromium.org/chrome/trunk/src@4985 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>index 70317e4..ad2975f 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>@@ -868,7 +868,7 @@ V8 | KJS # LayoutTests/http/tests/misc/acid3.html = FAIL <newline> V8 | KJS # DEFER : LayoutTests/http/tests/misc/frame-default-enc-same-domain.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/cross-frame-access-object-prototype.html = FAIL | TIMEOUT <newline>-V8 | KJS # LayoutTests/http/tests/security/cross-origin-xsl-BLOCKED.html = FAIL <newline>+// V8 | KJS # LayoutTests/http/tests/security/cross-origin-xsl-BLOCKED.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/xss-DENIED-synchronous-form.html = FAIL | TIMEOUT <newline> V8 | KJS # LayoutTests/http/tests/security/xss-eval.html = FAIL | TIMEOUT <newline> V8 | KJS # LayoutTests/http/tests/xmlhttprequest/access-control-basic-allow-preflight-cache-invalidation-by-method.html = FAIL <newline>@@ -904,12 +904,6 @@ V8 | KJS # LayoutTests/http/tests/navigation/metaredirect-basic.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/navigation/post-basic.html = FAIL | PASS <newline> V8 | KJS # LayoutTests/http/tests/navigation/post-frames.html = FAIL | PASS <newline> V8 | KJS # LayoutTests/http/tests/security/cross-frame-access-history-put.html = FAIL | TIMEOUT <newline>-V8 | KJS # LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-addEventListener.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-shortcut.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/listener/xss-XMLHttpRequest-addEventListener.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/listener/xss-XMLHttpRequest-shortcut.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/listener/xss-window-onclick-addEventListener.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/listener/xss-window-onclick-shortcut.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/postMessage/invalid-origin-throws-exception.html = FAIL | TIMEOUT <newline> V8 | KJS # LayoutTests/svg/W3C-SVG-1.1/animate-elem-34-t.svg = FAIL <newline> V8 | KJS # LayoutTests/svg/W3C-SVG-1.1/animate-elem-40-t.svg = FAIL
6953001e00d868d671c2fc74ad30618e7900414	sgjesse@chromium.org <sgjesse@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 7 13:50:19 2008 +0000	Rebaselined the following 6 layout tests. LayoutTests/http/tests/security/listener/xss-XMLHttpRequest-shortcut.html LayoutTests/http/tests/security/listener/xss-XMLHttpRequest-addEventListener.html LayoutTests/http/tests/security/listener/xss-window-onclick-shortcut.html LayoutTests/http/tests/security/listener/xss-window-onclick-addEventListener.html LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-shortcut.html LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-addEventListener.html In WebKit r33979 all these layout tests had alert("document.domain: " + window.document.domain); changed to try { alert("document.domain: " + window.document.domain); } catch(e) { } causing the document.domain access error to no longer be reported. Rebaselining the tests does not compromize what they are testing as if window.domain was accessible the output would change causing failures.			http://codereview.chromium.org/9691	svn://svn.chromium.org/chrome/trunk/src@4985 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>index 70317e4..ad2975f 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>@@ -868,7 +868,7 @@ V8 | KJS # LayoutTests/http/tests/misc/acid3.html = FAIL <newline> V8 | KJS # DEFER : LayoutTests/http/tests/misc/frame-default-enc-same-domain.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/cross-frame-access-object-prototype.html = FAIL | TIMEOUT <newline>-V8 | KJS # LayoutTests/http/tests/security/cross-origin-xsl-BLOCKED.html = FAIL <newline>+// V8 | KJS # LayoutTests/http/tests/security/cross-origin-xsl-BLOCKED.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/xss-DENIED-synchronous-form.html = FAIL | TIMEOUT <newline> V8 | KJS # LayoutTests/http/tests/security/xss-eval.html = FAIL | TIMEOUT <newline> V8 | KJS # LayoutTests/http/tests/xmlhttprequest/access-control-basic-allow-preflight-cache-invalidation-by-method.html = FAIL <newline>@@ -904,12 +904,6 @@ V8 | KJS # LayoutTests/http/tests/navigation/metaredirect-basic.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/navigation/post-basic.html = FAIL | PASS <newline> V8 | KJS # LayoutTests/http/tests/navigation/post-frames.html = FAIL | PASS <newline> V8 | KJS # LayoutTests/http/tests/security/cross-frame-access-history-put.html = FAIL | TIMEOUT <newline>-V8 | KJS # LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-addEventListener.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-shortcut.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/listener/xss-XMLHttpRequest-addEventListener.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/listener/xss-XMLHttpRequest-shortcut.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/listener/xss-window-onclick-addEventListener.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/listener/xss-window-onclick-shortcut.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/postMessage/invalid-origin-throws-exception.html = FAIL | TIMEOUT <newline> V8 | KJS # LayoutTests/svg/W3C-SVG-1.1/animate-elem-34-t.svg = FAIL <newline> V8 | KJS # LayoutTests/svg/W3C-SVG-1.1/animate-elem-40-t.svg = FAIL
fc8a2bafa483ccd90df6b9c9b9f258854939060	ager@google.com <ager@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 7 06:54:13 2008 +0000	Another attempt at fixing the flash security issue surrounding window.location. This change disallows shadowing of window and location both when using var declarations and when defining accessors.  Using 'var location = stuff' will cause a navigation.  This is consistent with what Firefox does. Also, introduce an explicit valueOf function on location objects so that implicit string conversions cannot be intercepted to fake the current location reported by window.location.			http://codereview.chromium.org/9636	svn://svn.chromium.org/chrome/trunk/src@4979 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/port/page/Location.idl b/webkit/port/page/Location.idl <newline>index 092b81d..73acabe 100644 <newline>--- a/webkit/port/page/Location.idl <newline>+++ b/webkit/port/page/Location.idl <newline>@@ -20,5 +20,6 @@ module core { <newline>     [DoNotCheckDomainSecurity, v8OnInstance] void replace(in DOMString url); <newline>     [DoNotCheckDomainSecurity, v8OnInstance] void assign(in DOMString url); <newline>     [ReadOnly, DontEnum, v8OnInstance] DOMString toString(); <newline>+    [Custom, ReadOnly, DontEnum, v8OnInstance] DOMObject valueOf(); <newline>   }; <newline> }
2b7e9bcec919274756d5eb077d155a15489d473	ager@google.com <ager@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Nov 7 06:54:13 2008 +0000	Another attempt at fixing the flash security issue surrounding window.location. This change disallows shadowing of window and location both when using var declarations and when defining accessors.  Using 'var location = stuff' will cause a navigation.  This is consistent with what Firefox does. Also, introduce an explicit valueOf function on location objects so that implicit string conversions cannot be intercepted to fake the current location reported by window.location.			http://codereview.chromium.org/9636	svn://svn.chromium.org/chrome/trunk/src@4979 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/port/page/Location.idl b/webkit/port/page/Location.idl <newline>index 092b81d..73acabe 100644 <newline>--- a/webkit/port/page/Location.idl <newline>+++ b/webkit/port/page/Location.idl <newline>@@ -20,5 +20,6 @@ module core { <newline>     [DoNotCheckDomainSecurity, v8OnInstance] void replace(in DOMString url); <newline>     [DoNotCheckDomainSecurity, v8OnInstance] void assign(in DOMString url); <newline>     [ReadOnly, DontEnum, v8OnInstance] DOMString toString(); <newline>+    [Custom, ReadOnly, DontEnum, v8OnInstance] DOMObject valueOf(); <newline>   }; <newline> }
a81a5121f128205bd5e760d4cfa78fb09c087a7	sgjesse@chromium.org <sgjesse@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 4 12:08:34 2008 +0000	Rebaselined the following layout tests LayoutTests\http\tests\security\aboutBlank\xss-DENIED-set-opener.html LayoutTests\http\tests\security\aboutBlank\xss-DENIED-navigate-opener-document-write.html LayoutTests\http\tests\security\aboutBlank\xss-DENIED-navigate-opener-javascript-url.html The original expectations included a security access error where the source was about:blank, but as soon as an about:blank is written to it is supposed to get the URL of the script performing the write. This behaviour matches the error messages seen in Firefox and Internet Explorer.			http://codereview.chromium.org/9106	svn://svn.chromium.org/chrome/trunk/src@4596 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>index 5444fa6..09437e9 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>@@ -895,9 +895,6 @@ V8 | KJS # LayoutTests/http/tests/navigation/back-to-slow-frame.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/navigation/metaredirect-basic.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/navigation/post-basic.html = FAIL | PASS <newline> V8 | KJS # LayoutTests/http/tests/navigation/post-frames.html = FAIL | PASS <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/xss-DENIED-navigate-opener-document-write.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/xss-DENIED-navigate-opener-javascript-url.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/xss-DENIED-set-opener.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/cross-frame-access-history-put.html = FAIL | TIMEOUT <newline> V8 | KJS # LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-addEventListener.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-shortcut.html = FAIL
275f9d28ee3f9a96288bfdbc74be4ba0df63aa1	sgjesse@chromium.org <sgjesse@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Nov 4 12:08:34 2008 +0000	Rebaselined the following layout tests LayoutTests\http\tests\security\aboutBlank\xss-DENIED-set-opener.html LayoutTests\http\tests\security\aboutBlank\xss-DENIED-navigate-opener-document-write.html LayoutTests\http\tests\security\aboutBlank\xss-DENIED-navigate-opener-javascript-url.html The original expectations included a security access error where the source was about:blank, but as soon as an about:blank is written to it is supposed to get the URL of the script performing the write. This behaviour matches the error messages seen in Firefox and Internet Explorer.			http://codereview.chromium.org/9106	svn://svn.chromium.org/chrome/trunk/src@4596 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>index 5444fa6..09437e9 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>@@ -895,9 +895,6 @@ V8 | KJS # LayoutTests/http/tests/navigation/back-to-slow-frame.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/navigation/metaredirect-basic.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/navigation/post-basic.html = FAIL | PASS <newline> V8 | KJS # LayoutTests/http/tests/navigation/post-frames.html = FAIL | PASS <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/xss-DENIED-navigate-opener-document-write.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/xss-DENIED-navigate-opener-javascript-url.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/xss-DENIED-set-opener.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/cross-frame-access-history-put.html = FAIL | TIMEOUT <newline> V8 | KJS # LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-addEventListener.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/listener/xss-JSTargetNode-onclick-shortcut.html = FAIL
f18b7b3c13005ec4f537d9fd0848a7b0adc914f	nsylvain@chromium.org <nsylvain@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 31 18:38:43 2008 +0000	Background: 1. We can tell chrome to "always open this type of file" when downloading. This is disabled for executable for security reasons. 2. When downloading an executable files we download a .download instead. -=-= The problem is that the "always open this type of file" is enabled for executables during the download because we check the extension of the file to know if it's an executable or not, and during download we see .download, and we don't consider it an executable. The fix is to look at the "original_name" when it's present to get the extension of the real file, not the .download.	3814		http://codereview.chromium.org/8918	svn://svn.chromium.org/chrome/trunk/src@4306 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/download/download_util.cc b/chrome/browser/download/download_util.cc <newline>index 7fab6f8..a166958 100644 <newline>--- a/chrome/browser/download/download_util.cc <newline>+++ b/chrome/browser/download/download_util.cc <newline>@@ -222,8 +222,12 @@ DownloadDestinationContextMenu::~DownloadDestinationContextMenu() { <newline> // Download opening ------------------------------------------------------------ <newline> bool CanOpenDownload(DownloadItem* download) { <newline>+  std::wstring file_to_use = download->full_path(); <newline>+  if (!download->original_name().empty()) <newline>+    file_to_use = download->original_name(); <newline>+ <newline>   const std::wstring extension = <newline>-      file_util::GetFileExtensionFromPath(download->full_path()); <newline>+      file_util::GetFileExtensionFromPath(file_to_use); <newline>   return !download->manager()->IsExecutable(extension); <newline> }
e2b810519af0721cc68057f71c006a623e480cc	nsylvain@chromium.org <nsylvain@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Oct 31 18:38:43 2008 +0000	Background: 1. We can tell chrome to "always open this type of file" when downloading. This is disabled for executable for security reasons. 2. When downloading an executable files we download a .download instead. -=-= The problem is that the "always open this type of file" is enabled for executables during the download because we check the extension of the file to know if it's an executable or not, and during download we see .download, and we don't consider it an executable. The fix is to look at the "original_name" when it's present to get the extension of the real file, not the .download.	3814		http://codereview.chromium.org/8918	svn://svn.chromium.org/chrome/trunk/src@4306 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/download/download_util.cc b/chrome/browser/download/download_util.cc <newline>index 7fab6f8..a166958 100644 <newline>--- a/chrome/browser/download/download_util.cc <newline>+++ b/chrome/browser/download/download_util.cc <newline>@@ -222,8 +222,12 @@ DownloadDestinationContextMenu::~DownloadDestinationContextMenu() { <newline> // Download opening ------------------------------------------------------------ <newline> bool CanOpenDownload(DownloadItem* download) { <newline>+  std::wstring file_to_use = download->full_path(); <newline>+  if (!download->original_name().empty()) <newline>+    file_to_use = download->original_name(); <newline>+ <newline>   const std::wstring extension = <newline>-      file_util::GetFileExtensionFromPath(download->full_path()); <newline>+      file_util::GetFileExtensionFromPath(file_to_use); <newline>   return !download->manager()->IsExecutable(extension); <newline> }
bc00cd850025db5c9e386484d52986710560317	nsylvain@chromium.org <nsylvain@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Oct 27 14:41:51 2008 +0000	Make sure it's possible to download to a network share. The function to move the file was failing to set the security descriptor. Now we use SHFileOperation, which has a flag to do everything we want. Eventually we might want to display ui on errors and use the ui features of SHFileOperation, but for the 1.0 build we want to stick to a smaller and less risky change.	984		http://codereview.chromium.org/8128	svn://svn.chromium.org/chrome/trunk/src@3996 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/file_util_win.cc b/base/file_util_win.cc <newline>index 9c34ab3..9d775f0 100644 <newline>--- a/base/file_util_win.cc <newline>+++ b/base/file_util_win.cc <newline>@@ -535,47 +535,24 @@ int WriteFile(const std::wstring& filename, const char* data, int size) { <newline> bool RenameFileAndResetSecurityDescriptor( <newline>     const std::wstring& source_file_path, <newline>     const std::wstring& target_file_path) { <newline>-  // The MoveFile API does not reset the security descriptor on the target <newline>-  // file. To ensure that the target file gets the correct security descriptor <newline>-  // we create the target file initially in the target path, read its security <newline>-  // descriptor and stamp this descriptor on the target file after the MoveFile <newline>-  // API completes. <newline>-  ScopedHandle temp_file_handle_for_security_desc( <newline>-      CreateFileW(target_file_path.c_str(), GENERIC_READ | GENERIC_WRITE, <newline>-                  FILE_SHARE_READ, NULL, OPEN_ALWAYS, <newline>-                  FILE_ATTRIBUTE_NORMAL | FILE_FLAG_DELETE_ON_CLOSE, <newline>-                  NULL)); <newline>-  if (!temp_file_handle_for_security_desc.IsValid()) <newline>-    return false; <newline>- <newline>-  // Check how much we should allocate for the security descriptor. <newline>-  unsigned long security_descriptor_size_in_bytes = 0; <newline>-  GetFileSecurity(target_file_path.c_str(), DACL_SECURITY_INFORMATION, NULL, 0, <newline>-                  &security_descriptor_size_in_bytes); <newline>-  if (ERROR_INSUFFICIENT_BUFFER != GetLastError() || <newline>-      security_descriptor_size_in_bytes == 0) <newline>-    return false; <newline>- <newline>-  scoped_array<char> security_descriptor( <newline>-      new char[security_descriptor_size_in_bytes]); <newline>- <newline>-  if (!GetFileSecurity(target_file_path.c_str(), DACL_SECURITY_INFORMATION, <newline>-                       security_descriptor.get(), <newline>-                       security_descriptor_size_in_bytes, <newline>-                       &security_descriptor_size_in_bytes)) { <newline>-    return false; <newline>-  } <newline>- <newline>-  temp_file_handle_for_security_desc.Set(INVALID_HANDLE_VALUE); <newline>- <newline>-  if (!MoveFileEx(source_file_path.c_str(), target_file_path.c_str(), <newline>-                  MOVEFILE_COPY_ALLOWED)) { <newline>-    return false; <newline>-  } <newline>- <newline>-  return !!SetFileSecurity(target_file_path.c_str(), <newline>-                           DACL_SECURITY_INFORMATION, <newline>-                           security_descriptor.get()); <newline>+  // The parameters to SHFileOperation must be terminated with 2 NULL chars. <newline>+  std::wstring source = source_file_path; <newline>+  std::wstring target = target_file_path; <newline>+ <newline>+  source.append(1, L'\0'); <newline>+  target.append(1, L'\0'); <newline>+ <newline>+  SHFILEOPSTRUCT move_info = {0}; <newline>+  move_info.wFunc = FO_MOVE; <newline>+  move_info.pFrom = source.c_str(); <newline>+  move_info.pTo = target.c_str(); <newline>+  move_info.fFlags = FOF_SILENT | FOF_NOCONFIRMATION | FOF_NOERRORUI | <newline>+                     FOF_NOCONFIRMMKDIR | FOF_NOCOPYSECURITYATTRIBS; <newline>+ <newline>+  if (0 != SHFileOperation(&move_info)) <newline>+   return false; <newline>+ <newline>+  return true; <newline> } <newline> // Gets the current working directory for the process.
e16adb506bee0650584c64575423e2d120c75bd	nsylvain@chromium.org <nsylvain@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Oct 27 14:41:51 2008 +0000	Make sure it's possible to download to a network share. The function to move the file was failing to set the security descriptor. Now we use SHFileOperation, which has a flag to do everything we want. Eventually we might want to display ui on errors and use the ui features of SHFileOperation, but for the 1.0 build we want to stick to a smaller and less risky change.	984		http://codereview.chromium.org/8128	svn://svn.chromium.org/chrome/trunk/src@3996 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/base/file_util_win.cc b/base/file_util_win.cc <newline>index 9c34ab3..9d775f0 100644 <newline>--- a/base/file_util_win.cc <newline>+++ b/base/file_util_win.cc <newline>@@ -535,47 +535,24 @@ int WriteFile(const std::wstring& filename, const char* data, int size) { <newline> bool RenameFileAndResetSecurityDescriptor( <newline>     const std::wstring& source_file_path, <newline>     const std::wstring& target_file_path) { <newline>-  // The MoveFile API does not reset the security descriptor on the target <newline>-  // file. To ensure that the target file gets the correct security descriptor <newline>-  // we create the target file initially in the target path, read its security <newline>-  // descriptor and stamp this descriptor on the target file after the MoveFile <newline>-  // API completes. <newline>-  ScopedHandle temp_file_handle_for_security_desc( <newline>-      CreateFileW(target_file_path.c_str(), GENERIC_READ | GENERIC_WRITE, <newline>-                  FILE_SHARE_READ, NULL, OPEN_ALWAYS, <newline>-                  FILE_ATTRIBUTE_NORMAL | FILE_FLAG_DELETE_ON_CLOSE, <newline>-                  NULL)); <newline>-  if (!temp_file_handle_for_security_desc.IsValid()) <newline>-    return false; <newline>- <newline>-  // Check how much we should allocate for the security descriptor. <newline>-  unsigned long security_descriptor_size_in_bytes = 0; <newline>-  GetFileSecurity(target_file_path.c_str(), DACL_SECURITY_INFORMATION, NULL, 0, <newline>-                  &security_descriptor_size_in_bytes); <newline>-  if (ERROR_INSUFFICIENT_BUFFER != GetLastError() || <newline>-      security_descriptor_size_in_bytes == 0) <newline>-    return false; <newline>- <newline>-  scoped_array<char> security_descriptor( <newline>-      new char[security_descriptor_size_in_bytes]); <newline>- <newline>-  if (!GetFileSecurity(target_file_path.c_str(), DACL_SECURITY_INFORMATION, <newline>-                       security_descriptor.get(), <newline>-                       security_descriptor_size_in_bytes, <newline>-                       &security_descriptor_size_in_bytes)) { <newline>-    return false; <newline>-  } <newline>- <newline>-  temp_file_handle_for_security_desc.Set(INVALID_HANDLE_VALUE); <newline>- <newline>-  if (!MoveFileEx(source_file_path.c_str(), target_file_path.c_str(), <newline>-                  MOVEFILE_COPY_ALLOWED)) { <newline>-    return false; <newline>-  } <newline>- <newline>-  return !!SetFileSecurity(target_file_path.c_str(), <newline>-                           DACL_SECURITY_INFORMATION, <newline>-                           security_descriptor.get()); <newline>+  // The parameters to SHFileOperation must be terminated with 2 NULL chars. <newline>+  std::wstring source = source_file_path; <newline>+  std::wstring target = target_file_path; <newline>+ <newline>+  source.append(1, L'\0'); <newline>+  target.append(1, L'\0'); <newline>+ <newline>+  SHFILEOPSTRUCT move_info = {0}; <newline>+  move_info.wFunc = FO_MOVE; <newline>+  move_info.pFrom = source.c_str(); <newline>+  move_info.pTo = target.c_str(); <newline>+  move_info.fFlags = FOF_SILENT | FOF_NOCONFIRMATION | FOF_NOERRORUI | <newline>+                     FOF_NOCONFIRMMKDIR | FOF_NOCOPYSECURITYATTRIBS; <newline>+ <newline>+  if (0 != SHFileOperation(&move_info)) <newline>+   return false; <newline>+ <newline>+  return true; <newline> } <newline> // Gets the current working directory for the process.
091cc1ba5c415b90501af48f6cda5467c7d64b7	fqian@google.com <fqian@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 22 23:07:54 2008 +0000	Second part of split window support in the binding part. The major change is that when a frame is loading a new page, the frame loader calls V8Proxy::clearWindowShell when it receives the first piece of data. At that point, the global object is detached from its current context. FrameLoader continues on preparing new environment, including creating new DOMWindow and security origin for the frame. When new DOMWindow is ready, the frame loader calls ScriptController::notifyNewDOMWindowReady(), which uses the existing global object to initialize the new context for the frame. Between detaching global from old context and creating new context using global, there should no JavaScript executed. The implication is that if the new page does not use JavaScript, its JS context is still created. But the overhead should be very small because V8 is warmed up already.			http://codereview.chromium.org/7838	svn://svn.chromium.org/chrome/trunk/src@3785 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/port/bindings/v8/v8_proxy.h b/webkit/port/bindings/v8/v8_proxy.h <newline>index 0923570..f1b558f 100644 <newline>--- a/webkit/port/bindings/v8/v8_proxy.h <newline>+++ b/webkit/port/bindings/v8/v8_proxy.h <newline>@@ -11,6 +11,7 @@ <newline> #include "v8_utility.h" <newline> #include "Node.h" <newline> #include "NodeFilter.h" <newline>+#include "SecurityOrigin.h"  // for WebCore::SecurityOrigin <newline> #include "PlatformString.h"  // for WebCore::String <newline> #include <wtf/HashMap.h>   // for HashMap <newline> #include <wtf/PassRefPtr.h> // so generated bindings don't have to <newline>@@ -157,18 +158,20 @@ class V8Proxy { <newline>   ~V8Proxy(); <newline>-  // Clear security token by setting the security token <newline>-  // for the context to the global object. <newline>-  void ClearSecurityToken(); <newline>+  Frame* frame() { return m_frame; } <newline>+ <newline>+  // Clear page-specific data, but keep the global object identify. <newline>+  void clearForNavigation(); <newline>-  // Clear page-specific data, exception keep the global object identify. <newline>-  void clear(); <newline>+  // Clear data before closing the frame. <newline>+  void clearForClose(); <newline>+ <newline>+  // Notify that a new DOMWindow object is ready. <newline>+  void domWindowReady(); <newline>   // Destroy the global object. <newline>   void DestroyGlobal(); <newline>-  Frame* frame() { return m_frame; } <newline>- <newline>   // TODO(mpcomplete): Need comment.  User Gesture related. <newline>   bool inlineCode() const { return m_inlineCode; } <newline>   void setInlineCode(bool value) { m_inlineCode = value; } <newline>@@ -262,21 +265,13 @@ class V8Proxy { <newline>   // is disabled and it returns true. <newline>   static bool HandleOutOfMemory(); <newline>-  // Generate the security token for a context. <newline>-  static v8::Handle<v8::Value> GenerateSecurityToken( <newline>-      v8::Local<v8::Context> context); <newline>- <newline>-  // Check if the active execution context is from the same origin <newline>-  // as the target frame. <newline>-  static bool IsFromSameOrigin(Frame* target, bool report_error); <newline>+  // Check if the active execution context can access the target frame. <newline>+  static bool CanAccessFrame(Frame* target, bool report_error); <newline>   // Check if it is safe to access the given node from the <newline>   // current security context. <newline>   static bool CheckNodeSecurity(Node* node); <newline>-  // Return true if the current security context can access the target frame. <newline>-  static bool CanAccess(Frame* target); <newline>- <newline>   static v8::Handle<v8::Value> CheckNewLegal(const v8::Arguments& args); <newline>   // Create a V8 wrapper for a C pointer <newline>@@ -421,6 +416,8 @@ class V8Proxy { <newline>   void initContextIfNeeded(); <newline>   void DisconnectEventListeners(); <newline>+  static bool CanAccessPrivate(DOMWindow* target); <newline>+ <newline>   // Check whether a V8 value is a DOM Event wrapper <newline>   static bool IsDOMEventWrapper(v8::Handle<v8::Value> obj);
747859358a1a201fc8d8e65664435b979f99c37	fqian@google.com <fqian@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 22 23:07:54 2008 +0000	Second part of split window support in the binding part. The major change is that when a frame is loading a new page, the frame loader calls V8Proxy::clearWindowShell when it receives the first piece of data. At that point, the global object is detached from its current context. FrameLoader continues on preparing new environment, including creating new DOMWindow and security origin for the frame. When new DOMWindow is ready, the frame loader calls ScriptController::notifyNewDOMWindowReady(), which uses the existing global object to initialize the new context for the frame. Between detaching global from old context and creating new context using global, there should no JavaScript executed. The implication is that if the new page does not use JavaScript, its JS context is still created. But the overhead should be very small because V8 is warmed up already.			http://codereview.chromium.org/7838	svn://svn.chromium.org/chrome/trunk/src@3785 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/port/bindings/v8/v8_proxy.h b/webkit/port/bindings/v8/v8_proxy.h <newline>index 0923570..f1b558f 100644 <newline>--- a/webkit/port/bindings/v8/v8_proxy.h <newline>+++ b/webkit/port/bindings/v8/v8_proxy.h <newline>@@ -11,6 +11,7 @@ <newline> #include "v8_utility.h" <newline> #include "Node.h" <newline> #include "NodeFilter.h" <newline>+#include "SecurityOrigin.h"  // for WebCore::SecurityOrigin <newline> #include "PlatformString.h"  // for WebCore::String <newline> #include <wtf/HashMap.h>   // for HashMap <newline> #include <wtf/PassRefPtr.h> // so generated bindings don't have to <newline>@@ -157,18 +158,20 @@ class V8Proxy { <newline>   ~V8Proxy(); <newline>-  // Clear security token by setting the security token <newline>-  // for the context to the global object. <newline>-  void ClearSecurityToken(); <newline>+  Frame* frame() { return m_frame; } <newline>+ <newline>+  // Clear page-specific data, but keep the global object identify. <newline>+  void clearForNavigation(); <newline>-  // Clear page-specific data, exception keep the global object identify. <newline>-  void clear(); <newline>+  // Clear data before closing the frame. <newline>+  void clearForClose(); <newline>+ <newline>+  // Notify that a new DOMWindow object is ready. <newline>+  void domWindowReady(); <newline>   // Destroy the global object. <newline>   void DestroyGlobal(); <newline>-  Frame* frame() { return m_frame; } <newline>- <newline>   // TODO(mpcomplete): Need comment.  User Gesture related. <newline>   bool inlineCode() const { return m_inlineCode; } <newline>   void setInlineCode(bool value) { m_inlineCode = value; } <newline>@@ -262,21 +265,13 @@ class V8Proxy { <newline>   // is disabled and it returns true. <newline>   static bool HandleOutOfMemory(); <newline>-  // Generate the security token for a context. <newline>-  static v8::Handle<v8::Value> GenerateSecurityToken( <newline>-      v8::Local<v8::Context> context); <newline>- <newline>-  // Check if the active execution context is from the same origin <newline>-  // as the target frame. <newline>-  static bool IsFromSameOrigin(Frame* target, bool report_error); <newline>+  // Check if the active execution context can access the target frame. <newline>+  static bool CanAccessFrame(Frame* target, bool report_error); <newline>   // Check if it is safe to access the given node from the <newline>   // current security context. <newline>   static bool CheckNodeSecurity(Node* node); <newline>-  // Return true if the current security context can access the target frame. <newline>-  static bool CanAccess(Frame* target); <newline>- <newline>   static v8::Handle<v8::Value> CheckNewLegal(const v8::Arguments& args); <newline>   // Create a V8 wrapper for a C pointer <newline>@@ -421,6 +416,8 @@ class V8Proxy { <newline>   void initContextIfNeeded(); <newline>   void DisconnectEventListeners(); <newline>+  static bool CanAccessPrivate(DOMWindow* target); <newline>+ <newline>   // Check whether a V8 value is a DOM Event wrapper <newline>   static bool IsDOMEventWrapper(v8::Handle<v8::Value> obj);
7a0bb860f0465e70c04443a85487421b6c59069	mmoss@google.com <mmoss@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 21 23:09:47 2008 +0000	* Enable HTMLCanvasElement::toDataURL() method for Javascript. Merge changes from WebKit CLs 30888 and 30954 (WebKit/WebCore/html/HTMLCanvasElement.idl). This fixes LayoutTests: LayoutTests/http/tests/security/canvas-remote-read-remote-image.html			http://codereview.chromium.org/8023	svn://svn.chromium.org/chrome/trunk/src@3700 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>index bb314eb..0d36c77 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>@@ -904,7 +904,6 @@ V8 | KJS # LayoutTests/fast/transforms/overflow-with-transform.html = FAIL <newline> V8 | KJS # LayoutTests/fast/transforms/shadows.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/misc/acid3.html = FAIL <newline> V8 | KJS # DEFER : LayoutTests/http/tests/misc/frame-default-enc-same-domain.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/canvas-remote-read-remote-image.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/cross-frame-access-object-prototype.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/cross-origin-xsl-BLOCKED.html = FAIL
296ac4b146d7614d812dc56aeee53c14459b342	mmoss@google.com <mmoss@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Tue Oct 21 23:09:47 2008 +0000	* Enable HTMLCanvasElement::toDataURL() method for Javascript. Merge changes from WebKit CLs 30888 and 30954 (WebKit/WebCore/html/HTMLCanvasElement.idl). This fixes LayoutTests: LayoutTests/http/tests/security/canvas-remote-read-remote-image.html			http://codereview.chromium.org/8023	svn://svn.chromium.org/chrome/trunk/src@3700 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>index bb314eb..0d36c77 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/win/tests_fixable.txt <newline>@@ -904,7 +904,6 @@ V8 | KJS # LayoutTests/fast/transforms/overflow-with-transform.html = FAIL <newline> V8 | KJS # LayoutTests/fast/transforms/shadows.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/misc/acid3.html = FAIL <newline> V8 | KJS # DEFER : LayoutTests/http/tests/misc/frame-default-enc-same-domain.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/canvas-remote-read-remote-image.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/cross-frame-access-object-prototype.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/cross-origin-xsl-BLOCKED.html = FAIL
da8a22836942060370c0d4086a8436c93aeafa2	ager@google.com <ager@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 8 07:40:31 2008 +0000	Follow http://trac.webkit.org/changeset/34506 and pass the active document to document.open.  This fixes 5 layout tests in http/tests/security/aboutBlank.			http://codereview.chromium.org/6337	svn://svn.chromium.org/chrome/trunk/src@2998 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index 9f6b14f..323738e 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -975,14 +975,8 @@ V8 | KJS # LayoutTests/http/tests/misc/acid3.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/misc/frame-default-enc-same-domain.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/navigation/reload-subframe-frame.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/navigation/reload-subframe-iframe.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-alias.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/security-context.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/security-context-window-open.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/security-context-with-base-tag.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/canvas-remote-read-remote-image.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/cookies/document-open.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/cross-frame-access-object-prototype.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/cross-origin-xsl-BLOCKED.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/xss-DENIED-synchronous-form.html = FAIL <newline>@@ -1291,7 +1285,6 @@ V8 | KJS # LayoutTests/fast/css/font-face-multiple-faces.html = FAIL <newline> // Post-merge Timeouts: Definitely need to be fixed one day <newline> V8 | KJS # LayoutTests/fast/js/exceptions-thrown-in-callbacks.html = TIMEOUT <newline> V8 | KJS # LayoutTests/http/tests/security/cross-frame-access-call.html = TIMEOUT <newline>-V8 | KJS # LayoutTests/http/tests/security/frame-loading-via-document-write.html = TIMEOUT <newline> // Post-merge Debug only Crashes <newline> V8 | KJS # LayoutTests/http/tests/misc/onload-remove-iframe-crash-2.html = CRASH | PASS
8da0a6b014434b1588c19052608f51cb94b5fa2	ager@google.com <ager@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Oct 8 07:40:31 2008 +0000	Follow http://trac.webkit.org/changeset/34506 and pass the active document to document.open.  This fixes 5 layout tests in http/tests/security/aboutBlank.			http://codereview.chromium.org/6337	svn://svn.chromium.org/chrome/trunk/src@2998 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/layout_tests/test_lists/tests_fixable.txt b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>index 9f6b14f..323738e 100644 <newline>--- a/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>+++ b/webkit/tools/layout_tests/test_lists/tests_fixable.txt <newline>@@ -975,14 +975,8 @@ V8 | KJS # LayoutTests/http/tests/misc/acid3.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/misc/frame-default-enc-same-domain.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/navigation/reload-subframe-frame.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/navigation/reload-subframe-iframe.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren-alias.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/security-context-grandchildren.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/security-context.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/security-context-window-open.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/aboutBlank/security-context-with-base-tag.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/canvas-remote-read-remote-image.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/canvas-remote-read-svg-image.html = FAIL <newline>-V8 | KJS # LayoutTests/http/tests/security/cookies/document-open.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/cross-frame-access-object-prototype.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/cross-origin-xsl-BLOCKED.html = FAIL <newline> V8 | KJS # LayoutTests/http/tests/security/xss-DENIED-synchronous-form.html = FAIL <newline>@@ -1291,7 +1285,6 @@ V8 | KJS # LayoutTests/fast/css/font-face-multiple-faces.html = FAIL <newline> // Post-merge Timeouts: Definitely need to be fixed one day <newline> V8 | KJS # LayoutTests/fast/js/exceptions-thrown-in-callbacks.html = TIMEOUT <newline> V8 | KJS # LayoutTests/http/tests/security/cross-frame-access-call.html = TIMEOUT <newline>-V8 | KJS # LayoutTests/http/tests/security/frame-loading-via-document-write.html = TIMEOUT <newline> // Post-merge Debug only Crashes <newline> V8 | KJS # LayoutTests/http/tests/misc/onload-remove-iframe-crash-2.html = CRASH | PASS
2fba4577873eef878fb58d4a8ca9b8132c90647	jcampan@chromium.org <jcampan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 24 17:42:42 2008 +0000	This CL adds new UI tests for the SSL UI. Some more info: SSL UI Tests: Added new tests for redirects and frames. Also improved the mixed-content test to exercise the "block mixed-contents" preference and the show info-bar. Automation: For the new UI tests, added methods to tab_proxy and browser_proxy. The ones of most interest are GetLastNavigatinTime and WaitForNavigation that ensures we wait for a navigation to occur or have occured when taking actions that asynchronously trigger navigations. Resource loading: Added a flag to the response we get when loading a resource that indicates whether that resource was filtered (blocked or altered) by the security peer. We use this flag to notify back the browser when we report a load has been committed. This is so the SSL manager knows a frame has been filtered (in which case we have no cert info but should not consider that as unsafe).	2004	erver http_server(kDocRoot);	http://codereview.chromium.org/3165	svn://svn.chromium.org/chrome/trunk/src@2553 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index 336e42a..ce7157b 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -143,9 +143,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>       peer_->OnReceivedRedirect(new_url); <newline>   } <newline>-  void NotifyReceivedResponse(const ResourceLoaderBridge::ResponseInfo& info) { <newline>+  void NotifyReceivedResponse(const ResourceLoaderBridge::ResponseInfo& info, <newline>+                              bool content_filtered) { <newline>     if (peer_) <newline>-      peer_->OnReceivedResponse(info); <newline>+      peer_->OnReceivedResponse(info, content_filtered); <newline>   } <newline>   void NotifyReceivedData(int bytes_read) { <newline>@@ -231,9 +232,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>   } <newline>   virtual void OnReceivedResponse( <newline>-      const ResourceLoaderBridge::ResponseInfo& info) { <newline>+      const ResourceLoaderBridge::ResponseInfo& info, <newline>+      bool content_filtered) { <newline>     owner_loop_->PostTask(FROM_HERE, NewRunnableMethod( <newline>-        this, &RequestProxy::NotifyReceivedResponse, info)); <newline>+        this, &RequestProxy::NotifyReceivedResponse, info, content_filtered)); <newline>   } <newline>   virtual void OnReceivedData(int bytes_read) { <newline>@@ -263,7 +265,7 @@ class RequestProxy : public URLRequest::Delegate, <newline>       info.headers = request->response_headers(); <newline>       request->GetMimeType(&info.mime_type); <newline>       request->GetCharset(&info.charset); <newline>-      OnReceivedResponse(info); <newline>+      OnReceivedResponse(info, false); <newline>       AsyncReadData();  // start reading <newline>     } else { <newline>       Done(); <newline>@@ -324,7 +326,8 @@ class SyncRequestProxy : public RequestProxy { <newline>   } <newline>   virtual void OnReceivedResponse( <newline>-      const ResourceLoaderBridge::ResponseInfo& info) { <newline>+      const ResourceLoaderBridge::ResponseInfo& info, <newline>+      bool content_filtered) { <newline>     *static_cast<ResourceLoaderBridge::ResponseInfo*>(result_) = info; <newline>   }
a3422c9488ce79e305973d29a01811762e35465	jcampan@chromium.org <jcampan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 24 17:42:42 2008 +0000	This CL adds new UI tests for the SSL UI. Some more info: SSL UI Tests: Added new tests for redirects and frames. Also improved the mixed-content test to exercise the "block mixed-contents" preference and the show info-bar. Automation: For the new UI tests, added methods to tab_proxy and browser_proxy. The ones of most interest are GetLastNavigatinTime and WaitForNavigation that ensures we wait for a navigation to occur or have occured when taking actions that asynchronously trigger navigations. Resource loading: Added a flag to the response we get when loading a resource that indicates whether that resource was filtered (blocked or altered) by the security peer. We use this flag to notify back the browser when we report a load has been committed. This is so the SSL manager knows a frame has been filtered (in which case we have no cert info but should not consider that as unsafe).	2004	erver http_server(kDocRoot);	http://codereview.chromium.org/3165	svn://svn.chromium.org/chrome/trunk/src@2553 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/tools/test_shell/simple_resource_loader_bridge.cc b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>index 336e42a..ce7157b 100644 <newline>--- a/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>+++ b/webkit/tools/test_shell/simple_resource_loader_bridge.cc <newline>@@ -143,9 +143,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>       peer_->OnReceivedRedirect(new_url); <newline>   } <newline>-  void NotifyReceivedResponse(const ResourceLoaderBridge::ResponseInfo& info) { <newline>+  void NotifyReceivedResponse(const ResourceLoaderBridge::ResponseInfo& info, <newline>+                              bool content_filtered) { <newline>     if (peer_) <newline>-      peer_->OnReceivedResponse(info); <newline>+      peer_->OnReceivedResponse(info, content_filtered); <newline>   } <newline>   void NotifyReceivedData(int bytes_read) { <newline>@@ -231,9 +232,10 @@ class RequestProxy : public URLRequest::Delegate, <newline>   } <newline>   virtual void OnReceivedResponse( <newline>-      const ResourceLoaderBridge::ResponseInfo& info) { <newline>+      const ResourceLoaderBridge::ResponseInfo& info, <newline>+      bool content_filtered) { <newline>     owner_loop_->PostTask(FROM_HERE, NewRunnableMethod( <newline>-        this, &RequestProxy::NotifyReceivedResponse, info)); <newline>+        this, &RequestProxy::NotifyReceivedResponse, info, content_filtered)); <newline>   } <newline>   virtual void OnReceivedData(int bytes_read) { <newline>@@ -263,7 +265,7 @@ class RequestProxy : public URLRequest::Delegate, <newline>       info.headers = request->response_headers(); <newline>       request->GetMimeType(&info.mime_type); <newline>       request->GetCharset(&info.charset); <newline>-      OnReceivedResponse(info); <newline>+      OnReceivedResponse(info, false); <newline>       AsyncReadData();  // start reading <newline>     } else { <newline>       Done(); <newline>@@ -324,7 +326,8 @@ class SyncRequestProxy : public RequestProxy { <newline>   } <newline>   virtual void OnReceivedResponse( <newline>-      const ResourceLoaderBridge::ResponseInfo& info) { <newline>+      const ResourceLoaderBridge::ResponseInfo& info, <newline>+      bool content_filtered) { <newline>     *static_cast<ResourceLoaderBridge::ResponseInfo*>(result_) = info; <newline>   }
37f17e8c3b4054a74d8823b40cde3468384f107	jar@google.com <jar@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Sep 22 17:24:28 2008 +0000	Experimental integration of delta compression content encoding The command line option "sdch-enable" enables support of sdch and automtic lazy download of dictionaries.  Optionally it can select a singular domain to work from. By default, all domains are enabled when the flag is used. "-sdch-enable=".google.com"  Enables it only for Google. When the switch is not set on the command line, all this code is completely disabled. Still TBD: a) Finish implementation of security details (much of it is in place) b) Add tests for security details. r=huanr,ajenjo,kmixter			http://codereview.chromium.org/461	svn://svn.chromium.org/chrome/trunk/src@2443 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_job.h b/net/url_request/url_request_job.h <newline>index b70bbc7..1e4a089 100644 <newline>--- a/net/url_request/url_request_job.h <newline>+++ b/net/url_request/url_request_job.h <newline>@@ -5,6 +5,7 @@ <newline> #ifndef NET_URL_REQUEST_URL_REQUEST_JOB_H_ <newline> #define NET_URL_REQUEST_URL_REQUEST_JOB_H_ <newline>+#include <string> <newline> #include <vector> <newline> #include "base/basictypes.h" <newline>@@ -28,7 +29,7 @@ class URLRequestJobMetrics; <newline> // UrlRequestFileJob. <newline> class URLRequestJob : public base::RefCountedThreadSafe<URLRequestJob> { <newline>  public: <newline>-  URLRequestJob(URLRequest* request); <newline>+  explicit URLRequestJob(URLRequest* request); <newline>   virtual ~URLRequestJob(); <newline>   // Returns the request that owns this job. THIS POINTER MAY BE NULL if the <newline>@@ -44,7 +45,8 @@ class URLRequestJob : public base::RefCountedThreadSafe<URLRequestJob> { <newline>   // Sets extra request headers for Job types that support request headers. <newline>   virtual void SetExtraRequestHeaders(const std::string& headers) { } <newline>-  // If any error occurs while starting the Job, NotifyStartError should be called. <newline>+  // If any error occurs while starting the Job, NotifyStartError should be <newline>+  // called. <newline>   // This helps ensure that all errors follow more similar notification code <newline>   // paths, which should simplify testing. <newline>   virtual void Start() = 0; <newline>@@ -108,10 +110,18 @@ class URLRequestJob : public base::RefCountedThreadSafe<URLRequestJob> { <newline>   // Returns the HTTP response code for the request. <newline>   virtual int GetResponseCode() { return -1; } <newline>-  // Called to fetch the encoding type for this request. Only makes sense for <newline>+  // Called to fetch the encoding types for this request. Only makes sense for <newline>   // some types of requests. Returns true on success. Calling this on a request <newline>   // that doesn't have or specify an encoding type will return false. <newline>-  virtual bool GetContentEncoding(std::string* encoding_type) { return false; } <newline>+  // Returns a array of strings showing the sequential encodings used on the <newline>+  // content.  For example, types[0] = "sdch" and types[1] = gzip, means the <newline>+  // content was first encoded by sdch, and then encoded by gzip.  To decode, <newline>+  // a series of filters must be applied in the reverse order (in the above <newline>+  // example, ungzip first, and then sdch expand). <newline>+  // TODO(jar): Cleaner API would return an array of enums. <newline>+  virtual bool GetContentEncodings(std::vector<std::string>* encoding_types) { <newline>+    return false; <newline>+  } <newline>   // Called to setup stream filter for this request. An example of filter is <newline>   // content encoding/decoding.
08f62e0b5a9b722c89346a192198b1da8e782dd	jar@google.com <jar@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Sep 22 17:24:28 2008 +0000	Experimental integration of delta compression content encoding The command line option "sdch-enable" enables support of sdch and automtic lazy download of dictionaries.  Optionally it can select a singular domain to work from. By default, all domains are enabled when the flag is used. "-sdch-enable=".google.com"  Enables it only for Google. When the switch is not set on the command line, all this code is completely disabled. Still TBD: a) Finish implementation of security details (much of it is in place) b) Add tests for security details. r=huanr,ajenjo,kmixter			http://codereview.chromium.org/461	svn://svn.chromium.org/chrome/trunk/src@2443 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/url_request/url_request_job.h b/net/url_request/url_request_job.h <newline>index b70bbc7..1e4a089 100644 <newline>--- a/net/url_request/url_request_job.h <newline>+++ b/net/url_request/url_request_job.h <newline>@@ -5,6 +5,7 @@ <newline> #ifndef NET_URL_REQUEST_URL_REQUEST_JOB_H_ <newline> #define NET_URL_REQUEST_URL_REQUEST_JOB_H_ <newline>+#include <string> <newline> #include <vector> <newline> #include "base/basictypes.h" <newline>@@ -28,7 +29,7 @@ class URLRequestJobMetrics; <newline> // UrlRequestFileJob. <newline> class URLRequestJob : public base::RefCountedThreadSafe<URLRequestJob> { <newline>  public: <newline>-  URLRequestJob(URLRequest* request); <newline>+  explicit URLRequestJob(URLRequest* request); <newline>   virtual ~URLRequestJob(); <newline>   // Returns the request that owns this job. THIS POINTER MAY BE NULL if the <newline>@@ -44,7 +45,8 @@ class URLRequestJob : public base::RefCountedThreadSafe<URLRequestJob> { <newline>   // Sets extra request headers for Job types that support request headers. <newline>   virtual void SetExtraRequestHeaders(const std::string& headers) { } <newline>-  // If any error occurs while starting the Job, NotifyStartError should be called. <newline>+  // If any error occurs while starting the Job, NotifyStartError should be <newline>+  // called. <newline>   // This helps ensure that all errors follow more similar notification code <newline>   // paths, which should simplify testing. <newline>   virtual void Start() = 0; <newline>@@ -108,10 +110,18 @@ class URLRequestJob : public base::RefCountedThreadSafe<URLRequestJob> { <newline>   // Returns the HTTP response code for the request. <newline>   virtual int GetResponseCode() { return -1; } <newline>-  // Called to fetch the encoding type for this request. Only makes sense for <newline>+  // Called to fetch the encoding types for this request. Only makes sense for <newline>   // some types of requests. Returns true on success. Calling this on a request <newline>   // that doesn't have or specify an encoding type will return false. <newline>-  virtual bool GetContentEncoding(std::string* encoding_type) { return false; } <newline>+  // Returns a array of strings showing the sequential encodings used on the <newline>+  // content.  For example, types[0] = "sdch" and types[1] = gzip, means the <newline>+  // content was first encoded by sdch, and then encoded by gzip.  To decode, <newline>+  // a series of filters must be applied in the reverse order (in the above <newline>+  // example, ungzip first, and then sdch expand). <newline>+  // TODO(jar): Cleaner API would return an array of enums. <newline>+  virtual bool GetContentEncodings(std::vector<std::string>* encoding_types) { <newline>+    return false; <newline>+  } <newline>   // Called to setup stream filter for this request. An example of filter is <newline>   // content encoding/decoding.
3f071f5e41eaec5fa176356b0d5f0c712e2ba76	wtc@google.com <wtc@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 17 20:54:40 2008 +0000	First cut at SSL certificate error handling.  Map security error codes to our network error codes and pass the certificate and its status up the stack. There are still some rough edges and hardcoded settings, but it is basically functional. R=rvargas	b/1272567		http://codereview.chromium.org/2898	svn://svn.chromium.org/chrome/trunk/src@2331 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/http/http_network_transaction.h b/net/http/http_network_transaction.h <newline>index 07e2da6..3fb2285 100644 <newline>--- a/net/http/http_network_transaction.h <newline>+++ b/net/http/http_network_transaction.h <newline>@@ -77,6 +77,11 @@ class HttpNetworkTransaction : public HttpTransaction { <newline>   // Called when header_buf_ contains the complete response headers. <newline>   int DidReadResponseHeaders(); <newline>+  // Called to handle a certificate error.  Returns OK if the error should be <newline>+  // ignored.  Otherwise, stores the certificate in response_.ssl_info and <newline>+  // returns the same error code. <newline>+  int HandleCertificateError(int error); <newline>+ <newline>   // Called to possibly recover from the given error.  Sets next_state_ and <newline>   // returns OK if recovering from the error.  Otherwise, the same error code <newline>   // is returned.
cb40e535b2684b40476904cd4292738bf7126aa	wtc@google.com <wtc@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 17 20:54:40 2008 +0000	First cut at SSL certificate error handling.  Map security error codes to our network error codes and pass the certificate and its status up the stack. There are still some rough edges and hardcoded settings, but it is basically functional. R=rvargas	b/1272567		http://codereview.chromium.org/2898	svn://svn.chromium.org/chrome/trunk/src@2331 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/http/http_network_transaction.h b/net/http/http_network_transaction.h <newline>index 07e2da6..3fb2285 100644 <newline>--- a/net/http/http_network_transaction.h <newline>+++ b/net/http/http_network_transaction.h <newline>@@ -77,6 +77,11 @@ class HttpNetworkTransaction : public HttpTransaction { <newline>   // Called when header_buf_ contains the complete response headers. <newline>   int DidReadResponseHeaders(); <newline>+  // Called to handle a certificate error.  Returns OK if the error should be <newline>+  // ignored.  Otherwise, stores the certificate in response_.ssl_info and <newline>+  // returns the same error code. <newline>+  int HandleCertificateError(int error); <newline>+ <newline>   // Called to possibly recover from the given error.  Sets next_state_ and <newline>   // returns OK if recovering from the error.  Otherwise, the same error code <newline>   // is returned.
39321436d4fd8d1d5f39f3f7316753cda493666	maruel@google.com <maruel@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 17 16:25:24 2008 +0000	Apply the security patch by Daniel Veillard (against libxml2 2.6.32).				svn://svn.chromium.org/chrome/trunk/src@2309 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libxml/parser.c b/third_party/libxml/parser.c <newline>index d12f429..fab0ea8 100644 <newline>--- a/third_party/libxml/parser.c <newline>+++ b/third_party/libxml/parser.c <newline>@@ -2307,6 +2307,7 @@ xmlParserHandlePEReference(xmlParserCtxtPtr ctxt) { <newline>  */ <newline> #define growBuffer(buffer) {						\ <newline>     xmlChar *tmp;							\ <newline>+    buffer##_size += XML_PARSER_BUFFER_SIZE ;				\ <newline>     buffer##_size *= 2;							\ <newline>     tmp = (xmlChar *)							\ <newline> 		xmlRealloc(buffer, buffer##_size * sizeof(xmlChar));	\ <newline>@@ -3347,7 +3348,7 @@ xmlParseAttValueComplex(xmlParserCtxtPtr ctxt, int *attlen, int normalize) { <newline> 		     * Just output the reference <newline> 		     */ <newline> 		    buf[len++] = '&'; <newline>-		    if (len > buf_size - i - 10) { <newline>+		    while (len > buf_size - i - 10) { <newline> 			growBuffer(buf); <newline> 		    } <newline> 		    for (;i > 0;i--)
753fae33db5da0f5ca75490ea0eff8c91084392	maruel@google.com <maruel@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Wed Sep 17 16:25:24 2008 +0000	Apply the security patch by Daniel Veillard (against libxml2 2.6.32).				svn://svn.chromium.org/chrome/trunk/src@2309 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/third_party/libxml/parser.c b/third_party/libxml/parser.c <newline>index d12f429..fab0ea8 100644 <newline>--- a/third_party/libxml/parser.c <newline>+++ b/third_party/libxml/parser.c <newline>@@ -2307,6 +2307,7 @@ xmlParserHandlePEReference(xmlParserCtxtPtr ctxt) { <newline>  */ <newline> #define growBuffer(buffer) {						\ <newline>     xmlChar *tmp;							\ <newline>+    buffer##_size += XML_PARSER_BUFFER_SIZE ;				\ <newline>     buffer##_size *= 2;							\ <newline>     tmp = (xmlChar *)							\ <newline> 		xmlRealloc(buffer, buffer##_size * sizeof(xmlChar));	\ <newline>@@ -3347,7 +3348,7 @@ xmlParseAttValueComplex(xmlParserCtxtPtr ctxt, int *attlen, int normalize) { <newline> 		     * Just output the reference <newline> 		     */ <newline> 		    buf[len++] = '&'; <newline>-		    if (len > buf_size - i - 10) { <newline>+		    while (len > buf_size - i - 10) { <newline> 			growBuffer(buf); <newline> 		    } <newline> 		    for (;i > 0;i--)
87953bd087394c7eca0df31a727a5c9e4865d7e	erg@google.com <erg@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Sep 11 20:55:28 2008 +0000	Fix crasher and possible security vulnerability in popup handling. B=1368898			http://codereview.chromium.org/2437	svn://svn.chromium.org/chrome/trunk/src@2079 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/views/constrained_window_impl.h b/chrome/browser/views/constrained_window_impl.h <newline>index 46022ae..4218918 100644 <newline>--- a/chrome/browser/views/constrained_window_impl.h <newline>+++ b/chrome/browser/views/constrained_window_impl.h <newline>@@ -93,6 +93,9 @@ class ConstrainedWindowImpl : public ConstrainedWindow, <newline>   // this suppressed constrained popup window. <newline>   void StartSuppressedAnimation(); <newline>+  // Stops the ConstrainedWindowAnimation, making the entire titlebar visible. <newline>+  void StopSuppressedAnimation(); <newline>+ <newline>  protected: <newline>   // Windows message handlers: <newline>   virtual void OnDestroy(); <newline>@@ -202,4 +205,3 @@ class ConstrainedWindowImpl : public ConstrainedWindow, <newline> }; <newline> #endif  // #ifndef CHROME_BROWSER_CONSTRAINED_WINDOW_IMPL_H_ <newline>-
41b2e088b53789192997b8a951d56594bc39c80	erg@google.com <erg@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Sep 11 20:55:28 2008 +0000	Fix crasher and possible security vulnerability in popup handling. B=1368898			http://codereview.chromium.org/2437	svn://svn.chromium.org/chrome/trunk/src@2079 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/views/constrained_window_impl.h b/chrome/browser/views/constrained_window_impl.h <newline>index 46022ae..4218918 100644 <newline>--- a/chrome/browser/views/constrained_window_impl.h <newline>+++ b/chrome/browser/views/constrained_window_impl.h <newline>@@ -93,6 +93,9 @@ class ConstrainedWindowImpl : public ConstrainedWindow, <newline>   // this suppressed constrained popup window. <newline>   void StartSuppressedAnimation(); <newline>+  // Stops the ConstrainedWindowAnimation, making the entire titlebar visible. <newline>+  void StopSuppressedAnimation(); <newline>+ <newline>  protected: <newline>   // Windows message handlers: <newline>   virtual void OnDestroy(); <newline>@@ -202,4 +205,3 @@ class ConstrainedWindowImpl : public ConstrainedWindow, <newline> }; <newline> #endif  // #ifndef CHROME_BROWSER_CONSTRAINED_WINDOW_IMPL_H_ <newline>-
db49ebc782c3495bb0c35bd5f8a454acd2cff95	sky@google.com <sky@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Sep 11 16:41:18 2008 +0000	Changes session service to not persist NavigationEntries that have POST data. This is a security problem as POST data can contain passwords in plain text. TEST=none	1361980			svn://svn.chromium.org/chrome/trunk/src@2063 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/tab_restore_service.cc b/chrome/browser/tab_restore_service.cc <newline>index ef7a973..9b3bd4a 100644 <newline>--- a/chrome/browser/tab_restore_service.cc <newline>+++ b/chrome/browser/tab_restore_service.cc <newline>@@ -156,7 +156,6 @@ void TabRestoreService::PopulateTabFromController( <newline>     NavigationEntry* entry = (i == pending_index) ? <newline>         controller->GetPendingEntry() : controller->GetEntryAtIndex(i); <newline>     TabNavigation& tab_nav = tab->navigations[i]; <newline>-    tab_nav.index = i; <newline>     tab_nav.url = entry->display_url(); <newline>     tab_nav.title = entry->title(); <newline>     tab_nav.state = entry->content_state();
b2d1bb6e8acca107f19d7e7b26492ad5e033f3e	sky@google.com <sky@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Thu Sep 11 16:41:18 2008 +0000	Changes session service to not persist NavigationEntries that have POST data. This is a security problem as POST data can contain passwords in plain text. TEST=none	1361980			svn://svn.chromium.org/chrome/trunk/src@2063 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/chrome/browser/tab_restore_service.cc b/chrome/browser/tab_restore_service.cc <newline>index ef7a973..9b3bd4a 100644 <newline>--- a/chrome/browser/tab_restore_service.cc <newline>+++ b/chrome/browser/tab_restore_service.cc <newline>@@ -156,7 +156,6 @@ void TabRestoreService::PopulateTabFromController( <newline>     NavigationEntry* entry = (i == pending_index) ? <newline>         controller->GetPendingEntry() : controller->GetEntryAtIndex(i); <newline>     TabNavigation& tab_nav = tab->navigations[i]; <newline>-    tab_nav.index = i; <newline>     tab_nav.url = entry->display_url(); <newline>     tab_nav.title = entry->title(); <newline>     tab_nav.state = entry->content_state();
e664b476ef900ec5784958e9525832075033f49	wtc@google.com <wtc@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 22 22:57:18 2008 +0000	We can link with secur32.lib and call the SSPI functions directly. The Platform SDK sample code loads the DLL and looks up the function pointer table dynamically, probably because it was written back when Win 9x and NT used different DLLs (secur32.dll and security.dll). R=maruel,darin	1272567			svn://svn.chromium.org/chrome/trunk/src@1256 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/ssl_client_socket.cc b/net/base/ssl_client_socket.cc <newline>index 90f95de..ea5ec2e 100644 <newline>--- a/net/base/ssl_client_socket.cc <newline>+++ b/net/base/ssl_client_socket.cc <newline>@@ -36,37 +36,9 @@ <newline> #include "net/base/net_errors.h" <newline> #include "net/base/ssl_info.h" <newline>-namespace net { <newline>- <newline>-//----------------------------------------------------------------------------- <newline>- <newline>-class SChannelLib { <newline>- public: <newline>-  PSecurityFunctionTable funcs; <newline>- <newline>-  SChannelLib() : funcs(NULL) { <newline>-    lib_ = LoadLibrary(L"secur32.dll"); <newline>-    if (lib_) { <newline>-      INIT_SECURITY_INTERFACE init_security_interface = <newline>-          reinterpret_cast<INIT_SECURITY_INTERFACE>( <newline>-              GetProcAddress(lib_, "InitSecurityInterfaceW")); <newline>-      if (init_security_interface) <newline>-        funcs = init_security_interface(); <newline>-    } <newline>-  } <newline>+#pragma comment(lib, "secur32.lib") <newline>-  ~SChannelLib() { <newline>-    if (lib_) <newline>-      FreeLibrary(lib_); <newline>-  } <newline>- <newline>- private: <newline>-  HMODULE lib_; <newline>-}; <newline>- <newline>-static inline PSecurityFunctionTable SChannel() { <newline>-  return Singleton<SChannelLib>()->funcs; <newline>-} <newline>+namespace net { <newline> //----------------------------------------------------------------------------- <newline>@@ -131,15 +103,15 @@ void SSLClientSocket::Disconnect() { <newline>   transport_->Disconnect(); <newline>   if (send_buffer_.pvBuffer) { <newline>-    SChannel()->FreeContextBuffer(send_buffer_.pvBuffer); <newline>+    FreeContextBuffer(send_buffer_.pvBuffer); <newline>     memset(&send_buffer_, 0, sizeof(send_buffer_)); <newline>   } <newline>   if (creds_.dwLower || creds_.dwUpper) { <newline>-    SChannel()->FreeCredentialsHandle(&creds_); <newline>+    FreeCredentialsHandle(&creds_); <newline>     memset(&creds_, 0, sizeof(creds_)); <newline>   } <newline>   if (ctxt_.dwLower || ctxt_.dwUpper) { <newline>-    SChannel()->DeleteSecurityContext(&ctxt_); <newline>+    DeleteSecurityContext(&ctxt_); <newline>     memset(&ctxt_, 0, sizeof(ctxt_)); <newline>   } <newline>   // TODO(wtc): reset more members? <newline>@@ -208,17 +180,17 @@ int SSLClientSocket::Write(const char* buf, int buf_len, <newline> void SSLClientSocket::GetSSLInfo(SSLInfo* ssl_info) { <newline>   SECURITY_STATUS status; <newline>   PCCERT_CONTEXT server_cert = NULL; <newline>-  status = SChannel()->QueryContextAttributes(&ctxt_, <newline>-                                              SECPKG_ATTR_REMOTE_CERT_CONTEXT, <newline>-                                              &server_cert); <newline>+  status = QueryContextAttributes(&ctxt_, <newline>+                                  SECPKG_ATTR_REMOTE_CERT_CONTEXT, <newline>+                                  &server_cert); <newline>   if (status == SEC_E_OK) { <newline>     DCHECK(server_cert); <newline>     ssl_info->cert = X509Certificate::CreateFromHandle(server_cert); <newline>   } <newline>   SecPkgContext_ConnectionInfo connection_info; <newline>-  status = SChannel()->QueryContextAttributes(&ctxt_, <newline>-                                              SECPKG_ATTR_CONNECTION_INFO, <newline>-                                              &connection_info); <newline>+  status = QueryContextAttributes(&ctxt_, <newline>+                                  SECPKG_ATTR_CONNECTION_INFO, <newline>+                                  &connection_info); <newline>   if (status == SEC_E_OK) { <newline>     // TODO(wtc): compute the overall security strength, taking into account <newline>     // dwExchStrength and dwHashStrength.  dwExchStrength needs to be <newline>@@ -338,7 +310,7 @@ int SSLClientSocket::DoConnectComplete(int result) { <newline>   TimeStamp expiry; <newline>   SECURITY_STATUS status; <newline>-  status = SChannel()->AcquireCredentialsHandle( <newline>+  status = AcquireCredentialsHandle( <newline>       NULL,  // Not used <newline>       UNISP_NAME,  // Microsoft Unified Security Protocol Provider <newline>       SECPKG_CRED_OUTBOUND, <newline>@@ -370,7 +342,7 @@ int SSLClientSocket::DoConnectComplete(int result) { <newline>   buffer_desc.pBuffers = &send_buffer_; <newline>   buffer_desc.ulVersion = SECBUFFER_VERSION; <newline>-  status = SChannel()->InitializeSecurityContext( <newline>+  status = InitializeSecurityContext( <newline>       &creds_, <newline>       NULL,  // NULL on the first call <newline>       const_cast<wchar_t*>(ASCIIToWide(hostname_).c_str()), <newline>@@ -454,7 +426,7 @@ int SSLClientSocket::DoHandshakeReadComplete(int result) { <newline>   send_buffer_.BufferType = SECBUFFER_TOKEN; <newline>   send_buffer_.cbBuffer = 0; <newline>-  status = SChannel()->InitializeSecurityContext( <newline>+  status = InitializeSecurityContext( <newline>       &creds_, <newline>       &ctxt_, <newline>       NULL, <newline>@@ -545,8 +517,7 @@ int SSLClientSocket::DoHandshakeWriteComplete(int result) { <newline>   if (bytes_sent_ >= static_cast<int>(send_buffer_.cbBuffer)) { <newline>     bool overflow = (bytes_sent_ > static_cast<int>(send_buffer_.cbBuffer)); <newline>-    SECURITY_STATUS status = <newline>-        SChannel()->FreeContextBuffer(send_buffer_.pvBuffer); <newline>+    SECURITY_STATUS status = FreeContextBuffer(send_buffer_.pvBuffer); <newline>     DCHECK(status == SEC_E_OK); <newline>     memset(&send_buffer_, 0, sizeof(send_buffer_)); <newline>     bytes_sent_ = 0; <newline>@@ -609,7 +580,7 @@ int SSLClientSocket::DoPayloadReadComplete(int result) { <newline>   buffer_desc.ulVersion = SECBUFFER_VERSION; <newline>   SECURITY_STATUS status; <newline>-  status = SChannel()->DecryptMessage(&ctxt_, &buffer_desc, 0, NULL); <newline>+  status = DecryptMessage(&ctxt_, &buffer_desc, 0, NULL); <newline>   if (status == SEC_E_INCOMPLETE_MESSAGE) { <newline>     next_state_ = STATE_PAYLOAD_READ; <newline>@@ -699,8 +670,7 @@ int SSLClientSocket::DoPayloadEncrypt() { <newline>   buffer_desc.pBuffers = buffers; <newline>   buffer_desc.ulVersion = SECBUFFER_VERSION; <newline>-  SECURITY_STATUS status = SChannel()->EncryptMessage( <newline>-      &ctxt_, 0, &buffer_desc, 0); <newline>+  SECURITY_STATUS status = EncryptMessage(&ctxt_, 0, &buffer_desc, 0); <newline>   if (FAILED(status)) <newline>     return ERR_FAILED; <newline>@@ -753,7 +723,7 @@ int SSLClientSocket::DoPayloadWriteComplete(int result) { <newline> } <newline> int SSLClientSocket::DidCompleteHandshake() { <newline>-  SECURITY_STATUS status = SChannel()->QueryContextAttributes( <newline>+  SECURITY_STATUS status = QueryContextAttributes( <newline>       &ctxt_, SECPKG_ATTR_STREAM_SIZES, &stream_sizes_); <newline>   if (status != SEC_E_OK) { <newline>     DLOG(ERROR) << "QueryContextAttributes failed: " << status;
795443cba67f2491ee65278e0553f7248f7d45e	wtc@google.com <wtc@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Fri Aug 22 22:57:18 2008 +0000	We can link with secur32.lib and call the SSPI functions directly. The Platform SDK sample code loads the DLL and looks up the function pointer table dynamically, probably because it was written back when Win 9x and NT used different DLLs (secur32.dll and security.dll). R=maruel,darin	1272567			svn://svn.chromium.org/chrome/trunk/src@1256 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/net/base/ssl_client_socket.cc b/net/base/ssl_client_socket.cc <newline>index 90f95de..ea5ec2e 100644 <newline>--- a/net/base/ssl_client_socket.cc <newline>+++ b/net/base/ssl_client_socket.cc <newline>@@ -36,37 +36,9 @@ <newline> #include "net/base/net_errors.h" <newline> #include "net/base/ssl_info.h" <newline>-namespace net { <newline>- <newline>-//----------------------------------------------------------------------------- <newline>- <newline>-class SChannelLib { <newline>- public: <newline>-  PSecurityFunctionTable funcs; <newline>- <newline>-  SChannelLib() : funcs(NULL) { <newline>-    lib_ = LoadLibrary(L"secur32.dll"); <newline>-    if (lib_) { <newline>-      INIT_SECURITY_INTERFACE init_security_interface = <newline>-          reinterpret_cast<INIT_SECURITY_INTERFACE>( <newline>-              GetProcAddress(lib_, "InitSecurityInterfaceW")); <newline>-      if (init_security_interface) <newline>-        funcs = init_security_interface(); <newline>-    } <newline>-  } <newline>+#pragma comment(lib, "secur32.lib") <newline>-  ~SChannelLib() { <newline>-    if (lib_) <newline>-      FreeLibrary(lib_); <newline>-  } <newline>- <newline>- private: <newline>-  HMODULE lib_; <newline>-}; <newline>- <newline>-static inline PSecurityFunctionTable SChannel() { <newline>-  return Singleton<SChannelLib>()->funcs; <newline>-} <newline>+namespace net { <newline> //----------------------------------------------------------------------------- <newline>@@ -131,15 +103,15 @@ void SSLClientSocket::Disconnect() { <newline>   transport_->Disconnect(); <newline>   if (send_buffer_.pvBuffer) { <newline>-    SChannel()->FreeContextBuffer(send_buffer_.pvBuffer); <newline>+    FreeContextBuffer(send_buffer_.pvBuffer); <newline>     memset(&send_buffer_, 0, sizeof(send_buffer_)); <newline>   } <newline>   if (creds_.dwLower || creds_.dwUpper) { <newline>-    SChannel()->FreeCredentialsHandle(&creds_); <newline>+    FreeCredentialsHandle(&creds_); <newline>     memset(&creds_, 0, sizeof(creds_)); <newline>   } <newline>   if (ctxt_.dwLower || ctxt_.dwUpper) { <newline>-    SChannel()->DeleteSecurityContext(&ctxt_); <newline>+    DeleteSecurityContext(&ctxt_); <newline>     memset(&ctxt_, 0, sizeof(ctxt_)); <newline>   } <newline>   // TODO(wtc): reset more members? <newline>@@ -208,17 +180,17 @@ int SSLClientSocket::Write(const char* buf, int buf_len, <newline> void SSLClientSocket::GetSSLInfo(SSLInfo* ssl_info) { <newline>   SECURITY_STATUS status; <newline>   PCCERT_CONTEXT server_cert = NULL; <newline>-  status = SChannel()->QueryContextAttributes(&ctxt_, <newline>-                                              SECPKG_ATTR_REMOTE_CERT_CONTEXT, <newline>-                                              &server_cert); <newline>+  status = QueryContextAttributes(&ctxt_, <newline>+                                  SECPKG_ATTR_REMOTE_CERT_CONTEXT, <newline>+                                  &server_cert); <newline>   if (status == SEC_E_OK) { <newline>     DCHECK(server_cert); <newline>     ssl_info->cert = X509Certificate::CreateFromHandle(server_cert); <newline>   } <newline>   SecPkgContext_ConnectionInfo connection_info; <newline>-  status = SChannel()->QueryContextAttributes(&ctxt_, <newline>-                                              SECPKG_ATTR_CONNECTION_INFO, <newline>-                                              &connection_info); <newline>+  status = QueryContextAttributes(&ctxt_, <newline>+                                  SECPKG_ATTR_CONNECTION_INFO, <newline>+                                  &connection_info); <newline>   if (status == SEC_E_OK) { <newline>     // TODO(wtc): compute the overall security strength, taking into account <newline>     // dwExchStrength and dwHashStrength.  dwExchStrength needs to be <newline>@@ -338,7 +310,7 @@ int SSLClientSocket::DoConnectComplete(int result) { <newline>   TimeStamp expiry; <newline>   SECURITY_STATUS status; <newline>-  status = SChannel()->AcquireCredentialsHandle( <newline>+  status = AcquireCredentialsHandle( <newline>       NULL,  // Not used <newline>       UNISP_NAME,  // Microsoft Unified Security Protocol Provider <newline>       SECPKG_CRED_OUTBOUND, <newline>@@ -370,7 +342,7 @@ int SSLClientSocket::DoConnectComplete(int result) { <newline>   buffer_desc.pBuffers = &send_buffer_; <newline>   buffer_desc.ulVersion = SECBUFFER_VERSION; <newline>-  status = SChannel()->InitializeSecurityContext( <newline>+  status = InitializeSecurityContext( <newline>       &creds_, <newline>       NULL,  // NULL on the first call <newline>       const_cast<wchar_t*>(ASCIIToWide(hostname_).c_str()), <newline>@@ -454,7 +426,7 @@ int SSLClientSocket::DoHandshakeReadComplete(int result) { <newline>   send_buffer_.BufferType = SECBUFFER_TOKEN; <newline>   send_buffer_.cbBuffer = 0; <newline>-  status = SChannel()->InitializeSecurityContext( <newline>+  status = InitializeSecurityContext( <newline>       &creds_, <newline>       &ctxt_, <newline>       NULL, <newline>@@ -545,8 +517,7 @@ int SSLClientSocket::DoHandshakeWriteComplete(int result) { <newline>   if (bytes_sent_ >= static_cast<int>(send_buffer_.cbBuffer)) { <newline>     bool overflow = (bytes_sent_ > static_cast<int>(send_buffer_.cbBuffer)); <newline>-    SECURITY_STATUS status = <newline>-        SChannel()->FreeContextBuffer(send_buffer_.pvBuffer); <newline>+    SECURITY_STATUS status = FreeContextBuffer(send_buffer_.pvBuffer); <newline>     DCHECK(status == SEC_E_OK); <newline>     memset(&send_buffer_, 0, sizeof(send_buffer_)); <newline>     bytes_sent_ = 0; <newline>@@ -609,7 +580,7 @@ int SSLClientSocket::DoPayloadReadComplete(int result) { <newline>   buffer_desc.ulVersion = SECBUFFER_VERSION; <newline>   SECURITY_STATUS status; <newline>-  status = SChannel()->DecryptMessage(&ctxt_, &buffer_desc, 0, NULL); <newline>+  status = DecryptMessage(&ctxt_, &buffer_desc, 0, NULL); <newline>   if (status == SEC_E_INCOMPLETE_MESSAGE) { <newline>     next_state_ = STATE_PAYLOAD_READ; <newline>@@ -699,8 +670,7 @@ int SSLClientSocket::DoPayloadEncrypt() { <newline>   buffer_desc.pBuffers = buffers; <newline>   buffer_desc.ulVersion = SECBUFFER_VERSION; <newline>-  SECURITY_STATUS status = SChannel()->EncryptMessage( <newline>-      &ctxt_, 0, &buffer_desc, 0); <newline>+  SECURITY_STATUS status = EncryptMessage(&ctxt_, 0, &buffer_desc, 0); <newline>   if (FAILED(status)) <newline>     return ERR_FAILED; <newline>@@ -753,7 +723,7 @@ int SSLClientSocket::DoPayloadWriteComplete(int result) { <newline> } <newline> int SSLClientSocket::DidCompleteHandshake() { <newline>-  SECURITY_STATUS status = SChannel()->QueryContextAttributes( <newline>+  SECURITY_STATUS status = QueryContextAttributes( <newline>       &ctxt_, SECPKG_ATTR_STREAM_SIZES, &stream_sizes_); <newline>   if (status != SEC_E_OK) { <newline>     DLOG(ERROR) << "QueryContextAttributes failed: " << status;
e7409a2530901d7edd22848b44442e36372c133	maruel@google.com <maruel@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 28 20:05:39 2008 +0000	Fix a build issue with Vista. Stop cp.exe from trying to emulate POSIX security on top of NTFS.	1157117			svn://svn.chromium.org/chrome/trunk/src@40 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/build/JSConfig/prebuild.bat b/webkit/build/JSConfig/prebuild.bat <newline>index 8962781..29e68d3 100644 <newline>--- a/webkit/build/JSConfig/prebuild.bat <newline>+++ b/webkit/build/JSConfig/prebuild.bat <newline>@@ -6,6 +6,9 @@ set JSENG=%2 <newline> set CYGWIN_ROOT=%~dp0..\..\..\third_party\cygwin\ <newline> set GNU_ROOT=%~dp0..\..\..\third_party\gnu\files <newline>+:: Fix cp.exe on vista: without this flag, the files that it creates are not accessible. <newline>+set CYGWIN=nontsec <newline>+ <newline> set PATH=%CYGWIN_ROOT%bin;%GNU_ROOT%;%SystemRoot%;%SystemRoot%\system32 <newline> :: Ensure that the cygwin mount points are defined
6a65ff43cd27d2581668375e763d332befe4e6c	maruel@google.com <maruel@google.com@0039d316-1c4b-4281-b951-d872f2087c98>	Mon Jul 28 20:05:39 2008 +0000	Fix a build issue with Vista. Stop cp.exe from trying to emulate POSIX security on top of NTFS.	1157117			svn://svn.chromium.org/chrome/trunk/src@40 0039d316-1c4b-4281-b951-d872f2087c98	diff --git a/webkit/build/JSConfig/prebuild.bat b/webkit/build/JSConfig/prebuild.bat <newline>index 8962781..29e68d3 100644 <newline>--- a/webkit/build/JSConfig/prebuild.bat <newline>+++ b/webkit/build/JSConfig/prebuild.bat <newline>@@ -6,6 +6,9 @@ set JSENG=%2 <newline> set CYGWIN_ROOT=%~dp0..\..\..\third_party\cygwin\ <newline> set GNU_ROOT=%~dp0..\..\..\third_party\gnu\files <newline>+:: Fix cp.exe on vista: without this flag, the files that it creates are not accessible. <newline>+set CYGWIN=nontsec <newline>+ <newline> set PATH=%CYGWIN_ROOT%bin;%GNU_ROOT%;%SystemRoot%;%SystemRoot%\system32 <newline> :: Ensure that the cygwin mount points are defined
